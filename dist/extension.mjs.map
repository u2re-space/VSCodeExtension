{
  "version": 3,
  "sources": ["webpack://MathMLToLaTeX/webpack/universalModuleDefinition", "webpack://MathMLToLaTeX/node_modules/@xmldom/xmldom/lib/conventions.js", "webpack://MathMLToLaTeX/node_modules/@xmldom/xmldom/lib/dom-parser.js", "webpack://MathMLToLaTeX/node_modules/@xmldom/xmldom/lib/dom.js", "webpack://MathMLToLaTeX/node_modules/@xmldom/xmldom/lib/entities.js", "webpack://MathMLToLaTeX/node_modules/@xmldom/xmldom/lib/index.js", "webpack://MathMLToLaTeX/node_modules/@xmldom/xmldom/lib/sax.js", "webpack://MathMLToLaTeX/src/data/errors/index.ts", "webpack://MathMLToLaTeX/src/data/errors/invalid-number-of-children.ts", "webpack://MathMLToLaTeX/src/data/helpers/index.ts", "webpack://MathMLToLaTeX/src/data/helpers/join-with-many-separators.ts", "webpack://MathMLToLaTeX/src/data/helpers/mathml-element-to-latex-converter.ts", "webpack://MathMLToLaTeX/src/data/helpers/normalize-whitespace.ts", "webpack://MathMLToLaTeX/src/data/helpers/wrappers/bracket.ts", "webpack://MathMLToLaTeX/src/data/helpers/wrappers/generic.ts", "webpack://MathMLToLaTeX/src/data/helpers/wrappers/index.ts", "webpack://MathMLToLaTeX/src/data/helpers/wrappers/parenthesis.ts", "webpack://MathMLToLaTeX/src/data/helpers/wrappers/wrapper.ts", "webpack://MathMLToLaTeX/src/data/protocols/mathml-element.ts", "webpack://MathMLToLaTeX/src/data/usecases/mathml-to-latex-convertion/converters/generic-spacing-wrapper.ts", "webpack://MathMLToLaTeX/src/data/usecases/mathml-to-latex-convertion/converters/generic-under-over.ts", "webpack://MathMLToLaTeX/src/data/usecases/mathml-to-latex-convertion/converters/index.ts", "webpack://MathMLToLaTeX/src/data/usecases/mathml-to-latex-convertion/converters/maction.ts", "webpack://MathMLToLaTeX/src/data/usecases/mathml-to-latex-convertion/converters/math.ts", "webpack://MathMLToLaTeX/src/data/usecases/mathml-to-latex-convertion/converters/menclose.ts", "webpack://MathMLToLaTeX/src/data/usecases/mathml-to-latex-convertion/converters/merror.ts", "webpack://MathMLToLaTeX/src/data/usecases/mathml-to-latex-convertion/converters/mfenced.ts", "webpack://MathMLToLaTeX/src/data/usecases/mathml-to-latex-convertion/converters/mfrac.ts", "webpack://MathMLToLaTeX/src/data/usecases/mathml-to-latex-convertion/converters/mi.ts", "webpack://MathMLToLaTeX/src/data/usecases/mathml-to-latex-convertion/converters/mmultiscripts.ts", "webpack://MathMLToLaTeX/src/data/usecases/mathml-to-latex-convertion/converters/mn.ts", "webpack://MathMLToLaTeX/src/data/usecases/mathml-to-latex-convertion/converters/mo.ts", "webpack://MathMLToLaTeX/src/data/usecases/mathml-to-latex-convertion/converters/mphantom.ts", "webpack://MathMLToLaTeX/src/data/usecases/mathml-to-latex-convertion/converters/mroot.ts", "webpack://MathMLToLaTeX/src/data/usecases/mathml-to-latex-convertion/converters/mrow.ts", "webpack://MathMLToLaTeX/src/data/usecases/mathml-to-latex-convertion/converters/mspace.ts", "webpack://MathMLToLaTeX/src/data/usecases/mathml-to-latex-convertion/converters/msqrt.ts", "webpack://MathMLToLaTeX/src/data/usecases/mathml-to-latex-convertion/converters/msub.ts", "webpack://MathMLToLaTeX/src/data/usecases/mathml-to-latex-convertion/converters/msubsup.ts", "webpack://MathMLToLaTeX/src/data/usecases/mathml-to-latex-convertion/converters/msup.ts", "webpack://MathMLToLaTeX/src/data/usecases/mathml-to-latex-convertion/converters/mtable.ts", "webpack://MathMLToLaTeX/src/data/usecases/mathml-to-latex-convertion/converters/mtext.ts", "webpack://MathMLToLaTeX/src/data/usecases/mathml-to-latex-convertion/converters/mtr.ts", "webpack://MathMLToLaTeX/src/data/usecases/mathml-to-latex-convertion/converters/munderover.ts", "webpack://MathMLToLaTeX/src/data/usecases/mathml-to-latex-convertion/converters/void.ts", "webpack://MathMLToLaTeX/src/data/usecases/mathml-to-latex-convertion/mathml-element-to-latex-converter-adapter.ts", "webpack://MathMLToLaTeX/src/infra/usecases/xmldom-to-mathml-elements/error-handler.ts", "webpack://MathMLToLaTeX/src/infra/usecases/xmldom-to-mathml-elements/index.ts", "webpack://MathMLToLaTeX/src/infra/usecases/xmldom-to-mathml-elements/xmldom-elements-to-mathml-elements-adapter.ts", "webpack://MathMLToLaTeX/src/infra/usecases/xmldom-to-mathml-elements/xmldom-to-mathml-element-adapter.ts", "webpack://MathMLToLaTeX/src/main/factories/index.ts", "webpack://MathMLToLaTeX/src/main/factories/make-to-math-elements-converter.ts", "webpack://MathMLToLaTeX/src/main/index.ts", "webpack://MathMLToLaTeX/src/main/mathml-to-latex.ts", "webpack://MathMLToLaTeX/src/syntax/all-math-operators-by-char.ts", "webpack://MathMLToLaTeX/src/syntax/all-math-operators-by-glyph.ts", "webpack://MathMLToLaTeX/src/syntax/all-math-symbols-by-char.ts", "webpack://MathMLToLaTeX/src/syntax/all-math-symbols-by-glyph.ts", "webpack://MathMLToLaTeX/src/syntax/index.ts", "webpack://MathMLToLaTeX/src/syntax/latex-accents.ts", "webpack://MathMLToLaTeX/src/syntax/math-numbers-by-glyph.ts", "webpack://MathMLToLaTeX/src/syntax/utf8-converter.ts", "webpack://MathMLToLaTeX/webpack/bootstrap", "webpack://MathMLToLaTeX/src/index.ts", "../node_modules/@mixmark-io/domino/lib/Event.js", "../node_modules/@mixmark-io/domino/lib/UIEvent.js", "../node_modules/@mixmark-io/domino/lib/MouseEvent.js", "../node_modules/@mixmark-io/domino/lib/DOMException.js", "../node_modules/@mixmark-io/domino/lib/config.js", "../node_modules/@mixmark-io/domino/lib/utils.js", "../node_modules/@mixmark-io/domino/lib/EventTarget.js", "../node_modules/@mixmark-io/domino/lib/LinkedList.js", "../node_modules/@mixmark-io/domino/lib/NodeUtils.js", "../node_modules/@mixmark-io/domino/lib/Node.js", "../node_modules/@mixmark-io/domino/lib/NodeList.es6.js", "../node_modules/@mixmark-io/domino/lib/NodeList.es5.js", "../node_modules/@mixmark-io/domino/lib/NodeList.js", "../node_modules/@mixmark-io/domino/lib/ContainerNode.js", "../node_modules/@mixmark-io/domino/lib/xmlnames.js", "../node_modules/@mixmark-io/domino/lib/attributes.js", "../node_modules/@mixmark-io/domino/lib/FilteredElementList.js", "../node_modules/@mixmark-io/domino/lib/DOMTokenList.js", "../node_modules/@mixmark-io/domino/lib/select.js", "../node_modules/@mixmark-io/domino/lib/ChildNode.js", "../node_modules/@mixmark-io/domino/lib/NonDocumentTypeChildNode.js", "../node_modules/@mixmark-io/domino/lib/NamedNodeMap.js", "../node_modules/@mixmark-io/domino/lib/Element.js", "../node_modules/@mixmark-io/domino/lib/Leaf.js", "../node_modules/@mixmark-io/domino/lib/CharacterData.js", "../node_modules/@mixmark-io/domino/lib/Text.js", "../node_modules/@mixmark-io/domino/lib/Comment.js", "../node_modules/@mixmark-io/domino/lib/DocumentFragment.js", "../node_modules/@mixmark-io/domino/lib/ProcessingInstruction.js", "../node_modules/@mixmark-io/domino/lib/NodeFilter.js", "../node_modules/@mixmark-io/domino/lib/NodeTraversal.js", "../node_modules/@mixmark-io/domino/lib/TreeWalker.js", "../node_modules/@mixmark-io/domino/lib/NodeIterator.js", "../node_modules/@mixmark-io/domino/lib/URL.js", "../node_modules/@mixmark-io/domino/lib/CustomEvent.js", "../node_modules/@mixmark-io/domino/lib/events.js", "../node_modules/@mixmark-io/domino/lib/style_parser.js", "../node_modules/@mixmark-io/domino/lib/CSSStyleDeclaration.js", "../node_modules/@mixmark-io/domino/lib/URLUtils.js", "../node_modules/@mixmark-io/domino/lib/defineElement.js", "../node_modules/@mixmark-io/domino/lib/htmlelts.js", "../node_modules/@mixmark-io/domino/lib/svg.js", "../node_modules/@mixmark-io/domino/lib/MutationConstants.js", "../node_modules/@mixmark-io/domino/lib/Document.js", "../node_modules/@mixmark-io/domino/lib/DocumentType.js", "../node_modules/@mixmark-io/domino/lib/HTMLParser.js", "../node_modules/@mixmark-io/domino/lib/DOMImplementation.js", "../node_modules/@mixmark-io/domino/lib/Location.js", "../node_modules/@mixmark-io/domino/lib/NavigatorID.js", "../node_modules/@mixmark-io/domino/lib/WindowTimers.js", "../node_modules/@mixmark-io/domino/lib/impl.js", "../node_modules/@mixmark-io/domino/lib/Window.js", "../node_modules/@mixmark-io/domino/lib/index.js", "../node_modules/turndown/lib/turndown.cjs.js", "../src/imports/api.ts", "../src/web/webview.mjs", "../src/views/webview.ts", "../src/views/manager.ts", "../src/imports/utils.ts", "../node_modules/temml/dist/temml.mjs", "../src/editor/mathcopy.ts", "../src/imports/str.ts", "../src/editor/markdown.ts", "../node_modules/marked/src/defaults.ts", "../node_modules/marked/src/rules.ts", "../node_modules/marked/src/helpers.ts", "../node_modules/marked/src/Tokenizer.ts", "../node_modules/marked/src/Lexer.ts", "../node_modules/marked/src/Renderer.ts", "../node_modules/marked/src/TextRenderer.ts", "../node_modules/marked/src/Parser.ts", "../node_modules/marked/src/Hooks.ts", "../node_modules/marked/src/Instance.ts", "../node_modules/marked/src/marked.ts", "../node_modules/katex/dist/katex.mjs", "../node_modules/marked-katex-extension/src/index.js", "../src/context/states.ts", "../src/explorer/symlink.ts", "../src/extension.mjs"],
  "sourcesContent": ["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"MathMLToLaTeX\"] = factory();\n\telse\n\t\troot[\"MathMLToLaTeX\"] = factory();\n})(this, () => {\nreturn ", "'use strict'\n\n/**\n * Ponyfill for `Array.prototype.find` which is only available in ES6 runtimes.\n *\n * Works with anything that has a `length` property and index access properties, including NodeList.\n *\n * @template {unknown} T\n * @param {Array<T> | ({length:number, [number]: T})} list\n * @param {function (item: T, index: number, list:Array<T> | ({length:number, [number]: T})):boolean} predicate\n * @param {Partial<Pick<ArrayConstructor['prototype'], 'find'>>?} ac `Array.prototype` by default,\n * \t\t\t\tallows injecting a custom implementation in tests\n * @returns {T | undefined}\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find\n * @see https://tc39.es/ecma262/multipage/indexed-collections.html#sec-array.prototype.find\n */\nfunction find(list, predicate, ac) {\n\tif (ac === undefined) {\n\t\tac = Array.prototype;\n\t}\n\tif (list && typeof ac.find === 'function') {\n\t\treturn ac.find.call(list, predicate);\n\t}\n\tfor (var i = 0; i < list.length; i++) {\n\t\tif (Object.prototype.hasOwnProperty.call(list, i)) {\n\t\t\tvar item = list[i];\n\t\t\tif (predicate.call(undefined, item, i, list)) {\n\t\t\t\treturn item;\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * \"Shallow freezes\" an object to render it immutable.\n * Uses `Object.freeze` if available,\n * otherwise the immutability is only in the type.\n *\n * Is used to create \"enum like\" objects.\n *\n * @template T\n * @param {T} object the object to freeze\n * @param {Pick<ObjectConstructor, 'freeze'> = Object} oc `Object` by default,\n * \t\t\t\tallows to inject custom object constructor for tests\n * @returns {Readonly<T>}\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/freeze\n */\nfunction freeze(object, oc) {\n\tif (oc === undefined) {\n\t\toc = Object\n\t}\n\treturn oc && typeof oc.freeze === 'function' ? oc.freeze(object) : object\n}\n\n/**\n * Since we can not rely on `Object.assign` we provide a simplified version\n * that is sufficient for our needs.\n *\n * @param {Object} target\n * @param {Object | null | undefined} source\n *\n * @returns {Object} target\n * @throws TypeError if target is not an object\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\n * @see https://tc39.es/ecma262/multipage/fundamental-objects.html#sec-object.assign\n */\nfunction assign(target, source) {\n\tif (target === null || typeof target !== 'object') {\n\t\tthrow new TypeError('target is not an object')\n\t}\n\tfor (var key in source) {\n\t\tif (Object.prototype.hasOwnProperty.call(source, key)) {\n\t\t\ttarget[key] = source[key]\n\t\t}\n\t}\n\treturn target\n}\n\n/**\n * All mime types that are allowed as input to `DOMParser.parseFromString`\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMParser/parseFromString#Argument02 MDN\n * @see https://html.spec.whatwg.org/multipage/dynamic-markup-insertion.html#domparsersupportedtype WHATWG HTML Spec\n * @see DOMParser.prototype.parseFromString\n */\nvar MIME_TYPE = freeze({\n\t/**\n\t * `text/html`, the only mime type that triggers treating an XML document as HTML.\n\t *\n\t * @see DOMParser.SupportedType.isHTML\n\t * @see https://www.iana.org/assignments/media-types/text/html IANA MimeType registration\n\t * @see https://en.wikipedia.org/wiki/HTML Wikipedia\n\t * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMParser/parseFromString MDN\n\t * @see https://html.spec.whatwg.org/multipage/dynamic-markup-insertion.html#dom-domparser-parsefromstring WHATWG HTML Spec\n\t */\n\tHTML: 'text/html',\n\n\t/**\n\t * Helper method to check a mime type if it indicates an HTML document\n\t *\n\t * @param {string} [value]\n\t * @returns {boolean}\n\t *\n\t * @see https://www.iana.org/assignments/media-types/text/html IANA MimeType registration\n\t * @see https://en.wikipedia.org/wiki/HTML Wikipedia\n\t * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMParser/parseFromString MDN\n\t * @see https://html.spec.whatwg.org/multipage/dynamic-markup-insertion.html#dom-domparser-parsefromstring \t */\n\tisHTML: function (value) {\n\t\treturn value === MIME_TYPE.HTML\n\t},\n\n\t/**\n\t * `application/xml`, the standard mime type for XML documents.\n\t *\n\t * @see https://www.iana.org/assignments/media-types/application/xml IANA MimeType registration\n\t * @see https://tools.ietf.org/html/rfc7303#section-9.1 RFC 7303\n\t * @see https://en.wikipedia.org/wiki/XML_and_MIME Wikipedia\n\t */\n\tXML_APPLICATION: 'application/xml',\n\n\t/**\n\t * `text/html`, an alias for `application/xml`.\n\t *\n\t * @see https://tools.ietf.org/html/rfc7303#section-9.2 RFC 7303\n\t * @see https://www.iana.org/assignments/media-types/text/xml IANA MimeType registration\n\t * @see https://en.wikipedia.org/wiki/XML_and_MIME Wikipedia\n\t */\n\tXML_TEXT: 'text/xml',\n\n\t/**\n\t * `application/xhtml+xml`, indicates an XML document that has the default HTML namespace,\n\t * but is parsed as an XML document.\n\t *\n\t * @see https://www.iana.org/assignments/media-types/application/xhtml+xml IANA MimeType registration\n\t * @see https://dom.spec.whatwg.org/#dom-domimplementation-createdocument WHATWG DOM Spec\n\t * @see https://en.wikipedia.org/wiki/XHTML Wikipedia\n\t */\n\tXML_XHTML_APPLICATION: 'application/xhtml+xml',\n\n\t/**\n\t * `image/svg+xml`,\n\t *\n\t * @see https://www.iana.org/assignments/media-types/image/svg+xml IANA MimeType registration\n\t * @see https://www.w3.org/TR/SVG11/ W3C SVG 1.1\n\t * @see https://en.wikipedia.org/wiki/Scalable_Vector_Graphics Wikipedia\n\t */\n\tXML_SVG_IMAGE: 'image/svg+xml',\n})\n\n/**\n * Namespaces that are used in this code base.\n *\n * @see http://www.w3.org/TR/REC-xml-names\n */\nvar NAMESPACE = freeze({\n\t/**\n\t * The XHTML namespace.\n\t *\n\t * @see http://www.w3.org/1999/xhtml\n\t */\n\tHTML: 'http://www.w3.org/1999/xhtml',\n\n\t/**\n\t * Checks if `uri` equals `NAMESPACE.HTML`.\n\t *\n\t * @param {string} [uri]\n\t *\n\t * @see NAMESPACE.HTML\n\t */\n\tisHTML: function (uri) {\n\t\treturn uri === NAMESPACE.HTML\n\t},\n\n\t/**\n\t * The SVG namespace.\n\t *\n\t * @see http://www.w3.org/2000/svg\n\t */\n\tSVG: 'http://www.w3.org/2000/svg',\n\n\t/**\n\t * The `xml:` namespace.\n\t *\n\t * @see http://www.w3.org/XML/1998/namespace\n\t */\n\tXML: 'http://www.w3.org/XML/1998/namespace',\n\n\t/**\n\t * The `xmlns:` namespace\n\t *\n\t * @see https://www.w3.org/2000/xmlns/\n\t */\n\tXMLNS: 'http://www.w3.org/2000/xmlns/',\n})\n\nexports.assign = assign;\nexports.find = find;\nexports.freeze = freeze;\nexports.MIME_TYPE = MIME_TYPE;\nexports.NAMESPACE = NAMESPACE;\n", "var conventions = require(\"./conventions\");\nvar dom = require('./dom')\nvar entities = require('./entities');\nvar sax = require('./sax');\n\nvar DOMImplementation = dom.DOMImplementation;\n\nvar NAMESPACE = conventions.NAMESPACE;\n\nvar ParseError = sax.ParseError;\nvar XMLReader = sax.XMLReader;\n\n/**\n * Normalizes line ending according to https://www.w3.org/TR/xml11/#sec-line-ends:\n *\n * > XML parsed entities are often stored in computer files which,\n * > for editing convenience, are organized into lines.\n * > These lines are typically separated by some combination\n * > of the characters CARRIAGE RETURN (#xD) and LINE FEED (#xA).\n * >\n * > To simplify the tasks of applications, the XML processor must behave\n * > as if it normalized all line breaks in external parsed entities (including the document entity)\n * > on input, before parsing, by translating all of the following to a single #xA character:\n * >\n * > 1. the two-character sequence #xD #xA\n * > 2. the two-character sequence #xD #x85\n * > 3. the single character #x85\n * > 4. the single character #x2028\n * > 5. any #xD character that is not immediately followed by #xA or #x85.\n *\n * @param {string} input\n * @returns {string}\n */\nfunction normalizeLineEndings(input) {\n\treturn input\n\t\t.replace(/\\r[\\n\\u0085]/g, '\\n')\n\t\t.replace(/[\\r\\u0085\\u2028]/g, '\\n')\n}\n\n/**\n * @typedef Locator\n * @property {number} [columnNumber]\n * @property {number} [lineNumber]\n */\n\n/**\n * @typedef DOMParserOptions\n * @property {DOMHandler} [domBuilder]\n * @property {Function} [errorHandler]\n * @property {(string) => string} [normalizeLineEndings] used to replace line endings before parsing\n * \t\t\t\t\t\tdefaults to `normalizeLineEndings`\n * @property {Locator} [locator]\n * @property {Record<string, string>} [xmlns]\n *\n * @see normalizeLineEndings\n */\n\n/**\n * The DOMParser interface provides the ability to parse XML or HTML source code\n * from a string into a DOM `Document`.\n *\n * _xmldom is different from the spec in that it allows an `options` parameter,\n * to override the default behavior._\n *\n * @param {DOMParserOptions} [options]\n * @constructor\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMParser\n * @see https://html.spec.whatwg.org/multipage/dynamic-markup-insertion.html#dom-parsing-and-serialization\n */\nfunction DOMParser(options){\n\tthis.options = options ||{locator:{}};\n}\n\nDOMParser.prototype.parseFromString = function(source,mimeType){\n\tvar options = this.options;\n\tvar sax =  new XMLReader();\n\tvar domBuilder = options.domBuilder || new DOMHandler();//contentHandler and LexicalHandler\n\tvar errorHandler = options.errorHandler;\n\tvar locator = options.locator;\n\tvar defaultNSMap = options.xmlns||{};\n\tvar isHTML = /\\/x?html?$/.test(mimeType);//mimeType.toLowerCase().indexOf('html') > -1;\n  \tvar entityMap = isHTML ? entities.HTML_ENTITIES : entities.XML_ENTITIES;\n\tif(locator){\n\t\tdomBuilder.setDocumentLocator(locator)\n\t}\n\n\tsax.errorHandler = buildErrorHandler(errorHandler,domBuilder,locator);\n\tsax.domBuilder = options.domBuilder || domBuilder;\n\tif(isHTML){\n\t\tdefaultNSMap[''] = NAMESPACE.HTML;\n\t}\n\tdefaultNSMap.xml = defaultNSMap.xml || NAMESPACE.XML;\n\tvar normalize = options.normalizeLineEndings || normalizeLineEndings;\n\tif (source && typeof source === 'string') {\n\t\tsax.parse(\n\t\t\tnormalize(source),\n\t\t\tdefaultNSMap,\n\t\t\tentityMap\n\t\t)\n\t} else {\n\t\tsax.errorHandler.error('invalid doc source')\n\t}\n\treturn domBuilder.doc;\n}\nfunction buildErrorHandler(errorImpl,domBuilder,locator){\n\tif(!errorImpl){\n\t\tif(domBuilder instanceof DOMHandler){\n\t\t\treturn domBuilder;\n\t\t}\n\t\terrorImpl = domBuilder ;\n\t}\n\tvar errorHandler = {}\n\tvar isCallback = errorImpl instanceof Function;\n\tlocator = locator||{}\n\tfunction build(key){\n\t\tvar fn = errorImpl[key];\n\t\tif(!fn && isCallback){\n\t\t\tfn = errorImpl.length == 2?function(msg){errorImpl(key,msg)}:errorImpl;\n\t\t}\n\t\terrorHandler[key] = fn && function(msg){\n\t\t\tfn('[xmldom '+key+']\\t'+msg+_locator(locator));\n\t\t}||function(){};\n\t}\n\tbuild('warning');\n\tbuild('error');\n\tbuild('fatalError');\n\treturn errorHandler;\n}\n\n//console.log('#\\n\\n\\n\\n\\n\\n\\n####')\n/**\n * +ContentHandler+ErrorHandler\n * +LexicalHandler+EntityResolver2\n * -DeclHandler-DTDHandler\n *\n * DefaultHandler:EntityResolver, DTDHandler, ContentHandler, ErrorHandler\n * DefaultHandler2:DefaultHandler,LexicalHandler, DeclHandler, EntityResolver2\n * @link http://www.saxproject.org/apidoc/org/xml/sax/helpers/DefaultHandler.html\n */\nfunction DOMHandler() {\n    this.cdata = false;\n}\nfunction position(locator,node){\n\tnode.lineNumber = locator.lineNumber;\n\tnode.columnNumber = locator.columnNumber;\n}\n/**\n * @see org.xml.sax.ContentHandler#startDocument\n * @link http://www.saxproject.org/apidoc/org/xml/sax/ContentHandler.html\n */\nDOMHandler.prototype = {\n\tstartDocument : function() {\n    \tthis.doc = new DOMImplementation().createDocument(null, null, null);\n    \tif (this.locator) {\n        \tthis.doc.documentURI = this.locator.systemId;\n    \t}\n\t},\n\tstartElement:function(namespaceURI, localName, qName, attrs) {\n\t\tvar doc = this.doc;\n\t    var el = doc.createElementNS(namespaceURI, qName||localName);\n\t    var len = attrs.length;\n\t    appendElement(this, el);\n\t    this.currentElement = el;\n\n\t\tthis.locator && position(this.locator,el)\n\t    for (var i = 0 ; i < len; i++) {\n\t        var namespaceURI = attrs.getURI(i);\n\t        var value = attrs.getValue(i);\n\t        var qName = attrs.getQName(i);\n\t\t\tvar attr = doc.createAttributeNS(namespaceURI, qName);\n\t\t\tthis.locator &&position(attrs.getLocator(i),attr);\n\t\t\tattr.value = attr.nodeValue = value;\n\t\t\tel.setAttributeNode(attr)\n\t    }\n\t},\n\tendElement:function(namespaceURI, localName, qName) {\n\t\tvar current = this.currentElement\n\t\tvar tagName = current.tagName;\n\t\tthis.currentElement = current.parentNode;\n\t},\n\tstartPrefixMapping:function(prefix, uri) {\n\t},\n\tendPrefixMapping:function(prefix) {\n\t},\n\tprocessingInstruction:function(target, data) {\n\t    var ins = this.doc.createProcessingInstruction(target, data);\n\t    this.locator && position(this.locator,ins)\n\t    appendElement(this, ins);\n\t},\n\tignorableWhitespace:function(ch, start, length) {\n\t},\n\tcharacters:function(chars, start, length) {\n\t\tchars = _toString.apply(this,arguments)\n\t\t//console.log(chars)\n\t\tif(chars){\n\t\t\tif (this.cdata) {\n\t\t\t\tvar charNode = this.doc.createCDATASection(chars);\n\t\t\t} else {\n\t\t\t\tvar charNode = this.doc.createTextNode(chars);\n\t\t\t}\n\t\t\tif(this.currentElement){\n\t\t\t\tthis.currentElement.appendChild(charNode);\n\t\t\t}else if(/^\\s*$/.test(chars)){\n\t\t\t\tthis.doc.appendChild(charNode);\n\t\t\t\t//process xml\n\t\t\t}\n\t\t\tthis.locator && position(this.locator,charNode)\n\t\t}\n\t},\n\tskippedEntity:function(name) {\n\t},\n\tendDocument:function() {\n\t\tthis.doc.normalize();\n\t},\n\tsetDocumentLocator:function (locator) {\n\t    if(this.locator = locator){// && !('lineNumber' in locator)){\n\t    \tlocator.lineNumber = 0;\n\t    }\n\t},\n\t//LexicalHandler\n\tcomment:function(chars, start, length) {\n\t\tchars = _toString.apply(this,arguments)\n\t    var comm = this.doc.createComment(chars);\n\t    this.locator && position(this.locator,comm)\n\t    appendElement(this, comm);\n\t},\n\n\tstartCDATA:function() {\n\t    //used in characters() methods\n\t    this.cdata = true;\n\t},\n\tendCDATA:function() {\n\t    this.cdata = false;\n\t},\n\n\tstartDTD:function(name, publicId, systemId) {\n\t\tvar impl = this.doc.implementation;\n\t    if (impl && impl.createDocumentType) {\n\t        var dt = impl.createDocumentType(name, publicId, systemId);\n\t        this.locator && position(this.locator,dt)\n\t        appendElement(this, dt);\n\t\t\t\t\tthis.doc.doctype = dt;\n\t    }\n\t},\n\t/**\n\t * @see org.xml.sax.ErrorHandler\n\t * @link http://www.saxproject.org/apidoc/org/xml/sax/ErrorHandler.html\n\t */\n\twarning:function(error) {\n\t\tconsole.warn('[xmldom warning]\\t'+error,_locator(this.locator));\n\t},\n\terror:function(error) {\n\t\tconsole.error('[xmldom error]\\t'+error,_locator(this.locator));\n\t},\n\tfatalError:function(error) {\n\t\tthrow new ParseError(error, this.locator);\n\t}\n}\nfunction _locator(l){\n\tif(l){\n\t\treturn '\\n@'+(l.systemId ||'')+'#[line:'+l.lineNumber+',col:'+l.columnNumber+']'\n\t}\n}\nfunction _toString(chars,start,length){\n\tif(typeof chars == 'string'){\n\t\treturn chars.substr(start,length)\n\t}else{//java sax connect width xmldom on rhino(what about: \"? && !(chars instanceof String)\")\n\t\tif(chars.length >= start+length || start){\n\t\t\treturn new java.lang.String(chars,start,length)+'';\n\t\t}\n\t\treturn chars;\n\t}\n}\n\n/*\n * @link http://www.saxproject.org/apidoc/org/xml/sax/ext/LexicalHandler.html\n * used method of org.xml.sax.ext.LexicalHandler:\n *  #comment(chars, start, length)\n *  #startCDATA()\n *  #endCDATA()\n *  #startDTD(name, publicId, systemId)\n *\n *\n * IGNORED method of org.xml.sax.ext.LexicalHandler:\n *  #endDTD()\n *  #startEntity(name)\n *  #endEntity(name)\n *\n *\n * @link http://www.saxproject.org/apidoc/org/xml/sax/ext/DeclHandler.html\n * IGNORED method of org.xml.sax.ext.DeclHandler\n * \t#attributeDecl(eName, aName, type, mode, value)\n *  #elementDecl(name, model)\n *  #externalEntityDecl(name, publicId, systemId)\n *  #internalEntityDecl(name, value)\n * @link http://www.saxproject.org/apidoc/org/xml/sax/ext/EntityResolver2.html\n * IGNORED method of org.xml.sax.EntityResolver2\n *  #resolveEntity(String name,String publicId,String baseURI,String systemId)\n *  #resolveEntity(publicId, systemId)\n *  #getExternalSubset(name, baseURI)\n * @link http://www.saxproject.org/apidoc/org/xml/sax/DTDHandler.html\n * IGNORED method of org.xml.sax.DTDHandler\n *  #notationDecl(name, publicId, systemId) {};\n *  #unparsedEntityDecl(name, publicId, systemId, notationName) {};\n */\n\"endDTD,startEntity,endEntity,attributeDecl,elementDecl,externalEntityDecl,internalEntityDecl,resolveEntity,getExternalSubset,notationDecl,unparsedEntityDecl\".replace(/\\w+/g,function(key){\n\tDOMHandler.prototype[key] = function(){return null}\n})\n\n/* Private static helpers treated below as private instance methods, so don't need to add these to the public API; we might use a Relator to also get rid of non-standard public properties */\nfunction appendElement (hander,node) {\n    if (!hander.currentElement) {\n        hander.doc.appendChild(node);\n    } else {\n        hander.currentElement.appendChild(node);\n    }\n}//appendChild and setAttributeNS are preformance key\n\nexports.__DOMHandler = DOMHandler;\nexports.normalizeLineEndings = normalizeLineEndings;\nexports.DOMParser = DOMParser;\n", "var conventions = require(\"./conventions\");\n\nvar find = conventions.find;\nvar NAMESPACE = conventions.NAMESPACE;\n\n/**\n * A prerequisite for `[].filter`, to drop elements that are empty\n * @param {string} input\n * @returns {boolean}\n */\nfunction notEmptyString (input) {\n\treturn input !== ''\n}\n/**\n * @see https://infra.spec.whatwg.org/#split-on-ascii-whitespace\n * @see https://infra.spec.whatwg.org/#ascii-whitespace\n *\n * @param {string} input\n * @returns {string[]} (can be empty)\n */\nfunction splitOnASCIIWhitespace(input) {\n\t// U+0009 TAB, U+000A LF, U+000C FF, U+000D CR, U+0020 SPACE\n\treturn input ? input.split(/[\\t\\n\\f\\r ]+/).filter(notEmptyString) : []\n}\n\n/**\n * Adds element as a key to current if it is not already present.\n *\n * @param {Record<string, boolean | undefined>} current\n * @param {string} element\n * @returns {Record<string, boolean | undefined>}\n */\nfunction orderedSetReducer (current, element) {\n\tif (!current.hasOwnProperty(element)) {\n\t\tcurrent[element] = true;\n\t}\n\treturn current;\n}\n\n/**\n * @see https://infra.spec.whatwg.org/#ordered-set\n * @param {string} input\n * @returns {string[]}\n */\nfunction toOrderedSet(input) {\n\tif (!input) return [];\n\tvar list = splitOnASCIIWhitespace(input);\n\treturn Object.keys(list.reduce(orderedSetReducer, {}))\n}\n\n/**\n * Uses `list.indexOf` to implement something like `Array.prototype.includes`,\n * which we can not rely on being available.\n *\n * @param {any[]} list\n * @returns {function(any): boolean}\n */\nfunction arrayIncludes (list) {\n\treturn function(element) {\n\t\treturn list && list.indexOf(element) !== -1;\n\t}\n}\n\nfunction copy(src,dest){\n\tfor(var p in src){\n\t\tif (Object.prototype.hasOwnProperty.call(src, p)) {\n\t\t\tdest[p] = src[p];\n\t\t}\n\t}\n}\n\n/**\n^\\w+\\.prototype\\.([_\\w]+)\\s*=\\s*((?:.*\\{\\s*?[\\r\\n][\\s\\S]*?^})|\\S.*?(?=[;\\r\\n]));?\n^\\w+\\.prototype\\.([_\\w]+)\\s*=\\s*(\\S.*?(?=[;\\r\\n]));?\n */\nfunction _extends(Class,Super){\n\tvar pt = Class.prototype;\n\tif(!(pt instanceof Super)){\n\t\tfunction t(){};\n\t\tt.prototype = Super.prototype;\n\t\tt = new t();\n\t\tcopy(pt,t);\n\t\tClass.prototype = pt = t;\n\t}\n\tif(pt.constructor != Class){\n\t\tif(typeof Class != 'function'){\n\t\t\tconsole.error(\"unknown Class:\"+Class)\n\t\t}\n\t\tpt.constructor = Class\n\t}\n}\n\n// Node Types\nvar NodeType = {}\nvar ELEMENT_NODE                = NodeType.ELEMENT_NODE                = 1;\nvar ATTRIBUTE_NODE              = NodeType.ATTRIBUTE_NODE              = 2;\nvar TEXT_NODE                   = NodeType.TEXT_NODE                   = 3;\nvar CDATA_SECTION_NODE          = NodeType.CDATA_SECTION_NODE          = 4;\nvar ENTITY_REFERENCE_NODE       = NodeType.ENTITY_REFERENCE_NODE       = 5;\nvar ENTITY_NODE                 = NodeType.ENTITY_NODE                 = 6;\nvar PROCESSING_INSTRUCTION_NODE = NodeType.PROCESSING_INSTRUCTION_NODE = 7;\nvar COMMENT_NODE                = NodeType.COMMENT_NODE                = 8;\nvar DOCUMENT_NODE               = NodeType.DOCUMENT_NODE               = 9;\nvar DOCUMENT_TYPE_NODE          = NodeType.DOCUMENT_TYPE_NODE          = 10;\nvar DOCUMENT_FRAGMENT_NODE      = NodeType.DOCUMENT_FRAGMENT_NODE      = 11;\nvar NOTATION_NODE               = NodeType.NOTATION_NODE               = 12;\n\n// ExceptionCode\nvar ExceptionCode = {}\nvar ExceptionMessage = {};\nvar INDEX_SIZE_ERR              = ExceptionCode.INDEX_SIZE_ERR              = ((ExceptionMessage[1]=\"Index size error\"),1);\nvar DOMSTRING_SIZE_ERR          = ExceptionCode.DOMSTRING_SIZE_ERR          = ((ExceptionMessage[2]=\"DOMString size error\"),2);\nvar HIERARCHY_REQUEST_ERR       = ExceptionCode.HIERARCHY_REQUEST_ERR       = ((ExceptionMessage[3]=\"Hierarchy request error\"),3);\nvar WRONG_DOCUMENT_ERR          = ExceptionCode.WRONG_DOCUMENT_ERR          = ((ExceptionMessage[4]=\"Wrong document\"),4);\nvar INVALID_CHARACTER_ERR       = ExceptionCode.INVALID_CHARACTER_ERR       = ((ExceptionMessage[5]=\"Invalid character\"),5);\nvar NO_DATA_ALLOWED_ERR         = ExceptionCode.NO_DATA_ALLOWED_ERR         = ((ExceptionMessage[6]=\"No data allowed\"),6);\nvar NO_MODIFICATION_ALLOWED_ERR = ExceptionCode.NO_MODIFICATION_ALLOWED_ERR = ((ExceptionMessage[7]=\"No modification allowed\"),7);\nvar NOT_FOUND_ERR               = ExceptionCode.NOT_FOUND_ERR               = ((ExceptionMessage[8]=\"Not found\"),8);\nvar NOT_SUPPORTED_ERR           = ExceptionCode.NOT_SUPPORTED_ERR           = ((ExceptionMessage[9]=\"Not supported\"),9);\nvar INUSE_ATTRIBUTE_ERR         = ExceptionCode.INUSE_ATTRIBUTE_ERR         = ((ExceptionMessage[10]=\"Attribute in use\"),10);\n//level2\nvar INVALID_STATE_ERR        \t= ExceptionCode.INVALID_STATE_ERR        \t= ((ExceptionMessage[11]=\"Invalid state\"),11);\nvar SYNTAX_ERR               \t= ExceptionCode.SYNTAX_ERR               \t= ((ExceptionMessage[12]=\"Syntax error\"),12);\nvar INVALID_MODIFICATION_ERR \t= ExceptionCode.INVALID_MODIFICATION_ERR \t= ((ExceptionMessage[13]=\"Invalid modification\"),13);\nvar NAMESPACE_ERR            \t= ExceptionCode.NAMESPACE_ERR           \t= ((ExceptionMessage[14]=\"Invalid namespace\"),14);\nvar INVALID_ACCESS_ERR       \t= ExceptionCode.INVALID_ACCESS_ERR      \t= ((ExceptionMessage[15]=\"Invalid access\"),15);\n\n/**\n * DOM Level 2\n * Object DOMException\n * @see http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html\n * @see http://www.w3.org/TR/REC-DOM-Level-1/ecma-script-language-binding.html\n */\nfunction DOMException(code, message) {\n\tif(message instanceof Error){\n\t\tvar error = message;\n\t}else{\n\t\terror = this;\n\t\tError.call(this, ExceptionMessage[code]);\n\t\tthis.message = ExceptionMessage[code];\n\t\tif(Error.captureStackTrace) Error.captureStackTrace(this, DOMException);\n\t}\n\terror.code = code;\n\tif(message) this.message = this.message + \": \" + message;\n\treturn error;\n};\nDOMException.prototype = Error.prototype;\ncopy(ExceptionCode,DOMException)\n\n/**\n * @see http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/core.html#ID-536297177\n * The NodeList interface provides the abstraction of an ordered collection of nodes, without defining or constraining how this collection is implemented. NodeList objects in the DOM are live.\n * The items in the NodeList are accessible via an integral index, starting from 0.\n */\nfunction NodeList() {\n};\nNodeList.prototype = {\n\t/**\n\t * The number of nodes in the list. The range of valid child node indices is 0 to length-1 inclusive.\n\t * @standard level1\n\t */\n\tlength:0,\n\t/**\n\t * Returns the indexth item in the collection. If index is greater than or equal to the number of nodes in the list, this returns null.\n\t * @standard level1\n\t * @param index  unsigned long\n\t *   Index into the collection.\n\t * @return Node\n\t * \tThe node at the indexth position in the NodeList, or null if that is not a valid index.\n\t */\n\titem: function(index) {\n\t\treturn index >= 0 && index < this.length ? this[index] : null;\n\t},\n\ttoString:function(isHTML,nodeFilter){\n\t\tfor(var buf = [], i = 0;i<this.length;i++){\n\t\t\tserializeToString(this[i],buf,isHTML,nodeFilter);\n\t\t}\n\t\treturn buf.join('');\n\t},\n\t/**\n\t * @private\n\t * @param {function (Node):boolean} predicate\n\t * @returns {Node[]}\n\t */\n\tfilter: function (predicate) {\n\t\treturn Array.prototype.filter.call(this, predicate);\n\t},\n\t/**\n\t * @private\n\t * @param {Node} item\n\t * @returns {number}\n\t */\n\tindexOf: function (item) {\n\t\treturn Array.prototype.indexOf.call(this, item);\n\t},\n};\n\nfunction LiveNodeList(node,refresh){\n\tthis._node = node;\n\tthis._refresh = refresh\n\t_updateLiveList(this);\n}\nfunction _updateLiveList(list){\n\tvar inc = list._node._inc || list._node.ownerDocument._inc;\n\tif (list._inc !== inc) {\n\t\tvar ls = list._refresh(list._node);\n\t\t__set__(list,'length',ls.length);\n\t\tif (!list.$$length || ls.length < list.$$length) {\n\t\t\tfor (var i = ls.length; i in list; i++) {\n\t\t\t\tif (Object.prototype.hasOwnProperty.call(list, i)) {\n\t\t\t\t\tdelete list[i];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tcopy(ls,list);\n\t\tlist._inc = inc;\n\t}\n}\nLiveNodeList.prototype.item = function(i){\n\t_updateLiveList(this);\n\treturn this[i] || null;\n}\n\n_extends(LiveNodeList,NodeList);\n\n/**\n * Objects implementing the NamedNodeMap interface are used\n * to represent collections of nodes that can be accessed by name.\n * Note that NamedNodeMap does not inherit from NodeList;\n * NamedNodeMaps are not maintained in any particular order.\n * Objects contained in an object implementing NamedNodeMap may also be accessed by an ordinal index,\n * but this is simply to allow convenient enumeration of the contents of a NamedNodeMap,\n * and does not imply that the DOM specifies an order to these Nodes.\n * NamedNodeMap objects in the DOM are live.\n * used for attributes or DocumentType entities\n */\nfunction NamedNodeMap() {\n};\n\nfunction _findNodeIndex(list,node){\n\tvar i = list.length;\n\twhile(i--){\n\t\tif(list[i] === node){return i}\n\t}\n}\n\nfunction _addNamedNode(el,list,newAttr,oldAttr){\n\tif(oldAttr){\n\t\tlist[_findNodeIndex(list,oldAttr)] = newAttr;\n\t}else{\n\t\tlist[list.length++] = newAttr;\n\t}\n\tif(el){\n\t\tnewAttr.ownerElement = el;\n\t\tvar doc = el.ownerDocument;\n\t\tif(doc){\n\t\t\toldAttr && _onRemoveAttribute(doc,el,oldAttr);\n\t\t\t_onAddAttribute(doc,el,newAttr);\n\t\t}\n\t}\n}\nfunction _removeNamedNode(el,list,attr){\n\t//console.log('remove attr:'+attr)\n\tvar i = _findNodeIndex(list,attr);\n\tif(i>=0){\n\t\tvar lastIndex = list.length-1\n\t\twhile(i<lastIndex){\n\t\t\tlist[i] = list[++i]\n\t\t}\n\t\tlist.length = lastIndex;\n\t\tif(el){\n\t\t\tvar doc = el.ownerDocument;\n\t\t\tif(doc){\n\t\t\t\t_onRemoveAttribute(doc,el,attr);\n\t\t\t\tattr.ownerElement = null;\n\t\t\t}\n\t\t}\n\t}else{\n\t\tthrow new DOMException(NOT_FOUND_ERR,new Error(el.tagName+'@'+attr))\n\t}\n}\nNamedNodeMap.prototype = {\n\tlength:0,\n\titem:NodeList.prototype.item,\n\tgetNamedItem: function(key) {\n//\t\tif(key.indexOf(':')>0 || key == 'xmlns'){\n//\t\t\treturn null;\n//\t\t}\n\t\t//console.log()\n\t\tvar i = this.length;\n\t\twhile(i--){\n\t\t\tvar attr = this[i];\n\t\t\t//console.log(attr.nodeName,key)\n\t\t\tif(attr.nodeName == key){\n\t\t\t\treturn attr;\n\t\t\t}\n\t\t}\n\t},\n\tsetNamedItem: function(attr) {\n\t\tvar el = attr.ownerElement;\n\t\tif(el && el!=this._ownerElement){\n\t\t\tthrow new DOMException(INUSE_ATTRIBUTE_ERR);\n\t\t}\n\t\tvar oldAttr = this.getNamedItem(attr.nodeName);\n\t\t_addNamedNode(this._ownerElement,this,attr,oldAttr);\n\t\treturn oldAttr;\n\t},\n\t/* returns Node */\n\tsetNamedItemNS: function(attr) {// raises: WRONG_DOCUMENT_ERR,NO_MODIFICATION_ALLOWED_ERR,INUSE_ATTRIBUTE_ERR\n\t\tvar el = attr.ownerElement, oldAttr;\n\t\tif(el && el!=this._ownerElement){\n\t\t\tthrow new DOMException(INUSE_ATTRIBUTE_ERR);\n\t\t}\n\t\toldAttr = this.getNamedItemNS(attr.namespaceURI,attr.localName);\n\t\t_addNamedNode(this._ownerElement,this,attr,oldAttr);\n\t\treturn oldAttr;\n\t},\n\n\t/* returns Node */\n\tremoveNamedItem: function(key) {\n\t\tvar attr = this.getNamedItem(key);\n\t\t_removeNamedNode(this._ownerElement,this,attr);\n\t\treturn attr;\n\n\n\t},// raises: NOT_FOUND_ERR,NO_MODIFICATION_ALLOWED_ERR\n\n\t//for level2\n\tremoveNamedItemNS:function(namespaceURI,localName){\n\t\tvar attr = this.getNamedItemNS(namespaceURI,localName);\n\t\t_removeNamedNode(this._ownerElement,this,attr);\n\t\treturn attr;\n\t},\n\tgetNamedItemNS: function(namespaceURI, localName) {\n\t\tvar i = this.length;\n\t\twhile(i--){\n\t\t\tvar node = this[i];\n\t\t\tif(node.localName == localName && node.namespaceURI == namespaceURI){\n\t\t\t\treturn node;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n};\n\n/**\n * The DOMImplementation interface represents an object providing methods\n * which are not dependent on any particular document.\n * Such an object is returned by the `Document.implementation` property.\n *\n * __The individual methods describe the differences compared to the specs.__\n *\n * @constructor\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMImplementation MDN\n * @see https://www.w3.org/TR/REC-DOM-Level-1/level-one-core.html#ID-102161490 DOM Level 1 Core (Initial)\n * @see https://www.w3.org/TR/DOM-Level-2-Core/core.html#ID-102161490 DOM Level 2 Core\n * @see https://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-102161490 DOM Level 3 Core\n * @see https://dom.spec.whatwg.org/#domimplementation DOM Living Standard\n */\nfunction DOMImplementation() {\n}\n\nDOMImplementation.prototype = {\n\t/**\n\t * The DOMImplementation.hasFeature() method returns a Boolean flag indicating if a given feature is supported.\n\t * The different implementations fairly diverged in what kind of features were reported.\n\t * The latest version of the spec settled to force this method to always return true, where the functionality was accurate and in use.\n\t *\n\t * @deprecated It is deprecated and modern browsers return true in all cases.\n\t *\n\t * @param {string} feature\n\t * @param {string} [version]\n\t * @returns {boolean} always true\n\t *\n\t * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMImplementation/hasFeature MDN\n\t * @see https://www.w3.org/TR/REC-DOM-Level-1/level-one-core.html#ID-5CED94D7 DOM Level 1 Core\n\t * @see https://dom.spec.whatwg.org/#dom-domimplementation-hasfeature DOM Living Standard\n\t */\n\thasFeature: function(feature, version) {\n\t\t\treturn true;\n\t},\n\t/**\n\t * Creates an XML Document object of the specified type with its document element.\n\t *\n\t * __It behaves slightly different from the description in the living standard__:\n\t * - There is no interface/class `XMLDocument`, it returns a `Document` instance.\n\t * - `contentType`, `encoding`, `mode`, `origin`, `url` fields are currently not declared.\n\t * - this implementation is not validating names or qualified names\n\t *   (when parsing XML strings, the SAX parser takes care of that)\n\t *\n\t * @param {string|null} namespaceURI\n\t * @param {string} qualifiedName\n\t * @param {DocumentType=null} doctype\n\t * @returns {Document}\n\t *\n\t * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMImplementation/createDocument MDN\n\t * @see https://www.w3.org/TR/DOM-Level-2-Core/core.html#Level-2-Core-DOM-createDocument DOM Level 2 Core (initial)\n\t * @see https://dom.spec.whatwg.org/#dom-domimplementation-createdocument  DOM Level 2 Core\n\t *\n\t * @see https://dom.spec.whatwg.org/#validate-and-extract DOM: Validate and extract\n\t * @see https://www.w3.org/TR/xml/#NT-NameStartChar XML Spec: Names\n\t * @see https://www.w3.org/TR/xml-names/#ns-qualnames XML Namespaces: Qualified names\n\t */\n\tcreateDocument: function(namespaceURI,  qualifiedName, doctype){\n\t\tvar doc = new Document();\n\t\tdoc.implementation = this;\n\t\tdoc.childNodes = new NodeList();\n\t\tdoc.doctype = doctype || null;\n\t\tif (doctype){\n\t\t\tdoc.appendChild(doctype);\n\t\t}\n\t\tif (qualifiedName){\n\t\t\tvar root = doc.createElementNS(namespaceURI, qualifiedName);\n\t\t\tdoc.appendChild(root);\n\t\t}\n\t\treturn doc;\n\t},\n\t/**\n\t * Returns a doctype, with the given `qualifiedName`, `publicId`, and `systemId`.\n\t *\n\t * __This behavior is slightly different from the in the specs__:\n\t * - this implementation is not validating names or qualified names\n\t *   (when parsing XML strings, the SAX parser takes care of that)\n\t *\n\t * @param {string} qualifiedName\n\t * @param {string} [publicId]\n\t * @param {string} [systemId]\n\t * @returns {DocumentType} which can either be used with `DOMImplementation.createDocument` upon document creation\n\t * \t\t\t\t  or can be put into the document via methods like `Node.insertBefore()` or `Node.replaceChild()`\n\t *\n\t * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMImplementation/createDocumentType MDN\n\t * @see https://www.w3.org/TR/DOM-Level-2-Core/core.html#Level-2-Core-DOM-createDocType DOM Level 2 Core\n\t * @see https://dom.spec.whatwg.org/#dom-domimplementation-createdocumenttype DOM Living Standard\n\t *\n\t * @see https://dom.spec.whatwg.org/#validate-and-extract DOM: Validate and extract\n\t * @see https://www.w3.org/TR/xml/#NT-NameStartChar XML Spec: Names\n\t * @see https://www.w3.org/TR/xml-names/#ns-qualnames XML Namespaces: Qualified names\n\t */\n\tcreateDocumentType: function(qualifiedName, publicId, systemId){\n\t\tvar node = new DocumentType();\n\t\tnode.name = qualifiedName;\n\t\tnode.nodeName = qualifiedName;\n\t\tnode.publicId = publicId || '';\n\t\tnode.systemId = systemId || '';\n\n\t\treturn node;\n\t}\n};\n\n\n/**\n * @see http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/core.html#ID-1950641247\n */\n\nfunction Node() {\n};\n\nNode.prototype = {\n\tfirstChild : null,\n\tlastChild : null,\n\tpreviousSibling : null,\n\tnextSibling : null,\n\tattributes : null,\n\tparentNode : null,\n\tchildNodes : null,\n\townerDocument : null,\n\tnodeValue : null,\n\tnamespaceURI : null,\n\tprefix : null,\n\tlocalName : null,\n\t// Modified in DOM Level 2:\n\tinsertBefore:function(newChild, refChild){//raises\n\t\treturn _insertBefore(this,newChild,refChild);\n\t},\n\treplaceChild:function(newChild, oldChild){//raises\n\t\t_insertBefore(this, newChild,oldChild, assertPreReplacementValidityInDocument);\n\t\tif(oldChild){\n\t\t\tthis.removeChild(oldChild);\n\t\t}\n\t},\n\tremoveChild:function(oldChild){\n\t\treturn _removeChild(this,oldChild);\n\t},\n\tappendChild:function(newChild){\n\t\treturn this.insertBefore(newChild,null);\n\t},\n\thasChildNodes:function(){\n\t\treturn this.firstChild != null;\n\t},\n\tcloneNode:function(deep){\n\t\treturn cloneNode(this.ownerDocument||this,this,deep);\n\t},\n\t// Modified in DOM Level 2:\n\tnormalize:function(){\n\t\tvar child = this.firstChild;\n\t\twhile(child){\n\t\t\tvar next = child.nextSibling;\n\t\t\tif(next && next.nodeType == TEXT_NODE && child.nodeType == TEXT_NODE){\n\t\t\t\tthis.removeChild(next);\n\t\t\t\tchild.appendData(next.data);\n\t\t\t}else{\n\t\t\t\tchild.normalize();\n\t\t\t\tchild = next;\n\t\t\t}\n\t\t}\n\t},\n  \t// Introduced in DOM Level 2:\n\tisSupported:function(feature, version){\n\t\treturn this.ownerDocument.implementation.hasFeature(feature,version);\n\t},\n    // Introduced in DOM Level 2:\n    hasAttributes:function(){\n    \treturn this.attributes.length>0;\n    },\n\t/**\n\t * Look up the prefix associated to the given namespace URI, starting from this node.\n\t * **The default namespace declarations are ignored by this method.**\n\t * See Namespace Prefix Lookup for details on the algorithm used by this method.\n\t *\n\t * _Note: The implementation seems to be incomplete when compared to the algorithm described in the specs._\n\t *\n\t * @param {string | null} namespaceURI\n\t * @returns {string | null}\n\t * @see https://www.w3.org/TR/DOM-Level-3-Core/core.html#Node3-lookupNamespacePrefix\n\t * @see https://www.w3.org/TR/DOM-Level-3-Core/namespaces-algorithms.html#lookupNamespacePrefixAlgo\n\t * @see https://dom.spec.whatwg.org/#dom-node-lookupprefix\n\t * @see https://github.com/xmldom/xmldom/issues/322\n\t */\n    lookupPrefix:function(namespaceURI){\n    \tvar el = this;\n    \twhile(el){\n    \t\tvar map = el._nsMap;\n    \t\t//console.dir(map)\n    \t\tif(map){\n    \t\t\tfor(var n in map){\n\t\t\t\t\t\tif (Object.prototype.hasOwnProperty.call(map, n) && map[n] === namespaceURI) {\n\t\t\t\t\t\t\treturn n;\n\t\t\t\t\t\t}\n    \t\t\t}\n    \t\t}\n    \t\tel = el.nodeType == ATTRIBUTE_NODE?el.ownerDocument : el.parentNode;\n    \t}\n    \treturn null;\n    },\n    // Introduced in DOM Level 3:\n    lookupNamespaceURI:function(prefix){\n    \tvar el = this;\n    \twhile(el){\n    \t\tvar map = el._nsMap;\n    \t\t//console.dir(map)\n    \t\tif(map){\n    \t\t\tif(Object.prototype.hasOwnProperty.call(map, prefix)){\n    \t\t\t\treturn map[prefix] ;\n    \t\t\t}\n    \t\t}\n    \t\tel = el.nodeType == ATTRIBUTE_NODE?el.ownerDocument : el.parentNode;\n    \t}\n    \treturn null;\n    },\n    // Introduced in DOM Level 3:\n    isDefaultNamespace:function(namespaceURI){\n    \tvar prefix = this.lookupPrefix(namespaceURI);\n    \treturn prefix == null;\n    }\n};\n\n\nfunction _xmlEncoder(c){\n\treturn c == '<' && '&lt;' ||\n         c == '>' && '&gt;' ||\n         c == '&' && '&amp;' ||\n         c == '\"' && '&quot;' ||\n         '&#'+c.charCodeAt()+';'\n}\n\n\ncopy(NodeType,Node);\ncopy(NodeType,Node.prototype);\n\n/**\n * @param callback return true for continue,false for break\n * @return boolean true: break visit;\n */\nfunction _visitNode(node,callback){\n\tif(callback(node)){\n\t\treturn true;\n\t}\n\tif(node = node.firstChild){\n\t\tdo{\n\t\t\tif(_visitNode(node,callback)){return true}\n        }while(node=node.nextSibling)\n    }\n}\n\n\n\nfunction Document(){\n\tthis.ownerDocument = this;\n}\n\nfunction _onAddAttribute(doc,el,newAttr){\n\tdoc && doc._inc++;\n\tvar ns = newAttr.namespaceURI ;\n\tif(ns === NAMESPACE.XMLNS){\n\t\t//update namespace\n\t\tel._nsMap[newAttr.prefix?newAttr.localName:''] = newAttr.value\n\t}\n}\n\nfunction _onRemoveAttribute(doc,el,newAttr,remove){\n\tdoc && doc._inc++;\n\tvar ns = newAttr.namespaceURI ;\n\tif(ns === NAMESPACE.XMLNS){\n\t\t//update namespace\n\t\tdelete el._nsMap[newAttr.prefix?newAttr.localName:'']\n\t}\n}\n\n/**\n * Updates `el.childNodes`, updating the indexed items and it's `length`.\n * Passing `newChild` means it will be appended.\n * Otherwise it's assumed that an item has been removed,\n * and `el.firstNode` and it's `.nextSibling` are used\n * to walk the current list of child nodes.\n *\n * @param {Document} doc\n * @param {Node} el\n * @param {Node} [newChild]\n * @private\n */\nfunction _onUpdateChild (doc, el, newChild) {\n\tif(doc && doc._inc){\n\t\tdoc._inc++;\n\t\t//update childNodes\n\t\tvar cs = el.childNodes;\n\t\tif (newChild) {\n\t\t\tcs[cs.length++] = newChild;\n\t\t} else {\n\t\t\tvar child = el.firstChild;\n\t\t\tvar i = 0;\n\t\t\twhile (child) {\n\t\t\t\tcs[i++] = child;\n\t\t\t\tchild = child.nextSibling;\n\t\t\t}\n\t\t\tcs.length = i;\n\t\t\tdelete cs[cs.length];\n\t\t}\n\t}\n}\n\n/**\n * Removes the connections between `parentNode` and `child`\n * and any existing `child.previousSibling` or `child.nextSibling`.\n *\n * @see https://github.com/xmldom/xmldom/issues/135\n * @see https://github.com/xmldom/xmldom/issues/145\n *\n * @param {Node} parentNode\n * @param {Node} child\n * @returns {Node} the child that was removed.\n * @private\n */\nfunction _removeChild (parentNode, child) {\n\tvar previous = child.previousSibling;\n\tvar next = child.nextSibling;\n\tif (previous) {\n\t\tprevious.nextSibling = next;\n\t} else {\n\t\tparentNode.firstChild = next;\n\t}\n\tif (next) {\n\t\tnext.previousSibling = previous;\n\t} else {\n\t\tparentNode.lastChild = previous;\n\t}\n\tchild.parentNode = null;\n\tchild.previousSibling = null;\n\tchild.nextSibling = null;\n\t_onUpdateChild(parentNode.ownerDocument, parentNode);\n\treturn child;\n}\n\n/**\n * Returns `true` if `node` can be a parent for insertion.\n * @param {Node} node\n * @returns {boolean}\n */\nfunction hasValidParentNodeType(node) {\n\treturn (\n\t\tnode &&\n\t\t(node.nodeType === Node.DOCUMENT_NODE || node.nodeType === Node.DOCUMENT_FRAGMENT_NODE || node.nodeType === Node.ELEMENT_NODE)\n\t);\n}\n\n/**\n * Returns `true` if `node` can be inserted according to it's `nodeType`.\n * @param {Node} node\n * @returns {boolean}\n */\nfunction hasInsertableNodeType(node) {\n\treturn (\n\t\tnode &&\n\t\t(isElementNode(node) ||\n\t\t\tisTextNode(node) ||\n\t\t\tisDocTypeNode(node) ||\n\t\t\tnode.nodeType === Node.DOCUMENT_FRAGMENT_NODE ||\n\t\t\tnode.nodeType === Node.COMMENT_NODE ||\n\t\t\tnode.nodeType === Node.PROCESSING_INSTRUCTION_NODE)\n\t);\n}\n\n/**\n * Returns true if `node` is a DOCTYPE node\n * @param {Node} node\n * @returns {boolean}\n */\nfunction isDocTypeNode(node) {\n\treturn node && node.nodeType === Node.DOCUMENT_TYPE_NODE;\n}\n\n/**\n * Returns true if the node is an element\n * @param {Node} node\n * @returns {boolean}\n */\nfunction isElementNode(node) {\n\treturn node && node.nodeType === Node.ELEMENT_NODE;\n}\n/**\n * Returns true if `node` is a text node\n * @param {Node} node\n * @returns {boolean}\n */\nfunction isTextNode(node) {\n\treturn node && node.nodeType === Node.TEXT_NODE;\n}\n\n/**\n * Check if en element node can be inserted before `child`, or at the end if child is falsy,\n * according to the presence and position of a doctype node on the same level.\n *\n * @param {Document} doc The document node\n * @param {Node} child the node that would become the nextSibling if the element would be inserted\n * @returns {boolean} `true` if an element can be inserted before child\n * @private\n * https://dom.spec.whatwg.org/#concept-node-ensure-pre-insertion-validity\n */\nfunction isElementInsertionPossible(doc, child) {\n\tvar parentChildNodes = doc.childNodes || [];\n\tif (find(parentChildNodes, isElementNode) || isDocTypeNode(child)) {\n\t\treturn false;\n\t}\n\tvar docTypeNode = find(parentChildNodes, isDocTypeNode);\n\treturn !(child && docTypeNode && parentChildNodes.indexOf(docTypeNode) > parentChildNodes.indexOf(child));\n}\n\n/**\n * Check if en element node can be inserted before `child`, or at the end if child is falsy,\n * according to the presence and position of a doctype node on the same level.\n *\n * @param {Node} doc The document node\n * @param {Node} child the node that would become the nextSibling if the element would be inserted\n * @returns {boolean} `true` if an element can be inserted before child\n * @private\n * https://dom.spec.whatwg.org/#concept-node-ensure-pre-insertion-validity\n */\nfunction isElementReplacementPossible(doc, child) {\n\tvar parentChildNodes = doc.childNodes || [];\n\n\tfunction hasElementChildThatIsNotChild(node) {\n\t\treturn isElementNode(node) && node !== child;\n\t}\n\n\tif (find(parentChildNodes, hasElementChildThatIsNotChild)) {\n\t\treturn false;\n\t}\n\tvar docTypeNode = find(parentChildNodes, isDocTypeNode);\n\treturn !(child && docTypeNode && parentChildNodes.indexOf(docTypeNode) > parentChildNodes.indexOf(child));\n}\n\n/**\n * @private\n * Steps 1-5 of the checks before inserting and before replacing a child are the same.\n *\n * @param {Node} parent the parent node to insert `node` into\n * @param {Node} node the node to insert\n * @param {Node=} child the node that should become the `nextSibling` of `node`\n * @returns {Node}\n * @throws DOMException for several node combinations that would create a DOM that is not well-formed.\n * @throws DOMException if `child` is provided but is not a child of `parent`.\n * @see https://dom.spec.whatwg.org/#concept-node-ensure-pre-insertion-validity\n * @see https://dom.spec.whatwg.org/#concept-node-replace\n */\nfunction assertPreInsertionValidity1to5(parent, node, child) {\n\t// 1. If `parent` is not a Document, DocumentFragment, or Element node, then throw a \"HierarchyRequestError\" DOMException.\n\tif (!hasValidParentNodeType(parent)) {\n\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'Unexpected parent node type ' + parent.nodeType);\n\t}\n\t// 2. If `node` is a host-including inclusive ancestor of `parent`, then throw a \"HierarchyRequestError\" DOMException.\n\t// not implemented!\n\t// 3. If `child` is non-null and its parent is not `parent`, then throw a \"NotFoundError\" DOMException.\n\tif (child && child.parentNode !== parent) {\n\t\tthrow new DOMException(NOT_FOUND_ERR, 'child not in parent');\n\t}\n\tif (\n\t\t// 4. If `node` is not a DocumentFragment, DocumentType, Element, or CharacterData node, then throw a \"HierarchyRequestError\" DOMException.\n\t\t!hasInsertableNodeType(node) ||\n\t\t// 5. If either `node` is a Text node and `parent` is a document,\n\t\t// the sax parser currently adds top level text nodes, this will be fixed in 0.9.0\n\t\t// || (node.nodeType === Node.TEXT_NODE && parent.nodeType === Node.DOCUMENT_NODE)\n\t\t// or `node` is a doctype and `parent` is not a document, then throw a \"HierarchyRequestError\" DOMException.\n\t\t(isDocTypeNode(node) && parent.nodeType !== Node.DOCUMENT_NODE)\n\t) {\n\t\tthrow new DOMException(\n\t\t\tHIERARCHY_REQUEST_ERR,\n\t\t\t'Unexpected node type ' + node.nodeType + ' for parent node type ' + parent.nodeType\n\t\t);\n\t}\n}\n\n/**\n * @private\n * Step 6 of the checks before inserting and before replacing a child are different.\n *\n * @param {Document} parent the parent node to insert `node` into\n * @param {Node} node the node to insert\n * @param {Node | undefined} child the node that should become the `nextSibling` of `node`\n * @returns {Node}\n * @throws DOMException for several node combinations that would create a DOM that is not well-formed.\n * @throws DOMException if `child` is provided but is not a child of `parent`.\n * @see https://dom.spec.whatwg.org/#concept-node-ensure-pre-insertion-validity\n * @see https://dom.spec.whatwg.org/#concept-node-replace\n */\nfunction assertPreInsertionValidityInDocument(parent, node, child) {\n\tvar parentChildNodes = parent.childNodes || [];\n\tvar nodeChildNodes = node.childNodes || [];\n\n\t// DocumentFragment\n\tif (node.nodeType === Node.DOCUMENT_FRAGMENT_NODE) {\n\t\tvar nodeChildElements = nodeChildNodes.filter(isElementNode);\n\t\t// If node has more than one element child or has a Text node child.\n\t\tif (nodeChildElements.length > 1 || find(nodeChildNodes, isTextNode)) {\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'More than one element or text in fragment');\n\t\t}\n\t\t// Otherwise, if `node` has one element child and either `parent` has an element child,\n\t\t// `child` is a doctype, or `child` is non-null and a doctype is following `child`.\n\t\tif (nodeChildElements.length === 1 && !isElementInsertionPossible(parent, child)) {\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'Element in fragment can not be inserted before doctype');\n\t\t}\n\t}\n\t// Element\n\tif (isElementNode(node)) {\n\t\t// `parent` has an element child, `child` is a doctype,\n\t\t// or `child` is non-null and a doctype is following `child`.\n\t\tif (!isElementInsertionPossible(parent, child)) {\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'Only one element can be added and only after doctype');\n\t\t}\n\t}\n\t// DocumentType\n\tif (isDocTypeNode(node)) {\n\t\t// `parent` has a doctype child,\n\t\tif (find(parentChildNodes, isDocTypeNode)) {\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'Only one doctype is allowed');\n\t\t}\n\t\tvar parentElementChild = find(parentChildNodes, isElementNode);\n\t\t// `child` is non-null and an element is preceding `child`,\n\t\tif (child && parentChildNodes.indexOf(parentElementChild) < parentChildNodes.indexOf(child)) {\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'Doctype can only be inserted before an element');\n\t\t}\n\t\t// or `child` is null and `parent` has an element child.\n\t\tif (!child && parentElementChild) {\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'Doctype can not be appended since element is present');\n\t\t}\n\t}\n}\n\n/**\n * @private\n * Step 6 of the checks before inserting and before replacing a child are different.\n *\n * @param {Document} parent the parent node to insert `node` into\n * @param {Node} node the node to insert\n * @param {Node | undefined} child the node that should become the `nextSibling` of `node`\n * @returns {Node}\n * @throws DOMException for several node combinations that would create a DOM that is not well-formed.\n * @throws DOMException if `child` is provided but is not a child of `parent`.\n * @see https://dom.spec.whatwg.org/#concept-node-ensure-pre-insertion-validity\n * @see https://dom.spec.whatwg.org/#concept-node-replace\n */\nfunction assertPreReplacementValidityInDocument(parent, node, child) {\n\tvar parentChildNodes = parent.childNodes || [];\n\tvar nodeChildNodes = node.childNodes || [];\n\n\t// DocumentFragment\n\tif (node.nodeType === Node.DOCUMENT_FRAGMENT_NODE) {\n\t\tvar nodeChildElements = nodeChildNodes.filter(isElementNode);\n\t\t// If `node` has more than one element child or has a Text node child.\n\t\tif (nodeChildElements.length > 1 || find(nodeChildNodes, isTextNode)) {\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'More than one element or text in fragment');\n\t\t}\n\t\t// Otherwise, if `node` has one element child and either `parent` has an element child that is not `child` or a doctype is following `child`.\n\t\tif (nodeChildElements.length === 1 && !isElementReplacementPossible(parent, child)) {\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'Element in fragment can not be inserted before doctype');\n\t\t}\n\t}\n\t// Element\n\tif (isElementNode(node)) {\n\t\t// `parent` has an element child that is not `child` or a doctype is following `child`.\n\t\tif (!isElementReplacementPossible(parent, child)) {\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'Only one element can be added and only after doctype');\n\t\t}\n\t}\n\t// DocumentType\n\tif (isDocTypeNode(node)) {\n\t\tfunction hasDoctypeChildThatIsNotChild(node) {\n\t\t\treturn isDocTypeNode(node) && node !== child;\n\t\t}\n\n\t\t// `parent` has a doctype child that is not `child`,\n\t\tif (find(parentChildNodes, hasDoctypeChildThatIsNotChild)) {\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'Only one doctype is allowed');\n\t\t}\n\t\tvar parentElementChild = find(parentChildNodes, isElementNode);\n\t\t// or an element is preceding `child`.\n\t\tif (child && parentChildNodes.indexOf(parentElementChild) < parentChildNodes.indexOf(child)) {\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'Doctype can only be inserted before an element');\n\t\t}\n\t}\n}\n\n/**\n * @private\n * @param {Node} parent the parent node to insert `node` into\n * @param {Node} node the node to insert\n * @param {Node=} child the node that should become the `nextSibling` of `node`\n * @returns {Node}\n * @throws DOMException for several node combinations that would create a DOM that is not well-formed.\n * @throws DOMException if `child` is provided but is not a child of `parent`.\n * @see https://dom.spec.whatwg.org/#concept-node-ensure-pre-insertion-validity\n */\nfunction _insertBefore(parent, node, child, _inDocumentAssertion) {\n\t// To ensure pre-insertion validity of a node into a parent before a child, run these steps:\n\tassertPreInsertionValidity1to5(parent, node, child);\n\n\t// If parent is a document, and any of the statements below, switched on the interface node implements,\n\t// are true, then throw a \"HierarchyRequestError\" DOMException.\n\tif (parent.nodeType === Node.DOCUMENT_NODE) {\n\t\t(_inDocumentAssertion || assertPreInsertionValidityInDocument)(parent, node, child);\n\t}\n\n\tvar cp = node.parentNode;\n\tif(cp){\n\t\tcp.removeChild(node);//remove and update\n\t}\n\tif(node.nodeType === DOCUMENT_FRAGMENT_NODE){\n\t\tvar newFirst = node.firstChild;\n\t\tif (newFirst == null) {\n\t\t\treturn node;\n\t\t}\n\t\tvar newLast = node.lastChild;\n\t}else{\n\t\tnewFirst = newLast = node;\n\t}\n\tvar pre = child ? child.previousSibling : parent.lastChild;\n\n\tnewFirst.previousSibling = pre;\n\tnewLast.nextSibling = child;\n\n\n\tif(pre){\n\t\tpre.nextSibling = newFirst;\n\t}else{\n\t\tparent.firstChild = newFirst;\n\t}\n\tif(child == null){\n\t\tparent.lastChild = newLast;\n\t}else{\n\t\tchild.previousSibling = newLast;\n\t}\n\tdo{\n\t\tnewFirst.parentNode = parent;\n\t}while(newFirst !== newLast && (newFirst= newFirst.nextSibling))\n\t_onUpdateChild(parent.ownerDocument||parent, parent);\n\t//console.log(parent.lastChild.nextSibling == null)\n\tif (node.nodeType == DOCUMENT_FRAGMENT_NODE) {\n\t\tnode.firstChild = node.lastChild = null;\n\t}\n\treturn node;\n}\n\n/**\n * Appends `newChild` to `parentNode`.\n * If `newChild` is already connected to a `parentNode` it is first removed from it.\n *\n * @see https://github.com/xmldom/xmldom/issues/135\n * @see https://github.com/xmldom/xmldom/issues/145\n * @param {Node} parentNode\n * @param {Node} newChild\n * @returns {Node}\n * @private\n */\nfunction _appendSingleChild (parentNode, newChild) {\n\tif (newChild.parentNode) {\n\t\tnewChild.parentNode.removeChild(newChild);\n\t}\n\tnewChild.parentNode = parentNode;\n\tnewChild.previousSibling = parentNode.lastChild;\n\tnewChild.nextSibling = null;\n\tif (newChild.previousSibling) {\n\t\tnewChild.previousSibling.nextSibling = newChild;\n\t} else {\n\t\tparentNode.firstChild = newChild;\n\t}\n\tparentNode.lastChild = newChild;\n\t_onUpdateChild(parentNode.ownerDocument, parentNode, newChild);\n\treturn newChild;\n}\n\nDocument.prototype = {\n\t//implementation : null,\n\tnodeName :  '#document',\n\tnodeType :  DOCUMENT_NODE,\n\t/**\n\t * The DocumentType node of the document.\n\t *\n\t * @readonly\n\t * @type DocumentType\n\t */\n\tdoctype :  null,\n\tdocumentElement :  null,\n\t_inc : 1,\n\n\tinsertBefore :  function(newChild, refChild){//raises\n\t\tif(newChild.nodeType == DOCUMENT_FRAGMENT_NODE){\n\t\t\tvar child = newChild.firstChild;\n\t\t\twhile(child){\n\t\t\t\tvar next = child.nextSibling;\n\t\t\t\tthis.insertBefore(child,refChild);\n\t\t\t\tchild = next;\n\t\t\t}\n\t\t\treturn newChild;\n\t\t}\n\t\t_insertBefore(this, newChild, refChild);\n\t\tnewChild.ownerDocument = this;\n\t\tif (this.documentElement === null && newChild.nodeType === ELEMENT_NODE) {\n\t\t\tthis.documentElement = newChild;\n\t\t}\n\n\t\treturn newChild;\n\t},\n\tremoveChild :  function(oldChild){\n\t\tif(this.documentElement == oldChild){\n\t\t\tthis.documentElement = null;\n\t\t}\n\t\treturn _removeChild(this,oldChild);\n\t},\n\treplaceChild: function (newChild, oldChild) {\n\t\t//raises\n\t\t_insertBefore(this, newChild, oldChild, assertPreReplacementValidityInDocument);\n\t\tnewChild.ownerDocument = this;\n\t\tif (oldChild) {\n\t\t\tthis.removeChild(oldChild);\n\t\t}\n\t\tif (isElementNode(newChild)) {\n\t\t\tthis.documentElement = newChild;\n\t\t}\n\t},\n\t// Introduced in DOM Level 2:\n\timportNode : function(importedNode,deep){\n\t\treturn importNode(this,importedNode,deep);\n\t},\n\t// Introduced in DOM Level 2:\n\tgetElementById :\tfunction(id){\n\t\tvar rtv = null;\n\t\t_visitNode(this.documentElement,function(node){\n\t\t\tif(node.nodeType == ELEMENT_NODE){\n\t\t\t\tif(node.getAttribute('id') == id){\n\t\t\t\t\trtv = node;\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t\treturn rtv;\n\t},\n\n\t/**\n\t * The `getElementsByClassName` method of `Document` interface returns an array-like object\n\t * of all child elements which have **all** of the given class name(s).\n\t *\n\t * Returns an empty list if `classeNames` is an empty string or only contains HTML white space characters.\n\t *\n\t *\n\t * Warning: This is a live LiveNodeList.\n\t * Changes in the DOM will reflect in the array as the changes occur.\n\t * If an element selected by this array no longer qualifies for the selector,\n\t * it will automatically be removed. Be aware of this for iteration purposes.\n\t *\n\t * @param {string} classNames is a string representing the class name(s) to match; multiple class names are separated by (ASCII-)whitespace\n\t *\n\t * @see https://developer.mozilla.org/en-US/docs/Web/API/Document/getElementsByClassName\n\t * @see https://dom.spec.whatwg.org/#concept-getelementsbyclassname\n\t */\n\tgetElementsByClassName: function(classNames) {\n\t\tvar classNamesSet = toOrderedSet(classNames)\n\t\treturn new LiveNodeList(this, function(base) {\n\t\t\tvar ls = [];\n\t\t\tif (classNamesSet.length > 0) {\n\t\t\t\t_visitNode(base.documentElement, function(node) {\n\t\t\t\t\tif(node !== base && node.nodeType === ELEMENT_NODE) {\n\t\t\t\t\t\tvar nodeClassNames = node.getAttribute('class')\n\t\t\t\t\t\t// can be null if the attribute does not exist\n\t\t\t\t\t\tif (nodeClassNames) {\n\t\t\t\t\t\t\t// before splitting and iterating just compare them for the most common case\n\t\t\t\t\t\t\tvar matches = classNames === nodeClassNames;\n\t\t\t\t\t\t\tif (!matches) {\n\t\t\t\t\t\t\t\tvar nodeClassNamesSet = toOrderedSet(nodeClassNames)\n\t\t\t\t\t\t\t\tmatches = classNamesSet.every(arrayIncludes(nodeClassNamesSet))\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(matches) {\n\t\t\t\t\t\t\t\tls.push(node);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn ls;\n\t\t});\n\t},\n\n\t//document factory method:\n\tcreateElement :\tfunction(tagName){\n\t\tvar node = new Element();\n\t\tnode.ownerDocument = this;\n\t\tnode.nodeName = tagName;\n\t\tnode.tagName = tagName;\n\t\tnode.localName = tagName;\n\t\tnode.childNodes = new NodeList();\n\t\tvar attrs\t= node.attributes = new NamedNodeMap();\n\t\tattrs._ownerElement = node;\n\t\treturn node;\n\t},\n\tcreateDocumentFragment :\tfunction(){\n\t\tvar node = new DocumentFragment();\n\t\tnode.ownerDocument = this;\n\t\tnode.childNodes = new NodeList();\n\t\treturn node;\n\t},\n\tcreateTextNode :\tfunction(data){\n\t\tvar node = new Text();\n\t\tnode.ownerDocument = this;\n\t\tnode.appendData(data)\n\t\treturn node;\n\t},\n\tcreateComment :\tfunction(data){\n\t\tvar node = new Comment();\n\t\tnode.ownerDocument = this;\n\t\tnode.appendData(data)\n\t\treturn node;\n\t},\n\tcreateCDATASection :\tfunction(data){\n\t\tvar node = new CDATASection();\n\t\tnode.ownerDocument = this;\n\t\tnode.appendData(data)\n\t\treturn node;\n\t},\n\tcreateProcessingInstruction :\tfunction(target,data){\n\t\tvar node = new ProcessingInstruction();\n\t\tnode.ownerDocument = this;\n\t\tnode.tagName = node.nodeName = node.target = target;\n\t\tnode.nodeValue = node.data = data;\n\t\treturn node;\n\t},\n\tcreateAttribute :\tfunction(name){\n\t\tvar node = new Attr();\n\t\tnode.ownerDocument\t= this;\n\t\tnode.name = name;\n\t\tnode.nodeName\t= name;\n\t\tnode.localName = name;\n\t\tnode.specified = true;\n\t\treturn node;\n\t},\n\tcreateEntityReference :\tfunction(name){\n\t\tvar node = new EntityReference();\n\t\tnode.ownerDocument\t= this;\n\t\tnode.nodeName\t= name;\n\t\treturn node;\n\t},\n\t// Introduced in DOM Level 2:\n\tcreateElementNS :\tfunction(namespaceURI,qualifiedName){\n\t\tvar node = new Element();\n\t\tvar pl = qualifiedName.split(':');\n\t\tvar attrs\t= node.attributes = new NamedNodeMap();\n\t\tnode.childNodes = new NodeList();\n\t\tnode.ownerDocument = this;\n\t\tnode.nodeName = qualifiedName;\n\t\tnode.tagName = qualifiedName;\n\t\tnode.namespaceURI = namespaceURI;\n\t\tif(pl.length == 2){\n\t\t\tnode.prefix = pl[0];\n\t\t\tnode.localName = pl[1];\n\t\t}else{\n\t\t\t//el.prefix = null;\n\t\t\tnode.localName = qualifiedName;\n\t\t}\n\t\tattrs._ownerElement = node;\n\t\treturn node;\n\t},\n\t// Introduced in DOM Level 2:\n\tcreateAttributeNS :\tfunction(namespaceURI,qualifiedName){\n\t\tvar node = new Attr();\n\t\tvar pl = qualifiedName.split(':');\n\t\tnode.ownerDocument = this;\n\t\tnode.nodeName = qualifiedName;\n\t\tnode.name = qualifiedName;\n\t\tnode.namespaceURI = namespaceURI;\n\t\tnode.specified = true;\n\t\tif(pl.length == 2){\n\t\t\tnode.prefix = pl[0];\n\t\t\tnode.localName = pl[1];\n\t\t}else{\n\t\t\t//el.prefix = null;\n\t\t\tnode.localName = qualifiedName;\n\t\t}\n\t\treturn node;\n\t}\n};\n_extends(Document,Node);\n\n\nfunction Element() {\n\tthis._nsMap = {};\n};\nElement.prototype = {\n\tnodeType : ELEMENT_NODE,\n\thasAttribute : function(name){\n\t\treturn this.getAttributeNode(name)!=null;\n\t},\n\tgetAttribute : function(name){\n\t\tvar attr = this.getAttributeNode(name);\n\t\treturn attr && attr.value || '';\n\t},\n\tgetAttributeNode : function(name){\n\t\treturn this.attributes.getNamedItem(name);\n\t},\n\tsetAttribute : function(name, value){\n\t\tvar attr = this.ownerDocument.createAttribute(name);\n\t\tattr.value = attr.nodeValue = \"\" + value;\n\t\tthis.setAttributeNode(attr)\n\t},\n\tremoveAttribute : function(name){\n\t\tvar attr = this.getAttributeNode(name)\n\t\tattr && this.removeAttributeNode(attr);\n\t},\n\n\t//four real opeartion method\n\tappendChild:function(newChild){\n\t\tif(newChild.nodeType === DOCUMENT_FRAGMENT_NODE){\n\t\t\treturn this.insertBefore(newChild,null);\n\t\t}else{\n\t\t\treturn _appendSingleChild(this,newChild);\n\t\t}\n\t},\n\tsetAttributeNode : function(newAttr){\n\t\treturn this.attributes.setNamedItem(newAttr);\n\t},\n\tsetAttributeNodeNS : function(newAttr){\n\t\treturn this.attributes.setNamedItemNS(newAttr);\n\t},\n\tremoveAttributeNode : function(oldAttr){\n\t\t//console.log(this == oldAttr.ownerElement)\n\t\treturn this.attributes.removeNamedItem(oldAttr.nodeName);\n\t},\n\t//get real attribute name,and remove it by removeAttributeNode\n\tremoveAttributeNS : function(namespaceURI, localName){\n\t\tvar old = this.getAttributeNodeNS(namespaceURI, localName);\n\t\told && this.removeAttributeNode(old);\n\t},\n\n\thasAttributeNS : function(namespaceURI, localName){\n\t\treturn this.getAttributeNodeNS(namespaceURI, localName)!=null;\n\t},\n\tgetAttributeNS : function(namespaceURI, localName){\n\t\tvar attr = this.getAttributeNodeNS(namespaceURI, localName);\n\t\treturn attr && attr.value || '';\n\t},\n\tsetAttributeNS : function(namespaceURI, qualifiedName, value){\n\t\tvar attr = this.ownerDocument.createAttributeNS(namespaceURI, qualifiedName);\n\t\tattr.value = attr.nodeValue = \"\" + value;\n\t\tthis.setAttributeNode(attr)\n\t},\n\tgetAttributeNodeNS : function(namespaceURI, localName){\n\t\treturn this.attributes.getNamedItemNS(namespaceURI, localName);\n\t},\n\n\tgetElementsByTagName : function(tagName){\n\t\treturn new LiveNodeList(this,function(base){\n\t\t\tvar ls = [];\n\t\t\t_visitNode(base,function(node){\n\t\t\t\tif(node !== base && node.nodeType == ELEMENT_NODE && (tagName === '*' || node.tagName == tagName)){\n\t\t\t\t\tls.push(node);\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn ls;\n\t\t});\n\t},\n\tgetElementsByTagNameNS : function(namespaceURI, localName){\n\t\treturn new LiveNodeList(this,function(base){\n\t\t\tvar ls = [];\n\t\t\t_visitNode(base,function(node){\n\t\t\t\tif(node !== base && node.nodeType === ELEMENT_NODE && (namespaceURI === '*' || node.namespaceURI === namespaceURI) && (localName === '*' || node.localName == localName)){\n\t\t\t\t\tls.push(node);\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn ls;\n\n\t\t});\n\t}\n};\nDocument.prototype.getElementsByTagName = Element.prototype.getElementsByTagName;\nDocument.prototype.getElementsByTagNameNS = Element.prototype.getElementsByTagNameNS;\n\n\n_extends(Element,Node);\nfunction Attr() {\n};\nAttr.prototype.nodeType = ATTRIBUTE_NODE;\n_extends(Attr,Node);\n\n\nfunction CharacterData() {\n};\nCharacterData.prototype = {\n\tdata : '',\n\tsubstringData : function(offset, count) {\n\t\treturn this.data.substring(offset, offset+count);\n\t},\n\tappendData: function(text) {\n\t\ttext = this.data+text;\n\t\tthis.nodeValue = this.data = text;\n\t\tthis.length = text.length;\n\t},\n\tinsertData: function(offset,text) {\n\t\tthis.replaceData(offset,0,text);\n\n\t},\n\tappendChild:function(newChild){\n\t\tthrow new Error(ExceptionMessage[HIERARCHY_REQUEST_ERR])\n\t},\n\tdeleteData: function(offset, count) {\n\t\tthis.replaceData(offset,count,\"\");\n\t},\n\treplaceData: function(offset, count, text) {\n\t\tvar start = this.data.substring(0,offset);\n\t\tvar end = this.data.substring(offset+count);\n\t\ttext = start + text + end;\n\t\tthis.nodeValue = this.data = text;\n\t\tthis.length = text.length;\n\t}\n}\n_extends(CharacterData,Node);\nfunction Text() {\n};\nText.prototype = {\n\tnodeName : \"#text\",\n\tnodeType : TEXT_NODE,\n\tsplitText : function(offset) {\n\t\tvar text = this.data;\n\t\tvar newText = text.substring(offset);\n\t\ttext = text.substring(0, offset);\n\t\tthis.data = this.nodeValue = text;\n\t\tthis.length = text.length;\n\t\tvar newNode = this.ownerDocument.createTextNode(newText);\n\t\tif(this.parentNode){\n\t\t\tthis.parentNode.insertBefore(newNode, this.nextSibling);\n\t\t}\n\t\treturn newNode;\n\t}\n}\n_extends(Text,CharacterData);\nfunction Comment() {\n};\nComment.prototype = {\n\tnodeName : \"#comment\",\n\tnodeType : COMMENT_NODE\n}\n_extends(Comment,CharacterData);\n\nfunction CDATASection() {\n};\nCDATASection.prototype = {\n\tnodeName : \"#cdata-section\",\n\tnodeType : CDATA_SECTION_NODE\n}\n_extends(CDATASection,CharacterData);\n\n\nfunction DocumentType() {\n};\nDocumentType.prototype.nodeType = DOCUMENT_TYPE_NODE;\n_extends(DocumentType,Node);\n\nfunction Notation() {\n};\nNotation.prototype.nodeType = NOTATION_NODE;\n_extends(Notation,Node);\n\nfunction Entity() {\n};\nEntity.prototype.nodeType = ENTITY_NODE;\n_extends(Entity,Node);\n\nfunction EntityReference() {\n};\nEntityReference.prototype.nodeType = ENTITY_REFERENCE_NODE;\n_extends(EntityReference,Node);\n\nfunction DocumentFragment() {\n};\nDocumentFragment.prototype.nodeName =\t\"#document-fragment\";\nDocumentFragment.prototype.nodeType =\tDOCUMENT_FRAGMENT_NODE;\n_extends(DocumentFragment,Node);\n\n\nfunction ProcessingInstruction() {\n}\nProcessingInstruction.prototype.nodeType = PROCESSING_INSTRUCTION_NODE;\n_extends(ProcessingInstruction,Node);\nfunction XMLSerializer(){}\nXMLSerializer.prototype.serializeToString = function(node,isHtml,nodeFilter){\n\treturn nodeSerializeToString.call(node,isHtml,nodeFilter);\n}\nNode.prototype.toString = nodeSerializeToString;\nfunction nodeSerializeToString(isHtml,nodeFilter){\n\tvar buf = [];\n\tvar refNode = this.nodeType == 9 && this.documentElement || this;\n\tvar prefix = refNode.prefix;\n\tvar uri = refNode.namespaceURI;\n\n\tif(uri && prefix == null){\n\t\t//console.log(prefix)\n\t\tvar prefix = refNode.lookupPrefix(uri);\n\t\tif(prefix == null){\n\t\t\t//isHTML = true;\n\t\t\tvar visibleNamespaces=[\n\t\t\t{namespace:uri,prefix:null}\n\t\t\t//{namespace:uri,prefix:''}\n\t\t\t]\n\t\t}\n\t}\n\tserializeToString(this,buf,isHtml,nodeFilter,visibleNamespaces);\n\t//console.log('###',this.nodeType,uri,prefix,buf.join(''))\n\treturn buf.join('');\n}\n\nfunction needNamespaceDefine(node, isHTML, visibleNamespaces) {\n\tvar prefix = node.prefix || '';\n\tvar uri = node.namespaceURI;\n\t// According to [Namespaces in XML 1.0](https://www.w3.org/TR/REC-xml-names/#ns-using) ,\n\t// and more specifically https://www.w3.org/TR/REC-xml-names/#nsc-NoPrefixUndecl :\n\t// > In a namespace declaration for a prefix [...], the attribute value MUST NOT be empty.\n\t// in a similar manner [Namespaces in XML 1.1](https://www.w3.org/TR/xml-names11/#ns-using)\n\t// and more specifically https://www.w3.org/TR/xml-names11/#nsc-NSDeclared :\n\t// > [...] Furthermore, the attribute value [...] must not be an empty string.\n\t// so serializing empty namespace value like xmlns:ds=\"\" would produce an invalid XML document.\n\tif (!uri) {\n\t\treturn false;\n\t}\n\tif (prefix === \"xml\" && uri === NAMESPACE.XML || uri === NAMESPACE.XMLNS) {\n\t\treturn false;\n\t}\n\n\tvar i = visibleNamespaces.length\n\twhile (i--) {\n\t\tvar ns = visibleNamespaces[i];\n\t\t// get namespace prefix\n\t\tif (ns.prefix === prefix) {\n\t\t\treturn ns.namespace !== uri;\n\t\t}\n\t}\n\treturn true;\n}\n/**\n * Well-formed constraint: No < in Attribute Values\n * > The replacement text of any entity referred to directly or indirectly\n * > in an attribute value must not contain a <.\n * @see https://www.w3.org/TR/xml11/#CleanAttrVals\n * @see https://www.w3.org/TR/xml11/#NT-AttValue\n *\n * Literal whitespace other than space that appear in attribute values\n * are serialized as their entity references, so they will be preserved.\n * (In contrast to whitespace literals in the input which are normalized to spaces)\n * @see https://www.w3.org/TR/xml11/#AVNormalize\n * @see https://w3c.github.io/DOM-Parsing/#serializing-an-element-s-attributes\n */\nfunction addSerializedAttribute(buf, qualifiedName, value) {\n\tbuf.push(' ', qualifiedName, '=\"', value.replace(/[<>&\"\\t\\n\\r]/g, _xmlEncoder), '\"')\n}\n\nfunction serializeToString(node,buf,isHTML,nodeFilter,visibleNamespaces){\n\tif (!visibleNamespaces) {\n\t\tvisibleNamespaces = [];\n\t}\n\n\tif(nodeFilter){\n\t\tnode = nodeFilter(node);\n\t\tif(node){\n\t\t\tif(typeof node == 'string'){\n\t\t\t\tbuf.push(node);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}else{\n\t\t\treturn;\n\t\t}\n\t\t//buf.sort.apply(attrs, attributeSorter);\n\t}\n\n\tswitch(node.nodeType){\n\tcase ELEMENT_NODE:\n\t\tvar attrs = node.attributes;\n\t\tvar len = attrs.length;\n\t\tvar child = node.firstChild;\n\t\tvar nodeName = node.tagName;\n\n\t\tisHTML = NAMESPACE.isHTML(node.namespaceURI) || isHTML\n\n\t\tvar prefixedNodeName = nodeName\n\t\tif (!isHTML && !node.prefix && node.namespaceURI) {\n\t\t\tvar defaultNS\n\t\t\t// lookup current default ns from `xmlns` attribute\n\t\t\tfor (var ai = 0; ai < attrs.length; ai++) {\n\t\t\t\tif (attrs.item(ai).name === 'xmlns') {\n\t\t\t\t\tdefaultNS = attrs.item(ai).value\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!defaultNS) {\n\t\t\t\t// lookup current default ns in visibleNamespaces\n\t\t\t\tfor (var nsi = visibleNamespaces.length - 1; nsi >= 0; nsi--) {\n\t\t\t\t\tvar namespace = visibleNamespaces[nsi]\n\t\t\t\t\tif (namespace.prefix === '' && namespace.namespace === node.namespaceURI) {\n\t\t\t\t\t\tdefaultNS = namespace.namespace\n\t\t\t\t\t\tbreak\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (defaultNS !== node.namespaceURI) {\n\t\t\t\tfor (var nsi = visibleNamespaces.length - 1; nsi >= 0; nsi--) {\n\t\t\t\t\tvar namespace = visibleNamespaces[nsi]\n\t\t\t\t\tif (namespace.namespace === node.namespaceURI) {\n\t\t\t\t\t\tif (namespace.prefix) {\n\t\t\t\t\t\t\tprefixedNodeName = namespace.prefix + ':' + nodeName\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tbuf.push('<', prefixedNodeName);\n\n\t\tfor(var i=0;i<len;i++){\n\t\t\t// add namespaces for attributes\n\t\t\tvar attr = attrs.item(i);\n\t\t\tif (attr.prefix == 'xmlns') {\n\t\t\t\tvisibleNamespaces.push({ prefix: attr.localName, namespace: attr.value });\n\t\t\t}else if(attr.nodeName == 'xmlns'){\n\t\t\t\tvisibleNamespaces.push({ prefix: '', namespace: attr.value });\n\t\t\t}\n\t\t}\n\n\t\tfor(var i=0;i<len;i++){\n\t\t\tvar attr = attrs.item(i);\n\t\t\tif (needNamespaceDefine(attr,isHTML, visibleNamespaces)) {\n\t\t\t\tvar prefix = attr.prefix||'';\n\t\t\t\tvar uri = attr.namespaceURI;\n\t\t\t\taddSerializedAttribute(buf, prefix ? 'xmlns:' + prefix : \"xmlns\", uri);\n\t\t\t\tvisibleNamespaces.push({ prefix: prefix, namespace:uri });\n\t\t\t}\n\t\t\tserializeToString(attr,buf,isHTML,nodeFilter,visibleNamespaces);\n\t\t}\n\n\t\t// add namespace for current node\n\t\tif (nodeName === prefixedNodeName && needNamespaceDefine(node, isHTML, visibleNamespaces)) {\n\t\t\tvar prefix = node.prefix||'';\n\t\t\tvar uri = node.namespaceURI;\n\t\t\taddSerializedAttribute(buf, prefix ? 'xmlns:' + prefix : \"xmlns\", uri);\n\t\t\tvisibleNamespaces.push({ prefix: prefix, namespace:uri });\n\t\t}\n\n\t\tif(child || isHTML && !/^(?:meta|link|img|br|hr|input)$/i.test(nodeName)){\n\t\t\tbuf.push('>');\n\t\t\t//if is cdata child node\n\t\t\tif(isHTML && /^script$/i.test(nodeName)){\n\t\t\t\twhile(child){\n\t\t\t\t\tif(child.data){\n\t\t\t\t\t\tbuf.push(child.data);\n\t\t\t\t\t}else{\n\t\t\t\t\t\tserializeToString(child, buf, isHTML, nodeFilter, visibleNamespaces.slice());\n\t\t\t\t\t}\n\t\t\t\t\tchild = child.nextSibling;\n\t\t\t\t}\n\t\t\t}else\n\t\t\t{\n\t\t\t\twhile(child){\n\t\t\t\t\tserializeToString(child, buf, isHTML, nodeFilter, visibleNamespaces.slice());\n\t\t\t\t\tchild = child.nextSibling;\n\t\t\t\t}\n\t\t\t}\n\t\t\tbuf.push('</',prefixedNodeName,'>');\n\t\t}else{\n\t\t\tbuf.push('/>');\n\t\t}\n\t\t// remove added visible namespaces\n\t\t//visibleNamespaces.length = startVisibleNamespaces;\n\t\treturn;\n\tcase DOCUMENT_NODE:\n\tcase DOCUMENT_FRAGMENT_NODE:\n\t\tvar child = node.firstChild;\n\t\twhile(child){\n\t\t\tserializeToString(child, buf, isHTML, nodeFilter, visibleNamespaces.slice());\n\t\t\tchild = child.nextSibling;\n\t\t}\n\t\treturn;\n\tcase ATTRIBUTE_NODE:\n\t\treturn addSerializedAttribute(buf, node.name, node.value);\n\tcase TEXT_NODE:\n\t\t/**\n\t\t * The ampersand character (&) and the left angle bracket (<) must not appear in their literal form,\n\t\t * except when used as markup delimiters, or within a comment, a processing instruction, or a CDATA section.\n\t\t * If they are needed elsewhere, they must be escaped using either numeric character references or the strings\n\t\t * `&amp;` and `&lt;` respectively.\n\t\t * The right angle bracket (>) may be represented using the string \" &gt; \", and must, for compatibility,\n\t\t * be escaped using either `&gt;` or a character reference when it appears in the string `]]>` in content,\n\t\t * when that string is not marking the end of a CDATA section.\n\t\t *\n\t\t * In the content of elements, character data is any string of characters\n\t\t * which does not contain the start-delimiter of any markup\n\t\t * and does not include the CDATA-section-close delimiter, `]]>`.\n\t\t *\n\t\t * @see https://www.w3.org/TR/xml/#NT-CharData\n\t\t * @see https://w3c.github.io/DOM-Parsing/#xml-serializing-a-text-node\n\t\t */\n\t\treturn buf.push(node.data\n\t\t\t.replace(/[<&>]/g,_xmlEncoder)\n\t\t);\n\tcase CDATA_SECTION_NODE:\n\t\treturn buf.push( '<![CDATA[',node.data,']]>');\n\tcase COMMENT_NODE:\n\t\treturn buf.push( \"<!--\",node.data,\"-->\");\n\tcase DOCUMENT_TYPE_NODE:\n\t\tvar pubid = node.publicId;\n\t\tvar sysid = node.systemId;\n\t\tbuf.push('<!DOCTYPE ',node.name);\n\t\tif(pubid){\n\t\t\tbuf.push(' PUBLIC ', pubid);\n\t\t\tif (sysid && sysid!='.') {\n\t\t\t\tbuf.push(' ', sysid);\n\t\t\t}\n\t\t\tbuf.push('>');\n\t\t}else if(sysid && sysid!='.'){\n\t\t\tbuf.push(' SYSTEM ', sysid, '>');\n\t\t}else{\n\t\t\tvar sub = node.internalSubset;\n\t\t\tif(sub){\n\t\t\t\tbuf.push(\" [\",sub,\"]\");\n\t\t\t}\n\t\t\tbuf.push(\">\");\n\t\t}\n\t\treturn;\n\tcase PROCESSING_INSTRUCTION_NODE:\n\t\treturn buf.push( \"<?\",node.target,\" \",node.data,\"?>\");\n\tcase ENTITY_REFERENCE_NODE:\n\t\treturn buf.push( '&',node.nodeName,';');\n\t//case ENTITY_NODE:\n\t//case NOTATION_NODE:\n\tdefault:\n\t\tbuf.push('??',node.nodeName);\n\t}\n}\nfunction importNode(doc,node,deep){\n\tvar node2;\n\tswitch (node.nodeType) {\n\tcase ELEMENT_NODE:\n\t\tnode2 = node.cloneNode(false);\n\t\tnode2.ownerDocument = doc;\n\t\t//var attrs = node2.attributes;\n\t\t//var len = attrs.length;\n\t\t//for(var i=0;i<len;i++){\n\t\t\t//node2.setAttributeNodeNS(importNode(doc,attrs.item(i),deep));\n\t\t//}\n\tcase DOCUMENT_FRAGMENT_NODE:\n\t\tbreak;\n\tcase ATTRIBUTE_NODE:\n\t\tdeep = true;\n\t\tbreak;\n\t//case ENTITY_REFERENCE_NODE:\n\t//case PROCESSING_INSTRUCTION_NODE:\n\t////case TEXT_NODE:\n\t//case CDATA_SECTION_NODE:\n\t//case COMMENT_NODE:\n\t//\tdeep = false;\n\t//\tbreak;\n\t//case DOCUMENT_NODE:\n\t//case DOCUMENT_TYPE_NODE:\n\t//cannot be imported.\n\t//case ENTITY_NODE:\n\t//case NOTATION_NODE：\n\t//can not hit in level3\n\t//default:throw e;\n\t}\n\tif(!node2){\n\t\tnode2 = node.cloneNode(false);//false\n\t}\n\tnode2.ownerDocument = doc;\n\tnode2.parentNode = null;\n\tif(deep){\n\t\tvar child = node.firstChild;\n\t\twhile(child){\n\t\t\tnode2.appendChild(importNode(doc,child,deep));\n\t\t\tchild = child.nextSibling;\n\t\t}\n\t}\n\treturn node2;\n}\n//\n//var _relationMap = {firstChild:1,lastChild:1,previousSibling:1,nextSibling:1,\n//\t\t\t\t\tattributes:1,childNodes:1,parentNode:1,documentElement:1,doctype,};\nfunction cloneNode(doc,node,deep){\n\tvar node2 = new node.constructor();\n\tfor (var n in node) {\n\t\tif (Object.prototype.hasOwnProperty.call(node, n)) {\n\t\t\tvar v = node[n];\n\t\t\tif (typeof v != \"object\") {\n\t\t\t\tif (v != node2[n]) {\n\t\t\t\t\tnode2[n] = v;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tif(node.childNodes){\n\t\tnode2.childNodes = new NodeList();\n\t}\n\tnode2.ownerDocument = doc;\n\tswitch (node2.nodeType) {\n\tcase ELEMENT_NODE:\n\t\tvar attrs\t= node.attributes;\n\t\tvar attrs2\t= node2.attributes = new NamedNodeMap();\n\t\tvar len = attrs.length\n\t\tattrs2._ownerElement = node2;\n\t\tfor(var i=0;i<len;i++){\n\t\t\tnode2.setAttributeNode(cloneNode(doc,attrs.item(i),true));\n\t\t}\n\t\tbreak;;\n\tcase ATTRIBUTE_NODE:\n\t\tdeep = true;\n\t}\n\tif(deep){\n\t\tvar child = node.firstChild;\n\t\twhile(child){\n\t\t\tnode2.appendChild(cloneNode(doc,child,deep));\n\t\t\tchild = child.nextSibling;\n\t\t}\n\t}\n\treturn node2;\n}\n\nfunction __set__(object,key,value){\n\tobject[key] = value\n}\n//do dynamic\ntry{\n\tif(Object.defineProperty){\n\t\tObject.defineProperty(LiveNodeList.prototype,'length',{\n\t\t\tget:function(){\n\t\t\t\t_updateLiveList(this);\n\t\t\t\treturn this.$$length;\n\t\t\t}\n\t\t});\n\n\t\tObject.defineProperty(Node.prototype,'textContent',{\n\t\t\tget:function(){\n\t\t\t\treturn getTextContent(this);\n\t\t\t},\n\n\t\t\tset:function(data){\n\t\t\t\tswitch(this.nodeType){\n\t\t\t\tcase ELEMENT_NODE:\n\t\t\t\tcase DOCUMENT_FRAGMENT_NODE:\n\t\t\t\t\twhile(this.firstChild){\n\t\t\t\t\t\tthis.removeChild(this.firstChild);\n\t\t\t\t\t}\n\t\t\t\t\tif(data || String(data)){\n\t\t\t\t\t\tthis.appendChild(this.ownerDocument.createTextNode(data));\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tthis.data = data;\n\t\t\t\t\tthis.value = data;\n\t\t\t\t\tthis.nodeValue = data;\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\n\t\tfunction getTextContent(node){\n\t\t\tswitch(node.nodeType){\n\t\t\tcase ELEMENT_NODE:\n\t\t\tcase DOCUMENT_FRAGMENT_NODE:\n\t\t\t\tvar buf = [];\n\t\t\t\tnode = node.firstChild;\n\t\t\t\twhile(node){\n\t\t\t\t\tif(node.nodeType!==7 && node.nodeType !==8){\n\t\t\t\t\t\tbuf.push(getTextContent(node));\n\t\t\t\t\t}\n\t\t\t\t\tnode = node.nextSibling;\n\t\t\t\t}\n\t\t\t\treturn buf.join('');\n\t\t\tdefault:\n\t\t\t\treturn node.nodeValue;\n\t\t\t}\n\t\t}\n\n\t\t__set__ = function(object,key,value){\n\t\t\t//console.log(value)\n\t\t\tobject['$$'+key] = value\n\t\t}\n\t}\n}catch(e){//ie8\n}\n\n//if(typeof require == 'function'){\n\texports.DocumentType = DocumentType;\n\texports.DOMException = DOMException;\n\texports.DOMImplementation = DOMImplementation;\n\texports.Element = Element;\n\texports.Node = Node;\n\texports.NodeList = NodeList;\n\texports.XMLSerializer = XMLSerializer;\n//}\n", "'use strict';\n\nvar freeze = require('./conventions').freeze;\n\n/**\n * The entities that are predefined in every XML document.\n *\n * @see https://www.w3.org/TR/2006/REC-xml11-20060816/#sec-predefined-ent W3C XML 1.1\n * @see https://www.w3.org/TR/2008/REC-xml-20081126/#sec-predefined-ent W3C XML 1.0\n * @see https://en.wikipedia.org/wiki/List_of_XML_and_HTML_character_entity_references#Predefined_entities_in_XML Wikipedia\n */\nexports.XML_ENTITIES = freeze({\n\tamp: '&',\n\tapos: \"'\",\n\tgt: '>',\n\tlt: '<',\n\tquot: '\"',\n});\n\n/**\n * A map of all entities that are detected in an HTML document.\n * They contain all entries from `XML_ENTITIES`.\n *\n * @see XML_ENTITIES\n * @see DOMParser.parseFromString\n * @see DOMImplementation.prototype.createHTMLDocument\n * @see https://html.spec.whatwg.org/#named-character-references WHATWG HTML(5) Spec\n * @see https://html.spec.whatwg.org/entities.json JSON\n * @see https://www.w3.org/TR/xml-entity-names/ W3C XML Entity Names\n * @see https://www.w3.org/TR/html4/sgml/entities.html W3C HTML4/SGML\n * @see https://en.wikipedia.org/wiki/List_of_XML_and_HTML_character_entity_references#Character_entity_references_in_HTML Wikipedia (HTML)\n * @see https://en.wikipedia.org/wiki/List_of_XML_and_HTML_character_entity_references#Entities_representing_special_characters_in_XHTML Wikpedia (XHTML)\n */\nexports.HTML_ENTITIES = freeze({\n\tAacute: '\\u00C1',\n\taacute: '\\u00E1',\n\tAbreve: '\\u0102',\n\tabreve: '\\u0103',\n\tac: '\\u223E',\n\tacd: '\\u223F',\n\tacE: '\\u223E\\u0333',\n\tAcirc: '\\u00C2',\n\tacirc: '\\u00E2',\n\tacute: '\\u00B4',\n\tAcy: '\\u0410',\n\tacy: '\\u0430',\n\tAElig: '\\u00C6',\n\taelig: '\\u00E6',\n\taf: '\\u2061',\n\tAfr: '\\uD835\\uDD04',\n\tafr: '\\uD835\\uDD1E',\n\tAgrave: '\\u00C0',\n\tagrave: '\\u00E0',\n\talefsym: '\\u2135',\n\taleph: '\\u2135',\n\tAlpha: '\\u0391',\n\talpha: '\\u03B1',\n\tAmacr: '\\u0100',\n\tamacr: '\\u0101',\n\tamalg: '\\u2A3F',\n\tAMP: '\\u0026',\n\tamp: '\\u0026',\n\tAnd: '\\u2A53',\n\tand: '\\u2227',\n\tandand: '\\u2A55',\n\tandd: '\\u2A5C',\n\tandslope: '\\u2A58',\n\tandv: '\\u2A5A',\n\tang: '\\u2220',\n\tange: '\\u29A4',\n\tangle: '\\u2220',\n\tangmsd: '\\u2221',\n\tangmsdaa: '\\u29A8',\n\tangmsdab: '\\u29A9',\n\tangmsdac: '\\u29AA',\n\tangmsdad: '\\u29AB',\n\tangmsdae: '\\u29AC',\n\tangmsdaf: '\\u29AD',\n\tangmsdag: '\\u29AE',\n\tangmsdah: '\\u29AF',\n\tangrt: '\\u221F',\n\tangrtvb: '\\u22BE',\n\tangrtvbd: '\\u299D',\n\tangsph: '\\u2222',\n\tangst: '\\u00C5',\n\tangzarr: '\\u237C',\n\tAogon: '\\u0104',\n\taogon: '\\u0105',\n\tAopf: '\\uD835\\uDD38',\n\taopf: '\\uD835\\uDD52',\n\tap: '\\u2248',\n\tapacir: '\\u2A6F',\n\tapE: '\\u2A70',\n\tape: '\\u224A',\n\tapid: '\\u224B',\n\tapos: '\\u0027',\n\tApplyFunction: '\\u2061',\n\tapprox: '\\u2248',\n\tapproxeq: '\\u224A',\n\tAring: '\\u00C5',\n\taring: '\\u00E5',\n\tAscr: '\\uD835\\uDC9C',\n\tascr: '\\uD835\\uDCB6',\n\tAssign: '\\u2254',\n\tast: '\\u002A',\n\tasymp: '\\u2248',\n\tasympeq: '\\u224D',\n\tAtilde: '\\u00C3',\n\tatilde: '\\u00E3',\n\tAuml: '\\u00C4',\n\tauml: '\\u00E4',\n\tawconint: '\\u2233',\n\tawint: '\\u2A11',\n\tbackcong: '\\u224C',\n\tbackepsilon: '\\u03F6',\n\tbackprime: '\\u2035',\n\tbacksim: '\\u223D',\n\tbacksimeq: '\\u22CD',\n\tBackslash: '\\u2216',\n\tBarv: '\\u2AE7',\n\tbarvee: '\\u22BD',\n\tBarwed: '\\u2306',\n\tbarwed: '\\u2305',\n\tbarwedge: '\\u2305',\n\tbbrk: '\\u23B5',\n\tbbrktbrk: '\\u23B6',\n\tbcong: '\\u224C',\n\tBcy: '\\u0411',\n\tbcy: '\\u0431',\n\tbdquo: '\\u201E',\n\tbecaus: '\\u2235',\n\tBecause: '\\u2235',\n\tbecause: '\\u2235',\n\tbemptyv: '\\u29B0',\n\tbepsi: '\\u03F6',\n\tbernou: '\\u212C',\n\tBernoullis: '\\u212C',\n\tBeta: '\\u0392',\n\tbeta: '\\u03B2',\n\tbeth: '\\u2136',\n\tbetween: '\\u226C',\n\tBfr: '\\uD835\\uDD05',\n\tbfr: '\\uD835\\uDD1F',\n\tbigcap: '\\u22C2',\n\tbigcirc: '\\u25EF',\n\tbigcup: '\\u22C3',\n\tbigodot: '\\u2A00',\n\tbigoplus: '\\u2A01',\n\tbigotimes: '\\u2A02',\n\tbigsqcup: '\\u2A06',\n\tbigstar: '\\u2605',\n\tbigtriangledown: '\\u25BD',\n\tbigtriangleup: '\\u25B3',\n\tbiguplus: '\\u2A04',\n\tbigvee: '\\u22C1',\n\tbigwedge: '\\u22C0',\n\tbkarow: '\\u290D',\n\tblacklozenge: '\\u29EB',\n\tblacksquare: '\\u25AA',\n\tblacktriangle: '\\u25B4',\n\tblacktriangledown: '\\u25BE',\n\tblacktriangleleft: '\\u25C2',\n\tblacktriangleright: '\\u25B8',\n\tblank: '\\u2423',\n\tblk12: '\\u2592',\n\tblk14: '\\u2591',\n\tblk34: '\\u2593',\n\tblock: '\\u2588',\n\tbne: '\\u003D\\u20E5',\n\tbnequiv: '\\u2261\\u20E5',\n\tbNot: '\\u2AED',\n\tbnot: '\\u2310',\n\tBopf: '\\uD835\\uDD39',\n\tbopf: '\\uD835\\uDD53',\n\tbot: '\\u22A5',\n\tbottom: '\\u22A5',\n\tbowtie: '\\u22C8',\n\tboxbox: '\\u29C9',\n\tboxDL: '\\u2557',\n\tboxDl: '\\u2556',\n\tboxdL: '\\u2555',\n\tboxdl: '\\u2510',\n\tboxDR: '\\u2554',\n\tboxDr: '\\u2553',\n\tboxdR: '\\u2552',\n\tboxdr: '\\u250C',\n\tboxH: '\\u2550',\n\tboxh: '\\u2500',\n\tboxHD: '\\u2566',\n\tboxHd: '\\u2564',\n\tboxhD: '\\u2565',\n\tboxhd: '\\u252C',\n\tboxHU: '\\u2569',\n\tboxHu: '\\u2567',\n\tboxhU: '\\u2568',\n\tboxhu: '\\u2534',\n\tboxminus: '\\u229F',\n\tboxplus: '\\u229E',\n\tboxtimes: '\\u22A0',\n\tboxUL: '\\u255D',\n\tboxUl: '\\u255C',\n\tboxuL: '\\u255B',\n\tboxul: '\\u2518',\n\tboxUR: '\\u255A',\n\tboxUr: '\\u2559',\n\tboxuR: '\\u2558',\n\tboxur: '\\u2514',\n\tboxV: '\\u2551',\n\tboxv: '\\u2502',\n\tboxVH: '\\u256C',\n\tboxVh: '\\u256B',\n\tboxvH: '\\u256A',\n\tboxvh: '\\u253C',\n\tboxVL: '\\u2563',\n\tboxVl: '\\u2562',\n\tboxvL: '\\u2561',\n\tboxvl: '\\u2524',\n\tboxVR: '\\u2560',\n\tboxVr: '\\u255F',\n\tboxvR: '\\u255E',\n\tboxvr: '\\u251C',\n\tbprime: '\\u2035',\n\tBreve: '\\u02D8',\n\tbreve: '\\u02D8',\n\tbrvbar: '\\u00A6',\n\tBscr: '\\u212C',\n\tbscr: '\\uD835\\uDCB7',\n\tbsemi: '\\u204F',\n\tbsim: '\\u223D',\n\tbsime: '\\u22CD',\n\tbsol: '\\u005C',\n\tbsolb: '\\u29C5',\n\tbsolhsub: '\\u27C8',\n\tbull: '\\u2022',\n\tbullet: '\\u2022',\n\tbump: '\\u224E',\n\tbumpE: '\\u2AAE',\n\tbumpe: '\\u224F',\n\tBumpeq: '\\u224E',\n\tbumpeq: '\\u224F',\n\tCacute: '\\u0106',\n\tcacute: '\\u0107',\n\tCap: '\\u22D2',\n\tcap: '\\u2229',\n\tcapand: '\\u2A44',\n\tcapbrcup: '\\u2A49',\n\tcapcap: '\\u2A4B',\n\tcapcup: '\\u2A47',\n\tcapdot: '\\u2A40',\n\tCapitalDifferentialD: '\\u2145',\n\tcaps: '\\u2229\\uFE00',\n\tcaret: '\\u2041',\n\tcaron: '\\u02C7',\n\tCayleys: '\\u212D',\n\tccaps: '\\u2A4D',\n\tCcaron: '\\u010C',\n\tccaron: '\\u010D',\n\tCcedil: '\\u00C7',\n\tccedil: '\\u00E7',\n\tCcirc: '\\u0108',\n\tccirc: '\\u0109',\n\tCconint: '\\u2230',\n\tccups: '\\u2A4C',\n\tccupssm: '\\u2A50',\n\tCdot: '\\u010A',\n\tcdot: '\\u010B',\n\tcedil: '\\u00B8',\n\tCedilla: '\\u00B8',\n\tcemptyv: '\\u29B2',\n\tcent: '\\u00A2',\n\tCenterDot: '\\u00B7',\n\tcenterdot: '\\u00B7',\n\tCfr: '\\u212D',\n\tcfr: '\\uD835\\uDD20',\n\tCHcy: '\\u0427',\n\tchcy: '\\u0447',\n\tcheck: '\\u2713',\n\tcheckmark: '\\u2713',\n\tChi: '\\u03A7',\n\tchi: '\\u03C7',\n\tcir: '\\u25CB',\n\tcirc: '\\u02C6',\n\tcirceq: '\\u2257',\n\tcirclearrowleft: '\\u21BA',\n\tcirclearrowright: '\\u21BB',\n\tcircledast: '\\u229B',\n\tcircledcirc: '\\u229A',\n\tcircleddash: '\\u229D',\n\tCircleDot: '\\u2299',\n\tcircledR: '\\u00AE',\n\tcircledS: '\\u24C8',\n\tCircleMinus: '\\u2296',\n\tCirclePlus: '\\u2295',\n\tCircleTimes: '\\u2297',\n\tcirE: '\\u29C3',\n\tcire: '\\u2257',\n\tcirfnint: '\\u2A10',\n\tcirmid: '\\u2AEF',\n\tcirscir: '\\u29C2',\n\tClockwiseContourIntegral: '\\u2232',\n\tCloseCurlyDoubleQuote: '\\u201D',\n\tCloseCurlyQuote: '\\u2019',\n\tclubs: '\\u2663',\n\tclubsuit: '\\u2663',\n\tColon: '\\u2237',\n\tcolon: '\\u003A',\n\tColone: '\\u2A74',\n\tcolone: '\\u2254',\n\tcoloneq: '\\u2254',\n\tcomma: '\\u002C',\n\tcommat: '\\u0040',\n\tcomp: '\\u2201',\n\tcompfn: '\\u2218',\n\tcomplement: '\\u2201',\n\tcomplexes: '\\u2102',\n\tcong: '\\u2245',\n\tcongdot: '\\u2A6D',\n\tCongruent: '\\u2261',\n\tConint: '\\u222F',\n\tconint: '\\u222E',\n\tContourIntegral: '\\u222E',\n\tCopf: '\\u2102',\n\tcopf: '\\uD835\\uDD54',\n\tcoprod: '\\u2210',\n\tCoproduct: '\\u2210',\n\tCOPY: '\\u00A9',\n\tcopy: '\\u00A9',\n\tcopysr: '\\u2117',\n\tCounterClockwiseContourIntegral: '\\u2233',\n\tcrarr: '\\u21B5',\n\tCross: '\\u2A2F',\n\tcross: '\\u2717',\n\tCscr: '\\uD835\\uDC9E',\n\tcscr: '\\uD835\\uDCB8',\n\tcsub: '\\u2ACF',\n\tcsube: '\\u2AD1',\n\tcsup: '\\u2AD0',\n\tcsupe: '\\u2AD2',\n\tctdot: '\\u22EF',\n\tcudarrl: '\\u2938',\n\tcudarrr: '\\u2935',\n\tcuepr: '\\u22DE',\n\tcuesc: '\\u22DF',\n\tcularr: '\\u21B6',\n\tcularrp: '\\u293D',\n\tCup: '\\u22D3',\n\tcup: '\\u222A',\n\tcupbrcap: '\\u2A48',\n\tCupCap: '\\u224D',\n\tcupcap: '\\u2A46',\n\tcupcup: '\\u2A4A',\n\tcupdot: '\\u228D',\n\tcupor: '\\u2A45',\n\tcups: '\\u222A\\uFE00',\n\tcurarr: '\\u21B7',\n\tcurarrm: '\\u293C',\n\tcurlyeqprec: '\\u22DE',\n\tcurlyeqsucc: '\\u22DF',\n\tcurlyvee: '\\u22CE',\n\tcurlywedge: '\\u22CF',\n\tcurren: '\\u00A4',\n\tcurvearrowleft: '\\u21B6',\n\tcurvearrowright: '\\u21B7',\n\tcuvee: '\\u22CE',\n\tcuwed: '\\u22CF',\n\tcwconint: '\\u2232',\n\tcwint: '\\u2231',\n\tcylcty: '\\u232D',\n\tDagger: '\\u2021',\n\tdagger: '\\u2020',\n\tdaleth: '\\u2138',\n\tDarr: '\\u21A1',\n\tdArr: '\\u21D3',\n\tdarr: '\\u2193',\n\tdash: '\\u2010',\n\tDashv: '\\u2AE4',\n\tdashv: '\\u22A3',\n\tdbkarow: '\\u290F',\n\tdblac: '\\u02DD',\n\tDcaron: '\\u010E',\n\tdcaron: '\\u010F',\n\tDcy: '\\u0414',\n\tdcy: '\\u0434',\n\tDD: '\\u2145',\n\tdd: '\\u2146',\n\tddagger: '\\u2021',\n\tddarr: '\\u21CA',\n\tDDotrahd: '\\u2911',\n\tddotseq: '\\u2A77',\n\tdeg: '\\u00B0',\n\tDel: '\\u2207',\n\tDelta: '\\u0394',\n\tdelta: '\\u03B4',\n\tdemptyv: '\\u29B1',\n\tdfisht: '\\u297F',\n\tDfr: '\\uD835\\uDD07',\n\tdfr: '\\uD835\\uDD21',\n\tdHar: '\\u2965',\n\tdharl: '\\u21C3',\n\tdharr: '\\u21C2',\n\tDiacriticalAcute: '\\u00B4',\n\tDiacriticalDot: '\\u02D9',\n\tDiacriticalDoubleAcute: '\\u02DD',\n\tDiacriticalGrave: '\\u0060',\n\tDiacriticalTilde: '\\u02DC',\n\tdiam: '\\u22C4',\n\tDiamond: '\\u22C4',\n\tdiamond: '\\u22C4',\n\tdiamondsuit: '\\u2666',\n\tdiams: '\\u2666',\n\tdie: '\\u00A8',\n\tDifferentialD: '\\u2146',\n\tdigamma: '\\u03DD',\n\tdisin: '\\u22F2',\n\tdiv: '\\u00F7',\n\tdivide: '\\u00F7',\n\tdivideontimes: '\\u22C7',\n\tdivonx: '\\u22C7',\n\tDJcy: '\\u0402',\n\tdjcy: '\\u0452',\n\tdlcorn: '\\u231E',\n\tdlcrop: '\\u230D',\n\tdollar: '\\u0024',\n\tDopf: '\\uD835\\uDD3B',\n\tdopf: '\\uD835\\uDD55',\n\tDot: '\\u00A8',\n\tdot: '\\u02D9',\n\tDotDot: '\\u20DC',\n\tdoteq: '\\u2250',\n\tdoteqdot: '\\u2251',\n\tDotEqual: '\\u2250',\n\tdotminus: '\\u2238',\n\tdotplus: '\\u2214',\n\tdotsquare: '\\u22A1',\n\tdoublebarwedge: '\\u2306',\n\tDoubleContourIntegral: '\\u222F',\n\tDoubleDot: '\\u00A8',\n\tDoubleDownArrow: '\\u21D3',\n\tDoubleLeftArrow: '\\u21D0',\n\tDoubleLeftRightArrow: '\\u21D4',\n\tDoubleLeftTee: '\\u2AE4',\n\tDoubleLongLeftArrow: '\\u27F8',\n\tDoubleLongLeftRightArrow: '\\u27FA',\n\tDoubleLongRightArrow: '\\u27F9',\n\tDoubleRightArrow: '\\u21D2',\n\tDoubleRightTee: '\\u22A8',\n\tDoubleUpArrow: '\\u21D1',\n\tDoubleUpDownArrow: '\\u21D5',\n\tDoubleVerticalBar: '\\u2225',\n\tDownArrow: '\\u2193',\n\tDownarrow: '\\u21D3',\n\tdownarrow: '\\u2193',\n\tDownArrowBar: '\\u2913',\n\tDownArrowUpArrow: '\\u21F5',\n\tDownBreve: '\\u0311',\n\tdowndownarrows: '\\u21CA',\n\tdownharpoonleft: '\\u21C3',\n\tdownharpoonright: '\\u21C2',\n\tDownLeftRightVector: '\\u2950',\n\tDownLeftTeeVector: '\\u295E',\n\tDownLeftVector: '\\u21BD',\n\tDownLeftVectorBar: '\\u2956',\n\tDownRightTeeVector: '\\u295F',\n\tDownRightVector: '\\u21C1',\n\tDownRightVectorBar: '\\u2957',\n\tDownTee: '\\u22A4',\n\tDownTeeArrow: '\\u21A7',\n\tdrbkarow: '\\u2910',\n\tdrcorn: '\\u231F',\n\tdrcrop: '\\u230C',\n\tDscr: '\\uD835\\uDC9F',\n\tdscr: '\\uD835\\uDCB9',\n\tDScy: '\\u0405',\n\tdscy: '\\u0455',\n\tdsol: '\\u29F6',\n\tDstrok: '\\u0110',\n\tdstrok: '\\u0111',\n\tdtdot: '\\u22F1',\n\tdtri: '\\u25BF',\n\tdtrif: '\\u25BE',\n\tduarr: '\\u21F5',\n\tduhar: '\\u296F',\n\tdwangle: '\\u29A6',\n\tDZcy: '\\u040F',\n\tdzcy: '\\u045F',\n\tdzigrarr: '\\u27FF',\n\tEacute: '\\u00C9',\n\teacute: '\\u00E9',\n\teaster: '\\u2A6E',\n\tEcaron: '\\u011A',\n\tecaron: '\\u011B',\n\tecir: '\\u2256',\n\tEcirc: '\\u00CA',\n\tecirc: '\\u00EA',\n\tecolon: '\\u2255',\n\tEcy: '\\u042D',\n\tecy: '\\u044D',\n\teDDot: '\\u2A77',\n\tEdot: '\\u0116',\n\teDot: '\\u2251',\n\tedot: '\\u0117',\n\tee: '\\u2147',\n\tefDot: '\\u2252',\n\tEfr: '\\uD835\\uDD08',\n\tefr: '\\uD835\\uDD22',\n\teg: '\\u2A9A',\n\tEgrave: '\\u00C8',\n\tegrave: '\\u00E8',\n\tegs: '\\u2A96',\n\tegsdot: '\\u2A98',\n\tel: '\\u2A99',\n\tElement: '\\u2208',\n\telinters: '\\u23E7',\n\tell: '\\u2113',\n\tels: '\\u2A95',\n\telsdot: '\\u2A97',\n\tEmacr: '\\u0112',\n\temacr: '\\u0113',\n\tempty: '\\u2205',\n\temptyset: '\\u2205',\n\tEmptySmallSquare: '\\u25FB',\n\temptyv: '\\u2205',\n\tEmptyVerySmallSquare: '\\u25AB',\n\temsp: '\\u2003',\n\temsp13: '\\u2004',\n\temsp14: '\\u2005',\n\tENG: '\\u014A',\n\teng: '\\u014B',\n\tensp: '\\u2002',\n\tEogon: '\\u0118',\n\teogon: '\\u0119',\n\tEopf: '\\uD835\\uDD3C',\n\teopf: '\\uD835\\uDD56',\n\tepar: '\\u22D5',\n\teparsl: '\\u29E3',\n\teplus: '\\u2A71',\n\tepsi: '\\u03B5',\n\tEpsilon: '\\u0395',\n\tepsilon: '\\u03B5',\n\tepsiv: '\\u03F5',\n\teqcirc: '\\u2256',\n\teqcolon: '\\u2255',\n\teqsim: '\\u2242',\n\teqslantgtr: '\\u2A96',\n\teqslantless: '\\u2A95',\n\tEqual: '\\u2A75',\n\tequals: '\\u003D',\n\tEqualTilde: '\\u2242',\n\tequest: '\\u225F',\n\tEquilibrium: '\\u21CC',\n\tequiv: '\\u2261',\n\tequivDD: '\\u2A78',\n\teqvparsl: '\\u29E5',\n\terarr: '\\u2971',\n\terDot: '\\u2253',\n\tEscr: '\\u2130',\n\tescr: '\\u212F',\n\tesdot: '\\u2250',\n\tEsim: '\\u2A73',\n\tesim: '\\u2242',\n\tEta: '\\u0397',\n\teta: '\\u03B7',\n\tETH: '\\u00D0',\n\teth: '\\u00F0',\n\tEuml: '\\u00CB',\n\teuml: '\\u00EB',\n\teuro: '\\u20AC',\n\texcl: '\\u0021',\n\texist: '\\u2203',\n\tExists: '\\u2203',\n\texpectation: '\\u2130',\n\tExponentialE: '\\u2147',\n\texponentiale: '\\u2147',\n\tfallingdotseq: '\\u2252',\n\tFcy: '\\u0424',\n\tfcy: '\\u0444',\n\tfemale: '\\u2640',\n\tffilig: '\\uFB03',\n\tfflig: '\\uFB00',\n\tffllig: '\\uFB04',\n\tFfr: '\\uD835\\uDD09',\n\tffr: '\\uD835\\uDD23',\n\tfilig: '\\uFB01',\n\tFilledSmallSquare: '\\u25FC',\n\tFilledVerySmallSquare: '\\u25AA',\n\tfjlig: '\\u0066\\u006A',\n\tflat: '\\u266D',\n\tfllig: '\\uFB02',\n\tfltns: '\\u25B1',\n\tfnof: '\\u0192',\n\tFopf: '\\uD835\\uDD3D',\n\tfopf: '\\uD835\\uDD57',\n\tForAll: '\\u2200',\n\tforall: '\\u2200',\n\tfork: '\\u22D4',\n\tforkv: '\\u2AD9',\n\tFouriertrf: '\\u2131',\n\tfpartint: '\\u2A0D',\n\tfrac12: '\\u00BD',\n\tfrac13: '\\u2153',\n\tfrac14: '\\u00BC',\n\tfrac15: '\\u2155',\n\tfrac16: '\\u2159',\n\tfrac18: '\\u215B',\n\tfrac23: '\\u2154',\n\tfrac25: '\\u2156',\n\tfrac34: '\\u00BE',\n\tfrac35: '\\u2157',\n\tfrac38: '\\u215C',\n\tfrac45: '\\u2158',\n\tfrac56: '\\u215A',\n\tfrac58: '\\u215D',\n\tfrac78: '\\u215E',\n\tfrasl: '\\u2044',\n\tfrown: '\\u2322',\n\tFscr: '\\u2131',\n\tfscr: '\\uD835\\uDCBB',\n\tgacute: '\\u01F5',\n\tGamma: '\\u0393',\n\tgamma: '\\u03B3',\n\tGammad: '\\u03DC',\n\tgammad: '\\u03DD',\n\tgap: '\\u2A86',\n\tGbreve: '\\u011E',\n\tgbreve: '\\u011F',\n\tGcedil: '\\u0122',\n\tGcirc: '\\u011C',\n\tgcirc: '\\u011D',\n\tGcy: '\\u0413',\n\tgcy: '\\u0433',\n\tGdot: '\\u0120',\n\tgdot: '\\u0121',\n\tgE: '\\u2267',\n\tge: '\\u2265',\n\tgEl: '\\u2A8C',\n\tgel: '\\u22DB',\n\tgeq: '\\u2265',\n\tgeqq: '\\u2267',\n\tgeqslant: '\\u2A7E',\n\tges: '\\u2A7E',\n\tgescc: '\\u2AA9',\n\tgesdot: '\\u2A80',\n\tgesdoto: '\\u2A82',\n\tgesdotol: '\\u2A84',\n\tgesl: '\\u22DB\\uFE00',\n\tgesles: '\\u2A94',\n\tGfr: '\\uD835\\uDD0A',\n\tgfr: '\\uD835\\uDD24',\n\tGg: '\\u22D9',\n\tgg: '\\u226B',\n\tggg: '\\u22D9',\n\tgimel: '\\u2137',\n\tGJcy: '\\u0403',\n\tgjcy: '\\u0453',\n\tgl: '\\u2277',\n\tgla: '\\u2AA5',\n\tglE: '\\u2A92',\n\tglj: '\\u2AA4',\n\tgnap: '\\u2A8A',\n\tgnapprox: '\\u2A8A',\n\tgnE: '\\u2269',\n\tgne: '\\u2A88',\n\tgneq: '\\u2A88',\n\tgneqq: '\\u2269',\n\tgnsim: '\\u22E7',\n\tGopf: '\\uD835\\uDD3E',\n\tgopf: '\\uD835\\uDD58',\n\tgrave: '\\u0060',\n\tGreaterEqual: '\\u2265',\n\tGreaterEqualLess: '\\u22DB',\n\tGreaterFullEqual: '\\u2267',\n\tGreaterGreater: '\\u2AA2',\n\tGreaterLess: '\\u2277',\n\tGreaterSlantEqual: '\\u2A7E',\n\tGreaterTilde: '\\u2273',\n\tGscr: '\\uD835\\uDCA2',\n\tgscr: '\\u210A',\n\tgsim: '\\u2273',\n\tgsime: '\\u2A8E',\n\tgsiml: '\\u2A90',\n\tGt: '\\u226B',\n\tGT: '\\u003E',\n\tgt: '\\u003E',\n\tgtcc: '\\u2AA7',\n\tgtcir: '\\u2A7A',\n\tgtdot: '\\u22D7',\n\tgtlPar: '\\u2995',\n\tgtquest: '\\u2A7C',\n\tgtrapprox: '\\u2A86',\n\tgtrarr: '\\u2978',\n\tgtrdot: '\\u22D7',\n\tgtreqless: '\\u22DB',\n\tgtreqqless: '\\u2A8C',\n\tgtrless: '\\u2277',\n\tgtrsim: '\\u2273',\n\tgvertneqq: '\\u2269\\uFE00',\n\tgvnE: '\\u2269\\uFE00',\n\tHacek: '\\u02C7',\n\thairsp: '\\u200A',\n\thalf: '\\u00BD',\n\thamilt: '\\u210B',\n\tHARDcy: '\\u042A',\n\thardcy: '\\u044A',\n\thArr: '\\u21D4',\n\tharr: '\\u2194',\n\tharrcir: '\\u2948',\n\tharrw: '\\u21AD',\n\tHat: '\\u005E',\n\thbar: '\\u210F',\n\tHcirc: '\\u0124',\n\thcirc: '\\u0125',\n\thearts: '\\u2665',\n\theartsuit: '\\u2665',\n\thellip: '\\u2026',\n\thercon: '\\u22B9',\n\tHfr: '\\u210C',\n\thfr: '\\uD835\\uDD25',\n\tHilbertSpace: '\\u210B',\n\thksearow: '\\u2925',\n\thkswarow: '\\u2926',\n\thoarr: '\\u21FF',\n\thomtht: '\\u223B',\n\thookleftarrow: '\\u21A9',\n\thookrightarrow: '\\u21AA',\n\tHopf: '\\u210D',\n\thopf: '\\uD835\\uDD59',\n\thorbar: '\\u2015',\n\tHorizontalLine: '\\u2500',\n\tHscr: '\\u210B',\n\thscr: '\\uD835\\uDCBD',\n\thslash: '\\u210F',\n\tHstrok: '\\u0126',\n\thstrok: '\\u0127',\n\tHumpDownHump: '\\u224E',\n\tHumpEqual: '\\u224F',\n\thybull: '\\u2043',\n\thyphen: '\\u2010',\n\tIacute: '\\u00CD',\n\tiacute: '\\u00ED',\n\tic: '\\u2063',\n\tIcirc: '\\u00CE',\n\ticirc: '\\u00EE',\n\tIcy: '\\u0418',\n\ticy: '\\u0438',\n\tIdot: '\\u0130',\n\tIEcy: '\\u0415',\n\tiecy: '\\u0435',\n\tiexcl: '\\u00A1',\n\tiff: '\\u21D4',\n\tIfr: '\\u2111',\n\tifr: '\\uD835\\uDD26',\n\tIgrave: '\\u00CC',\n\tigrave: '\\u00EC',\n\tii: '\\u2148',\n\tiiiint: '\\u2A0C',\n\tiiint: '\\u222D',\n\tiinfin: '\\u29DC',\n\tiiota: '\\u2129',\n\tIJlig: '\\u0132',\n\tijlig: '\\u0133',\n\tIm: '\\u2111',\n\tImacr: '\\u012A',\n\timacr: '\\u012B',\n\timage: '\\u2111',\n\tImaginaryI: '\\u2148',\n\timagline: '\\u2110',\n\timagpart: '\\u2111',\n\timath: '\\u0131',\n\timof: '\\u22B7',\n\timped: '\\u01B5',\n\tImplies: '\\u21D2',\n\tin: '\\u2208',\n\tincare: '\\u2105',\n\tinfin: '\\u221E',\n\tinfintie: '\\u29DD',\n\tinodot: '\\u0131',\n\tInt: '\\u222C',\n\tint: '\\u222B',\n\tintcal: '\\u22BA',\n\tintegers: '\\u2124',\n\tIntegral: '\\u222B',\n\tintercal: '\\u22BA',\n\tIntersection: '\\u22C2',\n\tintlarhk: '\\u2A17',\n\tintprod: '\\u2A3C',\n\tInvisibleComma: '\\u2063',\n\tInvisibleTimes: '\\u2062',\n\tIOcy: '\\u0401',\n\tiocy: '\\u0451',\n\tIogon: '\\u012E',\n\tiogon: '\\u012F',\n\tIopf: '\\uD835\\uDD40',\n\tiopf: '\\uD835\\uDD5A',\n\tIota: '\\u0399',\n\tiota: '\\u03B9',\n\tiprod: '\\u2A3C',\n\tiquest: '\\u00BF',\n\tIscr: '\\u2110',\n\tiscr: '\\uD835\\uDCBE',\n\tisin: '\\u2208',\n\tisindot: '\\u22F5',\n\tisinE: '\\u22F9',\n\tisins: '\\u22F4',\n\tisinsv: '\\u22F3',\n\tisinv: '\\u2208',\n\tit: '\\u2062',\n\tItilde: '\\u0128',\n\titilde: '\\u0129',\n\tIukcy: '\\u0406',\n\tiukcy: '\\u0456',\n\tIuml: '\\u00CF',\n\tiuml: '\\u00EF',\n\tJcirc: '\\u0134',\n\tjcirc: '\\u0135',\n\tJcy: '\\u0419',\n\tjcy: '\\u0439',\n\tJfr: '\\uD835\\uDD0D',\n\tjfr: '\\uD835\\uDD27',\n\tjmath: '\\u0237',\n\tJopf: '\\uD835\\uDD41',\n\tjopf: '\\uD835\\uDD5B',\n\tJscr: '\\uD835\\uDCA5',\n\tjscr: '\\uD835\\uDCBF',\n\tJsercy: '\\u0408',\n\tjsercy: '\\u0458',\n\tJukcy: '\\u0404',\n\tjukcy: '\\u0454',\n\tKappa: '\\u039A',\n\tkappa: '\\u03BA',\n\tkappav: '\\u03F0',\n\tKcedil: '\\u0136',\n\tkcedil: '\\u0137',\n\tKcy: '\\u041A',\n\tkcy: '\\u043A',\n\tKfr: '\\uD835\\uDD0E',\n\tkfr: '\\uD835\\uDD28',\n\tkgreen: '\\u0138',\n\tKHcy: '\\u0425',\n\tkhcy: '\\u0445',\n\tKJcy: '\\u040C',\n\tkjcy: '\\u045C',\n\tKopf: '\\uD835\\uDD42',\n\tkopf: '\\uD835\\uDD5C',\n\tKscr: '\\uD835\\uDCA6',\n\tkscr: '\\uD835\\uDCC0',\n\tlAarr: '\\u21DA',\n\tLacute: '\\u0139',\n\tlacute: '\\u013A',\n\tlaemptyv: '\\u29B4',\n\tlagran: '\\u2112',\n\tLambda: '\\u039B',\n\tlambda: '\\u03BB',\n\tLang: '\\u27EA',\n\tlang: '\\u27E8',\n\tlangd: '\\u2991',\n\tlangle: '\\u27E8',\n\tlap: '\\u2A85',\n\tLaplacetrf: '\\u2112',\n\tlaquo: '\\u00AB',\n\tLarr: '\\u219E',\n\tlArr: '\\u21D0',\n\tlarr: '\\u2190',\n\tlarrb: '\\u21E4',\n\tlarrbfs: '\\u291F',\n\tlarrfs: '\\u291D',\n\tlarrhk: '\\u21A9',\n\tlarrlp: '\\u21AB',\n\tlarrpl: '\\u2939',\n\tlarrsim: '\\u2973',\n\tlarrtl: '\\u21A2',\n\tlat: '\\u2AAB',\n\tlAtail: '\\u291B',\n\tlatail: '\\u2919',\n\tlate: '\\u2AAD',\n\tlates: '\\u2AAD\\uFE00',\n\tlBarr: '\\u290E',\n\tlbarr: '\\u290C',\n\tlbbrk: '\\u2772',\n\tlbrace: '\\u007B',\n\tlbrack: '\\u005B',\n\tlbrke: '\\u298B',\n\tlbrksld: '\\u298F',\n\tlbrkslu: '\\u298D',\n\tLcaron: '\\u013D',\n\tlcaron: '\\u013E',\n\tLcedil: '\\u013B',\n\tlcedil: '\\u013C',\n\tlceil: '\\u2308',\n\tlcub: '\\u007B',\n\tLcy: '\\u041B',\n\tlcy: '\\u043B',\n\tldca: '\\u2936',\n\tldquo: '\\u201C',\n\tldquor: '\\u201E',\n\tldrdhar: '\\u2967',\n\tldrushar: '\\u294B',\n\tldsh: '\\u21B2',\n\tlE: '\\u2266',\n\tle: '\\u2264',\n\tLeftAngleBracket: '\\u27E8',\n\tLeftArrow: '\\u2190',\n\tLeftarrow: '\\u21D0',\n\tleftarrow: '\\u2190',\n\tLeftArrowBar: '\\u21E4',\n\tLeftArrowRightArrow: '\\u21C6',\n\tleftarrowtail: '\\u21A2',\n\tLeftCeiling: '\\u2308',\n\tLeftDoubleBracket: '\\u27E6',\n\tLeftDownTeeVector: '\\u2961',\n\tLeftDownVector: '\\u21C3',\n\tLeftDownVectorBar: '\\u2959',\n\tLeftFloor: '\\u230A',\n\tleftharpoondown: '\\u21BD',\n\tleftharpoonup: '\\u21BC',\n\tleftleftarrows: '\\u21C7',\n\tLeftRightArrow: '\\u2194',\n\tLeftrightarrow: '\\u21D4',\n\tleftrightarrow: '\\u2194',\n\tleftrightarrows: '\\u21C6',\n\tleftrightharpoons: '\\u21CB',\n\tleftrightsquigarrow: '\\u21AD',\n\tLeftRightVector: '\\u294E',\n\tLeftTee: '\\u22A3',\n\tLeftTeeArrow: '\\u21A4',\n\tLeftTeeVector: '\\u295A',\n\tleftthreetimes: '\\u22CB',\n\tLeftTriangle: '\\u22B2',\n\tLeftTriangleBar: '\\u29CF',\n\tLeftTriangleEqual: '\\u22B4',\n\tLeftUpDownVector: '\\u2951',\n\tLeftUpTeeVector: '\\u2960',\n\tLeftUpVector: '\\u21BF',\n\tLeftUpVectorBar: '\\u2958',\n\tLeftVector: '\\u21BC',\n\tLeftVectorBar: '\\u2952',\n\tlEg: '\\u2A8B',\n\tleg: '\\u22DA',\n\tleq: '\\u2264',\n\tleqq: '\\u2266',\n\tleqslant: '\\u2A7D',\n\tles: '\\u2A7D',\n\tlescc: '\\u2AA8',\n\tlesdot: '\\u2A7F',\n\tlesdoto: '\\u2A81',\n\tlesdotor: '\\u2A83',\n\tlesg: '\\u22DA\\uFE00',\n\tlesges: '\\u2A93',\n\tlessapprox: '\\u2A85',\n\tlessdot: '\\u22D6',\n\tlesseqgtr: '\\u22DA',\n\tlesseqqgtr: '\\u2A8B',\n\tLessEqualGreater: '\\u22DA',\n\tLessFullEqual: '\\u2266',\n\tLessGreater: '\\u2276',\n\tlessgtr: '\\u2276',\n\tLessLess: '\\u2AA1',\n\tlesssim: '\\u2272',\n\tLessSlantEqual: '\\u2A7D',\n\tLessTilde: '\\u2272',\n\tlfisht: '\\u297C',\n\tlfloor: '\\u230A',\n\tLfr: '\\uD835\\uDD0F',\n\tlfr: '\\uD835\\uDD29',\n\tlg: '\\u2276',\n\tlgE: '\\u2A91',\n\tlHar: '\\u2962',\n\tlhard: '\\u21BD',\n\tlharu: '\\u21BC',\n\tlharul: '\\u296A',\n\tlhblk: '\\u2584',\n\tLJcy: '\\u0409',\n\tljcy: '\\u0459',\n\tLl: '\\u22D8',\n\tll: '\\u226A',\n\tllarr: '\\u21C7',\n\tllcorner: '\\u231E',\n\tLleftarrow: '\\u21DA',\n\tllhard: '\\u296B',\n\tlltri: '\\u25FA',\n\tLmidot: '\\u013F',\n\tlmidot: '\\u0140',\n\tlmoust: '\\u23B0',\n\tlmoustache: '\\u23B0',\n\tlnap: '\\u2A89',\n\tlnapprox: '\\u2A89',\n\tlnE: '\\u2268',\n\tlne: '\\u2A87',\n\tlneq: '\\u2A87',\n\tlneqq: '\\u2268',\n\tlnsim: '\\u22E6',\n\tloang: '\\u27EC',\n\tloarr: '\\u21FD',\n\tlobrk: '\\u27E6',\n\tLongLeftArrow: '\\u27F5',\n\tLongleftarrow: '\\u27F8',\n\tlongleftarrow: '\\u27F5',\n\tLongLeftRightArrow: '\\u27F7',\n\tLongleftrightarrow: '\\u27FA',\n\tlongleftrightarrow: '\\u27F7',\n\tlongmapsto: '\\u27FC',\n\tLongRightArrow: '\\u27F6',\n\tLongrightarrow: '\\u27F9',\n\tlongrightarrow: '\\u27F6',\n\tlooparrowleft: '\\u21AB',\n\tlooparrowright: '\\u21AC',\n\tlopar: '\\u2985',\n\tLopf: '\\uD835\\uDD43',\n\tlopf: '\\uD835\\uDD5D',\n\tloplus: '\\u2A2D',\n\tlotimes: '\\u2A34',\n\tlowast: '\\u2217',\n\tlowbar: '\\u005F',\n\tLowerLeftArrow: '\\u2199',\n\tLowerRightArrow: '\\u2198',\n\tloz: '\\u25CA',\n\tlozenge: '\\u25CA',\n\tlozf: '\\u29EB',\n\tlpar: '\\u0028',\n\tlparlt: '\\u2993',\n\tlrarr: '\\u21C6',\n\tlrcorner: '\\u231F',\n\tlrhar: '\\u21CB',\n\tlrhard: '\\u296D',\n\tlrm: '\\u200E',\n\tlrtri: '\\u22BF',\n\tlsaquo: '\\u2039',\n\tLscr: '\\u2112',\n\tlscr: '\\uD835\\uDCC1',\n\tLsh: '\\u21B0',\n\tlsh: '\\u21B0',\n\tlsim: '\\u2272',\n\tlsime: '\\u2A8D',\n\tlsimg: '\\u2A8F',\n\tlsqb: '\\u005B',\n\tlsquo: '\\u2018',\n\tlsquor: '\\u201A',\n\tLstrok: '\\u0141',\n\tlstrok: '\\u0142',\n\tLt: '\\u226A',\n\tLT: '\\u003C',\n\tlt: '\\u003C',\n\tltcc: '\\u2AA6',\n\tltcir: '\\u2A79',\n\tltdot: '\\u22D6',\n\tlthree: '\\u22CB',\n\tltimes: '\\u22C9',\n\tltlarr: '\\u2976',\n\tltquest: '\\u2A7B',\n\tltri: '\\u25C3',\n\tltrie: '\\u22B4',\n\tltrif: '\\u25C2',\n\tltrPar: '\\u2996',\n\tlurdshar: '\\u294A',\n\tluruhar: '\\u2966',\n\tlvertneqq: '\\u2268\\uFE00',\n\tlvnE: '\\u2268\\uFE00',\n\tmacr: '\\u00AF',\n\tmale: '\\u2642',\n\tmalt: '\\u2720',\n\tmaltese: '\\u2720',\n\tMap: '\\u2905',\n\tmap: '\\u21A6',\n\tmapsto: '\\u21A6',\n\tmapstodown: '\\u21A7',\n\tmapstoleft: '\\u21A4',\n\tmapstoup: '\\u21A5',\n\tmarker: '\\u25AE',\n\tmcomma: '\\u2A29',\n\tMcy: '\\u041C',\n\tmcy: '\\u043C',\n\tmdash: '\\u2014',\n\tmDDot: '\\u223A',\n\tmeasuredangle: '\\u2221',\n\tMediumSpace: '\\u205F',\n\tMellintrf: '\\u2133',\n\tMfr: '\\uD835\\uDD10',\n\tmfr: '\\uD835\\uDD2A',\n\tmho: '\\u2127',\n\tmicro: '\\u00B5',\n\tmid: '\\u2223',\n\tmidast: '\\u002A',\n\tmidcir: '\\u2AF0',\n\tmiddot: '\\u00B7',\n\tminus: '\\u2212',\n\tminusb: '\\u229F',\n\tminusd: '\\u2238',\n\tminusdu: '\\u2A2A',\n\tMinusPlus: '\\u2213',\n\tmlcp: '\\u2ADB',\n\tmldr: '\\u2026',\n\tmnplus: '\\u2213',\n\tmodels: '\\u22A7',\n\tMopf: '\\uD835\\uDD44',\n\tmopf: '\\uD835\\uDD5E',\n\tmp: '\\u2213',\n\tMscr: '\\u2133',\n\tmscr: '\\uD835\\uDCC2',\n\tmstpos: '\\u223E',\n\tMu: '\\u039C',\n\tmu: '\\u03BC',\n\tmultimap: '\\u22B8',\n\tmumap: '\\u22B8',\n\tnabla: '\\u2207',\n\tNacute: '\\u0143',\n\tnacute: '\\u0144',\n\tnang: '\\u2220\\u20D2',\n\tnap: '\\u2249',\n\tnapE: '\\u2A70\\u0338',\n\tnapid: '\\u224B\\u0338',\n\tnapos: '\\u0149',\n\tnapprox: '\\u2249',\n\tnatur: '\\u266E',\n\tnatural: '\\u266E',\n\tnaturals: '\\u2115',\n\tnbsp: '\\u00A0',\n\tnbump: '\\u224E\\u0338',\n\tnbumpe: '\\u224F\\u0338',\n\tncap: '\\u2A43',\n\tNcaron: '\\u0147',\n\tncaron: '\\u0148',\n\tNcedil: '\\u0145',\n\tncedil: '\\u0146',\n\tncong: '\\u2247',\n\tncongdot: '\\u2A6D\\u0338',\n\tncup: '\\u2A42',\n\tNcy: '\\u041D',\n\tncy: '\\u043D',\n\tndash: '\\u2013',\n\tne: '\\u2260',\n\tnearhk: '\\u2924',\n\tneArr: '\\u21D7',\n\tnearr: '\\u2197',\n\tnearrow: '\\u2197',\n\tnedot: '\\u2250\\u0338',\n\tNegativeMediumSpace: '\\u200B',\n\tNegativeThickSpace: '\\u200B',\n\tNegativeThinSpace: '\\u200B',\n\tNegativeVeryThinSpace: '\\u200B',\n\tnequiv: '\\u2262',\n\tnesear: '\\u2928',\n\tnesim: '\\u2242\\u0338',\n\tNestedGreaterGreater: '\\u226B',\n\tNestedLessLess: '\\u226A',\n\tNewLine: '\\u000A',\n\tnexist: '\\u2204',\n\tnexists: '\\u2204',\n\tNfr: '\\uD835\\uDD11',\n\tnfr: '\\uD835\\uDD2B',\n\tngE: '\\u2267\\u0338',\n\tnge: '\\u2271',\n\tngeq: '\\u2271',\n\tngeqq: '\\u2267\\u0338',\n\tngeqslant: '\\u2A7E\\u0338',\n\tnges: '\\u2A7E\\u0338',\n\tnGg: '\\u22D9\\u0338',\n\tngsim: '\\u2275',\n\tnGt: '\\u226B\\u20D2',\n\tngt: '\\u226F',\n\tngtr: '\\u226F',\n\tnGtv: '\\u226B\\u0338',\n\tnhArr: '\\u21CE',\n\tnharr: '\\u21AE',\n\tnhpar: '\\u2AF2',\n\tni: '\\u220B',\n\tnis: '\\u22FC',\n\tnisd: '\\u22FA',\n\tniv: '\\u220B',\n\tNJcy: '\\u040A',\n\tnjcy: '\\u045A',\n\tnlArr: '\\u21CD',\n\tnlarr: '\\u219A',\n\tnldr: '\\u2025',\n\tnlE: '\\u2266\\u0338',\n\tnle: '\\u2270',\n\tnLeftarrow: '\\u21CD',\n\tnleftarrow: '\\u219A',\n\tnLeftrightarrow: '\\u21CE',\n\tnleftrightarrow: '\\u21AE',\n\tnleq: '\\u2270',\n\tnleqq: '\\u2266\\u0338',\n\tnleqslant: '\\u2A7D\\u0338',\n\tnles: '\\u2A7D\\u0338',\n\tnless: '\\u226E',\n\tnLl: '\\u22D8\\u0338',\n\tnlsim: '\\u2274',\n\tnLt: '\\u226A\\u20D2',\n\tnlt: '\\u226E',\n\tnltri: '\\u22EA',\n\tnltrie: '\\u22EC',\n\tnLtv: '\\u226A\\u0338',\n\tnmid: '\\u2224',\n\tNoBreak: '\\u2060',\n\tNonBreakingSpace: '\\u00A0',\n\tNopf: '\\u2115',\n\tnopf: '\\uD835\\uDD5F',\n\tNot: '\\u2AEC',\n\tnot: '\\u00AC',\n\tNotCongruent: '\\u2262',\n\tNotCupCap: '\\u226D',\n\tNotDoubleVerticalBar: '\\u2226',\n\tNotElement: '\\u2209',\n\tNotEqual: '\\u2260',\n\tNotEqualTilde: '\\u2242\\u0338',\n\tNotExists: '\\u2204',\n\tNotGreater: '\\u226F',\n\tNotGreaterEqual: '\\u2271',\n\tNotGreaterFullEqual: '\\u2267\\u0338',\n\tNotGreaterGreater: '\\u226B\\u0338',\n\tNotGreaterLess: '\\u2279',\n\tNotGreaterSlantEqual: '\\u2A7E\\u0338',\n\tNotGreaterTilde: '\\u2275',\n\tNotHumpDownHump: '\\u224E\\u0338',\n\tNotHumpEqual: '\\u224F\\u0338',\n\tnotin: '\\u2209',\n\tnotindot: '\\u22F5\\u0338',\n\tnotinE: '\\u22F9\\u0338',\n\tnotinva: '\\u2209',\n\tnotinvb: '\\u22F7',\n\tnotinvc: '\\u22F6',\n\tNotLeftTriangle: '\\u22EA',\n\tNotLeftTriangleBar: '\\u29CF\\u0338',\n\tNotLeftTriangleEqual: '\\u22EC',\n\tNotLess: '\\u226E',\n\tNotLessEqual: '\\u2270',\n\tNotLessGreater: '\\u2278',\n\tNotLessLess: '\\u226A\\u0338',\n\tNotLessSlantEqual: '\\u2A7D\\u0338',\n\tNotLessTilde: '\\u2274',\n\tNotNestedGreaterGreater: '\\u2AA2\\u0338',\n\tNotNestedLessLess: '\\u2AA1\\u0338',\n\tnotni: '\\u220C',\n\tnotniva: '\\u220C',\n\tnotnivb: '\\u22FE',\n\tnotnivc: '\\u22FD',\n\tNotPrecedes: '\\u2280',\n\tNotPrecedesEqual: '\\u2AAF\\u0338',\n\tNotPrecedesSlantEqual: '\\u22E0',\n\tNotReverseElement: '\\u220C',\n\tNotRightTriangle: '\\u22EB',\n\tNotRightTriangleBar: '\\u29D0\\u0338',\n\tNotRightTriangleEqual: '\\u22ED',\n\tNotSquareSubset: '\\u228F\\u0338',\n\tNotSquareSubsetEqual: '\\u22E2',\n\tNotSquareSuperset: '\\u2290\\u0338',\n\tNotSquareSupersetEqual: '\\u22E3',\n\tNotSubset: '\\u2282\\u20D2',\n\tNotSubsetEqual: '\\u2288',\n\tNotSucceeds: '\\u2281',\n\tNotSucceedsEqual: '\\u2AB0\\u0338',\n\tNotSucceedsSlantEqual: '\\u22E1',\n\tNotSucceedsTilde: '\\u227F\\u0338',\n\tNotSuperset: '\\u2283\\u20D2',\n\tNotSupersetEqual: '\\u2289',\n\tNotTilde: '\\u2241',\n\tNotTildeEqual: '\\u2244',\n\tNotTildeFullEqual: '\\u2247',\n\tNotTildeTilde: '\\u2249',\n\tNotVerticalBar: '\\u2224',\n\tnpar: '\\u2226',\n\tnparallel: '\\u2226',\n\tnparsl: '\\u2AFD\\u20E5',\n\tnpart: '\\u2202\\u0338',\n\tnpolint: '\\u2A14',\n\tnpr: '\\u2280',\n\tnprcue: '\\u22E0',\n\tnpre: '\\u2AAF\\u0338',\n\tnprec: '\\u2280',\n\tnpreceq: '\\u2AAF\\u0338',\n\tnrArr: '\\u21CF',\n\tnrarr: '\\u219B',\n\tnrarrc: '\\u2933\\u0338',\n\tnrarrw: '\\u219D\\u0338',\n\tnRightarrow: '\\u21CF',\n\tnrightarrow: '\\u219B',\n\tnrtri: '\\u22EB',\n\tnrtrie: '\\u22ED',\n\tnsc: '\\u2281',\n\tnsccue: '\\u22E1',\n\tnsce: '\\u2AB0\\u0338',\n\tNscr: '\\uD835\\uDCA9',\n\tnscr: '\\uD835\\uDCC3',\n\tnshortmid: '\\u2224',\n\tnshortparallel: '\\u2226',\n\tnsim: '\\u2241',\n\tnsime: '\\u2244',\n\tnsimeq: '\\u2244',\n\tnsmid: '\\u2224',\n\tnspar: '\\u2226',\n\tnsqsube: '\\u22E2',\n\tnsqsupe: '\\u22E3',\n\tnsub: '\\u2284',\n\tnsubE: '\\u2AC5\\u0338',\n\tnsube: '\\u2288',\n\tnsubset: '\\u2282\\u20D2',\n\tnsubseteq: '\\u2288',\n\tnsubseteqq: '\\u2AC5\\u0338',\n\tnsucc: '\\u2281',\n\tnsucceq: '\\u2AB0\\u0338',\n\tnsup: '\\u2285',\n\tnsupE: '\\u2AC6\\u0338',\n\tnsupe: '\\u2289',\n\tnsupset: '\\u2283\\u20D2',\n\tnsupseteq: '\\u2289',\n\tnsupseteqq: '\\u2AC6\\u0338',\n\tntgl: '\\u2279',\n\tNtilde: '\\u00D1',\n\tntilde: '\\u00F1',\n\tntlg: '\\u2278',\n\tntriangleleft: '\\u22EA',\n\tntrianglelefteq: '\\u22EC',\n\tntriangleright: '\\u22EB',\n\tntrianglerighteq: '\\u22ED',\n\tNu: '\\u039D',\n\tnu: '\\u03BD',\n\tnum: '\\u0023',\n\tnumero: '\\u2116',\n\tnumsp: '\\u2007',\n\tnvap: '\\u224D\\u20D2',\n\tnVDash: '\\u22AF',\n\tnVdash: '\\u22AE',\n\tnvDash: '\\u22AD',\n\tnvdash: '\\u22AC',\n\tnvge: '\\u2265\\u20D2',\n\tnvgt: '\\u003E\\u20D2',\n\tnvHarr: '\\u2904',\n\tnvinfin: '\\u29DE',\n\tnvlArr: '\\u2902',\n\tnvle: '\\u2264\\u20D2',\n\tnvlt: '\\u003C\\u20D2',\n\tnvltrie: '\\u22B4\\u20D2',\n\tnvrArr: '\\u2903',\n\tnvrtrie: '\\u22B5\\u20D2',\n\tnvsim: '\\u223C\\u20D2',\n\tnwarhk: '\\u2923',\n\tnwArr: '\\u21D6',\n\tnwarr: '\\u2196',\n\tnwarrow: '\\u2196',\n\tnwnear: '\\u2927',\n\tOacute: '\\u00D3',\n\toacute: '\\u00F3',\n\toast: '\\u229B',\n\tocir: '\\u229A',\n\tOcirc: '\\u00D4',\n\tocirc: '\\u00F4',\n\tOcy: '\\u041E',\n\tocy: '\\u043E',\n\todash: '\\u229D',\n\tOdblac: '\\u0150',\n\todblac: '\\u0151',\n\todiv: '\\u2A38',\n\todot: '\\u2299',\n\todsold: '\\u29BC',\n\tOElig: '\\u0152',\n\toelig: '\\u0153',\n\tofcir: '\\u29BF',\n\tOfr: '\\uD835\\uDD12',\n\tofr: '\\uD835\\uDD2C',\n\togon: '\\u02DB',\n\tOgrave: '\\u00D2',\n\tograve: '\\u00F2',\n\togt: '\\u29C1',\n\tohbar: '\\u29B5',\n\tohm: '\\u03A9',\n\toint: '\\u222E',\n\tolarr: '\\u21BA',\n\tolcir: '\\u29BE',\n\tolcross: '\\u29BB',\n\toline: '\\u203E',\n\tolt: '\\u29C0',\n\tOmacr: '\\u014C',\n\tomacr: '\\u014D',\n\tOmega: '\\u03A9',\n\tomega: '\\u03C9',\n\tOmicron: '\\u039F',\n\tomicron: '\\u03BF',\n\tomid: '\\u29B6',\n\tominus: '\\u2296',\n\tOopf: '\\uD835\\uDD46',\n\toopf: '\\uD835\\uDD60',\n\topar: '\\u29B7',\n\tOpenCurlyDoubleQuote: '\\u201C',\n\tOpenCurlyQuote: '\\u2018',\n\toperp: '\\u29B9',\n\toplus: '\\u2295',\n\tOr: '\\u2A54',\n\tor: '\\u2228',\n\torarr: '\\u21BB',\n\tord: '\\u2A5D',\n\torder: '\\u2134',\n\torderof: '\\u2134',\n\tordf: '\\u00AA',\n\tordm: '\\u00BA',\n\torigof: '\\u22B6',\n\toror: '\\u2A56',\n\torslope: '\\u2A57',\n\torv: '\\u2A5B',\n\toS: '\\u24C8',\n\tOscr: '\\uD835\\uDCAA',\n\toscr: '\\u2134',\n\tOslash: '\\u00D8',\n\toslash: '\\u00F8',\n\tosol: '\\u2298',\n\tOtilde: '\\u00D5',\n\totilde: '\\u00F5',\n\tOtimes: '\\u2A37',\n\totimes: '\\u2297',\n\totimesas: '\\u2A36',\n\tOuml: '\\u00D6',\n\touml: '\\u00F6',\n\tovbar: '\\u233D',\n\tOverBar: '\\u203E',\n\tOverBrace: '\\u23DE',\n\tOverBracket: '\\u23B4',\n\tOverParenthesis: '\\u23DC',\n\tpar: '\\u2225',\n\tpara: '\\u00B6',\n\tparallel: '\\u2225',\n\tparsim: '\\u2AF3',\n\tparsl: '\\u2AFD',\n\tpart: '\\u2202',\n\tPartialD: '\\u2202',\n\tPcy: '\\u041F',\n\tpcy: '\\u043F',\n\tpercnt: '\\u0025',\n\tperiod: '\\u002E',\n\tpermil: '\\u2030',\n\tperp: '\\u22A5',\n\tpertenk: '\\u2031',\n\tPfr: '\\uD835\\uDD13',\n\tpfr: '\\uD835\\uDD2D',\n\tPhi: '\\u03A6',\n\tphi: '\\u03C6',\n\tphiv: '\\u03D5',\n\tphmmat: '\\u2133',\n\tphone: '\\u260E',\n\tPi: '\\u03A0',\n\tpi: '\\u03C0',\n\tpitchfork: '\\u22D4',\n\tpiv: '\\u03D6',\n\tplanck: '\\u210F',\n\tplanckh: '\\u210E',\n\tplankv: '\\u210F',\n\tplus: '\\u002B',\n\tplusacir: '\\u2A23',\n\tplusb: '\\u229E',\n\tpluscir: '\\u2A22',\n\tplusdo: '\\u2214',\n\tplusdu: '\\u2A25',\n\tpluse: '\\u2A72',\n\tPlusMinus: '\\u00B1',\n\tplusmn: '\\u00B1',\n\tplussim: '\\u2A26',\n\tplustwo: '\\u2A27',\n\tpm: '\\u00B1',\n\tPoincareplane: '\\u210C',\n\tpointint: '\\u2A15',\n\tPopf: '\\u2119',\n\tpopf: '\\uD835\\uDD61',\n\tpound: '\\u00A3',\n\tPr: '\\u2ABB',\n\tpr: '\\u227A',\n\tprap: '\\u2AB7',\n\tprcue: '\\u227C',\n\tprE: '\\u2AB3',\n\tpre: '\\u2AAF',\n\tprec: '\\u227A',\n\tprecapprox: '\\u2AB7',\n\tpreccurlyeq: '\\u227C',\n\tPrecedes: '\\u227A',\n\tPrecedesEqual: '\\u2AAF',\n\tPrecedesSlantEqual: '\\u227C',\n\tPrecedesTilde: '\\u227E',\n\tpreceq: '\\u2AAF',\n\tprecnapprox: '\\u2AB9',\n\tprecneqq: '\\u2AB5',\n\tprecnsim: '\\u22E8',\n\tprecsim: '\\u227E',\n\tPrime: '\\u2033',\n\tprime: '\\u2032',\n\tprimes: '\\u2119',\n\tprnap: '\\u2AB9',\n\tprnE: '\\u2AB5',\n\tprnsim: '\\u22E8',\n\tprod: '\\u220F',\n\tProduct: '\\u220F',\n\tprofalar: '\\u232E',\n\tprofline: '\\u2312',\n\tprofsurf: '\\u2313',\n\tprop: '\\u221D',\n\tProportion: '\\u2237',\n\tProportional: '\\u221D',\n\tpropto: '\\u221D',\n\tprsim: '\\u227E',\n\tprurel: '\\u22B0',\n\tPscr: '\\uD835\\uDCAB',\n\tpscr: '\\uD835\\uDCC5',\n\tPsi: '\\u03A8',\n\tpsi: '\\u03C8',\n\tpuncsp: '\\u2008',\n\tQfr: '\\uD835\\uDD14',\n\tqfr: '\\uD835\\uDD2E',\n\tqint: '\\u2A0C',\n\tQopf: '\\u211A',\n\tqopf: '\\uD835\\uDD62',\n\tqprime: '\\u2057',\n\tQscr: '\\uD835\\uDCAC',\n\tqscr: '\\uD835\\uDCC6',\n\tquaternions: '\\u210D',\n\tquatint: '\\u2A16',\n\tquest: '\\u003F',\n\tquesteq: '\\u225F',\n\tQUOT: '\\u0022',\n\tquot: '\\u0022',\n\trAarr: '\\u21DB',\n\trace: '\\u223D\\u0331',\n\tRacute: '\\u0154',\n\tracute: '\\u0155',\n\tradic: '\\u221A',\n\traemptyv: '\\u29B3',\n\tRang: '\\u27EB',\n\trang: '\\u27E9',\n\trangd: '\\u2992',\n\trange: '\\u29A5',\n\trangle: '\\u27E9',\n\traquo: '\\u00BB',\n\tRarr: '\\u21A0',\n\trArr: '\\u21D2',\n\trarr: '\\u2192',\n\trarrap: '\\u2975',\n\trarrb: '\\u21E5',\n\trarrbfs: '\\u2920',\n\trarrc: '\\u2933',\n\trarrfs: '\\u291E',\n\trarrhk: '\\u21AA',\n\trarrlp: '\\u21AC',\n\trarrpl: '\\u2945',\n\trarrsim: '\\u2974',\n\tRarrtl: '\\u2916',\n\trarrtl: '\\u21A3',\n\trarrw: '\\u219D',\n\trAtail: '\\u291C',\n\tratail: '\\u291A',\n\tratio: '\\u2236',\n\trationals: '\\u211A',\n\tRBarr: '\\u2910',\n\trBarr: '\\u290F',\n\trbarr: '\\u290D',\n\trbbrk: '\\u2773',\n\trbrace: '\\u007D',\n\trbrack: '\\u005D',\n\trbrke: '\\u298C',\n\trbrksld: '\\u298E',\n\trbrkslu: '\\u2990',\n\tRcaron: '\\u0158',\n\trcaron: '\\u0159',\n\tRcedil: '\\u0156',\n\trcedil: '\\u0157',\n\trceil: '\\u2309',\n\trcub: '\\u007D',\n\tRcy: '\\u0420',\n\trcy: '\\u0440',\n\trdca: '\\u2937',\n\trdldhar: '\\u2969',\n\trdquo: '\\u201D',\n\trdquor: '\\u201D',\n\trdsh: '\\u21B3',\n\tRe: '\\u211C',\n\treal: '\\u211C',\n\trealine: '\\u211B',\n\trealpart: '\\u211C',\n\treals: '\\u211D',\n\trect: '\\u25AD',\n\tREG: '\\u00AE',\n\treg: '\\u00AE',\n\tReverseElement: '\\u220B',\n\tReverseEquilibrium: '\\u21CB',\n\tReverseUpEquilibrium: '\\u296F',\n\trfisht: '\\u297D',\n\trfloor: '\\u230B',\n\tRfr: '\\u211C',\n\trfr: '\\uD835\\uDD2F',\n\trHar: '\\u2964',\n\trhard: '\\u21C1',\n\trharu: '\\u21C0',\n\trharul: '\\u296C',\n\tRho: '\\u03A1',\n\trho: '\\u03C1',\n\trhov: '\\u03F1',\n\tRightAngleBracket: '\\u27E9',\n\tRightArrow: '\\u2192',\n\tRightarrow: '\\u21D2',\n\trightarrow: '\\u2192',\n\tRightArrowBar: '\\u21E5',\n\tRightArrowLeftArrow: '\\u21C4',\n\trightarrowtail: '\\u21A3',\n\tRightCeiling: '\\u2309',\n\tRightDoubleBracket: '\\u27E7',\n\tRightDownTeeVector: '\\u295D',\n\tRightDownVector: '\\u21C2',\n\tRightDownVectorBar: '\\u2955',\n\tRightFloor: '\\u230B',\n\trightharpoondown: '\\u21C1',\n\trightharpoonup: '\\u21C0',\n\trightleftarrows: '\\u21C4',\n\trightleftharpoons: '\\u21CC',\n\trightrightarrows: '\\u21C9',\n\trightsquigarrow: '\\u219D',\n\tRightTee: '\\u22A2',\n\tRightTeeArrow: '\\u21A6',\n\tRightTeeVector: '\\u295B',\n\trightthreetimes: '\\u22CC',\n\tRightTriangle: '\\u22B3',\n\tRightTriangleBar: '\\u29D0',\n\tRightTriangleEqual: '\\u22B5',\n\tRightUpDownVector: '\\u294F',\n\tRightUpTeeVector: '\\u295C',\n\tRightUpVector: '\\u21BE',\n\tRightUpVectorBar: '\\u2954',\n\tRightVector: '\\u21C0',\n\tRightVectorBar: '\\u2953',\n\tring: '\\u02DA',\n\trisingdotseq: '\\u2253',\n\trlarr: '\\u21C4',\n\trlhar: '\\u21CC',\n\trlm: '\\u200F',\n\trmoust: '\\u23B1',\n\trmoustache: '\\u23B1',\n\trnmid: '\\u2AEE',\n\troang: '\\u27ED',\n\troarr: '\\u21FE',\n\trobrk: '\\u27E7',\n\tropar: '\\u2986',\n\tRopf: '\\u211D',\n\tropf: '\\uD835\\uDD63',\n\troplus: '\\u2A2E',\n\trotimes: '\\u2A35',\n\tRoundImplies: '\\u2970',\n\trpar: '\\u0029',\n\trpargt: '\\u2994',\n\trppolint: '\\u2A12',\n\trrarr: '\\u21C9',\n\tRrightarrow: '\\u21DB',\n\trsaquo: '\\u203A',\n\tRscr: '\\u211B',\n\trscr: '\\uD835\\uDCC7',\n\tRsh: '\\u21B1',\n\trsh: '\\u21B1',\n\trsqb: '\\u005D',\n\trsquo: '\\u2019',\n\trsquor: '\\u2019',\n\trthree: '\\u22CC',\n\trtimes: '\\u22CA',\n\trtri: '\\u25B9',\n\trtrie: '\\u22B5',\n\trtrif: '\\u25B8',\n\trtriltri: '\\u29CE',\n\tRuleDelayed: '\\u29F4',\n\truluhar: '\\u2968',\n\trx: '\\u211E',\n\tSacute: '\\u015A',\n\tsacute: '\\u015B',\n\tsbquo: '\\u201A',\n\tSc: '\\u2ABC',\n\tsc: '\\u227B',\n\tscap: '\\u2AB8',\n\tScaron: '\\u0160',\n\tscaron: '\\u0161',\n\tsccue: '\\u227D',\n\tscE: '\\u2AB4',\n\tsce: '\\u2AB0',\n\tScedil: '\\u015E',\n\tscedil: '\\u015F',\n\tScirc: '\\u015C',\n\tscirc: '\\u015D',\n\tscnap: '\\u2ABA',\n\tscnE: '\\u2AB6',\n\tscnsim: '\\u22E9',\n\tscpolint: '\\u2A13',\n\tscsim: '\\u227F',\n\tScy: '\\u0421',\n\tscy: '\\u0441',\n\tsdot: '\\u22C5',\n\tsdotb: '\\u22A1',\n\tsdote: '\\u2A66',\n\tsearhk: '\\u2925',\n\tseArr: '\\u21D8',\n\tsearr: '\\u2198',\n\tsearrow: '\\u2198',\n\tsect: '\\u00A7',\n\tsemi: '\\u003B',\n\tseswar: '\\u2929',\n\tsetminus: '\\u2216',\n\tsetmn: '\\u2216',\n\tsext: '\\u2736',\n\tSfr: '\\uD835\\uDD16',\n\tsfr: '\\uD835\\uDD30',\n\tsfrown: '\\u2322',\n\tsharp: '\\u266F',\n\tSHCHcy: '\\u0429',\n\tshchcy: '\\u0449',\n\tSHcy: '\\u0428',\n\tshcy: '\\u0448',\n\tShortDownArrow: '\\u2193',\n\tShortLeftArrow: '\\u2190',\n\tshortmid: '\\u2223',\n\tshortparallel: '\\u2225',\n\tShortRightArrow: '\\u2192',\n\tShortUpArrow: '\\u2191',\n\tshy: '\\u00AD',\n\tSigma: '\\u03A3',\n\tsigma: '\\u03C3',\n\tsigmaf: '\\u03C2',\n\tsigmav: '\\u03C2',\n\tsim: '\\u223C',\n\tsimdot: '\\u2A6A',\n\tsime: '\\u2243',\n\tsimeq: '\\u2243',\n\tsimg: '\\u2A9E',\n\tsimgE: '\\u2AA0',\n\tsiml: '\\u2A9D',\n\tsimlE: '\\u2A9F',\n\tsimne: '\\u2246',\n\tsimplus: '\\u2A24',\n\tsimrarr: '\\u2972',\n\tslarr: '\\u2190',\n\tSmallCircle: '\\u2218',\n\tsmallsetminus: '\\u2216',\n\tsmashp: '\\u2A33',\n\tsmeparsl: '\\u29E4',\n\tsmid: '\\u2223',\n\tsmile: '\\u2323',\n\tsmt: '\\u2AAA',\n\tsmte: '\\u2AAC',\n\tsmtes: '\\u2AAC\\uFE00',\n\tSOFTcy: '\\u042C',\n\tsoftcy: '\\u044C',\n\tsol: '\\u002F',\n\tsolb: '\\u29C4',\n\tsolbar: '\\u233F',\n\tSopf: '\\uD835\\uDD4A',\n\tsopf: '\\uD835\\uDD64',\n\tspades: '\\u2660',\n\tspadesuit: '\\u2660',\n\tspar: '\\u2225',\n\tsqcap: '\\u2293',\n\tsqcaps: '\\u2293\\uFE00',\n\tsqcup: '\\u2294',\n\tsqcups: '\\u2294\\uFE00',\n\tSqrt: '\\u221A',\n\tsqsub: '\\u228F',\n\tsqsube: '\\u2291',\n\tsqsubset: '\\u228F',\n\tsqsubseteq: '\\u2291',\n\tsqsup: '\\u2290',\n\tsqsupe: '\\u2292',\n\tsqsupset: '\\u2290',\n\tsqsupseteq: '\\u2292',\n\tsqu: '\\u25A1',\n\tSquare: '\\u25A1',\n\tsquare: '\\u25A1',\n\tSquareIntersection: '\\u2293',\n\tSquareSubset: '\\u228F',\n\tSquareSubsetEqual: '\\u2291',\n\tSquareSuperset: '\\u2290',\n\tSquareSupersetEqual: '\\u2292',\n\tSquareUnion: '\\u2294',\n\tsquarf: '\\u25AA',\n\tsquf: '\\u25AA',\n\tsrarr: '\\u2192',\n\tSscr: '\\uD835\\uDCAE',\n\tsscr: '\\uD835\\uDCC8',\n\tssetmn: '\\u2216',\n\tssmile: '\\u2323',\n\tsstarf: '\\u22C6',\n\tStar: '\\u22C6',\n\tstar: '\\u2606',\n\tstarf: '\\u2605',\n\tstraightepsilon: '\\u03F5',\n\tstraightphi: '\\u03D5',\n\tstrns: '\\u00AF',\n\tSub: '\\u22D0',\n\tsub: '\\u2282',\n\tsubdot: '\\u2ABD',\n\tsubE: '\\u2AC5',\n\tsube: '\\u2286',\n\tsubedot: '\\u2AC3',\n\tsubmult: '\\u2AC1',\n\tsubnE: '\\u2ACB',\n\tsubne: '\\u228A',\n\tsubplus: '\\u2ABF',\n\tsubrarr: '\\u2979',\n\tSubset: '\\u22D0',\n\tsubset: '\\u2282',\n\tsubseteq: '\\u2286',\n\tsubseteqq: '\\u2AC5',\n\tSubsetEqual: '\\u2286',\n\tsubsetneq: '\\u228A',\n\tsubsetneqq: '\\u2ACB',\n\tsubsim: '\\u2AC7',\n\tsubsub: '\\u2AD5',\n\tsubsup: '\\u2AD3',\n\tsucc: '\\u227B',\n\tsuccapprox: '\\u2AB8',\n\tsucccurlyeq: '\\u227D',\n\tSucceeds: '\\u227B',\n\tSucceedsEqual: '\\u2AB0',\n\tSucceedsSlantEqual: '\\u227D',\n\tSucceedsTilde: '\\u227F',\n\tsucceq: '\\u2AB0',\n\tsuccnapprox: '\\u2ABA',\n\tsuccneqq: '\\u2AB6',\n\tsuccnsim: '\\u22E9',\n\tsuccsim: '\\u227F',\n\tSuchThat: '\\u220B',\n\tSum: '\\u2211',\n\tsum: '\\u2211',\n\tsung: '\\u266A',\n\tSup: '\\u22D1',\n\tsup: '\\u2283',\n\tsup1: '\\u00B9',\n\tsup2: '\\u00B2',\n\tsup3: '\\u00B3',\n\tsupdot: '\\u2ABE',\n\tsupdsub: '\\u2AD8',\n\tsupE: '\\u2AC6',\n\tsupe: '\\u2287',\n\tsupedot: '\\u2AC4',\n\tSuperset: '\\u2283',\n\tSupersetEqual: '\\u2287',\n\tsuphsol: '\\u27C9',\n\tsuphsub: '\\u2AD7',\n\tsuplarr: '\\u297B',\n\tsupmult: '\\u2AC2',\n\tsupnE: '\\u2ACC',\n\tsupne: '\\u228B',\n\tsupplus: '\\u2AC0',\n\tSupset: '\\u22D1',\n\tsupset: '\\u2283',\n\tsupseteq: '\\u2287',\n\tsupseteqq: '\\u2AC6',\n\tsupsetneq: '\\u228B',\n\tsupsetneqq: '\\u2ACC',\n\tsupsim: '\\u2AC8',\n\tsupsub: '\\u2AD4',\n\tsupsup: '\\u2AD6',\n\tswarhk: '\\u2926',\n\tswArr: '\\u21D9',\n\tswarr: '\\u2199',\n\tswarrow: '\\u2199',\n\tswnwar: '\\u292A',\n\tszlig: '\\u00DF',\n\tTab: '\\u0009',\n\ttarget: '\\u2316',\n\tTau: '\\u03A4',\n\ttau: '\\u03C4',\n\ttbrk: '\\u23B4',\n\tTcaron: '\\u0164',\n\ttcaron: '\\u0165',\n\tTcedil: '\\u0162',\n\ttcedil: '\\u0163',\n\tTcy: '\\u0422',\n\ttcy: '\\u0442',\n\ttdot: '\\u20DB',\n\ttelrec: '\\u2315',\n\tTfr: '\\uD835\\uDD17',\n\ttfr: '\\uD835\\uDD31',\n\tthere4: '\\u2234',\n\tTherefore: '\\u2234',\n\ttherefore: '\\u2234',\n\tTheta: '\\u0398',\n\ttheta: '\\u03B8',\n\tthetasym: '\\u03D1',\n\tthetav: '\\u03D1',\n\tthickapprox: '\\u2248',\n\tthicksim: '\\u223C',\n\tThickSpace: '\\u205F\\u200A',\n\tthinsp: '\\u2009',\n\tThinSpace: '\\u2009',\n\tthkap: '\\u2248',\n\tthksim: '\\u223C',\n\tTHORN: '\\u00DE',\n\tthorn: '\\u00FE',\n\tTilde: '\\u223C',\n\ttilde: '\\u02DC',\n\tTildeEqual: '\\u2243',\n\tTildeFullEqual: '\\u2245',\n\tTildeTilde: '\\u2248',\n\ttimes: '\\u00D7',\n\ttimesb: '\\u22A0',\n\ttimesbar: '\\u2A31',\n\ttimesd: '\\u2A30',\n\ttint: '\\u222D',\n\ttoea: '\\u2928',\n\ttop: '\\u22A4',\n\ttopbot: '\\u2336',\n\ttopcir: '\\u2AF1',\n\tTopf: '\\uD835\\uDD4B',\n\ttopf: '\\uD835\\uDD65',\n\ttopfork: '\\u2ADA',\n\ttosa: '\\u2929',\n\ttprime: '\\u2034',\n\tTRADE: '\\u2122',\n\ttrade: '\\u2122',\n\ttriangle: '\\u25B5',\n\ttriangledown: '\\u25BF',\n\ttriangleleft: '\\u25C3',\n\ttrianglelefteq: '\\u22B4',\n\ttriangleq: '\\u225C',\n\ttriangleright: '\\u25B9',\n\ttrianglerighteq: '\\u22B5',\n\ttridot: '\\u25EC',\n\ttrie: '\\u225C',\n\ttriminus: '\\u2A3A',\n\tTripleDot: '\\u20DB',\n\ttriplus: '\\u2A39',\n\ttrisb: '\\u29CD',\n\ttritime: '\\u2A3B',\n\ttrpezium: '\\u23E2',\n\tTscr: '\\uD835\\uDCAF',\n\ttscr: '\\uD835\\uDCC9',\n\tTScy: '\\u0426',\n\ttscy: '\\u0446',\n\tTSHcy: '\\u040B',\n\ttshcy: '\\u045B',\n\tTstrok: '\\u0166',\n\ttstrok: '\\u0167',\n\ttwixt: '\\u226C',\n\ttwoheadleftarrow: '\\u219E',\n\ttwoheadrightarrow: '\\u21A0',\n\tUacute: '\\u00DA',\n\tuacute: '\\u00FA',\n\tUarr: '\\u219F',\n\tuArr: '\\u21D1',\n\tuarr: '\\u2191',\n\tUarrocir: '\\u2949',\n\tUbrcy: '\\u040E',\n\tubrcy: '\\u045E',\n\tUbreve: '\\u016C',\n\tubreve: '\\u016D',\n\tUcirc: '\\u00DB',\n\tucirc: '\\u00FB',\n\tUcy: '\\u0423',\n\tucy: '\\u0443',\n\tudarr: '\\u21C5',\n\tUdblac: '\\u0170',\n\tudblac: '\\u0171',\n\tudhar: '\\u296E',\n\tufisht: '\\u297E',\n\tUfr: '\\uD835\\uDD18',\n\tufr: '\\uD835\\uDD32',\n\tUgrave: '\\u00D9',\n\tugrave: '\\u00F9',\n\tuHar: '\\u2963',\n\tuharl: '\\u21BF',\n\tuharr: '\\u21BE',\n\tuhblk: '\\u2580',\n\tulcorn: '\\u231C',\n\tulcorner: '\\u231C',\n\tulcrop: '\\u230F',\n\tultri: '\\u25F8',\n\tUmacr: '\\u016A',\n\tumacr: '\\u016B',\n\tuml: '\\u00A8',\n\tUnderBar: '\\u005F',\n\tUnderBrace: '\\u23DF',\n\tUnderBracket: '\\u23B5',\n\tUnderParenthesis: '\\u23DD',\n\tUnion: '\\u22C3',\n\tUnionPlus: '\\u228E',\n\tUogon: '\\u0172',\n\tuogon: '\\u0173',\n\tUopf: '\\uD835\\uDD4C',\n\tuopf: '\\uD835\\uDD66',\n\tUpArrow: '\\u2191',\n\tUparrow: '\\u21D1',\n\tuparrow: '\\u2191',\n\tUpArrowBar: '\\u2912',\n\tUpArrowDownArrow: '\\u21C5',\n\tUpDownArrow: '\\u2195',\n\tUpdownarrow: '\\u21D5',\n\tupdownarrow: '\\u2195',\n\tUpEquilibrium: '\\u296E',\n\tupharpoonleft: '\\u21BF',\n\tupharpoonright: '\\u21BE',\n\tuplus: '\\u228E',\n\tUpperLeftArrow: '\\u2196',\n\tUpperRightArrow: '\\u2197',\n\tUpsi: '\\u03D2',\n\tupsi: '\\u03C5',\n\tupsih: '\\u03D2',\n\tUpsilon: '\\u03A5',\n\tupsilon: '\\u03C5',\n\tUpTee: '\\u22A5',\n\tUpTeeArrow: '\\u21A5',\n\tupuparrows: '\\u21C8',\n\turcorn: '\\u231D',\n\turcorner: '\\u231D',\n\turcrop: '\\u230E',\n\tUring: '\\u016E',\n\turing: '\\u016F',\n\turtri: '\\u25F9',\n\tUscr: '\\uD835\\uDCB0',\n\tuscr: '\\uD835\\uDCCA',\n\tutdot: '\\u22F0',\n\tUtilde: '\\u0168',\n\tutilde: '\\u0169',\n\tutri: '\\u25B5',\n\tutrif: '\\u25B4',\n\tuuarr: '\\u21C8',\n\tUuml: '\\u00DC',\n\tuuml: '\\u00FC',\n\tuwangle: '\\u29A7',\n\tvangrt: '\\u299C',\n\tvarepsilon: '\\u03F5',\n\tvarkappa: '\\u03F0',\n\tvarnothing: '\\u2205',\n\tvarphi: '\\u03D5',\n\tvarpi: '\\u03D6',\n\tvarpropto: '\\u221D',\n\tvArr: '\\u21D5',\n\tvarr: '\\u2195',\n\tvarrho: '\\u03F1',\n\tvarsigma: '\\u03C2',\n\tvarsubsetneq: '\\u228A\\uFE00',\n\tvarsubsetneqq: '\\u2ACB\\uFE00',\n\tvarsupsetneq: '\\u228B\\uFE00',\n\tvarsupsetneqq: '\\u2ACC\\uFE00',\n\tvartheta: '\\u03D1',\n\tvartriangleleft: '\\u22B2',\n\tvartriangleright: '\\u22B3',\n\tVbar: '\\u2AEB',\n\tvBar: '\\u2AE8',\n\tvBarv: '\\u2AE9',\n\tVcy: '\\u0412',\n\tvcy: '\\u0432',\n\tVDash: '\\u22AB',\n\tVdash: '\\u22A9',\n\tvDash: '\\u22A8',\n\tvdash: '\\u22A2',\n\tVdashl: '\\u2AE6',\n\tVee: '\\u22C1',\n\tvee: '\\u2228',\n\tveebar: '\\u22BB',\n\tveeeq: '\\u225A',\n\tvellip: '\\u22EE',\n\tVerbar: '\\u2016',\n\tverbar: '\\u007C',\n\tVert: '\\u2016',\n\tvert: '\\u007C',\n\tVerticalBar: '\\u2223',\n\tVerticalLine: '\\u007C',\n\tVerticalSeparator: '\\u2758',\n\tVerticalTilde: '\\u2240',\n\tVeryThinSpace: '\\u200A',\n\tVfr: '\\uD835\\uDD19',\n\tvfr: '\\uD835\\uDD33',\n\tvltri: '\\u22B2',\n\tvnsub: '\\u2282\\u20D2',\n\tvnsup: '\\u2283\\u20D2',\n\tVopf: '\\uD835\\uDD4D',\n\tvopf: '\\uD835\\uDD67',\n\tvprop: '\\u221D',\n\tvrtri: '\\u22B3',\n\tVscr: '\\uD835\\uDCB1',\n\tvscr: '\\uD835\\uDCCB',\n\tvsubnE: '\\u2ACB\\uFE00',\n\tvsubne: '\\u228A\\uFE00',\n\tvsupnE: '\\u2ACC\\uFE00',\n\tvsupne: '\\u228B\\uFE00',\n\tVvdash: '\\u22AA',\n\tvzigzag: '\\u299A',\n\tWcirc: '\\u0174',\n\twcirc: '\\u0175',\n\twedbar: '\\u2A5F',\n\tWedge: '\\u22C0',\n\twedge: '\\u2227',\n\twedgeq: '\\u2259',\n\tweierp: '\\u2118',\n\tWfr: '\\uD835\\uDD1A',\n\twfr: '\\uD835\\uDD34',\n\tWopf: '\\uD835\\uDD4E',\n\twopf: '\\uD835\\uDD68',\n\twp: '\\u2118',\n\twr: '\\u2240',\n\twreath: '\\u2240',\n\tWscr: '\\uD835\\uDCB2',\n\twscr: '\\uD835\\uDCCC',\n\txcap: '\\u22C2',\n\txcirc: '\\u25EF',\n\txcup: '\\u22C3',\n\txdtri: '\\u25BD',\n\tXfr: '\\uD835\\uDD1B',\n\txfr: '\\uD835\\uDD35',\n\txhArr: '\\u27FA',\n\txharr: '\\u27F7',\n\tXi: '\\u039E',\n\txi: '\\u03BE',\n\txlArr: '\\u27F8',\n\txlarr: '\\u27F5',\n\txmap: '\\u27FC',\n\txnis: '\\u22FB',\n\txodot: '\\u2A00',\n\tXopf: '\\uD835\\uDD4F',\n\txopf: '\\uD835\\uDD69',\n\txoplus: '\\u2A01',\n\txotime: '\\u2A02',\n\txrArr: '\\u27F9',\n\txrarr: '\\u27F6',\n\tXscr: '\\uD835\\uDCB3',\n\txscr: '\\uD835\\uDCCD',\n\txsqcup: '\\u2A06',\n\txuplus: '\\u2A04',\n\txutri: '\\u25B3',\n\txvee: '\\u22C1',\n\txwedge: '\\u22C0',\n\tYacute: '\\u00DD',\n\tyacute: '\\u00FD',\n\tYAcy: '\\u042F',\n\tyacy: '\\u044F',\n\tYcirc: '\\u0176',\n\tycirc: '\\u0177',\n\tYcy: '\\u042B',\n\tycy: '\\u044B',\n\tyen: '\\u00A5',\n\tYfr: '\\uD835\\uDD1C',\n\tyfr: '\\uD835\\uDD36',\n\tYIcy: '\\u0407',\n\tyicy: '\\u0457',\n\tYopf: '\\uD835\\uDD50',\n\tyopf: '\\uD835\\uDD6A',\n\tYscr: '\\uD835\\uDCB4',\n\tyscr: '\\uD835\\uDCCE',\n\tYUcy: '\\u042E',\n\tyucy: '\\u044E',\n\tYuml: '\\u0178',\n\tyuml: '\\u00FF',\n\tZacute: '\\u0179',\n\tzacute: '\\u017A',\n\tZcaron: '\\u017D',\n\tzcaron: '\\u017E',\n\tZcy: '\\u0417',\n\tzcy: '\\u0437',\n\tZdot: '\\u017B',\n\tzdot: '\\u017C',\n\tzeetrf: '\\u2128',\n\tZeroWidthSpace: '\\u200B',\n\tZeta: '\\u0396',\n\tzeta: '\\u03B6',\n\tZfr: '\\u2128',\n\tzfr: '\\uD835\\uDD37',\n\tZHcy: '\\u0416',\n\tzhcy: '\\u0436',\n\tzigrarr: '\\u21DD',\n\tZopf: '\\u2124',\n\tzopf: '\\uD835\\uDD6B',\n\tZscr: '\\uD835\\uDCB5',\n\tzscr: '\\uD835\\uDCCF',\n\tzwj: '\\u200D',\n\tzwnj: '\\u200C',\n});\n\n/**\n * @deprecated use `HTML_ENTITIES` instead\n * @see HTML_ENTITIES\n */\nexports.entityMap = exports.HTML_ENTITIES;\n", "var dom = require('./dom')\nexports.DOMImplementation = dom.DOMImplementation\nexports.XMLSerializer = dom.XMLSerializer\nexports.DOMParser = require('./dom-parser').DOMParser\n", "var NAMESPACE = require(\"./conventions\").NAMESPACE;\n\n//[4]   \tNameStartChar\t   ::=   \t\":\" | [A-Z] | \"_\" | [a-z] | [#xC0-#xD6] | [#xD8-#xF6] | [#xF8-#x2FF] | [#x370-#x37D] | [#x37F-#x1FFF] | [#x200C-#x200D] | [#x2070-#x218F] | [#x2C00-#x2FEF] | [#x3001-#xD7FF] | [#xF900-#xFDCF] | [#xFDF0-#xFFFD] | [#x10000-#xEFFFF]\n//[4a]   \tNameChar\t   ::=   \tNameStartChar | \"-\" | \".\" | [0-9] | #xB7 | [#x0300-#x036F] | [#x203F-#x2040]\n//[5]   \tName\t   ::=   \tNameStartChar (NameChar)*\nvar nameStartChar = /[A-Z_a-z\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]///\\u10000-\\uEFFFF\nvar nameChar = new RegExp(\"[\\\\-\\\\.0-9\"+nameStartChar.source.slice(1,-1)+\"\\\\u00B7\\\\u0300-\\\\u036F\\\\u203F-\\\\u2040]\");\nvar tagNamePattern = new RegExp('^'+nameStartChar.source+nameChar.source+'*(?:\\:'+nameStartChar.source+nameChar.source+'*)?$');\n//var tagNamePattern = /^[a-zA-Z_][\\w\\-\\.]*(?:\\:[a-zA-Z_][\\w\\-\\.]*)?$/\n//var handlers = 'resolveEntity,getExternalSubset,characters,endDocument,endElement,endPrefixMapping,ignorableWhitespace,processingInstruction,setDocumentLocator,skippedEntity,startDocument,startElement,startPrefixMapping,notationDecl,unparsedEntityDecl,error,fatalError,warning,attributeDecl,elementDecl,externalEntityDecl,internalEntityDecl,comment,endCDATA,endDTD,endEntity,startCDATA,startDTD,startEntity'.split(',')\n\n//S_TAG,\tS_ATTR,\tS_EQ,\tS_ATTR_NOQUOT_VALUE\n//S_ATTR_SPACE,\tS_ATTR_END,\tS_TAG_SPACE, S_TAG_CLOSE\nvar S_TAG = 0;//tag name offerring\nvar S_ATTR = 1;//attr name offerring\nvar S_ATTR_SPACE=2;//attr name end and space offer\nvar S_EQ = 3;//=space?\nvar S_ATTR_NOQUOT_VALUE = 4;//attr value(no quot value only)\nvar S_ATTR_END = 5;//attr value end and no space(quot end)\nvar S_TAG_SPACE = 6;//(attr value end || tag end ) && (space offer)\nvar S_TAG_CLOSE = 7;//closed el<el />\n\n/**\n * Creates an error that will not be caught by XMLReader aka the SAX parser.\n *\n * @param {string} message\n * @param {any?} locator Optional, can provide details about the location in the source\n * @constructor\n */\nfunction ParseError(message, locator) {\n\tthis.message = message\n\tthis.locator = locator\n\tif(Error.captureStackTrace) Error.captureStackTrace(this, ParseError);\n}\nParseError.prototype = new Error();\nParseError.prototype.name = ParseError.name\n\nfunction XMLReader(){\n\n}\n\nXMLReader.prototype = {\n\tparse:function(source,defaultNSMap,entityMap){\n\t\tvar domBuilder = this.domBuilder;\n\t\tdomBuilder.startDocument();\n\t\t_copy(defaultNSMap ,defaultNSMap = {})\n\t\tparse(source,defaultNSMap,entityMap,\n\t\t\t\tdomBuilder,this.errorHandler);\n\t\tdomBuilder.endDocument();\n\t}\n}\nfunction parse(source,defaultNSMapCopy,entityMap,domBuilder,errorHandler){\n\tfunction fixedFromCharCode(code) {\n\t\t// String.prototype.fromCharCode does not supports\n\t\t// > 2 bytes unicode chars directly\n\t\tif (code > 0xffff) {\n\t\t\tcode -= 0x10000;\n\t\t\tvar surrogate1 = 0xd800 + (code >> 10)\n\t\t\t\t, surrogate2 = 0xdc00 + (code & 0x3ff);\n\n\t\t\treturn String.fromCharCode(surrogate1, surrogate2);\n\t\t} else {\n\t\t\treturn String.fromCharCode(code);\n\t\t}\n\t}\n\tfunction entityReplacer(a){\n\t\tvar k = a.slice(1,-1);\n\t\tif (Object.hasOwnProperty.call(entityMap, k)) {\n\t\t\treturn entityMap[k];\n\t\t}else if(k.charAt(0) === '#'){\n\t\t\treturn fixedFromCharCode(parseInt(k.substr(1).replace('x','0x')))\n\t\t}else{\n\t\t\terrorHandler.error('entity not found:'+a);\n\t\t\treturn a;\n\t\t}\n\t}\n\tfunction appendText(end){//has some bugs\n\t\tif(end>start){\n\t\t\tvar xt = source.substring(start,end).replace(/&#?\\w+;/g,entityReplacer);\n\t\t\tlocator&&position(start);\n\t\t\tdomBuilder.characters(xt,0,end-start);\n\t\t\tstart = end\n\t\t}\n\t}\n\tfunction position(p,m){\n\t\twhile(p>=lineEnd && (m = linePattern.exec(source))){\n\t\t\tlineStart = m.index;\n\t\t\tlineEnd = lineStart + m[0].length;\n\t\t\tlocator.lineNumber++;\n\t\t\t//console.log('line++:',locator,startPos,endPos)\n\t\t}\n\t\tlocator.columnNumber = p-lineStart+1;\n\t}\n\tvar lineStart = 0;\n\tvar lineEnd = 0;\n\tvar linePattern = /.*(?:\\r\\n?|\\n)|.*$/g\n\tvar locator = domBuilder.locator;\n\n\tvar parseStack = [{currentNSMap:defaultNSMapCopy}]\n\tvar closeMap = {};\n\tvar start = 0;\n\twhile(true){\n\t\ttry{\n\t\t\tvar tagStart = source.indexOf('<',start);\n\t\t\tif(tagStart<0){\n\t\t\t\tif(!source.substr(start).match(/^\\s*$/)){\n\t\t\t\t\tvar doc = domBuilder.doc;\n\t    \t\t\tvar text = doc.createTextNode(source.substr(start));\n\t    \t\t\tdoc.appendChild(text);\n\t    \t\t\tdomBuilder.currentElement = text;\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif(tagStart>start){\n\t\t\t\tappendText(tagStart);\n\t\t\t}\n\t\t\tswitch(source.charAt(tagStart+1)){\n\t\t\tcase '/':\n\t\t\t\tvar end = source.indexOf('>',tagStart+3);\n\t\t\t\tvar tagName = source.substring(tagStart + 2, end).replace(/[ \\t\\n\\r]+$/g, '');\n\t\t\t\tvar config = parseStack.pop();\n\t\t\t\tif(end<0){\n\n\t        \t\ttagName = source.substring(tagStart+2).replace(/[\\s<].*/,'');\n\t        \t\terrorHandler.error(\"end tag name: \"+tagName+' is not complete:'+config.tagName);\n\t        \t\tend = tagStart+1+tagName.length;\n\t        \t}else if(tagName.match(/\\s</)){\n\t        \t\ttagName = tagName.replace(/[\\s<].*/,'');\n\t        \t\terrorHandler.error(\"end tag name: \"+tagName+' maybe not complete');\n\t        \t\tend = tagStart+1+tagName.length;\n\t\t\t\t}\n\t\t\t\tvar localNSMap = config.localNSMap;\n\t\t\t\tvar endMatch = config.tagName == tagName;\n\t\t\t\tvar endIgnoreCaseMach = endMatch || config.tagName&&config.tagName.toLowerCase() == tagName.toLowerCase()\n\t\t        if(endIgnoreCaseMach){\n\t\t        \tdomBuilder.endElement(config.uri,config.localName,tagName);\n\t\t\t\t\tif(localNSMap){\n\t\t\t\t\t\tfor (var prefix in localNSMap) {\n\t\t\t\t\t\t\tif (Object.prototype.hasOwnProperty.call(localNSMap, prefix)) {\n\t\t\t\t\t\t\t\tdomBuilder.endPrefixMapping(prefix);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif(!endMatch){\n\t\t            \terrorHandler.fatalError(\"end tag name: \"+tagName+' is not match the current start tagName:'+config.tagName ); // No known test case\n\t\t\t\t\t}\n\t\t        }else{\n\t\t        \tparseStack.push(config)\n\t\t        }\n\n\t\t\t\tend++;\n\t\t\t\tbreak;\n\t\t\t\t// end elment\n\t\t\tcase '?':// <?...?>\n\t\t\t\tlocator&&position(tagStart);\n\t\t\t\tend = parseInstruction(source,tagStart,domBuilder);\n\t\t\t\tbreak;\n\t\t\tcase '!':// <!doctype,<![CDATA,<!--\n\t\t\t\tlocator&&position(tagStart);\n\t\t\t\tend = parseDCC(source,tagStart,domBuilder,errorHandler);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tlocator&&position(tagStart);\n\t\t\t\tvar el = new ElementAttributes();\n\t\t\t\tvar currentNSMap = parseStack[parseStack.length-1].currentNSMap;\n\t\t\t\t//elStartEnd\n\t\t\t\tvar end = parseElementStartPart(source,tagStart,el,currentNSMap,entityReplacer,errorHandler);\n\t\t\t\tvar len = el.length;\n\n\n\t\t\t\tif(!el.closed && fixSelfClosed(source,end,el.tagName,closeMap)){\n\t\t\t\t\tel.closed = true;\n\t\t\t\t\tif(!entityMap.nbsp){\n\t\t\t\t\t\terrorHandler.warning('unclosed xml attribute');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(locator && len){\n\t\t\t\t\tvar locator2 = copyLocator(locator,{});\n\t\t\t\t\t//try{//attribute position fixed\n\t\t\t\t\tfor(var i = 0;i<len;i++){\n\t\t\t\t\t\tvar a = el[i];\n\t\t\t\t\t\tposition(a.offset);\n\t\t\t\t\t\ta.locator = copyLocator(locator,{});\n\t\t\t\t\t}\n\t\t\t\t\tdomBuilder.locator = locator2\n\t\t\t\t\tif(appendElement(el,domBuilder,currentNSMap)){\n\t\t\t\t\t\tparseStack.push(el)\n\t\t\t\t\t}\n\t\t\t\t\tdomBuilder.locator = locator;\n\t\t\t\t}else{\n\t\t\t\t\tif(appendElement(el,domBuilder,currentNSMap)){\n\t\t\t\t\t\tparseStack.push(el)\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (NAMESPACE.isHTML(el.uri) && !el.closed) {\n\t\t\t\t\tend = parseHtmlSpecialContent(source,end,el.tagName,entityReplacer,domBuilder)\n\t\t\t\t} else {\n\t\t\t\t\tend++;\n\t\t\t\t}\n\t\t\t}\n\t\t}catch(e){\n\t\t\tif (e instanceof ParseError) {\n\t\t\t\tthrow e;\n\t\t\t}\n\t\t\terrorHandler.error('element parse error: '+e)\n\t\t\tend = -1;\n\t\t}\n\t\tif(end>start){\n\t\t\tstart = end;\n\t\t}else{\n\t\t\t//TODO: 这里有可能sax回退，有位置错误风险\n\t\t\tappendText(Math.max(tagStart,start)+1);\n\t\t}\n\t}\n}\nfunction copyLocator(f,t){\n\tt.lineNumber = f.lineNumber;\n\tt.columnNumber = f.columnNumber;\n\treturn t;\n}\n\n/**\n * @see #appendElement(source,elStartEnd,el,selfClosed,entityReplacer,domBuilder,parseStack);\n * @return end of the elementStartPart(end of elementEndPart for selfClosed el)\n */\nfunction parseElementStartPart(source,start,el,currentNSMap,entityReplacer,errorHandler){\n\n\t/**\n\t * @param {string} qname\n\t * @param {string} value\n\t * @param {number} startIndex\n\t */\n\tfunction addAttribute(qname, value, startIndex) {\n\t\tif (el.attributeNames.hasOwnProperty(qname)) {\n\t\t\terrorHandler.fatalError('Attribute ' + qname + ' redefined')\n\t\t}\n\t\tel.addValue(\n\t\t\tqname,\n\t\t\t// @see https://www.w3.org/TR/xml/#AVNormalize\n\t\t\t// since the xmldom sax parser does not \"interpret\" DTD the following is not implemented:\n\t\t\t// - recursive replacement of (DTD) entity references\n\t\t\t// - trimming and collapsing multiple spaces into a single one for attributes that are not of type CDATA\n\t\t\tvalue.replace(/[\\t\\n\\r]/g, ' ').replace(/&#?\\w+;/g, entityReplacer),\n\t\t\tstartIndex\n\t\t)\n\t}\n\tvar attrName;\n\tvar value;\n\tvar p = ++start;\n\tvar s = S_TAG;//status\n\twhile(true){\n\t\tvar c = source.charAt(p);\n\t\tswitch(c){\n\t\tcase '=':\n\t\t\tif(s === S_ATTR){//attrName\n\t\t\t\tattrName = source.slice(start,p);\n\t\t\t\ts = S_EQ;\n\t\t\t}else if(s === S_ATTR_SPACE){\n\t\t\t\ts = S_EQ;\n\t\t\t}else{\n\t\t\t\t//fatalError: equal must after attrName or space after attrName\n\t\t\t\tthrow new Error('attribute equal must after attrName'); // No known test case\n\t\t\t}\n\t\t\tbreak;\n\t\tcase '\\'':\n\t\tcase '\"':\n\t\t\tif(s === S_EQ || s === S_ATTR //|| s == S_ATTR_SPACE\n\t\t\t\t){//equal\n\t\t\t\tif(s === S_ATTR){\n\t\t\t\t\terrorHandler.warning('attribute value must after \"=\"')\n\t\t\t\t\tattrName = source.slice(start,p)\n\t\t\t\t}\n\t\t\t\tstart = p+1;\n\t\t\t\tp = source.indexOf(c,start)\n\t\t\t\tif(p>0){\n\t\t\t\t\tvalue = source.slice(start, p);\n\t\t\t\t\taddAttribute(attrName, value, start-1);\n\t\t\t\t\ts = S_ATTR_END;\n\t\t\t\t}else{\n\t\t\t\t\t//fatalError: no end quot match\n\t\t\t\t\tthrow new Error('attribute value no end \\''+c+'\\' match');\n\t\t\t\t}\n\t\t\t}else if(s == S_ATTR_NOQUOT_VALUE){\n\t\t\t\tvalue = source.slice(start, p);\n\t\t\t\taddAttribute(attrName, value, start);\n\t\t\t\terrorHandler.warning('attribute \"'+attrName+'\" missed start quot('+c+')!!');\n\t\t\t\tstart = p+1;\n\t\t\t\ts = S_ATTR_END\n\t\t\t}else{\n\t\t\t\t//fatalError: no equal before\n\t\t\t\tthrow new Error('attribute value must after \"=\"'); // No known test case\n\t\t\t}\n\t\t\tbreak;\n\t\tcase '/':\n\t\t\tswitch(s){\n\t\t\tcase S_TAG:\n\t\t\t\tel.setTagName(source.slice(start,p));\n\t\t\tcase S_ATTR_END:\n\t\t\tcase S_TAG_SPACE:\n\t\t\tcase S_TAG_CLOSE:\n\t\t\t\ts =S_TAG_CLOSE;\n\t\t\t\tel.closed = true;\n\t\t\tcase S_ATTR_NOQUOT_VALUE:\n\t\t\tcase S_ATTR:\n\t\t\t\tbreak;\n\t\t\t\tcase S_ATTR_SPACE:\n\t\t\t\t\tel.closed = true;\n\t\t\t\tbreak;\n\t\t\t//case S_EQ:\n\t\t\tdefault:\n\t\t\t\tthrow new Error(\"attribute invalid close char('/')\") // No known test case\n\t\t\t}\n\t\t\tbreak;\n\t\tcase ''://end document\n\t\t\terrorHandler.error('unexpected end of input');\n\t\t\tif(s == S_TAG){\n\t\t\t\tel.setTagName(source.slice(start,p));\n\t\t\t}\n\t\t\treturn p;\n\t\tcase '>':\n\t\t\tswitch(s){\n\t\t\tcase S_TAG:\n\t\t\t\tel.setTagName(source.slice(start,p));\n\t\t\tcase S_ATTR_END:\n\t\t\tcase S_TAG_SPACE:\n\t\t\tcase S_TAG_CLOSE:\n\t\t\t\tbreak;//normal\n\t\t\tcase S_ATTR_NOQUOT_VALUE://Compatible state\n\t\t\tcase S_ATTR:\n\t\t\t\tvalue = source.slice(start,p);\n\t\t\t\tif(value.slice(-1) === '/'){\n\t\t\t\t\tel.closed  = true;\n\t\t\t\t\tvalue = value.slice(0,-1)\n\t\t\t\t}\n\t\t\tcase S_ATTR_SPACE:\n\t\t\t\tif(s === S_ATTR_SPACE){\n\t\t\t\t\tvalue = attrName;\n\t\t\t\t}\n\t\t\t\tif(s == S_ATTR_NOQUOT_VALUE){\n\t\t\t\t\terrorHandler.warning('attribute \"'+value+'\" missed quot(\")!');\n\t\t\t\t\taddAttribute(attrName, value, start)\n\t\t\t\t}else{\n\t\t\t\t\tif(!NAMESPACE.isHTML(currentNSMap['']) || !value.match(/^(?:disabled|checked|selected)$/i)){\n\t\t\t\t\t\terrorHandler.warning('attribute \"'+value+'\" missed value!! \"'+value+'\" instead!!')\n\t\t\t\t\t}\n\t\t\t\t\taddAttribute(value, value, start)\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase S_EQ:\n\t\t\t\tthrow new Error('attribute value missed!!');\n\t\t\t}\n//\t\t\tconsole.log(tagName,tagNamePattern,tagNamePattern.test(tagName))\n\t\t\treturn p;\n\t\t/*xml space '\\x20' | #x9 | #xD | #xA; */\n\t\tcase '\\u0080':\n\t\t\tc = ' ';\n\t\tdefault:\n\t\t\tif(c<= ' '){//space\n\t\t\t\tswitch(s){\n\t\t\t\tcase S_TAG:\n\t\t\t\t\tel.setTagName(source.slice(start,p));//tagName\n\t\t\t\t\ts = S_TAG_SPACE;\n\t\t\t\t\tbreak;\n\t\t\t\tcase S_ATTR:\n\t\t\t\t\tattrName = source.slice(start,p)\n\t\t\t\t\ts = S_ATTR_SPACE;\n\t\t\t\t\tbreak;\n\t\t\t\tcase S_ATTR_NOQUOT_VALUE:\n\t\t\t\t\tvar value = source.slice(start, p);\n\t\t\t\t\terrorHandler.warning('attribute \"'+value+'\" missed quot(\")!!');\n\t\t\t\t\taddAttribute(attrName, value, start)\n\t\t\t\tcase S_ATTR_END:\n\t\t\t\t\ts = S_TAG_SPACE;\n\t\t\t\t\tbreak;\n\t\t\t\t//case S_TAG_SPACE:\n\t\t\t\t//case S_EQ:\n\t\t\t\t//case S_ATTR_SPACE:\n\t\t\t\t//\tvoid();break;\n\t\t\t\t//case S_TAG_CLOSE:\n\t\t\t\t\t//ignore warning\n\t\t\t\t}\n\t\t\t}else{//not space\n//S_TAG,\tS_ATTR,\tS_EQ,\tS_ATTR_NOQUOT_VALUE\n//S_ATTR_SPACE,\tS_ATTR_END,\tS_TAG_SPACE, S_TAG_CLOSE\n\t\t\t\tswitch(s){\n\t\t\t\t//case S_TAG:void();break;\n\t\t\t\t//case S_ATTR:void();break;\n\t\t\t\t//case S_ATTR_NOQUOT_VALUE:void();break;\n\t\t\t\tcase S_ATTR_SPACE:\n\t\t\t\t\tvar tagName =  el.tagName;\n\t\t\t\t\tif (!NAMESPACE.isHTML(currentNSMap['']) || !attrName.match(/^(?:disabled|checked|selected)$/i)) {\n\t\t\t\t\t\terrorHandler.warning('attribute \"'+attrName+'\" missed value!! \"'+attrName+'\" instead2!!')\n\t\t\t\t\t}\n\t\t\t\t\taddAttribute(attrName, attrName, start);\n\t\t\t\t\tstart = p;\n\t\t\t\t\ts = S_ATTR;\n\t\t\t\t\tbreak;\n\t\t\t\tcase S_ATTR_END:\n\t\t\t\t\terrorHandler.warning('attribute space is required\"'+attrName+'\"!!')\n\t\t\t\tcase S_TAG_SPACE:\n\t\t\t\t\ts = S_ATTR;\n\t\t\t\t\tstart = p;\n\t\t\t\t\tbreak;\n\t\t\t\tcase S_EQ:\n\t\t\t\t\ts = S_ATTR_NOQUOT_VALUE;\n\t\t\t\t\tstart = p;\n\t\t\t\t\tbreak;\n\t\t\t\tcase S_TAG_CLOSE:\n\t\t\t\t\tthrow new Error(\"elements closed character '/' and '>' must be connected to\");\n\t\t\t\t}\n\t\t\t}\n\t\t}//end outer switch\n\t\t//console.log('p++',p)\n\t\tp++;\n\t}\n}\n/**\n * @return true if has new namespace define\n */\nfunction appendElement(el,domBuilder,currentNSMap){\n\tvar tagName = el.tagName;\n\tvar localNSMap = null;\n\t//var currentNSMap = parseStack[parseStack.length-1].currentNSMap;\n\tvar i = el.length;\n\twhile(i--){\n\t\tvar a = el[i];\n\t\tvar qName = a.qName;\n\t\tvar value = a.value;\n\t\tvar nsp = qName.indexOf(':');\n\t\tif(nsp>0){\n\t\t\tvar prefix = a.prefix = qName.slice(0,nsp);\n\t\t\tvar localName = qName.slice(nsp+1);\n\t\t\tvar nsPrefix = prefix === 'xmlns' && localName\n\t\t}else{\n\t\t\tlocalName = qName;\n\t\t\tprefix = null\n\t\t\tnsPrefix = qName === 'xmlns' && ''\n\t\t}\n\t\t//can not set prefix,because prefix !== ''\n\t\ta.localName = localName ;\n\t\t//prefix == null for no ns prefix attribute\n\t\tif(nsPrefix !== false){//hack!!\n\t\t\tif(localNSMap == null){\n\t\t\t\tlocalNSMap = {}\n\t\t\t\t//console.log(currentNSMap,0)\n\t\t\t\t_copy(currentNSMap,currentNSMap={})\n\t\t\t\t//console.log(currentNSMap,1)\n\t\t\t}\n\t\t\tcurrentNSMap[nsPrefix] = localNSMap[nsPrefix] = value;\n\t\t\ta.uri = NAMESPACE.XMLNS\n\t\t\tdomBuilder.startPrefixMapping(nsPrefix, value)\n\t\t}\n\t}\n\tvar i = el.length;\n\twhile(i--){\n\t\ta = el[i];\n\t\tvar prefix = a.prefix;\n\t\tif(prefix){//no prefix attribute has no namespace\n\t\t\tif(prefix === 'xml'){\n\t\t\t\ta.uri = NAMESPACE.XML;\n\t\t\t}if(prefix !== 'xmlns'){\n\t\t\t\ta.uri = currentNSMap[prefix || '']\n\n\t\t\t\t//{console.log('###'+a.qName,domBuilder.locator.systemId+'',currentNSMap,a.uri)}\n\t\t\t}\n\t\t}\n\t}\n\tvar nsp = tagName.indexOf(':');\n\tif(nsp>0){\n\t\tprefix = el.prefix = tagName.slice(0,nsp);\n\t\tlocalName = el.localName = tagName.slice(nsp+1);\n\t}else{\n\t\tprefix = null;//important!!\n\t\tlocalName = el.localName = tagName;\n\t}\n\t//no prefix element has default namespace\n\tvar ns = el.uri = currentNSMap[prefix || ''];\n\tdomBuilder.startElement(ns,localName,tagName,el);\n\t//endPrefixMapping and startPrefixMapping have not any help for dom builder\n\t//localNSMap = null\n\tif(el.closed){\n\t\tdomBuilder.endElement(ns,localName,tagName);\n\t\tif(localNSMap){\n\t\t\tfor (prefix in localNSMap) {\n\t\t\t\tif (Object.prototype.hasOwnProperty.call(localNSMap, prefix)) {\n\t\t\t\t\tdomBuilder.endPrefixMapping(prefix);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}else{\n\t\tel.currentNSMap = currentNSMap;\n\t\tel.localNSMap = localNSMap;\n\t\t//parseStack.push(el);\n\t\treturn true;\n\t}\n}\nfunction parseHtmlSpecialContent(source,elStartEnd,tagName,entityReplacer,domBuilder){\n\tif(/^(?:script|textarea)$/i.test(tagName)){\n\t\tvar elEndStart =  source.indexOf('</'+tagName+'>',elStartEnd);\n\t\tvar text = source.substring(elStartEnd+1,elEndStart);\n\t\tif(/[&<]/.test(text)){\n\t\t\tif(/^script$/i.test(tagName)){\n\t\t\t\t//if(!/\\]\\]>/.test(text)){\n\t\t\t\t\t//lexHandler.startCDATA();\n\t\t\t\t\tdomBuilder.characters(text,0,text.length);\n\t\t\t\t\t//lexHandler.endCDATA();\n\t\t\t\t\treturn elEndStart;\n\t\t\t\t//}\n\t\t\t}//}else{//text area\n\t\t\t\ttext = text.replace(/&#?\\w+;/g,entityReplacer);\n\t\t\t\tdomBuilder.characters(text,0,text.length);\n\t\t\t\treturn elEndStart;\n\t\t\t//}\n\n\t\t}\n\t}\n\treturn elStartEnd+1;\n}\nfunction fixSelfClosed(source,elStartEnd,tagName,closeMap){\n\t//if(tagName in closeMap){\n\tvar pos = closeMap[tagName];\n\tif(pos == null){\n\t\t//console.log(tagName)\n\t\tpos =  source.lastIndexOf('</'+tagName+'>')\n\t\tif(pos<elStartEnd){//忘记闭合\n\t\t\tpos = source.lastIndexOf('</'+tagName)\n\t\t}\n\t\tcloseMap[tagName] =pos\n\t}\n\treturn pos<elStartEnd;\n\t//}\n}\n\nfunction _copy (source, target) {\n\tfor (var n in source) {\n\t\tif (Object.prototype.hasOwnProperty.call(source, n)) {\n\t\t\ttarget[n] = source[n];\n\t\t}\n\t}\n}\n\nfunction parseDCC(source,start,domBuilder,errorHandler){//sure start with '<!'\n\tvar next= source.charAt(start+2)\n\tswitch(next){\n\tcase '-':\n\t\tif(source.charAt(start + 3) === '-'){\n\t\t\tvar end = source.indexOf('-->',start+4);\n\t\t\t//append comment source.substring(4,end)//<!--\n\t\t\tif(end>start){\n\t\t\t\tdomBuilder.comment(source,start+4,end-start-4);\n\t\t\t\treturn end+3;\n\t\t\t}else{\n\t\t\t\terrorHandler.error(\"Unclosed comment\");\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t}else{\n\t\t\t//error\n\t\t\treturn -1;\n\t\t}\n\tdefault:\n\t\tif(source.substr(start+3,6) == 'CDATA['){\n\t\t\tvar end = source.indexOf(']]>',start+9);\n\t\t\tdomBuilder.startCDATA();\n\t\t\tdomBuilder.characters(source,start+9,end-start-9);\n\t\t\tdomBuilder.endCDATA()\n\t\t\treturn end+3;\n\t\t}\n\t\t//<!DOCTYPE\n\t\t//startDTD(java.lang.String name, java.lang.String publicId, java.lang.String systemId)\n\t\tvar matchs = split(source,start);\n\t\tvar len = matchs.length;\n\t\tif(len>1 && /!doctype/i.test(matchs[0][0])){\n\t\t\tvar name = matchs[1][0];\n\t\t\tvar pubid = false;\n\t\t\tvar sysid = false;\n\t\t\tif(len>3){\n\t\t\t\tif(/^public$/i.test(matchs[2][0])){\n\t\t\t\t\tpubid = matchs[3][0];\n\t\t\t\t\tsysid = len>4 && matchs[4][0];\n\t\t\t\t}else if(/^system$/i.test(matchs[2][0])){\n\t\t\t\t\tsysid = matchs[3][0];\n\t\t\t\t}\n\t\t\t}\n\t\t\tvar lastMatch = matchs[len-1]\n\t\t\tdomBuilder.startDTD(name, pubid, sysid);\n\t\t\tdomBuilder.endDTD();\n\n\t\t\treturn lastMatch.index+lastMatch[0].length\n\t\t}\n\t}\n\treturn -1;\n}\n\n\n\nfunction parseInstruction(source,start,domBuilder){\n\tvar end = source.indexOf('?>',start);\n\tif(end){\n\t\tvar match = source.substring(start,end).match(/^<\\?(\\S*)\\s*([\\s\\S]*?)\\s*$/);\n\t\tif(match){\n\t\t\tvar len = match[0].length;\n\t\t\tdomBuilder.processingInstruction(match[1], match[2]) ;\n\t\t\treturn end+2;\n\t\t}else{//error\n\t\t\treturn -1;\n\t\t}\n\t}\n\treturn -1;\n}\n\nfunction ElementAttributes(){\n\tthis.attributeNames = {}\n}\nElementAttributes.prototype = {\n\tsetTagName:function(tagName){\n\t\tif(!tagNamePattern.test(tagName)){\n\t\t\tthrow new Error('invalid tagName:'+tagName)\n\t\t}\n\t\tthis.tagName = tagName\n\t},\n\taddValue:function(qName, value, offset) {\n\t\tif(!tagNamePattern.test(qName)){\n\t\t\tthrow new Error('invalid attribute:'+qName)\n\t\t}\n\t\tthis.attributeNames[qName] = this.length;\n\t\tthis[this.length++] = {qName:qName,value:value,offset:offset}\n\t},\n\tlength:0,\n\tgetLocalName:function(i){return this[i].localName},\n\tgetLocator:function(i){return this[i].locator},\n\tgetQName:function(i){return this[i].qName},\n\tgetURI:function(i){return this[i].uri},\n\tgetValue:function(i){return this[i].value}\n//\t,getIndex:function(uri, localName)){\n//\t\tif(localName){\n//\n//\t\t}else{\n//\t\t\tvar qName = uri\n//\t\t}\n//\t},\n//\tgetValue:function(){return this.getValue(this.getIndex.apply(this,arguments))},\n//\tgetType:function(uri,localName){}\n//\tgetType:function(i){},\n}\n\n\n\nfunction split(source,start){\n\tvar match;\n\tvar buf = [];\n\tvar reg = /'[^']+'|\"[^\"]+\"|[^\\s<>\\/=]+=?|(\\/?\\s*>|<)/g;\n\treg.lastIndex = start;\n\treg.exec(source);//skip <\n\twhile(match = reg.exec(source)){\n\t\tbuf.push(match);\n\t\tif(match[1])return buf;\n\t}\n}\n\nexports.XMLReader = XMLReader;\nexports.ParseError = ParseError;\n", "export { InvalidNumberOfChildrenError } from './invalid-number-of-children';\n", "export class InvalidNumberOfChildrenError extends Error {\n  constructor(tagName: string, expectedNumberOfChild: number, currentNumberOfChild: number, comparison = 'exactly') {\n    super(\n      `${tagName} tag must have ${comparison} ${expectedNumberOfChild} children. It's actually ${currentNumberOfChild}`,\n    );\n    this.name = 'InvalidNumberOfChildrenError';\n  }\n}\n", "export * from './wrappers';\nexport * from './join-with-many-separators';\nexport * from './mathml-element-to-latex-converter';\nexport * from './normalize-whitespace';\n", "export class JoinWithManySeparators {\n  private _separators: string[];\n\n  constructor(separators: string[]) {\n    this._separators = separators;\n  }\n\n  static join(arr: string[], separators: string[], defaultSeparator: string = ''): string {\n    const effectiveSeparators =\n      separators.length > 0 ? separators : defaultSeparator !== undefined ? [defaultSeparator] : [];\n    return new JoinWithManySeparators(effectiveSeparators)._join(arr);\n  }\n\n  private _join(arr: string[]): string {\n    return arr.reduce((joinedStr, currentStr, currentIndex, strArr) => {\n      const separator = currentIndex === strArr.length - 1 ? '' : this._get(currentIndex);\n      return joinedStr + currentStr + separator;\n    }, '');\n  }\n\n  private _get(index: number) {\n    if (!this._separators[index]) return this._separators[this._separators.length - 1];\n    return this._separators[index];\n  }\n}\n", "import { MathMLElement } from '../protocols/mathml-element';\nimport { ToLaTeXConverter } from '../../domain/usecases/to-latex-converter';\nimport { MathMLElementToLatexConverterAdapter } from '../usecases/mathml-to-latex-convertion/mathml-element-to-latex-converter-adapter';\n\nexport const mathMLElementToLaTeXConverter = (mathMLElement: MathMLElement): ToLaTeXConverter =>\n  new MathMLElementToLatexConverterAdapter(mathMLElement).toLatexConverter();\n", "export const normalizeWhiteSpaces = (str: string): string => {\n  return str.replace(/\\s+/g, ' ');\n};\n", "import { Wrapper } from './wrapper';\n\nexport class BracketWrapper {\n  protected _open = '{';\n  protected _close = '}';\n\n  wrap(str: string): string {\n    return new Wrapper(this._open, this._close).wrap(str);\n  }\n}\n", "import { Wrapper } from './wrapper';\n\nexport class GenericWrapper {\n  protected _open: string;\n  protected _close: string;\n\n  constructor(open: string, close: string) {\n    this._open = '\\\\left' + open;\n    this._close = '\\\\right' + close;\n  }\n\n  wrap(str: string): string {\n    return new Wrapper(this._open, this._close).wrap(str);\n  }\n}\n", "export { BracketWrapper } from './bracket';\nexport { ParenthesisWrapper } from './parenthesis';\nexport { GenericWrapper } from './generic';\n", "import { Wrapper } from './wrapper';\n\nexport class ParenthesisWrapper {\n  protected _open = '\\\\left(';\n  protected _close = '\\\\right)';\n\n  wrap(str: string): string {\n    return new Wrapper(this._open, this._close).wrap(str);\n  }\n\n  wrapIfMoreThanOneChar(str: string): string {\n    if (str.length <= 1) return str;\n    return this.wrap(str);\n  }\n}\n", "export class Wrapper {\n  protected _open: string;\n  protected _close: string;\n\n  constructor(open: string, close: string) {\n    this._open = open;\n    this._close = close;\n  }\n\n  wrap(str: string): string {\n    return this._open + str + this._close;\n  }\n}\n", "export interface MathMLElement {\n  readonly name: string;\n  readonly value: string;\n  readonly children: MathMLElement[];\n  attributes: Record<string, string>;\n}\n\nexport class VoidMathMLElement implements MathMLElement {\n  readonly name = 'void';\n  readonly value = '';\n  readonly children = [];\n  attributes = {};\n}\n", "import { ToLaTeXConverter } from '../../../../domain/usecases/to-latex-converter';\nimport { MathMLElement } from '../../../protocols/mathml-element';\nimport { mathMLElementToLaTeXConverter } from '../../../helpers';\n\nexport class GenericSpacingWrapper implements ToLaTeXConverter {\n  private readonly _mathmlElement: MathMLElement;\n\n  constructor(mathElement: MathMLElement) {\n    this._mathmlElement = mathElement;\n  }\n\n  convert(): string {\n    return this._mathmlElement.children\n      .map((child) => mathMLElementToLaTeXConverter(child))\n      .map((converter) => converter.convert())\n      .join(' ');\n  }\n}\n", "import { ToLaTeXConverter } from '../../../../domain/usecases/to-latex-converter';\nimport { MathMLElement } from '../../../protocols/mathml-element';\nimport { mathMLElementToLaTeXConverter } from '../../../helpers/mathml-element-to-latex-converter';\nimport { InvalidNumberOfChildrenError } from '../../../errors';\nimport { latexAccents } from '../../../../syntax/latex-accents';\n\nexport class GenericUnderOver implements ToLaTeXConverter {\n  private readonly _mathmlElement: MathMLElement;\n\n  constructor(mathElement: MathMLElement) {\n    this._mathmlElement = mathElement;\n  }\n\n  convert(): string {\n    const { name, children } = this._mathmlElement;\n    const childrenLength = children.length;\n\n    if (childrenLength !== 2) throw new InvalidNumberOfChildrenError(name, 2, childrenLength);\n\n    const content = mathMLElementToLaTeXConverter(children[0]).convert();\n    const accent = mathMLElementToLaTeXConverter(children[1]).convert();\n\n    return this._applyCommand(content, accent);\n  }\n\n  private _applyCommand(content: string, accent: string): string {\n    const type = this._mathmlElement.name.match(/under/) ? TagTypes.Under : TagTypes.Over;\n    return new UnderOverSetter(type).apply(content, accent);\n  }\n}\n\nclass UnderOverSetter {\n  private readonly _type;\n\n  constructor(type: TagTypes) {\n    this._type = type;\n  }\n\n  apply(content: string, accent: string) {\n    return latexAccents.includes(accent) ? `${accent}{${content}}` : `${this._defaultCommand}{${accent}}{${content}}`;\n  }\n\n  private get _defaultCommand(): string {\n    if (this._type === TagTypes.Under) return '\\\\underset';\n    return '\\\\overset';\n  }\n}\n\nenum TagTypes {\n  Under,\n  Over,\n}\n", "export { Math } from './math';\nexport { MI } from './mi';\nexport { MO } from './mo';\nexport { MN } from './mn';\nexport { MSqrt } from './msqrt';\nexport { MFenced } from './mfenced';\nexport { MFrac } from './mfrac';\nexport { MRoot } from './mroot';\nexport { MAction } from './maction';\nexport { MEnclose } from './menclose';\nexport { MError } from './merror';\nexport { MPhantom } from './mphantom';\nexport { MSup } from './msup';\nexport { MSub } from './msub';\nexport { MSubsup } from './msubsup';\nexport { MMultiscripts } from './mmultiscripts';\nexport { MText } from './mtext';\nexport { MUnderover } from './munderover';\nexport { MTable } from './mtable';\nexport { MTr } from './mtr';\nexport { GenericSpacingWrapper } from './generic-spacing-wrapper';\nexport { GenericUnderOver } from './generic-under-over';\nexport { MRow } from './mrow';\nexport { MSpace } from './mspace';\nexport { Void } from './void';\n", "import { ToLaTeXConverter } from '../../../../domain/usecases/to-latex-converter';\nimport { MathMLElement } from '../../../protocols/mathml-element';\nimport { mathMLElementToLaTeXConverter } from '../../../helpers/mathml-element-to-latex-converter';\n\nexport class MAction implements ToLaTeXConverter {\n  private readonly _mathmlElement: MathMLElement;\n\n  constructor(mathElement: MathMLElement) {\n    this._mathmlElement = mathElement;\n  }\n\n  convert(): string {\n    const { children } = this._mathmlElement;\n\n    if (this._isToggle())\n      return children\n        .map((child) => mathMLElementToLaTeXConverter(child))\n        .map((converter) => converter.convert())\n        .join(' \\\\Longrightarrow ');\n\n    return mathMLElementToLaTeXConverter(children[0]).convert();\n  }\n\n  private _isToggle(): boolean {\n    const { actiontype } = this._mathmlElement.attributes;\n    return actiontype === 'toggle' || !actiontype;\n  }\n}\n", "import { ToLaTeXConverter } from '../../../../domain/usecases/to-latex-converter';\nimport { MathMLElement } from '../../../protocols/mathml-element';\nimport { mathMLElementToLaTeXConverter } from '../../../helpers/mathml-element-to-latex-converter';\nimport { normalizeWhiteSpaces } from '../../../helpers/normalize-whitespace';\n\nexport class Math implements ToLaTeXConverter {\n  private readonly _mathmlElement: MathMLElement;\n\n  constructor(mathElement: MathMLElement) {\n    this._mathmlElement = mathElement;\n  }\n\n  convert(): string {\n    const unnormalizedLatex = this._mathmlElement.children\n      .map((child) => mathMLElementToLaTeXConverter(child))\n      .map((converter) => converter.convert())\n      .join(' ');\n\n    return normalizeWhiteSpaces(unnormalizedLatex);\n  }\n}\n", "import { ToLaTeXConverter } from '../../../../domain/usecases/to-latex-converter';\nimport { MathMLElement } from '../../../protocols/mathml-element';\nimport { mathMLElementToLaTeXConverter } from '../../../helpers/mathml-element-to-latex-converter';\n\nexport class MEnclose implements ToLaTeXConverter {\n  private readonly _mathmlElement: MathMLElement;\n\n  constructor(mathElement: MathMLElement) {\n    this._mathmlElement = mathElement;\n  }\n\n  convert(): string {\n    const latexJoinedChildren = this._mathmlElement.children\n      .map((child) => mathMLElementToLaTeXConverter(child))\n      .map((converter) => converter.convert())\n      .join(' ');\n\n    if (this._notation === 'actuarial') return `\\\\overline{\\\\left.${latexJoinedChildren}\\\\right|}`;\n    if (this._notation === 'radical') return `\\\\sqrt{${latexJoinedChildren}}`;\n    if (['box', 'roundedbox', 'circle'].includes(this._notation)) return `\\\\boxed{${latexJoinedChildren}}`;\n    if (this._notation === 'left') return `\\\\left|${latexJoinedChildren}`;\n    if (this._notation === 'right') return `${latexJoinedChildren}\\\\right|`;\n    if (this._notation === 'top') return `\\\\overline{${latexJoinedChildren}}`;\n    if (this._notation === 'bottom') return `\\\\underline{${latexJoinedChildren}}`;\n    if (this._notation === 'updiagonalstrike') return `\\\\cancel{${latexJoinedChildren}}`;\n    if (this._notation === 'downdiagonalstrike') return `\\\\bcancel{${latexJoinedChildren}}`;\n    if (this._notation === 'updiagonalarrow') return `\\\\cancelto{}{${latexJoinedChildren}}`;\n    if (['verticalstrike', 'horizontalstrike'].includes(this._notation)) return `\\\\hcancel{${latexJoinedChildren}}`;\n    if (this._notation === 'madruwb') return `\\\\underline{${latexJoinedChildren}\\\\right|}`;\n    if (this._notation === 'phasorangle') return `{\\\\angle \\\\underline{${latexJoinedChildren}}}`;\n\n    return `\\\\overline{\\\\left.\\\\right)${latexJoinedChildren}}`;\n  }\n\n  private get _notation(): string {\n    return this._mathmlElement.attributes.notation || 'longdiv';\n  }\n}\n", "import { ToLaTeXConverter } from '../../../../domain/usecases/to-latex-converter';\nimport { MathMLElement } from '../../../protocols/mathml-element';\nimport { mathMLElementToLaTeXConverter } from '../../../helpers/mathml-element-to-latex-converter';\n\nexport class MError implements ToLaTeXConverter {\n  private readonly _mathmlElement: MathMLElement;\n\n  constructor(mathElement: MathMLElement) {\n    this._mathmlElement = mathElement;\n  }\n\n  convert(): string {\n    const latexJoinedChildren = this._mathmlElement.children\n      .map((child) => mathMLElementToLaTeXConverter(child))\n      .map((converter) => converter.convert())\n      .join(' ');\n\n    return `\\\\color{red}{${latexJoinedChildren}}`;\n  }\n}\n", "import { ToLaTeXConverter } from '../../../../domain/usecases/to-latex-converter';\nimport { MathMLElement } from '../../../protocols/mathml-element';\nimport { mathMLElementToLaTeXConverter } from '../../../helpers/mathml-element-to-latex-converter';\nimport { GenericWrapper, JoinWithManySeparators } from '../../../helpers';\n\nexport class MFenced implements ToLaTeXConverter {\n  private readonly _mathmlElement: MathMLElement;\n  private readonly open: string;\n  private readonly close: string;\n\n  constructor(mathmlElement: MathMLElement) {\n    this._mathmlElement = mathmlElement;\n    this.open = this._mathmlElement.attributes.open || '';\n    this.close = this._mathmlElement.attributes.close || '';\n  }\n\n  convert(): string {\n    const latexChildren = this._mathmlElement.children\n      .map((child) => mathMLElementToLaTeXConverter(child))\n      .map((converter) => converter.convert());\n\n    if (this._isThereRelativeOfName(this._mathmlElement.children, 'mtable'))\n      return new Matrix(this.open, this.close).apply(latexChildren);\n\n    const separatorsAttr = this._mathmlElement.attributes.separators;\n    const hasSeparatorsAttribute = separatorsAttr !== undefined;\n    const separatorsArray = separatorsAttr ? Array.from(separatorsAttr) : [];\n\n    // Use comma default only if no separators **attribute** was provided\n    const defaultSeparator = !hasSeparatorsAttribute ? ',' : '';\n    return new Vector(this.open, this.close, separatorsArray, defaultSeparator).apply(latexChildren);\n  }\n\n  private _isThereRelativeOfName(mathmlElements: MathMLElement[], elementName: string): boolean {\n    return mathmlElements.some(\n      (child) => child.name === elementName || this._isThereRelativeOfName(child.children, elementName),\n    );\n  }\n}\n\nclass Vector {\n  private readonly open: string;\n  private readonly close: string;\n\n  constructor(\n    open: string,\n    close: string,\n    private readonly separators: string[],\n    private readonly defaultSeparator: string,\n  ) {\n    this.open = open || '(';\n    this.close = close || ')';\n  }\n\n  apply(latexContents: string[]): string {\n    const contentWithoutWrapper = JoinWithManySeparators.join(latexContents, this.separators, this.defaultSeparator);\n    return new GenericWrapper(this.open, this.close).wrap(contentWithoutWrapper);\n  }\n}\n\nclass Matrix {\n  private readonly separators: Separators;\n  private readonly _genericCommand = 'matrix';\n\n  constructor(open: string, close: string) {\n    this.separators = new Separators(open, close);\n  }\n\n  apply(latexContents: string[]): string {\n    const command = this._command;\n    const matrix = `\\\\begin{${command}}\\n${latexContents.join('')}\\n\\\\end{${command}}`;\n\n    return command === this._genericCommand ? this.separators.wrap(matrix) : matrix;\n  }\n\n  private get _command(): string {\n    if (this.separators.areParentheses()) return 'pmatrix';\n    if (this.separators.areSquareBrackets()) return 'bmatrix';\n    if (this.separators.areBrackets()) return 'Bmatrix';\n    if (this.separators.areDivides()) return 'vmatrix';\n    if (this.separators.areParallels()) return 'Vmatrix';\n    if (this.separators.areNotEqual()) return this._genericCommand;\n    return 'bmatrix';\n  }\n}\n\nclass Separators {\n  constructor(\n    private readonly open: string,\n    private readonly close: string,\n  ) {}\n\n  wrap(str: string): string {\n    return new GenericWrapper(this.open, this.close).wrap(str);\n  }\n\n  areParentheses(): boolean {\n    return this._compare('(', ')');\n  }\n\n  areSquareBrackets(): boolean {\n    return this._compare('[', ']');\n  }\n\n  areBrackets(): boolean {\n    return this._compare('{', '}');\n  }\n\n  areDivides(): boolean {\n    return this._compare('|', '|');\n  }\n\n  areParallels(): boolean {\n    return this._compare('||', '||');\n  }\n\n  areNotEqual(): boolean {\n    return this.open !== this.close;\n  }\n\n  private _compare(openToCompare: string, closeToCompare: string): boolean {\n    return this.open === openToCompare && this.close === closeToCompare;\n  }\n}\n", "import { ToLaTeXConverter } from '../../../../domain/usecases/to-latex-converter';\nimport { MathMLElement } from '../../../protocols/mathml-element';\nimport { InvalidNumberOfChildrenError } from '../../../errors';\nimport { ParenthesisWrapper, mathMLElementToLaTeXConverter } from '../../../helpers';\n\nexport class MFrac implements ToLaTeXConverter {\n  private readonly _mathmlElement: MathMLElement;\n\n  constructor(mathElement: MathMLElement) {\n    this._mathmlElement = mathElement;\n  }\n\n  convert(): string {\n    const { children, name } = this._mathmlElement;\n    const childrenLength = children.length;\n\n    if (childrenLength !== 2) throw new InvalidNumberOfChildrenError(name, 2, childrenLength);\n\n    const num = mathMLElementToLaTeXConverter(children[0]).convert();\n    const den = mathMLElementToLaTeXConverter(children[1]).convert();\n\n    if (this._isBevelled()) return `${this._wrapIfMoreThanOneChar(num)}/${this._wrapIfMoreThanOneChar(den)}`;\n\n    return `\\\\frac{${num}}{${den}}`;\n  }\n\n  private _wrapIfMoreThanOneChar(str: string): string {\n    return new ParenthesisWrapper().wrapIfMoreThanOneChar(str);\n  }\n\n  private _isBevelled(): boolean {\n    return !!this._mathmlElement.attributes.bevelled;\n  }\n}\n", "import { ToLaTeXConverter } from '../../../../domain/usecases/to-latex-converter';\nimport { MathMLElement } from '../../../protocols/mathml-element';\nimport { normalizeWhiteSpaces } from '../../../helpers';\nimport { allMathSymbolsByChar, allMathSymbolsByGlyph, mathNumberByGlyph } from '../../../../syntax';\nimport { UTF8ToLtXConverter } from 'data/protocols';\nimport { HashUTF8ToLtXConverter } from '../../../../syntax/utf8-converter';\n\nexport class MI implements ToLaTeXConverter {\n  private readonly _mathmlElement: MathMLElement;\n\n  private readonly utf8Converter: UTF8ToLtXConverter = new HashUTF8ToLtXConverter();\n\n  constructor(mathElement: MathMLElement) {\n    this._mathmlElement = mathElement;\n  }\n\n  convert(): string {\n    const normalizedValue = normalizeWhiteSpaces(this._mathmlElement.value);\n    if (normalizedValue === ' ') return Character.apply(normalizedValue);\n\n    const trimmedValue = normalizedValue.trim();\n    const convertedChar = Character.apply(trimmedValue);\n\n    const parsedChar = this.utf8Converter.convert(convertedChar);\n    if (parsedChar !== convertedChar) return parsedChar;\n\n    return this.wrapInMathVariant(convertedChar, this.getMathVariant(this._mathmlElement.attributes));\n  }\n\n  private getMathVariant(attributes: Record<string, unknown> | undefined) {\n    if (!attributes || !attributes.mathvariant) return undefined;\n    return attributes.mathvariant as string;\n  }\n\n  private wrapInMathVariant(value: string, mathVariant: string | undefined) {\n    switch (mathVariant) {\n      case 'bold':\n        return `\\\\mathbf{${value}}`;\n      case 'italic':\n        return `\\\\mathit{${value}}`;\n      case 'bold-italic':\n        return `\\\\mathbf{\\\\mathit{${value}}}`;\n      case 'double-struck':\n        return `\\\\mathbb{${value}}`;\n      case 'bold-fraktur':\n        return `\\\\mathbf{\\\\mathfrak{${value}}}`;\n      case 'script':\n        return `\\\\mathcal{${value}}`;\n      case 'bold-script':\n        return `\\\\mathbf{\\\\mathcal{${value}}}`;\n      case 'fraktur':\n        return `\\\\mathfrak{${value}}`;\n      case 'sans-serif':\n        return `\\\\mathsf{${value}}`;\n      case 'bold-sans-serif':\n        return `\\\\mathbf{\\\\mathsf{${value}}}`;\n      case 'sans-serif-italic':\n        return `\\\\mathsf{\\\\mathit{${value}}}`;\n      case 'sans-serif-bold-italic':\n        return `\\\\mathbf{\\\\mathsf{\\\\mathit{${value}}}}`;\n      case 'monospace':\n        return `\\\\mathtt{${value}}`;\n      default:\n        return value;\n    }\n  }\n}\n\nclass Character {\n  private _value: string;\n\n  constructor(value: string) {\n    this._value = value;\n  }\n\n  static apply(value: string): string {\n    return new Character(value)._apply();\n  }\n\n  private _apply(): string {\n    return (\n      this._findByCharacter() ||\n      this._findByGlyph() ||\n      this._findByNumber() ||\n      new HashUTF8ToLtXConverter().convert(this._value)\n    );\n  }\n\n  private _findByCharacter(): string | undefined {\n    return allMathSymbolsByChar[this._value];\n  }\n\n  private _findByGlyph(): string | undefined {\n    return allMathSymbolsByGlyph[this._value];\n  }\n\n  private _findByNumber(): string | undefined {\n    return mathNumberByGlyph[this._value];\n  }\n}\n", "import { ToLaTeXConverter } from '../../../../domain/usecases/to-latex-converter';\nimport { MathMLElement } from '../../../protocols/mathml-element';\nimport { mathMLElementToLaTeXConverter, ParenthesisWrapper } from '../../../helpers';\nimport { InvalidNumberOfChildrenError } from '../../../errors';\n\nexport class MMultiscripts implements ToLaTeXConverter {\n  private readonly _mathmlElement: MathMLElement;\n\n  constructor(mathElement: MathMLElement) {\n    this._mathmlElement = mathElement;\n  }\n\n  convert(): string {\n    const { name, children } = this._mathmlElement;\n    const childrenLength = children.length;\n\n    if (childrenLength < 3) throw new InvalidNumberOfChildrenError(name, 3, childrenLength, 'at least');\n\n    const baseContent = mathMLElementToLaTeXConverter(children[0]).convert();\n\n    return this._prescriptLatex() + this._wrapInParenthesisIfThereIsSpace(baseContent) + this._postscriptLatex();\n  }\n\n  private _prescriptLatex(): string {\n    const { children } = this._mathmlElement;\n    let sub;\n    let sup;\n\n    if (this._isPrescripts(children[1])) {\n      sub = children[2];\n      sup = children[3];\n    } else if (this._isPrescripts(children[3])) {\n      sub = children[4];\n      sup = children[5];\n    } else return '';\n\n    const subLatex = mathMLElementToLaTeXConverter(sub).convert();\n    const supLatex = mathMLElementToLaTeXConverter(sup).convert();\n\n    return `\\\\_{${subLatex}}^{${supLatex}}`;\n  }\n\n  private _postscriptLatex(): string {\n    const { children } = this._mathmlElement;\n    if (this._isPrescripts(children[1])) return '';\n\n    const sub = children[1];\n    const sup = children[2];\n\n    const subLatex = mathMLElementToLaTeXConverter(sub).convert();\n    const supLatex = mathMLElementToLaTeXConverter(sup).convert();\n\n    return `_{${subLatex}}^{${supLatex}}`;\n  }\n\n  private _wrapInParenthesisIfThereIsSpace(str: string): string {\n    if (!str.match(/\\s+/g)) return str;\n    return new ParenthesisWrapper().wrap(str);\n  }\n\n  private _isPrescripts(child: MathMLElement): boolean {\n    return child?.name === 'mprescripts';\n  }\n}\n", "import { ToLaTeXConverter } from '../../../../domain/usecases/to-latex-converter';\nimport { MathMLElement } from '../../../protocols/mathml-element';\nimport { normalizeWhiteSpaces } from '../../../helpers';\nimport { mathNumberByGlyph } from '../../../../syntax';\n\nexport class MN implements ToLaTeXConverter {\n  private readonly _mathmlElement: MathMLElement;\n\n  constructor(mathElement: MathMLElement) {\n    this._mathmlElement = mathElement;\n  }\n\n  convert(): string {\n    const normalizedValue = normalizeWhiteSpaces(this._mathmlElement.value).trim();\n    const convertedValue = mathNumberByGlyph[normalizedValue];\n\n    return convertedValue || normalizedValue;\n  }\n}\n", "import { ToLaTeXConverter } from '../../../../domain/usecases/to-latex-converter';\nimport { MathMLElement } from '../../../protocols/mathml-element';\nimport { normalizeWhiteSpaces } from '../../../helpers';\nimport {\n  HashUTF8ToLtXConverter,\n  allMathOperatorsByChar,\n  allMathOperatorsByGlyph,\n  mathNumberByGlyph,\n} from '../../../../syntax';\n\nexport class MO implements ToLaTeXConverter {\n  private readonly _mathmlElement: MathMLElement;\n\n  constructor(mathElement: MathMLElement) {\n    this._mathmlElement = mathElement;\n  }\n\n  convert(): string {\n    const normalizedValue = normalizeWhiteSpaces(this._mathmlElement.value);\n    const trimmedValue = normalizedValue.trim();\n\n    return Operator.operate(trimmedValue);\n  }\n}\n\nclass Operator {\n  private _value: string;\n\n  constructor(value: string) {\n    this._value = value;\n  }\n\n  static operate(value: string): string {\n    return new Operator(value)._operate();\n  }\n\n  private _operate(): string {\n    return (\n      this._findByCharacter() ||\n      this._findByGlyph() ||\n      this._findByNumber() ||\n      new HashUTF8ToLtXConverter().convert(this._value)\n    );\n  }\n\n  private _findByCharacter(): string | undefined {\n    return allMathOperatorsByChar[this._value];\n  }\n\n  private _findByGlyph(): string | undefined {\n    return allMathOperatorsByGlyph[this._value];\n  }\n\n  private _findByNumber(): string | undefined {\n    return mathNumberByGlyph[this._value];\n  }\n}\n", "import { ToLaTeXConverter } from '../../../../domain/usecases/to-latex-converter';\nimport { MathMLElement } from '../../../protocols/mathml-element';\n\nexport class MPhantom implements ToLaTeXConverter {\n  private readonly _mathmlElement;\n\n  constructor(mathElement: MathMLElement) {\n    this._mathmlElement = mathElement;\n  }\n\n  convert(): string {\n    return '';\n  }\n}\n", "import { ToLaTeXConverter } from '../../../../domain/usecases/to-latex-converter';\nimport { MathMLElement } from '../../../protocols/mathml-element';\nimport { mathMLElementToLaTeXConverter } from '../../../helpers';\nimport { InvalidNumberOfChildrenError } from '../../../errors';\n\nexport class MRoot implements ToLaTeXConverter {\n  private readonly _mathmlElement: MathMLElement;\n\n  constructor(mathElement: MathMLElement) {\n    this._mathmlElement = mathElement;\n  }\n\n  convert(): string {\n    const { name, children } = this._mathmlElement;\n    const childrenLength = children.length;\n\n    if (childrenLength !== 2) throw new InvalidNumberOfChildrenError(name, 2, childrenLength);\n\n    const content = mathMLElementToLaTeXConverter(children[0]).convert();\n    const rootIndex = mathMLElementToLaTeXConverter(children[1]).convert();\n\n    return `\\\\sqrt[${rootIndex}]{${content}}`;\n  }\n}\n", "import { ToLaTeXConverter } from '../../../../domain/usecases/to-latex-converter';\nimport { MathMLElement } from '../../../protocols/mathml-element';\nimport { mathMLElementToLaTeXConverter } from '../../../helpers';\n\nexport class MRow implements ToLaTeXConverter {\n  private readonly _mathmlElement: MathMLElement;\n\n  constructor(mathElement: MathMLElement) {\n    this._mathmlElement = mathElement;\n  }\n\n  convert(): string {\n    // Check if this is a linear system pattern: { + mtable + empty closing operator\n    if (this._isLinearSystemPattern()) {\n      return this._convertAsLinearSystem();\n    }\n\n    return this._mathmlElement.children\n      .map((child) => mathMLElementToLaTeXConverter(child))\n      .map((converter) => converter.convert())\n      .join(' ');\n  }\n\n  private _isLinearSystemPattern(): boolean {\n    const { children } = this._mathmlElement;\n\n    if (children.length !== 3) return false;\n\n    // First child should be opening brace operator\n    const firstChild = children[0];\n    const isOpeningBrace = firstChild.name === 'mo' && firstChild.value.trim() === '{';\n\n    // Second child should be mtable\n    const secondChild = children[1];\n    const isMTable = secondChild.name === 'mtable';\n\n    // Third child should be empty closing operator\n    const thirdChild = children[2];\n    const isEmptyClosing = thirdChild.name === 'mo' && thirdChild.value.trim() === '';\n\n    return isOpeningBrace && isMTable && isEmptyClosing;\n  }\n\n  private _convertAsLinearSystem(): string {\n    const mtableChild = this._mathmlElement.children[1];\n    const tableContent = mtableChild.children\n      .map((child) => mathMLElementToLaTeXConverter(child))\n      .map((converter) => converter.convert())\n      .join(' \\\\\\\\ ');\n\n    return `\\\\begin{cases} ${tableContent} \\\\end{cases}`;\n  }\n}\n", "import { ToLaTeXConverter } from '../../../../domain/usecases/to-latex-converter';\nimport { MathMLElement } from '../../../protocols/mathml-element';\n\nexport class MSpace implements ToLaTeXConverter {\n  private readonly _mathmlElement: MathMLElement;\n\n  constructor(mathElement: MathMLElement) {\n    this._mathmlElement = mathElement;\n  }\n\n  convert(): string {\n    const { linebreak } = this._mathmlElement.attributes;\n\n    if (linebreak === 'newline') {\n      return ' \\\\\\\\ ';\n    }\n\n    return ' ';\n  }\n}\n", "import { ToLaTeXConverter } from '../../../../domain/usecases/to-latex-converter';\nimport { MathMLElement } from '../../../protocols/mathml-element';\nimport { mathMLElementToLaTeXConverter } from '../../../helpers';\n\nexport class MSqrt implements ToLaTeXConverter {\n  private readonly _mathmlElement: MathMLElement;\n\n  constructor(mathElement: MathMLElement) {\n    this._mathmlElement = mathElement;\n  }\n\n  convert(): string {\n    const latexJoinedChildren = this._mathmlElement.children\n      .map((child) => mathMLElementToLaTeXConverter(child))\n      .map((converter) => converter.convert())\n      .join(' ');\n\n    return `\\\\sqrt{${latexJoinedChildren}}`;\n  }\n}\n", "import { ToLaTeXConverter } from '../../../../domain/usecases/to-latex-converter';\nimport { MathMLElement } from '../../../protocols/mathml-element';\nimport { mathMLElementToLaTeXConverter, ParenthesisWrapper, BracketWrapper } from '../../../helpers';\nimport { InvalidNumberOfChildrenError } from '../../../errors';\n\nexport class MSub implements ToLaTeXConverter {\n  private readonly _mathmlElement: MathMLElement;\n\n  constructor(mathElement: MathMLElement) {\n    this._mathmlElement = mathElement;\n  }\n\n  convert(): string {\n    const { name, children } = this._mathmlElement;\n    const childrenLength = children.length;\n\n    if (childrenLength !== 2) throw new InvalidNumberOfChildrenError(name, 2, childrenLength);\n\n    const baseChild = children[0];\n    const subscriptChild = children[1];\n\n    return `${this._handleBaseChild(baseChild)}_${this._handleSubscriptChild(subscriptChild)}`;\n  }\n\n  private _handleBaseChild(base: MathMLElement): string {\n    const baseChildren = base.children;\n    const baseStr = mathMLElementToLaTeXConverter(base).convert();\n\n    if (baseChildren.length <= 1) {\n      return baseStr;\n    }\n\n    return new ParenthesisWrapper().wrapIfMoreThanOneChar(baseStr);\n  }\n\n  private _handleSubscriptChild(subscript: MathMLElement): string {\n    const subscriptStr = mathMLElementToLaTeXConverter(subscript).convert();\n\n    return new BracketWrapper().wrap(subscriptStr);\n  }\n}\n", "import { ToLaTeXConverter } from '../../../../domain/usecases/to-latex-converter';\nimport { MathMLElement } from '../../../protocols/mathml-element';\nimport { mathMLElementToLaTeXConverter, ParenthesisWrapper, BracketWrapper } from '../../../helpers';\nimport { InvalidNumberOfChildrenError } from '../../../errors';\n\nexport class MSubsup implements ToLaTeXConverter {\n  private readonly _mathmlElement: MathMLElement;\n\n  constructor(mathElement: MathMLElement) {\n    this._mathmlElement = mathElement;\n  }\n\n  convert(): string {\n    const { name, children } = this._mathmlElement;\n    const childrenLength = children.length;\n\n    if (childrenLength !== 3) throw new InvalidNumberOfChildrenError(name, 3, childrenLength);\n\n    const baseChild = children[0];\n    const subscriptChild = children[1];\n    const superscriptChild = children[2];\n\n    return `${this._handleBaseChild(baseChild)}_${this._handleSubscriptChild(subscriptChild)}^${this._handleSuperscriptChild(superscriptChild)}`;\n  }\n\n  private _handleBaseChild(base: MathMLElement): string {\n    const baseChildren = base.children;\n    const baseStr = mathMLElementToLaTeXConverter(base).convert();\n\n    if (baseChildren.length <= 1) {\n      return baseStr;\n    }\n\n    return new ParenthesisWrapper().wrapIfMoreThanOneChar(baseStr);\n  }\n\n  private _handleSubscriptChild(subscript: MathMLElement): string {\n    const subscriptStr = mathMLElementToLaTeXConverter(subscript).convert();\n\n    return new BracketWrapper().wrap(subscriptStr);\n  }\n\n  private _handleSuperscriptChild(superscript: MathMLElement): string {\n    const superscriptStr = mathMLElementToLaTeXConverter(superscript).convert();\n\n    return new BracketWrapper().wrap(superscriptStr);\n  }\n}\n", "import { ToLaTeXConverter } from '../../../../domain/usecases/to-latex-converter';\nimport { MathMLElement } from '../../../protocols/mathml-element';\nimport { mathMLElementToLaTeXConverter, ParenthesisWrapper, BracketWrapper } from '../../../helpers';\nimport { InvalidNumberOfChildrenError } from '../../../errors';\n\nexport class MSup implements ToLaTeXConverter {\n  private readonly _mathmlElement: MathMLElement;\n\n  constructor(mathElement: MathMLElement) {\n    this._mathmlElement = mathElement;\n  }\n\n  convert(): string {\n    const { name, children } = this._mathmlElement;\n    const childrenLength = children.length;\n\n    if (childrenLength !== 2) throw new InvalidNumberOfChildrenError(name, 2, childrenLength);\n\n    const baseChild = children[0];\n    const exponentChild = children[1];\n\n    return `${this._handleBaseChild(baseChild)}^${this._handleExponentChild(exponentChild)}`;\n  }\n\n  private _handleBaseChild(base: MathMLElement): string {\n    const baseChildren = base.children;\n    const baseStr = mathMLElementToLaTeXConverter(base).convert();\n\n    if (baseChildren.length <= 1) {\n      return baseStr;\n    }\n\n    return new ParenthesisWrapper().wrapIfMoreThanOneChar(baseStr);\n  }\n\n  private _handleExponentChild(exponent: MathMLElement): string {\n    const exponentStr = mathMLElementToLaTeXConverter(exponent).convert();\n\n    return new BracketWrapper().wrap(exponentStr);\n  }\n}\n", "import { ToLaTeXConverter } from '../../../../domain/usecases/to-latex-converter';\nimport { MathMLElement } from '../../../protocols/mathml-element';\nimport { mathMLElementToLaTeXConverter } from '../../../helpers';\n\nexport class MTable implements ToLaTeXConverter {\n  private readonly _mathmlElement: MathMLElement;\n\n  constructor(mathElement: MathMLElement) {\n    this._mathmlElement = mathElement;\n    this._addFlagRecursiveIfName(this._mathmlElement.children, 'mtable', 'innerTable');\n  }\n\n  convert(): string {\n    const tableContent = this._mathmlElement.children\n      .map((child) => mathMLElementToLaTeXConverter(child))\n      .map((converter) => converter.convert())\n      .join(' \\\\\\\\\\n');\n\n    return this._hasFlag('innerTable') ? this._wrap(tableContent) : tableContent;\n  }\n\n  private _wrap(latex: string): string {\n    return `\\\\begin{matrix}${latex}\\\\end{matrix}`;\n  }\n\n  private _addFlagRecursiveIfName(mathmlElements: MathMLElement[], name: string, flag: string): void {\n    mathmlElements.forEach((mathmlElement) => {\n      if (mathmlElement.name === name) mathmlElement.attributes[flag] = flag;\n      this._addFlagRecursiveIfName(mathmlElement.children, name, flag);\n    });\n  }\n\n  private _hasFlag(flag: string): boolean {\n    return !!this._mathmlElement.attributes[flag];\n  }\n}\n", "import { ToLaTeXConverter } from '../../../../domain/usecases/to-latex-converter';\nimport { MathMLElement } from '../../../protocols/mathml-element';\nimport { MI } from './mi';\n\nexport class MText implements ToLaTeXConverter {\n  private readonly _mathmlElement: MathMLElement;\n\n  constructor(mathElement: MathMLElement) {\n    this._mathmlElement = mathElement;\n  }\n\n  convert(): string {\n    const { attributes, value } = this._mathmlElement;\n\n    return [...value]\n      .map<Char>((char) => {\n        // if is a letter, number or space, return it\n        if (/^[a-zA-Z0-9]$/.test(char) || char === ' ')\n          return {\n            value: char,\n            isAlphanumeric: true,\n          };\n\n        // if is a symbol, set it to mi parser\n        return {\n          value: char,\n          isAlphanumeric: false,\n        };\n      })\n      .reduce<Char[]>((acc, char) => {\n        // merge consecutive alphanumeric characters\n        if (char.isAlphanumeric) {\n          const lastChar = acc[acc.length - 1];\n          if (lastChar && lastChar.isAlphanumeric) {\n            lastChar.value += char.value;\n            return acc;\n          }\n        }\n\n        return [...acc, char];\n      }, [])\n      .map((char) => {\n        if (!char.isAlphanumeric) {\n          return new MI({\n            name: 'mi',\n            attributes: {},\n            children: [],\n            value: char.value,\n          }).convert();\n        }\n\n        return new TextCommand(attributes.mathvariant).apply(char.value);\n      })\n      .join('');\n  }\n}\n\nclass TextCommand {\n  private readonly _mathvariant: string;\n\n  constructor(mathvariant: string | undefined) {\n    this._mathvariant = mathvariant || 'normal';\n  }\n\n  apply(value: string) {\n    return this._commands.reduce((acc, command, index) => {\n      if (index === 0) return `${command}{${value}}`;\n      return `${command}{${acc}}`;\n    }, '');\n  }\n\n  private get _commands(): string[] {\n    switch (this._mathvariant) {\n      case 'bold':\n        return ['\\\\textbf'];\n      case 'italic':\n        return ['\\\\textit'];\n      case 'bold-italic':\n        return ['\\\\textit', '\\\\textbf'];\n      case 'double-struck':\n        return ['\\\\mathbb'];\n      case 'monospace':\n        return ['\\\\mathtt'];\n      case 'bold-fraktur':\n      case 'fraktur':\n        return ['\\\\mathfrak'];\n      default:\n        return ['\\\\text'];\n    }\n  }\n}\n\ntype Char = {\n  value: string;\n  isAlphanumeric: boolean;\n};\n", "import { ToLaTeXConverter } from '../../../../domain/usecases/to-latex-converter';\nimport { MathMLElement } from '../../../protocols/mathml-element';\nimport { mathMLElementToLaTeXConverter } from '../../../helpers';\n\nexport class MTr implements ToLaTeXConverter {\n  private readonly _mathmlElement: MathMLElement;\n\n  constructor(mathElement: MathMLElement) {\n    this._mathmlElement = mathElement;\n  }\n\n  convert(): string {\n    return this._mathmlElement.children\n      .map((child) => mathMLElementToLaTeXConverter(child))\n      .map((converter) => converter.convert())\n      .join(' & ');\n  }\n}\n", "import { ToLaTeXConverter } from '../../../../domain/usecases/to-latex-converter';\nimport { MathMLElement } from '../../../protocols/mathml-element';\nimport { mathMLElementToLaTeXConverter } from '../../../helpers';\nimport { InvalidNumberOfChildrenError } from '../../../errors';\n\nexport class MUnderover implements ToLaTeXConverter {\n  private readonly _mathmlElement: MathMLElement;\n\n  constructor(mathElement: MathMLElement) {\n    this._mathmlElement = mathElement;\n  }\n\n  convert(): string {\n    const { name, children } = this._mathmlElement;\n    const childrenLength = children.length;\n\n    if (childrenLength !== 3) throw new InvalidNumberOfChildrenError(name, 3, childrenLength);\n\n    const base = mathMLElementToLaTeXConverter(children[0]).convert();\n    const underContent = mathMLElementToLaTeXConverter(children[1]).convert();\n    const overContent = mathMLElementToLaTeXConverter(children[2]).convert();\n\n    return `${base}_{${underContent}}^{${overContent}}`;\n  }\n}\n", "import { ToLaTeXConverter } from 'domain/usecases/to-latex-converter';\n\nexport class Void implements ToLaTeXConverter {\n  constructor(private readonly _mathmlElement: MathMLElement) {}\n\n  convert(): string {\n    return '';\n  }\n}\n", "import * as ToLatexConverters from './converters';\nimport { MathMLElement, VoidMathMLElement } from '../../../data/protocols/mathml-element';\nimport { ToLaTeXConverter, ToLaTeXConverterClass } from '../../../domain/usecases/to-latex-converter';\n\nexport class MathMLElementToLatexConverterAdapter {\n  private readonly _mathMLElement: MathMLElement;\n\n  constructor(mathMLElement: MathMLElement) {\n    this._mathMLElement = mathMLElement ?? new VoidMathMLElement();\n  }\n\n  toLatexConverter(): ToLaTeXConverter {\n    const { name } = this._mathMLElement;\n    const Converter = fromMathMLElementToLatexConverter[name] || ToLatexConverters.GenericSpacingWrapper;\n\n    return new Converter(this._mathMLElement);\n  }\n}\n\nconst fromMathMLElementToLatexConverter: Record<string, ToLaTeXConverterClass> = {\n  math: ToLatexConverters.Math,\n  mi: ToLatexConverters.MI,\n  mo: ToLatexConverters.MO,\n  mn: ToLatexConverters.MN,\n  msqrt: ToLatexConverters.MSqrt,\n  mfenced: ToLatexConverters.MFenced,\n  mfrac: ToLatexConverters.MFrac,\n  mroot: ToLatexConverters.MRoot,\n  maction: ToLatexConverters.MAction,\n  menclose: ToLatexConverters.MEnclose,\n  merror: ToLatexConverters.MError,\n  mphantom: ToLatexConverters.MPhantom,\n  msup: ToLatexConverters.MSup,\n  msub: ToLatexConverters.MSub,\n  msubsup: ToLatexConverters.MSubsup,\n  mmultiscripts: ToLatexConverters.MMultiscripts,\n  mtext: ToLatexConverters.MText,\n  munderover: ToLatexConverters.MUnderover,\n  mtable: ToLatexConverters.MTable,\n  mtr: ToLatexConverters.MTr,\n  mover: ToLatexConverters.GenericUnderOver,\n  munder: ToLatexConverters.GenericUnderOver,\n  mrow: ToLatexConverters.MRow,\n  mspace: ToLatexConverters.MSpace,\n  mpadded: ToLatexConverters.GenericSpacingWrapper,\n  void: ToLatexConverters.Void,\n};\n", "export class ErrorHandler {\n  private _errors: string[] = [];\n  errorLocator = {};\n\n  fixError(xml: string, errorMessage: string): string {\n    if (!this._isMissingAttributeValueError(errorMessage)) return xml;\n\n    this._errors.push(errorMessage);\n    return this._fixMissingAttribute(errorMessage, xml);\n  }\n\n  isThereAnyErrors(): boolean {\n    return this._errors.length > 0;\n  }\n\n  cleanErrors(): void {\n    this._errors = [];\n  }\n\n  private _fixMissingAttribute(errorMessage: string, xml: string): string {\n    const missingAttribute = errorMessage.split('\"')[1];\n    if (missingAttribute) return xml.replace(this._matchMissingValueForAttribute(missingAttribute), '');\n\n    while (this._mathGenericMissingValue().exec(xml)) {\n      xml = xml.replace(this._mathGenericMissingValue(), '$1$3');\n    }\n    return xml;\n  }\n\n  private _matchMissingValueForAttribute(attribute: string): RegExp {\n    return new RegExp(`(${attribute}=(?!(\\\"|\\')))|(${attribute}(?!(\\\"|\\')))`, 'gm');\n  }\n\n  private _mathGenericMissingValue(): RegExp {\n    return /(\\<.* )(\\w+=(?!\\\"|\\'))(.*\\>)/gm;\n  }\n\n  private _isMissingAttributeValueError(errorMessage: string): boolean {\n    return (\n      (!!errorMessage.includes('attribute') && !!errorMessage.includes('missed')) ||\n      errorMessage.includes('attribute value missed')\n    );\n  }\n}\n", "export * from './xmldom-to-mathml-element-adapter';\nexport * from './error-handler';\nexport * from './xmldom-elements-to-mathml-elements-adapter';\n", "import { MathMLElement } from '../../../data/protocols/mathml-element';\n\nexport class ElementsToMathMLAdapter {\n  convert(els: Element[]): MathMLElement[] {\n    return els.filter((el: Element) => el.tagName !== undefined).map((el: Element) => this._convertElement(el));\n  }\n\n  private _convertElement(el: Element): MathMLElement {\n    return {\n      name: el.tagName,\n      attributes: this._convertElementAttributes(el.attributes),\n      value: this._hasElementChild(el) ? '' : el.textContent || '',\n      children: this._hasElementChild(el)\n        ? this.convert(Array.from(el.childNodes) as Element[])\n        : ([] as MathMLElement[]),\n    };\n  }\n\n  private _convertElementAttributes(attributes: NamedNodeMap): Record<string, string> {\n    return Array.from(attributes).reduce(\n      (acc, attr: Attr) =>\n        Object.assign({ [attr.nodeName]: attr.nodeValue === attr.nodeName ? '' : attr.nodeValue }, acc),\n      {},\n    );\n  }\n\n  private _hasElementChild(el: Element): boolean {\n    const childNodes = el.childNodes;\n    return !!childNodes && childNodes.length !== 0 && this._isThereAnyNoTextNode(childNodes);\n  }\n\n  private _isThereAnyNoTextNode(children: NodeListOf<ChildNode>): boolean {\n    return Array.from(children).some((child) => child.nodeName !== '#text');\n  }\n}\n", "import xmldom from '@xmldom/xmldom';\n\nimport { DOMParser } from '@xmldom/xmldom';\nimport { ElementsToMathMLAdapter } from './xmldom-elements-to-mathml-elements-adapter';\nimport { ErrorHandler } from './error-handler';\nimport { MathMLElement } from '../../../data/protocols/mathml-element';\n\nexport class XmlToMathMLAdapter {\n  private _xml = '';\n  private readonly _xmlDOM: DOMParser;\n  private readonly _errorHandler: ErrorHandler;\n  private readonly _elementsConvertor: ElementsToMathMLAdapter;\n\n  constructor(elementsConvertor: ElementsToMathMLAdapter, errorHandler: ErrorHandler) {\n    this._elementsConvertor = elementsConvertor;\n    this._errorHandler = errorHandler;\n\n    this._xmlDOM = new xmldom.DOMParser({\n      locator: this._errorHandler.errorLocator,\n      errorHandler: this._fixError.bind(this),\n    });\n  }\n\n  convert(xml: string): MathMLElement[] {\n    this._xml = this._removeLineBreaks(xml);\n    this._xml = this._removeMsWordPrefixes(this._xml);\n\n    return this._elementsConvertor.convert(this._mathMLElements);\n  }\n\n  private _fixError(errorMessage: string): void {\n    this._xml = this._errorHandler.fixError(this._xml, errorMessage);\n  }\n\n  private _removeLineBreaks(xml: string): string {\n    const LINE_BREAK = /\\n|\\r\\n|\\r/g;\n    return xml.replace(LINE_BREAK, '');\n  }\n\n  private _removeMsWordPrefixes(xml: string): string {\n    const MS_WORD_PREFIX = /mml:/g;\n    return xml.replace(MS_WORD_PREFIX, '');\n  }\n\n  private get _mathMLElements(): Element[] {\n    let elements = this._xmlDOM.parseFromString(this._xml).getElementsByTagName('math');\n    if (this._errorHandler.isThereAnyErrors()) {\n      this._errorHandler.cleanErrors();\n      elements = this._xmlDOM.parseFromString(this._xml).getElementsByTagName('math');\n    }\n\n    return Array.from(elements) as Element[];\n  }\n}\n", "export * from './make-to-math-elements-converter';\n", "import {\n  XmlToMathMLAdapter,\n  ElementsToMathMLAdapter,\n  ErrorHandler,\n} from '../../infra/usecases/xmldom-to-mathml-elements';\n\nexport const makeToMathElementsConverter = (): XmlToMathMLAdapter => {\n  const elementsToMathMLAdapter = new ElementsToMathMLAdapter();\n  const errorHandler = new ErrorHandler();\n\n  return new XmlToMathMLAdapter(elementsToMathMLAdapter, errorHandler);\n};\n", "export * from './mathml-to-latex';\n", "import { MathMLElementToLatexConverterAdapter } from '../data/usecases/mathml-to-latex-convertion/mathml-element-to-latex-converter-adapter';\nimport { makeToMathElementsConverter } from './factories';\n\nexport class MathMLToLaTeX {\n  static convert(mathml: string): string {\n    const mathmlElements = makeToMathElementsConverter().convert(mathml);\n    const mathmlElementsToLaTeXConverters = mathmlElements.map((mathMLElement) =>\n      new MathMLElementToLatexConverterAdapter(mathMLElement).toLatexConverter(),\n    );\n    return mathmlElementsToLaTeXConverters\n      .map((toLatexConverters) => toLatexConverters.convert())\n      .join('')\n      .trim();\n  }\n}\n", "export const allMathOperatorsByChar: Record<string, string> = {\n  _: '\\\\underline',\n  '&#x23E1;': '\\\\underbrace',\n  '&#x23E0;': '\\\\overbrace',\n  '&#x23DF;': '\\\\underbrace',\n  '&#x23DE;': '\\\\overbrace',\n  '&#x23DD;': '\\\\underbrace',\n  '&#x23DC;': '\\\\overbrace',\n  '&#x23B5;': '\\\\underbrace',\n  '&#x23B4;': '\\\\overbrace',\n  '&#x20DC;': '\\\\square',\n  '&#x20DB;': '\\\\square',\n  '&#x2064;': '',\n  '&#x2057;': \"''''\",\n  '&#x203E;': '\\\\bar',\n  '&#x2037;': '```',\n  '&#x2036;': '``',\n  '&#x2035;': '`',\n  '&#x2034;': \"'''\",\n  '&#x2033;': \"''\",\n  '&#x201F;': '``',\n  '&#x201E;': ',,',\n  '&#x201B;': '`',\n  '&#x201A;': ',',\n  '&#x302;': '\\\\hat',\n  '&#x2F7;': '\\\\sim',\n  '&#x2DD;': '\\\\sim',\n  '&#x2DC;': '\\\\sim',\n  '&#x2DA;': '\\\\circ',\n  '&#x2D9;': '\\\\cdot',\n  '&#x2D8;': '',\n  '&#x2CD;': '\\\\_',\n  '&#x2CB;': 'ˋ',\n  '&#x2CA;': 'ˊ',\n  '&#x2C9;': 'ˉ',\n  '&#x2C7;': '',\n  '&#x2C6;': '\\\\hat',\n  '&#xBA;': 'o',\n  '&#xB9;': '1',\n  '&#xB8;': '¸',\n  '&#xB4;': '´',\n  '&#xB3;': '3',\n  '&#xB2;': '2',\n  '&#xB0;': '\\\\circ',\n  '&#xAF;': '\\\\bar',\n  '&#xAA;': 'a',\n  '&#xA8;': '\\\\cdot\\\\cdot',\n  '~': '\\\\sim',\n  '`': '`',\n  '^': '\\\\hat',\n  '--': '--',\n  '++': '++',\n  '&amp;': '\\\\&',\n  '&#x2061;': '',\n  '&#x221C;': '\\\\sqrt[4]{}',\n  '&#x221B;': '\\\\sqrt[3]{}',\n  '&#x221A;': '\\\\sqrt{}',\n  '&#x2146;': 'd',\n  '&#x2145;': '\\\\mathbb{D}',\n  '?': '?',\n  '@': '@',\n  '//': '//',\n  '!!': '!!',\n  '!': '!',\n  '&#x266F;': '\\\\#',\n  '&#x266E;': '',\n  '&#x266D;': '',\n  '&#x2032;': \"'\",\n  '&lt;>': '<>',\n  '**': '\\\\star\\\\star',\n  '&#x2207;': '\\\\nabla',\n  '&#x2202;': '\\\\partial',\n  '&#x2299;': '\\\\bigodot',\n  '&#xAC;': '\\\\neg',\n  '&#x2222;': '\\\\measuredangle',\n  '&#x2221;': '\\\\measuredangle',\n  '&#x2220;': '\\\\angle',\n  '&#xF7;': '\\\\div',\n  '/': '/',\n  '&#x2216;': '\\\\backslash',\n  '\\\\': '\\\\backslash',\n  '%': '\\\\%',\n  '&#x2297;': '\\\\bigotimes',\n  '&#xB7;': '\\\\cdot',\n  '&#x2A3F;': '\\\\coprod',\n  '&#x2A2F;': '\\\\times',\n  '&#x22C5;': '\\\\cdot',\n  '&#x22A1;': '\\\\boxdot',\n  '&#x22A0;': '\\\\boxtimes',\n  '&#x2062;': '',\n  '&#x2043;': '-',\n  '&#x2022;': '\\\\cdot',\n  '&#xD7;': '\\\\times',\n  '.': '.',\n  '*': '\\\\star',\n  '&#x222A;': '\\\\cup',\n  '&#x2229;': '\\\\cap',\n  '&#x2210;': '\\\\coprod',\n  '&#x220F;': '\\\\prod',\n  '&#x2240;': '',\n  '&#x2AFF;': '',\n  '&#x2AFC;': '\\\\mid\\\\mid\\\\mid',\n  '&#x2A09;': '\\\\times',\n  '&#x2A08;': '',\n  '&#x2A07;': '',\n  '&#x2A06;': '\\\\sqcup',\n  '&#x2A05;': '\\\\sqcap',\n  '&#x2A02;': '\\\\otimes',\n  '&#x2A00;': '\\\\odot',\n  '&#x22C2;': '\\\\cap',\n  '&#x22C1;': '\\\\vee',\n  '&#x22C0;': '\\\\wedge',\n  '&#x2A04;': '\\\\uplus',\n  '&#x2A03;': '\\\\cup',\n  '&#x22C3;': '\\\\cup',\n  '&#x2A1C;': '\\\\underline{\\\\int}',\n  '&#x2A1B;': '\\\\overline{\\\\int}',\n  '&#x2A1A;': '\\\\int',\n  '&#x2A19;': '\\\\int',\n  '&#x2A18;': '\\\\int',\n  '&#x2A17;': '\\\\int',\n  '&#x2A16;': '\\\\oint',\n  '&#x2A15;': '\\\\oint',\n  '&#x2A14;': '\\\\int',\n  '&#x2A13;': '\\\\int',\n  '&#x2A12;': '\\\\int',\n  '&#x2A11;': '\\\\int',\n  '&#x2A10;': '\\\\int',\n  '&#x2A0F;': '\\\\bcancel{\\\\int}',\n  '&#x2A0E;': '',\n  '&#x2A0D;': '\\\\hcancel{\\\\int}',\n  '&#x2A0C;': '\\\\iiiint',\n  '&#x2233;': '\\\\oint',\n  '&#x2232;': '\\\\oint',\n  '&#x2231;': '\\\\int',\n  '&#x2230;': '\\\\oiint',\n  '&#x222F;': '\\\\oiint',\n  '&#x222E;': '\\\\oint',\n  '&#x222B;': '\\\\int',\n  '&#x2A01;': '\\\\oplus',\n  '&#x2298;': '\\\\oslash',\n  '&#x2296;': '\\\\ominus',\n  '&#x2295;': '\\\\oplus',\n  '&#x222D;': '\\\\iiint',\n  '&#x222C;': '\\\\iint',\n  '&#x2A0B;': '',\n  '&#x2A0A;': '',\n  '&#x2211;': '\\\\sum',\n  '&#x229F;': '\\\\boxminus',\n  '&#x229E;': '\\\\boxplus',\n  '&#x2214;': '\\\\dot{+}',\n  '&#x2213;': '+-',\n  '&#x2212;': '-',\n  '&#xB1;': '\\\\pm',\n  '-': '-',\n  '+': '+',\n  '&#x2B46;': '\\\\Rrightarrow',\n  '&#x2B45;': '\\\\Lleftarrow',\n  '&#x29F4;': ':\\\\rightarrow',\n  '&#x29EF;': '',\n  '&#x29DF;': '\\\\bullet-\\\\bullet',\n  '&#x299F;': '\\\\angle',\n  '&#x299E;': '\\\\measuredangle',\n  '&#x299D;': '\\\\measuredangle',\n  '&#x299C;': '\\\\perp',\n  '&#x299B;': '\\\\measuredangle',\n  '&#x299A;': '',\n  '&#x2999;': '\\\\vdots',\n  '&#x297F;': '',\n  '&#x297E;': '',\n  '&#x297D;': '\\\\prec',\n  '&#x297C;': '\\\\succ',\n  '&#x297B;': '\\\\underset{\\\\rightarrow}{\\\\supset}',\n  '&#x297A;': '',\n  '&#x2979;': '\\\\underset{\\\\rightarrow}{\\\\subset}',\n  '&#x2978;': '\\\\underset{\\\\rightarrow}{>}',\n  '&#x2977;': '',\n  '&#x2976;': '\\\\underset{\\\\leftarrow}{<}',\n  '&#x2975;': '\\\\underset{\\\\approx}{\\\\rightarrow}',\n  '&#x2974;': '\\\\underset{\\\\sim}{\\\\rightarrow}',\n  '&#x2973;': '\\\\underset{\\\\sim}{\\\\leftarrow}',\n  '&#x2972;': '\\\\overset{\\\\sim}{\\\\rightarrow}',\n  '&#x2971;': '\\\\overset{=}{\\\\rightarrow}',\n  '&#x2970;': '',\n  '&#x296F;': '',\n  '&#x296E;': '',\n  '&#x296D;': '\\\\overline{\\\\rightharpoondown}',\n  '&#x296C;': '\\\\underline{\\\\rightharpoonup}',\n  '&#x296B;': '\\\\overline{\\\\leftharpoondown}',\n  '&#x296A;': '\\\\underline{\\\\leftharpoonup}',\n  '&#x2969;': '\\\\rightleftharpoons',\n  '&#x2968;': '\\\\rightleftharpoons',\n  '&#x2967;': '\\\\rightleftharpoons',\n  '&#x2966;': '\\\\rightleftharpoons',\n  '&#x2965;': '\\\\Downarrow',\n  '&#x2964;': '\\\\Rightarrow',\n  '&#x2963;': '\\\\Uparrow',\n  '&#x2962;': '\\\\Leftarrow',\n  '&#x2961;': '\\\\downarrow',\n  '&#x2960;': '\\\\uparrow',\n  '&#x295F;': '\\\\rightarrow',\n  '&#x295E;': '\\\\leftarrow',\n  '&#x295D;': '\\\\downarrow',\n  '&#x295C;': '\\\\uparrow',\n  '&#x295B;': '\\\\rightarrow',\n  '&#x295A;': '\\\\leftarrow',\n  '&#x2959;': '\\\\downarrow',\n  '&#x2958;': '\\\\uparrow',\n  '&#x2957;': '\\\\rightarrow',\n  '&#x2956;': '\\\\leftarrow',\n  '&#x2955;': '\\\\downarrow',\n  '&#x2954;': '\\\\uparrow',\n  '&#x2953;': '\\\\rightarrow',\n  '&#x2952;': '\\\\leftarrow',\n  '&#x2951;': '\\\\updownarrow',\n  '&#x2950;': '\\\\leftrightarrow',\n  '&#x294F;': '\\\\updownarrow',\n  '&#x294E;': '\\\\leftrightarrow',\n  '&#x294D;': '\\\\updownarrow',\n  '&#x294C;': '\\\\updownarrow',\n  '&#x294B;': '\\\\leftrightarrow',\n  '&#x294A;': '\\\\leftrightarrow',\n  '&#x2949;': '',\n  '&#x2948;': '\\\\leftrightarrow',\n  '&#x2947;': '\\\\nrightarrow',\n  '&#x2946;': '',\n  '&#x2945;': '',\n  '&#x2944;': '\\\\rightleftarrows',\n  '&#x2943;': '\\\\leftrightarrows',\n  '&#x2942;': '\\\\rightleftarrows',\n  '&#x2941;': '\\\\circlearrowright',\n  '&#x2940;': '\\\\circlearrowleft',\n  '&#x293F;': '\\\\rightarrow',\n  '&#x293E;': '\\\\leftarrow',\n  '&#x293D;': '',\n  '&#x293C;': '',\n  '&#x293B;': '',\n  '&#x293A;': '',\n  '&#x2939;': '',\n  '&#x2938;': '',\n  '&#x2937;': '\\\\Rsh',\n  '&#x2936;': '\\\\Lsh',\n  '&#x2935;': '\\\\downarrow',\n  '&#x2934;': '\\\\uparrow',\n  '&#x2933;': '\\\\leadsto',\n  '&#x2932;': '',\n  '&#x2931;': '',\n  '&#x2930;': '',\n  '&#x292F;': '',\n  '&#x292E;': '',\n  '&#x292D;': '',\n  '&#x292C;': '\\\\times',\n  '&#x292B;': '\\\\times',\n  '&#x292A;': '',\n  '&#x2929;': '',\n  '&#x2928;': '',\n  '&#x2927;': '',\n  '&#x2926;': '',\n  '&#x2925;': '',\n  '&#x2924;': '',\n  '&#x2923;': '',\n  '&#x2922;': '',\n  '&#x2921;': '',\n  '&#x2920;': '\\\\mapsto\\\\cdot',\n  '&#x291F;': '\\\\cdot\\\\leftarrow',\n  '&#x291E;': '\\\\rightarrow\\\\cdot',\n  '&#x291D;': '\\\\leftarrow',\n  '&#x291C;': '\\\\rightarrow',\n  '&#x291B;': '\\\\leftarrow',\n  '&#x291A;': '\\\\rightarrow',\n  '&#x2919;': '\\\\leftarrow',\n  '&#x2918;': '\\\\rightarrow',\n  '&#x2917;': '\\\\rightarrow',\n  '&#x2916;': '\\\\rightarrow',\n  '&#x2915;': '\\\\rightarrow',\n  '&#x2914;': '\\\\rightarrow',\n  '&#x2913;': '\\\\downarrow',\n  '&#x2912;': '\\\\uparrow',\n  '&#x2911;': '\\\\rightarrow',\n  '&#x2910;': '\\\\rightarrow',\n  '&#x290F;': '\\\\rightarrow',\n  '&#x290E;': '\\\\leftarrow',\n  '&#x290D;': '\\\\rightarrow',\n  '&#x290C;': '\\\\leftarrow',\n  '&#x290B;': '\\\\Downarrow',\n  '&#x290A;': '\\\\Uparrow',\n  '&#x2909;': '\\\\uparrow',\n  '&#x2908;': '\\\\downarrow',\n  '&#x2907;': '\\\\Rightarrow',\n  '&#x2906;': '\\\\Leftarrow',\n  '&#x2905;': '\\\\mapsto',\n  '&#x2904;': '\\\\nLeftrightarrow',\n  '&#x2903;': '\\\\nRightarrow',\n  '&#x2902;': '\\\\nLeftarrow',\n  '&#x2901;': '\\\\rightsquigarrow',\n  '&#x2900;': '\\\\rightsquigarrow',\n  '&#x27FF;': '\\\\rightsquigarrow',\n  '&#x27FE;': '\\\\Rightarrow',\n  '&#x27FD;': '\\\\Leftarrow',\n  '&#x27FC;': '\\\\mapsto',\n  '&#x27FB;': '\\\\leftarrow',\n  '&#x27FA;': '\\\\Longleftrightarrow',\n  '&#x27F9;': '\\\\Longrightarrow',\n  '&#x27F8;': '\\\\Longleftarrow',\n  '&#x27F7;': '\\\\leftrightarrow',\n  '&#x27F6;': '\\\\rightarrow',\n  '&#x27F5;': '\\\\leftarrow',\n  '&#x27F1;': '\\\\Downarrow',\n  '&#x27F0;': '\\\\Uparrow',\n  '&#x22B8;': '\\\\rightarrow',\n  '&#x21FF;': '\\\\leftrightarrow',\n  '&#x21FE;': '\\\\rightarrow',\n  '&#x21FD;': '\\\\leftarrow',\n  '&#x21FC;': '\\\\nleftrightarrow',\n  '&#x21FB;': '\\\\nrightarrow',\n  '&#x21FA;': '\\\\nleftarrow',\n  '&#x21F9;': '\\\\nleftrightarrow',\n  '&#x21F8;': '\\\\nrightarrow',\n  '&#x21F7;': '\\\\nleftarrow',\n  '&#x21F6;': '\\\\Rrightarrow',\n  '&#x21F5;': '',\n  '&#x21F4;': '\\\\rightarrow',\n  '&#x21F3;': '\\\\Updownarrow',\n  '&#x21F2;': '\\\\searrow',\n  '&#x21F1;': '\\\\nwarrow',\n  '&#x21F0;': '\\\\Leftarrow',\n  '&#x21EF;': '\\\\Uparrow',\n  '&#x21EE;': '\\\\Uparrow',\n  '&#x21ED;': '\\\\Uparrow',\n  '&#x21EC;': '\\\\Uparrow',\n  '&#x21EB;': '\\\\Uparrow',\n  '&#x21EA;': '\\\\Uparrow',\n  '&#x21E9;': '\\\\Downarrow',\n  '&#x21E8;': '\\\\Rightarrow',\n  '&#x21E7;': '\\\\Uparrow',\n  '&#x21E6;': '\\\\Leftarrow',\n  '&#x21E5;': '\\\\rightarrow',\n  '&#x21E4;': '\\\\leftarrow',\n  '&#x21E3;': '\\\\downarrow',\n  '&#x21E2;': '\\\\rightarrow',\n  '&#x21E1;': '\\\\uparrow',\n  '&#x21E0;': '\\\\leftarrow',\n  '&#x21DF;': '\\\\downarrow',\n  '&#x21DE;': '\\\\uparrow',\n  '&#x21DD;': '\\\\rightsquigarrow',\n  '&#x21DC;': '\\\\leftarrow',\n  '&#x21DB;': '\\\\Rrightarrow',\n  '&#x21DA;': '\\\\Lleftarrow',\n  '&#x21D9;': '\\\\swarrow',\n  '&#x21D8;': '\\\\searrow',\n  '&#x21D7;': '\\\\nearrow',\n  '&#x21D6;': '\\\\nwarrow',\n  '&#x21D5;': '\\\\Updownarrow',\n  '&#x21D4;': '\\\\Leftrightarrow',\n  '&#x21D3;': '\\\\Downarrow',\n  '&#x21D2;': '\\\\Rightarrow',\n  '&#x21D1;': '\\\\Uparrow',\n  '&#x21D0;': '\\\\Leftarrow',\n  '&#x21CF;': '\\\\nRightarrow',\n  '&#x21CE;': '\\\\nLeftrightarrow',\n  '&#x21CD;': '\\\\nLeftarrow',\n  '&#x21CC;': '\\\\rightleftharpoons',\n  '&#x21CB;': '\\\\leftrightharpoons',\n  '&#x21CA;': '\\\\downdownarrows',\n  '&#x21C9;': '\\\\rightrightarrows',\n  '&#x21C8;': '\\\\upuparrows',\n  '&#x21C7;': '\\\\leftleftarrows',\n  '&#x21C6;': '\\\\leftrightarrows',\n  '&#x21C5;': '',\n  '&#x21C4;': '\\\\rightleftarrows',\n  '&#x21C3;': '\\\\downharpoonleft',\n  '&#x21C2;': '\\\\downharpoonright',\n  '&#x21C1;': '\\\\rightharpoondown',\n  '&#x21C0;': '\\\\rightharpoonup',\n  '&#x21BF;': '\\\\upharpoonleft',\n  '&#x21BE;': '\\\\upharpoonright',\n  '&#x21BD;': '\\\\leftharpoondown',\n  '&#x21BC;': '\\\\leftharpoonup',\n  '&#x21BB;': '\\\\circlearrowright',\n  '&#x21BA;': '\\\\circlearrowleft',\n  '&#x21B9;': '\\\\leftrightarrows',\n  '&#x21B8;': '\\\\overline{\\\\nwarrow}',\n  '&#x21B7;': '\\\\curvearrowright',\n  '&#x21B6;': '\\\\curvearrowleft',\n  '&#x21B5;': '\\\\swarrow',\n  '&#x21B4;': '\\\\searrow',\n  '&#x21B3;': '\\\\Rsh',\n  '&#x21B2;': '\\\\Lsh',\n  '&#x21B1;': '\\\\Rsh',\n  '&#x21B0;': '\\\\Lsh',\n  '&#x21AF;': '\\\\swarrow',\n  '&#x21AE;': '',\n  '&#x21AD;': '\\\\leftrightsquigarrow',\n  '&#x21AC;': '\\\\looparrowright',\n  '&#x21AB;': '\\\\looparrowleft',\n  '&#x21AA;': '\\\\hookrightarrow',\n  '&#x21A9;': '\\\\hookleftarrow',\n  '&#x21A8;': '\\\\underline{\\\\updownarrow}',\n  '&#x21A7;': '\\\\downarrow',\n  '&#x21A6;': '\\\\rightarrowtail',\n  '&#x21A5;': '\\\\uparrow',\n  '&#x21A4;': '\\\\leftarrowtail',\n  '&#x21A3;': '\\\\rightarrowtail',\n  '&#x21A2;': '\\\\leftarrowtail',\n  '&#x21A1;': '\\\\downarrow',\n  '&#x21A0;': '\\\\twoheadrightarrow',\n  '&#x219F;': '\\\\uparrow',\n  '&#x219E;': '\\\\twoheadleftarrow',\n  '&#x219D;': '\\\\nearrow',\n  '&#x219C;': '\\\\nwarrow',\n  '&#x219B;': '',\n  '&#x219A;': '',\n  '&#x2199;': '\\\\swarrow',\n  '&#x2198;': '\\\\searrow',\n  '&#x2197;': '\\\\nearrow',\n  '&#x2196;': '\\\\nwarrow',\n  '&#x2195;': '\\\\updownarrow',\n  '&#x2194;': '\\\\leftrightarrow',\n  '&#x2193;': '\\\\downarrow',\n  '&#x2192;': '\\\\rightarrow',\n  '&#x2191;': '\\\\uparrow',\n  '&#x2190;': '\\\\leftarrow',\n  '|||': '\\\\left|||\\\\right.',\n  '||': '\\\\left||\\\\right.',\n  '|': '\\\\left|\\\\right.',\n  '&#x2AFE;': '',\n  '&#x2AFD;': '//',\n  '&#x2AFB;': '///',\n  '&#x2AFA;': '',\n  '&#x2AF9;': '',\n  '&#x2AF8;': '',\n  '&#x2AF7;': '',\n  '&#x2AF6;': '\\\\vdots',\n  '&#x2AF5;': '',\n  '&#x2AF4;': '',\n  '&#x2AF3;': '',\n  '&#x2AF2;': '\\\\nparallel',\n  '&#x2AF1;': '',\n  '&#x2AF0;': '',\n  '&#x2AEF;': '',\n  '&#x2AEE;': '\\\\bcancel{\\\\mid}',\n  '&#x2AED;': '',\n  '&#x2AEC;': '',\n  '&#x2AEB;': '',\n  '&#x2AEA;': '',\n  '&#x2AE9;': '',\n  '&#x2AE8;': '\\\\underline{\\\\perp}',\n  '&#x2AE7;': '\\\\overline{\\\\top}',\n  '&#x2AE6;': '',\n  '&#x2AE5;': '',\n  '&#x2AE4;': '',\n  '&#x2AE3;': '',\n  '&#x2AE2;': '',\n  '&#x2AE1;': '',\n  '&#x2AE0;': '\\\\perp',\n  '&#x2ADF;': '\\\\top',\n  '&#x2ADE;': '\\\\dashv',\n  '&#x2ADD;&#x338;': '',\n  '&#x2ADD;': '',\n  '&#x2ADB;': '\\\\pitchfork',\n  '&#x2ADA;': '',\n  '&#x2AD9;': '',\n  '&#x2AD8;': '',\n  '&#x2AD7;': '',\n  '&#x2AD6;': '',\n  '&#x2AD5;': '',\n  '&#x2AD4;': '',\n  '&#x2AD3;': '',\n  '&#x2AD2;': '',\n  '&#x2AD1;': '',\n  '&#x2AD0;': '',\n  '&#x2ACF;': '',\n  '&#x2ACE;': '',\n  '&#x2ACD;': '',\n  '&#x2ACC;': '\\\\underset{\\\\neq}{\\\\supset}',\n  '&#x2ACB;': '\\\\underset{\\\\neq}{\\\\subset}',\n  '&#x2ACA;': '\\\\underset{\\\\approx}{\\\\supset}',\n  '&#x2AC9;': '\\\\underset{\\\\approx}{\\\\subset}',\n  '&#x2AC8;': '\\\\underset{\\\\sim}{\\\\supset}',\n  '&#x2AC7;': '\\\\underset{\\\\sim}{\\\\subset}',\n  '&#x2AC6;': '\\\\supseteqq',\n  '&#x2AC5;': '\\\\subseteqq',\n  '&#x2AC4;': '\\\\dot{\\\\supseteq}',\n  '&#x2AC3;': '\\\\dot{\\\\subseteq}',\n  '&#x2AC2;': '\\\\underset{\\\\times}{\\\\supset}',\n  '&#x2AC1;': '\\\\underset{\\\\times}{\\\\subset}',\n  '&#x2AC0;': '\\\\underset{+}{\\\\supset}',\n  '&#x2ABF;': '\\\\underset{+}{\\\\subset}',\n  '&#x2ABE;': '',\n  '&#x2ABD;': '',\n  '&#x2ABC;': '\\\\gg ',\n  '&#x2ABB;': '\\\\ll',\n  '&#x2ABA;': '\\\\underset{\\\\cancel{\\\\approx}}{\\\\succ}',\n  '&#x2AB9;': '\\\\underset{\\\\cancel{\\\\approx}}{\\\\prec}',\n  '&#x2AB8;': '\\\\underset{\\\\approx}{\\\\succ}',\n  '&#x2AB7;': '\\\\underset{\\\\approx}{\\\\prec}',\n  '&#x2AB6;': '\\\\underset{\\\\cancel{=}}{\\\\succ}',\n  '&#x2AB5;': '\\\\underset{\\\\cancel{=}}{\\\\prec}',\n  '&#x2AB4;': '\\\\underset{=}{\\\\succ}',\n  '&#x2AB3;': '\\\\underset{=}{\\\\prec}',\n  '&#x2AB2;': '',\n  '&#x2AB1;': '',\n  '&#x2AAE;': '',\n  '&#x2AAD;': '\\\\underline{\\\\hcancel{>}}',\n  '&#x2AAC;': '\\\\underline{\\\\hcancel{>}}',\n  '&#x2AAB;': '\\\\hcancel{>}',\n  '&#x2AAA;': '\\\\hcancel{<}',\n  '&#x2AA9;': '',\n  '&#x2AA8;': '',\n  '&#x2AA7;': '\\\\vartriangleright',\n  '&#x2AA6;': '\\\\vartriangleleft',\n  '&#x2AA5;': '><',\n  '&#x2AA4;': '><',\n  '&#x2AA3;': '\\\\underline{\\\\ll}',\n  '&#x2AA2;&#x338;': '\\\\cancel{\\\\gg}',\n  '&#x2AA2;': '\\\\gg',\n  '&#x2AA1;&#x338;': '\\\\cancel{\\\\ll}',\n  '&#x2AA1;': '\\\\ll',\n  '&#x2AA0;': '\\\\overset{\\\\sim}{\\\\geqq}',\n  '&#x2A9F;': '\\\\overset{\\\\sim}{\\\\leqq}',\n  '&#x2A9E;': '\\\\overset{\\\\sim}{>}',\n  '&#x2A9D;': '\\\\overset{\\\\sim}{<}',\n  '&#x2A9C;': '',\n  '&#x2A9B;': '',\n  '&#x2A9A;': '\\\\overset{=}{>}',\n  '&#x2A99;': '\\\\overset{=}{<}',\n  '&#x2A98;': '',\n  '&#x2A97;': '',\n  '&#x2A96;': '',\n  '&#x2A95;': '',\n  '&#x2A94;': '',\n  '&#x2A93;': '',\n  '&#x2A92;': '\\\\underset{=}{\\\\gtrless}',\n  '&#x2A91;': '\\\\underset{=}{\\\\lessgtr}',\n  '&#x2A90;': '\\\\underset{<}{\\\\gtrsim}',\n  '&#x2A8F;': '\\\\underset{>}{\\\\lesssim}',\n  '&#x2A8E;': '\\\\underset{\\\\simeq}{>}',\n  '&#x2A8D;': '\\\\underset{\\\\simeq}{<}',\n  '&#x2A8C;': '\\\\gtreqqless',\n  '&#x2A8B;': '\\\\lesseqqgtr',\n  '&#x2A8A;': '\\\\underset{\\\\cancel{\\\\approx}}{>}',\n  '&#x2A89;': '\\\\underset{\\\\approx}{<}',\n  '&#x2A86;': '\\\\underset{\\\\approx}{>}',\n  '&#x2A85;': '\\\\underset{\\\\approx}{<}',\n  '&#x2A84;': '',\n  '&#x2A83;': '',\n  '&#x2A82;': '',\n  '&#x2A81;': '',\n  '&#x2A80;': '',\n  '&#x2A7F;': '',\n  '&#x2A7E;&#x338;': '\\\\bcancel{\\\\geq}',\n  '&#x2A7E;': '\\\\geq',\n  '&#x2A7D;&#x338;': '\\\\bcancel{\\\\leq}',\n  '&#x2A7D;': '\\\\leq',\n  '&#x2A7C;': '',\n  '&#x2A7B;': '',\n  '&#x2A7A;': '',\n  '&#x2A79;': '',\n  '&#x2A78;': '\\\\overset{\\\\dots}{\\\\equiv}',\n  '&#x2A77;': '',\n  '&#x2A76;': '===',\n  '&#x2A75;': '==',\n  '&#x2A74;': '::=',\n  '&#x2A73;': '',\n  '&#x2A72;': '\\\\underset{=}{+}',\n  '&#x2A71;': '\\\\overset{=}{+}',\n  '&#x2A70;': '\\\\overset{\\\\approx}{=}',\n  '&#x2A6F;': '\\\\overset{\\\\wedge}{=}',\n  '&#x2A6E;': '\\\\overset{*}{=}',\n  '&#x2A6D;': '\\\\dot{\\\\approx}',\n  '&#x2A6C;': '',\n  '&#x2A6B;': '',\n  '&#x2A6A;': '\\\\dot{\\\\sim}',\n  '&#x2A69;': '',\n  '&#x2A68;': '',\n  '&#x2A67;': '\\\\dot{\\\\equiv}',\n  '&#x2A66;': '\\\\underset{\\\\cdot}{=}',\n  '&#x2A65;': '',\n  '&#x2A64;': '',\n  '&#x2A63;': '\\\\underset{=}{\\\\vee}',\n  '&#x2A62;': '\\\\overset{=}{\\\\vee}',\n  '&#x2A61;': 'ul(vv)',\n  '&#x2A60;': '\\\\underset{=}{\\\\wedge}',\n  '&#x2A5F;': '\\\\underline{\\\\wedge}',\n  '&#x2A5E;': '\\\\overset{=}{\\\\wedge}',\n  '&#x2A5D;': '\\\\hcancel{\\\\vee}',\n  '&#x2A5C;': '\\\\hcancel{\\\\wedge}',\n  '&#x2A5B;': '',\n  '&#x2A5A;': '',\n  '&#x2A59;': '',\n  '&#x2A58;': '\\\\vee',\n  '&#x2A57;': '\\\\wedge',\n  '&#x2A56;': '',\n  '&#x2A55;': '',\n  '&#x2A54;': '',\n  '&#x2A53;': '',\n  '&#x2A52;': '\\\\dot{\\\\vee}',\n  '&#x2A51;': '\\\\dot{\\\\wedge}',\n  '&#x2A50;': '',\n  '&#x2A4F;': '',\n  '&#x2A4E;': '',\n  '&#x2A4D;': '\\\\overline{\\\\cap}',\n  '&#x2A4C;': '\\\\overline{\\\\cup}',\n  '&#x2A4B;': '',\n  '&#x2A4A;': '',\n  '&#x2A49;': '',\n  '&#x2A48;': '',\n  '&#x2A47;': '',\n  '&#x2A46;': '',\n  '&#x2A45;': '',\n  '&#x2A44;': '',\n  '&#x2A43;': '\\\\overline{\\\\cap}',\n  '&#x2A42;': '\\\\overline{\\\\cup}',\n  '&#x2A41;': '',\n  '&#x2A40;': '',\n  '&#x2A3E;': '',\n  '&#x2A3D;': '\\\\llcorner',\n  '&#x2A3C;': '\\\\lrcorner',\n  '&#x2A3B;': '',\n  '&#x2A3A;': '',\n  '&#x2A39;': '',\n  '&#x2A38;': '',\n  '&#x2A37;': '',\n  '&#x2A36;': '\\\\hat{\\\\otimes}',\n  '&#x2A35;': '',\n  '&#x2A34;': '',\n  '&#x2A33;': '',\n  '&#x2A32;': '\\\\underline{\\\\times}',\n  '&#x2A31;': '\\\\underline{\\\\times}',\n  '&#x2A30;': '\\\\dot{\\\\times}',\n  '&#x2A2E;': '',\n  '&#x2A2D;': '',\n  '&#x2A2C;': '',\n  '&#x2A2B;': '',\n  '&#x2A2A;': '',\n  '&#x2A29;': '',\n  '&#x2A28;': '',\n  '&#x2A27;': '',\n  '&#x2A26;': '\\\\underset{\\\\sim}{+}',\n  '&#x2A25;': '\\\\underset{\\\\circ}{+}',\n  '&#x2A24;': '\\\\overset{\\\\sim}{+}',\n  '&#x2A23;': '\\\\hat{+}',\n  '&#x2A22;': '\\\\dot{+}',\n  '&#x2A21;': '\\\\upharpoonright',\n  '&#x2A20;': '>>',\n  '&#x2A1F;': '',\n  '&#x2A1E;': '\\\\triangleleft',\n  '&#x2A1D;': '\\\\bowtie',\n  '&#x29FF;': '',\n  '&#x29FE;': '+',\n  '&#x29FB;': '\\\\hcancel{|||}',\n  '&#x29FA;': '\\\\hcancel{||}',\n  '&#x29F9;': '\\\\backslash',\n  '&#x29F8;': '/',\n  '&#x29F7;': 'hcancel{\\backslash}',\n  '&#x29F6;': '',\n  '&#x29F5;': '\\\\backslash',\n  '&#x29F2;': '\\\\Phi',\n  '&#x29F1;': '',\n  '&#x29F0;': '',\n  '&#x29EE;': '',\n  '&#x29ED;': '',\n  '&#x29EC;': '',\n  '&#x29EB;': '\\\\lozenge',\n  '&#x29EA;': '',\n  '&#x29E9;': '',\n  '&#x29E8;': '',\n  '&#x29E7;': '\\\\ddagger',\n  '&#x29E2;': '\\\\sqcup\\\\sqcup',\n  '&#x29E1;': '',\n  '&#x29E0;': '\\\\square',\n  '&#x29DE;': '',\n  '&#x29DD;': '',\n  '&#x29DC;': '',\n  '&#x29DB;': '\\\\{\\\\{',\n  '&#x29D9;': '\\\\{',\n  '&#x29D8;': '\\\\}',\n  '&#x29D7;': '',\n  '&#x29D6;': '',\n  '&#x29D5;': '\\\\bowtie',\n  '&#x29D4;': '\\\\bowtie',\n  '&#x29D3;': '\\\\bowtie',\n  '&#x29D2;': '\\\\bowtie',\n  '&#x29D1;': '\\\\bowtie',\n  '&#x29D0;&#x338;': '| \\\\not\\\\triangleright',\n  '&#x29D0;': '| \\\\triangleright',\n  '&#x29CF;&#x338;': '\\\\not\\\\triangleleft |',\n  '&#x29CF;': '\\\\triangleleft |',\n  '&#x29CE;': '',\n  '&#x29CD;': '\\\\triangle',\n  '&#x29CC;': '',\n  '&#x29CB;': '\\\\underline{\\\\triangle}',\n  '&#x29CA;': '\\\\dot{\\\\triangle}',\n  '&#x29C9;': '',\n  '&#x29C8;': '\\\\boxed{\\\\circ}',\n  '&#x29C7;': '\\\\boxed{\\\\circ}',\n  '&#x29C6;': '\\\\boxed{\\\\rightarrow}',\n  '&#x29C5;': '\\\\bcancel{\\\\square}',\n  '&#x29C4;': '\\\\cancel{\\\\square}',\n  '&#x29C3;': '\\\\odot',\n  '&#x29C2;': '\\\\odot',\n  '&#x29BF;': '\\\\odot',\n  '&#x29BE;': '\\\\odot',\n  '&#x29BD;': '\\\\varnothing',\n  '&#x29BC;': '\\\\oplus',\n  '&#x29BB;': '\\\\otimes',\n  '&#x29BA;': '',\n  '&#x29B9;': '\\\\varnothing',\n  '&#x29B8;': '\\\\varnothing',\n  '&#x29B7;': '\\\\ominus',\n  '&#x29B6;': '\\\\ominus',\n  '&#x29B5;': '\\\\ominus',\n  '&#x29B4;': '\\\\vec{\\\\varnothing}',\n  '&#x29B3;': '\\\\vec{\\\\varnothing}',\n  '&#x29B2;': '\\\\dot{\\\\varnothing}',\n  '&#x29B1;': '\\\\overline{\\\\varnothing}',\n  '&#x29B0;': '\\\\varnothing',\n  '&#x29AF;': '',\n  '&#x29AE;': '',\n  '&#x29AD;': '',\n  '&#x29AC;': '',\n  '&#x29AB;': '',\n  '&#x29AA;': '',\n  '&#x29A9;': '',\n  '&#x29A8;': '',\n  '&#x29A7;': '',\n  '&#x29A6;': '',\n  '&#x29A5;': '',\n  '&#x29A4;': '',\n  '&#x29A3;': '',\n  '&#x29A2;': '',\n  '&#x29A1;': '\\\\not\\\\lor',\n  '&#x29A0;': '\\\\bcancel{>}',\n  '&#x2982;': ':',\n  '&#x2981;': '\\\\circ',\n  '&#x2758;': '|',\n  '&#x25B2;': '\\\\bigtriangleup',\n  '&#x22FF;': '\\\\Epsilon',\n  '&#x22FE;': '\\\\overline{\\\\ni}',\n  '&#x22FD;': '\\\\overline{\\\\ni}',\n  '&#x22FC;': '\\\\in',\n  '&#x22FB;': '\\\\in',\n  '&#x22FA;': '\\\\in',\n  '&#x22F9;': '\\\\underline{\\\\in}',\n  '&#x22F8;': '\\\\underline{\\\\in}',\n  '&#x22F7;': '\\\\overline{\\\\in}',\n  '&#x22F6;': '\\\\overline{\\\\in}',\n  '&#x22F5;': '\\\\dot{\\\\in}',\n  '&#x22F4;': '\\\\in',\n  '&#x22F3;': '\\\\in',\n  '&#x22F2;': '\\\\in',\n  '&#x22F0;': '\\\\ddots',\n  '&#x22E9;': '\\\\underset{\\\\sim}{\\\\succ}',\n  '&#x22E8;': '\\\\underset{\\\\sim}{\\\\prec}',\n  '&#x22E7;': '\\\\underset{\\\\not\\\\sim}{>}',\n  '&#x22E6;': '\\\\underset{\\\\not\\\\sim}{<}',\n  '&#x22E5;': '\\\\not\\\\sqsupseteq',\n  '&#x22E4;': '\\\\not\\\\sqsubseteq',\n  '&#x22E3;': '\\\\not\\\\sqsupseteq',\n  '&#x22E2;': '\\\\not\\\\sqsubseteq',\n  '&#x22E1;': '\\\\nsucc',\n  '&#x22E0;': '\\\\nprec',\n  '&#x22DF;': '\\\\succ',\n  '&#x22DE;': '\\\\prec',\n  '&#x22DD;': '\\\\overline{>}',\n  '&#x22DC;': '\\\\overline{<}',\n  '&#x22DB;': '\\\\underset{>}{\\\\leq}',\n  '&#x22DA;': '\\\\underset{<}{\\\\geq}',\n  '&#x22D5;': '\\\\#',\n  '&#x22D3;': '\\\\cup',\n  '&#x22D2;': '\\\\cap',\n  '&#x22D1;': '\\\\supset',\n  '&#x22D0;': '\\\\subset',\n  '&#x22CF;': '\\\\wedge',\n  '&#x22CE;': '\\\\vee',\n  '&#x22CD;': '\\\\simeq',\n  '&#x22C8;': '\\\\bowtie',\n  '&#x22C7;': '\\\\ast',\n  '&#x22C6;': '\\\\star',\n  '&#x22C4;': '\\\\diamond',\n  '&#x22BF;': '\\\\triangle',\n  '&#x22BE;': '\\\\measuredangle',\n  '&#x22BD;': '\\\\overline{\\\\lor}',\n  '&#x22BC;': '\\\\overline{\\\\land}',\n  '&#x22BB;': '\\\\underline{\\\\lor}',\n  '&#x22BA;': '\\\\top',\n  '&#x22B9;': '',\n  '&#x22B7;': '\\\\circ\\\\multimap',\n  '&#x22B6;': '\\\\circ\\\\multimap',\n  '&#x22B3;': '\\\\triangleright',\n  '&#x22B2;': '\\\\triangleleft',\n  '&#x22B1;': '\\\\succ',\n  '&#x22B0;': '\\\\prec',\n  '&#x22AB;': '|\\\\models',\n  '&#x22AA;': '|\\\\models',\n  '&#x22A7;': '\\\\models',\n  '&#x22A6;': '\\\\vdash',\n  '&#x229D;': '\\\\ominus',\n  '&#x229C;': '\\\\ominus',\n  '&#x229B;': '\\\\odot',\n  '&#x229A;': '\\\\odot',\n  '&#x2294;': '\\\\sqcup',\n  '&#x2293;': '\\\\sqcap',\n  '&#x2292;': '\\\\sqsupseteq',\n  '&#x2291;': '\\\\sqsubseteq',\n  '&#x2290;&#x338;': '\\\\not\\\\sqsupset',\n  '&#x2290;': '\\\\sqsupset',\n  '&#x228F;&#x338;': '\\\\not\\\\sqsubset',\n  '&#x228F;': '\\\\sqsubset',\n  '&#x228E;': '\\\\cup',\n  '&#x228D;': '\\\\cup',\n  '&#x228C;': '\\\\cup',\n  '&#x227F;&#x338;': '\\\\not\\\\succsim',\n  '&#x227F;': '\\\\succsim',\n  '&#x227E;': '\\\\precsim',\n  '&#x2279;': '\\\\not\\\\overset{>}{<}',\n  '&#x2278;': '\\\\not\\\\overset{>}{<}',\n  '&#x2277;': '\\\\overset{>}{<}',\n  '&#x2276;': '\\\\overset{<}{>}',\n  '&#x2275;': '\\\\not\\\\geg',\n  '&#x2274;': '\\\\not\\\\leq',\n  '&#x2273;': '\\\\geg',\n  '&#x2272;': '\\\\leq',\n  '&#x226C;': '',\n  '&#x2267;': '\\\\geg',\n  '&#x2266;&#x338;': '\\\\not\\\\leq',\n  '&#x2266;': '\\\\leq',\n  '&#x2263;': '\\\\overset{=}{=} ',\n  '&#x225E;': '\\\\overset{m}{=} ',\n  '&#x225D;': '\\\\overset{def}{=}',\n  '&#x2258;': '=',\n  '&#x2256;': '=',\n  '&#x2255;': '=:',\n  '&#x2253;': '\\\\doteq',\n  '&#x2252;': '\\\\doteq',\n  '&#x2251;': '\\\\doteq',\n  '&#x2250;': '\\\\doteq',\n  '&#x224F;&#x338;': '',\n  '&#x224F;': '',\n  '&#x224E;&#x338;': '',\n  '&#x224E;': '',\n  '&#x224C;': '\\\\approx',\n  '&#x224B;': '\\\\approx',\n  '&#x224A;': '\\\\approx',\n  '&#x2242;&#x338;': '\\\\neq',\n  '&#x2242;': '=',\n  '&#x223F;': '\\\\sim',\n  '&#x223E;': '\\\\infty',\n  '&#x223D;&#x331;': '\\\\sim',\n  '&#x223D;': '\\\\sim',\n  '&#x223B;': '\\\\sim',\n  '&#x223A;': ':-:',\n  '&#x2239;': '-:',\n  '&#x2238;': '\\\\bot',\n  '&#x2237;': '::',\n  '&#x2236;': ':',\n  '&#x2223;': '|',\n  '&#x221F;': '\\\\llcorner',\n  '&#x2219;': '\\\\cdot',\n  '&#x2218;': '\\\\circ',\n  '&#x2217;': '*',\n  '&#x2215;': '/',\n  '&#x220E;': '\\\\square',\n  '&#x220D;': '\\\\ni',\n  '&#x220A;': '\\\\in',\n  '&#x2206;': '\\\\Delta',\n  '&#x2044;': '/',\n  '&#x2AB0;&#x338;': '\\\\nsucceq',\n  '&#x2AB0;': '\\\\succeq',\n  '&#x2AAF;&#x338;': '\\\\npreceq',\n  '&#x2AAF;': '\\\\preceq',\n  '&#x2A88;': '\\\\ngeqslant',\n  '&#x2A87;': '\\\\nleqslant',\n  '&#x29F3;': '\\\\Phi',\n  '&#x29E6;': '\\\\models',\n  '&#x29E5;': '\\\\not\\\\equiv',\n  '&#x29E4;': '\\\\approx\\\\neq',\n  '&#x29E3;': '\\\\neq',\n  '&#x29C1;': '\\\\circle',\n  '&#x29C0;': '\\\\circle',\n  '&#x25E6;': '\\\\circle',\n  '&#x25D7;': '\\\\circle',\n  '&#x25D6;': '\\\\circle',\n  '&#x25CF;': '\\\\circle',\n  '&#x25CE;': '\\\\circledcirc',\n  '&#x25CD;': '\\\\circledcirc',\n  '&#x25CC;': '\\\\circledcirc',\n  '&#x25C9;': '\\\\circledcirc',\n  '&#x25C8;': '\\\\diamond',\n  '&#x25C7;': '\\\\diamond',\n  '&#x25C6;': '\\\\diamond',\n  '&#x25C5;': '\\\\triangleleft',\n  '&#x25C4;': '\\\\triangleleft',\n  '&#x25C3;': '\\\\triangleleft',\n  '&#x25C2;': '\\\\triangleleft',\n  '&#x25C1;': '\\\\triangleleft',\n  '&#x25C0;': '\\\\triangleleft',\n  '&#x25BF;': '\\\\triangledown',\n  '&#x25BE;': '\\\\triangledown',\n  '&#x25BD;': '\\\\triangledown',\n  '&#x25BC;': '\\\\triangledown',\n  '&#x25B9;': '\\\\triangleright',\n  '&#x25B8;': '\\\\triangleright',\n  '&#x25B7;': '\\\\triangleright',\n  '&#x25B6;': '\\\\triangleright',\n  '&#x25B5;': '\\\\triangle',\n  '&#x25B4;': '\\\\triangle',\n  '&#x25B3;': '\\\\triangle',\n  '&#x25B1;': '\\\\square',\n  '&#x25B0;': '\\\\square',\n  '&#x25AF;': '\\\\square',\n  '&#x25AE;': '\\\\square',\n  '&#x25AD;': '\\\\square',\n  '&#x25AB;': '\\\\square',\n  '&#x25AA;': '\\\\square',\n  '&#x25A1;': '\\\\square',\n  '&#x25A0;': '\\\\square',\n  '&#x22ED;': '\\\\not\\\\triangleright',\n  '&#x22EC;': '\\\\not\\\\triangleleft',\n  '&#x22EB;': '\\\\not\\\\triangleright',\n  '&#x22EA;': '\\\\not\\\\triangleleft',\n  '&#x22D9;': '\\\\ggg',\n  '&#x22D8;': '\\\\lll',\n  '&#x22D7;': '*>',\n  '&#x22D6;': '<*',\n  '&#x22D4;': '\\\\pitchfork',\n  '&#x22CC;': '',\n  '&#x22CB;': '',\n  '&#x22CA;': '\\\\rtimes',\n  '&#x22C9;': '\\\\ltimes',\n  '&#x22B5;': '\\\\triangleright',\n  '&#x22B4;': '',\n  '&#x22A5;': '\\\\bot',\n  '&#x2281;': '\\\\nsucc',\n  '&#x2280;': '\\\\preceq',\n  '&#x227D;': '\\\\succeq',\n  '&#x227C;': '\\\\preceq',\n  '&#x227B;': '\\\\succ',\n  '&#x227A;': '\\\\prec',\n  '&#x2271;': '\\\\geq/',\n  '&#x2270;': '\\\\leq/',\n  '&#x226D;': '\\\\neq',\n  '&#x226B;&#x338;': '\\\\not\\\\gg',\n  '&#x226B;': '\\\\gg',\n  '&#x226A;&#x338;': '\\\\not\\\\ll',\n  '&#x226A;': '\\\\ll',\n  '&#x2269;': '\\\\ngeqslant',\n  '&#x2268;': '\\\\nleqslant',\n  '&#x2261;': '\\\\equiv',\n  '&#x225F;': '\\\\doteq',\n  '&#x225C;': '\\\\triangleq',\n  '&#x225B;': '\\\\doteq',\n  '&#x225A;': '\\\\triangleq',\n  '&#x2259;': '\\\\triangleq',\n  '&#x2257;': '\\\\doteq',\n  '&#x2254;': ':=',\n  '&#x224D;': '\\\\asymp',\n  '&#x2247;': '\\\\ncong',\n  '&#x2246;': '\\\\ncong',\n  '&#x2245;': '\\\\cong',\n  '&#x2244;': '\\\\not\\\\simeq',\n  '&#x2243;': '\\\\simeq',\n  '&#x2241;': '\\\\not\\\\sim',\n  '&#x2226;': '\\\\not\\\\parallel',\n  '&#x2225;': '\\\\parallel',\n  '&#x2224;': '\\\\not|',\n  '&#x221D;': '\\\\propto',\n  '==': '==',\n  '=': '=',\n  ':=': ':=',\n  '/=': '=',\n  '-=': '-=',\n  '+=': '+=',\n  '*=': '*=',\n  '!=': '!=',\n  '&#x2260;': '\\\\neq',\n  '&#x2262;': '\\\\equiv /',\n  '&#x2249;': '\\\\approx /',\n  '&#x223C;': 'sim',\n  '&#x2248;': '\\\\approx',\n  '&#x226E;': '</',\n  '&lt;': '<',\n  '&#x226F;': '>/',\n  '>=': '>=',\n  '>': '>',\n  '&#x2265;': '\\\\geq',\n  '&#x2264;': '\\\\leq',\n  '&lt;=': '<=',\n  '&#x228B;': '\\\\supsetneq',\n  '&#x228A;': '\\\\subsetneq',\n  '&#x2289;': '\\\\nsupseteq',\n  '&#x2288;': '\\\\nsubseteq',\n  '&#x2287;': '\\\\supseteq',\n  '&#x2286;': '\\\\subseteq',\n  '&#x2285;': '\\\\not\\\\supset',\n  '&#x2284;': '\\\\not\\\\subset',\n  '&#x2283;&#x20D2;': '\\\\supset |',\n  '&#x2283;': '\\\\supset',\n  '&#x2282;&#x20D2;': '\\\\subset |',\n  '&#x2282;': '\\\\subset',\n  '&#x220C;': '\\\\not\\\\in',\n  '&#x2209;': '\\\\notin',\n  '&#x2208;': '\\\\in',\n  '&#x2201;': 'C',\n  '&#x2204;': '\\\\nexists',\n  '&#x2203;': '\\\\exists',\n  '&#x2200;': '\\\\forall',\n  '&#x2227;': '\\\\land',\n  '&amp;&amp;': '\\\\&\\\\&',\n  '&#x2228;': '\\\\lor',\n  '&#x22AF;': '\\\\cancel{\\\\vDash}',\n  '&#x22AE;': '\\\\cancel{\\\\Vdash}',\n  '&#x22AD;': '\\\\nvDash',\n  '&#x22AC;': '\\\\nvDash',\n  '&#x22A9;': '\\\\Vdash',\n  '&#x22A8;': '\\\\vDash',\n  '&#x22A4;': '\\\\top',\n  '&#x22A3;': '\\\\dashv',\n  '&#x22A2;': '\\\\vdash',\n  '&#x220B;': '\\\\ni',\n  '&#x22F1;': '\\\\ddots',\n  '&#x22EF;': '\\\\hdots',\n  '&#x22EE;': '\\\\vdots',\n  '&#x2026;': '\\\\hdots',\n  '&#x3F6;': '\\\\ni',\n  ':': ':',\n  '...': '\\\\cdots',\n  '..': '..',\n  '->': '->',\n  '&#x2235;': '\\\\because',\n  '&#x2234;': '\\\\therefore ',\n  '&#x2063;': '',\n  ',': ',',\n  ';': ';',\n  '&#x29FD;': '\\\\}',\n  '&#x29FC;': '\\\\{',\n  '&#x2998;': '\\\\]',\n  '&#x2997;': '\\\\[',\n  '&#x2996;': '\\\\ll',\n  '&#x2995;': '\\\\gg',\n  '&#x2994;': '\\\\gg',\n  '&#x2993;': '\\\\ll',\n  '&#x2992;': '\\\\gg',\n  '&#x2991;': '\\\\ll',\n  '&#x2990;': '\\\\]',\n  '&#x298F;': '\\\\]',\n  '&#x298E;': '\\\\]',\n  '&#x298D;': '\\\\[',\n  '&#x298C;': '\\\\[',\n  '&#x298B;': '\\\\]',\n  '&#x298A;': '\\\\triangleright',\n  '&#x2989;': '\\\\triangleleft',\n  '&#x2988;': '|\\\\)',\n  '&#x2987;': '\\\\(|',\n  '&#x2986;': '|\\\\)',\n  '&#x2985;': '\\\\(\\\\(',\n  '&#x2984;': '|\\\\}',\n  '&#x2983;': '\\\\{|',\n  '&#x2980;': '\\\\||',\n  '&#x27EF;': '\\\\left. \\\\right]',\n  '&#x27EE;': '\\\\left[ \\\\right.',\n  '&#x27ED;': '\\\\left. \\\\right]]',\n  '&#x27EC;': '\\\\left[[ \\\\right.',\n  '&#x27EB;': '\\\\gg',\n  '&#x27EA;': '\\\\ll',\n  '&#x27E9;': '\\\\rangle',\n  '&#x27E8;': '\\\\langle',\n  '&#x27E7;': '\\\\left. \\\\right]]',\n  '&#x27E6;': '\\\\left[[ \\\\right.',\n  '&#x2773;': '\\\\left.\\\\right)',\n  '&#x2772;': '\\\\left(\\\\right.',\n  '&#x232A;': '\\\\rangle',\n  '&#x2329;': '\\\\langle',\n  '&#x230B;': '\\\\rfloor',\n  '&#x230A;': '\\\\lfloor',\n  '&#x2309;': '\\\\rceil',\n  '&#x2308;': '\\\\lceil',\n  '&#x2016;': '\\\\parallel',\n  '}': '\\\\left.\\\\right}',\n  '{': '\\\\left{\\\\right.',\n  ']': '\\\\left]\\\\right.',\n  '[': '\\\\left[\\\\right.',\n  ')': '\\\\left.\\\\right)',\n  '(': '\\\\left(\\\\right.',\n  '&#x201D;': '\"',\n  '&#x201C;': '``',\n  '&#x2019;': \"'\",\n  '&#x2018;': '`',\n  '%CE%B1': '\\\\alpha',\n  '%CE%B2': '\\\\beta',\n  '%CE%B3': '\\\\gamma',\n  '%CE%93': '\\\\Gamma',\n  '%CE%B4': '\\\\delta',\n  '%CE%94': '\\\\Delta',\n  '%CF%B5': '\\\\epsilon',\n  '%CE%B6': '\\\\zeta',\n  '%CE%B7': '\\\\eta',\n  '%CE%B8': '\\\\theta',\n  '%CE%98': '\\\\Theta',\n  '%CE%B9': '\\\\iota',\n  '%CE%BA': '\\\\kappa',\n  '%CE%BB': '\\\\lambda',\n  '%CE%BC': '\\\\mu',\n  '%CE%BD': '\\\\nu',\n  '%CE%BF': '\\\\omicron',\n  '%CF%80': '\\\\pi',\n  '%CE%A0': '\\\\Pi',\n  '%CF%81': '\\\\pho',\n  '%CF%83': '\\\\sigma',\n  '%CE%A3': '\\\\Sigma',\n  '%CF%84': '\\\\tau',\n  '%CF%85': '\\\\upsilon',\n  '%CE%A5': '\\\\Upsilon',\n  '%CF%95': '\\\\phi',\n  '%CE%A6': '\\\\Phi',\n  '%CF%87': '\\\\chi',\n  '%CF%88': '\\\\psi',\n  '%CE%A8': '\\\\Psi',\n  '%CF%89': '\\\\omega',\n  '%CE%A9': '\\\\Omega',\n};\n", "export const allMathOperatorsByGlyph: Record<string, string> = {\n  _: '\\\\underline',\n  '⏡': '\\\\underbrace',\n  '⏠': '\\\\overbrace',\n  '⏟': '\\\\underbrace',\n  '⏞': '\\\\overbrace',\n  '⏝': '\\\\underbrace',\n  '⏜': '\\\\overbrace',\n  '⎵': '\\\\underbrace',\n  '⎴': '\\\\overbrace',\n  '⃜': '\\\\square',\n  '⃛': '\\\\square',\n  '⁤': '',\n  '⁗': \"''''\",\n  '‾': '\\\\overline',\n  '‷': '```',\n  '‶': '``',\n  '‵': '`',\n  '‴': \"'''\",\n  '″': \"''\",\n  '‟': '``',\n  '„': ',,',\n  '‛': '`',\n  '‚': ',',\n  '^': '\\\\hat',\n  '˷': '\\\\sim',\n  '˝': '\\\\sim',\n  '˜': '\\\\sim',\n  '˚': '\\\\circ',\n  '˙': '\\\\cdot',\n  '˘': ' ',\n  ˍ: '\\\\_',\n  ˋ: 'ˋ',\n  ˊ: 'ˊ',\n  ˉ: 'ˉ',\n  ˇ: '',\n  ˆ: '\\\\hat',\n  º: 'o',\n  '¹': '1',\n  '¸': ',',\n  '´': '´',\n  '³': '3',\n  '²': '2',\n  '°': '\\\\circ',\n  '¯': '\\\\bar',\n  ª: 'a',\n  '↛': '\\\\nrightarrow',\n  '¨': '\\\\cdot\\\\cdot',\n  '~': '\\\\sim',\n  '`': '`',\n  '--': '--',\n  '++': '++',\n  '&': '\\\\&',\n  '∜': '\\\\sqrt[4]{}',\n  '∛': '\\\\sqrt[3]{}',\n  '√': '\\\\sqrt{}',\n  ⅆ: 'd',\n  ⅅ: '\\\\mathbb{D}',\n  '?': '?',\n  '@': '@',\n  '//': '//',\n  '!!': '!!',\n  '!': '!',\n  '♯': '\\\\#',\n  '♮': '',\n  '♭': '',\n  '′': \"'\",\n  '<>': '<>',\n  '**': '\\\\star\\\\star',\n  '∇': '\\\\nabla',\n  '∂': '\\\\partial',\n  '⊙': '\\\\bigodot',\n  '¬': '\\\\neg',\n  '∢': '\\\\measuredangle',\n  '∡': '\\\\measuredangle',\n  '∠': '\\\\angle',\n  '÷': '\\\\div',\n  '/': '/',\n  '∖': '\\\\backslash',\n  '\\\\': '\\\\backslash',\n  '%': '\\\\%',\n  '⊗': '\\\\bigotimes',\n  '·': '\\\\cdot',\n  '⨿': '\\\\coprod',\n  '⨯': '\\\\times',\n  '⋅': '\\\\cdot',\n  '⊡': '\\\\boxdot',\n  '⊠': '\\\\boxtimes',\n  '⁢': '',\n  '⁃': '-',\n  '•': '\\\\cdot',\n  '.': '.',\n  '*': '\\\\star',\n  '∪': '\\\\cup',\n  '∩': '\\\\cap',\n  '∐': '\\\\coprod',\n  '∏': '\\\\prod',\n  '≀': '',\n  '⫿': '',\n  '⫼': '\\\\mid\\\\mid\\\\mid',\n  '⨉': '\\\\times',\n  '⨈': '',\n  '⨇': '',\n  '⨆': '\\\\sqcup',\n  '⨅': '\\\\sqcap',\n  '⨂': '\\\\otimes',\n  '⨀': '\\\\odot',\n  '⋂': '\\\\cap',\n  '⋁': '\\\\vee',\n  '⋀': '\\\\wedge',\n  '⨄': '\\\\uplus',\n  '⨃': '\\\\cup',\n  '⋃': '\\\\cup',\n  '⨜': '\\\\underline{\\\\int}',\n  '⨛': '\\\\overline{\\\\int}',\n  '⨚': '\\\\int',\n  '⨙': '\\\\int',\n  '⨘': '\\\\int',\n  '⨗': '\\\\int',\n  '⨖': '\\\\oint',\n  '⨕': '\\\\oint',\n  '⨔': '\\\\int',\n  '⨓': '\\\\int',\n  '⨒': '\\\\int',\n  '⨑': '\\\\int',\n  '⨐': '\\\\int',\n  '⨏': '\\\\bcancel{\\\\int}',\n  '⨎': '',\n  '⨍': '\\\\hcancel{\\\\int}',\n  '⨌': '\\\\iiiint',\n  '∳': '\\\\oint',\n  '∲': '\\\\oint',\n  '∱': '\\\\int',\n  '∰': '\\\\oiint',\n  '∯': '\\\\oiint',\n  '∮': '\\\\oint',\n  '∫': '\\\\int',\n  '⨁': '\\\\oplus',\n  '⊘': '\\\\oslash',\n  '⊖': '\\\\ominus',\n  '⊕': '\\\\oplus',\n  '∭': '\\\\iiint',\n  '∬': '\\\\iint',\n  '⨋': '',\n  '⨊': '',\n  '∑': '\\\\sum',\n  '⊟': '\\\\boxminus',\n  '⊞': '\\\\boxplus',\n  '∔': '\\\\dot{+}',\n  '∓': '+-',\n  '−': '-',\n  '±': '\\\\pm',\n  '-': '-',\n  '+': '+',\n  '⭆': '\\\\Rrightarrow',\n  '⭅': '\\\\Lleftarrow',\n  '⧴': ':\\\\rightarrow',\n  '⧯': '',\n  '⧟': '\\\\bullet-\\\\bullet',\n  '⦟': '\\\\angle',\n  '⦞': '\\\\measuredangle',\n  '⦝': '\\\\measuredangle',\n  '⦜': '\\\\perp',\n  '⦛': '\\\\measuredangle',\n  '⦚': '',\n  '⦙': '\\\\vdots',\n  '⥿': '',\n  '⥾': '',\n  '⥽': '\\\\prec',\n  '⥼': '\\\\succ',\n  '⥻': '\\\\underset{\\\\rightarrow}{\\\\supset}',\n  '⥺': '',\n  '⥹': '\\\\underset{\\\\rightarrow}{\\\\subset}',\n  '⥸': '\\\\underset{\\\\rightarrow}{>}',\n  '⥷': '',\n  '⥶': '\\\\underset{\\\\leftarrow}{<}',\n  '⥵': '\\\\underset{\\\\approx}{\\\\rightarrow}',\n  '⥴': '\\\\underset{\\\\sim}{\\\\rightarrow}',\n  '⥳': '\\\\underset{\\\\sim}{\\\\leftarrow}',\n  '⥲': '\\\\overset{\\\\sim}{\\\\rightarrow}',\n  '⥱': '\\\\overset{=}{\\\\rightarrow}',\n  '⥰': '',\n  '⥯': '',\n  '⥮': '',\n  '⥭': '\\\\overline{\\\\rightharpoondown}',\n  '⥬': '\\\\underline{\\\\rightharpoonup}',\n  '⥫': '\\\\overline{\\\\leftharpoondown}',\n  '⥪': '\\\\underline{\\\\leftharpoonup}',\n  '⥩': '\\\\rightleftharpoons',\n  '⥨': '\\\\rightleftharpoons',\n  '⥧': '\\\\rightleftharpoons',\n  '⥦': '\\\\rightleftharpoons',\n  '⥥': '\\\\Downarrow',\n  '⥤': '\\\\Rightarrow',\n  '⥣': '\\\\Uparrow',\n  '⥢': '\\\\Leftarrow',\n  '⥡': '\\\\downarrow',\n  '⥠': '\\\\uparrow',\n  '⥟': '\\\\rightarrow',\n  '⥞': '\\\\leftarrow',\n  '⥝': '\\\\downarrow',\n  '⥜': '\\\\uparrow',\n  '⥛': '\\\\rightarrow',\n  '⥚': '\\\\leftarrow',\n  '⥙': '\\\\downarrow',\n  '⥘': '\\\\uparrow',\n  '⥗': '\\\\rightarrow',\n  '⥖': '\\\\leftarrow',\n  '⥕': '\\\\downarrow',\n  '⥔': '\\\\uparrow',\n  '⥓': '\\\\rightarrow',\n  '⥒': '\\\\leftarrow',\n  '⥑': '\\\\updownarrow',\n  '⥐': '\\\\leftrightarrow',\n  '⥏': '\\\\updownarrow',\n  '⥎': '\\\\leftrightarrow',\n  '⥍': '\\\\updownarrow',\n  '⥌': '\\\\updownarrow',\n  '⥋': '\\\\leftrightarrow',\n  '⥊': '\\\\leftrightarrow',\n  '⥉': '',\n  '⥈': '\\\\leftrightarrow',\n  '⥇': '\\\\nrightarrow',\n  '⥆': '',\n  '⥅': '',\n  '⥄': '\\\\rightleftarrows',\n  '⥃': '\\\\leftrightarrows',\n  '⥂': '\\\\rightleftarrows',\n  '⥁': '\\\\circlearrowright',\n  '⥀': '\\\\circlearrowleft',\n  '⤿': '\\\\rightarrow',\n  '⤾': '\\\\leftarrow',\n  '⤽': '\\\\leftarrow',\n  '⤼': '\\\\rightarrow',\n  '⤻': '\\\\rightarrow',\n  '⤺': '\\\\leftarrow',\n  '⤹': '\\\\downarrow',\n  '⤸': '\\\\downarrow',\n  '⤷': '\\\\Rsh',\n  '⤶': '\\\\Lsh',\n  '⤵': '\\\\downarrow',\n  '⤴': '\\\\uparrow',\n  '⤳': '\\\\rightarrow',\n  '⤲': '\\\\leftarrow',\n  '⤱': ' ',\n  '⤰': ' ',\n  '⤯': ' ',\n  '⤮': ' ',\n  '⤭': ' ',\n  '⤬': '\\\\times',\n  '⤫': '\\\\times',\n  '⤪': ' ',\n  '⤩': ' ',\n  '⤨': ' ',\n  '⤧': ' ',\n  '⤦': ' ',\n  '⤥': ' ',\n  '⤤': ' ',\n  '⤣': ' ',\n  '⤢': ' ',\n  '⤡': ' ',\n  '⤠': '\\\\mapsto\\\\cdot',\n  '⤟': '\\\\cdot\\\\leftarrow',\n  '⤞': '\\\\rightarrow\\\\cdot',\n  '⤝': '\\\\leftarrow',\n  '⤜': '\\\\rightarrow',\n  '⤛': '\\\\leftarrow',\n  '⤚': '\\\\rightarrow',\n  '⤙': '\\\\leftarrow',\n  '⤘': '\\\\rightarrow',\n  '⤗': '\\\\rightarrow',\n  '⤖': '\\\\rightarrow',\n  '⤕': '\\\\rightarrow',\n  '⤔': '\\\\rightarrow',\n  '⤓': '\\\\downarrow',\n  '⤒': '\\\\uparrow',\n  '⤑': '\\\\rightarrow',\n  '⤐': '\\\\rightarrow',\n  '⤏': '\\\\rightarrow',\n  '⤎': '\\\\leftarrow',\n  '⤍': '\\\\rightarrow',\n  '⤌': '\\\\leftarrow',\n  '⤋': '\\\\Downarrow',\n  '⤊': '\\\\Uparrow',\n  '⤉': '\\\\uparrow',\n  '⤈': '\\\\downarrow',\n  '⤇': '\\\\Rightarrow',\n  '⤆': '\\\\Leftarrow',\n  '⤅': '\\\\mapsto',\n  '⤄': '\\\\nLeftrightarrow',\n  '⤃': '\\\\nRightarrow',\n  '⤂': '\\\\nLeftarrow',\n  '⤁': '\\\\rightsquigarrow',\n  '⤀': '\\\\rightsquigarrow',\n  '⟿': '\\\\rightsquigarrow',\n  '⟾': '\\\\Rightarrow',\n  '⟽': '\\\\Leftarrow',\n  '⟼': '\\\\mapsto',\n  '⟻': '\\\\leftarrow',\n  '⟺': '\\\\Longleftrightarrow',\n  '⟹': '\\\\Longrightarrow',\n  '⟸': '\\\\Longleftarrow',\n  '⟷': '\\\\leftrightarrow',\n  '⟶': '\\\\rightarrow',\n  '⟵': '\\\\leftarrow',\n  '⟱': '\\\\Downarrow',\n  '⟰': '\\\\Uparrow',\n  '⊸': '\\\\rightarrow',\n  '⇿': '\\\\leftrightarrow',\n  '⇾': '\\\\rightarrow',\n  '⇽': '\\\\leftarrow',\n  '⇼': '\\\\nleftrightarrow',\n  '⇻': '\\\\nrightarrow',\n  '⇺': '\\\\nleftarrow',\n  '⇹': '\\\\nleftrightarrow',\n  '⇸': '\\\\nrightarrow',\n  '⇷': '\\\\nleftarrow',\n  '⇶': '\\\\Rrightarrow',\n  '⇵': '',\n  '⇴': '\\\\rightarrow',\n  '⇳': '\\\\Updownarrow',\n  '⇲': '\\\\searrow',\n  '⇱': '\\\\nwarrow',\n  '⇰': '\\\\Leftarrow',\n  '⇯': '\\\\Uparrow',\n  '⇮': '\\\\Uparrow',\n  '⇭': '\\\\Uparrow',\n  '⇬': '\\\\Uparrow',\n  '⇫': '\\\\Uparrow',\n  '⇪': '\\\\Uparrow',\n  '⇩': '\\\\Downarrow',\n  '⇨': '\\\\Rightarrow',\n  '⇧': '\\\\Uparrow',\n  '⇦': '\\\\Leftarrow',\n  '⇥': '\\\\rightarrow',\n  '⇤': '\\\\leftarrow',\n  '⇣': '\\\\downarrow',\n  '⇢': '\\\\rightarrow',\n  '⇡': '\\\\uparrow',\n  '⇠': '\\\\leftarrow',\n  '⇟': '\\\\downarrow',\n  '⇞': '\\\\uparrow',\n  '⇝': '\\\\rightsquigarrow',\n  '⇜': '\\\\leftarrow',\n  '⇛': '\\\\Rrightarrow',\n  '⇚': '\\\\Lleftarrow',\n  '⇙': '\\\\swarrow',\n  '⇘': '\\\\searrow',\n  '⇗': '\\\\nearrow',\n  '⇖': '\\\\nwarrow',\n  '⇕': '\\\\Updownarrow',\n  '⇔': '\\\\Leftrightarrow',\n  '⇓': '\\\\Downarrow',\n  '⇒': '\\\\Rightarrow',\n  '⇑': '\\\\Uparrow',\n  '⇐': '\\\\Leftarrow',\n  '⇏': '\\\\nRightarrow',\n  '⇎': '\\\\nLeftrightarrow',\n  '⇍': '\\\\nLeftarrow',\n  '⇌': '\\\\rightleftharpoons',\n  '⇋': '\\\\leftrightharpoons',\n  '⇊': '\\\\downdownarrows',\n  '⇉': '\\\\rightrightarrows',\n  '⇈': '\\\\upuparrows',\n  '⇇': '\\\\leftleftarrows',\n  '⇆': '\\\\leftrightarrows',\n  '⇅': '',\n  '⇄': '\\\\rightleftarrows',\n  '⇃': '\\\\downharpoonleft',\n  '⇂': '\\\\downharpoonright',\n  '⇁': '\\\\rightharpoondown',\n  '⇀': '\\\\rightharpoonup',\n  '↿': '\\\\upharpoonleft',\n  '↾': '\\\\upharpoonright',\n  '↽': '\\\\leftharpoondown',\n  '↼': '\\\\leftharpoonup',\n  '↻': '\\\\circlearrowright',\n  '↺': '\\\\circlearrowleft',\n  '↹': '\\\\leftrightarrows',\n  '↸': '\\\\overline{\\\\nwarrow}',\n  '↷': '\\\\curvearrowright',\n  '↶': '\\\\curvearrowleft',\n  '↵': '\\\\swarrow',\n  '↴': '\\\\searrow',\n  '↳': '\\\\Rsh',\n  '↲': '\\\\Lsh',\n  '↱': '\\\\Rsh',\n  '↰': '\\\\Lsh',\n  '↯': '\\\\swarrow',\n  '↮': '',\n  '↭': '\\\\leftrightsquigarrow',\n  '↬': '\\\\looparrowright',\n  '↫': '\\\\looparrowleft',\n  '↪': '\\\\hookrightarrow',\n  '↩': '\\\\hookleftarrow',\n  '↨': '\\\\underline{\\\\updownarrow}',\n  '↧': '\\\\downarrow',\n  '↦': '\\\\rightarrowtail',\n  '↥': '\\\\uparrow',\n  '↤': '\\\\leftarrowtail',\n  '↣': '\\\\rightarrowtail',\n  '↢': '\\\\leftarrowtail',\n  '↡': '\\\\downarrow',\n  '↠': '\\\\twoheadrightarrow',\n  '↟': '\\\\uparrow',\n  '↞': '\\\\twoheadleftarrow',\n  '↝': '\\\\nearrow',\n  '↜': '\\\\nwarrow',\n  '↚': '',\n  '↙': '\\\\swarrow',\n  '↘': '\\\\searrow',\n  '↗': '\\\\nearrow',\n  '↖': '\\\\nwarrow',\n  '↕': '\\\\updownarrow',\n  '↔': '\\\\leftrightarrow',\n  '↓': '\\\\downarrow',\n  '→': '\\\\rightarrow',\n  '↑': '\\\\uparrow',\n  '←': '\\\\leftarrow',\n  '|||': '\\\\left|||\\\\right.',\n  '||': '\\\\left||\\\\right.',\n  '|': '\\\\mid',\n  '⫾': '',\n  '⫽': '//',\n  '⫻': '///',\n  '⫺': '',\n  '⫹': '',\n  '⫸': '',\n  '⫷': '',\n  '⫶': '\\\\vdots',\n  '⫵': '',\n  '⫴': '',\n  '⫳': '',\n  '⫲': '\\\\nparallel',\n  '⫱': '',\n  '⫰': '',\n  '⫯': '',\n  '⫮': '\\\\bcancel{\\\\mid}',\n  '⫭': '',\n  '⫬': '',\n  '⫫': '',\n  '⫪': '',\n  '⫩': '',\n  '⫨': '\\\\underline{\\\\perp}',\n  '⫧': '\\\\overline{\\\\top}',\n  '⫦': '',\n  '⫥': '',\n  '⫤': '',\n  '⫣': '',\n  '⫢': '',\n  '⫡': '',\n  '⫠': '\\\\perp',\n  '⫟': '\\\\top',\n  '⫞': '\\\\dashv',\n  '⫝̸': '',\n  '⫝': '',\n  '⫛': '\\\\pitchfork',\n  '⫚': '',\n  '⫙': '',\n  '⫘': '',\n  '⫗': '',\n  '⫖': '',\n  '⫕': '',\n  '⫔': '',\n  '⫓': '',\n  '⫒': '',\n  '⫑': '',\n  '⫐': '',\n  '⫏': '',\n  '⫎': '',\n  '⫍': '',\n  '⫌': '\\\\underset{\\\\neq}{\\\\supset}',\n  '⫋': '\\\\underset{\\\\neq}{\\\\subset}',\n  '⫊': '\\\\underset{\\\\approx}{\\\\supset}',\n  '⫉': '\\\\underset{\\\\approx}{\\\\subset}',\n  '⫈': '\\\\underset{\\\\sim}{\\\\supset}',\n  '⫇': '\\\\underset{\\\\sim}{\\\\subset}',\n  '⫆': '\\\\supseteqq',\n  '⫅': '\\\\subseteqq',\n  '⫄': '\\\\dot{\\\\supseteq}',\n  '⫃': '\\\\dot{\\\\subseteq}',\n  '⫂': '\\\\underset{\\\\times}{\\\\supset}',\n  '⫁': '\\\\underset{\\\\times}{\\\\subset}',\n  '⫀': '\\\\underset{+}{\\\\supset}',\n  '⪿': '\\\\underset{+}{\\\\subset}',\n  '⪾': '',\n  '⪽': '',\n  '⪼': '\\\\gg ',\n  '⪻': '\\\\ll',\n  '⪺': '\\\\underset{\\\\cancel{\\\\approx}}{\\\\succ}',\n  '⪹': '\\\\underset{\\\\cancel{\\\\approx}}{\\\\prec}',\n  '⪸': '\\\\underset{\\\\approx}{\\\\succ}',\n  '⪷': '\\\\underset{\\\\approx}{\\\\prec}',\n  '⪶': '\\\\underset{\\\\cancel{=}}{\\\\succ}',\n  '⪵': '\\\\underset{\\\\cancel{=}}{\\\\prec}',\n  '⪴': '\\\\underset{=}{\\\\succ}',\n  '⪳': '\\\\underset{=}{\\\\prec}',\n  '⪲': '',\n  '⪱': '',\n  '⪮': '',\n  '⪭': '\\\\underline{\\\\hcancel{>}}',\n  '⪬': '\\\\underline{\\\\hcancel{>}}',\n  '⪫': '\\\\hcancel{>}',\n  '⪪': '\\\\hcancel{<}',\n  '⪩': '',\n  '⪨': '',\n  '⪧': '\\\\vartriangleright',\n  '⪦': '\\\\vartriangleleft',\n  '⪥': '><',\n  '⪤': '><',\n  '⪣': '\\\\underline{\\\\ll}',\n  '⪢̸': '\\\\cancel{\\\\gg}',\n  '⪢': '\\\\gg',\n  '⪡̸': '\\\\cancel{\\\\ll}',\n  '⪡': '\\\\ll',\n  '⪠': '\\\\overset{\\\\sim}{\\\\geqq}',\n  '⪟': '\\\\overset{\\\\sim}{\\\\leqq}',\n  '⪞': '\\\\overset{\\\\sim}{>}',\n  '⪝': '\\\\overset{\\\\sim}{<}',\n  '⪜': '',\n  '⪛': '',\n  '⪚': '\\\\overset{=}{>}',\n  '⪙': '\\\\overset{=}{<}',\n  '⪘': '',\n  '⪗': '',\n  '⪖': '',\n  '⪕': '',\n  '⪔': '',\n  '⪓': '',\n  '⪒': '\\\\underset{=}{\\\\gtrless}',\n  '⪑': '\\\\underset{=}{\\\\lessgtr}',\n  '⪐': '\\\\underset{<}{\\\\gtrsim}',\n  '⪏': '\\\\underset{>}{\\\\lesssim}',\n  '⪎': '\\\\underset{\\\\simeq}{>}',\n  '⪍': '\\\\underset{\\\\simeq}{<}',\n  '⪌': '\\\\gtreqqless',\n  '⪋': '\\\\lesseqqgtr',\n  '⪊': '\\\\underset{\\\\cancel{\\\\approx}}{>}',\n  '⪉': '\\\\underset{\\\\approx}{<}',\n  '⪆': '\\\\underset{\\\\approx}{>}',\n  '⪅': '\\\\underset{\\\\approx}{<}',\n  '⪄': '',\n  '⪃': '',\n  '⪂': '',\n  '⪁': '',\n  '⪀': '',\n  '⩿': '',\n  '⩾̸': '\\\\bcancel{\\\\geq}',\n  '⩾': '\\\\geq',\n  '⩽̸': '\\\\bcancel{\\\\leq}',\n  '⩽': '\\\\leq',\n  '⩼': '',\n  '⩻': '',\n  '⩺': '',\n  '⩹': '',\n  '⩸': '\\\\overset{\\\\dots}{\\\\equiv}',\n  '⩷': '',\n  '⩶': '===',\n  '⩵': '==',\n  '⩴': '::=',\n  '⩳': '',\n  '⩲': '\\\\underset{=}{+}',\n  '⩱': '\\\\overset{=}{+}',\n  '⩰': '\\\\overset{\\\\approx}{=}',\n  '⩯': '\\\\overset{\\\\wedge}{=}',\n  '⩮': '\\\\overset{*}{=}',\n  '⩭': '\\\\dot{\\\\approx}',\n  '⩬': '',\n  '⩫': '',\n  '⩪': '\\\\dot{\\\\sim}',\n  '⩩': '',\n  '⩨': '',\n  '⩧': '\\\\dot{\\\\equiv}',\n  '⩦': '\\\\underset{\\\\cdot}{=}',\n  '⩥': '',\n  '⩤': '',\n  '⩣': '\\\\underset{=}{\\\\vee}',\n  '⩢': '\\\\overset{=}{\\\\vee}',\n  '⩡': 'ul(vv)',\n  '⩠': '\\\\underset{=}{\\\\wedge}',\n  '⩟': '\\\\underline{\\\\wedge}',\n  '⩞': '\\\\overset{=}{\\\\wedge}',\n  '⩝': '\\\\hcancel{\\\\vee}',\n  '⩜': '\\\\hcancel{\\\\wedge}',\n  '⩛': '',\n  '⩚': '',\n  '⩙': '',\n  '⩘': '\\\\vee',\n  '⩗': '\\\\wedge',\n  '⩖': '',\n  '⩕': '',\n  '⩔': '',\n  '⩓': '',\n  '⩒': '\\\\dot{\\\\vee}',\n  '⩑': '\\\\dot{\\\\wedge}',\n  '⩐': '',\n  '⩏': '',\n  '⩎': '',\n  '⩍': '\\\\overline{\\\\cap}',\n  '⩌': '\\\\overline{\\\\cup}',\n  '⩋': '',\n  '⩊': '',\n  '⩉': '',\n  '⩈': '',\n  '⩇': '',\n  '⩆': '',\n  '⩅': '',\n  '⩄': '',\n  '⩃': '\\\\overline{\\\\cap}',\n  '⩂': '\\\\overline{\\\\cup}',\n  '⩁': '',\n  '⩀': '',\n  '⨾': '',\n  '⨽': '\\\\llcorner',\n  '⨼': '\\\\lrcorner',\n  '⨻': '',\n  '⨺': '',\n  '⨹': '',\n  '⨸': '',\n  '⨷': '',\n  '⨶': '\\\\hat{\\\\otimes}',\n  '⨵': '',\n  '⨴': '',\n  '⨳': '',\n  '⨲': '\\\\underline{\\\\times}',\n  '⨱': '\\\\underline{\\\\times}',\n  '⨰': '\\\\dot{\\\\times}',\n  '⨮': '\\\\bigodot',\n  '⨭': '\\\\bigodot',\n  '⨬': '',\n  '⨫': '',\n  '⨪': '',\n  '⨩': '',\n  '⨨': '',\n  '⨧': '',\n  '◻': '\\\\Box',\n  '⨦': '\\\\underset{\\\\sim}{+}',\n  '⨥': '\\\\underset{\\\\circ}{+}',\n  '⨤': '\\\\overset{\\\\sim}{+}',\n  '⨣': '\\\\hat{+}',\n  '⨢': '\\\\dot{+}',\n  '⨡': '\\\\upharpoonright',\n  '⨠': '>>',\n  '⨟': '',\n  '⨞': '\\\\triangleleft',\n  '⨝': '\\\\bowtie',\n  '⧿': '',\n  '⧾': '+',\n  '⧻': '\\\\hcancel{|||}',\n  '⧺': '\\\\hcancel{||}',\n  '⧹': '\\\\backslash',\n  '⧸': '/',\n  '⧷': 'hcancel{\\backslash}',\n  '⧶': '',\n  '⧵': '\\\\backslash',\n  '⧲': '\\\\Phi',\n  '⧱': '',\n  '⧰': '',\n  '⧮': '',\n  '⧭': '',\n  '⧬': '',\n  '⧫': '\\\\lozenge',\n  '⧪': '',\n  '⧩': '',\n  '⧨': '',\n  '⧧': '\\\\ddagger',\n  '⧢': '\\\\sqcup\\\\sqcup',\n  '⧡': '',\n  '⧠': '\\\\square',\n  '⧞': '',\n  '⧝': '',\n  '⧜': '',\n  '⧛': '\\\\{\\\\{',\n  '⧙': '\\\\{',\n  '⧘': '\\\\}',\n  '⧗': '',\n  '⧖': '',\n  '⧕': '\\\\bowtie',\n  '⧔': '\\\\bowtie',\n  '⧓': '\\\\bowtie',\n  '⧒': '\\\\bowtie',\n  '⧑': '\\\\bowtie',\n  '⧐̸': '| \\\\not\\\\triangleright',\n  '⧐': '| \\\\triangleright',\n  '⧏̸': '\\\\not\\\\triangleleft |',\n  '⧏': '\\\\triangleleft |',\n  '⧎': '',\n  '⧍': '\\\\triangle',\n  '⧌': '',\n  '⧋': '\\\\underline{\\\\triangle}',\n  '⧊': '\\\\dot{\\\\triangle}',\n  '⧉': '',\n  '⧈': '\\\\boxed{\\\\circ}',\n  '⧇': '\\\\boxed{\\\\circ}',\n  '⧆': '\\\\boxed{\\\\rightarrow}',\n  '⧅': '\\\\bcancel{\\\\square}',\n  '⧄': '\\\\cancel{\\\\square}',\n  '⧃': '\\\\odot',\n  '⧂': '\\\\odot',\n  '⦿': '\\\\odot',\n  '⦾': '\\\\odot',\n  '⦽': '\\\\varnothing',\n  '⦼': '\\\\oplus',\n  '⦻': '\\\\otimes',\n  '⦺': '',\n  '⦹': '\\\\varnothing',\n  '⦸': '\\\\varnothing',\n  '⦷': '\\\\ominus',\n  '⦶': '\\\\ominus',\n  '⦵': '\\\\ominus',\n  '⦴': '\\\\vec{\\\\varnothing}',\n  '⦳': '\\\\vec{\\\\varnothing}',\n  '⦲': '\\\\dot{\\\\varnothing}',\n  '⦱': '\\\\overline{\\\\varnothing}',\n  '⦰': '\\\\varnothing',\n  '⦯': '\\\\measuredangle',\n  '⦮': '\\\\measuredangle',\n  '⦭': '\\\\measuredangle',\n  '⦬': '\\\\measuredangle',\n  '⦫': '\\\\measuredangle',\n  '⦪': '\\\\measuredangle',\n  '⦩': '\\\\measuredangle',\n  '⦨': '\\\\measuredangle',\n  '⦧': '',\n  '⦦': '',\n  '⦥': '',\n  '⦤': '',\n  '⦣': '\\\\ulcorner',\n  '⦢': '\\\\measuredangle',\n  '⦡': '\\\\not\\\\lor',\n  '⦠': '\\\\bcancel{>}',\n  '⦂': ':',\n  '⦁': '\\\\cdot',\n  '❘': '\\\\mid',\n  '▲': '\\\\bigtriangleup',\n  '⋿': '\\\\Epsilon',\n  '⋾': '\\\\overline{\\\\ni}',\n  '⋽': '\\\\overline{\\\\ni}',\n  '⋼': '\\\\in',\n  '⋻': '\\\\in',\n  '⋺': '\\\\in',\n  '⋹': '\\\\underline{\\\\in}',\n  '⋸': '\\\\underline{\\\\in}',\n  '⋷': '\\\\overline{\\\\in}',\n  '⋶': '\\\\overline{\\\\in}',\n  '⋵': '\\\\dot{\\\\in}',\n  '⋴': '\\\\in',\n  '⋳': '\\\\in',\n  '⋲': '\\\\in',\n  '⋰': '\\\\ddots',\n  '։': ':',\n  '⋩': '\\\\underset{\\\\sim}{\\\\succ}',\n  '⋨': '\\\\underset{\\\\sim}{\\\\prec}',\n  '⋧': '\\\\underset{\\\\not\\\\sim}{>}',\n  '⋦': '\\\\underset{\\\\not\\\\sim}{<}',\n  '⋥': '\\\\not\\\\sqsupseteq',\n  '⋤': '\\\\not\\\\sqsubseteq',\n  '⋣': '\\\\not\\\\sqsupseteq',\n  '⋢': '\\\\not\\\\sqsubseteq',\n  '⋡': '\\\\nsucc',\n  '⋠': '\\\\nprec',\n  '⋟': '\\\\succ',\n  '⋞': '\\\\prec',\n  '⋝': '\\\\overline{>}',\n  '⋜': '\\\\overline{<}',\n  '⋛': '\\\\underset{>}{\\\\leq}',\n  '⋚': '\\\\underset{<}{\\\\geq}',\n  '⋕': '\\\\#',\n  '⋓': '\\\\cup',\n  '⋒': '\\\\cap',\n  '⋑': '\\\\supset',\n  '⋐': '\\\\subset',\n  '⋏': '\\\\wedge',\n  '⋎': '\\\\vee',\n  '⋍': '\\\\simeq',\n  '⋈': '\\\\Join',\n  '⋇': '\\\\ast',\n  '⋆': '\\\\star',\n  '⋄': '\\\\diamond',\n  '⊿': '\\\\triangle',\n  '⊾': '\\\\measuredangle',\n  '⊽': '\\\\overline{\\\\lor}',\n  '⊼': '\\\\overline{\\\\land}',\n  '⊻': '\\\\underline{\\\\lor}',\n  '⊺': '\\\\top',\n  土: '\\\\pm',\n  十: '+',\n  '⊹': '',\n  '⊷': '\\\\circ\\\\multimap',\n  '⊶': '\\\\circ\\\\multimap',\n  '⊳': '\\\\triangleright',\n  '⊲': '\\\\triangleleft',\n  '⊱': '\\\\succ',\n  '⊰': '\\\\prec',\n  '⊫': '|\\\\models',\n  '⊪': '|\\\\models',\n  '⊧': '\\\\models',\n  '⊦': '\\\\vdash',\n  '⊝': '\\\\ominus',\n  '⊜': '\\\\ominus',\n  '⊛': '\\\\odot',\n  '⊚': '\\\\odot',\n  '⊔': '\\\\sqcup',\n  '⊓': '\\\\sqcap',\n  '⊒': '\\\\sqsupseteq',\n  '⊑': '\\\\sqsubseteq',\n  '⊐̸': '\\\\not\\\\sqsupset',\n  '⊐': '\\\\sqsupset',\n  '⊏̸': '\\\\not\\\\sqsubset',\n  '⊏': '\\\\sqsubset',\n  '⊎': '\\\\cup',\n  '⊍': '\\\\cup',\n  '⊌': '\\\\cup',\n  '≿̸': '\\\\not\\\\succsim',\n  '≿': '\\\\succsim',\n  '≾': '\\\\precsim',\n  '≹': '\\\\not\\\\overset{>}{<}',\n  '≸': '\\\\not\\\\overset{>}{<}',\n  '≷': '\\\\overset{>}{<}',\n  '≶': '\\\\overset{<}{>}',\n  '≵': '\\\\not\\\\geg',\n  '≴': '\\\\not\\\\leq',\n  '≳': '\\\\geg',\n  '≲': '\\\\leq',\n  '≬': '',\n  '≧': '\\\\geg',\n  '≦̸': '\\\\not\\\\leq',\n  '≦': '\\\\leq',\n  '≣': '\\\\overset{=}{=} ',\n  '≞': '\\\\overset{m}{=} ',\n  '≝': '\\\\overset{def}{=}',\n  '≘': '=',\n  '≖': '=',\n  '≕': '=:',\n  '≓': '\\\\doteq',\n  '≒': '\\\\doteq',\n  '≑': '\\\\doteq',\n  '≐': '\\\\doteq',\n  '≏̸': '',\n  '≏': '',\n  '≎̸': '',\n  '≎': '',\n  '≌': '\\\\approx',\n  '≋': '\\\\approx',\n  '≊': '\\\\approx',\n  '≂̸': '\\\\neq',\n  '≂': '=',\n  '∿': '\\\\sim',\n  '∾': '\\\\infty',\n  '∽̱': '\\\\sim',\n  '∽': '\\\\sim',\n  '∻': '\\\\sim',\n  '∺': ':-:',\n  '∹': '-:',\n  '∸': '\\\\bot',\n  '∷': '::',\n  '∶': ':',\n  '∣': '\\\\mid',\n  '∟': '\\\\llcorner',\n  '∘': '\\\\circ',\n  '∗': '*',\n  '∕': '/',\n  '∎': '\\\\square',\n  '∍': '\\\\ni',\n  '∊': '\\\\in',\n  '∆': '\\\\Delta',\n  '⁄': '/',\n  '⪰̸': '\\\\nsucceq',\n  '⪰': '\\\\succeq',\n  '⪯̸': '\\\\npreceq',\n  '⪯': '\\\\preceq',\n  '⪈': '\\\\ngeqslant',\n  '⪇': '\\\\nleqslant',\n  '⧳': '\\\\Phi',\n  '⧦': '\\\\models',\n  '⧥': '\\\\not\\\\equiv',\n  '⧤': '\\\\approx\\\\neq',\n  '⧣': '\\\\neq',\n  '⧁': '\\\\circle',\n  '⧀': '\\\\circle',\n  '◦': '\\\\circle',\n  '◗': '\\\\circle',\n  '◖': '\\\\circle',\n  '●': '\\\\circle',\n  '◎': '\\\\circledcirc',\n  '◍': '\\\\circledcirc',\n  '◌': '\\\\circledcirc',\n  '◉': '\\\\circledcirc',\n  '◈': '\\\\diamond',\n  '◇': '\\\\diamond',\n  '◆': '\\\\diamond',\n  '◅': '\\\\triangleleft',\n  '◄': '\\\\triangleleft',\n  '◃': '\\\\triangleleft',\n  '◂': '\\\\triangleleft',\n  '◁': '\\\\triangleleft',\n  '◀': '\\\\triangleleft',\n  '▿': '\\\\triangledown',\n  '▾': '\\\\triangledown',\n  '▽': '\\\\triangledown',\n  '▼': '\\\\triangledown',\n  '▹': '\\\\triangleright',\n  '▸': '\\\\triangleright',\n  '▷': '\\\\triangleright',\n  '▶': '\\\\triangleright',\n  '▵': '\\\\triangle',\n  '▴': '\\\\triangle',\n  '△': '\\\\triangle',\n  '▱': '\\\\square',\n  '▰': '\\\\blacksquare',\n  '▯': '\\\\square',\n  '▮': '\\\\blacksquare',\n  '▭': '\\\\square',\n  '▫': '\\\\square',\n  '▪': '\\\\square',\n  '□': '\\\\square',\n  '■': '\\\\blacksquare',\n  '⋭': '\\\\not\\\\triangleright',\n  '⋬': '\\\\not\\\\triangleleft',\n  '⋫': '\\\\not\\\\triangleright',\n  '⋪': '\\\\not\\\\triangleleft',\n  '⋙': '\\\\ggg',\n  '⋘': '\\\\lll',\n  '⋗': '*>',\n  '⋖': '<*',\n  '⋔': '\\\\pitchfork',\n  '⋌': '',\n  '⋋': '\\\\bowtie',\n  '⋊': '\\\\ltimes',\n  '⋉': '\\\\rtimes',\n  '⊵': '\\\\triangleright',\n  '\\\\triangleleft': '',\n  '⊥': '\\\\bot',\n  '⊁': '\\\\nsucc',\n  '⊀': '\\\\preceq',\n  '≽': '\\\\succeq',\n  '≼': '\\\\preceq',\n  '≻': '\\\\succ',\n  '≺': '\\\\prec',\n  '≱': '\\\\geq/',\n  '≰': '\\\\leq/',\n  '≭': '\\\\neq',\n  '≫̸': '\\\\not\\\\gg',\n  '≫': '\\\\gg',\n  '≪̸': '\\\\not\\\\ll',\n  '≪': '\\\\ll',\n  '≩': '\\\\ngeqslant',\n  '≨': '\\\\nleqslant',\n  '≡': '\\\\equiv',\n  '≟': '\\\\doteq',\n  '≜': '\\\\triangleq',\n  '≛': '\\\\doteq',\n  '≚': '\\\\triangleq',\n  '≙': '\\\\triangleq',\n  '≗': '\\\\doteq',\n  '≔': ':=',\n  '≍': '\\\\asymp',\n  '≇': '\\\\ncong',\n  '≆': '\\\\ncong',\n  '≅': '\\\\cong',\n  '≄': '\\\\not\\\\simeq',\n  '≃': '\\\\simeq',\n  '≁': '\\\\not\\\\sim',\n  '∦': '\\\\not\\\\parallel',\n  '∥': '\\\\parallel',\n  '∤': '\\\\not|',\n  '∝': '\\\\propto',\n  '==': '==',\n  '=': '=',\n  ':=': ':=',\n  '/=': '=',\n  '-=': '-=',\n  '+=': '+=',\n  '*=': '*=',\n  '!=': '!=',\n  '≠': '\\\\neq',\n  '≢': '\\\\equiv /',\n  '≉': '\\\\approx /',\n  '∼': 'sim',\n  '≈': '\\\\approx',\n  '≮': '</',\n  '<': '<',\n  '≯': '>/',\n  '>=': '>=',\n  '>': '>',\n  '≥': '\\\\geq',\n  '≤': '\\\\leq',\n  '<=': '<=',\n  '⊋': '\\\\supsetneq',\n  '⊊': '\\\\subsetneq',\n  '⊉': '\\\\nsupseteq',\n  '⊈': '\\\\nsubseteq',\n  '⊇': '\\\\supseteq',\n  '⊆': '\\\\subseteq',\n  '⊅': '\\\\not\\\\supset',\n  '⊄': '\\\\not\\\\subset',\n  '⊃⃒': '\\\\supset |',\n  '⊃': '\\\\supset',\n  '⊂⃒': '\\\\subset |',\n  '⊂': '\\\\subset',\n  '∌': '\\\\not\\\\in',\n  '∉': '\\\\notin',\n  '∈': '\\\\in',\n  '∁': 'C',\n  '∄': '\\\\nexists',\n  '∃': '\\\\exists',\n  '∀': '\\\\forall',\n  '∧': '\\\\land',\n  '&&': '\\\\&\\\\&',\n  '∨': '\\\\lor',\n  '⊯': '\\\\cancel{\\\\vDash}',\n  '⊮': '\\\\cancel{\\\\Vdash}',\n  '⊭': '\\\\nvDash',\n  '⊬': '\\\\nvDash',\n  '⊩': '\\\\Vdash',\n  '⊨': '\\\\vDash',\n  '⊤': '\\\\top',\n  '⊣': '\\\\dashv',\n  '⊢': '\\\\vdash',\n  '∋': '\\\\ni',\n  '⋱': '\\\\ddots',\n  '⋯': '\\\\hdots',\n  '⋮': '\\\\vdots',\n  '϶': '\\\\ni',\n  ':': ':',\n  '...': '\\\\cdots',\n  '..': '..',\n  '->': '->',\n  '∵': '\\\\because',\n  '∴': '\\\\therefore ',\n  '⁣': '\\\\llbracket',\n  ',': ',',\n  ';': ';',\n  '⧽': '\\\\}',\n  '⧼': '\\\\{',\n  '⦘': '\\\\]',\n  '⦗': '\\\\[',\n  '⦖': '\\\\ll',\n  '⦕': '\\\\gg',\n  '⦔': '\\\\gg',\n  '⦓': '\\\\ll',\n  '⦒': '\\\\gg',\n  '⦑': '\\\\ll',\n  '⦐': '\\\\]',\n  '⦏': '\\\\]',\n  '⦎': '\\\\]',\n  '⦍': '\\\\[',\n  '⦌': '\\\\[',\n  '⦋': '\\\\]',\n  '⦊': '\\\\triangleright',\n  '⦉': '\\\\triangleleft',\n  '⦈': '|\\\\)',\n  '⦇': '\\\\(|',\n  '⦆': '|\\\\)',\n  '⦅': '\\\\(\\\\(',\n  '⦄': '|\\\\}',\n  '⦃': '\\\\{|',\n  '⦀': '\\\\||',\n  '⟯': '\\\\left. \\\\right]',\n  '⟮': '\\\\left[ \\\\right.',\n  '⟭': '\\\\left. \\\\right]]',\n  '⟬': '\\\\left[[ \\\\right.',\n  '⟫': '\\\\gg',\n  '⟪': '\\\\ll',\n  '⟧': '\\\\)|',\n  '⟦': '\\\\(|',\n  '❳': '\\\\left.\\\\right)',\n  '❲': '\\\\left(\\\\right.',\n  '〉': '\\\\rangle',\n  '〈': '\\\\langle',\n  '⌋': '\\\\rfloor',\n  '⌊': '\\\\lfloor',\n  '⌉': '\\\\rceil',\n  '⌈': '\\\\lceil',\n  '‖': '\\\\parallel',\n  '}': '\\\\left.\\\\right}',\n  '{': '\\\\left{\\\\right.',\n  ']': '\\\\left]\\\\right.',\n  '[': '\\\\left[\\\\right.',\n  ')': '\\\\left.\\\\right)',\n  '(': '\\\\left(\\\\right.',\n  '”': '\\\\\"',\n  '“': '\\\\text{``}',\n  '’': \"'\",\n  '‘': '`',\n  α: '\\\\alpha',\n  β: '\\\\beta',\n  γ: '\\\\gamma',\n  Γ: '\\\\Gamma',\n  δ: '\\\\delta',\n  Δ: '\\\\Delta',\n  ϵ: '\\\\epsilon',\n  ζ: '\\\\zeta',\n  η: '\\\\eta',\n  θ: '\\\\theta',\n  Θ: '\\\\Theta',\n  ι: '\\\\iota',\n  κ: '\\\\kappa',\n  λ: '\\\\lambda',\n  ν: '\\\\nu',\n  ο: '\\\\omicron',\n  π: '\\\\pi',\n  Π: '\\\\Pi',\n  ρ: '\\\\rho',\n  σ: '\\\\sigma',\n  Σ: '\\\\Sigma',\n  τ: '\\\\tau',\n  υ: '\\\\upsilon',\n  Υ: '\\\\Upsilon',\n  ϕ: '\\\\phi',\n  Φ: '\\\\Phi',\n  χ: '\\\\chi',\n  ψ: '\\\\psi',\n  Ψ: '\\\\Psi',\n  ω: '\\\\omega',\n  Ω: '\\\\Omega',\n  Ω: '\\\\Omega',\n  '∅': '\\\\emptyset',\n  '⟲': '\\\\circlearrowleft',\n  '⟳': '\\\\circlearrowright',\n  '×': '\\\\times',\n  '½': '\\\\dfrac{1}{2}',\n  μ: '\\\\mu',\n  Ө: '\\\\theta',\n  '✓': '\\\\checkmark',\n  '⟩': '\\\\rangle',\n  '⟨': '\\\\langle',\n  '¼': '\\\\dfrac{1}{4}',\n  '…': '\\\\ldots',\n  ℏ: '\\\\hbar',\n  ℜ: '\\\\mathfrak{R}',\n  Ѳ: '\\\\theta',\n  Ø: '\\\\emptyset',\n  ϱ: '\\\\varrho',\n  ф: '\\\\phi',\n  ℇ: '\\\\varepsilon',\n  T: 'T',\n  '∙': '\\\\cdot',\n  Ρ: 'P',\n  '∞': '\\\\infty',\n  ᐁ: '\\\\nabla',\n  ƞ: '\\\\eta',\n  '⁺': '^{+}',\n  '⁻': '^{-}',\n  '⁼': '^{=}',\n  '⁽': '^{(}',\n  '⁾': '^{)}',\n  '〗': '\\\\)|',\n  '〖': '\\\\langle',\n  ';': ';',\n  '൦': '\\\\circ',\n  '┴': '\\\\perp',\n  '✕': '\\\\times',\n  '⎻': '-',\n  '»': '\\\\gg',\n  '⬆': '\\\\uparrow',\n  '⬇': '\\\\downarrow',\n  '⬅': '\\\\leftarrow',\n  '➡': '\\\\rightarrow',\n  '⎼': '-',\n  '⎜': '\\\\mid',\n  '⎥': '\\\\mid',\n  ħ: '\\\\hbar',\n  '⮕': '\\\\rightarrow',\n  '・': '\\\\cdot',\n  '¦': '\\\\mid',\n  '£': '\\\\pounds',\n  '¥': '\\\\yen',\n  '✗': '\\\\times',\n  '✔': '\\\\checkmark',\n  ⁿ: '^{n}',\n  '«': '\\\\ll',\n  เ: '\\\\prime',\n  '†': '\\\\dagger',\n  '│': '\\\\mid',\n  $: '\\\\$',\n  '#': '\\\\#',\n  '℃': '\\\\text{\\\\textdegree C}',\n  '℉': '\\\\text{\\\\textdegree F}',\n  '█': '\\\\blacksquare',\n  '℧': '\\\\mho',\n  ⅇ: '\\\\text{e}',\n  ɼ: 'r',\n  '‡': '\\\\ddagger',\n  ἱ: 'i',\n  ϒ: '\\\\Upsilon',\n  '𝛿': '\\\\delta',\n  '˳': '\\\\cdot',\n  ѳ: '\\\\theta',\n  '𝜙': '\\\\phi',\n  П: '\\\\prod',\n  о: 'o',\n  ђ: '\\\\hbar',\n  Ʌ: '\\\\Lambda',\n  '।': '\\\\mid',\n  '€': '\\\\euro',\n  ῡ: '\\\\bar{u}',\n  φ: '\\\\varphi',\n  ȼ: 'c',\n  '𝞮': '\\\\epsilon',\n  Χ: '\\\\mathsf{X}',\n  ₙ: '_{n}',\n};\n", "export const allMathSymbolsByChar: Record<string, string> = {\n  '&#xA0;': '\\\\textrm{ }',\n  '&#x2203;': '\\\\exists',\n  '&#x2200;': '\\\\forall',\n  '&#x21D4;': '\\\\iff',\n  '&#x21D2;': '=>',\n  '&#xAC;': '\\\\neg',\n  '&#x2124;': '\\\\mathbb{Z}',\n  '&#x211D;': '\\\\mathbb{R}',\n  '&#x211A;': '\\\\mathbb{Q}',\n  '&#x2115;': '\\\\mathbb{N}',\n  '&#x2102;': 'CC',\n  '&#x25A1;': '\\\\square',\n  '&#x22C4;': '\\\\diamond',\n  '&#x25B3;': '\\\\triangle',\n  '&#x2322;': '\\\\frown',\n  '&#x2220;': '\\\\angle',\n  '&#x22F1;': '\\\\ddots',\n  '&#x22EE;': '\\\\vdots',\n  '&#x2235;': '\\\\because',\n  '&#x2234;': '\\\\therefore',\n  '&#x2135;': '\\\\aleph',\n  '&#x2205;': '\\\\oslash',\n  '&#xB1;': '\\\\pm',\n  '&#x2207;': '\\\\nabla',\n  '&#x2202;': '\\\\partial',\n  '&#x222E;': '\\\\oint',\n  '&#x222B;': '\\\\int',\n  '&#x22C3;': '\\\\cup',\n  '&#x222A;': '\\\\cup',\n  '&#x22C2;': '\\\\cap',\n  '&#x2229;': '\\\\cap',\n  '&#x22C1;': '\\\\vee',\n  '&#x2228;': '\\\\vee',\n  '&#x22C0;': '\\\\wedge',\n  '&#x2227;': '\\\\wedge',\n  '&#x220F;': '\\\\prod',\n  '&#x2211;': '\\\\sum',\n  '&#x2299;': '\\\\bigodot',\n  '&#x2297;': '\\\\bigoplus',\n  '&#x2295;': 'o+',\n  '&#x2218;': '@',\n  '&#x22C8;': '\\\\bowtie',\n  '&#x22CA;': '\\\\rtimes',\n  '&#x22C9;': '\\\\ltimes',\n  '&#xF7;': '\\\\div',\n  '&#xD7;': '\\\\times',\n  '\\\\': '\\\\backslash',\n  '&#x22C6;': '\\\\star',\n  '&#x2217;': '\\\\star',\n  '&#x22C5;': '\\\\cdot',\n  '&#x3A9;': '\\\\Omega',\n  '&#x3C9;': '\\\\omega',\n  '&#x3A8;': '\\\\Psi',\n  '&#x3C8;': '\\\\psi',\n  '&#x3C7;': '\\\\chi',\n  '&#x3C6;': '\\\\varphi',\n  '&#x3A6;': '\\\\Phi',\n  '&#x3D5;': '\\\\phi',\n  '&#x3C5;': '\\\\upsilon',\n  '&#x3C4;': '\\\\tau',\n  '&#x3A3;': '\\\\Sigma',\n  '&#x3C3;': '\\\\sigma',\n  '&#x3C1;': '\\\\rho',\n  '&#x3A0;': '\\\\Pi',\n  '&#x3C0;': '\\\\pi',\n  '&#x39E;': '\\\\Xi',\n  '&#x3BE;': '\\\\xi',\n  '&#x3BD;': '\\\\nu',\n  '&#x3BC;': '\\\\mu',\n  '&#x39B;': '\\\\Lambda',\n  '&#x3BB;': '\\\\lambda',\n  '&#x3BA;': '\\\\kappa',\n  '&#x3B9;': '\\\\iota',\n  '&#x3D1;': '\\\\vartheta',\n  '&#x398;': '\\\\Theta',\n  '&#x3B8;': '\\\\theta',\n  '&#x3B7;': '\\\\eta',\n  '&#x3B6;': '\\\\zeta',\n  '&#x25B;': '\\\\varepsilon',\n  '&#x3B5;': '\\\\epsilon',\n  '&#x394;': '\\\\Delta',\n  '&#x3B4;': '\\\\delta',\n  '&#x393;': '\\\\Gamma',\n  '&#x3B3;': '\\\\gamma',\n  '&#x3B2;': '\\\\beta',\n  '&#x3B1;': '\\\\alpha',\n  '&#x221E;': '\\\\infty',\n  '\\u202c': '\\\\text{\\\\textdir TRT}',\n  '\\u200e': '\\\\text{\\\\textdir LTR}',\n};\n", "export const allMathSymbolsByGlyph: Record<string, string> = {\n  ' ': '\\\\textrm{ }',\n  '∃': '\\\\exists',\n  '∀': '\\\\forall',\n  '⇔': '\\\\iff',\n  '⇒': '\\\\Rightarrow',\n  '¬': '\\\\neg',\n  '□': '\\\\square',\n  '⋄': '\\\\diamond',\n  '△': '\\\\triangle',\n  '⌢': '\\\\frown',\n  '∠': '\\\\angle',\n  '⋱': '\\\\ddots',\n  '⋮': '\\\\vdots',\n  '∵': '\\\\because',\n  '∴': '\\\\therefore',\n  ℵ: '\\\\aleph',\n  '∅': '\\\\emptyset',\n  '±': '\\\\pm',\n  '∇': '\\\\nabla',\n  '∂': '\\\\partial',\n  '∮': '\\\\oint',\n  '∫': '\\\\int',\n  '⋃': '\\\\cup',\n  '∪': '\\\\cup',\n  '⋂': '\\\\cap',\n  '∩': '\\\\cap',\n  '⋁': '\\\\vee',\n  '∨': '\\\\vee',\n  '⋀': '\\\\wedge',\n  '∧': '\\\\wedge',\n  '∏': '\\\\prod',\n  '∑': '\\\\sum',\n  '⊙': '\\\\bigodot',\n  '⊗': '\\\\bigoplus',\n  '⊕': 'o+',\n  '∘': '@',\n  '⋈': '\\\\bowtie',\n  '⋊': '\\\\rtimes',\n  '⋉': '\\\\ltimes',\n  '÷': '\\\\div',\n  '×': '\\\\times',\n  '\\\\': '\\\\backslash',\n  '⋆': '\\\\star',\n  '∗': '\\\\star',\n  '⋅': '\\\\cdot',\n  Ω: '\\\\Omega',\n  ω: '\\\\omega',\n  Ψ: '\\\\Psi',\n  ψ: '\\\\psi',\n  χ: '\\\\chi',\n  φ: '\\\\varphi',\n  Φ: '\\\\Phi',\n  ϕ: '\\\\phi',\n  υ: '\\\\upsilon',\n  τ: '\\\\tau',\n  Σ: '\\\\Sigma',\n  σ: '\\\\sigma',\n  ρ: '\\\\rho',\n  Π: '\\\\Pi',\n  π: '\\\\pi',\n  Ξ: '\\\\Xi',\n  ξ: '\\\\xi',\n  ν: '\\\\nu',\n  μ: '\\\\mu',\n  Λ: '\\\\Lambda',\n  λ: '\\\\lambda',\n  κ: '\\\\kappa',\n  ι: '\\\\iota',\n  ϑ: '\\\\vartheta',\n  Θ: '\\\\Theta',\n  θ: '\\\\theta',\n  η: '\\\\eta',\n  ζ: '\\\\zeta',\n  ɛ: '\\\\varepsilon',\n  ε: '\\\\epsilon',\n  Δ: '\\\\Delta',\n  δ: '\\\\delta',\n  Γ: '\\\\Gamma',\n  γ: '\\\\gamma',\n  β: '\\\\beta',\n  α: '\\\\alpha',\n  '∞': '\\\\infty',\n  ϵ: '\\\\epsilon',\n  µ: '\\\\mu',\n  '²': '^{2}',\n  ı: '\\\\imath',\n  '∎': '\\\\blacksquare',\n  ม: '\\\\mathbf{m}',\n  Ω: '\\\\Omega',\n  '⟲': '\\\\circlearrowleft',\n  '⟳': '\\\\circlearrowright',\n  त: ' ',\n  '¥': '\\\\yen',\n  '⁽': '^{(}',\n  '⁾': '^{)}',\n  ß: '\\\\ss',\n  Ћ: '\\\\hbar',\n  '⦵': '\\\\ominus',\n  '⊿': '\\\\bigtriangleup',\n  \"↛'\": '\\\\nrightarrow',\n  '†': '\\\\dagger',\n  เ: '\\\\prime',\n  白: ' ',\n  '⿱': ' ',\n  ℸ: '\\\\wp',\n  퓰: ' ',\n  ⁿ: '^{n}',\n  '✔': '\\\\checkmark',\n  '✗': '\\\\times',\n  '½': '\\\\dfrac{1}{2}',\n  Ө: '\\\\theta',\n  '✓': '\\\\checkmark',\n  '⟩': '\\\\rangle',\n  '⟨': '\\\\langle',\n  '〈': '\\\\langle',\n  '¼': '\\\\dfrac{1}{4}',\n  '…': '\\\\ldots',\n  ℏ: '\\\\hbar',\n  ℜ: '\\\\mathfrak{R}',\n  Ѳ: '\\\\theta',\n  Ø: '\\\\emptyset',\n  ϱ: '\\\\varrho',\n  ф: '\\\\phi',\n  T: 'T',\n  '∙': '\\\\cdot',\n  Ρ: 'P',\n  ᐁ: '\\\\nabla',\n  ƞ: '\\\\eta',\n  ɣ: '\\\\gamma',\n  ћ: '\\\\hbar',\n  Ɛ: '\\\\varepsilon',\n  ⅅ: '\\\\_{D}',\n  𝜆: '\\\\lambda',\n  '〗': '\\\\rangle',\n  '〖': '\\\\langle',\n  ';': ';',\n  𝑥: 'x',\n  𝑦: 'y',\n  𝑧: 'z',\n  𝑖: 'i',\n  𝑗: 'j',\n  𝑘: 'k',\n  𝑚: 'm',\n  𝑒: 'e',\n  𝑟: 'r',\n  ɳ: '\\\\eta',\n  '𝛽': '\\\\beta',\n  '⍵': '\\\\omega',\n  '℘': '\\\\wp',\n  '𝜋': '\\\\pi',\n  Є: '\\\\epsilon',\n  є: '\\\\epsilon',\n  𝜀: '\\\\epsilon',\n  п: '\\\\pi',\n  Ν: '\\\\nu',\n  ɵ: '\\\\theta',\n  '𝜓': '\\\\psi',\n  ϴ: '\\\\theta',\n  ɸ: '\\\\phi',\n  Ӷ: '\\\\Gamma',\n  ɭ: '\\\\ell',\n  ʋ: '\\\\upsilon',\n  𝛟: '\\\\varphi',\n  '⍬': '\\\\theta',\n  Ф: '\\\\Phi',\n  '𝜑': '\\\\varphi',\n  ⅈ: 'i',\n  ο: 'o',\n  ơ: 'o',\n  ƒ: 'f',\n  '⍴': '\\\\rho',\n  '🇽': 'x',\n  '𝑝': 'p',\n  '𝑞': 'q',\n  '𝑠': 's',\n  '𝑡': 't',\n  '𝑢': 'u',\n  '𝑣': 'v',\n  '𝑤': 'w',\n  '𝑎': 'a',\n  '𝑏': 'b',\n  '𝑐': 'c',\n  '𝑑': 'd',\n  '𝑓': 'f',\n  '𝑔': 'g',\n  '𝑙': 'l',\n  '𝑛': 'n',\n  '𝑜': 'o',\n  '𝔀': 'w',\n  '𝚟': 'v',\n  ṁ: 'm',\n  '൦': '\\\\circ',\n  '┴': '\\\\perp',\n  '✕': '\\\\times',\n  '∣': '\\\\mid',\n  Փ: '\\\\Phi',\n  '⎜': '\\\\mid',\n  ħ: '\\\\hbar',\n  ፈ: ' ',\n  '⦨': '\\\\llbracket',\n  ế: '\\\\hat{e}',\n  '¢': '\\\\cent',\n  '⤹': '\\\\downarrow',\n  '⤸': '\\\\downarrow',\n  '⤷': '\\\\Rsh',\n  '⤶': '\\\\Lsh',\n  '⤵': '\\\\downarrow',\n  '⤴': '\\\\uparrow',\n  '⤳': '\\\\rightarrow',\n  '|': '\\\\mid',\n  '⎥': '\\\\mid',\n  '♥': '\\\\heartsuit',\n  О: '0',\n  Υ: 'Y',\n  х: 'x',\n  𝓏: 'z',\n  𝓎: 'y',\n  𝓍: 'x',\n  р: 'p',\n  а: 'a',\n  '£': '\\\\pounds',\n  m: 'm',\n  '𝚵': '\\\\Xi',\n  '⓪': '\\\\textcircled{0}',\n  '①': '\\\\textcircled{1}',\n  '②': '\\\\textcircled{2}',\n  '③': '\\\\textcircled{3}',\n  '④': '\\\\textcircled{4}',\n  '⑤': '\\\\textcircled{5}',\n  '⑥': '\\\\textcircled{6}',\n  '⑦': '\\\\textcircled{7}',\n  '⑧': '\\\\textcircled{8}',\n  '⑨': '\\\\textcircled{9}',\n  '⑩': '\\\\textcircled{10}',\n  '⑪': '\\\\textcircled{11}',\n  '⑫': '\\\\textcircled{12}',\n  '⑬': '\\\\textcircled{13}',\n  '⑭': '\\\\textcircled{14}',\n  '⑮': '\\\\textcircled{15}',\n  '⑯': '\\\\textcircled{16}',\n  '⑰': '\\\\textcircled{17}',\n  '⑱': '\\\\textcircled{18}',\n  '⑲': '\\\\textcircled{19}',\n  '⑳': '\\\\textcircled{20}',\n  '㉑': '\\\\textcircled{21}',\n  '㉒': '\\\\textcircled{22}',\n  '㉓': '\\\\textcircled{23}',\n  '㉔': '\\\\textcircled{24}',\n  '㉕': '\\\\textcircled{25}',\n  '㉖': '\\\\textcircled{26}',\n  '㉗': '\\\\textcircled{27}',\n  '㉘': '\\\\textcircled{28}',\n  '㉙': '\\\\textcircled{29}',\n  '㉚': '\\\\textcircled{30}',\n  '㉛': '\\\\textcircled{31}',\n  '㉜': '\\\\textcircled{32}',\n  '㉝': '\\\\textcircled{33}',\n  '㉞': '\\\\textcircled{34}',\n  '㉟': '\\\\textcircled{35}',\n  '㊱': '\\\\textcircled{36}',\n  '㊲': '\\\\textcircled{37}',\n  '㊳': '\\\\textcircled{38}',\n  '㊴': '\\\\textcircled{39}',\n  '㊵': '\\\\textcircled{40}',\n  '㊶': '\\\\textcircled{41}',\n  '㊷': '\\\\textcircled{42}',\n  '㊸': '\\\\textcircled{43}',\n  '㊹': '\\\\textcircled{44}',\n  '㊺': '\\\\textcircled{45}',\n  '㊻': '\\\\textcircled{46}',\n  '㊼': '\\\\textcircled{47}',\n  '㊽': '\\\\textcircled{48}',\n  '㊾': '\\\\textcircled{49}',\n  '㊿': '\\\\textcircled{50}',\n  '&': '\\\\&',\n  '‖': '\\\\parallel',\n  '%': '\\\\%',\n  '“': '\\\\text{``}',\n  $: '\\\\$',\n  '#': '\\\\#',\n  '℃': '\\\\text{\\\\textdegree C}',\n  '℉': '\\\\text{\\\\textdegree F}',\n  '█': '\\\\blacksquare',\n  '℧': '\\\\mho',\n  '⌋': '\\\\rfloor',\n  '⌊': '\\\\lfloor',\n  '⌉': '\\\\rceil',\n  '⌈': '\\\\lceil',\n  ℇ: '\\\\varepsilon',\n  ⅇ: '\\\\text{e}',\n  ɼ: 'r',\n  '↛': '\\\\nrightarrow',\n  ˆ: '\\\\hat{}',\n  '‾': '\\\\overline',\n  '→': '\\\\rightarrow',\n  '‡': '\\\\ddagger',\n  '・': '\\\\cdot',\n  '▱': '\\\\square',\n  '∆': '\\\\Delta',\n  ἱ: 'i',\n  '∡': '\\\\angle',\n  ϒ: '\\\\Upsilon',\n  '↓': '\\\\downarrow',\n  '↑': '\\\\uparrow',\n  '»': '\\\\gg',\n  '⊤': '\\\\top',\n  '⧸': '/',\n  '𝛿': '\\\\delta',\n  '˳': '\\\\cdot',\n  '։': ':',\n  '⦪': '\\\\measuredangle',\n  '⦩': '\\\\measuredangle',\n  '⦫': '\\\\measuredangle',\n  '⦁': '\\\\cdot',\n  ѳ: '\\\\theta',\n  '⦢': '\\\\measuredangle',\n  '¸': ',',\n  '⎻': '\\\\overline',\n  '⟦': '\\\\llbracket',\n  '𝜙': '\\\\phi',\n  П: '\\\\prod',\n  о: 'o',\n  '≈': '\\\\approx',\n  '≤': '\\\\leq',\n  ђ: '\\\\hbar',\n  Ʌ: '\\\\Lambda',\n  土: '\\\\pm',\n  '⎼': '-',\n  十: '+',\n  '≠': '\\\\neq',\n  '←': '\\\\leftarrow',\n  '।': '\\\\mid',\n  '€': '\\\\euro',\n  '˘': ' ',\n  ῡ: '\\\\bar{u}',\n  '∥': '\\\\parallel',\n  '↔': '\\\\leftrightarrow',\n  '√': '\\\\sqrt{}',\n  ȼ: 'c',\n  '𝞮': '\\\\epsilon',\n  '·': '\\\\cdot',\n  '⦬': '\\\\measuredangle',\n  '⦮': '\\\\measuredangle',\n  '⦭': '\\\\measuredangle',\n  '«': '\\\\ll',\n  Χ: '\\\\mathsf{X}',\n  '│': '\\\\mid',\n  '〉': '\\\\rangle',\n  ₙ: '_{n}',\n  '▫': '\\\\square',\n  '●': '\\\\circle',\n  '”': '\\\\\"',\n};\n", "export * from './all-math-operators-by-char';\nexport * from './all-math-operators-by-glyph';\nexport * from './all-math-symbols-by-char';\nexport * from './all-math-symbols-by-glyph';\nexport * from './latex-accents';\nexport * from './math-numbers-by-glyph';\nexport * from './utf8-converter';\n", "export const latexAccents = ['\\\\hat', '\\\\bar', '\\\\underbrace', '\\\\overbrace'];\n", "export const mathNumberByGlyph: Record<string, string> = {\n  '₀': '_{0}',\n  '₁': '_{1}',\n  '₂': '_{2}',\n  '₃': '_{3}',\n  '₄': '_{4}',\n  '₅': '_{5}',\n  '₆': '_{6}',\n  '₇': '_{7}',\n  '₈': '_{8}',\n  '₉': '_{9}',\n  '⁰': '^{0}',\n  '¹': '^{1}',\n  '²': '^{2}',\n  '³': '^{3}',\n  '⁴': '^{4}',\n  '⁵': '^{5}',\n  '⁶': '^{6}',\n  '⁷': '^{7}',\n  '⁸': '^{8}',\n  '⁹': '^{9}',\n  ⁿ: '^{n}',\n  ₙ: '_{n}',\n  '⓪': '\\\\textcircled{0}',\n  '①': '\\\\textcircled{1}',\n  '②': '\\\\textcircled{2}',\n  '③': '\\\\textcircled{3}',\n  '④': '\\\\textcircled{4}',\n  '⑤': '\\\\textcircled{5}',\n  '⑥': '\\\\textcircled{6}',\n  '⑦': '\\\\textcircled{7}',\n  '⑧': '\\\\textcircled{8}',\n  '⑨': '\\\\textcircled{9}',\n  '⑩': '\\\\textcircled{10}',\n  '⑪': '\\\\textcircled{11}',\n  '⑫': '\\\\textcircled{12}',\n  '⑬': '\\\\textcircled{13}',\n  '⑭': '\\\\textcircled{14}',\n  '⑮': '\\\\textcircled{15}',\n  '⑯': '\\\\textcircled{16}',\n  '⑰': '\\\\textcircled{17}',\n  '⑱': '\\\\textcircled{18}',\n  '⑲': '\\\\textcircled{19}',\n  '⑳': '\\\\textcircled{20}',\n  '㉑': '\\\\textcircled{21}',\n  '㉒': '\\\\textcircled{22}',\n  '㉓': '\\\\textcircled{23}',\n  '㉔': '\\\\textcircled{24}',\n  '㉕': '\\\\textcircled{25}',\n  '㉖': '\\\\textcircled{26}',\n  '㉗': '\\\\textcircled{27}',\n  '㉘': '\\\\textcircled{28}',\n  '㉙': '\\\\textcircled{29}',\n  '㉚': '\\\\textcircled{30}',\n  '㉛': '\\\\textcircled{31}',\n  '㉜': '\\\\textcircled{32}',\n  '㉝': '\\\\textcircled{33}',\n  '㉞': '\\\\textcircled{34}',\n  '㉟': '\\\\textcircled{35}',\n  '㊱': '\\\\textcircled{36}',\n  '㊲': '\\\\textcircled{37}',\n  '㊳': '\\\\textcircled{38}',\n  '㊴': '\\\\textcircled{39}',\n  '㊵': '\\\\textcircled{40}',\n  '㊶': '\\\\textcircled{41}',\n  '㊷': '\\\\textcircled{42}',\n  '㊸': '\\\\textcircled{43}',\n  '㊹': '\\\\textcircled{44}',\n  '㊺': '\\\\textcircled{45}',\n  '㊻': '\\\\textcircled{46}',\n  '㊼': '\\\\textcircled{47}',\n  '㊽': '\\\\textcircled{48}',\n  '㊾': '\\\\textcircled{49}',\n  '㊿': '\\\\textcircled{50}',\n  '½': '\\\\dfrac{1}{2}',\n  '⅓': '\\\\dfrac{1}{3}',\n  '⅔': '\\\\dfrac{2}{3}',\n  '¼': '\\\\dfrac{1}{4}',\n  '¾': '\\\\dfrac{3}{4}',\n  '⅕': '\\\\dfrac{1}{5}',\n  '⅖': '\\\\dfrac{2}{5}',\n  '⅗': '\\\\dfrac{3}{5}',\n  '⅘': '\\\\dfrac{4}{5}',\n  '⅙': '\\\\dfrac{1}{6}',\n  '⅚': '\\\\dfrac{5}{6}',\n  '⅐': '\\\\dfrac{1}{7}',\n  '⅛': '\\\\dfrac{1}{8}',\n  '⅜': '\\\\dfrac{3}{8}',\n  '⅝': '\\\\dfrac{5}{8}',\n  '⅞': '\\\\dfrac{7}{8}',\n  '⅑': '\\\\dfrac{1}{9}',\n  '⅒': '\\\\dfrac{1}{10}',\n};\n", "export interface UTF8ToLtXConverter {\n  convert(char: string): string;\n}\n\n/**\n * This class is used to convert some accents and special characters from utf-8 to latex math commands\n */\nexport class HashUTF8ToLtXConverter implements UTF8ToLtXConverter {\n  public convert(char: string): string {\n    const isAlphanumeric = char.match(/[a-z0-9]/i);\n    if (isAlphanumeric) {\n      return char;\n    }\n\n    const accentChar = vowelsWithAccents[char];\n    if (accentChar) {\n      const lxtCmd = this.convertAccentCharToLtX(accentChar);\n      if (lxtCmd) {\n        return lxtCmd;\n      }\n\n      return char;\n    }\n\n    const specialChar = this.convertSpecialCharToLtX(char);\n    if (specialChar) {\n      return specialChar;\n    }\n\n    return char;\n  }\n\n  private convertAccentCharToLtX(char: AccentChar): string | null {\n    const { char: vowel, accent } = char;\n    const cmd = accentToLTXCmd[accent];\n    if (!cmd) {\n      return null;\n    }\n\n    return `\\\\${cmd}{${vowel}}`;\n  }\n\n  private convertSpecialCharToLtX(char: string): string | null {\n    const specialFontChar = specialFontChars[char];\n    if (!specialFontChar) {\n      return null;\n    }\n\n    const { letter, fontCmd } = specialFontChar;\n    return `\\\\${fontCmd}{${letter}}`;\n  }\n}\n\ntype AccentChar = {\n  char: Char;\n  accent: Accent;\n};\n\ntype Char =\n  | 'a'\n  | 'e'\n  | 'i'\n  | 'o'\n  | 'u'\n  | 'y'\n  | 'A'\n  | 'E'\n  | 'I'\n  | 'O'\n  | 'U'\n  | 'Y'\n  | 'n'\n  | 'N'\n  | 'c'\n  | 'C'\n  | 'v'\n  | 'V'\n  | 'j'\n  | 'J'\n  | 'z'\n  | 'Z';\ntype Accent = '´' | '`' | '^' | '~' | '¨' | 'ˆ' | '˚' | '˙' | '˘' | '˝' | 'ˇ' | 'ˆ' | '˜' | '-';\ntype LTXAccentCMD =\n  | 'acute'\n  | 'grave'\n  | 'hat'\n  | 'tilde'\n  | 'ddot'\n  | 'breve'\n  | 'check'\n  | 'dot'\n  | 'mathring'\n  | 'bar'\n  | 'vec'\n  | 'H';\n\nconst vowelsWithAccents: Record<string, AccentChar> = {\n  á: { char: 'a', accent: '´' },\n  à: { char: 'a', accent: '`' },\n  â: { char: 'a', accent: '^' },\n  ã: { char: 'a', accent: '~' },\n  ä: { char: 'a', accent: '¨' },\n  å: { char: 'a', accent: '˚' },\n  ą: { char: 'a', accent: '˙' },\n  ă: { char: 'a', accent: '˘' },\n  ǎ: { char: 'a', accent: 'ˇ' },\n  ǟ: { char: 'a', accent: 'ˆ' },\n  ǻ: { char: 'a', accent: '˙' },\n  ǡ: { char: 'a', accent: '-' },\n  ā: { char: 'a', accent: '-' },\n  é: { char: 'e', accent: '´' },\n  è: { char: 'e', accent: '`' },\n  ê: { char: 'e', accent: '^' },\n  ë: { char: 'e', accent: '¨' },\n  ę: { char: 'e', accent: '˙' },\n  ě: { char: 'e', accent: 'ˇ' },\n  ȇ: { char: 'i', accent: '^' },\n  ё: { char: 'e', accent: '¨' },\n  ē: { char: 'e', accent: '-' },\n  í: { char: 'i', accent: '´' },\n  ì: { char: 'i', accent: '`' },\n  î: { char: 'i', accent: '^' },\n  ï: { char: 'i', accent: '¨' },\n  į: { char: 'i', accent: '˙' },\n  ǐ: { char: 'i', accent: 'ˇ' },\n  ȉ: { char: 'i', accent: '`' },\n  ȋ: { char: 'i', accent: '¨' },\n  ī: { char: 'i', accent: '-' },\n  ó: { char: 'o', accent: '´' },\n  ò: { char: 'o', accent: '`' },\n  ô: { char: 'o', accent: '^' },\n  õ: { char: 'o', accent: '~' },\n  ö: { char: 'o', accent: '¨' },\n  ő: { char: 'o', accent: '˝' },\n  ǒ: { char: 'o', accent: 'ˇ' },\n  ȍ: { char: 'o', accent: '`' },\n  ȏ: { char: 'o', accent: '¨' },\n  ȫ: { char: 'o', accent: '˘' },\n  ȭ: { char: 'o', accent: '˝' },\n  ȯ: { char: 'o', accent: '˙' },\n  ō: { char: 'o', accent: '-' },\n  ú: { char: 'u', accent: '´' },\n  ù: { char: 'u', accent: '`' },\n  û: { char: 'u', accent: '^' },\n  ü: { char: 'u', accent: '¨' },\n  ű: { char: 'u', accent: '˝' },\n  ǔ: { char: 'u', accent: 'ˇ' },\n  ǖ: { char: 'u', accent: '¨' },\n  ǘ: { char: 'u', accent: '¨' },\n  ǚ: { char: 'u', accent: '¨' },\n  ǜ: { char: 'u', accent: '¨' },\n  ȕ: { char: 'u', accent: '`' },\n  ȗ: { char: 'u', accent: '¨' },\n  ū: { char: 'u', accent: '-' },\n  ý: { char: 'y', accent: '´' },\n  ỳ: { char: 'y', accent: '`' },\n  ŷ: { char: 'y', accent: '^' },\n  ÿ: { char: 'y', accent: '¨' },\n  ȳ: { char: 'y', accent: '-' },\n  Á: { char: 'A', accent: '´' },\n  À: { char: 'A', accent: '`' },\n  Â: { char: 'A', accent: '^' },\n  Ã: { char: 'A', accent: '~' },\n  Ä: { char: 'A', accent: '¨' },\n  Å: { char: 'A', accent: '˚' },\n  Å: { char: 'A', accent: '˚' },\n  Ȧ: { char: 'A', accent: '˙' },\n  Ă: { char: 'A', accent: '˘' },\n  Ǎ: { char: 'A', accent: 'ˇ' },\n  Ǟ: { char: 'A', accent: '˝' },\n  Ǻ: { char: 'A', accent: '˚' },\n  Ǡ: { char: 'A', accent: '-' },\n  Ā: { char: 'A', accent: '-' },\n  É: { char: 'E', accent: '´' },\n  È: { char: 'E', accent: '`' },\n  Ė: { char: 'E', accent: '˙' },\n  Ê: { char: 'E', accent: '^' },\n  Ë: { char: 'E', accent: '¨' },\n  Ě: { char: 'E', accent: 'ˇ' },\n  Ȅ: { char: 'E', accent: '`' },\n  Ȇ: { char: 'E', accent: '¨' },\n  Ē: { char: 'E', accent: '-' },\n  Í: { char: 'I', accent: '´' },\n  Ì: { char: 'I', accent: '`' },\n  Î: { char: 'I', accent: '^' },\n  Ï: { char: 'I', accent: '¨' },\n  Ĭ: { char: 'I', accent: '˘' },\n  Ǐ: { char: 'I', accent: 'ˇ' },\n  Ȉ: { char: 'I', accent: '`' },\n  Ȋ: { char: 'I', accent: '¨' },\n  Ī: { char: 'I', accent: '-' },\n  Ó: { char: 'O', accent: '´' },\n  Ò: { char: 'O', accent: '`' },\n  Ô: { char: 'O', accent: '^' },\n  Õ: { char: 'O', accent: '~' },\n  Ö: { char: 'O', accent: '¨' },\n  Ő: { char: 'O', accent: '˝' },\n  Ǒ: { char: 'O', accent: 'ˇ' },\n  Ȍ: { char: 'O', accent: '`' },\n  Ȏ: { char: 'O', accent: '¨' },\n  Ȫ: { char: 'O', accent: '˘' },\n  Ȭ: { char: 'O', accent: '˝' },\n  Ȯ: { char: 'O', accent: '˙' },\n  Ō: { char: 'O', accent: '-' },\n  Ú: { char: 'U', accent: '´' },\n  Ù: { char: 'U', accent: '`' },\n  Û: { char: 'U', accent: '^' },\n  Ü: { char: 'U', accent: '¨' },\n  Ű: { char: 'U', accent: '˝' },\n  Ǔ: { char: 'U', accent: 'ˇ' },\n  Ǖ: { char: 'U', accent: '¨' },\n  Ȕ: { char: 'U', accent: '`' },\n  Ȗ: { char: 'U', accent: '¨' },\n  Ū: { char: 'U', accent: '-' },\n  Ý: { char: 'Y', accent: '´' },\n  Ỳ: { char: 'Y', accent: '`' },\n  Ŷ: { char: 'Y', accent: '^' },\n  Ÿ: { char: 'Y', accent: '¨' },\n  Ȳ: { char: 'Y', accent: '-' },\n  ñ: { char: 'n', accent: '~' },\n  Ñ: { char: 'N', accent: '~' },\n  ç: { char: 'c', accent: '˙' },\n  Ç: { char: 'C', accent: '˙' },\n  ṽ: { char: 'v', accent: '~' },\n  Ṽ: { char: 'V', accent: '~' },\n  ĵ: { char: 'j', accent: '^' },\n  Ĵ: { char: 'J', accent: '^' },\n  ź: { char: 'z', accent: '´' },\n  Ź: { char: 'Z', accent: '´' },\n  Ż: { char: 'Z', accent: '^' },\n  ż: { char: 'z', accent: '^' },\n  Ž: { char: 'Z', accent: 'ˇ' },\n  ž: { char: 'z', accent: 'ˇ' },\n  ẑ: { char: 'z', accent: 'ˆ' },\n};\n\nconst accentToLTXCmd: Record<Accent, LTXAccentCMD> = {\n  '´': 'acute',\n  '`': 'grave',\n  '^': 'hat',\n  '~': 'tilde',\n  '¨': 'ddot',\n  '˚': 'mathring',\n  '˘': 'breve',\n  ˇ: 'check',\n  '˝': 'H',\n  '˙': 'dot',\n  '-': 'bar',\n  ˆ: 'hat',\n  '˜': 'tilde',\n};\n\ntype LTXFontCmds = 'mathbf' | 'mathit' | 'mathbb' | 'mathcal' | 'mathfrak' | 'mathsf' | 'mathtt';\ntype UppercaseLetter =\n  | 'A'\n  | 'B'\n  | 'C'\n  | 'D'\n  | 'E'\n  | 'F'\n  | 'G'\n  | 'H'\n  | 'I'\n  | 'J'\n  | 'K'\n  | 'L'\n  | 'M'\n  | 'N'\n  | 'O'\n  | 'P'\n  | 'Q'\n  | 'R'\n  | 'S'\n  | 'T'\n  | 'U'\n  | 'V'\n  | 'W'\n  | 'X'\n  | 'Y'\n  | 'Z'\n  | '\\\\Beta'\n  | '\\\\Gamma'\n  | '\\\\Delta'\n  | '\\\\Theta'\n  | '\\\\Lambda'\n  | '\\\\Xi'\n  | '\\\\Pi'\n  | '\\\\Sigma'\n  | '\\\\Upsilon'\n  | '\\\\Phi'\n  | '\\\\Psi'\n  | '\\\\Omega'\n  | '0'\n  | '1'\n  | '2'\n  | '3'\n  | '4'\n  | '5'\n  | '6'\n  | '7'\n  | '8'\n  | '9';\ntype SpecialFontChar = {\n  letter: UppercaseLetter;\n  fontCmd: LTXFontCmds;\n};\n\nconst specialFontChars: Record<string, SpecialFontChar> = {\n  // letter A mathbf\n  𝐀: { letter: 'A', fontCmd: 'mathbf' },\n  𝐁: { letter: 'B', fontCmd: 'mathbf' },\n  𝐂: { letter: 'C', fontCmd: 'mathbf' },\n  𝐃: { letter: 'D', fontCmd: 'mathbf' },\n  𝐄: { letter: 'E', fontCmd: 'mathbf' },\n  Ε: { letter: 'E', fontCmd: 'mathbf' },\n  𝐅: { letter: 'F', fontCmd: 'mathbf' },\n  𝐆: { letter: 'G', fontCmd: 'mathbf' },\n  𝐇: { letter: 'H', fontCmd: 'mathbf' },\n  𝐈: { letter: 'I', fontCmd: 'mathbf' },\n  𝐉: { letter: 'J', fontCmd: 'mathbf' },\n  𝐊: { letter: 'K', fontCmd: 'mathbf' },\n  𝐋: { letter: 'L', fontCmd: 'mathbf' },\n  𝐌: { letter: 'M', fontCmd: 'mathbf' },\n  𝐍: { letter: 'N', fontCmd: 'mathbf' },\n  𝐎: { letter: 'O', fontCmd: 'mathbf' },\n  𝐏: { letter: 'P', fontCmd: 'mathbf' },\n  𝐐: { letter: 'Q', fontCmd: 'mathbf' },\n  𝐑: { letter: 'R', fontCmd: 'mathbf' },\n  𝐒: { letter: 'S', fontCmd: 'mathbf' },\n  𝐓: { letter: 'T', fontCmd: 'mathbf' },\n  𝐔: { letter: 'U', fontCmd: 'mathbf' },\n  𝐕: { letter: 'V', fontCmd: 'mathbf' },\n  𝐖: { letter: 'W', fontCmd: 'mathbf' },\n  𝐗: { letter: 'X', fontCmd: 'mathbf' },\n  𝞆: { letter: 'X', fontCmd: 'mathbf' },\n  𝐘: { letter: 'Y', fontCmd: 'mathbf' },\n  𝐙: { letter: 'Z', fontCmd: 'mathbf' },\n  '𝟎': { letter: '0', fontCmd: 'mathbf' },\n  '𝟏': { letter: '1', fontCmd: 'mathbf' },\n  '𝟐': { letter: '2', fontCmd: 'mathbf' },\n  '𝟑': { letter: '3', fontCmd: 'mathbf' },\n  '𝟒': { letter: '4', fontCmd: 'mathbf' },\n  '𝟓': { letter: '5', fontCmd: 'mathbf' },\n  '𝟔': { letter: '6', fontCmd: 'mathbf' },\n  '𝟕': { letter: '7', fontCmd: 'mathbf' },\n  '𝟖': { letter: '8', fontCmd: 'mathbf' },\n  '𝟗': { letter: '9', fontCmd: 'mathbf' },\n  // letter A mathit\n  𝐴: { letter: 'A', fontCmd: 'mathit' },\n  𝐵: { letter: 'B', fontCmd: 'mathit' },\n  𝐶: { letter: 'C', fontCmd: 'mathit' },\n  𝐷: { letter: 'D', fontCmd: 'mathit' },\n  𝐸: { letter: 'E', fontCmd: 'mathit' },\n  𝐹: { letter: 'F', fontCmd: 'mathit' },\n  𝐺: { letter: 'G', fontCmd: 'mathit' },\n  𝐻: { letter: 'H', fontCmd: 'mathit' },\n  𝐼: { letter: 'I', fontCmd: 'mathit' },\n  Ι: { letter: 'I', fontCmd: 'mathit' },\n  𝐽: { letter: 'J', fontCmd: 'mathit' },\n  𝐾: { letter: 'K', fontCmd: 'mathit' },\n  𝐿: { letter: 'L', fontCmd: 'mathit' },\n  𝑀: { letter: 'M', fontCmd: 'mathit' },\n  𝑁: { letter: 'N', fontCmd: 'mathit' },\n  𝑂: { letter: 'O', fontCmd: 'mathit' },\n  𝑃: { letter: 'P', fontCmd: 'mathit' },\n  𝑄: { letter: 'Q', fontCmd: 'mathit' },\n  𝑅: { letter: 'R', fontCmd: 'mathit' },\n  𝑆: { letter: 'S', fontCmd: 'mathit' },\n  𝑇: { letter: 'T', fontCmd: 'mathit' },\n  𝑈: { letter: 'U', fontCmd: 'mathit' },\n  𝑉: { letter: 'V', fontCmd: 'mathit' },\n  𝑊: { letter: 'W', fontCmd: 'mathit' },\n  𝑋: { letter: 'X', fontCmd: 'mathit' },\n  𝑌: { letter: 'Y', fontCmd: 'mathit' },\n  𝑍: { letter: 'Z', fontCmd: 'mathit' },\n  // letter A mathbb\n  𝔸: { letter: 'A', fontCmd: 'mathbb' },\n  𝔹: { letter: 'B', fontCmd: 'mathbb' },\n  ℂ: { letter: 'C', fontCmd: 'mathbb' },\n  𝔻: { letter: 'D', fontCmd: 'mathbb' },\n  𝔼: { letter: 'E', fontCmd: 'mathbb' },\n  𝔽: { letter: 'F', fontCmd: 'mathbb' },\n  𝔾: { letter: 'G', fontCmd: 'mathbb' },\n  ℍ: { letter: 'H', fontCmd: 'mathbb' },\n  𝕀: { letter: 'I', fontCmd: 'mathbb' },\n  𝕁: { letter: 'J', fontCmd: 'mathbb' },\n  𝕂: { letter: 'K', fontCmd: 'mathbb' },\n  𝕃: { letter: 'L', fontCmd: 'mathbb' },\n  𝕄: { letter: 'M', fontCmd: 'mathbb' },\n  ℕ: { letter: 'N', fontCmd: 'mathbb' },\n  𝕆: { letter: 'O', fontCmd: 'mathbb' },\n  ℙ: { letter: 'P', fontCmd: 'mathbb' },\n  ℚ: { letter: 'Q', fontCmd: 'mathbb' },\n  ℝ: { letter: 'R', fontCmd: 'mathbb' },\n  𝕊: { letter: 'S', fontCmd: 'mathbb' },\n  𝕋: { letter: 'T', fontCmd: 'mathbb' },\n  𝕌: { letter: 'U', fontCmd: 'mathbb' },\n  𝕍: { letter: 'V', fontCmd: 'mathbb' },\n  𝕎: { letter: 'W', fontCmd: 'mathbb' },\n  𝕏: { letter: 'X', fontCmd: 'mathbb' },\n  𝕐: { letter: 'Y', fontCmd: 'mathbb' },\n  ℤ: { letter: 'Z', fontCmd: 'mathbb' },\n  '𝟘': { letter: '0', fontCmd: 'mathbb' },\n  '𝟙': { letter: '1', fontCmd: 'mathbb' },\n  '𝟚': { letter: '2', fontCmd: 'mathbb' },\n  '𝟛': { letter: '3', fontCmd: 'mathbb' },\n  '𝟜': { letter: '4', fontCmd: 'mathbb' },\n  '𝟝': { letter: '5', fontCmd: 'mathbb' },\n  '𝟞': { letter: '6', fontCmd: 'mathbb' },\n  '𝟟': { letter: '7', fontCmd: 'mathbb' },\n  '𝟠': { letter: '8', fontCmd: 'mathbb' },\n  '𝟡': { letter: '9', fontCmd: 'mathbb' },\n  // letter A mathcal\n  𝒜: { letter: 'A', fontCmd: 'mathcal' },\n  𝓐: { letter: 'A', fontCmd: 'mathcal' },\n  ℬ: { letter: 'B', fontCmd: 'mathcal' },\n  𝒞: { letter: 'C', fontCmd: 'mathcal' },\n  𝒟: { letter: 'D', fontCmd: 'mathcal' },\n  𝓓: { letter: 'D', fontCmd: 'mathcal' },\n  ℰ: { letter: 'E', fontCmd: 'mathcal' },\n  ℱ: { letter: 'F', fontCmd: 'mathcal' },\n  𝓕: { letter: 'F', fontCmd: 'mathcal' },\n  𝒢: { letter: 'G', fontCmd: 'mathcal' },\n  ℋ: { letter: 'H', fontCmd: 'mathcal' },\n  ℐ: { letter: 'I', fontCmd: 'mathcal' },\n  𝒥: { letter: 'J', fontCmd: 'mathcal' },\n  𝒦: { letter: 'K', fontCmd: 'mathcal' },\n  ℒ: { letter: 'L', fontCmd: 'mathcal' },\n  𝓛: { letter: 'L', fontCmd: 'mathcal' },\n  ℳ: { letter: 'M', fontCmd: 'mathcal' },\n  𝒩: { letter: 'N', fontCmd: 'mathcal' },\n  𝒪: { letter: 'O', fontCmd: 'mathcal' },\n  𝓞: { letter: 'O', fontCmd: 'mathcal' },\n  𝒫: { letter: 'P', fontCmd: 'mathcal' },\n  𝒬: { letter: 'Q', fontCmd: 'mathcal' },\n  ℛ: { letter: 'R', fontCmd: 'mathcal' },\n  𝕽: { letter: 'R', fontCmd: 'mathcal' },\n  '℟': { letter: 'R', fontCmd: 'mathcal' },\n  𝒮: { letter: 'S', fontCmd: 'mathcal' },\n  𝒯: { letter: 'T', fontCmd: 'mathcal' },\n  𝒰: { letter: 'U', fontCmd: 'mathcal' },\n  𝒱: { letter: 'V', fontCmd: 'mathcal' },\n  𝒲: { letter: 'W', fontCmd: 'mathcal' },\n  𝒳: { letter: 'X', fontCmd: 'mathcal' },\n  𝒴: { letter: 'Y', fontCmd: 'mathcal' },\n  𝒵: { letter: 'Z', fontCmd: 'mathcal' },\n  // letter A mathfrak\n  𝔄: { letter: 'A', fontCmd: 'mathfrak' },\n  𝔅: { letter: 'B', fontCmd: 'mathfrak' },\n  ℭ: { letter: 'C', fontCmd: 'mathfrak' },\n  𝔇: { letter: 'D', fontCmd: 'mathfrak' },\n  𝔈: { letter: 'E', fontCmd: 'mathfrak' },\n  𝔉: { letter: 'F', fontCmd: 'mathfrak' },\n  𝔊: { letter: 'G', fontCmd: 'mathfrak' },\n  ℌ: { letter: 'H', fontCmd: 'mathfrak' },\n  ℑ: { letter: 'I', fontCmd: 'mathfrak' },\n  𝔍: { letter: 'J', fontCmd: 'mathfrak' },\n  𝔎: { letter: 'K', fontCmd: 'mathfrak' },\n  𝔏: { letter: 'L', fontCmd: 'mathfrak' },\n  𝔐: { letter: 'M', fontCmd: 'mathfrak' },\n  𝔑: { letter: 'N', fontCmd: 'mathfrak' },\n  𝔒: { letter: 'O', fontCmd: 'mathfrak' },\n  𝔓: { letter: 'P', fontCmd: 'mathfrak' },\n  𝔔: { letter: 'Q', fontCmd: 'mathfrak' },\n  ℜ: { letter: 'R', fontCmd: 'mathfrak' },\n  𝔖: { letter: 'S', fontCmd: 'mathfrak' },\n  𝔗: { letter: 'T', fontCmd: 'mathfrak' },\n  𝔘: { letter: 'U', fontCmd: 'mathfrak' },\n  𝔙: { letter: 'V', fontCmd: 'mathfrak' },\n  𝔚: { letter: 'W', fontCmd: 'mathfrak' },\n  𝔛: { letter: 'X', fontCmd: 'mathfrak' },\n  𝔜: { letter: 'Y', fontCmd: 'mathfrak' },\n  ℨ: { letter: 'Z', fontCmd: 'mathfrak' },\n  // letter A mathsf\n  𝖠: { letter: 'A', fontCmd: 'mathsf' },\n  Α: { letter: 'A', fontCmd: 'mathsf' },\n  𝖡: { letter: 'B', fontCmd: 'mathsf' },\n  Β: { letter: 'B', fontCmd: 'mathsf' },\n  𝖢: { letter: 'C', fontCmd: 'mathsf' },\n  𝖣: { letter: 'D', fontCmd: 'mathsf' },\n  𝖤: { letter: 'E', fontCmd: 'mathsf' },\n  𝖥: { letter: 'F', fontCmd: 'mathsf' },\n  𝖦: { letter: 'G', fontCmd: 'mathsf' },\n  𝖧: { letter: 'H', fontCmd: 'mathsf' },\n  𝖨: { letter: 'I', fontCmd: 'mathsf' },\n  𝖩: { letter: 'J', fontCmd: 'mathsf' },\n  ȷ: { letter: 'J', fontCmd: 'mathsf' },\n  𝖪: { letter: 'K', fontCmd: 'mathsf' },\n  Κ: { letter: 'K', fontCmd: 'mathsf' },\n  𝖫: { letter: 'L', fontCmd: 'mathsf' },\n  𝖬: { letter: 'M', fontCmd: 'mathsf' },\n  𝖭: { letter: 'N', fontCmd: 'mathsf' },\n  𝖮: { letter: 'O', fontCmd: 'mathsf' },\n  𝖯: { letter: 'P', fontCmd: 'mathsf' },\n  𝖰: { letter: 'Q', fontCmd: 'mathsf' },\n  𝖱: { letter: 'R', fontCmd: 'mathsf' },\n  𝖲: { letter: 'S', fontCmd: 'mathsf' },\n  𝖳: { letter: 'T', fontCmd: 'mathsf' },\n  𝖴: { letter: 'U', fontCmd: 'mathsf' },\n  𝖵: { letter: 'V', fontCmd: 'mathsf' },\n  𝖶: { letter: 'W', fontCmd: 'mathsf' },\n  𝖷: { letter: 'X', fontCmd: 'mathsf' },\n  Χ: { letter: 'X', fontCmd: 'mathsf' },\n  𝖸: { letter: 'Y', fontCmd: 'mathsf' },\n  𝖹: { letter: 'Z', fontCmd: 'mathsf' },\n  // letter A mathtt\n  𝚨: { letter: 'A', fontCmd: 'mathtt' },\n  𝚩: { letter: 'B', fontCmd: 'mathtt' },\n  𝚪: { letter: '\\\\Gamma', fontCmd: 'mathtt' },\n  𝚫: { letter: '\\\\Delta', fontCmd: 'mathtt' },\n  𝚬: { letter: 'E', fontCmd: 'mathtt' },\n  𝚭: { letter: 'F', fontCmd: 'mathtt' },\n  𝚮: { letter: 'G', fontCmd: 'mathtt' },\n  𝚯: { letter: '\\\\Theta', fontCmd: 'mathtt' },\n  𝚰: { letter: 'I', fontCmd: 'mathtt' },\n  𝚱: { letter: 'J', fontCmd: 'mathtt' },\n  𝚲: { letter: '\\\\Lambda', fontCmd: 'mathtt' },\n  𝚳: { letter: 'L', fontCmd: 'mathtt' },\n  𝚴: { letter: 'M', fontCmd: 'mathtt' },\n  𝚵: { letter: '\\\\Pi', fontCmd: 'mathtt' },\n  𝚶: { letter: 'O', fontCmd: 'mathtt' },\n  𝚷: { letter: '\\\\Pi', fontCmd: 'mathtt' },\n  𝚸: { letter: 'Q', fontCmd: 'mathtt' },\n  𝚹: { letter: 'R', fontCmd: 'mathtt' },\n  𝚺: { letter: 'S', fontCmd: 'mathtt' },\n  𝚻: { letter: 'T', fontCmd: 'mathtt' },\n  𝚼: { letter: 'U', fontCmd: 'mathtt' },\n  𝚽: { letter: '\\\\Phi', fontCmd: 'mathtt' },\n  𝚾: { letter: 'W', fontCmd: 'mathtt' },\n  𝚿: { letter: '\\\\Psi', fontCmd: 'mathtt' },\n  𝛀: { letter: '\\\\Omega', fontCmd: 'mathtt' },\n};\n", "// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n", "export { MathMLToLaTeX } from './main';\n", "\"use strict\";\r\nmodule.exports = Event;\r\n\r\nEvent.CAPTURING_PHASE = 1;\r\nEvent.AT_TARGET = 2;\r\nEvent.BUBBLING_PHASE = 3;\r\n\r\nfunction Event(type, dictionary) {\r\n  // Initialize basic event properties\r\n  this.type = '';\r\n  this.target = null;\r\n  this.currentTarget = null;\r\n  this.eventPhase = Event.AT_TARGET;\r\n  this.bubbles = false;\r\n  this.cancelable = false;\r\n  this.isTrusted = false;\r\n  this.defaultPrevented = false;\r\n  this.timeStamp = Date.now();\r\n\r\n  // Initialize internal flags\r\n  // XXX: Would it be better to inherit these defaults from the prototype?\r\n  this._propagationStopped = false;\r\n  this._immediatePropagationStopped = false;\r\n  this._initialized = true;\r\n  this._dispatching = false;\r\n\r\n  // Now initialize based on the constructor arguments (if any)\r\n  if (type) this.type = type;\r\n  if (dictionary) {\r\n    for(var p in dictionary) {\r\n      this[p] = dictionary[p];\r\n    }\r\n  }\r\n}\r\n\r\nEvent.prototype = Object.create(Object.prototype, {\r\n  constructor: { value: Event },\r\n  stopPropagation: { value: function stopPropagation() {\r\n    this._propagationStopped = true;\r\n  }},\r\n\r\n  stopImmediatePropagation: { value: function stopImmediatePropagation() {\r\n    this._propagationStopped = true;\r\n    this._immediatePropagationStopped = true;\r\n  }},\r\n\r\n  preventDefault: { value: function preventDefault() {\r\n    if (this.cancelable) this.defaultPrevented = true;\r\n  }},\r\n\r\n  initEvent: { value: function initEvent(type, bubbles, cancelable) {\r\n    this._initialized = true;\r\n    if (this._dispatching) return;\r\n\r\n    this._propagationStopped = false;\r\n    this._immediatePropagationStopped = false;\r\n    this.defaultPrevented = false;\r\n    this.isTrusted = false;\r\n\r\n    this.target = null;\r\n    this.type = type;\r\n    this.bubbles = bubbles;\r\n    this.cancelable = cancelable;\r\n  }},\r\n\r\n});\r\n", "\"use strict\";\r\nvar Event = require('./Event');\r\n\r\nmodule.exports = UIEvent;\r\n\r\nfunction UIEvent() {\r\n  // Just use the superclass constructor to initialize\r\n  Event.call(this);\r\n  this.view = null; // FF uses the current window\r\n  this.detail = 0;\r\n}\r\nUIEvent.prototype = Object.create(Event.prototype, {\r\n  constructor: { value: UIEvent },\r\n  initUIEvent: { value: function(type, bubbles, cancelable, view, detail) {\r\n    this.initEvent(type, bubbles, cancelable);\r\n    this.view = view;\r\n    this.detail = detail;\r\n  }}\r\n});\r\n", "\"use strict\";\r\nvar UIEvent = require('./UIEvent');\r\n\r\nmodule.exports = MouseEvent;\r\n\r\nfunction MouseEvent() {\r\n  // Just use the superclass constructor to initialize\r\n  UIEvent.call(this);\r\n\r\n  this.screenX = this.screenY = this.clientX = this.clientY = 0;\r\n  this.ctrlKey = this.altKey = this.shiftKey = this.metaKey = false;\r\n  this.button = 0;\r\n  this.buttons = 1;\r\n  this.relatedTarget = null;\r\n}\r\nMouseEvent.prototype = Object.create(UIEvent.prototype, {\r\n  constructor: { value: MouseEvent },\r\n  initMouseEvent: { value: function(type, bubbles, cancelable,\r\n    view, detail,\r\n    screenX, screenY, clientX, clientY,\r\n    ctrlKey, altKey, shiftKey, metaKey,\r\n    button, relatedTarget) {\r\n\r\n    this.initEvent(type, bubbles, cancelable, view, detail);\r\n    this.screenX = screenX;\r\n    this.screenY = screenY;\r\n    this.clientX = clientX;\r\n    this.clientY = clientY;\r\n    this.ctrlKey = ctrlKey;\r\n    this.altKey = altKey;\r\n    this.shiftKey = shiftKey;\r\n    this.metaKey = metaKey;\r\n    this.button = button;\r\n    switch(button) {\r\n    case 0: this.buttons = 1; break;\r\n    case 1: this.buttons = 4; break;\r\n    case 2: this.buttons = 2; break;\r\n    default: this.buttons = 0; break;\r\n    }\r\n    this.relatedTarget = relatedTarget;\r\n  }},\r\n\r\n  getModifierState: { value: function(key) {\r\n    switch(key) {\r\n    case \"Alt\": return this.altKey;\r\n    case \"Control\": return this.ctrlKey;\r\n    case \"Shift\": return this.shiftKey;\r\n    case \"Meta\": return this.metaKey;\r\n    default: return false;\r\n    }\r\n  }}\r\n});\r\n", "\"use strict\";\r\nmodule.exports = DOMException;\r\n\r\nvar INDEX_SIZE_ERR = 1;\r\nvar HIERARCHY_REQUEST_ERR = 3;\r\nvar WRONG_DOCUMENT_ERR = 4;\r\nvar INVALID_CHARACTER_ERR = 5;\r\nvar NO_MODIFICATION_ALLOWED_ERR = 7;\r\nvar NOT_FOUND_ERR = 8;\r\nvar NOT_SUPPORTED_ERR = 9;\r\nvar INVALID_STATE_ERR = 11;\r\nvar SYNTAX_ERR = 12;\r\nvar INVALID_MODIFICATION_ERR = 13;\r\nvar NAMESPACE_ERR = 14;\r\nvar INVALID_ACCESS_ERR = 15;\r\nvar TYPE_MISMATCH_ERR = 17;\r\nvar SECURITY_ERR = 18;\r\nvar NETWORK_ERR = 19;\r\nvar ABORT_ERR = 20;\r\nvar URL_MISMATCH_ERR = 21;\r\nvar QUOTA_EXCEEDED_ERR = 22;\r\nvar TIMEOUT_ERR = 23;\r\nvar INVALID_NODE_TYPE_ERR = 24;\r\nvar DATA_CLONE_ERR = 25;\r\n\r\n// Code to name\r\nvar names = [\r\n  null,  // No error with code 0\r\n  'INDEX_SIZE_ERR',\r\n  null, // historical\r\n  'HIERARCHY_REQUEST_ERR',\r\n  'WRONG_DOCUMENT_ERR',\r\n  'INVALID_CHARACTER_ERR',\r\n  null, // historical\r\n  'NO_MODIFICATION_ALLOWED_ERR',\r\n  'NOT_FOUND_ERR',\r\n  'NOT_SUPPORTED_ERR',\r\n  'INUSE_ATTRIBUTE_ERR', // historical\r\n  'INVALID_STATE_ERR',\r\n  'SYNTAX_ERR',\r\n  'INVALID_MODIFICATION_ERR',\r\n  'NAMESPACE_ERR',\r\n  'INVALID_ACCESS_ERR',\r\n  null, // historical\r\n  'TYPE_MISMATCH_ERR',\r\n  'SECURITY_ERR',\r\n  'NETWORK_ERR',\r\n  'ABORT_ERR',\r\n  'URL_MISMATCH_ERR',\r\n  'QUOTA_EXCEEDED_ERR',\r\n  'TIMEOUT_ERR',\r\n  'INVALID_NODE_TYPE_ERR',\r\n  'DATA_CLONE_ERR',\r\n];\r\n\r\n// Code to message\r\n// These strings are from the 13 May 2011 Editor's Draft of DOM Core.\r\n// http://dvcs.w3.org/hg/domcore/raw-file/tip/Overview.html\r\n// Copyright \u00A9 2011 W3C\u00AE (MIT, ERCIM, Keio), All Rights Reserved.\r\n// Used under the terms of the W3C Document License:\r\n// http://www.w3.org/Consortium/Legal/2002/copyright-documents-20021231\r\nvar messages = [\r\n  null,  // No error with code 0\r\n  'INDEX_SIZE_ERR (1): the index is not in the allowed range',\r\n  null,\r\n  'HIERARCHY_REQUEST_ERR (3): the operation would yield an incorrect nodes model',\r\n  'WRONG_DOCUMENT_ERR (4): the object is in the wrong Document, a call to importNode is required',\r\n  'INVALID_CHARACTER_ERR (5): the string contains invalid characters',\r\n  null,\r\n  'NO_MODIFICATION_ALLOWED_ERR (7): the object can not be modified',\r\n  'NOT_FOUND_ERR (8): the object can not be found here',\r\n  'NOT_SUPPORTED_ERR (9): this operation is not supported',\r\n  'INUSE_ATTRIBUTE_ERR (10): setAttributeNode called on owned Attribute',\r\n  'INVALID_STATE_ERR (11): the object is in an invalid state',\r\n  'SYNTAX_ERR (12): the string did not match the expected pattern',\r\n  'INVALID_MODIFICATION_ERR (13): the object can not be modified in this way',\r\n  'NAMESPACE_ERR (14): the operation is not allowed by Namespaces in XML',\r\n  'INVALID_ACCESS_ERR (15): the object does not support the operation or argument',\r\n  null,\r\n  'TYPE_MISMATCH_ERR (17): the type of the object does not match the expected type',\r\n  'SECURITY_ERR (18): the operation is insecure',\r\n  'NETWORK_ERR (19): a network error occurred',\r\n  'ABORT_ERR (20): the user aborted an operation',\r\n  'URL_MISMATCH_ERR (21): the given URL does not match another URL',\r\n  'QUOTA_EXCEEDED_ERR (22): the quota has been exceeded',\r\n  'TIMEOUT_ERR (23): a timeout occurred',\r\n  'INVALID_NODE_TYPE_ERR (24): the supplied node is invalid or has an invalid ancestor for this operation',\r\n  'DATA_CLONE_ERR (25): the object can not be cloned.'\r\n];\r\n\r\n// Name to code\r\nvar constants = {\r\n  INDEX_SIZE_ERR: INDEX_SIZE_ERR,\r\n  DOMSTRING_SIZE_ERR: 2, // historical\r\n  HIERARCHY_REQUEST_ERR: HIERARCHY_REQUEST_ERR,\r\n  WRONG_DOCUMENT_ERR: WRONG_DOCUMENT_ERR,\r\n  INVALID_CHARACTER_ERR: INVALID_CHARACTER_ERR,\r\n  NO_DATA_ALLOWED_ERR: 6, // historical\r\n  NO_MODIFICATION_ALLOWED_ERR: NO_MODIFICATION_ALLOWED_ERR,\r\n  NOT_FOUND_ERR: NOT_FOUND_ERR,\r\n  NOT_SUPPORTED_ERR: NOT_SUPPORTED_ERR,\r\n  INUSE_ATTRIBUTE_ERR: 10, // historical\r\n  INVALID_STATE_ERR: INVALID_STATE_ERR,\r\n  SYNTAX_ERR: SYNTAX_ERR,\r\n  INVALID_MODIFICATION_ERR: INVALID_MODIFICATION_ERR,\r\n  NAMESPACE_ERR: NAMESPACE_ERR,\r\n  INVALID_ACCESS_ERR: INVALID_ACCESS_ERR,\r\n  VALIDATION_ERR: 16, // historical\r\n  TYPE_MISMATCH_ERR: TYPE_MISMATCH_ERR,\r\n  SECURITY_ERR: SECURITY_ERR,\r\n  NETWORK_ERR: NETWORK_ERR,\r\n  ABORT_ERR: ABORT_ERR,\r\n  URL_MISMATCH_ERR: URL_MISMATCH_ERR,\r\n  QUOTA_EXCEEDED_ERR: QUOTA_EXCEEDED_ERR,\r\n  TIMEOUT_ERR: TIMEOUT_ERR,\r\n  INVALID_NODE_TYPE_ERR: INVALID_NODE_TYPE_ERR,\r\n  DATA_CLONE_ERR: DATA_CLONE_ERR\r\n};\r\n\r\nfunction DOMException(code) {\r\n  Error.call(this);\r\n  Error.captureStackTrace(this, this.constructor);\r\n  this.code = code;\r\n  this.message = messages[code];\r\n  this.name = names[code];\r\n}\r\nDOMException.prototype.__proto__ = Error.prototype;\r\n\r\n// Initialize the constants on DOMException and DOMException.prototype\r\nfor(var c in constants) {\r\n  var v = { value: constants[c] };\r\n  Object.defineProperty(DOMException, c, v);\r\n  Object.defineProperty(DOMException.prototype, c, v);\r\n}\r\n", "/*\r\n * This file defines Domino behaviour that can be externally configured.\r\n * To change these settings, set the relevant global property *before*\r\n * you call `require(\"domino\")`.\r\n */\r\n\r\nexports.isApiWritable = !globalThis.__domino_frozen__;\r\n", "\"use strict\";\r\nvar DOMException = require('./DOMException');\r\nvar ERR = DOMException;\r\nvar isApiWritable = require(\"./config\").isApiWritable;\r\n\r\nexports.NAMESPACE = {\r\n  HTML: 'http://www.w3.org/1999/xhtml',\r\n  XML: 'http://www.w3.org/XML/1998/namespace',\r\n  XMLNS: 'http://www.w3.org/2000/xmlns/',\r\n  MATHML: 'http://www.w3.org/1998/Math/MathML',\r\n  SVG: 'http://www.w3.org/2000/svg',\r\n  XLINK: 'http://www.w3.org/1999/xlink'\r\n};\r\n\r\n//\r\n// Shortcut functions for throwing errors of various types.\r\n//\r\nexports.IndexSizeError = function() { throw new DOMException(ERR.INDEX_SIZE_ERR); };\r\nexports.HierarchyRequestError = function() { throw new DOMException(ERR.HIERARCHY_REQUEST_ERR); };\r\nexports.WrongDocumentError = function() { throw new DOMException(ERR.WRONG_DOCUMENT_ERR); };\r\nexports.InvalidCharacterError = function() { throw new DOMException(ERR.INVALID_CHARACTER_ERR); };\r\nexports.NoModificationAllowedError = function() { throw new DOMException(ERR.NO_MODIFICATION_ALLOWED_ERR); };\r\nexports.NotFoundError = function() { throw new DOMException(ERR.NOT_FOUND_ERR); };\r\nexports.NotSupportedError = function() { throw new DOMException(ERR.NOT_SUPPORTED_ERR); };\r\nexports.InvalidStateError = function() { throw new DOMException(ERR.INVALID_STATE_ERR); };\r\nexports.SyntaxError = function() { throw new DOMException(ERR.SYNTAX_ERR); };\r\nexports.InvalidModificationError = function() { throw new DOMException(ERR.INVALID_MODIFICATION_ERR); };\r\nexports.NamespaceError = function() { throw new DOMException(ERR.NAMESPACE_ERR); };\r\nexports.InvalidAccessError = function() { throw new DOMException(ERR.INVALID_ACCESS_ERR); };\r\nexports.TypeMismatchError = function() { throw new DOMException(ERR.TYPE_MISMATCH_ERR); };\r\nexports.SecurityError = function() { throw new DOMException(ERR.SECURITY_ERR); };\r\nexports.NetworkError = function() { throw new DOMException(ERR.NETWORK_ERR); };\r\nexports.AbortError = function() { throw new DOMException(ERR.ABORT_ERR); };\r\nexports.UrlMismatchError = function() { throw new DOMException(ERR.URL_MISMATCH_ERR); };\r\nexports.QuotaExceededError = function() { throw new DOMException(ERR.QUOTA_EXCEEDED_ERR); };\r\nexports.TimeoutError = function() { throw new DOMException(ERR.TIMEOUT_ERR); };\r\nexports.InvalidNodeTypeError = function() { throw new DOMException(ERR.INVALID_NODE_TYPE_ERR); };\r\nexports.DataCloneError = function() { throw new DOMException(ERR.DATA_CLONE_ERR); };\r\n\r\nexports.nyi = function() {\r\n  throw new Error(\"NotYetImplemented\");\r\n};\r\n\r\nexports.shouldOverride = function() {\r\n  throw new Error(\"Abstract function; should be overriding in subclass.\");\r\n};\r\n\r\nexports.assert = function(expr, msg) {\r\n  if (!expr) {\r\n    throw new Error(\"Assertion failed: \" + (msg || \"\") + \"\\n\" + new Error().stack);\r\n  }\r\n};\r\n\r\nexports.expose = function(src, c) {\r\n  for (var n in src) {\r\n    Object.defineProperty(c.prototype, n, { value: src[n], writable: isApiWritable });\r\n  }\r\n};\r\n\r\nexports.merge = function(a, b) {\r\n  for (var n in b) {\r\n    a[n] = b[n];\r\n  }\r\n};\r\n\r\n// Compare two nodes based on their document order. This function is intended\r\n// to be passed to sort(). Assumes that the array being sorted does not\r\n// contain duplicates.  And that all nodes are connected and comparable.\r\n// Clever code by ppk via jeresig.\r\nexports.documentOrder = function(n,m) {\r\n  /* jshint bitwise: false */\r\n  return 3 - (n.compareDocumentPosition(m) & 6);\r\n};\r\n\r\nexports.toASCIILowerCase = function(s) {\r\n  return s.replace(/[A-Z]+/g, function(c) {\r\n    return c.toLowerCase();\r\n  });\r\n};\r\n\r\nexports.toASCIIUpperCase = function(s) {\r\n  return s.replace(/[a-z]+/g, function(c) {\r\n    return c.toUpperCase();\r\n  });\r\n};\r\n", "\"use strict\";\r\nvar Event = require('./Event');\r\nvar MouseEvent = require('./MouseEvent');\r\nvar utils = require('./utils');\r\n\r\nmodule.exports = EventTarget;\r\n\r\nfunction EventTarget() {}\r\n\r\nEventTarget.prototype = {\r\n  // XXX\r\n  // See WebIDL \u00A74.8 for details on object event handlers\r\n  // and how they should behave.  We actually have to accept\r\n  // any object to addEventListener... Can't type check it.\r\n  // on registration.\r\n\r\n  // XXX:\r\n  // Capturing event listeners are sort of rare.  I think I can optimize\r\n  // them so that dispatchEvent can skip the capturing phase (or much of\r\n  // it).  Each time a capturing listener is added, increment a flag on\r\n  // the target node and each of its ancestors.  Decrement when removed.\r\n  // And update the counter when nodes are added and removed from the\r\n  // tree as well.  Then, in dispatch event, the capturing phase can\r\n  // abort if it sees any node with a zero count.\r\n  addEventListener: function addEventListener(type, listener, capture) {\r\n    if (!listener) return;\r\n    if (capture === undefined) capture = false;\r\n    if (!this._listeners) this._listeners = Object.create(null);\r\n    if (!this._listeners[type]) this._listeners[type] = [];\r\n    var list = this._listeners[type];\r\n\r\n    // If this listener has already been registered, just return\r\n    for(var i = 0, n = list.length; i < n; i++) {\r\n      var l = list[i];\r\n      if (l.listener === listener && l.capture === capture)\r\n        return;\r\n    }\r\n\r\n    // Add an object to the list of listeners\r\n    var obj = { listener: listener, capture: capture };\r\n    if (typeof listener === 'function') obj.f = listener;\r\n    list.push(obj);\r\n  },\r\n\r\n  removeEventListener: function removeEventListener(type,\r\n                            listener,\r\n                            capture) {\r\n    if (capture === undefined) capture = false;\r\n    if (this._listeners) {\r\n      var list = this._listeners[type];\r\n      if (list) {\r\n        // Find the listener in the list and remove it\r\n        for(var i = 0, n = list.length; i < n; i++) {\r\n          var l = list[i];\r\n          if (l.listener === listener && l.capture === capture) {\r\n            if (list.length === 1) {\r\n              this._listeners[type] = undefined;\r\n            }\r\n            else {\r\n              list.splice(i, 1);\r\n            }\r\n            return;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  },\r\n\r\n  // This is the public API for dispatching untrusted public events.\r\n  // See _dispatchEvent for the implementation\r\n  dispatchEvent: function dispatchEvent(event) {\r\n    // Dispatch an untrusted event\r\n    return this._dispatchEvent(event, false);\r\n  },\r\n\r\n  //\r\n  // See DOMCore \u00A74.4\r\n  // XXX: I'll probably need another version of this method for\r\n  // internal use, one that does not set isTrusted to false.\r\n  // XXX: see Document._dispatchEvent: perhaps that and this could\r\n  // call a common internal function with different settings of\r\n  // a trusted boolean argument\r\n  //\r\n  // XXX:\r\n  // The spec has changed in how to deal with handlers registered\r\n  // on idl or content attributes rather than with addEventListener.\r\n  // Used to say that they always ran first.  That's how webkit does it\r\n  // Spec now says that they run in a position determined by\r\n  // when they were first set.  FF does it that way.  See:\r\n  // http://www.whatwg.org/specs/web-apps/current-work/multipage/webappapis.html#event-handlers\r\n  //\r\n  _dispatchEvent: function _dispatchEvent(event, trusted) {\r\n    if (typeof trusted !== 'boolean') trusted = false;\r\n    function invoke(target, event) {\r\n      var type = event.type, phase = event.eventPhase;\r\n      event.currentTarget = target;\r\n\r\n      // If there was an individual handler defined, invoke it first\r\n      // XXX: see comment above: this shouldn't always be first.\r\n      if (phase !== Event.CAPTURING_PHASE &&\r\n        target._handlers && target._handlers[type])\r\n      {\r\n        var handler = target._handlers[type];\r\n        var rv;\r\n        if (typeof handler === 'function') {\r\n          rv=handler.call(event.currentTarget, event);\r\n        }\r\n        else {\r\n          var f = handler.handleEvent;\r\n          if (typeof f !== 'function')\r\n            throw new TypeError('handleEvent property of ' +\r\n                                'event handler object is' +\r\n                                'not a function.');\r\n          rv=f.call(handler, event);\r\n        }\r\n\r\n        switch(event.type) {\r\n        case 'mouseover':\r\n          if (rv === true)  // Historical baggage\r\n            event.preventDefault();\r\n          break;\r\n        case 'beforeunload':\r\n          // XXX: eventually we need a special case here\r\n          /* falls through */\r\n        default:\r\n          if (rv === false)\r\n            event.preventDefault();\r\n          break;\r\n        }\r\n      }\r\n\r\n      // Now invoke list list of listeners for this target and type\r\n      var list = target._listeners && target._listeners[type];\r\n      if (!list) return;\r\n      list = list.slice();\r\n      for(var i = 0, n = list.length; i < n; i++) {\r\n        if (event._immediatePropagationStopped) return;\r\n        var l = list[i];\r\n        if ((phase === Event.CAPTURING_PHASE && !l.capture) ||\r\n          (phase === Event.BUBBLING_PHASE && l.capture))\r\n          continue;\r\n        if (l.f) {\r\n          l.f.call(event.currentTarget, event);\r\n        }\r\n        else {\r\n          var fn = l.listener.handleEvent;\r\n          if (typeof fn !== 'function')\r\n            throw new TypeError('handleEvent property of event listener object is not a function.');\r\n          fn.call(l.listener, event);\r\n        }\r\n      }\r\n    }\r\n\r\n    if (!event._initialized || event._dispatching) utils.InvalidStateError();\r\n    event.isTrusted = trusted;\r\n\r\n    // Begin dispatching the event now\r\n    event._dispatching = true;\r\n    event.target = this;\r\n\r\n    // Build the list of targets for the capturing and bubbling phases\r\n    // XXX: we'll eventually have to add Window to this list.\r\n    var ancestors = [];\r\n    for(var n = this.parentNode; n; n = n.parentNode)\r\n      ancestors.push(n);\r\n\r\n    // Capturing phase\r\n    event.eventPhase = Event.CAPTURING_PHASE;\r\n    for(var i = ancestors.length-1; i >= 0; i--) {\r\n      invoke(ancestors[i], event);\r\n      if (event._propagationStopped) break;\r\n    }\r\n\r\n    // At target phase\r\n    if (!event._propagationStopped) {\r\n      event.eventPhase = Event.AT_TARGET;\r\n      invoke(this, event);\r\n    }\r\n\r\n    // Bubbling phase\r\n    if (event.bubbles && !event._propagationStopped) {\r\n      event.eventPhase = Event.BUBBLING_PHASE;\r\n      for(var ii = 0, nn = ancestors.length; ii < nn; ii++) {\r\n        invoke(ancestors[ii], event);\r\n        if (event._propagationStopped) break;\r\n      }\r\n    }\r\n\r\n    event._dispatching = false;\r\n    event.eventPhase = Event.AT_TARGET;\r\n    event.currentTarget = null;\r\n\r\n    // Deal with mouse events and figure out when\r\n    // a click has happened\r\n    if (trusted && !event.defaultPrevented && event instanceof MouseEvent) {\r\n      switch(event.type) {\r\n      case 'mousedown':\r\n        this._armed = {\r\n          x: event.clientX,\r\n          y: event.clientY,\r\n          t: event.timeStamp\r\n        };\r\n        break;\r\n      case 'mouseout':\r\n      case 'mouseover':\r\n        this._armed = null;\r\n        break;\r\n      case 'mouseup':\r\n        if (this._isClick(event)) this._doClick(event);\r\n        this._armed = null;\r\n        break;\r\n      }\r\n    }\r\n\r\n\r\n\r\n    return !event.defaultPrevented;\r\n  },\r\n\r\n  // Determine whether a click occurred\r\n  // XXX We don't support double clicks for now\r\n  _isClick: function(event) {\r\n    return (this._armed !== null &&\r\n        event.type === 'mouseup' &&\r\n        event.isTrusted &&\r\n        event.button === 0 &&\r\n        event.timeStamp - this._armed.t < 1000 &&\r\n        Math.abs(event.clientX - this._armed.x) < 10 &&\r\n        Math.abs(event.clientY - this._armed.Y) < 10);\r\n  },\r\n\r\n  // Clicks are handled like this:\r\n  // http://www.whatwg.org/specs/web-apps/current-work/multipage/elements.html#interactive-content-0\r\n  //\r\n  // Note that this method is similar to the HTMLElement.click() method\r\n  // The event argument must be the trusted mouseup event\r\n  _doClick: function(event) {\r\n    if (this._click_in_progress) return;\r\n    this._click_in_progress = true;\r\n\r\n    // Find the nearest enclosing element that is activatable\r\n    // An element is activatable if it has a\r\n    // _post_click_activation_steps hook\r\n    var activated = this;\r\n    while(activated && !activated._post_click_activation_steps)\r\n      activated = activated.parentNode;\r\n\r\n    if (activated && activated._pre_click_activation_steps) {\r\n      activated._pre_click_activation_steps();\r\n    }\r\n\r\n    var click = this.ownerDocument.createEvent('MouseEvent');\r\n    click.initMouseEvent('click', true, true,\r\n      this.ownerDocument.defaultView, 1,\r\n      event.screenX, event.screenY,\r\n      event.clientX, event.clientY,\r\n      event.ctrlKey, event.altKey,\r\n      event.shiftKey, event.metaKey,\r\n      event.button, null);\r\n\r\n    var result = this._dispatchEvent(click, true);\r\n\r\n    if (activated) {\r\n      if (result) {\r\n        // This is where hyperlinks get followed, for example.\r\n        if (activated._post_click_activation_steps)\r\n          activated._post_click_activation_steps(click);\r\n      }\r\n      else {\r\n        if (activated._cancelled_activation_steps)\r\n          activated._cancelled_activation_steps();\r\n      }\r\n    }\r\n  },\r\n\r\n  //\r\n  // An event handler is like an event listener, but it registered\r\n  // by setting an IDL or content attribute like onload or onclick.\r\n  // There can only be one of these at a time for any event type.\r\n  // This is an internal method for the attribute accessors and\r\n  // content attribute handlers that need to register events handlers.\r\n  // The type argument is the same as in addEventListener().\r\n  // The handler argument is the same as listeners in addEventListener:\r\n  // it can be a function or an object. Pass null to remove any existing\r\n  // handler.  Handlers are always invoked before any listeners of\r\n  // the same type.  They are not invoked during the capturing phase\r\n  // of event dispatch.\r\n  //\r\n  _setEventHandler: function _setEventHandler(type, handler) {\r\n    if (!this._handlers) this._handlers = Object.create(null);\r\n    this._handlers[type] = handler;\r\n  },\r\n\r\n  _getEventHandler: function _getEventHandler(type) {\r\n    return (this._handlers && this._handlers[type]) || null;\r\n  }\r\n\r\n};\r\n", "\"use strict\";\r\nvar utils = require('./utils');\r\n\r\nvar LinkedList = module.exports = {\r\n    // basic validity tests on a circular linked list a\r\n    valid: function(a) {\r\n        utils.assert(a, \"list falsy\");\r\n        utils.assert(a._previousSibling, \"previous falsy\");\r\n        utils.assert(a._nextSibling, \"next falsy\");\r\n        // xxx check that list is actually circular\r\n        return true;\r\n    },\r\n    // insert a before b\r\n    insertBefore: function(a, b) {\r\n        utils.assert(LinkedList.valid(a) && LinkedList.valid(b));\r\n        var a_first = a, a_last = a._previousSibling;\r\n        var b_first = b, b_last = b._previousSibling;\r\n        a_first._previousSibling = b_last;\r\n        a_last._nextSibling = b_first;\r\n        b_last._nextSibling = a_first;\r\n        b_first._previousSibling = a_last;\r\n        utils.assert(LinkedList.valid(a) && LinkedList.valid(b));\r\n    },\r\n    // replace a single node a with a list b (which could be null)\r\n    replace: function(a, b) {\r\n        utils.assert(LinkedList.valid(a) && (b===null || LinkedList.valid(b)));\r\n        if (b!==null) {\r\n            LinkedList.insertBefore(b, a);\r\n        }\r\n        LinkedList.remove(a);\r\n        utils.assert(LinkedList.valid(a) && (b===null || LinkedList.valid(b)));\r\n    },\r\n    // remove single node a from its list\r\n    remove: function(a) {\r\n        utils.assert(LinkedList.valid(a));\r\n        var prev = a._previousSibling;\r\n        if (prev === a) { return; }\r\n        var next = a._nextSibling;\r\n        prev._nextSibling = next;\r\n        next._previousSibling = prev;\r\n        a._previousSibling = a._nextSibling = a;\r\n        utils.assert(LinkedList.valid(a));\r\n    }\r\n};\r\n", "\"use strict\";\r\nmodule.exports = {\r\n  // NOTE: The `serializeOne()` function used to live on the `Node.prototype`\r\n  // as a private method `Node#_serializeOne(child)`, however that requires\r\n  // a megamorphic property access `this._serializeOne` just to get to the\r\n  // method, and this is being done on lots of different `Node` subclasses,\r\n  // which puts a lot of pressure on V8's megamorphic stub cache. So by\r\n  // moving the helper off of the `Node.prototype` and into a separate\r\n  // function in this helper module, we get a monomorphic property access\r\n  // `NodeUtils.serializeOne` to get to the function and reduce pressure\r\n  // on the megamorphic stub cache.\r\n  // See https://github.com/fgnass/domino/pull/142 for more information.\r\n  serializeOne: serializeOne,\r\n\r\n  // Export util functions so that we can run extra test for them.\r\n  // Note: we prefix function names with `\u0275`, similar to what we do\r\n  // with internal functions in Angular packages.\r\n  \u0275escapeMatchingClosingTag: escapeMatchingClosingTag,\r\n  \u0275escapeClosingCommentTag: escapeClosingCommentTag,\r\n  \u0275escapeProcessingInstructionContent: escapeProcessingInstructionContent\r\n};\r\n\r\nvar utils = require('./utils');\r\nvar NAMESPACE = utils.NAMESPACE;\r\n\r\nvar hasRawContent = {\r\n  STYLE: true,\r\n  SCRIPT: true,\r\n  XMP: true,\r\n  IFRAME: true,\r\n  NOEMBED: true,\r\n  NOFRAMES: true,\r\n  PLAINTEXT: true\r\n};\r\n\r\nvar emptyElements = {\r\n  area: true,\r\n  base: true,\r\n  basefont: true,\r\n  bgsound: true,\r\n  br: true,\r\n  col: true,\r\n  embed: true,\r\n  frame: true,\r\n  hr: true,\r\n  img: true,\r\n  input: true,\r\n  keygen: true,\r\n  link: true,\r\n  meta: true,\r\n  param: true,\r\n  source: true,\r\n  track: true,\r\n  wbr: true\r\n};\r\n\r\nvar extraNewLine = {\r\n  /* Removed in https://github.com/whatwg/html/issues/944\r\n  pre: true,\r\n  textarea: true,\r\n  listing: true\r\n  */\r\n};\r\n\r\nconst ESCAPE_REGEXP = /[&<>\\u00A0]/g;\r\nconst ESCAPE_ATTR_REGEXP = /[&\"<>\\u00A0]/g;\r\n\r\nfunction escape(s) {\r\n  if (!ESCAPE_REGEXP.test(s)) {\r\n    // nothing to do, fast path\r\n    return s;\r\n  }\r\n\r\n  return s.replace(ESCAPE_REGEXP, (c) => {\r\n    switch (c) {\r\n      case \"&\":\r\n        return \"&amp;\";\r\n      case \"<\":\r\n        return \"&lt;\";\r\n      case \">\":\r\n        return \"&gt;\";\r\n      case \"\\u00A0\":\r\n        return \"&nbsp;\";\r\n    }\r\n  });\r\n}\r\n\r\nfunction escapeAttr(s) {\r\n  if (!ESCAPE_ATTR_REGEXP.test(s)) {\r\n    // nothing to do, fast path\r\n    return s;\r\n  }\r\n\r\n  return s.replace(ESCAPE_ATTR_REGEXP, (c) => {\r\n    switch (c) {\r\n      case \"<\":\r\n        return \"&lt;\";\r\n      case \">\":\r\n        return \"&gt;\";\r\n      case \"&\":\r\n        return \"&amp;\";\r\n      case '\"':\r\n        return \"&quot;\";\r\n      case \"\\u00A0\":\r\n        return \"&nbsp;\";\r\n    }\r\n  });\r\n}\r\n\r\nfunction attrname(a) {\r\n  var ns = a.namespaceURI;\r\n  if (!ns)\r\n    return a.localName;\r\n  if (ns === NAMESPACE.XML)\r\n    return 'xml:' + a.localName;\r\n  if (ns === NAMESPACE.XLINK)\r\n    return 'xlink:' + a.localName;\r\n\r\n  if (ns === NAMESPACE.XMLNS) {\r\n    if (a.localName === 'xmlns') return 'xmlns';\r\n    else return 'xmlns:' + a.localName;\r\n  }\r\n  return a.name;\r\n}\r\n\r\n/**\r\n * Escapes matching closing tag in a raw text.\r\n *\r\n * For example, given `<style>#text(</style><script></script>)</style>`,\r\n * the parent tag would by \"style\" and the raw text is\r\n * \"</style><script></script>\". If we come across a matching closing tag\r\n * (in out case `</style>`) - replace `<` with `&lt;` to avoid unexpected\r\n * and unsafe behavior after de-serialization.\r\n */\r\nfunction escapeMatchingClosingTag(rawText, parentTag) {\r\n  const parentClosingTag = '</' + parentTag;\r\n  if (!rawText.toLowerCase().includes(parentClosingTag)) {\r\n    return rawText; // fast path\r\n  }\r\n  const result = [...rawText];\r\n  const matches = rawText.matchAll(new RegExp(parentClosingTag, 'ig'));\r\n  for (const match of matches) {\r\n    result[match.index] = '&lt;';\r\n  }\r\n  return result.join('');\r\n}\r\n\r\nconst CLOSING_COMMENT_REGEXP = /--!?>/;\r\n\r\n/**\r\n * Escapes closing comment tag in a comment content.\r\n *\r\n * For example, given `#comment('-->')`, the content of a comment would be\r\n * updated to `--&gt;` to avoid unexpected and unsafe behavior after\r\n * de-serialization.\r\n */\r\nfunction escapeClosingCommentTag(rawContent) {\r\n  if (!CLOSING_COMMENT_REGEXP.test(rawContent)) {\r\n    return rawContent; // fast path\r\n  }\r\n  return rawContent.replace(/(--\\!?)>/g, '$1&gt;');\r\n}\r\n\r\n/**\r\n * Escapes processing instruction content by replacing `>` with `&gt`.\r\n */\r\nfunction escapeProcessingInstructionContent(rawContent) {\r\n  return rawContent.includes('>')\r\n    ? rawContent.replaceAll('>', '&gt;')\r\n    : rawContent;\r\n}\r\n\r\nfunction serializeOne(kid, parent) {\r\n  var s = '';\r\n  switch(kid.nodeType) {\r\n    case 1: //ELEMENT_NODE\r\n      var ns = kid.namespaceURI;\r\n      var html = ns === NAMESPACE.HTML;\r\n      var tagname = (html || ns === NAMESPACE.SVG || ns === NAMESPACE.MATHML) ? kid.localName : kid.tagName;\r\n\r\n      s += '<' + tagname;\r\n\r\n      for(var j = 0, k = kid._numattrs; j < k; j++) {\r\n        var a = kid._attr(j);\r\n        s += ' ' + attrname(a);\r\n        if (a.value !== undefined) s += '=\"' + escapeAttr(a.value) + '\"';\r\n      }\r\n      s += '>';\r\n\r\n      if (!(html && emptyElements[tagname])) {\r\n        var ss = kid.serialize();\r\n        // If an element can have raw content, this content may\r\n        // potentially require escaping to avoid XSS.\r\n        if (hasRawContent[tagname.toUpperCase()]) {\r\n          ss = escapeMatchingClosingTag(ss, tagname);\r\n        }\r\n        if (html && extraNewLine[tagname] && ss.charAt(0)==='\\n') s += '\\n';\r\n        // Serialize children and add end tag for all others\r\n        s += ss;\r\n        s += '</' + tagname + '>';\r\n      }\r\n      break;\r\n    case 3: //TEXT_NODE\r\n    case 4: //CDATA_SECTION_NODE\r\n      var parenttag;\r\n      if (parent.nodeType === 1 /*ELEMENT_NODE*/ &&\r\n        parent.namespaceURI === NAMESPACE.HTML)\r\n        parenttag = parent.tagName;\r\n      else\r\n        parenttag = '';\r\n\r\n      if (hasRawContent[parenttag] ||\r\n          (parenttag==='NOSCRIPT' && parent.ownerDocument._scripting_enabled)) {\r\n        s += kid.data;\r\n      } else {\r\n        s += escape(kid.data);\r\n      }\r\n      break;\r\n    case 8: //COMMENT_NODE\r\n      s += '<!--' + escapeClosingCommentTag(kid.data) + '-->';\r\n      break;\r\n    case 7: //PROCESSING_INSTRUCTION_NODE\r\n      const content = escapeProcessingInstructionContent(kid.data);\r\n      s += '<?' + kid.target + ' ' + content + '?>';\r\n      break;\r\n    case 10: //DOCUMENT_TYPE_NODE\r\n      s += '<!DOCTYPE ' + kid.name;\r\n\r\n      if (false) {\r\n        // Latest HTML serialization spec omits the public/system ID\r\n        if (kid.publicID) {\r\n          s += ' PUBLIC \"' + kid.publicId + '\"';\r\n        }\r\n\r\n        if (kid.systemId) {\r\n          s += ' \"' + kid.systemId + '\"';\r\n        }\r\n      }\r\n\r\n      s += '>';\r\n      break;\r\n    default:\r\n      utils.InvalidStateError();\r\n  }\r\n  return s;\r\n}\r\n", "\"use strict\";\r\nmodule.exports = Node;\r\n\r\nvar EventTarget = require('./EventTarget');\r\nvar LinkedList = require('./LinkedList');\r\nvar NodeUtils = require('./NodeUtils');\r\nvar utils = require('./utils');\r\n\r\n// All nodes have a nodeType and an ownerDocument.\r\n// Once inserted, they also have a parentNode.\r\n// This is an abstract class; all nodes in a document are instances\r\n// of a subtype, so all the properties are defined by more specific\r\n// constructors.\r\nfunction Node() {\r\n  EventTarget.call(this);\r\n  this.parentNode = null;\r\n  this._nextSibling = this._previousSibling = this;\r\n  this._index = undefined;\r\n}\r\n\r\nvar ELEMENT_NODE                = Node.ELEMENT_NODE = 1;\r\nvar ATTRIBUTE_NODE              = Node.ATTRIBUTE_NODE = 2;\r\nvar TEXT_NODE                   = Node.TEXT_NODE = 3;\r\nvar CDATA_SECTION_NODE          = Node.CDATA_SECTION_NODE = 4;\r\nvar ENTITY_REFERENCE_NODE       = Node.ENTITY_REFERENCE_NODE = 5;\r\nvar ENTITY_NODE                 = Node.ENTITY_NODE = 6;\r\nvar PROCESSING_INSTRUCTION_NODE = Node.PROCESSING_INSTRUCTION_NODE = 7;\r\nvar COMMENT_NODE                = Node.COMMENT_NODE = 8;\r\nvar DOCUMENT_NODE               = Node.DOCUMENT_NODE = 9;\r\nvar DOCUMENT_TYPE_NODE          = Node.DOCUMENT_TYPE_NODE = 10;\r\nvar DOCUMENT_FRAGMENT_NODE      = Node.DOCUMENT_FRAGMENT_NODE = 11;\r\nvar NOTATION_NODE               = Node.NOTATION_NODE = 12;\r\n\r\nvar DOCUMENT_POSITION_DISCONNECTED            = Node.DOCUMENT_POSITION_DISCONNECTED = 0x01;\r\nvar DOCUMENT_POSITION_PRECEDING               = Node.DOCUMENT_POSITION_PRECEDING = 0x02;\r\nvar DOCUMENT_POSITION_FOLLOWING               = Node.DOCUMENT_POSITION_FOLLOWING = 0x04;\r\nvar DOCUMENT_POSITION_CONTAINS                = Node.DOCUMENT_POSITION_CONTAINS = 0x08;\r\nvar DOCUMENT_POSITION_CONTAINED_BY            = Node.DOCUMENT_POSITION_CONTAINED_BY = 0x10;\r\nvar DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC = Node.DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC = 0x20;\r\n\r\nNode.prototype = Object.create(EventTarget.prototype, {\r\n\r\n  // Node that are not inserted into the tree inherit a null parent\r\n\r\n  // XXX: the baseURI attribute is defined by dom core, but\r\n  // a correct implementation of it requires HTML features, so\r\n  // we'll come back to this later.\r\n  baseURI: { get: utils.nyi },\r\n\r\n  parentElement: { get: function() {\r\n    return (this.parentNode && this.parentNode.nodeType===ELEMENT_NODE) ? this.parentNode : null;\r\n  }},\r\n\r\n  hasChildNodes: { value: utils.shouldOverride },\r\n\r\n  firstChild: { get: utils.shouldOverride },\r\n\r\n  lastChild: { get: utils.shouldOverride },\r\n\r\n  isConnected: {\r\n    get: function () {\r\n      let node = this;\r\n      while (node != null) {\r\n        if (node.nodeType === Node.DOCUMENT_NODE) {\r\n          return true;\r\n        }\r\n\r\n        node = node.parentNode;\r\n        if (node != null && node.nodeType === Node.DOCUMENT_FRAGMENT_NODE) {\r\n          node = node.host;\r\n        }\r\n      }\r\n      return false;\r\n    },\r\n  },\r\n\r\n  previousSibling: { get: function() {\r\n    var parent = this.parentNode;\r\n    if (!parent) return null;\r\n    if (this === parent.firstChild) return null;\r\n    return this._previousSibling;\r\n  }},\r\n\r\n  nextSibling: { get: function() {\r\n    var parent = this.parentNode, next = this._nextSibling;\r\n    if (!parent) return null;\r\n    if (next === parent.firstChild) return null;\r\n    return next;\r\n  }},\r\n\r\n  textContent: {\r\n    // Should override for DocumentFragment/Element/Attr/Text/PI/Comment\r\n    get: function() { return null; },\r\n    set: function(v) { /* do nothing */ },\r\n  },\r\n\r\n  innerText: {\r\n    // Should override for DocumentFragment/Element/Attr/Text/PI/Comment\r\n    get: function() { return null; },\r\n    set: function(v) { /* do nothing */ },\r\n  },\r\n\r\n  _countChildrenOfType: { value: function(type) {\r\n    var sum = 0;\r\n    for (var kid = this.firstChild; kid !== null; kid = kid.nextSibling) {\r\n      if (kid.nodeType === type) sum++;\r\n    }\r\n    return sum;\r\n  }},\r\n\r\n  _ensureInsertValid: { value: function _ensureInsertValid(node, child, isPreinsert) {\r\n    var parent = this, i, kid;\r\n    if (!node.nodeType) throw new TypeError('not a node');\r\n    // 1. If parent is not a Document, DocumentFragment, or Element\r\n    // node, throw a HierarchyRequestError.\r\n    switch (parent.nodeType) {\r\n    case DOCUMENT_NODE:\r\n    case DOCUMENT_FRAGMENT_NODE:\r\n    case ELEMENT_NODE:\r\n      break;\r\n    default: utils.HierarchyRequestError();\r\n    }\r\n    // 2. If node is a host-including inclusive ancestor of parent,\r\n    // throw a HierarchyRequestError.\r\n    if (node.isAncestor(parent)) utils.HierarchyRequestError();\r\n    // 3. If child is not null and its parent is not parent, then\r\n    // throw a NotFoundError. (replaceChild omits the 'child is not null'\r\n    // and throws a TypeError here if child is null.)\r\n    if (child !== null || !isPreinsert) {\r\n      if (child.parentNode !== parent) utils.NotFoundError();\r\n    }\r\n    // 4. If node is not a DocumentFragment, DocumentType, Element,\r\n    // Text, ProcessingInstruction, or Comment node, throw a\r\n    // HierarchyRequestError.\r\n    switch (node.nodeType) {\r\n    case DOCUMENT_FRAGMENT_NODE:\r\n    case DOCUMENT_TYPE_NODE:\r\n    case ELEMENT_NODE:\r\n    case TEXT_NODE:\r\n    case PROCESSING_INSTRUCTION_NODE:\r\n    case COMMENT_NODE:\r\n      break;\r\n    default: utils.HierarchyRequestError();\r\n    }\r\n    // 5. If either node is a Text node and parent is a document, or\r\n    // node is a doctype and parent is not a document, throw a\r\n    // HierarchyRequestError.\r\n    // 6. If parent is a document, and any of the statements below, switched\r\n    // on node, are true, throw a HierarchyRequestError.\r\n    if (parent.nodeType === DOCUMENT_NODE) {\r\n      switch (node.nodeType) {\r\n      case TEXT_NODE:\r\n        utils.HierarchyRequestError();\r\n        break;\r\n      case DOCUMENT_FRAGMENT_NODE:\r\n        // 6a1. If node has more than one element child or has a Text\r\n        // node child.\r\n        if (node._countChildrenOfType(TEXT_NODE) > 0)\r\n          utils.HierarchyRequestError();\r\n        switch (node._countChildrenOfType(ELEMENT_NODE)) {\r\n        case 0:\r\n          break;\r\n        case 1:\r\n          // 6a2. Otherwise, if node has one element child and either\r\n          // parent has an element child, child is a doctype, or child\r\n          // is not null and a doctype is following child. [preinsert]\r\n          // 6a2. Otherwise, if node has one element child and either\r\n          // parent has an element child that is not child or a\r\n          // doctype is following child. [replaceWith]\r\n          if (child !== null /* always true here for replaceWith */) {\r\n            if (isPreinsert && child.nodeType === DOCUMENT_TYPE_NODE)\r\n              utils.HierarchyRequestError();\r\n            for (kid = child.nextSibling; kid !== null; kid = kid.nextSibling) {\r\n              if (kid.nodeType === DOCUMENT_TYPE_NODE)\r\n                utils.HierarchyRequestError();\r\n            }\r\n          }\r\n          i = parent._countChildrenOfType(ELEMENT_NODE);\r\n          if (isPreinsert) {\r\n            // \"parent has an element child\"\r\n            if (i > 0)\r\n              utils.HierarchyRequestError();\r\n          } else {\r\n            // \"parent has an element child that is not child\"\r\n            if (i > 1 || (i === 1 && child.nodeType !== ELEMENT_NODE))\r\n              utils.HierarchyRequestError();\r\n          }\r\n          break;\r\n        default: // 6a1, continued. (more than one Element child)\r\n          utils.HierarchyRequestError();\r\n        }\r\n        break;\r\n      case ELEMENT_NODE:\r\n        // 6b. parent has an element child, child is a doctype, or\r\n        // child is not null and a doctype is following child. [preinsert]\r\n        // 6b. parent has an element child that is not child or a\r\n        // doctype is following child. [replaceWith]\r\n        if (child !== null /* always true here for replaceWith */) {\r\n          if (isPreinsert && child.nodeType === DOCUMENT_TYPE_NODE)\r\n            utils.HierarchyRequestError();\r\n          for (kid = child.nextSibling; kid !== null; kid = kid.nextSibling) {\r\n            if (kid.nodeType === DOCUMENT_TYPE_NODE)\r\n              utils.HierarchyRequestError();\r\n          }\r\n        }\r\n        i = parent._countChildrenOfType(ELEMENT_NODE);\r\n        if (isPreinsert) {\r\n          // \"parent has an element child\"\r\n          if (i > 0)\r\n            utils.HierarchyRequestError();\r\n        } else {\r\n          // \"parent has an element child that is not child\"\r\n          if (i > 1 || (i === 1 && child.nodeType !== ELEMENT_NODE))\r\n            utils.HierarchyRequestError();\r\n        }\r\n        break;\r\n      case DOCUMENT_TYPE_NODE:\r\n        // 6c. parent has a doctype child, child is non-null and an\r\n        // element is preceding child, or child is null and parent has\r\n        // an element child. [preinsert]\r\n        // 6c. parent has a doctype child that is not child, or an\r\n        // element is preceding child. [replaceWith]\r\n        if (child === null) {\r\n          if (parent._countChildrenOfType(ELEMENT_NODE))\r\n            utils.HierarchyRequestError();\r\n        } else {\r\n          // child is always non-null for [replaceWith] case\r\n          for (kid = parent.firstChild; kid !== null; kid = kid.nextSibling) {\r\n            if (kid === child) break;\r\n            if (kid.nodeType === ELEMENT_NODE)\r\n              utils.HierarchyRequestError();\r\n          }\r\n        }\r\n        i = parent._countChildrenOfType(DOCUMENT_TYPE_NODE);\r\n        if (isPreinsert) {\r\n          // \"parent has an doctype child\"\r\n          if (i > 0)\r\n            utils.HierarchyRequestError();\r\n        } else {\r\n          // \"parent has an doctype child that is not child\"\r\n          if (i > 1 || (i === 1 && child.nodeType !== DOCUMENT_TYPE_NODE))\r\n            utils.HierarchyRequestError();\r\n        }\r\n        break;\r\n      }\r\n    } else {\r\n      // 5, continued: (parent is not a document)\r\n      if (node.nodeType === DOCUMENT_TYPE_NODE) utils.HierarchyRequestError();\r\n    }\r\n  }},\r\n\r\n  insertBefore: { value: function insertBefore(node, child) {\r\n    var parent = this;\r\n    // 1. Ensure pre-insertion validity\r\n    parent._ensureInsertValid(node, child, true);\r\n    // 2. Let reference child be child.\r\n    var refChild = child;\r\n    // 3. If reference child is node, set it to node's next sibling\r\n    if (refChild === node) { refChild = node.nextSibling; }\r\n    // 4. Adopt node into parent's node document.\r\n    parent.doc.adoptNode(node);\r\n    // 5. Insert node into parent before reference child.\r\n    node._insertOrReplace(parent, refChild, false);\r\n    // 6. Return node\r\n    return node;\r\n  }},\r\n\r\n\r\n  appendChild: { value: function(child) {\r\n    // This invokes _appendChild after doing validity checks.\r\n    return this.insertBefore(child, null);\r\n  }},\r\n\r\n  _appendChild: { value: function(child) {\r\n    child._insertOrReplace(this, null, false);\r\n  }},\r\n\r\n  removeChild: { value: function removeChild(child) {\r\n    var parent = this;\r\n    if (!child.nodeType) throw new TypeError('not a node');\r\n    if (child.parentNode !== parent) utils.NotFoundError();\r\n    child.remove();\r\n    return child;\r\n  }},\r\n\r\n  // To replace a `child` with `node` within a `parent` (this)\r\n  replaceChild: { value: function replaceChild(node, child) {\r\n    var parent = this;\r\n    // Ensure validity (slight differences from pre-insertion check)\r\n    parent._ensureInsertValid(node, child, false);\r\n    // Adopt node into parent's node document.\r\n    if (node.doc !== parent.doc) {\r\n      // XXX adoptNode has side-effect of removing node from its parent\r\n      // and generating a mutation event, thus causing the _insertOrReplace\r\n      // to generate two deletes and an insert instead of a 'move'\r\n      // event.  It looks like the new MutationObserver stuff avoids\r\n      // this problem, but for now let's only adopt (ie, remove `node`\r\n      // from its parent) here if we need to.\r\n      parent.doc.adoptNode(node);\r\n    }\r\n    // Do the replace.\r\n    node._insertOrReplace(parent, child, true);\r\n    return child;\r\n  }},\r\n\r\n  // See: http://ejohn.org/blog/comparing-document-position/\r\n  contains: { value: function contains(node) {\r\n    if (node === null) { return false; }\r\n    if (this === node) { return true; /* inclusive descendant */ }\r\n    /* jshint bitwise: false */\r\n    return (this.compareDocumentPosition(node) &\r\n            DOCUMENT_POSITION_CONTAINED_BY) !== 0;\r\n  }},\r\n\r\n  compareDocumentPosition: { value: function compareDocumentPosition(that){\r\n    // Basic algorithm for finding the relative position of two nodes.\r\n    // Make a list the ancestors of each node, starting with the\r\n    // document element and proceeding down to the nodes themselves.\r\n    // Then, loop through the lists, looking for the first element\r\n    // that differs.  The order of those two elements give the\r\n    // order of their descendant nodes.  Or, if one list is a prefix\r\n    // of the other one, then that node contains the other.\r\n\r\n    if (this === that) return 0;\r\n\r\n    // If they're not owned by the same document or if one is rooted\r\n    // and one is not, then they're disconnected.\r\n    if (this.doc !== that.doc ||\r\n      this.rooted !== that.rooted)\r\n      return (DOCUMENT_POSITION_DISCONNECTED +\r\n          DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC);\r\n\r\n    // Get arrays of ancestors for this and that\r\n    var these = [], those = [];\r\n    for(var n = this; n !== null; n = n.parentNode) these.push(n);\r\n    for(n = that; n !== null; n = n.parentNode) those.push(n);\r\n    these.reverse();  // So we start with the outermost\r\n    those.reverse();\r\n\r\n    if (these[0] !== those[0]) // No common ancestor\r\n      return (DOCUMENT_POSITION_DISCONNECTED +\r\n          DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC);\r\n\r\n    n = Math.min(these.length, those.length);\r\n    for(var i = 1; i < n; i++) {\r\n      if (these[i] !== those[i]) {\r\n        // We found two different ancestors, so compare\r\n        // their positions\r\n        if (these[i].index < those[i].index)\r\n          return DOCUMENT_POSITION_FOLLOWING;\r\n        else\r\n          return DOCUMENT_POSITION_PRECEDING;\r\n      }\r\n    }\r\n\r\n    // If we get to here, then one of the nodes (the one with the\r\n    // shorter list of ancestors) contains the other one.\r\n    if (these.length < those.length)\r\n      return (DOCUMENT_POSITION_FOLLOWING +\r\n          DOCUMENT_POSITION_CONTAINED_BY);\r\n    else\r\n      return (DOCUMENT_POSITION_PRECEDING +\r\n          DOCUMENT_POSITION_CONTAINS);\r\n  }},\r\n\r\n  isSameNode: {value : function isSameNode(node) {\r\n    return this === node;\r\n  }},\r\n\r\n\r\n  // This method implements the generic parts of node equality testing\r\n  // and defers to the (non-recursive) type-specific isEqual() method\r\n  // defined by subclasses\r\n  isEqualNode: { value: function isEqualNode(node) {\r\n    if (!node) return false;\r\n    if (node.nodeType !== this.nodeType) return false;\r\n\r\n    // Check type-specific properties for equality\r\n    if (!this.isEqual(node)) return false;\r\n\r\n    // Now check children for number and equality\r\n    for (var c1 = this.firstChild, c2 = node.firstChild;\r\n         c1 && c2;\r\n         c1 = c1.nextSibling, c2 = c2.nextSibling) {\r\n      if (!c1.isEqualNode(c2)) return false;\r\n    }\r\n    return c1 === null && c2 === null;\r\n  }},\r\n\r\n  // This method delegates shallow cloning to a clone() method\r\n  // that each concrete subclass must implement\r\n  cloneNode: { value: function(deep) {\r\n    // Clone this node\r\n    var clone = this.clone();\r\n\r\n    // Handle the recursive case if necessary\r\n    if (deep) {\r\n      for (var kid = this.firstChild; kid !== null; kid = kid.nextSibling) {\r\n        clone._appendChild(kid.cloneNode(true));\r\n      }\r\n    }\r\n\r\n    return clone;\r\n  }},\r\n\r\n  lookupPrefix: { value: function lookupPrefix(ns) {\r\n    var e;\r\n    if (ns === '' || ns === null || ns === undefined) return null;\r\n    switch(this.nodeType) {\r\n    case ELEMENT_NODE:\r\n      return this._lookupNamespacePrefix(ns, this);\r\n    case DOCUMENT_NODE:\r\n      e = this.documentElement;\r\n      return e ? e.lookupPrefix(ns) : null;\r\n    case ENTITY_NODE:\r\n    case NOTATION_NODE:\r\n    case DOCUMENT_FRAGMENT_NODE:\r\n    case DOCUMENT_TYPE_NODE:\r\n      return null;\r\n    case ATTRIBUTE_NODE:\r\n      e = this.ownerElement;\r\n      return e ? e.lookupPrefix(ns) : null;\r\n    default:\r\n      e = this.parentElement;\r\n      return e ? e.lookupPrefix(ns) : null;\r\n    }\r\n  }},\r\n\r\n\r\n  lookupNamespaceURI: {value: function lookupNamespaceURI(prefix) {\r\n    if (prefix === '' || prefix === undefined) { prefix = null; }\r\n    var e;\r\n    switch(this.nodeType) {\r\n    case ELEMENT_NODE:\r\n      return utils.shouldOverride();\r\n    case DOCUMENT_NODE:\r\n      e = this.documentElement;\r\n      return e ? e.lookupNamespaceURI(prefix) : null;\r\n    case ENTITY_NODE:\r\n    case NOTATION_NODE:\r\n    case DOCUMENT_TYPE_NODE:\r\n    case DOCUMENT_FRAGMENT_NODE:\r\n      return null;\r\n    case ATTRIBUTE_NODE:\r\n      e = this.ownerElement;\r\n      return e ? e.lookupNamespaceURI(prefix) : null;\r\n    default:\r\n      e = this.parentElement;\r\n      return e ? e.lookupNamespaceURI(prefix) : null;\r\n    }\r\n  }},\r\n\r\n  isDefaultNamespace: { value: function isDefaultNamespace(ns) {\r\n    if (ns === '' || ns === undefined) { ns = null; }\r\n    var defaultNamespace = this.lookupNamespaceURI(null);\r\n    return (defaultNamespace === ns);\r\n  }},\r\n\r\n  // Utility methods for nodes.  Not part of the DOM\r\n\r\n  // Return the index of this node in its parent.\r\n  // Throw if no parent, or if this node is not a child of its parent\r\n  index: { get: function() {\r\n    var parent = this.parentNode;\r\n    if (this === parent.firstChild) return 0; // fast case\r\n    var kids = parent.childNodes;\r\n    if (this._index === undefined || kids[this._index] !== this) {\r\n      // Ensure that we don't have an O(N^2) blowup if none of the\r\n      // kids have defined indices yet and we're traversing via\r\n      // nextSibling or previousSibling\r\n      for (var i=0; i<kids.length; i++) {\r\n        kids[i]._index = i;\r\n      }\r\n      utils.assert(kids[this._index] === this);\r\n    }\r\n    return this._index;\r\n  }},\r\n\r\n  // Return true if this node is equal to or is an ancestor of that node\r\n  // Note that nodes are considered to be ancestors of themselves\r\n  isAncestor: { value: function(that) {\r\n    // If they belong to different documents, then they're unrelated.\r\n    if (this.doc !== that.doc) return false;\r\n    // If one is rooted and one isn't then they're not related\r\n    if (this.rooted !== that.rooted) return false;\r\n\r\n    // Otherwise check by traversing the parentNode chain\r\n    for(var e = that; e; e = e.parentNode) {\r\n      if (e === this) return true;\r\n    }\r\n    return false;\r\n  }},\r\n\r\n  // DOMINO Changed the behavior to conform with the specs. See:\r\n  // https://groups.google.com/d/topic/mozilla.dev.platform/77sIYcpdDmc/discussion\r\n  ensureSameDoc: { value: function(that) {\r\n    if (that.ownerDocument === null) {\r\n      that.ownerDocument = this.doc;\r\n    }\r\n    else if(that.ownerDocument !== this.doc) {\r\n      utils.WrongDocumentError();\r\n    }\r\n  }},\r\n\r\n  removeChildren: { value: utils.shouldOverride },\r\n\r\n  // Insert this node as a child of parent before the specified child,\r\n  // or insert as the last child of parent if specified child is null,\r\n  // or replace the specified child with this node, firing mutation events as\r\n  // necessary\r\n  _insertOrReplace: { value: function _insertOrReplace(parent, before, isReplace) {\r\n    var child = this, before_index, i;\r\n\r\n    if (child.nodeType === DOCUMENT_FRAGMENT_NODE && child.rooted) {\r\n      utils.HierarchyRequestError();\r\n    }\r\n\r\n    /* Ensure index of `before` is cached before we (possibly) remove it. */\r\n    if (parent._childNodes) {\r\n      before_index = (before === null) ? parent._childNodes.length :\r\n        before.index; /* ensure _index is cached */\r\n\r\n      // If we are already a child of the specified parent, then\r\n      // the index may have to be adjusted.\r\n      if (child.parentNode === parent) {\r\n        var child_index = child.index;\r\n        // If the child is before the spot it is to be inserted at,\r\n        // then when it is removed, the index of that spot will be\r\n        // reduced.\r\n        if (child_index < before_index) {\r\n          before_index--;\r\n        }\r\n      }\r\n    }\r\n\r\n    // Delete the old child\r\n    if (isReplace) {\r\n      if (before.rooted) before.doc.mutateRemove(before);\r\n      before.parentNode = null;\r\n    }\r\n\r\n    var n = before;\r\n    if (n === null) { n = parent.firstChild; }\r\n\r\n    // If both the child and the parent are rooted, then we want to\r\n    // transplant the child without uprooting and rerooting it.\r\n    var bothRooted = child.rooted && parent.rooted;\r\n    if (child.nodeType === DOCUMENT_FRAGMENT_NODE) {\r\n      var spliceArgs = [0, isReplace ? 1 : 0], next;\r\n      for (var kid = child.firstChild; kid !== null; kid = next) {\r\n        next = kid.nextSibling;\r\n        spliceArgs.push(kid);\r\n        kid.parentNode = parent;\r\n      }\r\n      var len = spliceArgs.length;\r\n      // Add all nodes to the new parent, overwriting the old child\r\n      if (isReplace) {\r\n        LinkedList.replace(n, len > 2 ? spliceArgs[2] : null);\r\n      } else if (len > 2 && n !== null) {\r\n        LinkedList.insertBefore(spliceArgs[2], n);\r\n      }\r\n      if (parent._childNodes) {\r\n        spliceArgs[0] = (before === null) ?\r\n          parent._childNodes.length : before._index;\r\n        parent._childNodes.splice.apply(parent._childNodes, spliceArgs);\r\n        for (i=2; i<len; i++) {\r\n          spliceArgs[i]._index = spliceArgs[0] + (i - 2);\r\n        }\r\n      } else if (parent._firstChild === before) {\r\n        if (len > 2) {\r\n          parent._firstChild = spliceArgs[2];\r\n        } else if (isReplace) {\r\n          parent._firstChild = null;\r\n        }\r\n      }\r\n      // Remove all nodes from the document fragment\r\n      if (child._childNodes) {\r\n        child._childNodes.length = 0;\r\n      } else {\r\n        child._firstChild = null;\r\n      }\r\n      // Call the mutation handlers\r\n      // Use spliceArgs since the original array has been destroyed. The\r\n      // liveness guarantee requires us to clone the array so that\r\n      // references to the childNodes of the DocumentFragment will be empty\r\n      // when the insertion handlers are called.\r\n      if (parent.rooted) {\r\n        parent.modify();\r\n        for (i = 2; i < len; i++) {\r\n          parent.doc.mutateInsert(spliceArgs[i]);\r\n        }\r\n      }\r\n    } else {\r\n      if (before === child) { return; }\r\n      if (bothRooted) {\r\n        // Remove the child from its current position in the tree\r\n        // without calling remove(), since we don't want to uproot it.\r\n        child._remove();\r\n      } else if (child.parentNode) {\r\n        child.remove();\r\n      }\r\n\r\n      // Insert it as a child of its new parent\r\n      child.parentNode = parent;\r\n      if (isReplace) {\r\n        LinkedList.replace(n, child);\r\n        if (parent._childNodes) {\r\n          child._index = before_index;\r\n          parent._childNodes[before_index] = child;\r\n        } else if (parent._firstChild === before) {\r\n          parent._firstChild = child;\r\n        }\r\n      } else {\r\n        if (n !== null) {\r\n          LinkedList.insertBefore(child, n);\r\n        }\r\n        if (parent._childNodes) {\r\n          child._index = before_index;\r\n          parent._childNodes.splice(before_index, 0, child);\r\n        } else if (parent._firstChild === before) {\r\n          parent._firstChild = child;\r\n        }\r\n      }\r\n      if (bothRooted) {\r\n        parent.modify();\r\n        // Generate a move mutation event\r\n        parent.doc.mutateMove(child);\r\n      } else if (parent.rooted) {\r\n        parent.modify();\r\n        parent.doc.mutateInsert(child);\r\n      }\r\n    }\r\n  }},\r\n\r\n\r\n  // Return the lastModTime value for this node. (For use as a\r\n  // cache invalidation mechanism. If the node does not already\r\n  // have one, initialize it from the owner document's modclock\r\n  // property. (Note that modclock does not return the actual\r\n  // time; it is simply a counter incremented on each document\r\n  // modification)\r\n  lastModTime: { get: function() {\r\n    if (!this._lastModTime) {\r\n      this._lastModTime = this.doc.modclock;\r\n    }\r\n    return this._lastModTime;\r\n  }},\r\n\r\n  // Increment the owner document's modclock and use the new\r\n  // value to update the lastModTime value for this node and\r\n  // all of its ancestors. Nodes that have never had their\r\n  // lastModTime value queried do not need to have a\r\n  // lastModTime property set on them since there is no\r\n  // previously queried value to ever compare the new value\r\n  // against, so only update nodes that already have a\r\n  // _lastModTime property.\r\n  modify: { value: function() {\r\n    if (this.doc.modclock) { // Skip while doc.modclock == 0\r\n      var time = ++this.doc.modclock;\r\n      for(var n = this; n; n = n.parentElement) {\r\n        if (n._lastModTime) {\r\n          n._lastModTime = time;\r\n        }\r\n      }\r\n    }\r\n  }},\r\n\r\n  // This attribute is not part of the DOM but is quite helpful.\r\n  // It returns the document with which a node is associated.  Usually\r\n  // this is the ownerDocument. But ownerDocument is null for the\r\n  // document object itself, so this is a handy way to get the document\r\n  // regardless of the node type\r\n  doc: { get: function() {\r\n    return this.ownerDocument || this;\r\n  }},\r\n\r\n\r\n  // If the node has a nid (node id), then it is rooted in a document\r\n  rooted: { get: function() {\r\n    return !!this._nid;\r\n  }},\r\n\r\n  normalize: { value: function() {\r\n    var next;\r\n    for (var child=this.firstChild; child !== null; child=next) {\r\n      next = child.nextSibling;\r\n\r\n      if (child.normalize) {\r\n        child.normalize();\r\n      }\r\n\r\n      if (child.nodeType !== Node.TEXT_NODE) {\r\n        continue;\r\n      }\r\n\r\n      if (child.nodeValue === \"\") {\r\n        this.removeChild(child);\r\n        continue;\r\n      }\r\n\r\n      var prevChild = child.previousSibling;\r\n      if (prevChild === null) {\r\n        continue;\r\n      } else if (prevChild.nodeType === Node.TEXT_NODE) {\r\n        // merge this with previous and remove the child\r\n        prevChild.appendData(child.nodeValue);\r\n        this.removeChild(child);\r\n      }\r\n    }\r\n  }},\r\n\r\n  // Convert the children of a node to an HTML string.\r\n  // This is used by the innerHTML getter\r\n  // The serialization spec is at:\r\n  // http://www.whatwg.org/specs/web-apps/current-work/multipage/the-end.html#serializing-html-fragments\r\n  //\r\n  // The serialization logic is intentionally implemented in a separate\r\n  // `NodeUtils` helper instead of the more obvious choice of a private\r\n  // `_serializeOne()` method on the `Node.prototype` in order to avoid\r\n  // the megamorphic `this._serializeOne` property access, which reduces\r\n  // performance unnecessarily. If you need specialized behavior for a\r\n  // certain subclass, you'll need to implement that in `NodeUtils`.\r\n  // See https://github.com/fgnass/domino/pull/142 for more information.\r\n  serialize: { value: function() {\r\n    if (this._innerHTML) {\r\n      return this._innerHTML;\r\n    }\r\n    var s = '';\r\n    for (var kid = this.firstChild; kid !== null; kid = kid.nextSibling) {\r\n      s += NodeUtils.serializeOne(kid, this);\r\n    }\r\n    return s;\r\n  }},\r\n\r\n  // Non-standard, but often useful for debugging.\r\n  outerHTML: {\r\n    get: function() {\r\n      return NodeUtils.serializeOne(this, { nodeType: 0 });\r\n    },\r\n    set: utils.nyi,\r\n  },\r\n\r\n  // mirror node type properties in the prototype, so they are present\r\n  // in instances of Node (and subclasses)\r\n  ELEMENT_NODE:                { value: ELEMENT_NODE },\r\n  ATTRIBUTE_NODE:              { value: ATTRIBUTE_NODE },\r\n  TEXT_NODE:                   { value: TEXT_NODE },\r\n  CDATA_SECTION_NODE:          { value: CDATA_SECTION_NODE },\r\n  ENTITY_REFERENCE_NODE:       { value: ENTITY_REFERENCE_NODE },\r\n  ENTITY_NODE:                 { value: ENTITY_NODE },\r\n  PROCESSING_INSTRUCTION_NODE: { value: PROCESSING_INSTRUCTION_NODE },\r\n  COMMENT_NODE:                { value: COMMENT_NODE },\r\n  DOCUMENT_NODE:               { value: DOCUMENT_NODE },\r\n  DOCUMENT_TYPE_NODE:          { value: DOCUMENT_TYPE_NODE },\r\n  DOCUMENT_FRAGMENT_NODE:      { value: DOCUMENT_FRAGMENT_NODE },\r\n  NOTATION_NODE:               { value: NOTATION_NODE },\r\n\r\n  DOCUMENT_POSITION_DISCONNECTED: { value: DOCUMENT_POSITION_DISCONNECTED },\r\n  DOCUMENT_POSITION_PRECEDING:    { value: DOCUMENT_POSITION_PRECEDING },\r\n  DOCUMENT_POSITION_FOLLOWING:    { value: DOCUMENT_POSITION_FOLLOWING },\r\n  DOCUMENT_POSITION_CONTAINS:     { value: DOCUMENT_POSITION_CONTAINS },\r\n  DOCUMENT_POSITION_CONTAINED_BY: { value: DOCUMENT_POSITION_CONTAINED_BY },\r\n  DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC: { value: DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC },\r\n});\r\n", "/* jshint esversion: 6 */\r\n\"use strict\";\r\n\r\nmodule.exports = class NodeList extends Array {\r\n    constructor(a) {\r\n        super((a && a.length) || 0);\r\n        if (a) {\r\n            for (var idx in a) { this[idx] = a[idx]; }\r\n        }\r\n    }\r\n    item(i) { return this[i] || null; }\r\n};\r\n", "\"use strict\";\r\n\r\n// No support for subclassing array, return an actual Array object.\r\nfunction item(i) {\r\n    /* jshint validthis: true */\r\n    return this[i] || null;\r\n}\r\n\r\nfunction NodeList(a) {\r\n    if (!a) a = [];\r\n    a.item = item;\r\n    return a;\r\n}\r\n\r\nmodule.exports = NodeList;\r\n", "\"use strict\";\r\n\r\nvar NodeList;\r\n\r\ntry {\r\n    // Attempt to use ES6-style Array subclass if possible.\r\n    NodeList = require('./NodeList.es6.js');\r\n} catch (e) {\r\n    // No support for subclassing array, return an actual Array object.\r\n    NodeList = require('./NodeList.es5.js');\r\n}\r\n\r\nmodule.exports = NodeList;\r\n", "\"use strict\";\r\nmodule.exports = ContainerNode;\r\n\r\nvar Node = require('./Node');\r\nvar NodeList = require('./NodeList');\r\n\r\n// This class defines common functionality for node subtypes that\r\n// can have children\r\n\r\nfunction ContainerNode() {\r\n  Node.call(this);\r\n  this._firstChild = this._childNodes = null;\r\n}\r\n\r\n// Primary representation is a circular linked list of siblings\r\nContainerNode.prototype = Object.create(Node.prototype, {\r\n\r\n  hasChildNodes: { value: function() {\r\n    if (this._childNodes) {\r\n      return this._childNodes.length > 0;\r\n    }\r\n    return this._firstChild !== null;\r\n  }},\r\n\r\n  childNodes: { get: function() {\r\n    this._ensureChildNodes();\r\n    return this._childNodes;\r\n  }},\r\n\r\n  firstChild: { get: function() {\r\n    if (this._childNodes) {\r\n      return this._childNodes.length === 0 ? null : this._childNodes[0];\r\n    }\r\n    return this._firstChild;\r\n  }},\r\n\r\n  lastChild: { get: function() {\r\n    var kids = this._childNodes, first;\r\n    if (kids) {\r\n      return kids.length === 0 ? null: kids[kids.length-1];\r\n    }\r\n    first = this._firstChild;\r\n    if (first === null) { return null; }\r\n    return first._previousSibling; // circular linked list\r\n  }},\r\n\r\n  _ensureChildNodes: { value: function() {\r\n    if (this._childNodes) { return; }\r\n    var first = this._firstChild,\r\n        kid = first,\r\n        childNodes = this._childNodes = new NodeList();\r\n    if (first) do {\r\n      childNodes.push(kid);\r\n      kid = kid._nextSibling;\r\n    } while (kid !== first); // circular linked list\r\n    this._firstChild = null; // free memory\r\n  }},\r\n\r\n  // Remove all of this node's children.  This is a minor\r\n  // optimization that only calls modify() once.\r\n  removeChildren: { value: function removeChildren() {\r\n    var root = this.rooted ? this.ownerDocument : null,\r\n        next = this.firstChild,\r\n        kid;\r\n    while (next !== null) {\r\n      kid = next;\r\n      next = kid.nextSibling;\r\n\r\n      if (root) root.mutateRemove(kid);\r\n      kid.parentNode = null;\r\n    }\r\n    if (this._childNodes) {\r\n      this._childNodes.length = 0;\r\n    } else {\r\n      this._firstChild = null;\r\n    }\r\n    this.modify(); // Update last modified type once only\r\n  }},\r\n\r\n});\r\n", "\"use strict\";\r\n// This grammar is from the XML and XML Namespace specs. It specifies whether\r\n// a string (such as an element or attribute name) is a valid Name or QName.\r\n//\r\n// Name           ::= NameStartChar (NameChar)*\r\n// NameStartChar  ::= \":\" | [A-Z] | \"_\" | [a-z] |\r\n//                    [#xC0-#xD6] | [#xD8-#xF6] | [#xF8-#x2FF] |\r\n//                    [#x370-#x37D] | [#x37F-#x1FFF] |\r\n//                    [#x200C-#x200D] | [#x2070-#x218F] |\r\n//                    [#x2C00-#x2FEF] | [#x3001-#xD7FF] |\r\n//                    [#xF900-#xFDCF] | [#xFDF0-#xFFFD] |\r\n//                    [#x10000-#xEFFFF]\r\n//\r\n// NameChar       ::= NameStartChar | \"-\" | \".\" | [0-9] |\r\n//                    #xB7 | [#x0300-#x036F] | [#x203F-#x2040]\r\n//\r\n// QName          ::= PrefixedName| UnprefixedName\r\n// PrefixedName   ::= Prefix ':' LocalPart\r\n// UnprefixedName ::= LocalPart\r\n// Prefix         ::= NCName\r\n// LocalPart      ::= NCName\r\n// NCName         ::= Name - (Char* ':' Char*)\r\n//                    # An XML Name, minus the \":\"\r\n//\r\n\r\nexports.isValidName = isValidName;\r\nexports.isValidQName = isValidQName;\r\n\r\n// Most names will be ASCII only. Try matching against simple regexps first\r\nvar simplename = /^[_:A-Za-z][-.:\\w]+$/;\r\nvar simpleqname = /^([_A-Za-z][-.\\w]+|[_A-Za-z][-.\\w]+:[_A-Za-z][-.\\w]+)$/;\r\n\r\n// If the regular expressions above fail, try more complex ones that work\r\n// for any identifiers using codepoints from the Unicode BMP\r\nvar ncnamestartchars = \"_A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02ff\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\";\r\nvar ncnamechars = \"-._A-Za-z0-9\\u00B7\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02ff\\u0300-\\u037D\\u037F-\\u1FFF\\u200C\\u200D\\u203f\\u2040\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\";\r\n\r\nvar ncname = \"[\" + ncnamestartchars + \"][\" + ncnamechars + \"]*\";\r\nvar namestartchars = ncnamestartchars + \":\";\r\nvar namechars = ncnamechars + \":\";\r\nvar name = new RegExp(\"^[\" + namestartchars + \"]\" + \"[\" + namechars + \"]*$\");\r\nvar qname = new RegExp(\"^(\" + ncname + \"|\" + ncname + \":\" + ncname + \")$\");\r\n\r\n// XML says that these characters are also legal:\r\n// [#x10000-#xEFFFF].  So if the patterns above fail, and the\r\n// target string includes surrogates, then try the following\r\n// patterns that allow surrogates and then run an extra validation\r\n// step to make sure that the surrogates are in valid pairs and in\r\n// the right range.  Note that since the characters \\uf0000 to \\u1f0000\r\n// are not allowed, it means that the high surrogate can only go up to\r\n// \\uDB7f instead of \\uDBFF.\r\nvar hassurrogates = /[\\uD800-\\uDB7F\\uDC00-\\uDFFF]/;\r\nvar surrogatechars = /[\\uD800-\\uDB7F\\uDC00-\\uDFFF]/g;\r\nvar surrogatepairs = /[\\uD800-\\uDB7F][\\uDC00-\\uDFFF]/g;\r\n\r\n// Modify the variables above to allow surrogates\r\nncnamestartchars += \"\\uD800-\\uDB7F\\uDC00-\\uDFFF\";\r\nncnamechars += \"\\uD800-\\uDB7F\\uDC00-\\uDFFF\";\r\nncname = \"[\" + ncnamestartchars + \"][\" + ncnamechars + \"]*\";\r\nnamestartchars = ncnamestartchars + \":\";\r\nnamechars = ncnamechars + \":\";\r\n\r\n// Build another set of regexps that include surrogates\r\nvar surrogatename = new RegExp(\"^[\" + namestartchars + \"]\" + \"[\" + namechars + \"]*$\");\r\nvar surrogateqname = new RegExp(\"^(\" + ncname + \"|\" + ncname + \":\" + ncname + \")$\");\r\n\r\nfunction isValidName(s) {\r\n  if (simplename.test(s)) return true; // Plain ASCII\r\n  if (name.test(s)) return true; // Unicode BMP\r\n\r\n  // Maybe the tests above failed because s includes surrogate pairs\r\n  // Most likely, though, they failed for some more basic syntax problem\r\n  if (!hassurrogates.test(s)) return false;\r\n\r\n  // Is the string a valid name if we allow surrogates?\r\n  if (!surrogatename.test(s)) return false;\r\n\r\n  // Finally, are the surrogates all correctly paired up?\r\n  var chars = s.match(surrogatechars), pairs = s.match(surrogatepairs);\r\n  return pairs !== null && 2*pairs.length === chars.length;\r\n}\r\n\r\nfunction isValidQName(s) {\r\n  if (simpleqname.test(s)) return true; // Plain ASCII\r\n  if (qname.test(s)) return true; // Unicode BMP\r\n\r\n  if (!hassurrogates.test(s)) return false;\r\n  if (!surrogateqname.test(s)) return false;\r\n  var chars = s.match(surrogatechars), pairs = s.match(surrogatepairs);\r\n  return pairs !== null && 2*pairs.length === chars.length;\r\n}\r\n", "\"use strict\";\r\nvar utils = require('./utils');\r\n\r\nexports.property = function(attr) {\r\n  if (Array.isArray(attr.type)) {\r\n    var valid = Object.create(null);\r\n    attr.type.forEach(function(val) {\r\n      valid[val.value || val] = val.alias || val;\r\n    });\r\n    var missingValueDefault = attr.missing;\r\n    if (missingValueDefault===undefined) { missingValueDefault = null; }\r\n    var invalidValueDefault = attr.invalid;\r\n    if (invalidValueDefault===undefined) { invalidValueDefault = missingValueDefault; }\r\n    return {\r\n      get: function() {\r\n        var v = this._getattr(attr.name);\r\n        if (v === null) return missingValueDefault;\r\n\r\n        v = valid[v.toLowerCase()];\r\n        if (v !== undefined) return v;\r\n        if (invalidValueDefault !== null) return invalidValueDefault;\r\n        return v;\r\n      },\r\n      set: function(v) {\r\n        this._setattr(attr.name, v);\r\n      }\r\n    };\r\n  }\r\n  else if (attr.type === Boolean) {\r\n    return {\r\n      get: function() {\r\n        return this.hasAttribute(attr.name);\r\n      },\r\n      set: function(v) {\r\n        if (v) {\r\n          this._setattr(attr.name, '');\r\n        }\r\n        else {\r\n          this.removeAttribute(attr.name);\r\n        }\r\n      }\r\n    };\r\n  }\r\n  else if (attr.type === Number ||\r\n           attr.type === \"long\" ||\r\n           attr.type === \"unsigned long\" ||\r\n           attr.type === \"limited unsigned long with fallback\") {\r\n    return numberPropDesc(attr);\r\n  }\r\n  else if (!attr.type || attr.type === String) {\r\n    return {\r\n      get: function() { return this._getattr(attr.name) || ''; },\r\n      set: function(v) {\r\n        if (attr.treatNullAsEmptyString && v === null) { v = ''; }\r\n        this._setattr(attr.name, v);\r\n      }\r\n    };\r\n  }\r\n  else if (typeof attr.type === 'function') {\r\n    return attr.type(attr.name, attr);\r\n  }\r\n  throw new Error('Invalid attribute definition');\r\n};\r\n\r\n// See http://www.whatwg.org/specs/web-apps/current-work/#reflect\r\n//\r\n// defval is the default value. If it is a function, then that function\r\n// will be invoked as a method of the element to obtain the default.\r\n// If no default is specified for a given attribute, then the default\r\n// depends on the type of the attribute, but since this function handles\r\n// 4 integer cases, you must specify the default value in each call\r\n//\r\n// min and max define a valid range for getting the attribute.\r\n//\r\n// setmin defines a minimum value when setting.  If the value is less\r\n// than that, then throw INDEX_SIZE_ERR.\r\n//\r\n// Conveniently, JavaScript's parseInt function appears to be\r\n// compatible with HTML's 'rules for parsing integers'\r\nfunction numberPropDesc(a) {\r\n  var def;\r\n  if(typeof a.default === 'function') {\r\n    def = a.default;\r\n  }\r\n  else if(typeof a.default === 'number') {\r\n    def = function() { return a.default; };\r\n  }\r\n  else {\r\n    def = function() { utils.assert(false, typeof a.default); };\r\n  }\r\n  var unsigned_long = (a.type === 'unsigned long');\r\n  var signed_long = (a.type === 'long');\r\n  var unsigned_fallback = (a.type === 'limited unsigned long with fallback');\r\n  var min = a.min, max = a.max, setmin = a.setmin;\r\n  if (min === undefined) {\r\n    if (unsigned_long) min = 0;\r\n    if (signed_long) min = -0x80000000;\r\n    if (unsigned_fallback) min = 1;\r\n  }\r\n  if (max === undefined) {\r\n    if (unsigned_long || signed_long || unsigned_fallback) max = 0x7FFFFFFF;\r\n  }\r\n\r\n  return {\r\n    get: function() {\r\n      var v = this._getattr(a.name);\r\n      var n = a.float ? parseFloat(v) : parseInt(v, 10);\r\n      if (v === null || !isFinite(n) || (min !== undefined && n < min) || (max !== undefined && n > max)) {\r\n        return def.call(this);\r\n      }\r\n      if (unsigned_long || signed_long || unsigned_fallback) {\r\n        if (!/^[ \\t\\n\\f\\r]*[-+]?[0-9]/.test(v)) { return def.call(this); }\r\n        n = n|0; // jshint ignore:line\r\n      }\r\n      return n;\r\n    },\r\n    set: function(v) {\r\n      if (!a.float) { v = Math.floor(v); }\r\n      if (setmin !== undefined && v < setmin) {\r\n        utils.IndexSizeError(a.name + ' set to ' + v);\r\n      }\r\n      if (unsigned_long) {\r\n        v = (v < 0 || v > 0x7FFFFFFF) ? def.call(this) :\r\n          (v|0);  // jshint ignore:line\r\n      } else if (unsigned_fallback) {\r\n        v = (v < 1 || v > 0x7FFFFFFF) ? def.call(this) :\r\n          (v|0); // jshint ignore:line\r\n      } else if (signed_long) {\r\n        v = (v < -0x80000000 || v > 0x7FFFFFFF) ? def.call(this) :\r\n          (v|0); // jshint ignore:line\r\n      }\r\n      this._setattr(a.name, String(v));\r\n    }\r\n  };\r\n}\r\n\r\n// This is a utility function for setting up change handler functions\r\n// for attributes like 'id' that require special handling when they change.\r\nexports.registerChangeHandler = function(c, name, handler) {\r\n  var p = c.prototype;\r\n\r\n  // If p does not already have its own _attributeChangeHandlers\r\n  // then create one for it, inheriting from the inherited\r\n  // _attributeChangeHandlers. At the top (for the Element class) the\r\n  // _attributeChangeHandlers object will be created with a null prototype.\r\n  if (!Object.prototype.hasOwnProperty.call(p, '_attributeChangeHandlers')) {\r\n    p._attributeChangeHandlers =\r\n      Object.create(p._attributeChangeHandlers || null);\r\n  }\r\n\r\n  p._attributeChangeHandlers[name] = handler;\r\n};\r\n", "\"use strict\";\r\nmodule.exports = FilteredElementList;\r\n\r\nvar Node = require('./Node');\r\n\r\n//\r\n// This file defines node list implementation that lazily traverses\r\n// the document tree (or a subtree rooted at any element) and includes\r\n// only those elements for which a specified filter function returns true.\r\n// It is used to implement the\r\n// {Document,Element}.getElementsBy{TagName,ClassName}{,NS} methods.\r\n//\r\n// XXX this should inherit from NodeList\r\n\r\nfunction FilteredElementList(root, filter) {\r\n  this.root = root;\r\n  this.filter = filter;\r\n  this.lastModTime = root.lastModTime;\r\n  this.done = false;\r\n  this.cache = [];\r\n  this.traverse();\r\n}\r\n\r\nFilteredElementList.prototype = Object.create(Object.prototype, {\r\n  length: { get: function() {\r\n    this.checkcache();\r\n    if (!this.done) this.traverse();\r\n    return this.cache.length;\r\n  } },\r\n\r\n  item: { value: function(n) {\r\n    this.checkcache();\r\n    if (!this.done && n >= this.cache.length) {\r\n      // This can lead to O(N^2) behavior if we stop when we get to n\r\n      // and the caller is iterating through the items in order; so\r\n      // be sure to do the full traverse here.\r\n      this.traverse(/*n*/);\r\n    }\r\n    return this.cache[n];\r\n  } },\r\n\r\n  checkcache: { value: function() {\r\n    if (this.lastModTime !== this.root.lastModTime) {\r\n      // subtree has changed, so invalidate cache\r\n      for (var i = this.cache.length-1; i>=0; i--) {\r\n        this[i] = undefined;\r\n      }\r\n      this.cache.length = 0;\r\n      this.done = false;\r\n      this.lastModTime = this.root.lastModTime;\r\n    }\r\n  } },\r\n\r\n  // If n is specified, then traverse the tree until we've found the nth\r\n  // item (or until we've found all items).  If n is not specified,\r\n  // traverse until we've found all items.\r\n  traverse: { value: function(n) {\r\n    // increment n so we can compare to length, and so it is never falsy\r\n    if (n !== undefined) n++;\r\n\r\n    var elt;\r\n    while ((elt = this.next()) !== null) {\r\n      this[this.cache.length] = elt; //XXX Use proxy instead\r\n      this.cache.push(elt);\r\n      if (n && this.cache.length === n) return;\r\n    }\r\n\r\n    // no next element, so we've found everything\r\n    this.done = true;\r\n  } },\r\n\r\n  // Return the next element under root that matches filter\r\n  next: { value: function() {\r\n    var start = (this.cache.length === 0) ? this.root // Start at the root or at\r\n      : this.cache[this.cache.length-1]; // the last element we found\r\n\r\n    var elt;\r\n    if (start.nodeType === Node.DOCUMENT_NODE)\r\n      elt = start.documentElement;\r\n    else\r\n      elt = start.nextElement(this.root);\r\n\r\n    while(elt) {\r\n      if (this.filter(elt)) {\r\n        return elt;\r\n      }\r\n\r\n      elt = elt.nextElement(this.root);\r\n    }\r\n    return null;\r\n  } },\r\n});\r\n", "\"use strict\";\r\n// DOMTokenList implementation based on https://github.com/Raynos/DOM-shim\r\nvar utils = require('./utils');\r\n\r\nmodule.exports = DOMTokenList;\r\n\r\nfunction DOMTokenList(getter, setter) {\r\n  this._getString = getter;\r\n  this._setString = setter;\r\n  this._length = 0;\r\n  this._lastStringValue = '';\r\n  this._update();\r\n}\r\n\r\nObject.defineProperties(DOMTokenList.prototype, {\r\n  length: { get: function() { return this._length; } },\r\n  item: { value: function(index) {\r\n    var list = getList(this);\r\n    if (index < 0 || index >= list.length) {\r\n      return null;\r\n    }\r\n    return list[index];\r\n  }},\r\n\r\n  contains: { value: function(token) {\r\n    token = String(token); // no error checking for contains()\r\n    var list = getList(this);\r\n    return list.indexOf(token) > -1;\r\n  }},\r\n\r\n  add: { value: function() {\r\n    var list = getList(this);\r\n    for (var i = 0, len = arguments.length; i < len; i++) {\r\n      var token = handleErrors(arguments[i]);\r\n      if (list.indexOf(token) < 0) {\r\n        list.push(token);\r\n      }\r\n    }\r\n    // Note: as per spec, if handleErrors() throws any errors, we never\r\n    // make it here and none of the changes take effect.\r\n    // Also per spec: we run the \"update steps\" even if no change was\r\n    // made (ie, if the token already existed)\r\n    this._update(list);\r\n  }},\r\n\r\n  remove: { value: function() {\r\n    var list = getList(this);\r\n    for (var i = 0, len = arguments.length; i < len; i++) {\r\n      var token = handleErrors(arguments[i]);\r\n      var index = list.indexOf(token);\r\n      if (index > -1) {\r\n        list.splice(index, 1);\r\n      }\r\n    }\r\n    // Note: as per spec, if handleErrors() throws any errors, we never\r\n    // make it here and none of the changes take effect.\r\n    // Also per spec: we run the \"update steps\" even if no change was\r\n    // made (ie, if the token wasn't previously present)\r\n    this._update(list);\r\n  }},\r\n\r\n  toggle: { value: function toggle(token, force) {\r\n    token = handleErrors(token);\r\n    if (this.contains(token)) {\r\n      if (force === undefined || force === false) {\r\n        this.remove(token);\r\n        return false;\r\n      }\r\n      return true;\r\n    } else {\r\n      if (force === undefined || force === true) {\r\n        this.add(token);\r\n        return true;\r\n      }\r\n      return false;\r\n    }\r\n  }},\r\n\r\n  replace: { value: function replace(token, newToken) {\r\n    // weird corner case of spec: if `token` contains whitespace, but\r\n    // `newToken` is the empty string, we must throw SyntaxError not\r\n    // InvalidCharacterError (sigh)\r\n    if (String(newToken)==='') { utils.SyntaxError(); }\r\n    token = handleErrors(token);\r\n    newToken = handleErrors(newToken);\r\n    var list = getList(this);\r\n    var idx = list.indexOf(token);\r\n    if (idx < 0) {\r\n      // Note that, per spec, we do not run the update steps on this path.\r\n      return false;\r\n    }\r\n    var idx2 = list.indexOf(newToken);\r\n    if (idx2 < 0) {\r\n      list[idx] = newToken;\r\n    } else {\r\n      // \"replace the first instance of either `token` or `newToken` with\r\n      // `newToken` and remove all other instances\"\r\n      if (idx < idx2) {\r\n        list[idx] = newToken;\r\n        list.splice(idx2, 1);\r\n      } else {\r\n        // idx2 is already `newToken`\r\n        list.splice(idx, 1);\r\n      }\r\n    }\r\n    this._update(list);\r\n    return true;\r\n  }},\r\n\r\n  toString: { value: function() {\r\n    return this._getString();\r\n  }},\r\n\r\n  value: {\r\n    get: function() {\r\n      return this._getString();\r\n    },\r\n    set: function(v) {\r\n      this._setString(v);\r\n      this._update();\r\n    }\r\n  },\r\n\r\n  // Called when the setter is called from outside this interface.\r\n  _update: { value: function(list) {\r\n    if (list) {\r\n      fixIndex(this, list);\r\n      this._setString(list.join(\" \").trim());\r\n    } else {\r\n      fixIndex(this, getList(this));\r\n    }\r\n    this._lastStringValue = this._getString();\r\n  } },\r\n});\r\n\r\nfunction fixIndex(clist, list) {\r\n  var oldLength = clist._length;\r\n  var i;\r\n  clist._length = list.length;\r\n  for (i = 0; i < list.length; i++) {\r\n    clist[i] = list[i];\r\n  }\r\n  // Clear/free old entries.\r\n  for (; i < oldLength; i++) {\r\n    clist[i] = undefined;\r\n  }\r\n}\r\n\r\nfunction handleErrors(token) {\r\n  token = String(token);\r\n  if (token === \"\") {\r\n    utils.SyntaxError();\r\n  }\r\n  if (/[ \\t\\r\\n\\f]/.test(token)) {\r\n    utils.InvalidCharacterError();\r\n  }\r\n  return token;\r\n}\r\n\r\nfunction toArray(clist) {\r\n  var length = clist._length;\r\n  var arr = Array(length);\r\n  for (var i = 0; i < length; i++) {\r\n    arr[i] = clist[i];\r\n  }\r\n  return arr;\r\n}\r\n\r\nfunction getList(clist) {\r\n  var strProp = clist._getString();\r\n  if (strProp === clist._lastStringValue) {\r\n    return toArray(clist);\r\n  }\r\n  var str = strProp.replace(/(^[ \\t\\r\\n\\f]+)|([ \\t\\r\\n\\f]+$)/g, '');\r\n  if (str === \"\") {\r\n    return [];\r\n  } else {\r\n    var seen = Object.create(null);\r\n    return str.split(/[ \\t\\r\\n\\f]+/g).filter(function(n) {\r\n      var key = '$' + n;\r\n      if (seen[key]) { return false; }\r\n      seen[key] = true;\r\n      return true;\r\n    });\r\n  }\r\n}\r\n", "\"use strict\";\r\n/* jshint eqnull: true */\r\n/**\r\n * Zest (https://github.com/chjj/zest)\r\n * A css selector engine.\r\n * Copyright (c) 2011-2012, Christopher Jeffrey. (MIT Licensed)\r\n * Domino version based on Zest v0.1.3 with bugfixes applied.\r\n */\r\n\r\n/**\r\n * Helpers\r\n */\r\n\r\nvar window = Object.create(null, {\r\n  location: { get: function() {\r\n    throw new Error('window.location is not supported.');\r\n  } }\r\n});\r\n\r\nvar compareDocumentPosition = function(a, b) {\r\n      return a.compareDocumentPosition(b);\r\n};\r\n\r\nvar order = function(a, b) {\r\n  /* jshint bitwise: false */\r\n  return compareDocumentPosition(a, b) & 2 ? 1 : -1;\r\n};\r\n\r\nvar next = function(el) {\r\n  while ((el = el.nextSibling)\r\n         && el.nodeType !== 1);\r\n  return el;\r\n};\r\n\r\nvar prev = function(el) {\r\n  while ((el = el.previousSibling)\r\n         && el.nodeType !== 1);\r\n  return el;\r\n};\r\n\r\nvar child = function(el) {\r\n  /*jshint -W084 */\r\n  if (el = el.firstChild) {\r\n    while (el.nodeType !== 1\r\n           && (el = el.nextSibling));\r\n  }\r\n  return el;\r\n};\r\n\r\nvar lastChild = function(el) {\r\n  /*jshint -W084 */\r\n  if (el = el.lastChild) {\r\n    while (el.nodeType !== 1\r\n           && (el = el.previousSibling));\r\n  }\r\n  return el;\r\n};\r\n\r\nvar parentIsElement = function(n) {\r\n  if (!n.parentNode) { return false; }\r\n  var nodeType = n.parentNode.nodeType;\r\n  // The root `html` element can be a first- or last-child, too.\r\n  return nodeType === 1 || nodeType === 9;\r\n};\r\n\r\nvar unquote = function(str) {\r\n  if (!str) return str;\r\n  var ch = str[0];\r\n  if (ch === '\"' || ch === '\\'') {\r\n    if (str[str.length-1] === ch) {\r\n      str = str.slice(1, -1);\r\n    } else {\r\n      // bad string.\r\n      str = str.slice(1);\r\n    }\r\n    return str.replace(rules.str_escape, function(s) {\r\n      var m = /^\\\\(?:([0-9A-Fa-f]+)|([\\r\\n\\f]+))/.exec(s);\r\n      if (!m) { return s.slice(1); }\r\n      if (m[2]) { return ''; /* escaped newlines are ignored in strings. */ }\r\n      var cp = parseInt(m[1], 16);\r\n      return String.fromCodePoint ? String.fromCodePoint(cp) :\r\n        // Not all JavaScript implementations have String.fromCodePoint yet.\r\n        String.fromCharCode(cp);\r\n    });\r\n  } else if (rules.ident.test(str)) {\r\n    return decodeid(str);\r\n  } else {\r\n    // NUMBER, PERCENTAGE, DIMENSION, etc\r\n    return str;\r\n  }\r\n};\r\n\r\nvar decodeid = function(str) {\r\n  return str.replace(rules.escape, function(s) {\r\n    var m = /^\\\\([0-9A-Fa-f]+)/.exec(s);\r\n    if (!m) { return s[1]; }\r\n    var cp = parseInt(m[1], 16);\r\n    return String.fromCodePoint ? String.fromCodePoint(cp) :\r\n      // Not all JavaScript implementations have String.fromCodePoint yet.\r\n      String.fromCharCode(cp);\r\n  });\r\n};\r\n\r\nvar indexOf = (function() {\r\n  if (Array.prototype.indexOf) {\r\n    return Array.prototype.indexOf;\r\n  }\r\n  return function(obj, item) {\r\n    var i = this.length;\r\n    while (i--) {\r\n      if (this[i] === item) return i;\r\n    }\r\n    return -1;\r\n  };\r\n})();\r\n\r\nvar makeInside = function(start, end) {\r\n  var regex = rules.inside.source\r\n    .replace(/</g, start)\r\n    .replace(/>/g, end);\r\n\r\n  return new RegExp(regex);\r\n};\r\n\r\nvar replace = function(regex, name, val) {\r\n  regex = regex.source;\r\n  regex = regex.replace(name, val.source || val);\r\n  return new RegExp(regex);\r\n};\r\n\r\nvar truncateUrl = function(url, num) {\r\n  return url\r\n    .replace(/^(?:\\w+:\\/\\/|\\/+)/, '')\r\n    .replace(/(?:\\/+|\\/*#.*?)$/, '')\r\n    .split('/', num)\r\n    .join('/');\r\n};\r\n\r\n/**\r\n * Handle `nth` Selectors\r\n */\r\n\r\nvar parseNth = function(param_, test) {\r\n  var param = param_.replace(/\\s+/g, '')\r\n    , cap;\r\n\r\n  if (param === 'even') {\r\n    param = '2n+0';\r\n  } else if (param === 'odd') {\r\n    param = '2n+1';\r\n  } else if (param.indexOf('n') === -1) {\r\n    param = '0n' + param;\r\n  }\r\n\r\n  cap = /^([+-])?(\\d+)?n([+-])?(\\d+)?$/.exec(param);\r\n\r\n  return {\r\n    group: cap[1] === '-'\r\n      ? -(cap[2] || 1)\r\n      : +(cap[2] || 1),\r\n    offset: cap[4]\r\n      ? (cap[3] === '-' ? -cap[4] : +cap[4])\r\n      : 0\r\n  };\r\n};\r\n\r\nvar nth = function(param_, test, last) {\r\n  var param = parseNth(param_)\r\n    , group = param.group\r\n    , offset = param.offset\r\n    , find = !last ? child : lastChild\r\n    , advance = !last ? next : prev;\r\n\r\n  return function(el) {\r\n    if (!parentIsElement(el)) return;\r\n\r\n    var rel = find(el.parentNode)\r\n      , pos = 0;\r\n\r\n    while (rel) {\r\n      if (test(rel, el)) pos++;\r\n      if (rel === el) {\r\n        pos -= offset;\r\n        return group && pos\r\n          ? (pos % group) === 0 && (pos < 0 === group < 0)\r\n          : !pos;\r\n      }\r\n      rel = advance(rel);\r\n    }\r\n  };\r\n};\r\n\r\n/**\r\n * Simple Selectors\r\n */\r\n\r\nvar selectors = {\r\n  '*': (function() {\r\n    if (false/*function() {\r\n      var el = document.createElement('div');\r\n      el.appendChild(document.createComment(''));\r\n      return !!el.getElementsByTagName('*')[0];\r\n    }()*/) {\r\n      return function(el) {\r\n        if (el.nodeType === 1) return true;\r\n      };\r\n    }\r\n    return function() {\r\n      return true;\r\n    };\r\n  })(),\r\n  'type': function(type) {\r\n    type = type.toLowerCase();\r\n    return function(el) {\r\n      return el.nodeName.toLowerCase() === type;\r\n    };\r\n  },\r\n  'attr': function(key, op, val, i) {\r\n    op = operators[op];\r\n    return function(el) {\r\n      var attr;\r\n      switch (key) {\r\n        case 'for':\r\n          attr = el.htmlFor;\r\n          break;\r\n        case 'class':\r\n          // className is '' when non-existent\r\n          // getAttribute('class') is null\r\n          attr = el.className;\r\n          if (attr === '' && el.getAttribute('class') == null) {\r\n            attr = null;\r\n          }\r\n          break;\r\n        case 'href':\r\n        case 'src':\r\n          attr = el.getAttribute(key, 2);\r\n          break;\r\n        case 'title':\r\n          // getAttribute('title') can be '' when non-existent sometimes?\r\n          attr = el.getAttribute('title') || null;\r\n          break;\r\n        // careful with attributes with special getter functions\r\n        case 'id':\r\n        case 'lang':\r\n        case 'dir':\r\n        case 'accessKey':\r\n        case 'hidden':\r\n        case 'tabIndex':\r\n        case 'style':\r\n          if (el.getAttribute) {\r\n            attr = el.getAttribute(key);\r\n            break;\r\n          }\r\n        /* falls through */\r\n        default:\r\n          if (el.hasAttribute && !el.hasAttribute(key)) {\r\n            break;\r\n          }\r\n          attr = el[key] != null\r\n            ? el[key]\r\n            : el.getAttribute && el.getAttribute(key);\r\n          break;\r\n      }\r\n      if (attr == null) return;\r\n      attr = attr + '';\r\n      if (i) {\r\n        attr = attr.toLowerCase();\r\n        val = val.toLowerCase();\r\n      }\r\n      return op(attr, val);\r\n    };\r\n  },\r\n  ':first-child': function(el) {\r\n    return !prev(el) && parentIsElement(el);\r\n  },\r\n  ':last-child': function(el) {\r\n    return !next(el) && parentIsElement(el);\r\n  },\r\n  ':only-child': function(el) {\r\n    return !prev(el) && !next(el) && parentIsElement(el);\r\n  },\r\n  ':nth-child': function(param, last) {\r\n    return nth(param, function() {\r\n      return true;\r\n    }, last);\r\n  },\r\n  ':nth-last-child': function(param) {\r\n    return selectors[':nth-child'](param, true);\r\n  },\r\n  ':root': function(el) {\r\n    return el.ownerDocument.documentElement === el;\r\n  },\r\n  ':empty': function(el) {\r\n    return !el.firstChild;\r\n  },\r\n  ':not': function(sel) {\r\n    var test = compileGroup(sel);\r\n    return function(el) {\r\n      return !test(el);\r\n    };\r\n  },\r\n  ':first-of-type': function(el) {\r\n    if (!parentIsElement(el)) return;\r\n    var type = el.nodeName;\r\n    /*jshint -W084 */\r\n    while (el = prev(el)) {\r\n      if (el.nodeName === type) return;\r\n    }\r\n    return true;\r\n  },\r\n  ':last-of-type': function(el) {\r\n    if (!parentIsElement(el)) return;\r\n    var type = el.nodeName;\r\n    /*jshint -W084 */\r\n    while (el = next(el)) {\r\n      if (el.nodeName === type) return;\r\n    }\r\n    return true;\r\n  },\r\n  ':only-of-type': function(el) {\r\n    return selectors[':first-of-type'](el)\r\n        && selectors[':last-of-type'](el);\r\n  },\r\n  ':nth-of-type': function(param, last) {\r\n    return nth(param, function(rel, el) {\r\n      return rel.nodeName === el.nodeName;\r\n    }, last);\r\n  },\r\n  ':nth-last-of-type': function(param) {\r\n    return selectors[':nth-of-type'](param, true);\r\n  },\r\n  ':checked': function(el) {\r\n    return !!(el.checked || el.selected);\r\n  },\r\n  ':indeterminate': function(el) {\r\n    return !selectors[':checked'](el);\r\n  },\r\n  ':enabled': function(el) {\r\n    return !el.disabled && el.type !== 'hidden';\r\n  },\r\n  ':disabled': function(el) {\r\n    return !!el.disabled;\r\n  },\r\n  ':target': function(el) {\r\n    return el.id === window.location.hash.substring(1);\r\n  },\r\n  ':focus': function(el) {\r\n    return el === el.ownerDocument.activeElement;\r\n  },\r\n  ':is': function(sel) {\r\n    return compileGroup(sel);\r\n  },\r\n  // :matches is an older name for :is; see\r\n  // https://github.com/w3c/csswg-drafts/issues/3258\r\n  ':matches': function(sel) {\r\n    return selectors[':is'](sel);\r\n  },\r\n  ':nth-match': function(param, last) {\r\n    var args = param.split(/\\s*,\\s*/)\r\n      , arg = args.shift()\r\n      , test = compileGroup(args.join(','));\r\n\r\n    return nth(arg, test, last);\r\n  },\r\n  ':nth-last-match': function(param) {\r\n    return selectors[':nth-match'](param, true);\r\n  },\r\n  ':links-here': function(el) {\r\n    return el + '' === window.location + '';\r\n  },\r\n  ':lang': function(param) {\r\n    return function(el) {\r\n      while (el) {\r\n        if (el.lang) return el.lang.indexOf(param) === 0;\r\n        el = el.parentNode;\r\n      }\r\n    };\r\n  },\r\n  ':dir': function(param) {\r\n    return function(el) {\r\n      while (el) {\r\n        if (el.dir) return el.dir === param;\r\n        el = el.parentNode;\r\n      }\r\n    };\r\n  },\r\n  ':scope': function(el, con) {\r\n    var context = con || el.ownerDocument;\r\n    if (context.nodeType === 9) {\r\n      return el === context.documentElement;\r\n    }\r\n    return el === context;\r\n  },\r\n  ':any-link': function(el) {\r\n    return typeof el.href === 'string';\r\n  },\r\n  ':local-link': function(el) {\r\n    if (el.nodeName) {\r\n      return el.href && el.host === window.location.host;\r\n    }\r\n    var param = +el + 1;\r\n    return function(el) {\r\n      if (!el.href) return;\r\n\r\n      var url = window.location + ''\r\n        , href = el + '';\r\n\r\n      return truncateUrl(url, param) === truncateUrl(href, param);\r\n    };\r\n  },\r\n  ':default': function(el) {\r\n    return !!el.defaultSelected;\r\n  },\r\n  ':valid': function(el) {\r\n    return el.willValidate || (el.validity && el.validity.valid);\r\n  },\r\n  ':invalid': function(el) {\r\n    return !selectors[':valid'](el);\r\n  },\r\n  ':in-range': function(el) {\r\n    return el.value > el.min && el.value <= el.max;\r\n  },\r\n  ':out-of-range': function(el) {\r\n    return !selectors[':in-range'](el);\r\n  },\r\n  ':required': function(el) {\r\n    return !!el.required;\r\n  },\r\n  ':optional': function(el) {\r\n    return !el.required;\r\n  },\r\n  ':read-only': function(el) {\r\n    if (el.readOnly) return true;\r\n\r\n    var attr = el.getAttribute('contenteditable')\r\n      , prop = el.contentEditable\r\n      , name = el.nodeName.toLowerCase();\r\n\r\n    name = name !== 'input' && name !== 'textarea';\r\n\r\n    return (name || el.disabled) && attr == null && prop !== 'true';\r\n  },\r\n  ':read-write': function(el) {\r\n    return !selectors[':read-only'](el);\r\n  },\r\n  ':hover': function() {\r\n    throw new Error(':hover is not supported.');\r\n  },\r\n  ':active': function() {\r\n    throw new Error(':active is not supported.');\r\n  },\r\n  ':link': function() {\r\n    throw new Error(':link is not supported.');\r\n  },\r\n  ':visited': function() {\r\n    throw new Error(':visited is not supported.');\r\n  },\r\n  ':column': function() {\r\n    throw new Error(':column is not supported.');\r\n  },\r\n  ':nth-column': function() {\r\n    throw new Error(':nth-column is not supported.');\r\n  },\r\n  ':nth-last-column': function() {\r\n    throw new Error(':nth-last-column is not supported.');\r\n  },\r\n  ':current': function() {\r\n    throw new Error(':current is not supported.');\r\n  },\r\n  ':past': function() {\r\n    throw new Error(':past is not supported.');\r\n  },\r\n  ':future': function() {\r\n    throw new Error(':future is not supported.');\r\n  },\r\n  // Non-standard, for compatibility purposes.\r\n  ':contains': function(param) {\r\n    return function(el) {\r\n      var text = el.innerText || el.textContent || el.value || '';\r\n      return text.indexOf(param) !== -1;\r\n    };\r\n  },\r\n  ':has': function(param) {\r\n    return function(el) {\r\n      return find(param, el).length > 0;\r\n    };\r\n  }\r\n  // Potentially add more pseudo selectors for\r\n  // compatibility with sizzle and most other\r\n  // selector engines (?).\r\n};\r\n\r\n/**\r\n * Attribute Operators\r\n */\r\n\r\nvar operators = {\r\n  '-': function() {\r\n    return true;\r\n  },\r\n  '=': function(attr, val) {\r\n    return attr === val;\r\n  },\r\n  '*=': function(attr, val) {\r\n    return attr.indexOf(val) !== -1;\r\n  },\r\n  '~=': function(attr, val) {\r\n    var i\r\n      , s\r\n      , f\r\n      , l;\r\n\r\n    for (s = 0; true; s = i + 1) {\r\n      i = attr.indexOf(val, s);\r\n      if (i === -1) return false;\r\n      f = attr[i - 1];\r\n      l = attr[i + val.length];\r\n      if ((!f || f === ' ') && (!l || l === ' ')) return true;\r\n    }\r\n  },\r\n  '|=': function(attr, val) {\r\n    var i = attr.indexOf(val)\r\n      , l;\r\n\r\n    if (i !== 0) return;\r\n    l = attr[i + val.length];\r\n\r\n    return l === '-' || !l;\r\n  },\r\n  '^=': function(attr, val) {\r\n    return attr.indexOf(val) === 0;\r\n  },\r\n  '$=': function(attr, val) {\r\n    var i = attr.lastIndexOf(val);\r\n    return i !== -1 && i + val.length === attr.length;\r\n  },\r\n  // non-standard\r\n  '!=': function(attr, val) {\r\n    return attr !== val;\r\n  }\r\n};\r\n\r\n/**\r\n * Combinator Logic\r\n */\r\n\r\nvar combinators = {\r\n  ' ': function(test) {\r\n    return function(el) {\r\n      /*jshint -W084 */\r\n      while (el = el.parentNode) {\r\n        if (test(el)) return el;\r\n      }\r\n    };\r\n  },\r\n  '>': function(test) {\r\n    return function(el) {\r\n      /*jshint -W084 */\r\n      if (el = el.parentNode) {\r\n        return test(el) && el;\r\n      }\r\n    };\r\n  },\r\n  '+': function(test) {\r\n    return function(el) {\r\n      /*jshint -W084 */\r\n      if (el = prev(el)) {\r\n        return test(el) && el;\r\n      }\r\n    };\r\n  },\r\n  '~': function(test) {\r\n    return function(el) {\r\n      /*jshint -W084 */\r\n      while (el = prev(el)) {\r\n        if (test(el)) return el;\r\n      }\r\n    };\r\n  },\r\n  'noop': function(test) {\r\n    return function(el) {\r\n      return test(el) && el;\r\n    };\r\n  },\r\n  'ref': function(test, name) {\r\n    var node;\r\n\r\n    function ref(el) {\r\n      var doc = el.ownerDocument\r\n        , nodes = doc.getElementsByTagName('*')\r\n        , i = nodes.length;\r\n\r\n      while (i--) {\r\n        node = nodes[i];\r\n        if (ref.test(el)) {\r\n          node = null;\r\n          return true;\r\n        }\r\n      }\r\n\r\n      node = null;\r\n    }\r\n\r\n    ref.combinator = function(el) {\r\n      if (!node || !node.getAttribute) return;\r\n\r\n      var attr = node.getAttribute(name) || '';\r\n      if (attr[0] === '#') attr = attr.substring(1);\r\n\r\n      if (attr === el.id && test(node)) {\r\n        return node;\r\n      }\r\n    };\r\n\r\n    return ref;\r\n  }\r\n};\r\n\r\n/**\r\n * Grammar\r\n */\r\n\r\nvar rules = {\r\n  escape: /\\\\(?:[^0-9A-Fa-f\\r\\n]|[0-9A-Fa-f]{1,6}[\\r\\n\\t ]?)/g,\r\n  str_escape: /(escape)|\\\\(\\n|\\r\\n?|\\f)/g,\r\n  nonascii: /[\\u00A0-\\uFFFF]/,\r\n  cssid: /(?:(?!-?[0-9])(?:escape|nonascii|[-_a-zA-Z0-9])+)/,\r\n  qname: /^ *(cssid|\\*)/,\r\n  simple: /^(?:([.#]cssid)|pseudo|attr)/,\r\n  ref: /^ *\\/(cssid)\\/ */,\r\n  combinator: /^(?: +([^ \\w*.#\\\\]) +|( )+|([^ \\w*.#\\\\]))(?! *$)/,\r\n  attr: /^\\[(cssid)(?:([^\\w]?=)(inside))?\\]/,\r\n  pseudo: /^(:cssid)(?:\\((inside)\\))?/,\r\n  inside: /(?:\"(?:\\\\\"|[^\"])*\"|'(?:\\\\'|[^'])*'|<[^\"'>]*>|\\\\[\"'>]|[^\"'>])*/,\r\n  ident: /^(cssid)$/\r\n};\r\n\r\nrules.cssid = replace(rules.cssid, 'nonascii', rules.nonascii);\r\nrules.cssid = replace(rules.cssid, 'escape', rules.escape);\r\nrules.qname = replace(rules.qname, 'cssid', rules.cssid);\r\nrules.simple = replace(rules.simple, 'cssid', rules.cssid);\r\nrules.ref = replace(rules.ref, 'cssid', rules.cssid);\r\nrules.attr = replace(rules.attr, 'cssid', rules.cssid);\r\nrules.pseudo = replace(rules.pseudo, 'cssid', rules.cssid);\r\nrules.inside = replace(rules.inside, '[^\"\\'>]*', rules.inside);\r\nrules.attr = replace(rules.attr, 'inside', makeInside('\\\\[', '\\\\]'));\r\nrules.pseudo = replace(rules.pseudo, 'inside', makeInside('\\\\(', '\\\\)'));\r\nrules.simple = replace(rules.simple, 'pseudo', rules.pseudo);\r\nrules.simple = replace(rules.simple, 'attr', rules.attr);\r\nrules.ident = replace(rules.ident, 'cssid', rules.cssid);\r\nrules.str_escape = replace(rules.str_escape, 'escape', rules.escape);\r\n\r\n/**\r\n * Compiling\r\n */\r\n\r\nvar compile = function(sel_) {\r\n  var sel = sel_.replace(/^\\s+|\\s+$/g, '')\r\n    , test\r\n    , filter = []\r\n    , buff = []\r\n    , subject\r\n    , qname\r\n    , cap\r\n    , op\r\n    , ref;\r\n\r\n  /*jshint -W084 */\r\n  while (sel) {\r\n    if (cap = rules.qname.exec(sel)) {\r\n      sel = sel.substring(cap[0].length);\r\n      qname = decodeid(cap[1]);\r\n      buff.push(tok(qname, true));\r\n    } else if (cap = rules.simple.exec(sel)) {\r\n      sel = sel.substring(cap[0].length);\r\n      qname = '*';\r\n      buff.push(tok(qname, true));\r\n      buff.push(tok(cap));\r\n    } else {\r\n      throw new SyntaxError('Invalid selector.');\r\n    }\r\n\r\n    while (cap = rules.simple.exec(sel)) {\r\n      sel = sel.substring(cap[0].length);\r\n      buff.push(tok(cap));\r\n    }\r\n\r\n    if (sel[0] === '!') {\r\n      sel = sel.substring(1);\r\n      subject = makeSubject();\r\n      subject.qname = qname;\r\n      buff.push(subject.simple);\r\n    }\r\n\r\n    if (cap = rules.ref.exec(sel)) {\r\n      sel = sel.substring(cap[0].length);\r\n      ref = combinators.ref(makeSimple(buff), decodeid(cap[1]));\r\n      filter.push(ref.combinator);\r\n      buff = [];\r\n      continue;\r\n    }\r\n\r\n    if (cap = rules.combinator.exec(sel)) {\r\n      sel = sel.substring(cap[0].length);\r\n      op = cap[1] || cap[2] || cap[3];\r\n      if (op === ',') {\r\n        filter.push(combinators.noop(makeSimple(buff)));\r\n        break;\r\n      }\r\n    } else {\r\n      op = 'noop';\r\n    }\r\n\r\n    if (!combinators[op]) { throw new SyntaxError('Bad combinator.'); }\r\n    filter.push(combinators[op](makeSimple(buff)));\r\n    buff = [];\r\n  }\r\n\r\n  test = makeTest(filter);\r\n  test.qname = qname;\r\n  test.sel = sel;\r\n\r\n  if (subject) {\r\n    subject.lname = test.qname;\r\n\r\n    subject.test = test;\r\n    subject.qname = subject.qname;\r\n    subject.sel = test.sel;\r\n    test = subject;\r\n  }\r\n\r\n  if (ref) {\r\n    ref.test = test;\r\n    ref.qname = test.qname;\r\n    ref.sel = test.sel;\r\n    test = ref;\r\n  }\r\n\r\n  return test;\r\n};\r\n\r\nvar tok = function(cap, qname) {\r\n  // qname\r\n  if (qname) {\r\n    return cap === '*'\r\n      ? selectors['*']\r\n      : selectors.type(cap);\r\n  }\r\n\r\n  // class/id\r\n  if (cap[1]) {\r\n    return cap[1][0] === '.'\r\n\t  // XXX unescape here?  or in attr?\r\n      ? selectors.attr('class', '~=', decodeid(cap[1].substring(1)), false)\r\n      : selectors.attr('id', '=', decodeid(cap[1].substring(1)), false);\r\n  }\r\n\r\n  // pseudo-name\r\n  // inside-pseudo\r\n  if (cap[2]) {\r\n    return cap[3]\r\n      ? selectors[decodeid(cap[2])](unquote(cap[3]))\r\n      : selectors[decodeid(cap[2])];\r\n  }\r\n\r\n  // attr name\r\n  // attr op\r\n  // attr value\r\n  if (cap[4]) {\r\n    var value = cap[6];\r\n    var i = /[\"'\\s]\\s*I$/i.test(value);\r\n    if (i) {\r\n      value = value.replace(/\\s*I$/i, '');\r\n    }\r\n    return selectors.attr(decodeid(cap[4]), cap[5] || '-', unquote(value), i);\r\n  }\r\n\r\n  throw new SyntaxError('Unknown Selector.');\r\n};\r\n\r\nvar makeSimple = function(func) {\r\n  var l = func.length\r\n    , i;\r\n\r\n  // Potentially make sure\r\n  // `el` is truthy.\r\n  if (l < 2) return func[0];\r\n\r\n  return function(el) {\r\n    if (!el) return;\r\n    for (i = 0; i < l; i++) {\r\n      if (!func[i](el)) return;\r\n    }\r\n    return true;\r\n  };\r\n};\r\n\r\nvar makeTest = function(func) {\r\n  if (func.length < 2) {\r\n    return function(el) {\r\n      return !!func[0](el);\r\n    };\r\n  }\r\n  return function(el) {\r\n    var i = func.length;\r\n    while (i--) {\r\n      if (!(el = func[i](el))) return;\r\n    }\r\n    return true;\r\n  };\r\n};\r\n\r\nvar makeSubject = function() {\r\n  var target;\r\n\r\n  function subject(el) {\r\n    var node = el.ownerDocument\r\n      , scope = node.getElementsByTagName(subject.lname)\r\n      , i = scope.length;\r\n\r\n    while (i--) {\r\n      if (subject.test(scope[i]) && target === el) {\r\n        target = null;\r\n        return true;\r\n      }\r\n    }\r\n\r\n    target = null;\r\n  }\r\n\r\n  subject.simple = function(el) {\r\n    target = el;\r\n    return true;\r\n  };\r\n\r\n  return subject;\r\n};\r\n\r\nvar compileGroup = function(sel) {\r\n  var test = compile(sel)\r\n    , tests = [ test ];\r\n\r\n  while (test.sel) {\r\n    test = compile(test.sel);\r\n    tests.push(test);\r\n  }\r\n\r\n  if (tests.length < 2) return test;\r\n\r\n  return function(el) {\r\n    var l = tests.length\r\n      , i = 0;\r\n\r\n    for (; i < l; i++) {\r\n      if (tests[i](el)) return true;\r\n    }\r\n  };\r\n};\r\n\r\n/**\r\n * Selection\r\n */\r\n\r\nvar find = function(sel, node) {\r\n  var results = []\r\n    , test = compile(sel)\r\n    , scope = node.getElementsByTagName(test.qname)\r\n    , i = 0\r\n    , el;\r\n\r\n  /*jshint -W084 */\r\n  while (el = scope[i++]) {\r\n    if (test(el)) results.push(el);\r\n  }\r\n\r\n  if (test.sel) {\r\n    while (test.sel) {\r\n      test = compile(test.sel);\r\n      scope = node.getElementsByTagName(test.qname);\r\n      i = 0;\r\n      /*jshint -W084 */\r\n      while (el = scope[i++]) {\r\n        if (test(el) && indexOf.call(results, el) === -1) {\r\n          results.push(el);\r\n        }\r\n      }\r\n    }\r\n    results.sort(order);\r\n  }\r\n\r\n  return results;\r\n};\r\n\r\n/**\r\n * Expose\r\n */\r\n\r\nmodule.exports = exports = function(sel, context) {\r\n  /* when context isn't a DocumentFragment and the selector is simple: */\r\n  var id, r;\r\n  if (context.nodeType !== 11 && sel.indexOf(' ') === -1) {\r\n    if (sel[0] === '#' && context.rooted && /^#[A-Z_][-A-Z0-9_]*$/i.test(sel)) {\r\n      if (context.doc._hasMultipleElementsWithId) {\r\n        id = sel.substring(1);\r\n        if (!context.doc._hasMultipleElementsWithId(id)) {\r\n          r = context.doc.getElementById(id);\r\n          return r ? [r] : [];\r\n        }\r\n      }\r\n    }\r\n    if (sel[0] === '.' && /^\\.\\w+$/.test(sel)) {\r\n      return context.getElementsByClassName(sel.substring(1));\r\n    }\r\n    if (/^\\w+$/.test(sel)) {\r\n      return context.getElementsByTagName(sel);\r\n    }\r\n  }\r\n  /* do things the hard/slow way */\r\n  return find(sel, context);\r\n};\r\n\r\nexports.selectors = selectors;\r\nexports.operators = operators;\r\nexports.combinators = combinators;\r\n\r\nexports.matches = function(el, sel) {\r\n  var test = { sel: sel };\r\n  do {\r\n    test = compile(test.sel);\r\n    if (test(el)) { return true; }\r\n  } while (test.sel);\r\n  return false;\r\n};\r\n", "\"use strict\";\r\n\r\nvar Node = require('./Node');\r\nvar LinkedList = require('./LinkedList');\r\n\r\nvar createDocumentFragmentFromArguments = function(document, args) {\r\n  var docFrag = document.createDocumentFragment();\r\n\r\n  for (var i=0; i<args.length; i++) {\r\n    var argItem = args[i];\r\n    var isNode = argItem instanceof Node;\r\n    docFrag.appendChild(isNode ? argItem :\r\n                        document.createTextNode(String(argItem)));\r\n  }\r\n\r\n  return docFrag;\r\n};\r\n\r\n// The ChildNode interface contains methods that are particular to `Node`\r\n// objects that can have a parent.  It is implemented by `Element`,\r\n// `DocumentType`, and `CharacterData` objects.\r\nvar ChildNode = {\r\n\r\n  // Inserts a set of Node or String objects in the children list of this\r\n  // ChildNode's parent, just after this ChildNode.  String objects are\r\n  // inserted as the equivalent Text nodes.\r\n  after: { value: function after() {\r\n    var argArr = Array.prototype.slice.call(arguments);\r\n    var parentNode = this.parentNode, nextSibling = this.nextSibling;\r\n    if (parentNode === null) { return; }\r\n    // Find \"viable next sibling\"; that is, next one not in argArr\r\n    while (nextSibling && argArr.some(function(v) { return v===nextSibling; }))\r\n      nextSibling = nextSibling.nextSibling;\r\n    // ok, parent and sibling are saved away since this node could itself\r\n    // appear in argArr and we're about to move argArr to a document fragment.\r\n    var docFrag = createDocumentFragmentFromArguments(this.doc, argArr);\r\n\r\n    parentNode.insertBefore(docFrag, nextSibling);\r\n  }},\r\n\r\n  // Inserts a set of Node or String objects in the children list of this\r\n  // ChildNode's parent, just before this ChildNode.  String objects are\r\n  // inserted as the equivalent Text nodes.\r\n  before: { value: function before() {\r\n    var argArr = Array.prototype.slice.call(arguments);\r\n    var parentNode = this.parentNode, prevSibling = this.previousSibling;\r\n    if (parentNode === null) { return; }\r\n    // Find \"viable prev sibling\"; that is, prev one not in argArr\r\n    while (prevSibling && argArr.some(function(v) { return v===prevSibling; }))\r\n      prevSibling = prevSibling.previousSibling;\r\n    // ok, parent and sibling are saved away since this node could itself\r\n    // appear in argArr and we're about to move argArr to a document fragment.\r\n    var docFrag = createDocumentFragmentFromArguments(this.doc, argArr);\r\n\r\n    var nextSibling =\r\n        prevSibling ? prevSibling.nextSibling : parentNode.firstChild;\r\n    parentNode.insertBefore(docFrag, nextSibling);\r\n  }},\r\n\r\n  // Remove this node from its parent\r\n  remove: { value: function remove() {\r\n    if (this.parentNode === null) return;\r\n\r\n    // Send mutation events if necessary\r\n    if (this.doc) {\r\n      this.doc._preremoveNodeIterators(this);\r\n      if (this.rooted) {\r\n        this.doc.mutateRemove(this);\r\n      }\r\n    }\r\n\r\n    // Remove this node from its parents array of children\r\n    // and update the structure id for all ancestors\r\n    this._remove();\r\n\r\n    // Forget this node's parent\r\n    this.parentNode = null;\r\n  }},\r\n\r\n  // Remove this node w/o uprooting or sending mutation events\r\n  // (But do update the structure id for all ancestors)\r\n  _remove: { value: function _remove() {\r\n    var parent = this.parentNode;\r\n    if (parent === null) return;\r\n    if (parent._childNodes) {\r\n      parent._childNodes.splice(this.index, 1);\r\n    } else if (parent._firstChild === this) {\r\n      if (this._nextSibling === this) {\r\n        parent._firstChild = null;\r\n      } else {\r\n        parent._firstChild = this._nextSibling;\r\n      }\r\n    }\r\n    LinkedList.remove(this);\r\n    parent.modify();\r\n  }},\r\n\r\n  // Replace this node with the nodes or strings provided as arguments.\r\n  replaceWith: { value: function replaceWith() {\r\n    var argArr = Array.prototype.slice.call(arguments);\r\n    var parentNode = this.parentNode, nextSibling = this.nextSibling;\r\n    if (parentNode === null) { return; }\r\n    // Find \"viable next sibling\"; that is, next one not in argArr\r\n    while (nextSibling && argArr.some(function(v) { return v===nextSibling; }))\r\n      nextSibling = nextSibling.nextSibling;\r\n    // ok, parent and sibling are saved away since this node could itself\r\n    // appear in argArr and we're about to move argArr to a document fragment.\r\n    var docFrag = createDocumentFragmentFromArguments(this.doc, argArr);\r\n    if (this.parentNode === parentNode) {\r\n      parentNode.replaceChild(docFrag, this);\r\n    } else {\r\n      // `this` was inserted into docFrag\r\n      parentNode.insertBefore(docFrag, nextSibling);\r\n    }\r\n  }},\r\n\r\n};\r\n\r\nmodule.exports = ChildNode;\r\n", "\"use strict\";\r\nvar Node = require('./Node');\r\n\r\nvar NonDocumentTypeChildNode = {\r\n\r\n  nextElementSibling: { get: function() {\r\n    if (this.parentNode) {\r\n      for (var kid = this.nextSibling; kid !== null; kid = kid.nextSibling) {\r\n        if (kid.nodeType === Node.ELEMENT_NODE) return kid;\r\n      }\r\n    }\r\n    return null;\r\n  }},\r\n\r\n  previousElementSibling: { get: function() {\r\n    if (this.parentNode) {\r\n      for (var kid = this.previousSibling; kid !== null; kid = kid.previousSibling) {\r\n        if (kid.nodeType === Node.ELEMENT_NODE) return kid;\r\n      }\r\n    }\r\n    return null;\r\n  }}\r\n\r\n};\r\n\r\nmodule.exports = NonDocumentTypeChildNode;\r\n", "\"use strict\";\r\nmodule.exports = NamedNodeMap;\r\n\r\nvar utils = require('./utils');\r\n\r\n/* This is a hacky implementation of NamedNodeMap, intended primarily to\r\n * satisfy clients (like dompurify and the web-platform-tests) which check\r\n * to ensure that Node#attributes instanceof NamedNodeMap. */\r\n\r\nfunction NamedNodeMap(element) {\r\n  this.element = element;\r\n}\r\nObject.defineProperties(NamedNodeMap.prototype, {\r\n  length: { get: utils.shouldOverride },\r\n  item: { value: utils.shouldOverride },\r\n\r\n  getNamedItem: { value: function getNamedItem(qualifiedName) {\r\n    return this.element.getAttributeNode(qualifiedName);\r\n  } },\r\n  getNamedItemNS: { value: function getNamedItemNS(namespace, localName) {\r\n    return this.element.getAttributeNodeNS(namespace, localName);\r\n  } },\r\n  setNamedItem: { value: utils.nyi },\r\n  setNamedItemNS: { value: utils.nyi },\r\n  removeNamedItem: { value: function removeNamedItem(qualifiedName) {\r\n    var attr = this.element.getAttributeNode(qualifiedName);\r\n    if (attr) {\r\n      this.element.removeAttribute(qualifiedName);\r\n      return attr;\r\n    }\r\n    utils.NotFoundError();\r\n  } },\r\n  removeNamedItemNS: { value: function removeNamedItemNS(ns, lname) {\r\n    var attr = this.element.getAttributeNodeNS(ns, lname);\r\n    if (attr) {\r\n      this.element.removeAttributeNS(ns, lname);\r\n      return attr;\r\n    }\r\n    utils.NotFoundError();\r\n  } },\r\n});\r\n", "\"use strict\";\r\nmodule.exports = Element;\r\n\r\nvar xml = require('./xmlnames');\r\nvar utils = require('./utils');\r\nvar NAMESPACE = utils.NAMESPACE;\r\nvar attributes = require('./attributes');\r\nvar Node = require('./Node');\r\nvar NodeList = require('./NodeList');\r\nvar NodeUtils = require('./NodeUtils');\r\nvar FilteredElementList = require('./FilteredElementList');\r\nvar DOMException = require('./DOMException');\r\nvar DOMTokenList = require('./DOMTokenList');\r\nvar select = require('./select');\r\nvar ContainerNode = require('./ContainerNode');\r\nvar ChildNode = require('./ChildNode');\r\nvar NonDocumentTypeChildNode = require('./NonDocumentTypeChildNode');\r\nvar NamedNodeMap = require('./NamedNodeMap');\r\n\r\nvar uppercaseCache = Object.create(null);\r\n\r\nfunction Element(doc, localName, namespaceURI, prefix) {\r\n  ContainerNode.call(this);\r\n  this.nodeType = Node.ELEMENT_NODE;\r\n  this.ownerDocument = doc;\r\n  this.localName = localName;\r\n  this.namespaceURI = namespaceURI;\r\n  this.prefix = prefix;\r\n  this._tagName = undefined;\r\n\r\n  // These properties maintain the set of attributes\r\n  this._attrsByQName = Object.create(null); // The qname->Attr map\r\n  this._attrsByLName = Object.create(null); // The ns|lname->Attr map\r\n  this._attrKeys = [];     // attr index -> ns|lname\r\n}\r\n\r\nfunction recursiveGetText(node, a) {\r\n  if (node.nodeType === Node.TEXT_NODE) {\r\n    a.push(node._data);\r\n  }\r\n  else {\r\n    for(var i = 0, n = node.childNodes.length;  i < n; i++)\r\n      recursiveGetText(node.childNodes[i], a);\r\n  }\r\n}\r\n\r\nElement.prototype = Object.create(ContainerNode.prototype, {\r\n  isHTML: { get: function isHTML() {\r\n    return this.namespaceURI === NAMESPACE.HTML && this.ownerDocument.isHTML;\r\n  }},\r\n  tagName: { get: function tagName() {\r\n    if (this._tagName === undefined) {\r\n      var tn;\r\n      if (this.prefix === null) {\r\n        tn = this.localName;\r\n      } else {\r\n        tn = this.prefix + ':' + this.localName;\r\n      }\r\n      if (this.isHTML) {\r\n        var up = uppercaseCache[tn];\r\n        if (!up) {\r\n          // Converting to uppercase can be slow, so cache the conversion.\r\n          uppercaseCache[tn] = up = utils.toASCIIUpperCase(tn);\r\n        }\r\n        tn = up;\r\n      }\r\n      this._tagName = tn;\r\n    }\r\n    return this._tagName;\r\n  }},\r\n  nodeName: { get: function() { return this.tagName; }},\r\n  nodeValue: {\r\n    get: function() {\r\n      return null;\r\n    },\r\n    set: function() {}\r\n  },\r\n  textContent: {\r\n    get: function() {\r\n      var strings = [];\r\n      recursiveGetText(this, strings);\r\n      return strings.join('');\r\n    },\r\n    set: function(newtext) {\r\n      this.removeChildren();\r\n      if (newtext !== null && newtext !== undefined && newtext !== '') {\r\n        this._appendChild(this.ownerDocument.createTextNode(newtext));\r\n      }\r\n    }\r\n  },\r\n  innerText: {\r\n    get: function() {\r\n      var strings = [];\r\n      recursiveGetText(this, strings);\r\n      // Strip and collapse whitespace\r\n      // This doesn't 100% match the browser behavior,\r\n      // but should cover most of the cases. This is also similar to\r\n      // how Angular's renderer used to work: the `textContent` and `innerText`\r\n      // were almost equivalent from the renderer perspective.\r\n      // See: https://developer.mozilla.org/en-US/docs/Web/API/Node/textContent#differences_from_innertext\r\n      return strings.join('').replace(/[ \\t\\n\\f\\r]+/g, ' ').trim();\r\n    },\r\n    set: function(newtext) {\r\n      this.removeChildren();\r\n      if (newtext !== null && newtext !== undefined && newtext !== '') {\r\n        this._appendChild(this.ownerDocument.createTextNode(newtext));\r\n      }\r\n    }\r\n  },\r\n  innerHTML: {\r\n    get: function() {\r\n      return this.serialize();\r\n    },\r\n    set: utils.nyi\r\n  },\r\n  outerHTML: {\r\n    get: function() {\r\n      // \"the attribute must return the result of running the HTML fragment\r\n      // serialization algorithm on a fictional node whose only child is\r\n      // the context object\"\r\n      //\r\n      // The serialization logic is intentionally implemented in a separate\r\n      // `NodeUtils` helper instead of the more obvious choice of a private\r\n      // `_serializeOne()` method on the `Node.prototype` in order to avoid\r\n      // the megamorphic `this._serializeOne` property access, which reduces\r\n      // performance unnecessarily. If you need specialized behavior for a\r\n      // certain subclass, you'll need to implement that in `NodeUtils`.\r\n      // See https://github.com/fgnass/domino/pull/142 for more information.\r\n      return NodeUtils.serializeOne(this, { nodeType: 0 });\r\n    },\r\n    set: function(v) {\r\n      var document = this.ownerDocument;\r\n      var parent = this.parentNode;\r\n      if (parent === null) { return; }\r\n      if (parent.nodeType === Node.DOCUMENT_NODE) {\r\n        utils.NoModificationAllowedError();\r\n      }\r\n      if (parent.nodeType === Node.DOCUMENT_FRAGMENT_NODE) {\r\n        parent = parent.ownerDocument.createElement(\"body\");\r\n      }\r\n      var parser = document.implementation.mozHTMLParser(\r\n        document._address,\r\n        parent\r\n      );\r\n      parser.parse(v===null?'':String(v), true);\r\n      this.replaceWith(parser._asDocumentFragment());\r\n    },\r\n  },\r\n\r\n  _insertAdjacent: { value: function _insertAdjacent(position, node) {\r\n    var first = false;\r\n    switch(position) {\r\n    case 'beforebegin':\r\n      first = true;\r\n      /* falls through */\r\n    case 'afterend':\r\n      var parent = this.parentNode;\r\n      if (parent === null) { return null; }\r\n      return parent.insertBefore(node, first ? this : this.nextSibling);\r\n    case 'afterbegin':\r\n      first = true;\r\n      /* falls through */\r\n    case 'beforeend':\r\n      return this.insertBefore(node, first ? this.firstChild : null);\r\n    default:\r\n      return utils.SyntaxError();\r\n    }\r\n  }},\r\n\r\n  insertAdjacentElement: { value: function insertAdjacentElement(position, element) {\r\n    if (element.nodeType !== Node.ELEMENT_NODE) {\r\n      throw new TypeError('not an element');\r\n    }\r\n    position = utils.toASCIILowerCase(String(position));\r\n    return this._insertAdjacent(position, element);\r\n  }},\r\n\r\n  insertAdjacentText: { value: function insertAdjacentText(position, data) {\r\n    var textNode = this.ownerDocument.createTextNode(data);\r\n    position = utils.toASCIILowerCase(String(position));\r\n    this._insertAdjacent(position, textNode);\r\n    // \"This method returns nothing because it existed before we had a chance\r\n    // to design it.\"\r\n  }},\r\n\r\n  insertAdjacentHTML: { value: function insertAdjacentHTML(position, text) {\r\n    position = utils.toASCIILowerCase(String(position));\r\n    text = String(text);\r\n    var context;\r\n    switch(position) {\r\n    case 'beforebegin':\r\n    case 'afterend':\r\n      context = this.parentNode;\r\n      if (context === null || context.nodeType === Node.DOCUMENT_NODE) {\r\n        utils.NoModificationAllowedError();\r\n      }\r\n      break;\r\n    case 'afterbegin':\r\n    case 'beforeend':\r\n      context = this;\r\n      break;\r\n    default:\r\n      utils.SyntaxError();\r\n    }\r\n    if ( (!(context instanceof Element)) || (\r\n      context.ownerDocument.isHTML &&\r\n      context.localName === 'html' &&\r\n      context.namespaceURI === NAMESPACE.HTML\r\n    ) ) {\r\n      context = context.ownerDocument.createElementNS(NAMESPACE.HTML, 'body');\r\n    }\r\n    var parser = this.ownerDocument.implementation.mozHTMLParser(\r\n      this.ownerDocument._address, context\r\n    );\r\n    parser.parse(text, true);\r\n    this._insertAdjacent(position, parser._asDocumentFragment());\r\n  }},\r\n\r\n  children: { get: function() {\r\n    if (!this._children) {\r\n      this._children = new ChildrenCollection(this);\r\n    }\r\n    return this._children;\r\n  }},\r\n\r\n  attributes: { get: function() {\r\n    if (!this._attributes) {\r\n      this._attributes = new AttributesArray(this);\r\n    }\r\n    return this._attributes;\r\n  }},\r\n\r\n\r\n  firstElementChild: { get: function() {\r\n    for (var kid = this.firstChild; kid !== null; kid = kid.nextSibling) {\r\n      if (kid.nodeType === Node.ELEMENT_NODE) return kid;\r\n    }\r\n    return null;\r\n  }},\r\n\r\n  lastElementChild: { get: function() {\r\n    for (var kid = this.lastChild; kid !== null; kid = kid.previousSibling) {\r\n      if (kid.nodeType === Node.ELEMENT_NODE) return kid;\r\n    }\r\n    return null;\r\n  }},\r\n\r\n  childElementCount: { get: function() {\r\n    return this.children.length;\r\n  }},\r\n\r\n\r\n  // Return the next element, in source order, after this one or\r\n  // null if there are no more.  If root element is specified,\r\n  // then don't traverse beyond its subtree.\r\n  //\r\n  // This is not a DOM method, but is convenient for\r\n  // lazy traversals of the tree.\r\n  nextElement: { value: function(root) {\r\n    if (!root) root = this.ownerDocument.documentElement;\r\n    var next = this.firstElementChild;\r\n    if (!next) {\r\n      // don't use sibling if we're at root\r\n      if (this===root) return null;\r\n      next = this.nextElementSibling;\r\n    }\r\n    if (next) return next;\r\n\r\n    // If we can't go down or across, then we have to go up\r\n    // and across to the parent sibling or another ancestor's\r\n    // sibling.  Be careful, though: if we reach the root\r\n    // element, or if we reach the documentElement, then\r\n    // the traversal ends.\r\n    for(var parent = this.parentElement;\r\n      parent && parent !== root;\r\n      parent = parent.parentElement) {\r\n\r\n      next = parent.nextElementSibling;\r\n      if (next) return next;\r\n    }\r\n\r\n    return null;\r\n  }},\r\n\r\n  // XXX:\r\n  // Tests are currently failing for this function.\r\n  // Awaiting resolution of:\r\n  // http://lists.w3.org/Archives/Public/www-dom/2011JulSep/0016.html\r\n  getElementsByTagName: { value: function getElementsByTagName(lname) {\r\n    var filter;\r\n    if (!lname) return new NodeList();\r\n    if (lname === '*')\r\n      filter = function() { return true; };\r\n    else if (this.isHTML)\r\n      filter = htmlLocalNameElementFilter(lname);\r\n    else\r\n      filter = localNameElementFilter(lname);\r\n\r\n    return new FilteredElementList(this, filter);\r\n  }},\r\n\r\n  getElementsByTagNameNS: { value: function getElementsByTagNameNS(ns, lname){\r\n    var filter;\r\n    if (ns === '*' && lname === '*')\r\n      filter = function() { return true; };\r\n    else if (ns === '*')\r\n      filter = localNameElementFilter(lname);\r\n    else if (lname === '*')\r\n      filter = namespaceElementFilter(ns);\r\n    else\r\n      filter = namespaceLocalNameElementFilter(ns, lname);\r\n\r\n    return new FilteredElementList(this, filter);\r\n  }},\r\n\r\n  getElementsByClassName: { value: function getElementsByClassName(names){\r\n    names = String(names).trim();\r\n    if (names === '') {\r\n      var result = new NodeList(); // Empty node list\r\n      return result;\r\n    }\r\n    names = names.split(/[ \\t\\r\\n\\f]+/);  // Split on ASCII whitespace\r\n    return new FilteredElementList(this, classNamesElementFilter(names));\r\n  }},\r\n\r\n  getElementsByName: { value: function getElementsByName(name) {\r\n    return new FilteredElementList(this, elementNameFilter(String(name)));\r\n  }},\r\n\r\n  // Utility methods used by the public API methods above\r\n  clone: { value: function clone() {\r\n    var e;\r\n\r\n    // XXX:\r\n    // Modify this to use the constructor directly or\r\n    // avoid error checking in some other way. In case we try\r\n    // to clone an invalid node that the parser inserted.\r\n    //\r\n    if (this.namespaceURI !== NAMESPACE.HTML || this.prefix || !this.ownerDocument.isHTML) {\r\n      e = this.ownerDocument.createElementNS(\r\n        this.namespaceURI, (this.prefix !== null) ?\r\n          (this.prefix + ':' + this.localName) : this.localName\r\n      );\r\n    } else {\r\n      e = this.ownerDocument.createElement(this.localName);\r\n    }\r\n\r\n    for(var i = 0, n = this._attrKeys.length; i < n; i++) {\r\n      var lname = this._attrKeys[i];\r\n      var a = this._attrsByLName[lname];\r\n      var b = a.cloneNode();\r\n      b._setOwnerElement(e);\r\n      e._attrsByLName[lname] = b;\r\n      e._addQName(b);\r\n    }\r\n    e._attrKeys = this._attrKeys.concat();\r\n\r\n    return e;\r\n  }},\r\n\r\n  isEqual: { value: function isEqual(that) {\r\n    if (this.localName !== that.localName ||\r\n      this.namespaceURI !== that.namespaceURI ||\r\n      this.prefix !== that.prefix ||\r\n      this._numattrs !== that._numattrs)\r\n      return false;\r\n\r\n    // Compare the sets of attributes, ignoring order\r\n    // and ignoring attribute prefixes.\r\n    for(var i = 0, n = this._numattrs; i < n; i++) {\r\n      var a = this._attr(i);\r\n      if (!that.hasAttributeNS(a.namespaceURI, a.localName))\r\n        return false;\r\n      if (that.getAttributeNS(a.namespaceURI,a.localName) !== a.value)\r\n        return false;\r\n    }\r\n\r\n    return true;\r\n  }},\r\n\r\n  // This is the 'locate a namespace prefix' algorithm from the\r\n  // DOM specification.  It is used by Node.lookupPrefix()\r\n  // (Be sure to compare DOM3 and DOM4 versions of spec.)\r\n  _lookupNamespacePrefix: { value: function _lookupNamespacePrefix(ns, originalElement) {\r\n    if (\r\n      this.namespaceURI &&\r\n      this.namespaceURI === ns &&\r\n      this.prefix !== null &&\r\n      originalElement.lookupNamespaceURI(this.prefix) === ns\r\n    ) {\r\n      return this.prefix;\r\n    }\r\n\r\n    for(var i = 0, n = this._numattrs; i < n; i++) {\r\n      var a = this._attr(i);\r\n      if (\r\n        a.prefix === 'xmlns' &&\r\n        a.value === ns &&\r\n        originalElement.lookupNamespaceURI(a.localName) === ns\r\n      ) {\r\n        return a.localName;\r\n      }\r\n    }\r\n\r\n    var parent = this.parentElement;\r\n    return parent ? parent._lookupNamespacePrefix(ns, originalElement) : null;\r\n  }},\r\n\r\n  // This is the 'locate a namespace' algorithm for Element nodes\r\n  // from the DOM Core spec.  It is used by Node#lookupNamespaceURI()\r\n  lookupNamespaceURI: { value: function lookupNamespaceURI(prefix) {\r\n    if (prefix === '' || prefix === undefined) { prefix = null; }\r\n    if (this.namespaceURI !== null && this.prefix === prefix)\r\n      return this.namespaceURI;\r\n\r\n    for(var i = 0, n = this._numattrs; i < n; i++) {\r\n      var a = this._attr(i);\r\n      if (a.namespaceURI === NAMESPACE.XMLNS) {\r\n        if (\r\n          (a.prefix === 'xmlns' && a.localName === prefix) ||\r\n          (prefix === null && a.prefix === null && a.localName === 'xmlns')\r\n        ) {\r\n          return a.value || null;\r\n        }\r\n      }\r\n    }\r\n\r\n    var parent = this.parentElement;\r\n    return parent ? parent.lookupNamespaceURI(prefix) : null;\r\n  }},\r\n\r\n  //\r\n  // Attribute handling methods and utilities\r\n  //\r\n\r\n  /*\r\n   * Attributes in the DOM are tricky:\r\n   *\r\n   * - there are the 8 basic get/set/has/removeAttribute{NS} methods\r\n   *\r\n   * - but many HTML attributes are also 'reflected' through IDL\r\n   *   attributes which means that they can be queried and set through\r\n   *   regular properties of the element.  There is just one attribute\r\n   *   value, but two ways to get and set it.\r\n   *\r\n   * - Different HTML element types have different sets of reflected\r\n     attributes.\r\n   *\r\n   * - attributes can also be queried and set through the .attributes\r\n   *   property of an element.  This property behaves like an array of\r\n   *   Attr objects.  The value property of each Attr is writeable, so\r\n   *   this is a third way to read and write attributes.\r\n   *\r\n   * - for efficiency, we really want to store attributes in some kind\r\n   *   of name->attr map.  But the attributes[] array is an array, not a\r\n   *   map, which is kind of unnatural.\r\n   *\r\n   * - When using namespaces and prefixes, and mixing the NS methods\r\n   *   with the non-NS methods, it is apparently actually possible for\r\n   *   an attributes[] array to have more than one attribute with the\r\n   *   same qualified name.  And certain methods must operate on only\r\n   *   the first attribute with such a name.  So for these methods, an\r\n   *   inefficient array-like data structure would be easier to\r\n   *   implement.\r\n   *\r\n   * - The attributes[] array is live, not a snapshot, so changes to the\r\n   *   attributes must be immediately visible through existing arrays.\r\n   *\r\n   * - When attributes are queried and set through IDL properties\r\n   *   (instead of the get/setAttributes() method or the attributes[]\r\n   *   array) they may be subject to type conversions, URL\r\n   *   normalization, etc., so some extra processing is required in that\r\n   *   case.\r\n   *\r\n   * - But access through IDL properties is probably the most common\r\n   *   case, so we'd like that to be as fast as possible.\r\n   *\r\n   * - We can't just store attribute values in their parsed idl form,\r\n   *   because setAttribute() has to return whatever string is passed to\r\n   *   getAttribute even if it is not a legal, parseable value. So\r\n   *   attribute values must be stored in unparsed string form.\r\n   *\r\n   * - We need to be able to send change notifications or mutation\r\n   *   events of some sort to the renderer whenever an attribute value\r\n   *   changes, regardless of the way in which it changes.\r\n   *\r\n   * - Some attributes, such as id and class affect other parts of the\r\n   *   DOM API, like getElementById and getElementsByClassName and so\r\n   *   for efficiency, we need to specially track changes to these\r\n   *   special attributes.\r\n   *\r\n   * - Some attributes like class have different names (className) when\r\n   *   reflected.\r\n   *\r\n   * - Attributes whose names begin with the string 'data-' are treated\r\n     specially.\r\n   *\r\n   * - Reflected attributes that have a boolean type in IDL have special\r\n   *   behavior: setting them to false (in IDL) is the same as removing\r\n   *   them with removeAttribute()\r\n   *\r\n   * - numeric attributes (like HTMLElement.tabIndex) can have default\r\n   *   values that must be returned by the idl getter even if the\r\n   *   content attribute does not exist. (The default tabIndex value\r\n   *   actually varies based on the type of the element, so that is a\r\n   *   tricky one).\r\n   *\r\n   * See\r\n   * http://www.whatwg.org/specs/web-apps/current-work/multipage/urls.html#reflect\r\n   * for rules on how attributes are reflected.\r\n   *\r\n   */\r\n\r\n  getAttribute: { value: function getAttribute(qname) {\r\n    var attr = this.getAttributeNode(qname);\r\n    return attr ? attr.value : null;\r\n  }},\r\n\r\n  getAttributeNS: { value: function getAttributeNS(ns, lname) {\r\n    var attr = this.getAttributeNodeNS(ns, lname);\r\n    return attr ? attr.value : null;\r\n  }},\r\n\r\n  getAttributeNode: { value: function getAttributeNode(qname) {\r\n    qname = String(qname);\r\n    if (/[A-Z]/.test(qname) && this.isHTML)\r\n      qname = utils.toASCIILowerCase(qname);\r\n    var attr = this._attrsByQName[qname];\r\n    if (!attr) return null;\r\n\r\n    if (Array.isArray(attr))  // If there is more than one\r\n      attr = attr[0];         // use the first\r\n\r\n    return attr;\r\n  }},\r\n\r\n  getAttributeNodeNS: { value: function getAttributeNodeNS(ns, lname) {\r\n    ns = (ns === undefined || ns === null) ? '' : String(ns);\r\n    lname = String(lname);\r\n    var attr = this._attrsByLName[ns + '|' + lname];\r\n    return attr ? attr : null;\r\n  }},\r\n\r\n  hasAttribute: { value: function hasAttribute(qname) {\r\n    qname = String(qname);\r\n    if (/[A-Z]/.test(qname) && this.isHTML)\r\n      qname = utils.toASCIILowerCase(qname);\r\n    return this._attrsByQName[qname] !== undefined;\r\n  }},\r\n\r\n  hasAttributeNS: { value: function hasAttributeNS(ns, lname) {\r\n    ns = (ns === undefined || ns === null) ? '' : String(ns);\r\n    lname = String(lname);\r\n    var key = ns + '|' + lname;\r\n    return this._attrsByLName[key] !== undefined;\r\n  }},\r\n\r\n  hasAttributes: { value: function hasAttributes() {\r\n    return this._numattrs > 0;\r\n  }},\r\n\r\n  toggleAttribute: { value: function toggleAttribute(qname, force) {\r\n    qname = String(qname);\r\n    if (!xml.isValidName(qname)) utils.InvalidCharacterError();\r\n    if (/[A-Z]/.test(qname) && this.isHTML)\r\n      qname = utils.toASCIILowerCase(qname);\r\n    var a = this._attrsByQName[qname];\r\n    if (a === undefined) {\r\n      if (force === undefined || force === true) {\r\n        this._setAttribute(qname, '');\r\n        return true;\r\n      }\r\n      return false;\r\n    } else {\r\n      if (force === undefined || force === false) {\r\n        this.removeAttribute(qname);\r\n        return false;\r\n      }\r\n      return true;\r\n    }\r\n  }},\r\n\r\n  // Set the attribute without error checking. The parser uses this.\r\n  _setAttribute: { value: function _setAttribute(qname, value) {\r\n    // XXX: the spec says that this next search should be done\r\n    // on the local name, but I think that is an error.\r\n    // email pending on www-dom about it.\r\n    var attr = this._attrsByQName[qname];\r\n    var isnew;\r\n    if (!attr) {\r\n      attr = this._newattr(qname);\r\n      isnew = true;\r\n    }\r\n    else {\r\n      if (Array.isArray(attr)) attr = attr[0];\r\n    }\r\n\r\n    // Now set the attribute value on the new or existing Attr object.\r\n    // The Attr.value setter method handles mutation events, etc.\r\n    attr.value = value;\r\n    if (this._attributes) this._attributes[qname] = attr;\r\n    if (isnew && this._newattrhook) this._newattrhook(qname, value);\r\n  }},\r\n\r\n  // Check for errors, and then set the attribute\r\n  setAttribute: { value: function setAttribute(qname, value) {\r\n    qname = String(qname);\r\n    if (!xml.isValidName(qname)) utils.InvalidCharacterError();\r\n    if (/[A-Z]/.test(qname) && this.isHTML)\r\n      qname = utils.toASCIILowerCase(qname);\r\n    this._setAttribute(qname, String(value));\r\n  }},\r\n\r\n\r\n  // The version with no error checking used by the parser\r\n  _setAttributeNS: { value: function _setAttributeNS(ns, qname, value) {\r\n    var pos = qname.indexOf(':'), prefix, lname;\r\n    if (pos < 0) {\r\n      prefix = null;\r\n      lname = qname;\r\n    }\r\n    else {\r\n      prefix = qname.substring(0, pos);\r\n      lname = qname.substring(pos+1);\r\n    }\r\n\r\n    if (ns === '' || ns === undefined) ns = null;\r\n    var key = (ns === null ? '' : ns) + '|' + lname;\r\n\r\n    var attr = this._attrsByLName[key];\r\n    var isnew;\r\n    if (!attr) {\r\n      attr = new Attr(this, lname, prefix, ns);\r\n      isnew = true;\r\n      this._attrsByLName[key] = attr;\r\n      if (this._attributes) {\r\n        this._attributes[this._attrKeys.length] = attr;\r\n      }\r\n      this._attrKeys.push(key);\r\n\r\n      // We also have to make the attr searchable by qname.\r\n      // But we have to be careful because there may already\r\n      // be an attr with this qname.\r\n      this._addQName(attr);\r\n    }\r\n    else if (false /* changed in DOM 4 */) {\r\n      // Calling setAttributeNS() can change the prefix of an\r\n      // existing attribute in DOM 2/3.\r\n      if (attr.prefix !== prefix) {\r\n        // Unbind the old qname\r\n        this._removeQName(attr);\r\n        // Update the prefix\r\n        attr.prefix = prefix;\r\n        // Bind the new qname\r\n        this._addQName(attr);\r\n      }\r\n\r\n    }\r\n    attr.value = value; // Automatically sends mutation event\r\n    if (isnew && this._newattrhook) this._newattrhook(qname, value);\r\n  }},\r\n\r\n  // Do error checking then call _setAttributeNS\r\n  setAttributeNS: { value: function setAttributeNS(ns, qname, value) {\r\n    // Convert parameter types according to WebIDL\r\n    ns = (ns === null || ns === undefined || ns === '') ? null : String(ns);\r\n    qname = String(qname);\r\n    if (!xml.isValidQName(qname)) utils.InvalidCharacterError();\r\n\r\n    var pos = qname.indexOf(':');\r\n    var prefix = (pos < 0) ? null : qname.substring(0, pos);\r\n\r\n    if ((prefix !== null && ns === null) ||\r\n      (prefix === 'xml' && ns !== NAMESPACE.XML) ||\r\n      ((qname === 'xmlns' || prefix === 'xmlns') &&\r\n       (ns !== NAMESPACE.XMLNS)) ||\r\n      (ns === NAMESPACE.XMLNS &&\r\n       !(qname === 'xmlns' || prefix === 'xmlns')))\r\n      utils.NamespaceError();\r\n\r\n    this._setAttributeNS(ns, qname, String(value));\r\n  }},\r\n\r\n  setAttributeNode: { value: function setAttributeNode(attr) {\r\n    if (attr.ownerElement !== null && attr.ownerElement !== this) {\r\n      throw new DOMException(DOMException.INUSE_ATTRIBUTE_ERR);\r\n    }\r\n    var result = null;\r\n    var oldAttrs = this._attrsByQName[attr.name];\r\n    if (oldAttrs) {\r\n      if (!Array.isArray(oldAttrs)) { oldAttrs = [ oldAttrs ]; }\r\n      if (oldAttrs.some(function(a) { return a===attr; })) {\r\n        return attr;\r\n      } else if (attr.ownerElement !== null) {\r\n        throw new DOMException(DOMException.INUSE_ATTRIBUTE_ERR);\r\n      }\r\n      oldAttrs.forEach(function(a) { this.removeAttributeNode(a); }, this);\r\n      result = oldAttrs[0];\r\n    }\r\n    this.setAttributeNodeNS(attr);\r\n    return result;\r\n  }},\r\n\r\n  setAttributeNodeNS: { value: function setAttributeNodeNS(attr) {\r\n    if (attr.ownerElement !== null) {\r\n      throw new DOMException(DOMException.INUSE_ATTRIBUTE_ERR);\r\n    }\r\n    var ns = attr.namespaceURI;\r\n    var key = (ns === null ? '' : ns) + '|' + attr.localName;\r\n    var oldAttr = this._attrsByLName[key];\r\n    if (oldAttr) { this.removeAttributeNode(oldAttr); }\r\n    attr._setOwnerElement(this);\r\n    this._attrsByLName[key] = attr;\r\n    if (this._attributes) {\r\n      this._attributes[this._attrKeys.length] = attr;\r\n    }\r\n    this._attrKeys.push(key);\r\n    this._addQName(attr);\r\n    if (this._newattrhook) this._newattrhook(attr.name, attr.value);\r\n    return oldAttr || null;\r\n  }},\r\n\r\n  removeAttribute: { value: function removeAttribute(qname) {\r\n    qname = String(qname);\r\n    if (/[A-Z]/.test(qname) && this.isHTML)\r\n      qname = utils.toASCIILowerCase(qname);\r\n\r\n    var attr = this._attrsByQName[qname];\r\n    if (!attr) return;\r\n\r\n    // If there is more than one match for this qname\r\n    // so don't delete the qname mapping, just remove the first\r\n    // element from it.\r\n    if (Array.isArray(attr)) {\r\n      if (attr.length > 2) {\r\n        attr = attr.shift();  // remove it from the array\r\n      }\r\n      else {\r\n        this._attrsByQName[qname] = attr[1];\r\n        attr = attr[0];\r\n      }\r\n    }\r\n    else {\r\n      // only a single match, so remove the qname mapping\r\n      this._attrsByQName[qname] = undefined;\r\n    }\r\n\r\n    var ns = attr.namespaceURI;\r\n    // Now attr is the removed attribute.  Figure out its\r\n    // ns+lname key and remove it from the other mapping as well.\r\n    var key = (ns === null ? '' : ns) + '|' + attr.localName;\r\n    this._attrsByLName[key] = undefined;\r\n\r\n    var i = this._attrKeys.indexOf(key);\r\n    if (this._attributes) {\r\n      Array.prototype.splice.call(this._attributes, i, 1);\r\n      this._attributes[qname] = undefined;\r\n    }\r\n    this._attrKeys.splice(i, 1);\r\n\r\n    // Onchange handler for the attribute\r\n    var onchange = attr.onchange;\r\n    attr._setOwnerElement(null);\r\n    if (onchange) {\r\n      onchange.call(attr, this, attr.localName, attr.value, null);\r\n    }\r\n    // Mutation event\r\n    if (this.rooted) this.ownerDocument.mutateRemoveAttr(attr);\r\n  }},\r\n\r\n  removeAttributeNS: { value: function removeAttributeNS(ns, lname) {\r\n    ns = (ns === undefined || ns === null) ? '' : String(ns);\r\n    lname = String(lname);\r\n    var key = ns + '|' + lname;\r\n    var attr = this._attrsByLName[key];\r\n    if (!attr) return;\r\n\r\n    this._attrsByLName[key] = undefined;\r\n\r\n    var i = this._attrKeys.indexOf(key);\r\n    if (this._attributes) {\r\n      Array.prototype.splice.call(this._attributes, i, 1);\r\n    }\r\n    this._attrKeys.splice(i, 1);\r\n\r\n    // Now find the same Attr object in the qname mapping and remove it\r\n    // But be careful because there may be more than one match.\r\n    this._removeQName(attr);\r\n\r\n    // Onchange handler for the attribute\r\n    var onchange = attr.onchange;\r\n    attr._setOwnerElement(null);\r\n    if (onchange) {\r\n      onchange.call(attr, this, attr.localName, attr.value, null);\r\n    }\r\n    // Mutation event\r\n    if (this.rooted) this.ownerDocument.mutateRemoveAttr(attr);\r\n  }},\r\n\r\n  removeAttributeNode: { value: function removeAttributeNode(attr) {\r\n    var ns = attr.namespaceURI;\r\n    var key = (ns === null ? '' : ns) + '|' + attr.localName;\r\n    if (this._attrsByLName[key] !== attr) {\r\n      utils.NotFoundError();\r\n    }\r\n    this.removeAttributeNS(ns, attr.localName);\r\n    return attr;\r\n  }},\r\n\r\n  getAttributeNames: { value: function getAttributeNames() {\r\n    var elt = this;\r\n    return this._attrKeys.map(function(key) {\r\n      return elt._attrsByLName[key].name;\r\n    });\r\n  }},\r\n\r\n  // This 'raw' version of getAttribute is used by the getter functions\r\n  // of reflected attributes. It skips some error checking and\r\n  // namespace steps\r\n  _getattr: { value: function _getattr(qname) {\r\n    // Assume that qname is already lowercased, so don't do it here.\r\n    // Also don't check whether attr is an array: a qname with no\r\n    // prefix will never have two matching Attr objects (because\r\n    // setAttributeNS doesn't allow a non-null namespace with a\r\n    // null prefix.\r\n    var attr = this._attrsByQName[qname];\r\n    return attr ? attr.value : null;\r\n  }},\r\n\r\n  // The raw version of setAttribute for reflected idl attributes.\r\n  _setattr: { value: function _setattr(qname, value) {\r\n    var attr = this._attrsByQName[qname];\r\n    var isnew;\r\n    if (!attr) {\r\n      attr = this._newattr(qname);\r\n      isnew = true;\r\n    }\r\n    attr.value = String(value);\r\n    if (this._attributes) this._attributes[qname] = attr;\r\n    if (isnew && this._newattrhook) this._newattrhook(qname, value);\r\n  }},\r\n\r\n  // Create a new Attr object, insert it, and return it.\r\n  // Used by setAttribute() and by set()\r\n  _newattr: { value: function _newattr(qname) {\r\n    var attr = new Attr(this, qname, null, null);\r\n    var key = '|' + qname;\r\n    this._attrsByQName[qname] = attr;\r\n    this._attrsByLName[key] = attr;\r\n    if (this._attributes) {\r\n      this._attributes[this._attrKeys.length] = attr;\r\n    }\r\n    this._attrKeys.push(key);\r\n    return attr;\r\n  }},\r\n\r\n  // Add a qname->Attr mapping to the _attrsByQName object, taking into\r\n  // account that there may be more than one attr object with the\r\n  // same qname\r\n  _addQName: { value: function(attr) {\r\n    var qname = attr.name;\r\n    var existing = this._attrsByQName[qname];\r\n    if (!existing) {\r\n      this._attrsByQName[qname] = attr;\r\n    }\r\n    else if (Array.isArray(existing)) {\r\n      existing.push(attr);\r\n    }\r\n    else {\r\n      this._attrsByQName[qname] = [existing, attr];\r\n    }\r\n    if (this._attributes) this._attributes[qname] = attr;\r\n  }},\r\n\r\n  // Remove a qname->Attr mapping to the _attrsByQName object, taking into\r\n  // account that there may be more than one attr object with the\r\n  // same qname\r\n  _removeQName: { value: function(attr) {\r\n    var qname = attr.name;\r\n    var target = this._attrsByQName[qname];\r\n\r\n    if (Array.isArray(target)) {\r\n      var idx = target.indexOf(attr);\r\n      utils.assert(idx !== -1); // It must be here somewhere\r\n      if (target.length === 2) {\r\n        this._attrsByQName[qname] = target[1-idx];\r\n        if (this._attributes) {\r\n          this._attributes[qname] = this._attrsByQName[qname];\r\n        }\r\n      } else {\r\n        target.splice(idx, 1);\r\n        if (this._attributes && this._attributes[qname] === attr) {\r\n          this._attributes[qname] = target[0];\r\n        }\r\n      }\r\n    }\r\n    else {\r\n      utils.assert(target === attr);  // If only one, it must match\r\n      this._attrsByQName[qname] = undefined;\r\n      if (this._attributes) {\r\n        this._attributes[qname] = undefined;\r\n      }\r\n    }\r\n  }},\r\n\r\n  // Return the number of attributes\r\n  _numattrs: { get: function() { return this._attrKeys.length; }},\r\n  // Return the nth Attr object\r\n  _attr: { value: function(n) {\r\n    return this._attrsByLName[this._attrKeys[n]];\r\n  }},\r\n\r\n  // Define getters and setters for an 'id' property that reflects\r\n  // the content attribute 'id'.\r\n  id: attributes.property({name: 'id'}),\r\n\r\n  // Define getters and setters for a 'className' property that reflects\r\n  // the content attribute 'class'.\r\n  className: attributes.property({name: 'class'}),\r\n\r\n  classList: { get: function() {\r\n    var self = this;\r\n    if (this._classList) {\r\n      return this._classList;\r\n    }\r\n    var dtlist = new DOMTokenList(\r\n      function() {\r\n        return self.className || \"\";\r\n      },\r\n      function(v) {\r\n        self.className = v;\r\n      }\r\n    );\r\n    this._classList = dtlist;\r\n    return dtlist;\r\n  }, set: function(v) { this.className = v; }},\r\n\r\n  matches: { value: function(selector) {\r\n    return select.matches(this, selector);\r\n  }},\r\n\r\n  closest: { value: function(selector) {\r\n    var el = this;\r\n\tdo {\r\n\t  if (el.matches && el.matches(selector)) { return el; }\r\n\t  el = el.parentElement || el.parentNode;\r\n\t} while (el !== null && el.nodeType === Node.ELEMENT_NODE);\r\n\treturn null;\r\n  }},\r\n\r\n  querySelector: { value: function(selector) {\r\n    return select(selector, this)[0];\r\n  }},\r\n\r\n  querySelectorAll: { value: function(selector) {\r\n    var nodes = select(selector, this);\r\n    return nodes.item ? nodes : new NodeList(nodes);\r\n  }}\r\n\r\n});\r\n\r\nObject.defineProperties(Element.prototype, ChildNode);\r\nObject.defineProperties(Element.prototype, NonDocumentTypeChildNode);\r\n\r\n// Register special handling for the id attribute\r\nattributes.registerChangeHandler(Element, 'id',\r\n function(element, lname, oldval, newval) {\r\n   if (element.rooted) {\r\n     if (oldval) {\r\n       element.ownerDocument.delId(oldval, element);\r\n     }\r\n     if (newval) {\r\n       element.ownerDocument.addId(newval, element);\r\n     }\r\n   }\r\n }\r\n);\r\nattributes.registerChangeHandler(Element, 'class',\r\n function(element, lname, oldval, newval) {\r\n   if (element._classList) { element._classList._update(); }\r\n }\r\n);\r\n\r\n// The Attr class represents a single attribute.  The values in\r\n// _attrsByQName and _attrsByLName are instances of this class.\r\nfunction Attr(elt, lname, prefix, namespace, value) {\r\n  // localName and namespace are constant for any attr object.\r\n  // But value may change.  And so can prefix, and so, therefore can name.\r\n  this.localName = lname;\r\n  this.prefix = (prefix===null || prefix==='') ? null : ('' + prefix);\r\n  this.namespaceURI = (namespace===null || namespace==='') ? null : ('' + namespace);\r\n  this.data = value;\r\n  // Set ownerElement last to ensure it is hooked up to onchange handler\r\n  this._setOwnerElement(elt);\r\n}\r\n\r\n// In DOM 3 Attr was supposed to extend Node; in DOM 4 that was abandoned.\r\nAttr.prototype = Object.create(Object.prototype, {\r\n  ownerElement: {\r\n    get: function() { return this._ownerElement; },\r\n  },\r\n  _setOwnerElement: { value: function _setOwnerElement(elt) {\r\n    this._ownerElement = elt;\r\n    if (this.prefix === null && this.namespaceURI === null && elt) {\r\n      this.onchange = elt._attributeChangeHandlers[this.localName];\r\n    } else {\r\n      this.onchange = null;\r\n    }\r\n  }},\r\n\r\n  name: { get: function() {\r\n    return this.prefix ? this.prefix + ':' + this.localName : this.localName;\r\n  }},\r\n\r\n  specified: { get: function() {\r\n    // Deprecated\r\n    return true;\r\n  }},\r\n\r\n  value: {\r\n    get: function() {\r\n      return this.data;\r\n    },\r\n    set: function(value) {\r\n      var oldval = this.data;\r\n      value = (value === undefined) ? '' : value + '';\r\n      if (value === oldval) return;\r\n\r\n      this.data = value;\r\n\r\n      // Run the onchange hook for the attribute\r\n      // if there is one.\r\n      if (this.ownerElement) {\r\n        if (this.onchange)\r\n          this.onchange(this.ownerElement,this.localName, oldval, value);\r\n\r\n        // Generate a mutation event if the element is rooted\r\n        if (this.ownerElement.rooted)\r\n          this.ownerElement.ownerDocument.mutateAttr(this, oldval);\r\n      }\r\n    },\r\n  },\r\n\r\n  cloneNode: { value: function cloneNode(deep) {\r\n    // Both this method and Document#createAttribute*() create unowned Attrs\r\n    return new Attr(\r\n      null, this.localName, this.prefix, this.namespaceURI, this.data\r\n    );\r\n  }},\r\n\r\n  // Legacy aliases (see gh#70 and https://dom.spec.whatwg.org/#interface-attr)\r\n  nodeType: { get: function() { return Node.ATTRIBUTE_NODE; } },\r\n  nodeName: { get: function() { return this.name; } },\r\n  nodeValue: {\r\n    get: function() { return this.value; },\r\n    set: function(v) { this.value = v; },\r\n  },\r\n  textContent: {\r\n    get: function() { return this.value; },\r\n    set: function(v) {\r\n      if (v === null || v === undefined) { v = ''; }\r\n      this.value = v;\r\n    },\r\n  },\r\n  innerText: {\r\n    get: function() { return this.value; },\r\n    set: function(v) {\r\n      if (v === null || v === undefined) { v = ''; }\r\n      this.value = v;\r\n    },\r\n  },\r\n});\r\n// Sneakily export this class for use by Document.createAttribute()\r\nElement._Attr = Attr;\r\n\r\n// The attributes property of an Element will be an instance of this class.\r\n// This class is really just a dummy, though. It only defines a length\r\n// property and an item() method. The AttrArrayProxy that\r\n// defines the public API just uses the Element object itself.\r\nfunction AttributesArray(elt) {\r\n  NamedNodeMap.call(this, elt);\r\n  for (var name in elt._attrsByQName) {\r\n    this[name] = elt._attrsByQName[name];\r\n  }\r\n  for (var i = 0; i < elt._attrKeys.length; i++) {\r\n    this[i] = elt._attrsByLName[elt._attrKeys[i]];\r\n  }\r\n}\r\nAttributesArray.prototype = Object.create(NamedNodeMap.prototype, {\r\n  length: { get: function() {\r\n    return this.element._attrKeys.length;\r\n  }, set: function() { /* ignore */ } },\r\n  item: { value: function(n) {\r\n    /* jshint bitwise: false */\r\n    n = n >>> 0;\r\n    if (n >= this.length) { return null; }\r\n    return this.element._attrsByLName[this.element._attrKeys[n]];\r\n    /* jshint bitwise: true */\r\n  } },\r\n});\r\n\r\n// We can't make direct array access work (without Proxies, node >=6)\r\n// but we can make `Array.from(node.attributes)` and for-of loops work.\r\nif (globalThis.Symbol?.iterator) {\r\n    AttributesArray.prototype[globalThis.Symbol.iterator] = function() {\r\n        var i=0, n=this.length, self=this;\r\n        return {\r\n            next: function() {\r\n                if (i<n) return { value: self.item(i++) };\r\n                return { done: true };\r\n            }\r\n        };\r\n    };\r\n}\r\n\r\n\r\n// The children property of an Element will be an instance of this class.\r\n// It defines length, item() and namedItem() and will be wrapped by an\r\n// HTMLCollection when exposed through the DOM.\r\nfunction ChildrenCollection(e) {\r\n  this.element = e;\r\n  this.updateCache();\r\n}\r\n\r\nChildrenCollection.prototype = Object.create(Object.prototype, {\r\n  length: { get: function() {\r\n    this.updateCache();\r\n    return this.childrenByNumber.length;\r\n  } },\r\n  item: { value: function item(n) {\r\n    this.updateCache();\r\n    return this.childrenByNumber[n] || null;\r\n  } },\r\n\r\n  namedItem: { value: function namedItem(name) {\r\n    this.updateCache();\r\n    return this.childrenByName[name] || null;\r\n  } },\r\n\r\n  // This attribute returns the entire name->element map.\r\n  // It is not part of the HTMLCollection API, but we need it in\r\n  // src/HTMLCollectionProxy\r\n  namedItems: { get: function() {\r\n    this.updateCache();\r\n    return this.childrenByName;\r\n  } },\r\n\r\n  updateCache: { value: function updateCache() {\r\n    var namedElts = /^(a|applet|area|embed|form|frame|frameset|iframe|img|object)$/;\r\n    if (this.lastModTime !== this.element.lastModTime) {\r\n      this.lastModTime = this.element.lastModTime;\r\n\r\n      var n = this.childrenByNumber && this.childrenByNumber.length || 0;\r\n      for(var i = 0; i < n; i++) {\r\n        this[i] = undefined;\r\n      }\r\n\r\n      this.childrenByNumber = [];\r\n      this.childrenByName = Object.create(null);\r\n\r\n      for (var c = this.element.firstChild; c !== null; c = c.nextSibling) {\r\n        if (c.nodeType === Node.ELEMENT_NODE) {\r\n\r\n          this[this.childrenByNumber.length] = c;\r\n          this.childrenByNumber.push(c);\r\n\r\n          // XXX Are there any requirements about the namespace\r\n          // of the id property?\r\n          var id = c.getAttribute('id');\r\n\r\n          // If there is an id that is not already in use...\r\n          if (id && !this.childrenByName[id])\r\n            this.childrenByName[id] = c;\r\n\r\n          // For certain HTML elements we check the name attribute\r\n          var name = c.getAttribute('name');\r\n          if (name &&\r\n            this.element.namespaceURI === NAMESPACE.HTML &&\r\n            namedElts.test(this.element.localName) &&\r\n            !this.childrenByName[name])\r\n            this.childrenByName[id] = c;\r\n        }\r\n      }\r\n    }\r\n  } },\r\n});\r\n\r\n// These functions return predicates for filtering elements.\r\n// They're used by the Document and Element classes for methods like\r\n// getElementsByTagName and getElementsByClassName\r\n\r\nfunction localNameElementFilter(lname) {\r\n  return function(e) { return e.localName === lname; };\r\n}\r\n\r\nfunction htmlLocalNameElementFilter(lname) {\r\n  var lclname = utils.toASCIILowerCase(lname);\r\n  if (lclname === lname)\r\n    return localNameElementFilter(lname);\r\n\r\n  return function(e) {\r\n    return e.isHTML ? e.localName === lclname : e.localName === lname;\r\n  };\r\n}\r\n\r\nfunction namespaceElementFilter(ns) {\r\n  return function(e) { return e.namespaceURI === ns; };\r\n}\r\n\r\nfunction namespaceLocalNameElementFilter(ns, lname) {\r\n  return function(e) {\r\n    return e.namespaceURI === ns && e.localName === lname;\r\n  };\r\n}\r\n\r\nfunction classNamesElementFilter(names) {\r\n  return function(e) {\r\n    return names.every(function(n) { return e.classList.contains(n); });\r\n  };\r\n}\r\n\r\nfunction elementNameFilter(name) {\r\n  return function(e) {\r\n    // All the *HTML elements* in the document with the given name attribute\r\n    if (e.namespaceURI !== NAMESPACE.HTML) { return false; }\r\n    return e.getAttribute('name') === name;\r\n  };\r\n}\r\n", "\"use strict\";\r\nmodule.exports = Leaf;\r\n\r\nvar Node = require('./Node');\r\nvar NodeList = require('./NodeList');\r\nvar utils = require('./utils');\r\nvar HierarchyRequestError = utils.HierarchyRequestError;\r\nvar NotFoundError = utils.NotFoundError;\r\n\r\n// This class defines common functionality for node subtypes that\r\n// can never have children\r\nfunction Leaf() {\r\n  Node.call(this);\r\n}\r\n\r\nLeaf.prototype = Object.create(Node.prototype, {\r\n  hasChildNodes: { value: function() { return false; }},\r\n  firstChild: { value: null },\r\n  lastChild: { value: null },\r\n  insertBefore: { value: function(node, child) {\r\n    if (!node.nodeType) throw new TypeError('not a node');\r\n    HierarchyRequestError();\r\n  }},\r\n  replaceChild: { value: function(node, child) {\r\n    if (!node.nodeType) throw new TypeError('not a node');\r\n    HierarchyRequestError();\r\n  }},\r\n  removeChild: { value: function(node) {\r\n    if (!node.nodeType) throw new TypeError('not a node');\r\n    NotFoundError();\r\n  }},\r\n  removeChildren: { value: function() { /* no op */ }},\r\n  childNodes: { get: function() {\r\n    if (!this._childNodes) this._childNodes = new NodeList();\r\n    return this._childNodes;\r\n  }}\r\n});\r\n", "/* jshint bitwise: false */\r\n\"use strict\";\r\nmodule.exports = CharacterData;\r\n\r\nvar Leaf = require('./Leaf');\r\nvar utils = require('./utils');\r\nvar ChildNode = require('./ChildNode');\r\nvar NonDocumentTypeChildNode = require('./NonDocumentTypeChildNode');\r\n\r\nfunction CharacterData() {\r\n  Leaf.call(this);\r\n}\r\n\r\nCharacterData.prototype = Object.create(Leaf.prototype, {\r\n  // DOMString substringData(unsigned long offset,\r\n  //               unsigned long count);\r\n  // The substringData(offset, count) method must run these steps:\r\n  //\r\n  //     If offset is greater than the context object's\r\n  //     length, throw an INDEX_SIZE_ERR exception and\r\n  //     terminate these steps.\r\n  //\r\n  //     If offset+count is greater than the context\r\n  //     object's length, return a DOMString whose value is\r\n  //     the UTF-16 code units from the offsetth UTF-16 code\r\n  //     unit to the end of data.\r\n  //\r\n  //     Return a DOMString whose value is the UTF-16 code\r\n  //     units from the offsetth UTF-16 code unit to the\r\n  //     offset+countth UTF-16 code unit in data.\r\n  substringData: { value: function substringData(offset, count) {\r\n    if (arguments.length < 2) { throw new TypeError(\"Not enough arguments\"); }\r\n    // Convert arguments to WebIDL \"unsigned long\"\r\n    offset = offset >>> 0;\r\n    count = count >>> 0;\r\n    if (offset > this.data.length || offset < 0 || count < 0) {\r\n      utils.IndexSizeError();\r\n    }\r\n    return this.data.substring(offset, offset+count);\r\n  }},\r\n\r\n  // void appendData(DOMString data);\r\n  // The appendData(data) method must append data to the context\r\n  // object's data.\r\n  appendData: { value: function appendData(data) {\r\n    if (arguments.length < 1) { throw new TypeError(\"Not enough arguments\"); }\r\n    this.data += String(data);\r\n  }},\r\n\r\n  // void insertData(unsigned long offset, DOMString data);\r\n  // The insertData(offset, data) method must run these steps:\r\n  //\r\n  //     If offset is greater than the context object's\r\n  //     length, throw an INDEX_SIZE_ERR exception and\r\n  //     terminate these steps.\r\n  //\r\n  //     Insert data into the context object's data after\r\n  //     offset UTF-16 code units.\r\n  //\r\n  insertData: { value: function insertData(offset, data) {\r\n    return this.replaceData(offset, 0, data);\r\n  }},\r\n\r\n\r\n  // void deleteData(unsigned long offset, unsigned long count);\r\n  // The deleteData(offset, count) method must run these steps:\r\n  //\r\n  //     If offset is greater than the context object's\r\n  //     length, throw an INDEX_SIZE_ERR exception and\r\n  //     terminate these steps.\r\n  //\r\n  //     If offset+count is greater than the context\r\n  //     object's length var count be length-offset.\r\n  //\r\n  //     Starting from offset UTF-16 code units remove count\r\n  //     UTF-16 code units from the context object's data.\r\n  deleteData: { value: function deleteData(offset, count) {\r\n    return this.replaceData(offset, count, '');\r\n  }},\r\n\r\n\r\n  // void replaceData(unsigned long offset, unsigned long count,\r\n  //          DOMString data);\r\n  //\r\n  // The replaceData(offset, count, data) method must act as\r\n  // if the deleteData() method is invoked with offset and\r\n  // count as arguments followed by the insertData() method\r\n  // with offset and data as arguments and re-throw any\r\n  // exceptions these methods might have thrown.\r\n  replaceData: { value: function replaceData(offset, count, data) {\r\n    var curtext = this.data, len = curtext.length;\r\n    // Convert arguments to correct WebIDL type\r\n    offset = offset >>> 0;\r\n    count = count >>> 0;\r\n    data = String(data);\r\n\r\n    if (offset > len || offset < 0) utils.IndexSizeError();\r\n\r\n    if (offset+count > len)\r\n      count = len - offset;\r\n\r\n    var prefix = curtext.substring(0, offset),\r\n    suffix = curtext.substring(offset+count);\r\n\r\n    this.data = prefix + data + suffix;\r\n  }},\r\n\r\n  // Utility method that Node.isEqualNode() calls to test Text and\r\n  // Comment nodes for equality.  It is okay to put it here, since\r\n  // Node will have already verified that nodeType is equal\r\n  isEqual: { value: function isEqual(n) {\r\n    return this._data === n._data;\r\n  }},\r\n\r\n  length: { get: function() { return this.data.length; }}\r\n\r\n});\r\n\r\nObject.defineProperties(CharacterData.prototype, ChildNode);\r\nObject.defineProperties(CharacterData.prototype, NonDocumentTypeChildNode);\r\n", "\"use strict\";\r\nmodule.exports = Text;\r\n\r\nvar utils = require('./utils');\r\nvar Node = require('./Node');\r\nvar CharacterData = require('./CharacterData');\r\n\r\nfunction Text(doc, data) {\r\n  CharacterData.call(this);\r\n  this.nodeType = Node.TEXT_NODE;\r\n  this.ownerDocument = doc;\r\n  this._data = data;\r\n  this._index = undefined;\r\n}\r\n\r\nvar nodeValue = {\r\n  get: function() { return this._data; },\r\n  set: function(v) {\r\n    if (v === null || v === undefined) { v = ''; } else { v = String(v); }\r\n    if (v === this._data) return;\r\n    this._data = v;\r\n    if (this.rooted)\r\n      this.ownerDocument.mutateValue(this);\r\n    if (this.parentNode &&\r\n      this.parentNode._textchangehook)\r\n      this.parentNode._textchangehook(this);\r\n  }\r\n};\r\n\r\nText.prototype = Object.create(CharacterData.prototype, {\r\n  nodeName: { value: \"#text\" },\r\n  // These three attributes are all the same.\r\n  // The data attribute has a [TreatNullAs=EmptyString] but we'll\r\n  // implement that at the interface level\r\n  nodeValue: nodeValue,\r\n  textContent: nodeValue,\r\n  innerText: nodeValue,\r\n  data: {\r\n    get: nodeValue.get,\r\n    set: function(v) {\r\n      nodeValue.set.call(this, v===null ? '' : String(v));\r\n    },\r\n  },\r\n\r\n  splitText: { value: function splitText(offset) {\r\n    if (offset > this._data.length || offset < 0) utils.IndexSizeError();\r\n\r\n    var newdata = this._data.substring(offset),\r\n      newnode = this.ownerDocument.createTextNode(newdata);\r\n    this.data = this.data.substring(0, offset);\r\n\r\n    var parent = this.parentNode;\r\n    if (parent !== null)\r\n      parent.insertBefore(newnode, this.nextSibling);\r\n\r\n    return newnode;\r\n  }},\r\n\r\n  wholeText: { get: function wholeText() {\r\n    var result = this.textContent;\r\n    for (var next = this.nextSibling; next; next = next.nextSibling) {\r\n      if (next.nodeType !== Node.TEXT_NODE) { break; }\r\n      result += next.textContent;\r\n    }\r\n    return result;\r\n  }},\r\n  // Obsolete, removed from spec.\r\n  replaceWholeText: { value: utils.nyi },\r\n\r\n  // Utility methods\r\n  clone: { value: function clone() {\r\n    return new Text(this.ownerDocument, this._data);\r\n  }},\r\n\r\n});\r\n", "\"use strict\";\r\nmodule.exports = Comment;\r\n\r\nvar Node = require('./Node');\r\nvar CharacterData = require('./CharacterData');\r\n\r\nfunction Comment(doc, data) {\r\n  CharacterData.call(this);\r\n  this.nodeType = Node.COMMENT_NODE;\r\n  this.ownerDocument = doc;\r\n  this._data = data;\r\n}\r\n\r\nvar nodeValue = {\r\n  get: function() { return this._data; },\r\n  set: function(v) {\r\n    if (v === null || v === undefined) { v = ''; } else { v = String(v); }\r\n    this._data = v;\r\n    if (this.rooted)\r\n      this.ownerDocument.mutateValue(this);\r\n  }\r\n};\r\n\r\nComment.prototype = Object.create(CharacterData.prototype, {\r\n  nodeName: { value: '#comment' },\r\n  nodeValue: nodeValue,\r\n  textContent: nodeValue,\r\n  innerText: nodeValue,\r\n  data: {\r\n    get: nodeValue.get,\r\n    set: function(v) {\r\n      nodeValue.set.call(this, v===null ? '' : String(v));\r\n    },\r\n  },\r\n\r\n  // Utility methods\r\n  clone: { value: function clone() {\r\n    return new Comment(this.ownerDocument, this._data);\r\n  }},\r\n});\r\n", "\"use strict\";\r\nmodule.exports =  DocumentFragment;\r\n\r\nvar Node = require('./Node');\r\nvar NodeList = require('./NodeList');\r\nvar ContainerNode = require('./ContainerNode');\r\nvar Element = require('./Element');\r\nvar select = require('./select');\r\nvar utils = require('./utils');\r\n\r\nfunction DocumentFragment(doc) {\r\n  ContainerNode.call(this);\r\n  this.nodeType = Node.DOCUMENT_FRAGMENT_NODE;\r\n  this.ownerDocument = doc;\r\n}\r\n\r\nDocumentFragment.prototype = Object.create(ContainerNode.prototype, {\r\n  nodeName: { value: '#document-fragment' },\r\n  nodeValue: {\r\n    get: function() {\r\n      return null;\r\n    },\r\n    set: function() {}\r\n  },\r\n  // Copy the text content getter/setter from Element\r\n  textContent: Object.getOwnPropertyDescriptor(Element.prototype, 'textContent'),\r\n\r\n  // Copy the text content getter/setter from Element\r\n  innerText: Object.getOwnPropertyDescriptor(Element.prototype, 'innerText'),\r\n\r\n  querySelector: { value: function(selector) {\r\n    // implement in terms of querySelectorAll\r\n    var nodes = this.querySelectorAll(selector);\r\n    return nodes.length ? nodes[0] : null;\r\n  }},\r\n  querySelectorAll: { value: function(selector) {\r\n    // create a context\r\n    var context = Object.create(this);\r\n    // add some methods to the context for zest implementation, without\r\n    // adding them to the public DocumentFragment API\r\n    context.isHTML = true; // in HTML namespace (case-insensitive match)\r\n    context.getElementsByTagName = Element.prototype.getElementsByTagName;\r\n    context.nextElement =\r\n      Object.getOwnPropertyDescriptor(Element.prototype, 'firstElementChild').\r\n      get;\r\n    // invoke zest\r\n    var nodes = select(selector, context);\r\n    return nodes.item ? nodes : new NodeList(nodes);\r\n  }},\r\n\r\n  // Utility methods\r\n  clone: { value: function clone() {\r\n      return new DocumentFragment(this.ownerDocument);\r\n  }},\r\n  isEqual: { value: function isEqual(n) {\r\n      // Any two document fragments are shallowly equal.\r\n      // Node.isEqualNode() will test their children for equality\r\n      return true;\r\n  }},\r\n\r\n  // Non-standard, but useful (github issue #73)\r\n  innerHTML: {\r\n    get: function() { return this.serialize(); },\r\n    set: utils.nyi\r\n  },\r\n  outerHTML: {\r\n    get: function() { return this.serialize(); },\r\n    set: utils.nyi\r\n  },\r\n\r\n});\r\n", "\"use strict\";\r\nmodule.exports = ProcessingInstruction;\r\n\r\nvar Node = require('./Node');\r\nvar CharacterData = require('./CharacterData');\r\n\r\nfunction ProcessingInstruction(doc, target, data) {\r\n  CharacterData.call(this);\r\n  this.nodeType = Node.PROCESSING_INSTRUCTION_NODE;\r\n  this.ownerDocument = doc;\r\n  this.target = target;\r\n  this._data = data;\r\n}\r\n\r\nvar nodeValue = {\r\n  get: function() { return this._data; },\r\n  set: function(v) {\r\n    if (v === null || v === undefined) { v = ''; } else { v = String(v); }\r\n    this._data = v;\r\n    if (this.rooted) this.ownerDocument.mutateValue(this);\r\n  }\r\n};\r\n\r\nProcessingInstruction.prototype = Object.create(CharacterData.prototype, {\r\n  nodeName: { get: function() { return this.target; }},\r\n  nodeValue: nodeValue,\r\n  textContent: nodeValue,\r\n  innerText: nodeValue,\r\n  data: {\r\n    get: nodeValue.get,\r\n    set: function(v) {\r\n      nodeValue.set.call(this, v===null ? '' : String(v));\r\n    },\r\n  },\r\n\r\n  // Utility methods\r\n  clone: { value: function clone() {\r\n      return new ProcessingInstruction(this.ownerDocument, this.target, this._data);\r\n  }},\r\n  isEqual: { value: function isEqual(n) {\r\n      return this.target === n.target && this._data === n._data;\r\n  }}\r\n\r\n});\r\n", "\"use strict\";\r\nvar NodeFilter = {\r\n  // Constants for acceptNode()\r\n  FILTER_ACCEPT: 1,\r\n  FILTER_REJECT: 2,\r\n  FILTER_SKIP: 3,\r\n\r\n  // Constants for whatToShow\r\n  SHOW_ALL: 0xFFFFFFFF,\r\n  SHOW_ELEMENT: 0x1,\r\n  SHOW_ATTRIBUTE: 0x2, // historical\r\n  SHOW_TEXT: 0x4,\r\n  SHOW_CDATA_SECTION: 0x8, // historical\r\n  SHOW_ENTITY_REFERENCE: 0x10, // historical\r\n  SHOW_ENTITY: 0x20, // historical\r\n  SHOW_PROCESSING_INSTRUCTION: 0x40,\r\n  SHOW_COMMENT: 0x80,\r\n  SHOW_DOCUMENT: 0x100,\r\n  SHOW_DOCUMENT_TYPE: 0x200,\r\n  SHOW_DOCUMENT_FRAGMENT: 0x400,\r\n  SHOW_NOTATION: 0x800 // historical\r\n};\r\n\r\nmodule.exports = (NodeFilter.constructor = NodeFilter.prototype = NodeFilter);\r\n", "\"use strict\";\r\n/* exported NodeTraversal */\r\nvar NodeTraversal = module.exports = {\r\n  nextSkippingChildren: nextSkippingChildren,\r\n  nextAncestorSibling: nextAncestorSibling,\r\n  next: next,\r\n  previous: previous,\r\n  deepLastChild: deepLastChild\r\n};\r\n\r\n/**\r\n * @based on WebKit's NodeTraversal::nextSkippingChildren\r\n * https://trac.webkit.org/browser/trunk/Source/WebCore/dom/NodeTraversal.h?rev=179143#L109\r\n */\r\nfunction nextSkippingChildren(node, stayWithin) {\r\n  if (node === stayWithin) {\r\n    return null;\r\n  }\r\n  if (node.nextSibling !== null) {\r\n    return node.nextSibling;\r\n  }\r\n  return nextAncestorSibling(node, stayWithin);\r\n}\r\n\r\n/**\r\n * @based on WebKit's NodeTraversal::nextAncestorSibling\r\n * https://trac.webkit.org/browser/trunk/Source/WebCore/dom/NodeTraversal.cpp?rev=179143#L93\r\n */\r\nfunction nextAncestorSibling(node, stayWithin) {\r\n  for (node = node.parentNode; node !== null; node = node.parentNode) {\r\n    if (node === stayWithin) {\r\n      return null;\r\n    }\r\n    if (node.nextSibling !== null) {\r\n      return node.nextSibling;\r\n    }\r\n  }\r\n  return null;\r\n}\r\n\r\n/**\r\n * @based on WebKit's NodeTraversal::next\r\n * https://trac.webkit.org/browser/trunk/Source/WebCore/dom/NodeTraversal.h?rev=179143#L99\r\n */\r\nfunction next(node, stayWithin) {\r\n  var n;\r\n  n = node.firstChild;\r\n  if (n !== null) {\r\n    return n;\r\n  }\r\n  if (node === stayWithin) {\r\n    return null;\r\n  }\r\n  n = node.nextSibling;\r\n  if (n !== null) {\r\n    return n;\r\n  }\r\n  return nextAncestorSibling(node, stayWithin);\r\n}\r\n\r\n/**\r\n * @based on WebKit's NodeTraversal::deepLastChild\r\n * https://trac.webkit.org/browser/trunk/Source/WebCore/dom/NodeTraversal.cpp?rev=179143#L116\r\n */\r\nfunction deepLastChild(node) {\r\n  while (node.lastChild) {\r\n    node = node.lastChild;\r\n  }\r\n  return node;\r\n}\r\n\r\n/**\r\n * @based on WebKit's NodeTraversal::previous\r\n * https://trac.webkit.org/browser/trunk/Source/WebCore/dom/NodeTraversal.h?rev=179143#L121\r\n */\r\nfunction previous(node, stayWithin) {\r\n  var p;\r\n  p = node.previousSibling;\r\n  if (p !== null) {\r\n    return deepLastChild(p);\r\n  }\r\n  p = node.parentNode;\r\n  if (p === stayWithin) {\r\n    return null;\r\n  }\r\n  return p;\r\n}\r\n", "\"use strict\";\r\nmodule.exports = TreeWalker;\r\n\r\nvar Node = require('./Node');\r\nvar NodeFilter = require('./NodeFilter');\r\nvar NodeTraversal = require('./NodeTraversal');\r\nvar utils = require('./utils');\r\n\r\nvar mapChild = {\r\n  first: 'firstChild',\r\n  last: 'lastChild',\r\n  next: 'firstChild',\r\n  previous: 'lastChild'\r\n};\r\n\r\nvar mapSibling = {\r\n  first: 'nextSibling',\r\n  last: 'previousSibling',\r\n  next: 'nextSibling',\r\n  previous: 'previousSibling'\r\n};\r\n\r\n/* Private methods and helpers */\r\n\r\n/**\r\n * @spec https://dom.spec.whatwg.org/#concept-traverse-children\r\n * @method\r\n * @access private\r\n * @param {TreeWalker} tw\r\n * @param {string} type One of 'first' or 'last'.\r\n * @return {Node|null}\r\n */\r\nfunction traverseChildren(tw, type) {\r\n  var child, node, parent, result, sibling;\r\n  node = tw._currentNode[mapChild[type]];\r\n  while (node !== null) {\r\n    result = tw._internalFilter(node);\r\n    if (result === NodeFilter.FILTER_ACCEPT) {\r\n      tw._currentNode = node;\r\n      return node;\r\n    }\r\n    if (result === NodeFilter.FILTER_SKIP) {\r\n      child = node[mapChild[type]];\r\n      if (child !== null) {\r\n        node = child;\r\n        continue;\r\n      }\r\n    }\r\n    while (node !== null) {\r\n      sibling = node[mapSibling[type]];\r\n      if (sibling !== null) {\r\n        node = sibling;\r\n        break;\r\n      }\r\n      parent = node.parentNode;\r\n      if (parent === null || parent === tw.root || parent === tw._currentNode) {\r\n        return null;\r\n      } else {\r\n        node = parent;\r\n      }\r\n    }\r\n  }\r\n  return null;\r\n}\r\n\r\n/**\r\n * @spec https://dom.spec.whatwg.org/#concept-traverse-siblings\r\n * @method\r\n * @access private\r\n * @param {TreeWalker} tw\r\n * @param {TreeWalker} type One of 'next' or 'previous'.\r\n * @return {Node|nul}\r\n */\r\nfunction traverseSiblings(tw, type) {\r\n  var node, result, sibling;\r\n  node = tw._currentNode;\r\n  if (node === tw.root) {\r\n    return null;\r\n  }\r\n  while (true) {\r\n    sibling = node[mapSibling[type]];\r\n    while (sibling !== null) {\r\n      node = sibling;\r\n      result = tw._internalFilter(node);\r\n      if (result === NodeFilter.FILTER_ACCEPT) {\r\n        tw._currentNode = node;\r\n        return node;\r\n      }\r\n      sibling = node[mapChild[type]];\r\n      if (result === NodeFilter.FILTER_REJECT || sibling === null) {\r\n        sibling = node[mapSibling[type]];\r\n      }\r\n    }\r\n    node = node.parentNode;\r\n    if (node === null || node === tw.root) {\r\n      return null;\r\n    }\r\n    if (tw._internalFilter(node) === NodeFilter.FILTER_ACCEPT) {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/* Public API */\r\n\r\n/**\r\n * Latest version: https://dom.spec.whatwg.org/#treewalker\r\n *\r\n * @constructor\r\n * @param {Node} root\r\n * @param {number} whatToShow [optional]\r\n * @param {Function|NodeFilter} filter [optional]\r\n * @throws Error\r\n */\r\nfunction TreeWalker(root, whatToShow, filter) {\r\n  if (!root || !root.nodeType) {\r\n    utils.NotSupportedError();\r\n  }\r\n\r\n  // Read-only properties\r\n  this._root = root;\r\n  this._whatToShow = Number(whatToShow) || 0;\r\n  this._filter = filter || null;\r\n  this._active = false;\r\n  // Read-write property\r\n  this._currentNode = root;\r\n}\r\n\r\nObject.defineProperties(TreeWalker.prototype, {\r\n  root: { get: function() { return this._root; } },\r\n  whatToShow: { get: function() { return this._whatToShow; } },\r\n  filter: { get: function() { return this._filter; } },\r\n\r\n  currentNode: {\r\n    get: function currentNode() {\r\n      return this._currentNode;\r\n    },\r\n    set: function setCurrentNode(v) {\r\n      if (!(v instanceof Node)) {\r\n        throw new TypeError(\"Not a Node\"); // `null` is also not a node\r\n      }\r\n      this._currentNode = v;\r\n    },\r\n  },\r\n\r\n  /**\r\n   * @method\r\n   * @param {Node} node\r\n   * @return {Number} Constant NodeFilter.FILTER_ACCEPT,\r\n   *  NodeFilter.FILTER_REJECT or NodeFilter.FILTER_SKIP.\r\n   */\r\n  _internalFilter: { value: function _internalFilter(node) {\r\n    /* jshint bitwise: false */\r\n    var result, filter;\r\n    if (this._active) {\r\n      utils.InvalidStateError();\r\n    }\r\n\r\n    // Maps nodeType to whatToShow\r\n    if (!(((1 << (node.nodeType - 1)) & this._whatToShow))) {\r\n      return NodeFilter.FILTER_SKIP;\r\n    }\r\n\r\n    filter = this._filter;\r\n    if (filter === null) {\r\n      result = NodeFilter.FILTER_ACCEPT;\r\n    } else {\r\n      this._active = true;\r\n      try {\r\n        if (typeof filter === 'function') {\r\n          result = filter(node);\r\n        } else {\r\n          result = filter.acceptNode(node);\r\n        }\r\n      } finally {\r\n        this._active = false;\r\n      }\r\n    }\r\n\r\n    // Note that coercing to a number means that\r\n    //  `true` becomes `1` (which is NodeFilter.FILTER_ACCEPT)\r\n    //  `false` becomes `0` (neither accept, reject, or skip)\r\n    return (+result);\r\n  }},\r\n\r\n  /**\r\n   * @spec https://dom.spec.whatwg.org/#dom-treewalker-parentnode\r\n   * @based on WebKit's TreeWalker::parentNode\r\n   * https://trac.webkit.org/browser/webkit/trunk/Source/WebCore/dom/TreeWalker.cpp?rev=220453#L50\r\n   * @method\r\n   * @return {Node|null}\r\n   */\r\n  parentNode: { value: function parentNode() {\r\n    var node = this._currentNode;\r\n    while (node !== this.root) {\r\n      node = node.parentNode;\r\n      if (node === null) {\r\n        return null;\r\n      }\r\n      if (this._internalFilter(node) === NodeFilter.FILTER_ACCEPT) {\r\n        this._currentNode = node;\r\n        return node;\r\n      }\r\n    }\r\n    return null;\r\n  }},\r\n\r\n  /**\r\n   * @spec https://dom.spec.whatwg.org/#dom-treewalker-firstchild\r\n   * @method\r\n   * @return {Node|null}\r\n   */\r\n  firstChild: { value: function firstChild() {\r\n    return traverseChildren(this, 'first');\r\n  }},\r\n\r\n  /**\r\n   * @spec https://dom.spec.whatwg.org/#dom-treewalker-lastchild\r\n   * @method\r\n   * @return {Node|null}\r\n   */\r\n  lastChild: { value: function lastChild() {\r\n    return traverseChildren(this, 'last');\r\n  }},\r\n\r\n  /**\r\n   * @spec http://www.w3.org/TR/dom/#dom-treewalker-previoussibling\r\n   * @method\r\n   * @return {Node|null}\r\n   */\r\n  previousSibling: { value: function previousSibling() {\r\n    return traverseSiblings(this, 'previous');\r\n  }},\r\n\r\n  /**\r\n   * @spec http://www.w3.org/TR/dom/#dom-treewalker-nextsibling\r\n   * @method\r\n   * @return {Node|null}\r\n   */\r\n  nextSibling: { value: function nextSibling() {\r\n    return traverseSiblings(this, 'next');\r\n  }},\r\n\r\n  /**\r\n   * @spec https://dom.spec.whatwg.org/#dom-treewalker-previousnode\r\n   * @based on WebKit's TreeWalker::previousNode\r\n   * https://trac.webkit.org/browser/webkit/trunk/Source/WebCore/dom/TreeWalker.cpp?rev=220453#L181\r\n   * @method\r\n   * @return {Node|null}\r\n   */\r\n  previousNode: { value: function previousNode() {\r\n    var node, result, previousSibling, lastChild;\r\n    node = this._currentNode;\r\n    while (node !== this._root) {\r\n      for (previousSibling = node.previousSibling;\r\n           previousSibling;\r\n           previousSibling = node.previousSibling) {\r\n        node = previousSibling;\r\n        result = this._internalFilter(node);\r\n        if (result === NodeFilter.FILTER_REJECT) {\r\n          continue;\r\n        }\r\n        for (lastChild = node.lastChild;\r\n             lastChild;\r\n             lastChild = node.lastChild) {\r\n          node = lastChild;\r\n          result = this._internalFilter(node);\r\n          if (result === NodeFilter.FILTER_REJECT) {\r\n            break;\r\n          }\r\n        }\r\n        if (result === NodeFilter.FILTER_ACCEPT) {\r\n          this._currentNode = node;\r\n          return node;\r\n        }\r\n      }\r\n      if (node === this.root || node.parentNode === null) {\r\n        return null;\r\n      }\r\n      node = node.parentNode;\r\n      if (this._internalFilter(node) === NodeFilter.FILTER_ACCEPT) {\r\n        this._currentNode = node;\r\n        return node;\r\n      }\r\n    }\r\n    return null;\r\n  }},\r\n\r\n  /**\r\n   * @spec https://dom.spec.whatwg.org/#dom-treewalker-nextnode\r\n   * @based on WebKit's TreeWalker::nextNode\r\n   * https://trac.webkit.org/browser/webkit/trunk/Source/WebCore/dom/TreeWalker.cpp?rev=220453#L228\r\n   * @method\r\n   * @return {Node|null}\r\n   */\r\n  nextNode: { value: function nextNode() {\r\n    var node, result, firstChild, nextSibling;\r\n    node = this._currentNode;\r\n    result = NodeFilter.FILTER_ACCEPT;\r\n\r\n    CHILDREN:\r\n    while (true) {\r\n      for (firstChild = node.firstChild;\r\n           firstChild;\r\n           firstChild = node.firstChild) {\r\n        node = firstChild;\r\n        result = this._internalFilter(node);\r\n        if (result === NodeFilter.FILTER_ACCEPT) {\r\n          this._currentNode = node;\r\n          return node;\r\n        } else if (result === NodeFilter.FILTER_REJECT) {\r\n          break;\r\n        }\r\n      }\r\n      for (nextSibling = NodeTraversal.nextSkippingChildren(node, this.root);\r\n           nextSibling;\r\n           nextSibling = NodeTraversal.nextSkippingChildren(node, this.root)) {\r\n        node = nextSibling;\r\n        result = this._internalFilter(node);\r\n        if (result === NodeFilter.FILTER_ACCEPT) {\r\n          this._currentNode = node;\r\n          return node;\r\n        } else if (result === NodeFilter.FILTER_SKIP) {\r\n          continue CHILDREN;\r\n        }\r\n      }\r\n      return null;\r\n    }\r\n  }},\r\n\r\n  /** For compatibility with web-platform-tests. */\r\n  toString: { value: function toString() {\r\n    return \"[object TreeWalker]\";\r\n  }},\r\n});\r\n", "\"use strict\";\r\nmodule.exports = NodeIterator;\r\n\r\nvar NodeFilter = require('./NodeFilter');\r\nvar NodeTraversal = require('./NodeTraversal');\r\nvar utils = require('./utils');\r\n\r\n/* Private methods and helpers */\r\n\r\n/**\r\n * @based on WebKit's NodeIterator::moveToNext and NodeIterator::moveToPrevious\r\n * https://trac.webkit.org/browser/trunk/Source/WebCore/dom/NodeIterator.cpp?rev=186279#L51\r\n */\r\nfunction move(node, stayWithin, directionIsNext) {\r\n  if (directionIsNext) {\r\n    return NodeTraversal.next(node, stayWithin);\r\n  } else {\r\n    if (node === stayWithin) {\r\n      return null;\r\n    }\r\n    return NodeTraversal.previous(node, null);\r\n  }\r\n}\r\n\r\nfunction isInclusiveAncestor(node, possibleChild) {\r\n  for ( ; possibleChild; possibleChild = possibleChild.parentNode) {\r\n    if (node === possibleChild) { return true; }\r\n  }\r\n  return false;\r\n}\r\n\r\n/**\r\n * @spec http://www.w3.org/TR/dom/#concept-nodeiterator-traverse\r\n * @method\r\n * @access private\r\n * @param {NodeIterator} ni\r\n * @param {string} direction One of 'next' or 'previous'.\r\n * @return {Node|null}\r\n */\r\nfunction traverse(ni, directionIsNext) {\r\n  var node, beforeNode;\r\n  node = ni._referenceNode;\r\n  beforeNode = ni._pointerBeforeReferenceNode;\r\n  while (true) {\r\n    if (beforeNode === directionIsNext) {\r\n      beforeNode = !beforeNode;\r\n    } else {\r\n      node = move(node, ni._root, directionIsNext);\r\n      if (node === null) {\r\n        return null;\r\n      }\r\n    }\r\n    var result = ni._internalFilter(node);\r\n    if (result === NodeFilter.FILTER_ACCEPT) {\r\n      break;\r\n    }\r\n  }\r\n  ni._referenceNode = node;\r\n  ni._pointerBeforeReferenceNode = beforeNode;\r\n  return node;\r\n}\r\n\r\n/* Public API */\r\n\r\n/**\r\n * Implemented version: http://www.w3.org/TR/2015/WD-dom-20150618/#nodeiterator\r\n * Latest version: http://www.w3.org/TR/dom/#nodeiterator\r\n *\r\n * @constructor\r\n * @param {Node} root\r\n * @param {number} whatToShow [optional]\r\n * @param {Function|NodeFilter} filter [optional]\r\n * @throws Error\r\n */\r\nfunction NodeIterator(root, whatToShow, filter) {\r\n  if (!root || !root.nodeType) {\r\n    utils.NotSupportedError();\r\n  }\r\n\r\n  // Read-only properties\r\n  this._root = root;\r\n  this._referenceNode = root;\r\n  this._pointerBeforeReferenceNode = true;\r\n  this._whatToShow = Number(whatToShow) || 0;\r\n  this._filter = filter || null;\r\n  this._active = false;\r\n  // Record active node iterators in the document, in order to perform\r\n  // \"node iterator pre-removal steps\".\r\n  root.doc._attachNodeIterator(this);\r\n}\r\n\r\nObject.defineProperties(NodeIterator.prototype, {\r\n  root: { get: function root() {\r\n    return this._root;\r\n  } },\r\n  referenceNode: { get: function referenceNode() {\r\n    return this._referenceNode;\r\n  } },\r\n  pointerBeforeReferenceNode: { get: function pointerBeforeReferenceNode() {\r\n    return this._pointerBeforeReferenceNode;\r\n  } },\r\n  whatToShow: { get: function whatToShow() {\r\n    return this._whatToShow;\r\n  } },\r\n  filter: { get: function filter() {\r\n    return this._filter;\r\n  } },\r\n\r\n  /**\r\n   * @method\r\n   * @param {Node} node\r\n   * @return {Number} Constant NodeFilter.FILTER_ACCEPT,\r\n   *  NodeFilter.FILTER_REJECT or NodeFilter.FILTER_SKIP.\r\n   */\r\n  _internalFilter: { value: function _internalFilter(node) {\r\n    /* jshint bitwise: false */\r\n    var result, filter;\r\n    if (this._active) {\r\n      utils.InvalidStateError();\r\n    }\r\n\r\n    // Maps nodeType to whatToShow\r\n    if (!(((1 << (node.nodeType - 1)) & this._whatToShow))) {\r\n      return NodeFilter.FILTER_SKIP;\r\n    }\r\n\r\n    filter = this._filter;\r\n    if (filter === null) {\r\n      result = NodeFilter.FILTER_ACCEPT;\r\n    } else {\r\n      this._active = true;\r\n      try {\r\n        if (typeof filter === 'function') {\r\n          result = filter(node);\r\n        } else {\r\n          result = filter.acceptNode(node);\r\n        }\r\n      } finally {\r\n        this._active = false;\r\n      }\r\n    }\r\n\r\n    // Note that coercing to a number means that\r\n    //  `true` becomes `1` (which is NodeFilter.FILTER_ACCEPT)\r\n    //  `false` becomes `0` (neither accept, reject, or skip)\r\n    return (+result);\r\n  } },\r\n\r\n  /**\r\n   * @spec https://dom.spec.whatwg.org/#nodeiterator-pre-removing-steps\r\n   * @method\r\n   * @return void\r\n   */\r\n  _preremove: { value: function _preremove(toBeRemovedNode) {\r\n    if (isInclusiveAncestor(toBeRemovedNode, this._root)) { return; }\r\n    if (!isInclusiveAncestor(toBeRemovedNode, this._referenceNode)) { return; }\r\n    if (this._pointerBeforeReferenceNode) {\r\n      var next = toBeRemovedNode;\r\n      while (next.lastChild) {\r\n        next = next.lastChild;\r\n      }\r\n      next = NodeTraversal.next(next, this.root);\r\n      if (next) {\r\n        this._referenceNode = next;\r\n        return;\r\n      }\r\n      this._pointerBeforeReferenceNode = false;\r\n      // fall through\r\n    }\r\n    if (toBeRemovedNode.previousSibling === null) {\r\n      this._referenceNode = toBeRemovedNode.parentNode;\r\n    } else {\r\n      this._referenceNode = toBeRemovedNode.previousSibling;\r\n      var lastChild;\r\n      for (lastChild = this._referenceNode.lastChild;\r\n           lastChild;\r\n           lastChild = this._referenceNode.lastChild) {\r\n        this._referenceNode = lastChild;\r\n      }\r\n    }\r\n  } },\r\n\r\n  /**\r\n   * @spec http://www.w3.org/TR/dom/#dom-nodeiterator-nextnode\r\n   * @method\r\n   * @return {Node|null}\r\n   */\r\n  nextNode: { value: function nextNode() {\r\n    return traverse(this, true);\r\n  } },\r\n\r\n  /**\r\n   * @spec http://www.w3.org/TR/dom/#dom-nodeiterator-previousnode\r\n   * @method\r\n   * @return {Node|null}\r\n   */\r\n  previousNode: { value: function previousNode() {\r\n    return traverse(this, false);\r\n  } },\r\n\r\n  /**\r\n   * @spec http://www.w3.org/TR/dom/#dom-nodeiterator-detach\r\n   * @method\r\n   * @return void\r\n   */\r\n  detach: { value: function detach() {\r\n    /* \"The detach() method must do nothing.\r\n     * Its functionality (disabling a NodeIterator object) was removed,\r\n     * but the method itself is preserved for compatibility.\r\n     */\r\n  } },\r\n\r\n  /** For compatibility with web-platform-tests. */\r\n  toString: { value: function toString() {\r\n    return \"[object NodeIterator]\";\r\n  } },\r\n});\r\n", "\"use strict\";\r\nmodule.exports = URL;\r\n\r\nfunction URL(url) {\r\n  if (!url) return Object.create(URL.prototype);\r\n  // Can't use String.trim() since it defines whitespace differently than HTML\r\n  this.url = url.replace(/^[ \\t\\n\\r\\f]+|[ \\t\\n\\r\\f]+$/g, \"\");\r\n\r\n  // See http://tools.ietf.org/html/rfc3986#appendix-B\r\n  // and https://url.spec.whatwg.org/#parsing\r\n  var match = URL.pattern.exec(this.url);\r\n  if (match) {\r\n    if (match[2]) this.scheme = match[2];\r\n    if (match[4]) {\r\n      // parse username/password\r\n      var userinfo = match[4].match(URL.userinfoPattern);\r\n      if (userinfo) {\r\n        this.username = userinfo[1];\r\n        this.password = userinfo[3];\r\n        match[4] = match[4].substring(userinfo[0].length);\r\n      }\r\n      if (match[4].match(URL.portPattern)) {\r\n        var pos = match[4].lastIndexOf(':');\r\n        this.host = match[4].substring(0, pos);\r\n        this.port = match[4].substring(pos+1);\r\n      }\r\n      else {\r\n        this.host = match[4];\r\n      }\r\n    }\r\n    if (match[5]) this.path = match[5];\r\n    if (match[6]) this.query = match[7];\r\n    if (match[8]) this.fragment = match[9];\r\n  }\r\n}\r\n\r\nURL.pattern = /^(([^:\\/?#]+):)?(\\/\\/([^\\/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?$/;\r\nURL.userinfoPattern = /^([^@:]*)(:([^@]*))?@/;\r\nURL.portPattern = /:\\d+$/;\r\nURL.authorityPattern = /^[^:\\/?#]+:\\/\\//;\r\nURL.hierarchyPattern = /^[^:\\/?#]+:\\//;\r\n\r\n// Return a percentEncoded version of s.\r\n// S should be a single-character string\r\n// XXX: needs to do utf-8 encoding?\r\nURL.percentEncode = function percentEncode(s) {\r\n  var c = s.charCodeAt(0);\r\n  if (c < 256) return \"%\" + c.toString(16);\r\n  else throw Error(\"can't percent-encode codepoints > 255 yet\");\r\n};\r\n\r\nURL.prototype = {\r\n  constructor: URL,\r\n\r\n  // XXX: not sure if this is the precise definition of absolute\r\n  isAbsolute: function() { return !!this.scheme; },\r\n  isAuthorityBased: function() {\r\n    return URL.authorityPattern.test(this.url);\r\n  },\r\n  isHierarchical: function() {\r\n    return URL.hierarchyPattern.test(this.url);\r\n  },\r\n\r\n  toString: function() {\r\n    var s = \"\";\r\n    if (this.scheme !== undefined) s += this.scheme + \":\";\r\n    if (this.isAbsolute()) {\r\n      s += '//';\r\n      if (this.username || this.password) {\r\n        s += this.username || '';\r\n        if (this.password) {\r\n          s += ':' + this.password;\r\n        }\r\n        s += '@';\r\n      }\r\n      if (this.host) {\r\n        s += this.host;\r\n      }\r\n    }\r\n    if (this.port !== undefined) s += \":\" + this.port;\r\n    if (this.path !== undefined) s += this.path;\r\n    if (this.query !== undefined) s += \"?\" + this.query;\r\n    if (this.fragment !== undefined) s += \"#\" + this.fragment;\r\n    return s;\r\n  },\r\n\r\n  // See: http://tools.ietf.org/html/rfc3986#section-5.2\r\n  // and https://url.spec.whatwg.org/#constructors\r\n  resolve: function(relative) {\r\n    var base = this;           // The base url we're resolving against\r\n    var r = new URL(relative); // The relative reference url to resolve\r\n    var t = new URL();         // The absolute target url we will return\r\n\r\n    if (r.scheme !== undefined) {\r\n      t.scheme = r.scheme;\r\n      t.username = r.username;\r\n      t.password = r.password;\r\n      t.host = r.host;\r\n      t.port = r.port;\r\n      t.path = remove_dot_segments(r.path);\r\n      t.query = r.query;\r\n    }\r\n    else {\r\n      t.scheme = base.scheme;\r\n      if (r.host !== undefined) {\r\n        t.username = r.username;\r\n        t.password = r.password;\r\n        t.host = r.host;\r\n        t.port = r.port;\r\n        t.path = remove_dot_segments(r.path);\r\n        t.query = r.query;\r\n      }\r\n      else {\r\n        t.username = base.username;\r\n        t.password = base.password;\r\n        t.host = base.host;\r\n        t.port = base.port;\r\n        if (!r.path) { // undefined or empty\r\n          t.path = base.path;\r\n          if (r.query !== undefined)\r\n            t.query = r.query;\r\n          else\r\n            t.query = base.query;\r\n        }\r\n        else {\r\n          if (r.path.charAt(0) === \"/\") {\r\n            t.path = remove_dot_segments(r.path);\r\n          }\r\n          else {\r\n            t.path = merge(base.path, r.path);\r\n            t.path = remove_dot_segments(t.path);\r\n          }\r\n          t.query = r.query;\r\n        }\r\n      }\r\n    }\r\n    t.fragment = r.fragment;\r\n\r\n    return t.toString();\r\n\r\n\r\n    function merge(basepath, refpath) {\r\n      if (base.host !== undefined && !base.path)\r\n        return \"/\" + refpath;\r\n\r\n      var lastslash = basepath.lastIndexOf(\"/\");\r\n      if (lastslash === -1)\r\n        return refpath;\r\n      else\r\n        return basepath.substring(0, lastslash+1) + refpath;\r\n    }\r\n\r\n    function remove_dot_segments(path) {\r\n      if (!path) return path; // For \"\" or undefined\r\n\r\n      var output = \"\";\r\n      while(path.length > 0) {\r\n        if (path === \".\" || path === \"..\") {\r\n          path = \"\";\r\n          break;\r\n        }\r\n\r\n        var twochars = path.substring(0,2);\r\n        var threechars = path.substring(0,3);\r\n        var fourchars = path.substring(0,4);\r\n        if (threechars === \"../\") {\r\n          path = path.substring(3);\r\n        }\r\n        else if (twochars === \"./\") {\r\n          path = path.substring(2);\r\n        }\r\n        else if (threechars === \"/./\") {\r\n          path = \"/\" + path.substring(3);\r\n        }\r\n        else if (twochars === \"/.\" && path.length === 2) {\r\n          path = \"/\";\r\n        }\r\n        else if (fourchars === \"/../\" ||\r\n             (threechars === \"/..\" && path.length === 3)) {\r\n          path = \"/\" + path.substring(4);\r\n\r\n          output = output.replace(/\\/?[^\\/]*$/, \"\");\r\n        }\r\n        else {\r\n          var segment = path.match(/(\\/?([^\\/]*))/)[0];\r\n          output += segment;\r\n          path = path.substring(segment.length);\r\n        }\r\n      }\r\n\r\n      return output;\r\n    }\r\n  },\r\n};\r\n", "\"use strict\";\r\nmodule.exports = CustomEvent;\r\n\r\nvar Event = require('./Event');\r\n\r\nfunction CustomEvent(type, dictionary) {\r\n  // Just use the superclass constructor to initialize\r\n  Event.call(this, type, dictionary);\r\n}\r\nCustomEvent.prototype = Object.create(Event.prototype, {\r\n  constructor: { value: CustomEvent }\r\n});\r\n", "\"use strict\";\r\nmodule.exports = {\r\n  Event: require('./Event'),\r\n  UIEvent: require('./UIEvent'),\r\n  MouseEvent: require('./MouseEvent'),\r\n  CustomEvent: require('./CustomEvent')\r\n};\r\n", "\"use strict\";\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\n// The below is a compiled copy of https://github.com/angular/angular/blob/92e41e9cb417223d9888a4c23b4c0e73188f87d0/packages/compiler/src/render3/view/style_parser.ts\r\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.hyphenate = exports.parse = void 0;\r\n/**\r\n * Parses string representation of a style and converts it into object literal.\r\n *\r\n * @param value string representation of style as used in the `style` attribute in HTML.\r\n *   Example: `color: red; height: auto`.\r\n * @returns An array of style property name and value pairs, e.g. `['color', 'red', 'height',\r\n * 'auto']`\r\n */\r\nfunction parse(value) {\r\n  // we use a string array here instead of a string map\r\n  // because a string-map is not guaranteed to retain the\r\n  // order of the entries whereas a string array can be\r\n  // constructed in a [key, value, key, value] format.\r\n  const styles = [];\r\n  let i = 0;\r\n  let parenDepth = 0;\r\n  let quote = 0; /* Char.QuoteNone */\r\n  let valueStart = 0;\r\n  let propStart = 0;\r\n  let currentProp = null;\r\n  while (i < value.length) {\r\n    const token = value.charCodeAt(i++);\r\n    switch (token) {\r\n      case 40 /* Char.OpenParen */:\r\n        parenDepth++;\r\n        break;\r\n      case 41 /* Char.CloseParen */:\r\n        parenDepth--;\r\n        break;\r\n      case 39 /* Char.QuoteSingle */:\r\n        // valueStart needs to be there since prop values don't\r\n        // have quotes in CSS\r\n        if (quote === 0 /* Char.QuoteNone */) {\r\n          quote = 39 /* Char.QuoteSingle */;\r\n        } else if (\r\n          quote === 39 /* Char.QuoteSingle */ &&\r\n          value.charCodeAt(i - 1) !== 92 /* Char.BackSlash */\r\n        ) {\r\n          quote = 0 /* Char.QuoteNone */;\r\n        }\r\n        break;\r\n      case 34 /* Char.QuoteDouble */:\r\n        // same logic as above\r\n        if (quote === 0 /* Char.QuoteNone */) {\r\n          quote = 34 /* Char.QuoteDouble */;\r\n        } else if (\r\n          quote === 34 /* Char.QuoteDouble */ &&\r\n          value.charCodeAt(i - 1) !== 92 /* Char.BackSlash */\r\n        ) {\r\n          quote = 0 /* Char.QuoteNone */;\r\n        }\r\n        break;\r\n      case 58 /* Char.Colon */:\r\n        if (\r\n          !currentProp &&\r\n          parenDepth === 0 &&\r\n          quote === 0 /* Char.QuoteNone */\r\n        ) {\r\n          currentProp = hyphenate(value.substring(propStart, i - 1).trim());\r\n          valueStart = i;\r\n        }\r\n        break;\r\n      case 59 /* Char.Semicolon */:\r\n        if (\r\n          currentProp &&\r\n          valueStart > 0 &&\r\n          parenDepth === 0 &&\r\n          quote === 0 /* Char.QuoteNone */\r\n        ) {\r\n          const styleVal = value.substring(valueStart, i - 1).trim();\r\n          styles.push(currentProp, styleVal);\r\n          propStart = i;\r\n          valueStart = 0;\r\n          currentProp = null;\r\n        }\r\n        break;\r\n    }\r\n  }\r\n  if (currentProp && valueStart) {\r\n    const styleVal = value.slice(valueStart).trim();\r\n    styles.push(currentProp, styleVal);\r\n  }\r\n  return styles;\r\n}\r\nexports.parse = parse;\r\nfunction hyphenate(value) {\r\n  return value\r\n    .replace(/[a-z][A-Z]/g, (v) => {\r\n      return v.charAt(0) + \"-\" + v.charAt(1);\r\n    })\r\n    .toLowerCase();\r\n}\r\nexports.hyphenate = hyphenate;\r\n", "\"use strict\";\r\n\r\nconst { parse } = require('./style_parser');\r\n\r\nmodule.exports = function (elt) {\r\n  const style = new CSSStyleDeclaration(elt)\r\n  const handler = {\r\n    get: function(target, property) {\r\n      return property in target ? target[property] : target.getPropertyValue(dasherizeProperty(property));\r\n    },\r\n    has: function(target, key) {\r\n      return true;\r\n    },\r\n    set: function(target, property, value) {\r\n      if (property in target) {\r\n        target[property] = value;\r\n      } else {\r\n        target.setProperty(dasherizeProperty(property), value ?? undefined);\r\n      }\r\n\r\n      return true;\r\n    }\r\n  };\r\n\r\n  return new Proxy(style, handler);\r\n};\r\n\r\nfunction dasherizeProperty(property) {\r\n  return property.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\r\n}\r\n\r\n\r\nfunction CSSStyleDeclaration(elt) {\r\n  this._element = elt;\r\n}\r\n\r\nconst IMPORTANT_BANG = '!important';\r\n\r\n// Utility function for parsing style declarations\r\n// Pass in a string like \"margin-left: 5px; border-style: solid\"\r\n// and this function returns an object like\r\n// {\"margin-left\":\"5px\", \"border-style\":\"solid\"}\r\nfunction parseStyles(value) {\r\n  const result = {\r\n    property: {},\r\n    priority: {},\r\n  }\r\n\r\n  if (!value) {\r\n    return result;\r\n  }\r\n\r\n  const styleValues = parse(value);\r\n  if (styleValues.length < 2) {\r\n    return result;\r\n  }\r\n\r\n  for (let i = 0; i < styleValues.length; i += 2) {\r\n    const name = styleValues[i];\r\n    let value = styleValues[i+1];\r\n\r\n    if (value.endsWith(IMPORTANT_BANG)) {\r\n      result.priority[name] = 'important';\r\n      value = value.slice(0, -IMPORTANT_BANG.length).trim();\r\n    }\r\n\r\n    result.property[name] = value;\r\n  }\r\n\r\n  return result;\r\n}\r\n\r\nvar NO_CHANGE = {}; // Private marker object\r\n\r\nCSSStyleDeclaration.prototype = Object.create(Object.prototype, {\r\n\r\n  // Return the parsed form of the element's style attribute.\r\n  // If the element's style attribute has never been parsed\r\n  // or if it has changed since the last parse, then reparse it\r\n  // Note that the styles don't get parsed until they're actually needed\r\n  _parsed: { get: function() {\r\n    if (!this._parsedStyles || this.cssText !== this._lastParsedText) {\r\n      var text = this.cssText;\r\n      this._parsedStyles = parseStyles(text);\r\n      this._lastParsedText = text;\r\n      delete this._names;\r\n    }\r\n    return this._parsedStyles;\r\n  }},\r\n\r\n  // Call this method any time the parsed representation of the\r\n  // style changes.  It converts the style properties to a string and\r\n  // sets cssText and the element's style attribute\r\n  _serialize: { value: function() {\r\n    var styles = this._parsed;\r\n    var s = \"\";\r\n\r\n    for(var name in styles.property) {\r\n      if (s) s += \" \";\r\n      s += name + \": \" + styles.property[name];\r\n      if (styles.priority[name]) {\r\n        s += \" !\" + styles.priority[name];\r\n      }\r\n      s += \";\";\r\n    }\r\n\r\n    this.cssText = s;      // also sets the style attribute\r\n    this._lastParsedText = s;  // so we don't reparse\r\n    delete this._names;\r\n  }},\r\n\r\n  cssText: {\r\n    get: function() {\r\n      // XXX: this is a CSSStyleDeclaration for an element.\r\n      // A different impl might be necessary for a set of styles\r\n      // associated returned by getComputedStyle(), e.g.\r\n      return this._element.getAttribute(\"style\");\r\n    },\r\n    set: function(value) {\r\n      // XXX: I should parse and serialize the value to\r\n      // normalize it and remove errors. FF and chrome do that.\r\n      this._element.setAttribute(\"style\", value);\r\n    }\r\n  },\r\n\r\n  length: { get: function() {\r\n    if (!this._names)\r\n      this._names = Object.getOwnPropertyNames(this._parsed.property);\r\n    return this._names.length;\r\n  }},\r\n\r\n  item: { value: function(n) {\r\n    if (!this._names)\r\n      this._names = Object.getOwnPropertyNames(this._parsed.property);\r\n    return this._names[n];\r\n  }},\r\n\r\n  getPropertyValue: { value: function(property) {\r\n    property = property.toLowerCase();\r\n    return this._parsed.property[property] || \"\";\r\n  }},\r\n\r\n  getPropertyPriority: { value: function(property) {\r\n    property = property.toLowerCase();\r\n    return this._parsed.priority[property] || \"\";\r\n  }},\r\n\r\n  setProperty: { value: function(property, value, priority) {\r\n    property = property.toLowerCase();\r\n    if (value === null || value === undefined) {\r\n      value = \"\";\r\n    }\r\n    if (priority === null || priority === undefined) {\r\n      priority = \"\";\r\n    }\r\n\r\n    // String coercion\r\n    if (value !== NO_CHANGE) {\r\n      value = \"\" + value;\r\n    }\r\n\r\n    value = value.trim();\r\n    if (value === \"\") {\r\n      this.removeProperty(property);\r\n      return;\r\n    }\r\n\r\n    if (priority !== \"\" && priority !== NO_CHANGE &&\r\n        !/^important$/i.test(priority)) {\r\n      return;\r\n    }\r\n\r\n    var styles = this._parsed;\r\n    if (value === NO_CHANGE) {\r\n      if (!styles.property[property]) {\r\n        return; // Not a valid property name.\r\n      }\r\n      if (priority !== \"\") {\r\n        styles.priority[property] = \"important\";\r\n      } else {\r\n        delete styles.priority[property];\r\n      }\r\n    } else {\r\n      // We don't just accept the property value.  Instead\r\n      // we parse it to ensure that it is something valid.\r\n      // If it contains a semicolon it is invalid\r\n      if (value.indexOf(\";\") !== -1) return;\r\n\r\n      var newprops = parseStyles(property + \":\" + value);\r\n      if (Object.getOwnPropertyNames(newprops.property).length === 0) {\r\n        return; // no valid property found\r\n      }\r\n      if (Object.getOwnPropertyNames(newprops.priority).length !== 0) {\r\n        return; // if the value included '!important' it wasn't valid.\r\n      }\r\n\r\n      // XXX handle shorthand properties\r\n\r\n      for (var p in newprops.property) {\r\n        styles.property[p] = newprops.property[p];\r\n        if (priority === NO_CHANGE) {\r\n          continue;\r\n        } else if (priority !== \"\") {\r\n          styles.priority[p] = \"important\";\r\n        } else if (styles.priority[p]) {\r\n          delete styles.priority[p];\r\n        }\r\n      }\r\n    }\r\n\r\n    // Serialize and update cssText and element.style!\r\n    this._serialize();\r\n  }},\r\n\r\n  setPropertyValue: { value: function(property, value) {\r\n    return this.setProperty(property, value, NO_CHANGE);\r\n  }},\r\n\r\n  setPropertyPriority: { value: function(property, priority) {\r\n    return this.setProperty(property, NO_CHANGE, priority);\r\n  }},\r\n\r\n  removeProperty: { value: function(property) {\r\n    property = property.toLowerCase();\r\n    var styles = this._parsed;\r\n    if (property in styles.property) {\r\n      delete styles.property[property];\r\n      delete styles.priority[property];\r\n\r\n      // Serialize and update cssText and element.style!\r\n      this._serialize();\r\n    }\r\n  }},\r\n});\r\n", "\"use strict\";\r\nvar URL = require('./URL');\r\n\r\nmodule.exports = URLUtils;\r\n\r\n// Allow the `x == null` pattern.  This is eslint's \"null: 'ignore'\" option,\r\n// but jshint doesn't support this.\r\n/* jshint eqeqeq: false */\r\n\r\n// This is an abstract superclass for Location, HTMLAnchorElement and\r\n// other types that have the standard complement of \"URL decomposition\r\n// IDL attributes\".  This is now standardized as URLUtils, see:\r\n// https://url.spec.whatwg.org/#urlutils\r\n// Subclasses must define a getter/setter on href.\r\n// The getter and setter methods parse and rebuild the URL on each\r\n// invocation; there is no attempt to cache the value and be more efficient\r\nfunction URLUtils() {}\r\nURLUtils.prototype = Object.create(Object.prototype, {\r\n\r\n  _url: { get: function() {\r\n    // XXX: this should do the \"Reinitialize url\" steps, and \"null\" should\r\n    // be a valid return value.\r\n    return new URL(this.href);\r\n  } },\r\n\r\n  protocol: {\r\n    get: function() {\r\n      var url = this._url;\r\n      if (url && url.scheme) return url.scheme + \":\";\r\n      else return \":\";\r\n    },\r\n    set: function(v) {\r\n      var output = this.href;\r\n      var url = new URL(output);\r\n      if (url.isAbsolute()) {\r\n        v = v.replace(/:+$/, \"\");\r\n        v = v.replace(/[^-+\\.a-zA-Z0-9]/g, URL.percentEncode);\r\n        if (v.length > 0) {\r\n          url.scheme = v;\r\n          output = url.toString();\r\n        }\r\n      }\r\n      this.href = output;\r\n    },\r\n  },\r\n\r\n  host: {\r\n    get: function() {\r\n      var url = this._url;\r\n      if (url.isAbsolute() && url.isAuthorityBased())\r\n        return url.host + (url.port ? (\":\" + url.port) : \"\");\r\n      else\r\n        return \"\";\r\n    },\r\n    set: function(v) {\r\n      var output = this.href;\r\n      var url = new URL(output);\r\n      if (url.isAbsolute() && url.isAuthorityBased()) {\r\n        v = v.replace(/[^-+\\._~!$&'()*,;:=a-zA-Z0-9]/g, URL.percentEncode);\r\n        if (v.length > 0) {\r\n          url.host = v;\r\n          delete url.port;\r\n          output = url.toString();\r\n        }\r\n      }\r\n      this.href = output;\r\n    },\r\n  },\r\n\r\n  hostname: {\r\n    get: function() {\r\n      var url = this._url;\r\n      if (url.isAbsolute() && url.isAuthorityBased())\r\n        return url.host;\r\n      else\r\n        return \"\";\r\n    },\r\n    set: function(v) {\r\n      var output = this.href;\r\n      var url = new URL(output);\r\n      if (url.isAbsolute() && url.isAuthorityBased()) {\r\n        v = v.replace(/^\\/+/, \"\");\r\n        v = v.replace(/[^-+\\._~!$&'()*,;:=a-zA-Z0-9]/g, URL.percentEncode);\r\n        if (v.length > 0) {\r\n          url.host = v;\r\n          output = url.toString();\r\n        }\r\n      }\r\n      this.href = output;\r\n    },\r\n  },\r\n\r\n  port: {\r\n    get: function() {\r\n      var url = this._url;\r\n      if (url.isAbsolute() && url.isAuthorityBased() && url.port!==undefined)\r\n        return url.port;\r\n      else\r\n        return \"\";\r\n    },\r\n    set: function(v) {\r\n      var output = this.href;\r\n      var url = new URL(output);\r\n      if (url.isAbsolute() && url.isAuthorityBased()) {\r\n        v = '' + v;\r\n        v = v.replace(/[^0-9].*$/, \"\");\r\n        v = v.replace(/^0+/, \"\");\r\n        if (v.length === 0) v = \"0\";\r\n        if (parseInt(v, 10) <= 65535) {\r\n          url.port = v;\r\n          output = url.toString();\r\n        }\r\n      }\r\n      this.href = output;\r\n    },\r\n  },\r\n\r\n  pathname: {\r\n    get: function() {\r\n      var url = this._url;\r\n      if (url.isAbsolute() && url.isHierarchical())\r\n        return url.path;\r\n      else\r\n        return \"\";\r\n    },\r\n    set: function(v) {\r\n      var output = this.href;\r\n      var url = new URL(output);\r\n      if (url.isAbsolute() && url.isHierarchical()) {\r\n        if (v.charAt(0) !== \"/\")\r\n          v = \"/\" + v;\r\n        v = v.replace(/[^-+\\._~!$&'()*,;:=@\\/a-zA-Z0-9]/g, URL.percentEncode);\r\n        url.path = v;\r\n        output = url.toString();\r\n      }\r\n      this.href = output;\r\n    },\r\n  },\r\n\r\n  search: {\r\n    get: function() {\r\n      var url = this._url;\r\n      if (url.isAbsolute() && url.isHierarchical() && url.query!==undefined)\r\n        return \"?\" + url.query;\r\n      else\r\n        return \"\";\r\n    },\r\n    set: function(v) {\r\n      var output = this.href;\r\n      var url = new URL(output);\r\n      if (url.isAbsolute() && url.isHierarchical()) {\r\n        if (v.charAt(0) === \"?\") v = v.substring(1);\r\n        v = v.replace(/[^-+\\._~!$&'()*,;:=@\\/?a-zA-Z0-9]/g, URL.percentEncode);\r\n        url.query = v;\r\n        output = url.toString();\r\n      }\r\n      this.href = output;\r\n    },\r\n  },\r\n\r\n  hash: {\r\n    get: function() {\r\n      var url = this._url;\r\n      if (url == null || url.fragment == null || url.fragment === '') {\r\n        return \"\";\r\n      } else {\r\n        return \"#\" + url.fragment;\r\n      }\r\n    },\r\n    set: function(v) {\r\n      var output = this.href;\r\n      var url = new URL(output);\r\n\r\n      if (v.charAt(0) === \"#\") v = v.substring(1);\r\n      v = v.replace(/[^-+\\._~!$&'()*,;:=@\\/?a-zA-Z0-9]/g, URL.percentEncode);\r\n      url.fragment = v;\r\n      output = url.toString();\r\n\r\n      this.href = output;\r\n    },\r\n  },\r\n\r\n  username: {\r\n    get: function() {\r\n      var url = this._url;\r\n      return url.username || '';\r\n    },\r\n    set: function(v) {\r\n      var output = this.href;\r\n      var url = new URL(output);\r\n      if (url.isAbsolute()) {\r\n        v = v.replace(/[\\x00-\\x1F\\x7F-\\uFFFF \"#<>?`\\/@\\\\:]/g, URL.percentEncode);\r\n        url.username = v;\r\n        output = url.toString();\r\n      }\r\n      this.href = output;\r\n    },\r\n  },\r\n\r\n  password: {\r\n    get: function() {\r\n      var url = this._url;\r\n      return url.password || '';\r\n    },\r\n    set: function(v) {\r\n      var output = this.href;\r\n      var url = new URL(output);\r\n      if (url.isAbsolute()) {\r\n        if (v==='') {\r\n          url.password = null;\r\n        } else {\r\n          v = v.replace(/[\\x00-\\x1F\\x7F-\\uFFFF \"#<>?`\\/@\\\\]/g, URL.percentEncode);\r\n          url.password = v;\r\n        }\r\n        output = url.toString();\r\n      }\r\n      this.href = output;\r\n    },\r\n  },\r\n\r\n  origin: { get: function() {\r\n    var url = this._url;\r\n    if (url == null) { return ''; }\r\n    var originForPort = function(defaultPort) {\r\n      var origin = [url.scheme, url.host, +url.port || defaultPort];\r\n      // XXX should be \"unicode serialization\"\r\n      return origin[0] + '://' + origin[1] +\r\n        (origin[2] === defaultPort ? '' : (':' + origin[2]));\r\n    };\r\n    switch (url.scheme) {\r\n    case 'ftp':\r\n      return originForPort(21);\r\n    case 'gopher':\r\n      return originForPort(70);\r\n    case 'http':\r\n    case 'ws':\r\n      return originForPort(80);\r\n    case 'https':\r\n    case 'wss':\r\n      return originForPort(443);\r\n    default:\r\n      // this is what chrome does\r\n      return url.scheme + '://';\r\n    }\r\n  } },\r\n\r\n  /*\r\n  searchParams: {\r\n    get: function() {\r\n      var url = this._url;\r\n      // XXX\r\n    },\r\n    set: function(v) {\r\n      var output = this.href;\r\n      var url = new URL(output);\r\n      // XXX\r\n      this.href = output;\r\n    },\r\n  },\r\n  */\r\n});\r\n\r\nURLUtils._inherit = function(proto) {\r\n  // copy getters/setters from URLUtils to o.\r\n  Object.getOwnPropertyNames(URLUtils.prototype).forEach(function(p) {\r\n    if (p==='constructor' || p==='href') { return; }\r\n    var desc = Object.getOwnPropertyDescriptor(URLUtils.prototype, p);\r\n    Object.defineProperty(proto, p, desc);\r\n  });\r\n};\r\n", "\"use strict\";\r\n\r\nvar attributes = require('./attributes');\r\nvar isApiWritable = require(\"./config\").isApiWritable;\r\n\r\nmodule.exports = function(spec, defaultConstructor, tagList, tagNameToImpl) {\r\n  var c = spec.ctor;\r\n  if (c) {\r\n    var props = spec.props || {};\r\n\r\n    if (spec.attributes) {\r\n      for (var n in spec.attributes) {\r\n        var attr = spec.attributes[n];\r\n        if (typeof attr !== 'object' || Array.isArray(attr)) attr = {type: attr};\r\n        if (!attr.name) attr.name = n.toLowerCase();\r\n        props[n] = attributes.property(attr);\r\n      }\r\n    }\r\n\r\n    props.constructor = { value : c, writable: isApiWritable };\r\n    c.prototype = Object.create((spec.superclass || defaultConstructor).prototype, props);\r\n    if (spec.events) {\r\n      addEventHandlers(c, spec.events);\r\n    }\r\n    tagList[spec.name] = c;\r\n  }\r\n  else {\r\n    c = defaultConstructor;\r\n  }\r\n\r\n  (spec.tags || spec.tag && [spec.tag] || []).forEach(function(tag) {\r\n    tagNameToImpl[tag] = c;\r\n  });\r\n\r\n  return c;\r\n};\r\n\r\nfunction EventHandlerBuilder(body, document, form, element) {\r\n  this.body = body;\r\n  this.document = document;\r\n  this.form = form;\r\n  this.element = element;\r\n}\r\n\r\nEventHandlerBuilder.prototype.build = function () {\r\n  return () => {};\r\n};\r\n\r\nfunction EventHandlerChangeHandler(elt, name, oldval, newval) {\r\n  var doc = elt.ownerDocument || Object.create(null);\r\n  var form = elt.form || Object.create(null);\r\n  elt[name] = new EventHandlerBuilder(newval, doc, form, elt).build();\r\n}\r\n\r\nfunction addEventHandlers(c, eventHandlerTypes) {\r\n  var p = c.prototype;\r\n  eventHandlerTypes.forEach(function(type) {\r\n    // Define the event handler registration IDL attribute for this type\r\n    Object.defineProperty(p, \"on\" + type, {\r\n      get: function() {\r\n        return this._getEventHandler(type);\r\n      },\r\n      set: function(v) {\r\n        this._setEventHandler(type, v);\r\n      },\r\n    });\r\n\r\n    // Define special behavior for the content attribute as well\r\n    attributes.registerChangeHandler(c, \"on\" + type, EventHandlerChangeHandler);\r\n  });\r\n}\r\n", "\"use strict\";\r\nvar Node = require('./Node');\r\nvar Element = require('./Element');\r\nvar CSSStyleDeclaration = require('./CSSStyleDeclaration');\r\nvar utils = require('./utils');\r\nvar URLUtils = require('./URLUtils');\r\nvar defineElement = require('./defineElement');\r\n\r\nvar htmlElements = exports.elements = {};\r\nvar htmlNameToImpl = Object.create(null);\r\n\r\nexports.createElement = function(doc, localName, prefix) {\r\n  var impl = htmlNameToImpl[localName] || HTMLUnknownElement;\r\n  return new impl(doc, localName, prefix);\r\n};\r\n\r\nfunction define(spec) {\r\n  return defineElement(spec, HTMLElement, htmlElements, htmlNameToImpl);\r\n}\r\n\r\nfunction URL(attr) {\r\n  return {\r\n    get: function() {\r\n      var v = this._getattr(attr);\r\n      if (v === null) { return ''; }\r\n      var url = this.doc._resolve(v);\r\n      return (url === null) ? v : url;\r\n    },\r\n    set: function(value) {\r\n      this._setattr(attr, value);\r\n    }\r\n  };\r\n}\r\n\r\nfunction CORS(attr) {\r\n  return {\r\n    get: function() {\r\n      var v = this._getattr(attr);\r\n      if (v === null) { return null; }\r\n      if (v.toLowerCase() === 'use-credentials') { return 'use-credentials'; }\r\n      return 'anonymous';\r\n    },\r\n    set: function(value) {\r\n      if (value===null || value===undefined) {\r\n        this.removeAttribute(attr);\r\n      } else {\r\n        this._setattr(attr, value);\r\n      }\r\n    }\r\n  };\r\n}\r\n\r\nconst REFERRER = {\r\n  type: [\"\", \"no-referrer\", \"no-referrer-when-downgrade\", \"same-origin\", \"origin\", \"strict-origin\", \"origin-when-cross-origin\", \"strict-origin-when-cross-origin\", \"unsafe-url\"],\r\n  missing: '',\r\n};\r\n\r\n\r\n// XXX: the default value for tabIndex should be 0 if the element is\r\n// focusable and -1 if it is not.  But the full definition of focusable\r\n// is actually hard to compute, so for now, I'll follow Firefox and\r\n// just base the default value on the type of the element.\r\nvar focusableElements = {\r\n  \"A\":true, \"LINK\":true, \"BUTTON\":true, \"INPUT\":true,\r\n  \"SELECT\":true, \"TEXTAREA\":true, \"COMMAND\":true\r\n};\r\n\r\nvar HTMLFormElement = function(doc, localName, prefix) {\r\n  HTMLElement.call(this, doc, localName, prefix);\r\n  this._form = null; // Prevent later deoptimization\r\n};\r\n\r\nvar HTMLElement = exports.HTMLElement = define({\r\n  superclass: Element,\r\n  name: 'HTMLElement',\r\n  ctor: function HTMLElement(doc, localName, prefix) {\r\n    Element.call(this, doc, localName, utils.NAMESPACE.HTML, prefix);\r\n  },\r\n  props: {\r\n    dangerouslySetInnerHTML: {\r\n      set: function (v) {\r\n        this._innerHTML = v;\r\n      },\r\n    },\r\n    innerHTML: {\r\n      get: function() {\r\n        return this.serialize();\r\n      },\r\n      set: function(v) {\r\n        var parser = this.ownerDocument.implementation.mozHTMLParser(\r\n          this.ownerDocument._address,\r\n          this);\r\n        parser.parse(v===null ? '' : String(v), true);\r\n\r\n        // Remove any existing children of this node\r\n        var target = (this instanceof htmlNameToImpl.template) ?\r\n            this.content : this;\r\n        while(target.hasChildNodes())\r\n          target.removeChild(target.firstChild);\r\n\r\n        // Now copy newly parsed children to this node\r\n        target.appendChild(parser._asDocumentFragment());\r\n      }\r\n    },\r\n    style: { get: function() {\r\n      if (!this._style)\r\n        this._style = new CSSStyleDeclaration(this);\r\n      return this._style;\r\n    }, set: function(v) {\r\n        if (v===null||v===undefined) { v = ''; }\r\n        this._setattr('style', String(v));\r\n    }},\r\n\r\n    // These can't really be implemented server-side in a reasonable way.\r\n    blur: { value: function() {}},\r\n    focus: { value: function() {}},\r\n    forceSpellCheck: { value: function() {}},\r\n\r\n    click: { value: function() {\r\n      if (this._click_in_progress) return;\r\n      this._click_in_progress = true;\r\n      try {\r\n        if (this._pre_click_activation_steps)\r\n          this._pre_click_activation_steps();\r\n\r\n        var event = this.ownerDocument.createEvent(\"MouseEvent\");\r\n        event.initMouseEvent(\"click\", true, true,\r\n          this.ownerDocument.defaultView, 1,\r\n          0, 0, 0, 0,\r\n          // These 4 should be initialized with\r\n          // the actually current keyboard state\r\n          // somehow...\r\n          false, false, false, false,\r\n          0, null\r\n        );\r\n\r\n        // Dispatch this as an untrusted event since it is synthetic\r\n        var success = this.dispatchEvent(event);\r\n\r\n        if (success) {\r\n          if (this._post_click_activation_steps)\r\n            this._post_click_activation_steps(event);\r\n        }\r\n        else {\r\n          if (this._cancelled_activation_steps)\r\n            this._cancelled_activation_steps();\r\n        }\r\n      }\r\n      finally {\r\n        this._click_in_progress = false;\r\n      }\r\n    }},\r\n    submit: { value: utils.nyi },\r\n  },\r\n  attributes: {\r\n    title: String,\r\n    lang: String,\r\n    dir: {type: [\"ltr\", \"rtl\", \"auto\"], missing: ''},\r\n    draggable: {type: [\"true\", \"false\"], treatNullAsEmptyString: true },\r\n    spellcheck: {type: [\"true\", \"false\"], missing: ''},\r\n    enterKeyHint: {type: [\"enter\", \"done\", \"go\", \"next\", \"previous\", \"search\", \"send\"], missing: ''},\r\n    autoCapitalize: {type: [\"off\", \"on\", \"none\", \"sentences\", \"words\", \"characters\"], missing: '' },\r\n    autoFocus: Boolean,\r\n    accessKey: String,\r\n    nonce: String,\r\n    hidden: Boolean,\r\n    translate: {type: [\"no\", \"yes\"], missing: '' },\r\n    tabIndex: {type: \"long\", default: function() {\r\n      if (this.tagName in focusableElements ||\r\n        this.contentEditable)\r\n        return 0;\r\n      else\r\n        return -1;\r\n    }}\r\n  },\r\n  events: [\r\n    \"abort\", \"canplay\", \"canplaythrough\", \"change\", \"click\", \"contextmenu\",\r\n    \"cuechange\", \"dblclick\", \"drag\", \"dragend\", \"dragenter\", \"dragleave\",\r\n    \"dragover\", \"dragstart\", \"drop\", \"durationchange\", \"emptied\", \"ended\",\r\n    \"input\", \"invalid\", \"keydown\", \"keypress\", \"keyup\", \"loadeddata\",\r\n    \"loadedmetadata\", \"loadstart\", \"mousedown\", \"mousemove\", \"mouseout\",\r\n    \"mouseover\", \"mouseup\", \"mousewheel\", \"pause\", \"play\", \"playing\",\r\n    \"progress\", \"ratechange\", \"readystatechange\", \"reset\", \"seeked\",\r\n    \"seeking\", \"select\", \"show\", \"stalled\", \"submit\", \"suspend\",\r\n    \"timeupdate\", \"volumechange\", \"waiting\",\r\n\r\n    // These last 5 event types will be overriden by HTMLBodyElement\r\n    \"blur\", \"error\", \"focus\", \"load\", \"scroll\"\r\n  ]\r\n});\r\n\r\n\r\n// XXX: reflect contextmenu as contextMenu, with element type\r\n\r\n\r\n// style: the spec doesn't call this a reflected attribute.\r\n//   may want to handle it manually.\r\n\r\n// contentEditable: enumerated, not clear if it is actually\r\n// reflected or requires custom getter/setter. Not listed as\r\n// \"limited to known values\".  Raises syntax_err on bad setting,\r\n// so I think this is custom.\r\n\r\n// contextmenu: content is element id, idl type is an element\r\n// draggable: boolean, but not a reflected attribute\r\n// dropzone: reflected SettableTokenList, experimental, so don't\r\n//   implement it right away.\r\n\r\n// data-* attributes: need special handling in setAttribute?\r\n// Or maybe that isn't necessary. Can I just scan the attribute list\r\n// when building the dataset?  Liveness and caching issues?\r\n\r\n// microdata attributes: many are simple reflected attributes, but\r\n// I'm not going to implement this now.\r\n\r\n\r\nvar HTMLUnknownElement = define({\r\n  name: 'HTMLUnknownElement',\r\n  ctor: function HTMLUnknownElement(doc, localName, prefix) {\r\n    HTMLElement.call(this, doc, localName, prefix);\r\n  }\r\n});\r\n\r\n\r\nvar formAssociatedProps = {\r\n  // See http://www.w3.org/TR/html5/association-of-controls-and-forms.html#form-owner\r\n  form: { get: function() {\r\n    return this._form;\r\n  }}\r\n};\r\n\r\ndefine({\r\n  tag: 'a',\r\n  name: 'HTMLAnchorElement',\r\n  ctor: function HTMLAnchorElement(doc, localName, prefix) {\r\n    HTMLElement.call(this, doc, localName, prefix);\r\n  },\r\n  props: {\r\n    _post_click_activation_steps: { value: function(e) {\r\n      if (this.href) {\r\n        // Follow the link\r\n        // XXX: this is just a quick hack\r\n        // XXX: the HTML spec probably requires more than this\r\n        this.ownerDocument.defaultView.location = this.href;\r\n      }\r\n    }},\r\n  },\r\n  attributes: {\r\n    href: URL,\r\n    ping: String,\r\n    download: String,\r\n    target: String,\r\n    rel: String,\r\n    media: String,\r\n    hreflang: String,\r\n    type: String,\r\n    referrerPolicy: REFERRER,\r\n    // Obsolete\r\n    coords: String,\r\n    charset: String,\r\n    name: String,\r\n    rev: String,\r\n    shape: String,\r\n  }\r\n});\r\n// Latest WhatWG spec says these methods come via HTMLHyperlinkElementUtils\r\nURLUtils._inherit(htmlNameToImpl.a.prototype);\r\n\r\ndefine({\r\n  tag: 'area',\r\n  name: 'HTMLAreaElement',\r\n  ctor: function HTMLAreaElement(doc, localName, prefix) {\r\n    HTMLElement.call(this, doc, localName, prefix);\r\n  },\r\n  attributes: {\r\n    alt: String,\r\n    target: String,\r\n    download: String,\r\n    rel: String,\r\n    media: String,\r\n    href: URL,\r\n    hreflang: String,\r\n    type: String,\r\n    shape: String,\r\n    coords: String,\r\n    ping: String,\r\n    // XXX: also reflect relList\r\n    referrerPolicy: REFERRER,\r\n    // Obsolete\r\n    noHref: Boolean,\r\n  }\r\n});\r\n// Latest WhatWG spec says these methods come via HTMLHyperlinkElementUtils\r\nURLUtils._inherit(htmlNameToImpl.area.prototype);\r\n\r\ndefine({\r\n  tag: 'br',\r\n  name: 'HTMLBRElement',\r\n  ctor: function HTMLBRElement(doc, localName, prefix) {\r\n    HTMLElement.call(this, doc, localName, prefix);\r\n  },\r\n  attributes: {\r\n    // Obsolete\r\n    clear: String\r\n  },\r\n});\r\n\r\ndefine({\r\n  tag: 'base',\r\n  name: 'HTMLBaseElement',\r\n  ctor: function HTMLBaseElement(doc, localName, prefix) {\r\n    HTMLElement.call(this, doc, localName, prefix);\r\n  },\r\n  attributes: {\r\n    \"target\": String\r\n  }\r\n});\r\n\r\n\r\ndefine({\r\n  tag: 'body',\r\n  name: 'HTMLBodyElement',\r\n  ctor: function HTMLBodyElement(doc, localName, prefix) {\r\n    HTMLElement.call(this, doc, localName, prefix);\r\n  },\r\n  // Certain event handler attributes on a <body> tag actually set\r\n  // handlers for the window rather than just that element.  Define\r\n  // getters and setters for those here.  Note that some of these override\r\n  // properties on HTMLElement.prototype.\r\n  // XXX: If I add support for <frameset>, these have to go there, too\r\n  // XXX\r\n  // When the Window object is implemented, these attribute will have\r\n  // to work with the same-named attributes on the Window.\r\n  events: [\r\n    \"afterprint\", \"beforeprint\", \"beforeunload\", \"blur\", \"error\",\r\n    \"focus\",\"hashchange\", \"load\", \"message\", \"offline\", \"online\",\r\n    \"pagehide\", \"pageshow\",\"popstate\",\"resize\",\"scroll\",\"storage\",\"unload\",\r\n  ],\r\n  attributes: {\r\n    // Obsolete\r\n    text: { type: String, treatNullAsEmptyString: true },\r\n    link: { type: String, treatNullAsEmptyString: true },\r\n    vLink: { type: String, treatNullAsEmptyString: true },\r\n    aLink: { type: String, treatNullAsEmptyString: true },\r\n    bgColor: { type: String, treatNullAsEmptyString: true },\r\n    background: String,\r\n  }\r\n});\r\n\r\ndefine({\r\n  tag: 'button',\r\n  name: 'HTMLButtonElement',\r\n  ctor: function HTMLButtonElement(doc, localName, prefix) {\r\n    HTMLFormElement.call(this, doc, localName, prefix);\r\n  },\r\n  props: formAssociatedProps,\r\n  attributes: {\r\n    name: String,\r\n    value: String,\r\n    disabled: Boolean,\r\n    autofocus: Boolean,\r\n    type: { type:[\"submit\", \"reset\", \"button\", \"menu\"], missing: 'submit' },\r\n    formTarget: String,\r\n    formAction: URL,\r\n    formNoValidate: Boolean,\r\n    formMethod: { type: [\"get\", \"post\", \"dialog\"], invalid: 'get', missing: '' },\r\n    formEnctype: { type: [\"application/x-www-form-urlencoded\", \"multipart/form-data\", \"text/plain\"], invalid: \"application/x-www-form-urlencoded\", missing: '' },\r\n  }\r\n});\r\n\r\ndefine({\r\n  tag: 'dl',\r\n  name: 'HTMLDListElement',\r\n  ctor: function HTMLDListElement(doc, localName, prefix) {\r\n    HTMLElement.call(this, doc, localName, prefix);\r\n  },\r\n  attributes: {\r\n    // Obsolete\r\n    compact: Boolean,\r\n  }\r\n});\r\n\r\ndefine({\r\n  tag: 'data',\r\n  name: 'HTMLDataElement',\r\n  ctor: function HTMLDataElement(doc, localName, prefix) {\r\n    HTMLElement.call(this, doc, localName, prefix);\r\n  },\r\n  attributes: {\r\n    value: String,\r\n  }\r\n});\r\n\r\ndefine({\r\n  tag: 'datalist',\r\n  name: 'HTMLDataListElement',\r\n  ctor: function HTMLDataListElement(doc, localName, prefix) {\r\n    HTMLElement.call(this, doc, localName, prefix);\r\n  }\r\n});\r\n\r\ndefine({\r\n  tag: 'details',\r\n  name: 'HTMLDetailsElement',\r\n  ctor: function HTMLDetailsElement(doc, localName, prefix) {\r\n    HTMLElement.call(this, doc, localName, prefix);\r\n  },\r\n  attributes: {\r\n    \"open\": Boolean\r\n  }\r\n});\r\n\r\ndefine({\r\n  tag: 'div',\r\n  name: 'HTMLDivElement',\r\n  ctor: function HTMLDivElement(doc, localName, prefix) {\r\n    HTMLElement.call(this, doc, localName, prefix);\r\n  },\r\n  attributes: {\r\n    // Obsolete\r\n    align: String\r\n  }\r\n});\r\n\r\ndefine({\r\n  tag: 'embed',\r\n  name: 'HTMLEmbedElement',\r\n  ctor: function HTMLEmbedElement(doc, localName, prefix) {\r\n    HTMLElement.call(this, doc, localName, prefix);\r\n  },\r\n  attributes: {\r\n    src: URL,\r\n    type: String,\r\n    width: String,\r\n    height: String,\r\n    // Obsolete\r\n    align: String,\r\n    name: String,\r\n  }\r\n});\r\n\r\ndefine({\r\n  tag: 'fieldset',\r\n  name: 'HTMLFieldSetElement',\r\n  ctor: function HTMLFieldSetElement(doc, localName, prefix) {\r\n    HTMLFormElement.call(this, doc, localName, prefix);\r\n  },\r\n  props: formAssociatedProps,\r\n  attributes: {\r\n    disabled: Boolean,\r\n    name: String\r\n  }\r\n});\r\n\r\ndefine({\r\n  tag: 'form',\r\n  name: 'HTMLFormElement',\r\n  ctor: function HTMLFormElement(doc, localName, prefix) {\r\n    HTMLElement.call(this, doc, localName, prefix);\r\n  },\r\n  attributes: {\r\n    action: String,\r\n    autocomplete: {type:['on', 'off'], missing: 'on'},\r\n    name: String,\r\n    acceptCharset: {name: \"accept-charset\"},\r\n    target: String,\r\n    noValidate: Boolean,\r\n    method: { type: [\"get\", \"post\", \"dialog\"], invalid: 'get', missing: 'get' },\r\n    // Both enctype and encoding reflect the enctype content attribute\r\n    enctype: { type: [\"application/x-www-form-urlencoded\", \"multipart/form-data\", \"text/plain\"], invalid: \"application/x-www-form-urlencoded\", missing: \"application/x-www-form-urlencoded\" },\r\n    encoding: {name: 'enctype', type: [\"application/x-www-form-urlencoded\", \"multipart/form-data\", \"text/plain\"], invalid: \"application/x-www-form-urlencoded\", missing: \"application/x-www-form-urlencoded\" },\r\n  }\r\n});\r\n\r\ndefine({\r\n  tag: 'hr',\r\n  name: 'HTMLHRElement',\r\n  ctor: function HTMLHRElement(doc, localName, prefix) {\r\n    HTMLElement.call(this, doc, localName, prefix);\r\n  },\r\n  attributes: {\r\n    // Obsolete\r\n    align: String,\r\n    color: String,\r\n    noShade: Boolean,\r\n    size: String,\r\n    width: String,\r\n  },\r\n});\r\n\r\ndefine({\r\n  tag: 'head',\r\n  name: 'HTMLHeadElement',\r\n  ctor: function HTMLHeadElement(doc, localName, prefix) {\r\n    HTMLElement.call(this, doc, localName, prefix);\r\n  }\r\n});\r\n\r\ndefine({\r\n  tags: ['h1','h2','h3','h4','h5','h6'],\r\n  name: 'HTMLHeadingElement',\r\n  ctor: function HTMLHeadingElement(doc, localName, prefix) {\r\n    HTMLElement.call(this, doc, localName, prefix);\r\n  },\r\n  attributes: {\r\n    // Obsolete\r\n    align: String,\r\n  },\r\n});\r\n\r\ndefine({\r\n  tag: 'html',\r\n  name: 'HTMLHtmlElement',\r\n  ctor: function HTMLHtmlElement(doc, localName, prefix) {\r\n    HTMLElement.call(this, doc, localName, prefix);\r\n  },\r\n  attributes: {\r\n    xmlns: URL,\r\n    // Obsolete\r\n    version: String\r\n  }\r\n});\r\n\r\ndefine({\r\n  tag: 'iframe',\r\n  name: 'HTMLIFrameElement',\r\n  ctor: function HTMLIFrameElement(doc, localName, prefix) {\r\n    HTMLElement.call(this, doc, localName, prefix);\r\n  },\r\n  attributes: {\r\n    src: URL,\r\n    srcdoc: String,\r\n    name: String,\r\n    width: String,\r\n    height: String,\r\n    // XXX: sandbox is a reflected settable token list\r\n    seamless: Boolean,\r\n    allow: Boolean,\r\n    allowFullscreen: Boolean,\r\n    allowUserMedia: Boolean,\r\n    allowPaymentRequest: Boolean,\r\n    referrerPolicy: REFERRER,\r\n    loading: { type:['eager','lazy'], treatNullAsEmptyString: true },\r\n    // Obsolete\r\n    align: String,\r\n    scrolling: String,\r\n    frameBorder: String,\r\n    longDesc: URL,\r\n    marginHeight: { type: String, treatNullAsEmptyString: true },\r\n    marginWidth: { type: String, treatNullAsEmptyString: true },\r\n  }\r\n});\r\n\r\ndefine({\r\n  tag: 'img',\r\n  name: 'HTMLImageElement',\r\n  ctor: function HTMLImageElement(doc, localName, prefix) {\r\n    HTMLElement.call(this, doc, localName, prefix);\r\n  },\r\n  attributes: {\r\n    alt: String,\r\n    src: URL,\r\n    srcset: String,\r\n    crossOrigin: CORS,\r\n    useMap: String,\r\n    isMap: Boolean,\r\n    sizes: String,\r\n    height: { type: \"unsigned long\", default: 0 },\r\n    width: { type: \"unsigned long\", default: 0 },\r\n    referrerPolicy: REFERRER,\r\n    loading: { type:['eager','lazy'], missing: '' },\r\n    // Obsolete:\r\n    name: String,\r\n    lowsrc: URL,\r\n    align: String,\r\n    hspace: { type: \"unsigned long\", default: 0 },\r\n    vspace: { type: \"unsigned long\", default: 0 },\r\n    longDesc: URL,\r\n    border: { type: String, treatNullAsEmptyString: true },\r\n  }\r\n});\r\n\r\ndefine({\r\n  tag: 'input',\r\n  name: 'HTMLInputElement',\r\n  ctor: function HTMLInputElement(doc, localName, prefix) {\r\n    HTMLFormElement.call(this, doc, localName, prefix);\r\n  },\r\n  props: {\r\n    form: formAssociatedProps.form,\r\n    _post_click_activation_steps: { value: function(e) {\r\n      if (this.type === 'checkbox') {\r\n        this.checked = !this.checked;\r\n      }\r\n      else if (this.type === 'radio') {\r\n        var group = this.form.getElementsByName(this.name);\r\n        for (var i=group.length-1; i >= 0; i--) {\r\n          var el = group[i];\r\n          el.checked = (el === this);\r\n        }\r\n      }\r\n    }},\r\n  },\r\n  attributes: {\r\n    name: String,\r\n    disabled: Boolean,\r\n    autofocus: Boolean,\r\n    accept: String,\r\n    alt: String,\r\n    max: String,\r\n    min: String,\r\n    pattern: String,\r\n    placeholder: String,\r\n    step: String,\r\n    dirName: String,\r\n    defaultValue: {name: 'value'},\r\n    multiple: Boolean,\r\n    required: Boolean,\r\n    readOnly: Boolean,\r\n    checked: Boolean,\r\n    value: String,\r\n    src: URL,\r\n    defaultChecked: {name: 'checked', type: Boolean},\r\n    size: {type: 'unsigned long', default: 20, min: 1, setmin: 1},\r\n    width: {type: 'unsigned long', min: 0, setmin: 0, default: 0},\r\n    height: {type: 'unsigned long', min: 0, setmin: 0, default: 0},\r\n    minLength: {type: 'unsigned long', min: 0, setmin: 0, default: -1},\r\n    maxLength: {type: 'unsigned long', min: 0, setmin: 0, default: -1},\r\n    autocomplete: String, // It's complicated\r\n    type: { type:\r\n            [\"text\", \"hidden\", \"search\", \"tel\", \"url\", \"email\", \"password\",\r\n             \"datetime\", \"date\", \"month\", \"week\", \"time\", \"datetime-local\",\r\n             \"number\", \"range\", \"color\", \"checkbox\", \"radio\", \"file\", \"submit\",\r\n             \"image\", \"reset\", \"button\"],\r\n            missing: 'text' },\r\n    formTarget: String,\r\n    formNoValidate: Boolean,\r\n    formMethod: { type: [\"get\", \"post\"], invalid: 'get', missing: '' },\r\n    formEnctype: { type: [\"application/x-www-form-urlencoded\", \"multipart/form-data\", \"text/plain\"], invalid: \"application/x-www-form-urlencoded\", missing: '' },\r\n    inputMode: { type: [ \"verbatim\", \"latin\", \"latin-name\", \"latin-prose\", \"full-width-latin\", \"kana\", \"kana-name\", \"katakana\", \"numeric\", \"tel\", \"email\", \"url\" ], missing: '' },\r\n    // Obsolete\r\n    align: String,\r\n    useMap: String,\r\n  }\r\n});\r\n\r\ndefine({\r\n  tag: 'keygen',\r\n  name: 'HTMLKeygenElement',\r\n  ctor: function HTMLKeygenElement(doc, localName, prefix) {\r\n    HTMLFormElement.call(this, doc, localName, prefix);\r\n  },\r\n  props: formAssociatedProps,\r\n  attributes: {\r\n    name: String,\r\n    disabled: Boolean,\r\n    autofocus: Boolean,\r\n    challenge: String,\r\n    keytype: { type:[\"rsa\"], missing: '' },\r\n  }\r\n});\r\n\r\ndefine({\r\n  tag: 'li',\r\n  name: 'HTMLLIElement',\r\n  ctor: function HTMLLIElement(doc, localName, prefix) {\r\n    HTMLElement.call(this, doc, localName, prefix);\r\n  },\r\n  attributes: {\r\n    value: {type: \"long\", default: 0},\r\n    // Obsolete\r\n    type: String,\r\n  }\r\n});\r\n\r\ndefine({\r\n  tag: 'label',\r\n  name: 'HTMLLabelElement',\r\n  ctor: function HTMLLabelElement(doc, localName, prefix) {\r\n    HTMLFormElement.call(this, doc, localName, prefix);\r\n  },\r\n  props: formAssociatedProps,\r\n  attributes: {\r\n    htmlFor: {name: 'for', type: String}\r\n  }\r\n});\r\n\r\ndefine({\r\n  tag: 'legend',\r\n  name: 'HTMLLegendElement',\r\n  ctor: function HTMLLegendElement(doc, localName, prefix) {\r\n    HTMLElement.call(this, doc, localName, prefix);\r\n  },\r\n  attributes: {\r\n    // Obsolete\r\n    align: String\r\n  },\r\n});\r\n\r\ndefine({\r\n  tag: 'link',\r\n  name: 'HTMLLinkElement',\r\n  ctor: function HTMLLinkElement(doc, localName, prefix) {\r\n    HTMLElement.call(this, doc, localName, prefix);\r\n  },\r\n  attributes: {\r\n    // XXX Reflect DOMSettableTokenList sizes also DOMTokenList relList\r\n    href: URL,\r\n    rel: String,\r\n    media: String,\r\n    hreflang: String,\r\n    type: String,\r\n    crossOrigin: CORS,\r\n    nonce: String,\r\n    integrity: String,\r\n    referrerPolicy: REFERRER,\r\n    imageSizes: String,\r\n    imageSrcset: String,\r\n    // Obsolete\r\n    charset: String,\r\n    rev: String,\r\n    target: String,\r\n  }\r\n});\r\n\r\ndefine({\r\n  tag: 'map',\r\n  name: 'HTMLMapElement',\r\n  ctor: function HTMLMapElement(doc, localName, prefix) {\r\n    HTMLElement.call(this, doc, localName, prefix);\r\n  },\r\n  attributes: {\r\n    name: String\r\n  }\r\n});\r\n\r\ndefine({\r\n  tag: 'menu',\r\n  name: 'HTMLMenuElement',\r\n  ctor: function HTMLMenuElement(doc, localName, prefix) {\r\n    HTMLElement.call(this, doc, localName, prefix);\r\n  },\r\n  attributes: {\r\n    // XXX: not quite right, default should be popup if parent element is\r\n    // popup.\r\n    type: { type: [ 'context', 'popup', 'toolbar' ], missing: 'toolbar' },\r\n    label: String,\r\n    // Obsolete\r\n    compact: Boolean,\r\n  }\r\n});\r\n\r\ndefine({\r\n  tag: 'meta',\r\n  name: 'HTMLMetaElement',\r\n  ctor: function HTMLMetaElement(doc, localName, prefix) {\r\n    HTMLElement.call(this, doc, localName, prefix);\r\n  },\r\n  attributes: {\r\n    name: String,\r\n    content: String,\r\n    httpEquiv: {name: 'http-equiv', type: String},\r\n    // Obsolete\r\n    scheme: String,\r\n  }\r\n});\r\n\r\ndefine({\r\n  tag: 'meter',\r\n  name: 'HTMLMeterElement',\r\n  ctor: function HTMLMeterElement(doc, localName, prefix) {\r\n    HTMLFormElement.call(this, doc, localName, prefix);\r\n  },\r\n  props: formAssociatedProps\r\n});\r\n\r\ndefine({\r\n  tags: ['ins', 'del'],\r\n  name: 'HTMLModElement',\r\n  ctor: function HTMLModElement(doc, localName, prefix) {\r\n    HTMLElement.call(this, doc, localName, prefix);\r\n  },\r\n  attributes: {\r\n    cite: URL,\r\n    dateTime: String\r\n  }\r\n});\r\n\r\ndefine({\r\n  tag: 'ol',\r\n  name: 'HTMLOListElement',\r\n  ctor: function HTMLOListElement(doc, localName, prefix) {\r\n    HTMLElement.call(this, doc, localName, prefix);\r\n  },\r\n  props: {\r\n    // Utility function (see the start attribute default value). Returns\r\n    // the number of <li> children of this element\r\n    _numitems: { get: function() {\r\n      var items = 0;\r\n      this.childNodes.forEach(function(n) {\r\n        if (n.nodeType === Node.ELEMENT_NODE && n.tagName === \"LI\")\r\n          items++;\r\n      });\r\n      return items;\r\n    }}\r\n  },\r\n  attributes: {\r\n    type: String,\r\n    reversed: Boolean,\r\n    start: {\r\n      type: \"long\",\r\n      default: function() {\r\n       // The default value of the start attribute is 1 unless the list is\r\n       // reversed. Then it is the # of li children\r\n       if (this.reversed)\r\n         return this._numitems;\r\n       else\r\n         return 1;\r\n      }\r\n    },\r\n    // Obsolete\r\n    compact: Boolean,\r\n  }\r\n});\r\n\r\ndefine({\r\n  tag: 'object',\r\n  name: 'HTMLObjectElement',\r\n  ctor: function HTMLObjectElement(doc, localName, prefix) {\r\n    HTMLFormElement.call(this, doc, localName, prefix);\r\n  },\r\n  props: formAssociatedProps,\r\n  attributes: {\r\n    data: URL,\r\n    type: String,\r\n    name: String,\r\n    useMap: String,\r\n    typeMustMatch: Boolean,\r\n    width: String,\r\n    height: String,\r\n    // Obsolete\r\n    align: String,\r\n    archive: String,\r\n    code: String,\r\n    declare: Boolean,\r\n    hspace: { type: \"unsigned long\", default: 0 },\r\n    standby: String,\r\n    vspace: { type: \"unsigned long\", default: 0 },\r\n    codeBase: URL,\r\n    codeType: String,\r\n    border: { type: String, treatNullAsEmptyString: true },\r\n  }\r\n});\r\n\r\ndefine({\r\n  tag: 'optgroup',\r\n  name: 'HTMLOptGroupElement',\r\n  ctor: function HTMLOptGroupElement(doc, localName, prefix) {\r\n    HTMLElement.call(this, doc, localName, prefix);\r\n  },\r\n  attributes: {\r\n    disabled: Boolean,\r\n    label: String\r\n  }\r\n});\r\n\r\ndefine({\r\n  tag: 'option',\r\n  name: 'HTMLOptionElement',\r\n  ctor: function HTMLOptionElement(doc, localName, prefix) {\r\n    HTMLElement.call(this, doc, localName, prefix);\r\n  },\r\n  props: {\r\n    form: { get: function() {\r\n      var p = this.parentNode;\r\n      while (p && p.nodeType === Node.ELEMENT_NODE) {\r\n        if (p.localName === 'select') return p.form;\r\n        p = p.parentNode;\r\n      }\r\n    }},\r\n    value: {\r\n      get: function() { return this._getattr('value') || this.text; },\r\n      set: function(v) { this._setattr('value', v); },\r\n    },\r\n    text: {\r\n      get: function() {\r\n        // Strip and collapse whitespace\r\n        return this.textContent.replace(/[ \\t\\n\\f\\r]+/g, ' ').trim();\r\n      },\r\n      set: function(v) { this.textContent = v; },\r\n    },\r\n    // missing: index\r\n  },\r\n  attributes: {\r\n    disabled: Boolean,\r\n    defaultSelected: {name: 'selected', type: Boolean},\r\n    label: String,\r\n  }\r\n});\r\n\r\ndefine({\r\n  tag: 'output',\r\n  name: 'HTMLOutputElement',\r\n  ctor: function HTMLOutputElement(doc, localName, prefix) {\r\n    HTMLFormElement.call(this, doc, localName, prefix);\r\n  },\r\n  props: formAssociatedProps,\r\n  attributes: {\r\n    // XXX Reflect for/htmlFor as a settable token list\r\n    name: String\r\n  }\r\n});\r\n\r\ndefine({\r\n  tag: 'p',\r\n  name: 'HTMLParagraphElement',\r\n  ctor: function HTMLParagraphElement(doc, localName, prefix) {\r\n    HTMLElement.call(this, doc, localName, prefix);\r\n  },\r\n  attributes: {\r\n    // Obsolete\r\n    align: String\r\n  }\r\n});\r\n\r\ndefine({\r\n  tag: 'param',\r\n  name: 'HTMLParamElement',\r\n  ctor: function HTMLParamElement(doc, localName, prefix) {\r\n    HTMLElement.call(this, doc, localName, prefix);\r\n  },\r\n  attributes: {\r\n    name: String,\r\n    value: String,\r\n    // Obsolete\r\n    type: String,\r\n    valueType: String,\r\n  }\r\n});\r\n\r\ndefine({\r\n  tags: ['pre',/*legacy elements:*/'listing','xmp'],\r\n  name: 'HTMLPreElement',\r\n  ctor: function HTMLPreElement(doc, localName, prefix) {\r\n    HTMLElement.call(this, doc, localName, prefix);\r\n  },\r\n  attributes: {\r\n    // Obsolete\r\n    width: { type: \"long\", default: 0 },\r\n  }\r\n});\r\n\r\ndefine({\r\n  tag: 'progress',\r\n  name: 'HTMLProgressElement',\r\n  ctor: function HTMLProgressElement(doc, localName, prefix) {\r\n    HTMLFormElement.call(this, doc, localName, prefix);\r\n  },\r\n  props: formAssociatedProps,\r\n  attributes: {\r\n    max: {type: Number, float: true, default: 1.0, min: 0}\r\n  }\r\n});\r\n\r\ndefine({\r\n  tags: ['q', 'blockquote'],\r\n  name: 'HTMLQuoteElement',\r\n  ctor: function HTMLQuoteElement(doc, localName, prefix) {\r\n    HTMLElement.call(this, doc, localName, prefix);\r\n  },\r\n  attributes: {\r\n    cite: URL\r\n  }\r\n});\r\n\r\ndefine({\r\n  tag: 'script',\r\n  name: 'HTMLScriptElement',\r\n  ctor: function HTMLScriptElement(doc, localName, prefix) {\r\n    HTMLElement.call(this, doc, localName, prefix);\r\n  },\r\n  props: {\r\n    text: {\r\n      get: function() {\r\n        var s = \"\";\r\n        for(var i = 0, n = this.childNodes.length; i < n; i++) {\r\n          var child = this.childNodes[i];\r\n          if (child.nodeType === Node.TEXT_NODE)\r\n            s += child._data;\r\n        }\r\n        return s;\r\n      },\r\n      set: function(value) {\r\n        this.removeChildren();\r\n        if (value !== null && value !== \"\") {\r\n          this.appendChild(this.ownerDocument.createTextNode(value));\r\n        }\r\n      }\r\n    }\r\n  },\r\n  attributes: {\r\n    src: URL,\r\n    type: String,\r\n    charset: String,\r\n    referrerPolicy: REFERRER,\r\n    defer: Boolean,\r\n    async: Boolean,\r\n    nomodule: Boolean,\r\n    crossOrigin: CORS,\r\n    nonce: String,\r\n    integrity: String,\r\n  }\r\n});\r\n\r\ndefine({\r\n  tag: 'select',\r\n  name: 'HTMLSelectElement',\r\n  ctor: function HTMLSelectElement(doc, localName, prefix) {\r\n    HTMLFormElement.call(this, doc, localName, prefix);\r\n  },\r\n  props: {\r\n    form: formAssociatedProps.form,\r\n    options: { get: function() {\r\n      return this.getElementsByTagName('option');\r\n    }}\r\n  },\r\n  attributes: {\r\n    autocomplete: String, // It's complicated\r\n    name: String,\r\n    disabled: Boolean,\r\n    autofocus: Boolean,\r\n    multiple: Boolean,\r\n    required: Boolean,\r\n    size: {type: \"unsigned long\", default: 0}\r\n  }\r\n});\r\n\r\ndefine({\r\n  tag: 'span',\r\n  name: 'HTMLSpanElement',\r\n  ctor: function HTMLSpanElement(doc, localName, prefix) {\r\n    HTMLElement.call(this, doc, localName, prefix);\r\n  }\r\n});\r\n\r\ndefine({\r\n  tag: 'style',\r\n  name: 'HTMLStyleElement',\r\n  ctor: function HTMLStyleElement(doc, localName, prefix) {\r\n    HTMLElement.call(this, doc, localName, prefix);\r\n  },\r\n  attributes: {\r\n    media: String,\r\n    type: String,\r\n    scoped: Boolean\r\n  }\r\n});\r\n\r\ndefine({\r\n  tag: 'caption',\r\n  name: 'HTMLTableCaptionElement',\r\n  ctor: function HTMLTableCaptionElement(doc, localName, prefix) {\r\n    HTMLElement.call(this, doc, localName, prefix);\r\n  },\r\n  attributes: {\r\n    // Obsolete\r\n    align: String,\r\n  }\r\n});\r\n\r\n\r\ndefine({\r\n  name: 'HTMLTableCellElement',\r\n  ctor: function HTMLTableCellElement(doc, localName, prefix) {\r\n    HTMLElement.call(this, doc, localName, prefix);\r\n  },\r\n  attributes: {\r\n    colSpan: {type: \"unsigned long\", default: 1},\r\n    rowSpan: {type: \"unsigned long\", default: 1},\r\n    //XXX Also reflect settable token list headers\r\n    scope: { type: ['row','col','rowgroup','colgroup'], missing: '' },\r\n    abbr: String,\r\n    // Obsolete\r\n    align: String,\r\n    axis: String,\r\n    height: String,\r\n    width: String,\r\n    ch: { name: 'char', type: String },\r\n    chOff: { name: 'charoff', type: String },\r\n    noWrap: Boolean,\r\n    vAlign: String,\r\n    bgColor: { type: String, treatNullAsEmptyString: true },\r\n  }\r\n});\r\n\r\ndefine({\r\n  tags: ['col', 'colgroup'],\r\n  name: 'HTMLTableColElement',\r\n  ctor: function HTMLTableColElement(doc, localName, prefix) {\r\n    HTMLElement.call(this, doc, localName, prefix);\r\n  },\r\n  attributes: {\r\n    span: {type: 'limited unsigned long with fallback', default: 1, min: 1},\r\n    // Obsolete\r\n    align: String,\r\n    ch: { name: 'char', type: String },\r\n    chOff: { name: 'charoff', type: String },\r\n    vAlign: String,\r\n    width: String,\r\n  }\r\n});\r\n\r\ndefine({\r\n  tag: 'table',\r\n  name: 'HTMLTableElement',\r\n  ctor: function HTMLTableElement(doc, localName, prefix) {\r\n    HTMLElement.call(this, doc, localName, prefix);\r\n  },\r\n  props: {\r\n    rows: { get: function() {\r\n      return this.getElementsByTagName('tr');\r\n    }}\r\n  },\r\n  attributes: {\r\n    // Obsolete\r\n    align: String,\r\n    border: String,\r\n    frame: String,\r\n    rules: String,\r\n    summary: String,\r\n    width: String,\r\n    bgColor: { type: String, treatNullAsEmptyString: true },\r\n    cellPadding: { type: String, treatNullAsEmptyString: true },\r\n    cellSpacing: { type: String, treatNullAsEmptyString: true },\r\n  }\r\n});\r\n\r\ndefine({\r\n  tag: 'template',\r\n  name: 'HTMLTemplateElement',\r\n  ctor: function HTMLTemplateElement(doc, localName, prefix) {\r\n    HTMLElement.call(this, doc, localName, prefix);\r\n    this._contentFragment = doc._templateDoc.createDocumentFragment();\r\n  },\r\n  props: {\r\n    content: { get: function() { return this._contentFragment; } },\r\n    serialize: { value: function() { return this.content.serialize(); } }\r\n  }\r\n});\r\n\r\ndefine({\r\n  tag: 'tr',\r\n  name: 'HTMLTableRowElement',\r\n  ctor: function HTMLTableRowElement(doc, localName, prefix) {\r\n    HTMLElement.call(this, doc, localName, prefix);\r\n  },\r\n  props: {\r\n    cells: { get: function() {\r\n      return this.querySelectorAll('td,th');\r\n    }}\r\n  },\r\n  attributes: {\r\n    // Obsolete\r\n    align: String,\r\n    ch: { name: 'char', type: String },\r\n    chOff: { name: 'charoff', type: String },\r\n    vAlign: String,\r\n    bgColor: { type: String, treatNullAsEmptyString: true },\r\n  },\r\n});\r\n\r\ndefine({\r\n  tags: ['thead', 'tfoot', 'tbody'],\r\n  name: 'HTMLTableSectionElement',\r\n  ctor: function HTMLTableSectionElement(doc, localName, prefix) {\r\n    HTMLElement.call(this, doc, localName, prefix);\r\n  },\r\n  props: {\r\n    rows: { get: function() {\r\n      return this.getElementsByTagName('tr');\r\n    }}\r\n  },\r\n  attributes: {\r\n    // Obsolete\r\n    align: String,\r\n    ch: { name: 'char', type: String },\r\n    chOff: { name: 'charoff', type: String },\r\n    vAlign: String,\r\n  }\r\n});\r\n\r\ndefine({\r\n  tag: 'textarea',\r\n  name: 'HTMLTextAreaElement',\r\n  ctor: function HTMLTextAreaElement(doc, localName, prefix) {\r\n    HTMLFormElement.call(this, doc, localName, prefix);\r\n  },\r\n  props: {\r\n    form: formAssociatedProps.form,\r\n    type: { get: function() { return 'textarea'; } },\r\n    defaultValue: {\r\n      get: function() { return this.textContent; },\r\n      set: function(v) { this.textContent = v; },\r\n    },\r\n    value: {\r\n      get: function() { return this.defaultValue; /* never dirty */ },\r\n      set: function(v) {\r\n        // This isn't completely correct: according to the spec, this\r\n        // should \"dirty\" the API value, and result in\r\n        // `this.value !== this.defaultValue`.  But for most of what\r\n        // folks want to do, this implementation should be fine:\r\n        this.defaultValue = v;\r\n      },\r\n    },\r\n    textLength: { get: function() { return this.value.length; } },\r\n  },\r\n  attributes: {\r\n    autocomplete: String, // It's complicated\r\n    name: String,\r\n    disabled: Boolean,\r\n    autofocus: Boolean,\r\n    placeholder: String,\r\n    wrap: String,\r\n    dirName: String,\r\n    required: Boolean,\r\n    readOnly: Boolean,\r\n    rows: {type: 'limited unsigned long with fallback', default: 2 },\r\n    cols: {type: 'limited unsigned long with fallback', default: 20 },\r\n    maxLength: {type: 'unsigned long', min: 0, setmin: 0, default: -1},\r\n    minLength: {type: 'unsigned long', min: 0, setmin: 0, default: -1},\r\n    inputMode: { type: [ \"verbatim\", \"latin\", \"latin-name\", \"latin-prose\", \"full-width-latin\", \"kana\", \"kana-name\", \"katakana\", \"numeric\", \"tel\", \"email\", \"url\" ], missing: '' },\r\n  }\r\n});\r\n\r\ndefine({\r\n  tag: 'time',\r\n  name: 'HTMLTimeElement',\r\n  ctor: function HTMLTimeElement(doc, localName, prefix) {\r\n    HTMLElement.call(this, doc, localName, prefix);\r\n  },\r\n  attributes: {\r\n    dateTime: String,\r\n    pubDate: Boolean\r\n  }\r\n});\r\n\r\ndefine({\r\n  tag: 'title',\r\n  name: 'HTMLTitleElement',\r\n  ctor: function HTMLTitleElement(doc, localName, prefix) {\r\n    HTMLElement.call(this, doc, localName, prefix);\r\n  },\r\n  props: {\r\n    text: { get: function() {\r\n      return this.textContent;\r\n    }}\r\n  }\r\n});\r\n\r\ndefine({\r\n  tag: 'ul',\r\n  name: 'HTMLUListElement',\r\n  ctor: function HTMLUListElement(doc, localName, prefix) {\r\n    HTMLElement.call(this, doc, localName, prefix);\r\n  },\r\n  attributes: {\r\n    type: String,\r\n    // Obsolete\r\n    compact: Boolean,\r\n  }\r\n});\r\n\r\ndefine({\r\n  name: 'HTMLMediaElement',\r\n  ctor: function HTMLMediaElement(doc, localName, prefix) {\r\n    HTMLElement.call(this, doc, localName, prefix);\r\n  },\r\n  attributes: {\r\n    src: URL,\r\n    crossOrigin: CORS,\r\n    preload: { type:[\"metadata\", \"none\", \"auto\", {value: \"\", alias: \"auto\"}], missing: 'auto' },\r\n    loop: Boolean,\r\n    autoplay: Boolean,\r\n    mediaGroup: String,\r\n    controls: Boolean,\r\n    defaultMuted: {name: \"muted\", type: Boolean}\r\n  }\r\n});\r\n\r\ndefine({\r\n  name: 'HTMLAudioElement',\r\n  tag: 'audio',\r\n  superclass: htmlElements.HTMLMediaElement,\r\n  ctor: function HTMLAudioElement(doc, localName, prefix) {\r\n    htmlElements.HTMLMediaElement.call(this, doc, localName, prefix);\r\n  }\r\n});\r\n\r\ndefine({\r\n  name: 'HTMLVideoElement',\r\n  tag: 'video',\r\n  superclass: htmlElements.HTMLMediaElement,\r\n  ctor: function HTMLVideoElement(doc, localName, prefix) {\r\n    htmlElements.HTMLMediaElement.call(this, doc, localName, prefix);\r\n  },\r\n  attributes: {\r\n    poster: URL,\r\n    width: {type: \"unsigned long\", min: 0, default: 0 },\r\n    height: {type: \"unsigned long\", min: 0, default: 0 }\r\n  }\r\n});\r\n\r\ndefine({\r\n  tag: 'td',\r\n  name: 'HTMLTableDataCellElement',\r\n  superclass: htmlElements.HTMLTableCellElement,\r\n  ctor: function HTMLTableDataCellElement(doc, localName, prefix) {\r\n    htmlElements.HTMLTableCellElement.call(this, doc, localName, prefix);\r\n  }\r\n});\r\n\r\ndefine({\r\n  tag: 'th',\r\n  name: 'HTMLTableHeaderCellElement',\r\n  superclass: htmlElements.HTMLTableCellElement,\r\n  ctor: function HTMLTableHeaderCellElement(doc, localName, prefix) {\r\n    htmlElements.HTMLTableCellElement.call(this, doc, localName, prefix);\r\n  },\r\n});\r\n\r\ndefine({\r\n  tag: 'frameset',\r\n  name: 'HTMLFrameSetElement',\r\n  ctor: function HTMLFrameSetElement(doc, localName, prefix) {\r\n    HTMLElement.call(this, doc, localName, prefix);\r\n  }\r\n});\r\n\r\ndefine({\r\n  tag: 'frame',\r\n  name: 'HTMLFrameElement',\r\n  ctor: function HTMLFrameElement(doc, localName, prefix) {\r\n    HTMLElement.call(this, doc, localName, prefix);\r\n  }\r\n});\r\n\r\ndefine({\r\n  tag: 'canvas',\r\n  name: 'HTMLCanvasElement',\r\n  ctor: function HTMLCanvasElement(doc, localName, prefix) {\r\n    HTMLElement.call(this, doc, localName, prefix);\r\n  },\r\n  props: {\r\n    getContext: { value: utils.nyi },\r\n    probablySupportsContext: { value: utils.nyi },\r\n    setContext: { value: utils.nyi },\r\n    transferControlToProxy: { value: utils.nyi },\r\n    toDataURL: { value: utils.nyi },\r\n    toBlob: { value: utils.nyi }\r\n  },\r\n  attributes: {\r\n    width: { type: \"unsigned long\", default: 300},\r\n    height: { type: \"unsigned long\", default: 150}\r\n  }\r\n});\r\n\r\ndefine({\r\n  tag: 'dialog',\r\n  name: 'HTMLDialogElement',\r\n  ctor: function HTMLDialogElement(doc, localName, prefix) {\r\n    HTMLElement.call(this, doc, localName, prefix);\r\n  },\r\n  props: {\r\n    show: { value: utils.nyi },\r\n    showModal: { value: utils.nyi },\r\n    close: { value: utils.nyi }\r\n  },\r\n  attributes: {\r\n    open: Boolean,\r\n    returnValue: String\r\n  }\r\n});\r\n\r\ndefine({\r\n  tag: 'menuitem',\r\n  name: 'HTMLMenuItemElement',\r\n  ctor: function HTMLMenuItemElement(doc, localName, prefix) {\r\n    HTMLElement.call(this, doc, localName, prefix);\r\n  },\r\n  props: {\r\n    // The menuitem's label\r\n    _label: {\r\n      get: function() {\r\n        var val = this._getattr('label');\r\n        if (val !== null && val !== '') { return val; }\r\n        val = this.textContent;\r\n        // Strip and collapse whitespace\r\n        return val.replace(/[ \\t\\n\\f\\r]+/g, ' ').trim();\r\n      }\r\n    },\r\n    // The menuitem label IDL attribute\r\n    label: {\r\n      get: function() {\r\n        var val = this._getattr('label');\r\n        if (val !== null) { return val; }\r\n        return this._label;\r\n      },\r\n      set: function(v) {\r\n        this._setattr('label', v);\r\n      },\r\n    }\r\n  },\r\n  attributes: {\r\n    type: { type: [\"command\",\"checkbox\",\"radio\"], missing: 'command' },\r\n    icon: URL,\r\n    disabled: Boolean,\r\n    checked: Boolean,\r\n    radiogroup: String,\r\n    default: Boolean\r\n  }\r\n});\r\n\r\ndefine({\r\n  tag: 'source',\r\n  name: 'HTMLSourceElement',\r\n  ctor: function HTMLSourceElement(doc, localName, prefix) {\r\n    HTMLElement.call(this, doc, localName, prefix);\r\n  },\r\n  attributes: {\r\n    srcset: String,\r\n    sizes: String,\r\n    media: String,\r\n    src: URL,\r\n    type: String,\r\n    width: String,\r\n    height: String,\r\n  }\r\n});\r\n\r\ndefine({\r\n  tag: 'track',\r\n  name: 'HTMLTrackElement',\r\n  ctor: function HTMLTrackElement(doc, localName, prefix) {\r\n    HTMLElement.call(this, doc, localName, prefix);\r\n  },\r\n  attributes: {\r\n    src: URL,\r\n    srclang: String,\r\n    label: String,\r\n    default: Boolean,\r\n    kind: { type: [\"subtitles\", \"captions\", \"descriptions\", \"chapters\", \"metadata\"], missing: 'subtitles', invalid: 'metadata' },\r\n  },\r\n  props: {\r\n    NONE: { get: function() { return 0; } },\r\n    LOADING: { get: function() { return 1; } },\r\n    LOADED: { get: function() { return 2; } },\r\n    ERROR: { get: function() { return 3; } },\r\n    readyState: { get: utils.nyi },\r\n    track: { get: utils.nyi }\r\n  }\r\n});\r\n\r\ndefine({\r\n  // obsolete\r\n  tag: 'font',\r\n  name: 'HTMLFontElement',\r\n  ctor: function HTMLFontElement(doc, localName, prefix) {\r\n    HTMLElement.call(this, doc, localName, prefix);\r\n  },\r\n  attributes: {\r\n    color: { type: String, treatNullAsEmptyString: true },\r\n    face: { type: String },\r\n    size: { type: String },\r\n  },\r\n});\r\n\r\ndefine({\r\n  // obsolete\r\n  tag: 'dir',\r\n  name: 'HTMLDirectoryElement',\r\n  ctor: function HTMLDirectoryElement(doc, localName, prefix) {\r\n    HTMLElement.call(this, doc, localName, prefix);\r\n  },\r\n  attributes: {\r\n    compact: Boolean,\r\n  },\r\n});\r\n\r\ndefine({\r\n  tags: [\r\n    \"abbr\", \"address\", \"article\", \"aside\", \"b\", \"bdi\", \"bdo\", \"cite\", \"content\", \"code\",\r\n    \"dd\", \"dfn\", \"dt\", \"em\", \"figcaption\", \"figure\", \"footer\", \"header\", \"hgroup\", \"i\", \"kbd\",\r\n    \"main\", \"mark\", \"nav\", \"noscript\", \"rb\", \"rp\", \"rt\", \"rtc\",\r\n    \"ruby\", \"s\", \"samp\", \"section\", \"small\", \"strong\", \"sub\", \"summary\", \"sup\", \"u\", \"var\", \"wbr\",\r\n    // Legacy elements\r\n    \"acronym\", \"basefont\", \"big\", \"center\", \"nobr\", \"noembed\", \"noframes\",\r\n    \"plaintext\", \"strike\", \"tt\"\r\n  ]\r\n});\r\n", "\"use strict\";\r\nvar Element = require('./Element');\r\nvar defineElement = require('./defineElement');\r\nvar utils = require('./utils');\r\nvar CSSStyleDeclaration = require('./CSSStyleDeclaration');\r\n\r\nvar svgElements = exports.elements = {};\r\nvar svgNameToImpl = Object.create(null);\r\n\r\nexports.createElement = function(doc, localName, prefix) {\r\n  var impl = svgNameToImpl[localName] || SVGElement;\r\n  return new impl(doc, localName, prefix);\r\n};\r\n\r\nfunction define(spec) {\r\n  return defineElement(spec, SVGElement, svgElements, svgNameToImpl);\r\n}\r\n\r\nvar SVGElement = define({\r\n  superclass: Element,\r\n  name: 'SVGElement',\r\n  ctor: function SVGElement(doc, localName, prefix) {\r\n    Element.call(this, doc, localName, utils.NAMESPACE.SVG, prefix);\r\n  },\r\n  props: {\r\n    style: { get: function() {\r\n      if (!this._style)\r\n        this._style = new CSSStyleDeclaration(this);\r\n      return this._style;\r\n    }}\r\n  }\r\n});\r\n\r\ndefine({\r\n  name: 'SVGSVGElement',\r\n  ctor: function SVGSVGElement(doc, localName, prefix) {\r\n    SVGElement.call(this, doc, localName, prefix);\r\n  },\r\n  tag: 'svg',\r\n  props: {\r\n    createSVGRect: { value: function () {\r\n      return exports.createElement(this.ownerDocument, 'rect', null);\r\n    } }\r\n  }\r\n});\r\n\r\ndefine({\r\n  tags: [\r\n    'a', 'altGlyph', 'altGlyphDef', 'altGlyphItem', 'animate', 'animateColor', 'animateMotion', 'animateTransform',\r\n    'circle', 'clipPath', 'color-profile', 'cursor', 'defs', 'desc', 'ellipse', 'feBlend', 'feColorMatrix',\r\n    'feComponentTransfer', 'feComposite', 'feConvolveMatrix', 'feDiffuseLighting', 'feDisplacementMap', 'feDistantLight',\r\n    'feFlood', 'feFuncA', 'feFuncB', 'feFuncG', 'feFuncR', 'feGaussianBlur', 'feImage', 'feMerge', 'feMergeNode',\r\n    'feMorphology', 'feOffset', 'fePointLight', 'feSpecularLighting', 'feSpotLight', 'feTile', 'feTurbulence', 'filter',\r\n    'font', 'font-face', 'font-face-format', 'font-face-name', 'font-face-src', 'font-face-uri', 'foreignObject', 'g',\r\n    'glyph', 'glyphRef', 'hkern', 'image', 'line', 'linearGradient', 'marker', 'mask', 'metadata', 'missing-glyph',\r\n    'mpath', 'path', 'pattern', 'polygon', 'polyline', 'radialGradient', 'rect', 'script', 'set', 'stop',  'style',\r\n    'switch', 'symbol', 'text', 'textPath', 'title', 'tref', 'tspan', 'use', 'view', 'vkern'\r\n  ]\r\n});\r\n", "\"use strict\";\r\nmodule.exports = {\r\n  VALUE: 1, // The value of a Text, Comment or PI node changed\r\n  ATTR: 2, // A new attribute was added or an attribute value and/or prefix changed\r\n  REMOVE_ATTR: 3, // An attribute was removed\r\n  REMOVE: 4, // A node was removed\r\n  MOVE: 5, // A node was moved\r\n  INSERT: 6 // A node (or a subtree of nodes) was inserted\r\n};", "\"use strict\";\r\nmodule.exports = Document;\r\n\r\nvar Node = require('./Node');\r\nvar NodeList = require('./NodeList');\r\nvar ContainerNode = require('./ContainerNode');\r\nvar Element = require('./Element');\r\nvar Text = require('./Text');\r\nvar Comment = require('./Comment');\r\nvar Event = require('./Event');\r\nvar DocumentFragment = require('./DocumentFragment');\r\nvar ProcessingInstruction = require('./ProcessingInstruction');\r\nvar DOMImplementation = require('./DOMImplementation');\r\nvar TreeWalker = require('./TreeWalker');\r\nvar NodeIterator = require('./NodeIterator');\r\nvar NodeFilter = require('./NodeFilter');\r\nvar URL = require('./URL');\r\nvar select = require('./select');\r\nvar events = require('./events');\r\nvar xml = require('./xmlnames');\r\nvar html = require('./htmlelts');\r\nvar svg = require('./svg');\r\nvar utils = require('./utils');\r\nvar MUTATE = require('./MutationConstants');\r\nvar NAMESPACE = utils.NAMESPACE;\r\nvar isApiWritable = require(\"./config\").isApiWritable;\r\n\r\nfunction Document(isHTML, address) {\r\n  ContainerNode.call(this);\r\n  this.nodeType = Node.DOCUMENT_NODE;\r\n  this.isHTML = isHTML;\r\n  this._address = address || 'about:blank';\r\n  this.readyState = 'loading';\r\n  this.implementation = new DOMImplementation(this);\r\n\r\n  // DOMCore says that documents are always associated with themselves\r\n  this.ownerDocument = null; // ... but W3C tests expect null\r\n  this._contentType = isHTML ? 'text/html' : 'application/xml';\r\n\r\n  // These will be initialized by our custom versions of\r\n  // appendChild and insertBefore that override the inherited\r\n  // Node methods.\r\n  // XXX: override those methods!\r\n  this.doctype = null;\r\n  this.documentElement = null;\r\n\r\n  // \"Associated inert template document\"\r\n  this._templateDocCache = null;\r\n  // List of active NodeIterators, see NodeIterator#_preremove()\r\n  this._nodeIterators = null;\r\n\r\n  // Documents are always rooted, by definition\r\n  this._nid = 1;\r\n  this._nextnid = 2; // For numbering children of the document\r\n  this._nodes = [null, this];  // nid to node map\r\n\r\n  // This maintains the mapping from element ids to element nodes.\r\n  // We may need to update this mapping every time a node is rooted\r\n  // or uprooted, and any time an attribute is added, removed or changed\r\n  // on a rooted element.\r\n  this.byId = Object.create(null);\r\n\r\n  // This property holds a monotonically increasing value akin to\r\n  // a timestamp used to record the last modification time of nodes\r\n  // and their subtrees. See the lastModTime attribute and modify()\r\n  // method of the Node class. And see FilteredElementList for an example\r\n  // of the use of lastModTime\r\n  this.modclock = 0;\r\n}\r\n\r\n// Map from lowercase event category names (used as arguments to\r\n// createEvent()) to the property name in the impl object of the\r\n// event constructor.\r\nvar supportedEvents = {\r\n  event: 'Event',\r\n  customevent: 'CustomEvent',\r\n  uievent: 'UIEvent',\r\n  mouseevent: 'MouseEvent'\r\n};\r\n\r\n// Certain arguments to document.createEvent() must be treated specially\r\nvar replacementEvent = {\r\n  events: 'event',\r\n  htmlevents: 'event',\r\n  mouseevents: 'mouseevent',\r\n  mutationevents: 'mutationevent',\r\n  uievents: 'uievent'\r\n};\r\n\r\nvar mirrorAttr = function(f, name, defaultValue) {\r\n  return {\r\n    get: function() {\r\n      var o = f.call(this);\r\n      if (o) { return o[name]; }\r\n      return defaultValue;\r\n    },\r\n    set: function(value) {\r\n      var o = f.call(this);\r\n      if (o) { o[name] = value; }\r\n    },\r\n  };\r\n};\r\n\r\n/** @spec https://dom.spec.whatwg.org/#validate-and-extract */\r\nfunction validateAndExtract(namespace, qualifiedName) {\r\n  var prefix, localName, pos;\r\n  if (namespace==='') { namespace = null; }\r\n  // See https://github.com/whatwg/dom/issues/671\r\n  // and https://github.com/whatwg/dom/issues/319\r\n  if (!xml.isValidQName(qualifiedName)) {\r\n    utils.InvalidCharacterError();\r\n  }\r\n  prefix = null;\r\n  localName = qualifiedName;\r\n\r\n  pos = qualifiedName.indexOf(':');\r\n  if (pos >= 0) {\r\n    prefix = qualifiedName.substring(0, pos);\r\n    localName = qualifiedName.substring(pos+1);\r\n  }\r\n  if (prefix !== null && namespace === null) {\r\n    utils.NamespaceError();\r\n  }\r\n  if (prefix === 'xml' && namespace !== NAMESPACE.XML) {\r\n    utils.NamespaceError();\r\n  }\r\n  if ((prefix === 'xmlns' || qualifiedName === 'xmlns') &&\r\n      namespace !== NAMESPACE.XMLNS) {\r\n    utils.NamespaceError();\r\n  }\r\n  if (namespace === NAMESPACE.XMLNS && !(prefix==='xmlns' || qualifiedName==='xmlns')) {\r\n    utils.NamespaceError();\r\n  }\r\n  return { namespace: namespace, prefix: prefix, localName: localName };\r\n}\r\n\r\nDocument.prototype = Object.create(ContainerNode.prototype, {\r\n  // This method allows dom.js to communicate with a renderer\r\n  // that displays the document in some way\r\n  // XXX: I should probably move this to the window object\r\n  _setMutationHandler: { value: function(handler) {\r\n    this.mutationHandler = handler;\r\n  }},\r\n\r\n  // This method allows dom.js to receive event notifications\r\n  // from the renderer.\r\n  // XXX: I should probably move this to the window object\r\n  _dispatchRendererEvent: { value: function(targetNid, type, details) {\r\n    var target = this._nodes[targetNid];\r\n    if (!target) return;\r\n    target._dispatchEvent(new Event(type, details), true);\r\n  }},\r\n\r\n  nodeName: { value: '#document'},\r\n  nodeValue: {\r\n    get: function() {\r\n      return null;\r\n    },\r\n    set: function() {}\r\n  },\r\n\r\n  // XXX: DOMCore may remove documentURI, so it is NYI for now\r\n  documentURI: { get: function() { return this._address; }, set: utils.nyi },\r\n  compatMode: { get: function() {\r\n    // The _quirks property is set by the HTML parser\r\n    return this._quirks ? 'BackCompat' : 'CSS1Compat';\r\n  }},\r\n\r\n  createTextNode: { value: function(data) {\r\n    return new Text(this, String(data));\r\n  }},\r\n  createComment: { value: function(data) {\r\n    return new Comment(this, data);\r\n  }},\r\n  createDocumentFragment: { value: function() {\r\n    return new DocumentFragment(this);\r\n  }},\r\n  createProcessingInstruction: { value: function(target, data) {\r\n    if (!xml.isValidName(target) || data.indexOf('?>') !== -1)\r\n      utils.InvalidCharacterError();\r\n    return new ProcessingInstruction(this, target, data);\r\n  }},\r\n\r\n  createAttribute: { value: function(localName) {\r\n    localName = String(localName);\r\n    if (!xml.isValidName(localName)) utils.InvalidCharacterError();\r\n    if (this.isHTML) {\r\n      localName = utils.toASCIILowerCase(localName);\r\n    }\r\n    return new Element._Attr(null, localName, null, null, '');\r\n  }},\r\n  createAttributeNS: { value: function(namespace, qualifiedName) {\r\n    // Convert parameter types according to WebIDL\r\n    namespace =\r\n      (namespace === null || namespace === undefined || namespace === '') ? null :\r\n      String(namespace);\r\n    qualifiedName = String(qualifiedName);\r\n    var ve = validateAndExtract(namespace, qualifiedName);\r\n    return new Element._Attr(null, ve.localName, ve.prefix, ve.namespace, '');\r\n  }},\r\n\r\n  createElement: { value: function(localName) {\r\n    localName = String(localName);\r\n    if (!xml.isValidName(localName)) utils.InvalidCharacterError();\r\n    // Per spec, namespace should be HTML namespace if \"context object is\r\n    // an HTML document or context object's content type is\r\n    // \"application/xhtml+xml\", and null otherwise.\r\n    if (this.isHTML) {\r\n      if (/[A-Z]/.test(localName))\r\n        localName = utils.toASCIILowerCase(localName);\r\n      return html.createElement(this, localName, null);\r\n    } else if (this.contentType === 'application/xhtml+xml') {\r\n      return html.createElement(this, localName, null);\r\n    } else {\r\n      return new Element(this, localName, null, null);\r\n    }\r\n  }, writable: isApiWritable },\r\n\r\n  createElementNS: { value: function(namespace, qualifiedName) {\r\n    // Convert parameter types according to WebIDL\r\n    namespace =\r\n      (namespace === null || namespace === undefined || namespace === '') ? null :\r\n      String(namespace);\r\n    qualifiedName = String(qualifiedName);\r\n    var ve = validateAndExtract(namespace, qualifiedName);\r\n    return this._createElementNS(ve.localName, ve.namespace, ve.prefix);\r\n  }, writable: isApiWritable },\r\n\r\n  // This is used directly by HTML parser, which allows it to create\r\n  // elements with localNames containing ':' and non-default namespaces\r\n  _createElementNS: { value: function(localName, namespace, prefix) {\r\n    if (namespace === NAMESPACE.HTML) {\r\n      return html.createElement(this, localName, prefix);\r\n    }\r\n    else if (namespace === NAMESPACE.SVG) {\r\n      return svg.createElement(this, localName, prefix);\r\n    }\r\n\r\n    return new Element(this, localName, namespace, prefix);\r\n  }},\r\n\r\n  createEvent: { value: function createEvent(interfaceName) {\r\n    interfaceName = interfaceName.toLowerCase();\r\n    var name = replacementEvent[interfaceName] || interfaceName;\r\n    var constructor = events[supportedEvents[name]];\r\n\r\n    if (constructor) {\r\n      var e = new constructor();\r\n      e._initialized = false;\r\n      return e;\r\n    }\r\n    else {\r\n      utils.NotSupportedError();\r\n    }\r\n  }},\r\n\r\n  // See: http://www.w3.org/TR/dom/#dom-document-createtreewalker\r\n  createTreeWalker: {value: function (root, whatToShow, filter) {\r\n    if (!root) { throw new TypeError(\"root argument is required\"); }\r\n    if (!(root instanceof Node)) { throw new TypeError(\"root not a node\"); }\r\n    whatToShow = whatToShow === undefined ? NodeFilter.SHOW_ALL : (+whatToShow);\r\n    filter = filter === undefined ? null : filter;\r\n\r\n    return new TreeWalker(root, whatToShow, filter);\r\n  }},\r\n\r\n  // See: http://www.w3.org/TR/dom/#dom-document-createnodeiterator\r\n  createNodeIterator: {value: function (root, whatToShow, filter) {\r\n    if (!root) { throw new TypeError(\"root argument is required\"); }\r\n    if (!(root instanceof Node)) { throw new TypeError(\"root not a node\"); }\r\n    whatToShow = whatToShow === undefined ? NodeFilter.SHOW_ALL : (+whatToShow);\r\n    filter = filter === undefined ? null : filter;\r\n\r\n    return new NodeIterator(root, whatToShow, filter);\r\n  }},\r\n\r\n  _attachNodeIterator: { value: function(ni) {\r\n    // XXX ideally this should be a weak reference from Document to NodeIterator\r\n    if (!this._nodeIterators) { this._nodeIterators = []; }\r\n    this._nodeIterators.push(ni);\r\n  }},\r\n\r\n  _detachNodeIterator: { value: function(ni) {\r\n    // ni should always be in list of node iterators\r\n    var idx = this._nodeIterators.indexOf(ni);\r\n    this._nodeIterators.splice(idx, 1);\r\n  }},\r\n\r\n  _preremoveNodeIterators: { value: function(toBeRemoved) {\r\n    if (this._nodeIterators) {\r\n      this._nodeIterators.forEach(function(ni) { ni._preremove(toBeRemoved); });\r\n    }\r\n  }},\r\n\r\n  // Maintain the documentElement and\r\n  // doctype properties of the document.  Each of the following\r\n  // methods chains to the Node implementation of the method\r\n  // to do the actual inserting, removal or replacement.\r\n\r\n  _updateDocTypeElement: { value: function _updateDocTypeElement() {\r\n    this.doctype = this.documentElement = null;\r\n    for (var kid = this.firstChild; kid !== null; kid = kid.nextSibling) {\r\n      if (kid.nodeType === Node.DOCUMENT_TYPE_NODE)\r\n        this.doctype = kid;\r\n      else if (kid.nodeType === Node.ELEMENT_NODE)\r\n        this.documentElement = kid;\r\n    }\r\n  }},\r\n\r\n  insertBefore: { value: function insertBefore(child, refChild) {\r\n    Node.prototype.insertBefore.call(this, child, refChild);\r\n    this._updateDocTypeElement();\r\n    return child;\r\n  }},\r\n\r\n  replaceChild: { value: function replaceChild(node, child) {\r\n    Node.prototype.replaceChild.call(this, node, child);\r\n    this._updateDocTypeElement();\r\n    return child;\r\n  }},\r\n\r\n  removeChild: { value: function removeChild(child) {\r\n    Node.prototype.removeChild.call(this, child);\r\n    this._updateDocTypeElement();\r\n    return child;\r\n  }},\r\n\r\n  getElementById: { value: function(id) {\r\n    var n = this.byId[id];\r\n    if (!n) return null;\r\n    if (n instanceof MultiId) { // there was more than one element with this id\r\n      return n.getFirst();\r\n    }\r\n    return n;\r\n  }},\r\n\r\n  _hasMultipleElementsWithId: { value: function(id) {\r\n    // Used internally by querySelectorAll optimization\r\n    return (this.byId[id] instanceof MultiId);\r\n  }},\r\n\r\n  // Just copy this method from the Element prototype\r\n  getElementsByName: { value: Element.prototype.getElementsByName },\r\n  getElementsByTagName: { value: Element.prototype.getElementsByTagName },\r\n  getElementsByTagNameNS: { value: Element.prototype.getElementsByTagNameNS },\r\n  getElementsByClassName: { value: Element.prototype.getElementsByClassName },\r\n\r\n  adoptNode: { value: function adoptNode(node) {\r\n    if (node.nodeType === Node.DOCUMENT_NODE) utils.NotSupportedError();\r\n    if (node.nodeType === Node.ATTRIBUTE_NODE) { return node; }\r\n\r\n    if (node.parentNode) node.parentNode.removeChild(node);\r\n\r\n    if (node.ownerDocument !== this)\r\n      recursivelySetOwner(node, this);\r\n\r\n    return node;\r\n  }},\r\n\r\n  importNode: { value: function importNode(node, deep) {\r\n    return this.adoptNode(node.cloneNode(deep));\r\n  }, writable: isApiWritable },\r\n\r\n  // The following attributes and methods are from the HTML spec\r\n  origin: { get: function origin() { return null; } },\r\n  characterSet: { get: function characterSet() { return \"UTF-8\"; } },\r\n  contentType: { get: function contentType() { return this._contentType; } },\r\n  URL: { get: function URL() { return this._address; } },\r\n  domain: { get: utils.nyi, set: utils.nyi },\r\n  referrer: { get: utils.nyi },\r\n  cookie: { get: utils.nyi, set: utils.nyi },\r\n  lastModified: { get: utils.nyi },\r\n  location: {\r\n\tget: function() {\r\n\t  return this.defaultView ? this.defaultView.location : null; // gh #75\r\n\t},\r\n\tset: utils.nyi\r\n  },\r\n  _titleElement: {\r\n    get: function() {\r\n      // The title element of a document is the first title element in the\r\n      // document in tree order, if there is one, or null otherwise.\r\n      return this.getElementsByTagName('title').item(0) || null;\r\n    }\r\n  },\r\n  title: {\r\n    get: function() {\r\n      var elt = this._titleElement;\r\n      // The child text content of the title element, or '' if null.\r\n      var value = elt ? elt.textContent : '';\r\n      // Strip and collapse whitespace in value\r\n      return value.replace(/[ \\t\\n\\r\\f]+/g, ' ').replace(/(^ )|( $)/g, '');\r\n    },\r\n    set: function(value) {\r\n      var elt = this._titleElement;\r\n      var head = this.head;\r\n      if (!elt && !head) { return; /* according to spec */ }\r\n      if (!elt) {\r\n        elt = this.createElement('title');\r\n        head.appendChild(elt);\r\n      }\r\n      elt.textContent = value;\r\n    }\r\n  },\r\n  dir: mirrorAttr(function() {\r\n    var htmlElement = this.documentElement;\r\n    if (htmlElement && htmlElement.tagName === 'HTML') { return htmlElement; }\r\n  }, 'dir', ''),\r\n  fgColor: mirrorAttr(function() { return this.body; }, 'text', ''),\r\n  linkColor: mirrorAttr(function() { return this.body; }, 'link', ''),\r\n  vlinkColor: mirrorAttr(function() { return this.body; }, 'vLink', ''),\r\n  alinkColor: mirrorAttr(function() { return this.body; }, 'aLink', ''),\r\n  bgColor: mirrorAttr(function() { return this.body; }, 'bgColor', ''),\r\n\r\n  // Historical aliases of Document#characterSet\r\n  charset: { get: function() { return this.characterSet; } },\r\n  inputEncoding: { get: function() { return this.characterSet; } },\r\n\r\n  scrollingElement: {\r\n    get: function() {\r\n      return this._quirks ? this.body : this.documentElement;\r\n    }\r\n  },\r\n\r\n  // Return the first <body> child of the document element.\r\n  // XXX For now, setting this attribute is not implemented.\r\n  body: {\r\n    get: function() {\r\n      return namedHTMLChild(this.documentElement, 'body');\r\n    },\r\n    set: utils.nyi\r\n  },\r\n  // Return the first <head> child of the document element.\r\n  head: { get: function() {\r\n    return namedHTMLChild(this.documentElement, 'head');\r\n  }},\r\n  images: { get: utils.nyi },\r\n  embeds: { get: utils.nyi },\r\n  plugins: { get: utils.nyi },\r\n  links: { get: utils.nyi },\r\n  forms: { get: utils.nyi },\r\n  scripts: { get: utils.nyi },\r\n  applets: { get: function() { return []; } },\r\n  activeElement: { get: function() { return null; } },\r\n  innerHTML: {\r\n    get: function() { return this.serialize(); },\r\n    set: utils.nyi\r\n  },\r\n  outerHTML: {\r\n    get: function() { return this.serialize(); },\r\n    set: utils.nyi\r\n  },\r\n\r\n  write: { value: function(args) {\r\n    if (!this.isHTML) utils.InvalidStateError();\r\n\r\n    // XXX: still have to implement the ignore part\r\n    if (!this._parser /* && this._ignore_destructive_writes > 0 */ )\r\n      return;\r\n\r\n    if (!this._parser) {\r\n      // XXX call document.open, etc.\r\n    }\r\n\r\n    var s = arguments.join('');\r\n\r\n    // If the Document object's reload override flag is set, then\r\n    // append the string consisting of the concatenation of all the\r\n    // arguments to the method to the Document's reload override\r\n    // buffer.\r\n    // XXX: don't know what this is about.  Still have to do it\r\n\r\n    // If there is no pending parsing-blocking script, have the\r\n    // tokenizer process the characters that were inserted, one at a\r\n    // time, processing resulting tokens as they are emitted, and\r\n    // stopping when the tokenizer reaches the insertion point or when\r\n    // the processing of the tokenizer is aborted by the tree\r\n    // construction stage (this can happen if a script end tag token is\r\n    // emitted by the tokenizer).\r\n\r\n    // XXX: still have to do the above. Sounds as if we don't\r\n    // always call parse() here.  If we're blocked, then we just\r\n    // insert the text into the stream but don't parse it reentrantly...\r\n\r\n    // Invoke the parser reentrantly\r\n    this._parser.parse(s);\r\n  }},\r\n\r\n  writeln: { value: function writeln(args) {\r\n    this.write(Array.prototype.join.call(arguments, '') + '\\n');\r\n  }},\r\n\r\n  open: { value: function() {\r\n    this.documentElement = null;\r\n  }},\r\n\r\n  close: { value: function() {\r\n    this.readyState = 'interactive';\r\n    this._dispatchEvent(new Event('readystatechange'), true);\r\n    this._dispatchEvent(new Event('DOMContentLoaded'), true);\r\n    this.readyState = 'complete';\r\n    this._dispatchEvent(new Event('readystatechange'), true);\r\n    if (this.defaultView) {\r\n      this.defaultView._dispatchEvent(new Event('load'), true);\r\n    }\r\n  }},\r\n\r\n  // Utility methods\r\n  clone: { value: function clone() {\r\n    var d = new Document(this.isHTML, this._address);\r\n    d._quirks = this._quirks;\r\n    d._contentType = this._contentType;\r\n    return d;\r\n  }},\r\n\r\n  // We need to adopt the nodes if we do a deep clone\r\n  cloneNode: { value: function cloneNode(deep) {\r\n    var clone = Node.prototype.cloneNode.call(this, false);\r\n    if (deep) {\r\n      for (var kid = this.firstChild; kid !== null; kid = kid.nextSibling) {\r\n        clone._appendChild(clone.importNode(kid, true));\r\n      }\r\n    }\r\n    clone._updateDocTypeElement();\r\n    return clone;\r\n  }},\r\n\r\n  isEqual: { value: function isEqual(n) {\r\n    // Any two documents are shallowly equal.\r\n    // Node.isEqualNode will also test the children\r\n    return true;\r\n  }},\r\n\r\n  // Implementation-specific function.  Called when a text, comment,\r\n  // or pi value changes.\r\n  mutateValue: { value: function(node) {\r\n    if (this.mutationHandler) {\r\n      this.mutationHandler({\r\n        type: MUTATE.VALUE,\r\n        target: node,\r\n        data: node.data\r\n      });\r\n    }\r\n  }},\r\n\r\n  // Invoked when an attribute's value changes. Attr holds the new\r\n  // value.  oldval is the old value.  Attribute mutations can also\r\n  // involve changes to the prefix (and therefore the qualified name)\r\n  mutateAttr: { value: function(attr, oldval) {\r\n    // Manage id->element mapping for getElementsById()\r\n    // XXX: this special case id handling should not go here,\r\n    // but in the attribute declaration for the id attribute\r\n    /*\r\n    if (attr.localName === 'id' && attr.namespaceURI === null) {\r\n      if (oldval) delId(oldval, attr.ownerElement);\r\n      addId(attr.value, attr.ownerElement);\r\n    }\r\n    */\r\n    if (this.mutationHandler) {\r\n      this.mutationHandler({\r\n        type: MUTATE.ATTR,\r\n        target: attr.ownerElement,\r\n        attr: attr\r\n      });\r\n    }\r\n  }},\r\n\r\n  // Used by removeAttribute and removeAttributeNS for attributes.\r\n  mutateRemoveAttr: { value: function(attr) {\r\n/*\r\n* This is now handled in Attributes.js\r\n    // Manage id to element mapping\r\n    if (attr.localName === 'id' && attr.namespaceURI === null) {\r\n      this.delId(attr.value, attr.ownerElement);\r\n    }\r\n*/\r\n    if (this.mutationHandler) {\r\n      this.mutationHandler({\r\n        type: MUTATE.REMOVE_ATTR,\r\n        target: attr.ownerElement,\r\n        attr: attr\r\n      });\r\n    }\r\n  }},\r\n\r\n  // Called by Node.removeChild, etc. to remove a rooted element from\r\n  // the tree. Only needs to generate a single mutation event when a\r\n  // node is removed, but must recursively mark all descendants as not\r\n  // rooted.\r\n  mutateRemove: { value: function(node) {\r\n    // Send a single mutation event\r\n    if (this.mutationHandler) {\r\n      this.mutationHandler({\r\n        type: MUTATE.REMOVE,\r\n        target: node.parentNode,\r\n        node: node\r\n      });\r\n    }\r\n\r\n    // Mark this and all descendants as not rooted\r\n    recursivelyUproot(node);\r\n  }},\r\n\r\n  // Called when a new element becomes rooted.  It must recursively\r\n  // generate mutation events for each of the children, and mark them all\r\n  // as rooted.\r\n  mutateInsert: { value: function(node) {\r\n    // Mark node and its descendants as rooted\r\n    recursivelyRoot(node);\r\n\r\n    // Send a single mutation event\r\n    if (this.mutationHandler) {\r\n      this.mutationHandler({\r\n        type: MUTATE.INSERT,\r\n        target: node.parentNode,\r\n        node: node\r\n      });\r\n    }\r\n  }},\r\n\r\n  // Called when a rooted element is moved within the document\r\n  mutateMove: { value: function(node) {\r\n    if (this.mutationHandler) {\r\n      this.mutationHandler({\r\n        type: MUTATE.MOVE,\r\n        target: node\r\n      });\r\n    }\r\n  }},\r\n\r\n\r\n  // Add a mapping from  id to n for n.ownerDocument\r\n  addId: { value: function addId(id, n) {\r\n    var val = this.byId[id];\r\n    if (!val) {\r\n      this.byId[id] = n;\r\n    }\r\n    else {\r\n      // TODO: Add a way to opt-out console warnings\r\n      //console.warn('Duplicate element id ' + id);\r\n      if (!(val instanceof MultiId)) {\r\n        val = new MultiId(val);\r\n        this.byId[id] = val;\r\n      }\r\n      val.add(n);\r\n    }\r\n  }},\r\n\r\n  // Delete the mapping from id to n for n.ownerDocument\r\n  delId: { value: function delId(id, n) {\r\n    var val = this.byId[id];\r\n    utils.assert(val);\r\n\r\n    if (val instanceof MultiId) {\r\n      val.del(n);\r\n      if (val.length === 1) { // convert back to a single node\r\n        this.byId[id] = val.downgrade();\r\n      }\r\n    }\r\n    else {\r\n      this.byId[id] = undefined;\r\n    }\r\n  }},\r\n\r\n  _resolve: { value: function(href) {\r\n    //XXX: Cache the URL\r\n    return new URL(this._documentBaseURL).resolve(href);\r\n  }},\r\n\r\n  _documentBaseURL: { get: function() {\r\n    // XXX: This is not implemented correctly yet\r\n    var url = this._address;\r\n    if (url === 'about:blank') url = '/';\r\n\r\n    var base = this.querySelector('base[href]');\r\n    if (base) {\r\n      return new URL(url).resolve(base.getAttribute('href'));\r\n    }\r\n    return url;\r\n\r\n    // The document base URL of a Document object is the\r\n    // absolute URL obtained by running these substeps:\r\n\r\n    //     Let fallback base url be the document's address.\r\n\r\n    //     If fallback base url is about:blank, and the\r\n    //     Document's browsing context has a creator browsing\r\n    //     context, then let fallback base url be the document\r\n    //     base URL of the creator Document instead.\r\n\r\n    //     If the Document is an iframe srcdoc document, then\r\n    //     let fallback base url be the document base URL of\r\n    //     the Document's browsing context's browsing context\r\n    //     container's Document instead.\r\n\r\n    //     If there is no base element that has an href\r\n    //     attribute, then the document base URL is fallback\r\n    //     base url; abort these steps. Otherwise, let url be\r\n    //     the value of the href attribute of the first such\r\n    //     element.\r\n\r\n    //     Resolve url relative to fallback base url (thus,\r\n    //     the base href attribute isn't affected by xml:base\r\n    //     attributes).\r\n\r\n    //     The document base URL is the result of the previous\r\n    //     step if it was successful; otherwise it is fallback\r\n    //     base url.\r\n  }},\r\n\r\n  _templateDoc: { get: function() {\r\n    if (!this._templateDocCache) {\r\n      // \"associated inert template document\"\r\n      var newDoc = new Document(this.isHTML, this._address);\r\n      this._templateDocCache = newDoc._templateDocCache = newDoc;\r\n    }\r\n    return this._templateDocCache;\r\n  }},\r\n\r\n  querySelector: { value: function(selector) {\r\n    return select(selector, this)[0];\r\n  }},\r\n\r\n  querySelectorAll: { value: function(selector) {\r\n    var nodes = select(selector, this);\r\n    return nodes.item ? nodes : new NodeList(nodes);\r\n  }}\r\n\r\n});\r\n\r\n\r\nvar eventHandlerTypes = [\r\n  'abort', 'canplay', 'canplaythrough', 'change', 'click', 'contextmenu',\r\n  'cuechange', 'dblclick', 'drag', 'dragend', 'dragenter', 'dragleave',\r\n  'dragover', 'dragstart', 'drop', 'durationchange', 'emptied', 'ended',\r\n  'input', 'invalid', 'keydown', 'keypress', 'keyup', 'loadeddata',\r\n  'loadedmetadata', 'loadstart', 'mousedown', 'mousemove', 'mouseout',\r\n  'mouseover', 'mouseup', 'mousewheel', 'pause', 'play', 'playing',\r\n  'progress', 'ratechange', 'readystatechange', 'reset', 'seeked',\r\n  'seeking', 'select', 'show', 'stalled', 'submit', 'suspend',\r\n  'timeupdate', 'volumechange', 'waiting',\r\n\r\n  'blur', 'error', 'focus', 'load', 'scroll'\r\n];\r\n\r\n// Add event handler idl attribute getters and setters to Document\r\neventHandlerTypes.forEach(function(type) {\r\n  // Define the event handler registration IDL attribute for this type\r\n  Object.defineProperty(Document.prototype, 'on' + type, {\r\n    get: function() {\r\n      return this._getEventHandler(type);\r\n    },\r\n    set: function(v) {\r\n      this._setEventHandler(type, v);\r\n    }\r\n  });\r\n});\r\n\r\nfunction namedHTMLChild(parent, name) {\r\n  if (parent && parent.isHTML) {\r\n    for (var kid = parent.firstChild; kid !== null; kid = kid.nextSibling) {\r\n      if (kid.nodeType === Node.ELEMENT_NODE &&\r\n        kid.localName === name &&\r\n        kid.namespaceURI === NAMESPACE.HTML) {\r\n        return kid;\r\n      }\r\n    }\r\n  }\r\n  return null;\r\n}\r\n\r\nfunction root(n) {\r\n  n._nid = n.ownerDocument._nextnid++;\r\n  n.ownerDocument._nodes[n._nid] = n;\r\n  // Manage id to element mapping\r\n  if (n.nodeType === Node.ELEMENT_NODE) {\r\n    var id = n.getAttribute('id');\r\n    if (id) n.ownerDocument.addId(id, n);\r\n\r\n    // Script elements need to know when they're inserted\r\n    // into the document\r\n    if (n._roothook) n._roothook();\r\n  }\r\n}\r\n\r\nfunction uproot(n) {\r\n  // Manage id to element mapping\r\n  if (n.nodeType === Node.ELEMENT_NODE) {\r\n    var id = n.getAttribute('id');\r\n    if (id) n.ownerDocument.delId(id, n);\r\n  }\r\n  n.ownerDocument._nodes[n._nid] = undefined;\r\n  n._nid = undefined;\r\n}\r\n\r\nfunction recursivelyRoot(node) {\r\n  root(node);\r\n  // XXX:\r\n  // accessing childNodes on a leaf node creates a new array the\r\n  // first time, so be careful to write this loop so that it\r\n  // doesn't do that. node is polymorphic, so maybe this is hard to\r\n  // optimize?  Try switching on nodeType?\r\n/*\r\n  if (node.hasChildNodes()) {\r\n    var kids = node.childNodes;\r\n    for(var i = 0, n = kids.length;  i < n; i++)\r\n      recursivelyRoot(kids[i]);\r\n  }\r\n*/\r\n  if (node.nodeType === Node.ELEMENT_NODE) {\r\n    for (var kid = node.firstChild; kid !== null; kid = kid.nextSibling)\r\n      recursivelyRoot(kid);\r\n  }\r\n}\r\n\r\nfunction recursivelyUproot(node) {\r\n  uproot(node);\r\n  for (var kid = node.firstChild; kid !== null; kid = kid.nextSibling)\r\n      recursivelyUproot(kid);\r\n}\r\n\r\nfunction recursivelySetOwner(node, owner) {\r\n  node.ownerDocument = owner;\r\n  node._lastModTime = undefined; // mod times are document-based\r\n  if (Object.prototype.hasOwnProperty.call(node, '_tagName')) {\r\n    node._tagName = undefined; // Element subclasses might need to change case\r\n  }\r\n  for (var kid = node.firstChild; kid !== null; kid = kid.nextSibling)\r\n    recursivelySetOwner(kid, owner);\r\n}\r\n\r\n// A class for storing multiple nodes with the same ID\r\nfunction MultiId(node) {\r\n  this.nodes = Object.create(null);\r\n  this.nodes[node._nid] = node;\r\n  this.length = 1;\r\n  this.firstNode = undefined;\r\n}\r\n\r\n// Add a node to the list, with O(1) time\r\nMultiId.prototype.add = function(node) {\r\n  if (!this.nodes[node._nid]) {\r\n    this.nodes[node._nid] = node;\r\n    this.length++;\r\n    this.firstNode = undefined;\r\n  }\r\n};\r\n\r\n// Remove a node from the list, with O(1) time\r\nMultiId.prototype.del = function(node) {\r\n  if (this.nodes[node._nid]) {\r\n    delete this.nodes[node._nid];\r\n    this.length--;\r\n    this.firstNode = undefined;\r\n  }\r\n};\r\n\r\n// Get the first node from the list, in the document order\r\n// Takes O(N) time in the size of the list, with a cache that is invalidated\r\n// when the list is modified.\r\nMultiId.prototype.getFirst = function() {\r\n  /* jshint bitwise: false */\r\n  if (!this.firstNode) {\r\n    var nid;\r\n    for (nid in this.nodes) {\r\n      if (this.firstNode === undefined ||\r\n        this.firstNode.compareDocumentPosition(this.nodes[nid]) & Node.DOCUMENT_POSITION_PRECEDING) {\r\n        this.firstNode = this.nodes[nid];\r\n      }\r\n    }\r\n  }\r\n  return this.firstNode;\r\n};\r\n\r\n// If there is only one node left, return it. Otherwise return \"this\".\r\nMultiId.prototype.downgrade = function() {\r\n  if (this.length === 1) {\r\n    var nid;\r\n    for (nid in this.nodes) {\r\n      return this.nodes[nid];\r\n    }\r\n  }\r\n  return this;\r\n};\r\n", "\"use strict\";\r\nmodule.exports = DocumentType;\r\n\r\nvar Node = require('./Node');\r\nvar Leaf = require('./Leaf');\r\nvar ChildNode = require('./ChildNode');\r\n\r\nfunction DocumentType(ownerDocument, name, publicId, systemId) {\r\n  Leaf.call(this);\r\n  this.nodeType = Node.DOCUMENT_TYPE_NODE;\r\n  this.ownerDocument = ownerDocument || null;\r\n  this.name = name;\r\n  this.publicId = publicId || \"\";\r\n  this.systemId = systemId || \"\";\r\n}\r\n\r\nDocumentType.prototype = Object.create(Leaf.prototype, {\r\n  nodeName: { get: function() { return this.name; }},\r\n  nodeValue: {\r\n    get: function() { return null; },\r\n    set: function() {}\r\n  },\r\n\r\n  // Utility methods\r\n  clone: { value: function clone() {\r\n    return new DocumentType(this.ownerDocument, this.name, this.publicId, this.systemId);\r\n  }},\r\n\r\n  isEqual: { value: function isEqual(n) {\r\n    return this.name === n.name &&\r\n      this.publicId === n.publicId &&\r\n      this.systemId === n.systemId;\r\n  }}\r\n});\r\n\r\nObject.defineProperties(DocumentType.prototype, ChildNode);\r\n", "\"use strict\";\r\nmodule.exports = HTMLParser;\r\n\r\nvar Document = require('./Document');\r\nvar DocumentType = require('./DocumentType');\r\nvar Node = require('./Node');\r\nvar NAMESPACE = require('./utils').NAMESPACE;\r\nvar html = require('./htmlelts');\r\nvar impl = html.elements;\r\n\r\nvar pushAll = Function.prototype.apply.bind(Array.prototype.push);\r\n\r\n/*\r\n * This file contains an implementation of the HTML parsing algorithm.\r\n * The algorithm and the implementation are complex because HTML\r\n * explicitly defines how the parser should behave for all possible\r\n * valid and invalid inputs.\r\n *\r\n * Usage:\r\n *\r\n * The file defines a single HTMLParser() function, which dom.js exposes\r\n * publicly as document.implementation.mozHTMLParser(). This is a\r\n * factory function, not a constructor.\r\n *\r\n * When you call document.implementation.mozHTMLParser(), it returns\r\n * an object that has parse() and document() methods. To parse HTML text,\r\n * pass the text (in one or more chunks) to the parse() method.  When\r\n * you've passed all the text (on the last chunk, or afterward) pass\r\n * true as the second argument to parse() to tell the parser that there\r\n * is no more coming. Call document() to get the document object that\r\n * the parser is parsing into.  You can call this at any time, before\r\n * or after calling parse().\r\n *\r\n * The first argument to mozHTMLParser is the absolute URL of the document.\r\n *\r\n * The second argument is optional and is for internal use only.  Pass an\r\n * element as the fragmentContext to do innerHTML parsing for the\r\n * element.  To do innerHTML parsing on a document, pass null. Otherwise,\r\n * omit the 2nd argument. See HTMLElement.innerHTML for an example.  Note\r\n * that if you pass a context element, the end() method will return an\r\n * unwrapped document instead of a wrapped one.\r\n *\r\n * Implementation details:\r\n *\r\n * This is a long file of almost 7000 lines. It is structured as one\r\n * big function nested within another big function.  The outer\r\n * function defines a bunch of constant data, utility functions\r\n * that use that data, and a couple of classes used by the parser.\r\n * The outer function also defines and returns the\r\n * inner function. This inner function is the HTMLParser factory\r\n * function that implements the parser and holds all the parser state\r\n * as local variables.  The HTMLParser function is quite big because\r\n * it defines many nested functions that use those local variables.\r\n *\r\n * There are three tightly coupled parser stages: a scanner, a\r\n * tokenizer and a tree builder. In a (possibly misguided) attempt at\r\n * efficiency, the stages are not implemented as separate classes:\r\n * everything shares state and is (mostly) implemented in imperative\r\n * (rather than OO) style.\r\n *\r\n * The stages of the parser work like this: When the client code calls\r\n * the parser's parse() method, the specified string is passed to\r\n * scanChars(). The scanner loops through that string and passes characters\r\n * (sometimes one at a time, sometimes in chunks) to the tokenizer stage.\r\n * The tokenizer groups the characters into tokens: tags, endtags, runs\r\n * of text, comments, doctype declarations, and the end-of-file (EOF)\r\n * token.  These tokens are then passed to the tree building stage via\r\n * the insertToken() function.  The tree building stage builds up the\r\n * document tree.\r\n *\r\n * The tokenizer stage is a finite state machine.  Each state is\r\n * implemented as a function with a name that ends in \"_state\".  The\r\n * initial state is data_state(). The current tokenizer state is stored\r\n * in the variable 'tokenizer'.  Most state functions expect a single\r\n * integer argument which represents a single UTF-16 codepoint.  Some\r\n * states want more characters and set a lookahead property on\r\n * themselves.  The scanChars() function in the scanner checks for this\r\n * lookahead property.  If it doesn't exist, then scanChars() just passes\r\n * the next input character to the current tokenizer state function.\r\n * Otherwise, scanChars() looks ahead (a given # of characters, or for a\r\n * matching string, or for a matching regexp) and passes a string of\r\n * characters to the current tokenizer state function.\r\n *\r\n * As a shortcut, certain states of the tokenizer use regular expressions\r\n * to look ahead in the scanner's input buffer for runs of text, simple\r\n * tags and attributes.  For well-formed input, these shortcuts skip a\r\n * lot of state transitions and speed things up a bit.\r\n *\r\n * When a tokenizer state function has consumed a complete token, it\r\n * emits that token, by calling insertToken(), or by calling a utility\r\n * function that itself calls insertToken().  These tokens are passed to\r\n * the tree building stage, which is also a state machine.  Like the\r\n * tokenizer, the tree building states are implemented as functions, and\r\n * these functions have names that end with _mode (because the HTML spec\r\n * refers to them as insertion modes). The current insertion mode is held\r\n * by the 'parser' variable.  Each insertion mode function takes up to 4\r\n * arguments.  The first is a token type, represented by the constants\r\n * TAG, ENDTAG, TEXT, COMMENT, DOCTYPE and EOF.  The second argument is\r\n * the value of the token: the text or comment data, or tagname or\r\n * doctype.  For tags, the 3rd argument is an array of attributes.  For\r\n * DOCTYPES it is the optional public id.  For tags, the 4th argument is\r\n * true if the tag is self-closing. For doctypes, the 4th argument is the\r\n * optional system id.\r\n *\r\n * Search for \"***\" to find the major sub-divisions in the code.\r\n */\r\n\r\n\r\n/***\r\n * Data prolog.  Lots of constants declared here, including some\r\n * very large objects.  They're used throughout the code that follows\r\n */\r\n// Token types for the tree builder.\r\nvar EOF = -1;\r\nvar TEXT = 1;\r\nvar TAG = 2;\r\nvar ENDTAG = 3;\r\nvar COMMENT = 4;\r\nvar DOCTYPE = 5;\r\n\r\n// A re-usable empty array\r\nvar NOATTRS = [];\r\n\r\n// These DTD public ids put the browser in quirks mode\r\nvar quirkyPublicIds = /^HTML$|^-\\/\\/W3O\\/\\/DTD W3 HTML Strict 3\\.0\\/\\/EN\\/\\/$|^-\\/W3C\\/DTD HTML 4\\.0 Transitional\\/EN$|^\\+\\/\\/Silmaril\\/\\/dtd html Pro v0r11 19970101\\/\\/|^-\\/\\/AdvaSoft Ltd\\/\\/DTD HTML 3\\.0 asWedit \\+ extensions\\/\\/|^-\\/\\/AS\\/\\/DTD HTML 3\\.0 asWedit \\+ extensions\\/\\/|^-\\/\\/IETF\\/\\/DTD HTML 2\\.0 Level 1\\/\\/|^-\\/\\/IETF\\/\\/DTD HTML 2\\.0 Level 2\\/\\/|^-\\/\\/IETF\\/\\/DTD HTML 2\\.0 Strict Level 1\\/\\/|^-\\/\\/IETF\\/\\/DTD HTML 2\\.0 Strict Level 2\\/\\/|^-\\/\\/IETF\\/\\/DTD HTML 2\\.0 Strict\\/\\/|^-\\/\\/IETF\\/\\/DTD HTML 2\\.0\\/\\/|^-\\/\\/IETF\\/\\/DTD HTML 2\\.1E\\/\\/|^-\\/\\/IETF\\/\\/DTD HTML 3\\.0\\/\\/|^-\\/\\/IETF\\/\\/DTD HTML 3\\.2 Final\\/\\/|^-\\/\\/IETF\\/\\/DTD HTML 3\\.2\\/\\/|^-\\/\\/IETF\\/\\/DTD HTML 3\\/\\/|^-\\/\\/IETF\\/\\/DTD HTML Level 0\\/\\/|^-\\/\\/IETF\\/\\/DTD HTML Level 1\\/\\/|^-\\/\\/IETF\\/\\/DTD HTML Level 2\\/\\/|^-\\/\\/IETF\\/\\/DTD HTML Level 3\\/\\/|^-\\/\\/IETF\\/\\/DTD HTML Strict Level 0\\/\\/|^-\\/\\/IETF\\/\\/DTD HTML Strict Level 1\\/\\/|^-\\/\\/IETF\\/\\/DTD HTML Strict Level 2\\/\\/|^-\\/\\/IETF\\/\\/DTD HTML Strict Level 3\\/\\/|^-\\/\\/IETF\\/\\/DTD HTML Strict\\/\\/|^-\\/\\/IETF\\/\\/DTD HTML\\/\\/|^-\\/\\/Metrius\\/\\/DTD Metrius Presentational\\/\\/|^-\\/\\/Microsoft\\/\\/DTD Internet Explorer 2\\.0 HTML Strict\\/\\/|^-\\/\\/Microsoft\\/\\/DTD Internet Explorer 2\\.0 HTML\\/\\/|^-\\/\\/Microsoft\\/\\/DTD Internet Explorer 2\\.0 Tables\\/\\/|^-\\/\\/Microsoft\\/\\/DTD Internet Explorer 3\\.0 HTML Strict\\/\\/|^-\\/\\/Microsoft\\/\\/DTD Internet Explorer 3\\.0 HTML\\/\\/|^-\\/\\/Microsoft\\/\\/DTD Internet Explorer 3\\.0 Tables\\/\\/|^-\\/\\/Netscape Comm\\. Corp\\.\\/\\/DTD HTML\\/\\/|^-\\/\\/Netscape Comm\\. Corp\\.\\/\\/DTD Strict HTML\\/\\/|^-\\/\\/O'Reilly and Associates\\/\\/DTD HTML 2\\.0\\/\\/|^-\\/\\/O'Reilly and Associates\\/\\/DTD HTML Extended 1\\.0\\/\\/|^-\\/\\/O'Reilly and Associates\\/\\/DTD HTML Extended Relaxed 1\\.0\\/\\/|^-\\/\\/SoftQuad Software\\/\\/DTD HoTMetaL PRO 6\\.0::19990601::extensions to HTML 4\\.0\\/\\/|^-\\/\\/SoftQuad\\/\\/DTD HoTMetaL PRO 4\\.0::19971010::extensions to HTML 4\\.0\\/\\/|^-\\/\\/Spyglass\\/\\/DTD HTML 2\\.0 Extended\\/\\/|^-\\/\\/SQ\\/\\/DTD HTML 2\\.0 HoTMetaL \\+ extensions\\/\\/|^-\\/\\/Sun Microsystems Corp\\.\\/\\/DTD HotJava HTML\\/\\/|^-\\/\\/Sun Microsystems Corp\\.\\/\\/DTD HotJava Strict HTML\\/\\/|^-\\/\\/W3C\\/\\/DTD HTML 3 1995-03-24\\/\\/|^-\\/\\/W3C\\/\\/DTD HTML 3\\.2 Draft\\/\\/|^-\\/\\/W3C\\/\\/DTD HTML 3\\.2 Final\\/\\/|^-\\/\\/W3C\\/\\/DTD HTML 3\\.2\\/\\/|^-\\/\\/W3C\\/\\/DTD HTML 3\\.2S Draft\\/\\/|^-\\/\\/W3C\\/\\/DTD HTML 4\\.0 Frameset\\/\\/|^-\\/\\/W3C\\/\\/DTD HTML 4\\.0 Transitional\\/\\/|^-\\/\\/W3C\\/\\/DTD HTML Experimental 19960712\\/\\/|^-\\/\\/W3C\\/\\/DTD HTML Experimental 970421\\/\\/|^-\\/\\/W3C\\/\\/DTD W3 HTML\\/\\/|^-\\/\\/W3O\\/\\/DTD W3 HTML 3\\.0\\/\\/|^-\\/\\/WebTechs\\/\\/DTD Mozilla HTML 2\\.0\\/\\/|^-\\/\\/WebTechs\\/\\/DTD Mozilla HTML\\/\\//i;\r\n\r\nvar quirkySystemId = \"http://www.ibm.com/data/dtd/v11/ibmxhtml1-transitional.dtd\";\r\n\r\nvar conditionallyQuirkyPublicIds = /^-\\/\\/W3C\\/\\/DTD HTML 4\\.01 Frameset\\/\\/|^-\\/\\/W3C\\/\\/DTD HTML 4\\.01 Transitional\\/\\//i;\r\n\r\n// These DTD public ids put the browser in limited quirks mode\r\nvar limitedQuirkyPublicIds = /^-\\/\\/W3C\\/\\/DTD XHTML 1\\.0 Frameset\\/\\/|^-\\/\\/W3C\\/\\/DTD XHTML 1\\.0 Transitional\\/\\//i;\r\n\r\n\r\n// Element sets below. See the isA() function for a way to test\r\n// whether an element is a member of a set\r\nvar specialSet = Object.create(null);\r\nspecialSet[NAMESPACE.HTML] = {\r\n  __proto__: null,\r\n  \"address\":true, \"applet\":true, \"area\":true, \"article\":true,\r\n  \"aside\":true, \"base\":true, \"basefont\":true, \"bgsound\":true,\r\n  \"blockquote\":true, \"body\":true, \"br\":true, \"button\":true,\r\n  \"caption\":true, \"center\":true, \"col\":true, \"colgroup\":true,\r\n  \"dd\":true, \"details\":true, \"dir\":true,\r\n  \"div\":true, \"dl\":true, \"dt\":true, \"embed\":true,\r\n  \"fieldset\":true, \"figcaption\":true, \"figure\":true, \"footer\":true,\r\n  \"form\":true, \"frame\":true, \"frameset\":true, \"h1\":true,\r\n  \"h2\":true, \"h3\":true, \"h4\":true, \"h5\":true,\r\n  \"h6\":true, \"head\":true, \"header\":true, \"hgroup\":true,\r\n  \"hr\":true, \"html\":true, \"iframe\":true, \"img\":true,\r\n  \"input\":true, \"li\":true, \"link\":true,\r\n  \"listing\":true, \"main\":true, \"marquee\":true, \"menu\":true, \"meta\":true,\r\n  \"nav\":true, \"noembed\":true, \"noframes\":true, \"noscript\":true,\r\n  \"object\":true, \"ol\":true, \"p\":true, \"param\":true,\r\n  \"plaintext\":true, \"pre\":true, \"script\":true, \"section\":true,\r\n  \"select\":true, \"source\":true, \"style\":true, \"summary\":true, \"table\":true,\r\n  \"tbody\":true, \"td\":true, \"template\":true, \"textarea\":true, \"tfoot\":true,\r\n  \"th\":true, \"thead\":true, \"title\":true, \"tr\":true, \"track\":true,\r\n  // Note that \"xmp\" was removed from the \"special\" set in the latest\r\n  // spec, apparently by accident; see\r\n  // https://github.com/whatwg/html/pull/1919\r\n  \"ul\":true, \"wbr\":true, \"xmp\":true\r\n};\r\nspecialSet[NAMESPACE.SVG] = {\r\n  __proto__: null,\r\n  \"foreignObject\": true, \"desc\": true, \"title\": true\r\n};\r\nspecialSet[NAMESPACE.MATHML] = {\r\n  __proto__: null,\r\n  \"mi\":true, \"mo\":true, \"mn\":true, \"ms\":true,\r\n  \"mtext\":true, \"annotation-xml\":true\r\n};\r\n\r\n// The set of address, div, and p HTML tags\r\nvar addressdivpSet = Object.create(null);\r\naddressdivpSet[NAMESPACE.HTML] = {\r\n  __proto__: null,\r\n  \"address\":true, \"div\":true, \"p\":true\r\n};\r\n\r\nvar dddtSet = Object.create(null);\r\ndddtSet[NAMESPACE.HTML] = {\r\n  __proto__: null,\r\n  \"dd\":true, \"dt\":true\r\n};\r\n\r\nvar tablesectionrowSet = Object.create(null);\r\ntablesectionrowSet[NAMESPACE.HTML] = {\r\n  __proto__: null,\r\n  \"table\":true, \"thead\":true, \"tbody\":true, \"tfoot\":true, \"tr\":true\r\n};\r\n\r\nvar impliedEndTagsSet = Object.create(null);\r\nimpliedEndTagsSet[NAMESPACE.HTML] = {\r\n  __proto__: null,\r\n  \"dd\": true, \"dt\": true, \"li\": true, \"menuitem\": true, \"optgroup\": true,\r\n  \"option\": true, \"p\": true, \"rb\": true, \"rp\": true, \"rt\": true, \"rtc\": true\r\n};\r\n\r\nvar thoroughImpliedEndTagsSet = Object.create(null);\r\nthoroughImpliedEndTagsSet[NAMESPACE.HTML] = {\r\n  __proto__: null,\r\n  \"caption\": true, \"colgroup\": true, \"dd\": true, \"dt\": true, \"li\": true,\r\n  \"optgroup\": true, \"option\": true, \"p\": true, \"rb\": true, \"rp\": true,\r\n  \"rt\": true, \"rtc\": true, \"tbody\": true, \"td\": true, \"tfoot\": true,\r\n  \"th\": true, \"thead\": true, \"tr\": true\r\n};\r\n\r\nvar tableContextSet = Object.create(null);\r\ntableContextSet[NAMESPACE.HTML] = {\r\n  __proto__: null,\r\n  \"table\": true, \"template\": true, \"html\": true\r\n};\r\n\r\nvar tableBodyContextSet = Object.create(null);\r\ntableBodyContextSet[NAMESPACE.HTML] = {\r\n  __proto__: null,\r\n  \"tbody\": true, \"tfoot\": true, \"thead\": true, \"template\": true, \"html\": true\r\n};\r\n\r\nvar tableRowContextSet = Object.create(null);\r\ntableRowContextSet[NAMESPACE.HTML] = {\r\n  __proto__: null,\r\n  \"tr\": true, \"template\": true, \"html\": true\r\n};\r\n\r\n// See http://www.w3.org/TR/html5/forms.html#form-associated-element\r\nvar formassociatedSet = Object.create(null);\r\nformassociatedSet[NAMESPACE.HTML] = {\r\n  __proto__: null,\r\n  \"button\": true, \"fieldset\": true, \"input\": true, \"keygen\": true,\r\n  \"object\": true, \"output\": true, \"select\": true, \"textarea\": true,\r\n  \"img\": true\r\n};\r\n\r\nvar inScopeSet = Object.create(null);\r\ninScopeSet[NAMESPACE.HTML]= {\r\n  __proto__: null,\r\n  \"applet\":true, \"caption\":true, \"html\":true, \"table\":true,\r\n  \"td\":true, \"th\":true, \"marquee\":true, \"object\":true,\r\n  \"template\":true\r\n};\r\ninScopeSet[NAMESPACE.MATHML] = {\r\n  __proto__: null,\r\n  \"mi\":true, \"mo\":true, \"mn\":true, \"ms\":true,\r\n  \"mtext\":true, \"annotation-xml\":true\r\n};\r\ninScopeSet[NAMESPACE.SVG] = {\r\n  __proto__: null,\r\n  \"foreignObject\":true, \"desc\":true, \"title\":true\r\n};\r\n\r\nvar inListItemScopeSet = Object.create(inScopeSet);\r\ninListItemScopeSet[NAMESPACE.HTML] =\r\n  Object.create(inScopeSet[NAMESPACE.HTML]);\r\ninListItemScopeSet[NAMESPACE.HTML].ol = true;\r\ninListItemScopeSet[NAMESPACE.HTML].ul = true;\r\n\r\nvar inButtonScopeSet = Object.create(inScopeSet);\r\ninButtonScopeSet[NAMESPACE.HTML] =\r\n  Object.create(inScopeSet[NAMESPACE.HTML]);\r\ninButtonScopeSet[NAMESPACE.HTML].button = true;\r\n\r\nvar inTableScopeSet = Object.create(null);\r\ninTableScopeSet[NAMESPACE.HTML] = {\r\n  __proto__: null,\r\n  \"html\":true, \"table\":true, \"template\":true\r\n};\r\n\r\n// The set of elements for select scope is the everything *except* these\r\nvar invertedSelectScopeSet = Object.create(null);\r\ninvertedSelectScopeSet[NAMESPACE.HTML] = {\r\n  __proto__: null,\r\n  \"optgroup\":true, \"option\":true\r\n};\r\n\r\nvar mathmlTextIntegrationPointSet = Object.create(null);\r\nmathmlTextIntegrationPointSet[NAMESPACE.MATHML] = {\r\n  __proto__: null,\r\n  mi: true,\r\n  mo: true,\r\n  mn: true,\r\n  ms: true,\r\n  mtext: true\r\n};\r\n\r\nvar htmlIntegrationPointSet = Object.create(null);\r\nhtmlIntegrationPointSet[NAMESPACE.SVG] = {\r\n  __proto__: null,\r\n  foreignObject: true,\r\n  desc: true,\r\n  title: true\r\n};\r\n\r\nvar foreignAttributes = {\r\n  __proto__: null,\r\n  \"xlink:actuate\": NAMESPACE.XLINK, \"xlink:arcrole\": NAMESPACE.XLINK,\r\n  \"xlink:href\":   NAMESPACE.XLINK,  \"xlink:role\":    NAMESPACE.XLINK,\r\n  \"xlink:show\":   NAMESPACE.XLINK,  \"xlink:title\":   NAMESPACE.XLINK,\r\n  \"xlink:type\":   NAMESPACE.XLINK,  \"xml:base\":      NAMESPACE.XML,\r\n  \"xml:lang\":     NAMESPACE.XML,    \"xml:space\":     NAMESPACE.XML,\r\n  \"xmlns\":        NAMESPACE.XMLNS,  \"xmlns:xlink\":   NAMESPACE.XMLNS\r\n};\r\n\r\n\r\n// Lowercase to mixed case mapping for SVG attributes and tagnames\r\nvar svgAttrAdjustments = {\r\n  __proto__: null,\r\n  attributename: \"attributeName\", attributetype: \"attributeType\",\r\n  basefrequency: \"baseFrequency\", baseprofile: \"baseProfile\",\r\n  calcmode: \"calcMode\", clippathunits: \"clipPathUnits\",\r\n  diffuseconstant: \"diffuseConstant\",\r\n  edgemode: \"edgeMode\",\r\n  filterunits: \"filterUnits\",\r\n  glyphref: \"glyphRef\", gradienttransform: \"gradientTransform\",\r\n  gradientunits: \"gradientUnits\", kernelmatrix: \"kernelMatrix\",\r\n  kernelunitlength: \"kernelUnitLength\", keypoints: \"keyPoints\",\r\n  keysplines: \"keySplines\", keytimes: \"keyTimes\",\r\n  lengthadjust: \"lengthAdjust\", limitingconeangle: \"limitingConeAngle\",\r\n  markerheight: \"markerHeight\", markerunits: \"markerUnits\",\r\n  markerwidth: \"markerWidth\", maskcontentunits: \"maskContentUnits\",\r\n  maskunits: \"maskUnits\", numoctaves: \"numOctaves\",\r\n  pathlength: \"pathLength\", patterncontentunits: \"patternContentUnits\",\r\n  patterntransform: \"patternTransform\", patternunits: \"patternUnits\",\r\n  pointsatx: \"pointsAtX\", pointsaty: \"pointsAtY\",\r\n  pointsatz: \"pointsAtZ\", preservealpha: \"preserveAlpha\",\r\n  preserveaspectratio: \"preserveAspectRatio\",\r\n  primitiveunits: \"primitiveUnits\", refx: \"refX\",\r\n  refy: \"refY\", repeatcount: \"repeatCount\",\r\n  repeatdur: \"repeatDur\", requiredextensions: \"requiredExtensions\",\r\n  requiredfeatures: \"requiredFeatures\",\r\n  specularconstant: \"specularConstant\",\r\n  specularexponent: \"specularExponent\", spreadmethod: \"spreadMethod\",\r\n  startoffset: \"startOffset\", stddeviation: \"stdDeviation\",\r\n  stitchtiles: \"stitchTiles\", surfacescale: \"surfaceScale\",\r\n  systemlanguage: \"systemLanguage\", tablevalues: \"tableValues\",\r\n  targetx: \"targetX\", targety: \"targetY\",\r\n  textlength: \"textLength\", viewbox: \"viewBox\",\r\n  viewtarget: \"viewTarget\", xchannelselector: \"xChannelSelector\",\r\n  ychannelselector: \"yChannelSelector\", zoomandpan: \"zoomAndPan\"\r\n};\r\n\r\nvar svgTagNameAdjustments = {\r\n  __proto__: null,\r\n  altglyph: \"altGlyph\", altglyphdef: \"altGlyphDef\",\r\n  altglyphitem: \"altGlyphItem\", animatecolor: \"animateColor\",\r\n  animatemotion: \"animateMotion\", animatetransform: \"animateTransform\",\r\n  clippath: \"clipPath\", feblend: \"feBlend\",\r\n  fecolormatrix: \"feColorMatrix\",\r\n  fecomponenttransfer: \"feComponentTransfer\", fecomposite: \"feComposite\",\r\n  feconvolvematrix: \"feConvolveMatrix\",\r\n  fediffuselighting: \"feDiffuseLighting\",\r\n  fedisplacementmap: \"feDisplacementMap\",\r\n  fedistantlight: \"feDistantLight\", feflood: \"feFlood\",\r\n  fefunca: \"feFuncA\", fefuncb: \"feFuncB\",\r\n  fefuncg: \"feFuncG\", fefuncr: \"feFuncR\",\r\n  fegaussianblur: \"feGaussianBlur\", feimage: \"feImage\",\r\n  femerge: \"feMerge\", femergenode: \"feMergeNode\",\r\n  femorphology: \"feMorphology\", feoffset: \"feOffset\",\r\n  fepointlight: \"fePointLight\", fespecularlighting: \"feSpecularLighting\",\r\n  fespotlight: \"feSpotLight\", fetile: \"feTile\",\r\n  feturbulence: \"feTurbulence\", foreignobject: \"foreignObject\",\r\n  glyphref: \"glyphRef\", lineargradient: \"linearGradient\",\r\n  radialgradient: \"radialGradient\", textpath: \"textPath\"\r\n};\r\n\r\n\r\n// Data for parsing numeric and named character references\r\n// These next 3 objects are direct translations of tables\r\n// in the HTML spec into JavaScript object format\r\nvar numericCharRefReplacements = {\r\n  __proto__: null,\r\n  0x00:0xFFFD, 0x80:0x20AC, 0x82:0x201A, 0x83:0x0192, 0x84:0x201E,\r\n  0x85:0x2026, 0x86:0x2020, 0x87:0x2021, 0x88:0x02C6, 0x89:0x2030,\r\n  0x8A:0x0160, 0x8B:0x2039, 0x8C:0x0152, 0x8E:0x017D, 0x91:0x2018,\r\n  0x92:0x2019, 0x93:0x201C, 0x94:0x201D, 0x95:0x2022, 0x96:0x2013,\r\n  0x97:0x2014, 0x98:0x02DC, 0x99:0x2122, 0x9A:0x0161, 0x9B:0x203A,\r\n  0x9C:0x0153, 0x9E:0x017E, 0x9F:0x0178\r\n};\r\n\r\n/*\r\n * This table is generated with test/tools/update-entities.js\r\n */\r\nvar namedCharRefs = {\r\n  __proto__: null,\r\n  \"AElig\":0xc6, \"AElig;\":0xc6,\r\n  \"AMP\":0x26, \"AMP;\":0x26,\r\n  \"Aacute\":0xc1, \"Aacute;\":0xc1,\r\n  \"Abreve;\":0x102, \"Acirc\":0xc2,\r\n  \"Acirc;\":0xc2, \"Acy;\":0x410,\r\n  \"Afr;\":[0xd835,0xdd04], \"Agrave\":0xc0,\r\n  \"Agrave;\":0xc0, \"Alpha;\":0x391,\r\n  \"Amacr;\":0x100, \"And;\":0x2a53,\r\n  \"Aogon;\":0x104, \"Aopf;\":[0xd835,0xdd38],\r\n  \"ApplyFunction;\":0x2061, \"Aring\":0xc5,\r\n  \"Aring;\":0xc5, \"Ascr;\":[0xd835,0xdc9c],\r\n  \"Assign;\":0x2254, \"Atilde\":0xc3,\r\n  \"Atilde;\":0xc3, \"Auml\":0xc4,\r\n  \"Auml;\":0xc4, \"Backslash;\":0x2216,\r\n  \"Barv;\":0x2ae7, \"Barwed;\":0x2306,\r\n  \"Bcy;\":0x411, \"Because;\":0x2235,\r\n  \"Bernoullis;\":0x212c, \"Beta;\":0x392,\r\n  \"Bfr;\":[0xd835,0xdd05], \"Bopf;\":[0xd835,0xdd39],\r\n  \"Breve;\":0x2d8, \"Bscr;\":0x212c,\r\n  \"Bumpeq;\":0x224e, \"CHcy;\":0x427,\r\n  \"COPY\":0xa9, \"COPY;\":0xa9,\r\n  \"Cacute;\":0x106, \"Cap;\":0x22d2,\r\n  \"CapitalDifferentialD;\":0x2145, \"Cayleys;\":0x212d,\r\n  \"Ccaron;\":0x10c, \"Ccedil\":0xc7,\r\n  \"Ccedil;\":0xc7, \"Ccirc;\":0x108,\r\n  \"Cconint;\":0x2230, \"Cdot;\":0x10a,\r\n  \"Cedilla;\":0xb8, \"CenterDot;\":0xb7,\r\n  \"Cfr;\":0x212d, \"Chi;\":0x3a7,\r\n  \"CircleDot;\":0x2299, \"CircleMinus;\":0x2296,\r\n  \"CirclePlus;\":0x2295, \"CircleTimes;\":0x2297,\r\n  \"ClockwiseContourIntegral;\":0x2232, \"CloseCurlyDoubleQuote;\":0x201d,\r\n  \"CloseCurlyQuote;\":0x2019, \"Colon;\":0x2237,\r\n  \"Colone;\":0x2a74, \"Congruent;\":0x2261,\r\n  \"Conint;\":0x222f, \"ContourIntegral;\":0x222e,\r\n  \"Copf;\":0x2102, \"Coproduct;\":0x2210,\r\n  \"CounterClockwiseContourIntegral;\":0x2233, \"Cross;\":0x2a2f,\r\n  \"Cscr;\":[0xd835,0xdc9e], \"Cup;\":0x22d3,\r\n  \"CupCap;\":0x224d, \"DD;\":0x2145,\r\n  \"DDotrahd;\":0x2911, \"DJcy;\":0x402,\r\n  \"DScy;\":0x405, \"DZcy;\":0x40f,\r\n  \"Dagger;\":0x2021, \"Darr;\":0x21a1,\r\n  \"Dashv;\":0x2ae4, \"Dcaron;\":0x10e,\r\n  \"Dcy;\":0x414, \"Del;\":0x2207,\r\n  \"Delta;\":0x394, \"Dfr;\":[0xd835,0xdd07],\r\n  \"DiacriticalAcute;\":0xb4, \"DiacriticalDot;\":0x2d9,\r\n  \"DiacriticalDoubleAcute;\":0x2dd, \"DiacriticalGrave;\":0x60,\r\n  \"DiacriticalTilde;\":0x2dc, \"Diamond;\":0x22c4,\r\n  \"DifferentialD;\":0x2146, \"Dopf;\":[0xd835,0xdd3b],\r\n  \"Dot;\":0xa8, \"DotDot;\":0x20dc,\r\n  \"DotEqual;\":0x2250, \"DoubleContourIntegral;\":0x222f,\r\n  \"DoubleDot;\":0xa8, \"DoubleDownArrow;\":0x21d3,\r\n  \"DoubleLeftArrow;\":0x21d0, \"DoubleLeftRightArrow;\":0x21d4,\r\n  \"DoubleLeftTee;\":0x2ae4, \"DoubleLongLeftArrow;\":0x27f8,\r\n  \"DoubleLongLeftRightArrow;\":0x27fa, \"DoubleLongRightArrow;\":0x27f9,\r\n  \"DoubleRightArrow;\":0x21d2, \"DoubleRightTee;\":0x22a8,\r\n  \"DoubleUpArrow;\":0x21d1, \"DoubleUpDownArrow;\":0x21d5,\r\n  \"DoubleVerticalBar;\":0x2225, \"DownArrow;\":0x2193,\r\n  \"DownArrowBar;\":0x2913, \"DownArrowUpArrow;\":0x21f5,\r\n  \"DownBreve;\":0x311, \"DownLeftRightVector;\":0x2950,\r\n  \"DownLeftTeeVector;\":0x295e, \"DownLeftVector;\":0x21bd,\r\n  \"DownLeftVectorBar;\":0x2956, \"DownRightTeeVector;\":0x295f,\r\n  \"DownRightVector;\":0x21c1, \"DownRightVectorBar;\":0x2957,\r\n  \"DownTee;\":0x22a4, \"DownTeeArrow;\":0x21a7,\r\n  \"Downarrow;\":0x21d3, \"Dscr;\":[0xd835,0xdc9f],\r\n  \"Dstrok;\":0x110, \"ENG;\":0x14a,\r\n  \"ETH\":0xd0, \"ETH;\":0xd0,\r\n  \"Eacute\":0xc9, \"Eacute;\":0xc9,\r\n  \"Ecaron;\":0x11a, \"Ecirc\":0xca,\r\n  \"Ecirc;\":0xca, \"Ecy;\":0x42d,\r\n  \"Edot;\":0x116, \"Efr;\":[0xd835,0xdd08],\r\n  \"Egrave\":0xc8, \"Egrave;\":0xc8,\r\n  \"Element;\":0x2208, \"Emacr;\":0x112,\r\n  \"EmptySmallSquare;\":0x25fb, \"EmptyVerySmallSquare;\":0x25ab,\r\n  \"Eogon;\":0x118, \"Eopf;\":[0xd835,0xdd3c],\r\n  \"Epsilon;\":0x395, \"Equal;\":0x2a75,\r\n  \"EqualTilde;\":0x2242, \"Equilibrium;\":0x21cc,\r\n  \"Escr;\":0x2130, \"Esim;\":0x2a73,\r\n  \"Eta;\":0x397, \"Euml\":0xcb,\r\n  \"Euml;\":0xcb, \"Exists;\":0x2203,\r\n  \"ExponentialE;\":0x2147, \"Fcy;\":0x424,\r\n  \"Ffr;\":[0xd835,0xdd09], \"FilledSmallSquare;\":0x25fc,\r\n  \"FilledVerySmallSquare;\":0x25aa, \"Fopf;\":[0xd835,0xdd3d],\r\n  \"ForAll;\":0x2200, \"Fouriertrf;\":0x2131,\r\n  \"Fscr;\":0x2131, \"GJcy;\":0x403,\r\n  \"GT\":0x3e, \"GT;\":0x3e,\r\n  \"Gamma;\":0x393, \"Gammad;\":0x3dc,\r\n  \"Gbreve;\":0x11e, \"Gcedil;\":0x122,\r\n  \"Gcirc;\":0x11c, \"Gcy;\":0x413,\r\n  \"Gdot;\":0x120, \"Gfr;\":[0xd835,0xdd0a],\r\n  \"Gg;\":0x22d9, \"Gopf;\":[0xd835,0xdd3e],\r\n  \"GreaterEqual;\":0x2265, \"GreaterEqualLess;\":0x22db,\r\n  \"GreaterFullEqual;\":0x2267, \"GreaterGreater;\":0x2aa2,\r\n  \"GreaterLess;\":0x2277, \"GreaterSlantEqual;\":0x2a7e,\r\n  \"GreaterTilde;\":0x2273, \"Gscr;\":[0xd835,0xdca2],\r\n  \"Gt;\":0x226b, \"HARDcy;\":0x42a,\r\n  \"Hacek;\":0x2c7, \"Hat;\":0x5e,\r\n  \"Hcirc;\":0x124, \"Hfr;\":0x210c,\r\n  \"HilbertSpace;\":0x210b, \"Hopf;\":0x210d,\r\n  \"HorizontalLine;\":0x2500, \"Hscr;\":0x210b,\r\n  \"Hstrok;\":0x126, \"HumpDownHump;\":0x224e,\r\n  \"HumpEqual;\":0x224f, \"IEcy;\":0x415,\r\n  \"IJlig;\":0x132, \"IOcy;\":0x401,\r\n  \"Iacute\":0xcd, \"Iacute;\":0xcd,\r\n  \"Icirc\":0xce, \"Icirc;\":0xce,\r\n  \"Icy;\":0x418, \"Idot;\":0x130,\r\n  \"Ifr;\":0x2111, \"Igrave\":0xcc,\r\n  \"Igrave;\":0xcc, \"Im;\":0x2111,\r\n  \"Imacr;\":0x12a, \"ImaginaryI;\":0x2148,\r\n  \"Implies;\":0x21d2, \"Int;\":0x222c,\r\n  \"Integral;\":0x222b, \"Intersection;\":0x22c2,\r\n  \"InvisibleComma;\":0x2063, \"InvisibleTimes;\":0x2062,\r\n  \"Iogon;\":0x12e, \"Iopf;\":[0xd835,0xdd40],\r\n  \"Iota;\":0x399, \"Iscr;\":0x2110,\r\n  \"Itilde;\":0x128, \"Iukcy;\":0x406,\r\n  \"Iuml\":0xcf, \"Iuml;\":0xcf,\r\n  \"Jcirc;\":0x134, \"Jcy;\":0x419,\r\n  \"Jfr;\":[0xd835,0xdd0d], \"Jopf;\":[0xd835,0xdd41],\r\n  \"Jscr;\":[0xd835,0xdca5], \"Jsercy;\":0x408,\r\n  \"Jukcy;\":0x404, \"KHcy;\":0x425,\r\n  \"KJcy;\":0x40c, \"Kappa;\":0x39a,\r\n  \"Kcedil;\":0x136, \"Kcy;\":0x41a,\r\n  \"Kfr;\":[0xd835,0xdd0e], \"Kopf;\":[0xd835,0xdd42],\r\n  \"Kscr;\":[0xd835,0xdca6], \"LJcy;\":0x409,\r\n  \"LT\":0x3c, \"LT;\":0x3c,\r\n  \"Lacute;\":0x139, \"Lambda;\":0x39b,\r\n  \"Lang;\":0x27ea, \"Laplacetrf;\":0x2112,\r\n  \"Larr;\":0x219e, \"Lcaron;\":0x13d,\r\n  \"Lcedil;\":0x13b, \"Lcy;\":0x41b,\r\n  \"LeftAngleBracket;\":0x27e8, \"LeftArrow;\":0x2190,\r\n  \"LeftArrowBar;\":0x21e4, \"LeftArrowRightArrow;\":0x21c6,\r\n  \"LeftCeiling;\":0x2308, \"LeftDoubleBracket;\":0x27e6,\r\n  \"LeftDownTeeVector;\":0x2961, \"LeftDownVector;\":0x21c3,\r\n  \"LeftDownVectorBar;\":0x2959, \"LeftFloor;\":0x230a,\r\n  \"LeftRightArrow;\":0x2194, \"LeftRightVector;\":0x294e,\r\n  \"LeftTee;\":0x22a3, \"LeftTeeArrow;\":0x21a4,\r\n  \"LeftTeeVector;\":0x295a, \"LeftTriangle;\":0x22b2,\r\n  \"LeftTriangleBar;\":0x29cf, \"LeftTriangleEqual;\":0x22b4,\r\n  \"LeftUpDownVector;\":0x2951, \"LeftUpTeeVector;\":0x2960,\r\n  \"LeftUpVector;\":0x21bf, \"LeftUpVectorBar;\":0x2958,\r\n  \"LeftVector;\":0x21bc, \"LeftVectorBar;\":0x2952,\r\n  \"Leftarrow;\":0x21d0, \"Leftrightarrow;\":0x21d4,\r\n  \"LessEqualGreater;\":0x22da, \"LessFullEqual;\":0x2266,\r\n  \"LessGreater;\":0x2276, \"LessLess;\":0x2aa1,\r\n  \"LessSlantEqual;\":0x2a7d, \"LessTilde;\":0x2272,\r\n  \"Lfr;\":[0xd835,0xdd0f], \"Ll;\":0x22d8,\r\n  \"Lleftarrow;\":0x21da, \"Lmidot;\":0x13f,\r\n  \"LongLeftArrow;\":0x27f5, \"LongLeftRightArrow;\":0x27f7,\r\n  \"LongRightArrow;\":0x27f6, \"Longleftarrow;\":0x27f8,\r\n  \"Longleftrightarrow;\":0x27fa, \"Longrightarrow;\":0x27f9,\r\n  \"Lopf;\":[0xd835,0xdd43], \"LowerLeftArrow;\":0x2199,\r\n  \"LowerRightArrow;\":0x2198, \"Lscr;\":0x2112,\r\n  \"Lsh;\":0x21b0, \"Lstrok;\":0x141,\r\n  \"Lt;\":0x226a, \"Map;\":0x2905,\r\n  \"Mcy;\":0x41c, \"MediumSpace;\":0x205f,\r\n  \"Mellintrf;\":0x2133, \"Mfr;\":[0xd835,0xdd10],\r\n  \"MinusPlus;\":0x2213, \"Mopf;\":[0xd835,0xdd44],\r\n  \"Mscr;\":0x2133, \"Mu;\":0x39c,\r\n  \"NJcy;\":0x40a, \"Nacute;\":0x143,\r\n  \"Ncaron;\":0x147, \"Ncedil;\":0x145,\r\n  \"Ncy;\":0x41d, \"NegativeMediumSpace;\":0x200b,\r\n  \"NegativeThickSpace;\":0x200b, \"NegativeThinSpace;\":0x200b,\r\n  \"NegativeVeryThinSpace;\":0x200b, \"NestedGreaterGreater;\":0x226b,\r\n  \"NestedLessLess;\":0x226a, \"NewLine;\":0xa,\r\n  \"Nfr;\":[0xd835,0xdd11], \"NoBreak;\":0x2060,\r\n  \"NonBreakingSpace;\":0xa0, \"Nopf;\":0x2115,\r\n  \"Not;\":0x2aec, \"NotCongruent;\":0x2262,\r\n  \"NotCupCap;\":0x226d, \"NotDoubleVerticalBar;\":0x2226,\r\n  \"NotElement;\":0x2209, \"NotEqual;\":0x2260,\r\n  \"NotEqualTilde;\":[0x2242,0x338], \"NotExists;\":0x2204,\r\n  \"NotGreater;\":0x226f, \"NotGreaterEqual;\":0x2271,\r\n  \"NotGreaterFullEqual;\":[0x2267,0x338], \"NotGreaterGreater;\":[0x226b,0x338],\r\n  \"NotGreaterLess;\":0x2279, \"NotGreaterSlantEqual;\":[0x2a7e,0x338],\r\n  \"NotGreaterTilde;\":0x2275, \"NotHumpDownHump;\":[0x224e,0x338],\r\n  \"NotHumpEqual;\":[0x224f,0x338], \"NotLeftTriangle;\":0x22ea,\r\n  \"NotLeftTriangleBar;\":[0x29cf,0x338], \"NotLeftTriangleEqual;\":0x22ec,\r\n  \"NotLess;\":0x226e, \"NotLessEqual;\":0x2270,\r\n  \"NotLessGreater;\":0x2278, \"NotLessLess;\":[0x226a,0x338],\r\n  \"NotLessSlantEqual;\":[0x2a7d,0x338], \"NotLessTilde;\":0x2274,\r\n  \"NotNestedGreaterGreater;\":[0x2aa2,0x338], \"NotNestedLessLess;\":[0x2aa1,0x338],\r\n  \"NotPrecedes;\":0x2280, \"NotPrecedesEqual;\":[0x2aaf,0x338],\r\n  \"NotPrecedesSlantEqual;\":0x22e0, \"NotReverseElement;\":0x220c,\r\n  \"NotRightTriangle;\":0x22eb, \"NotRightTriangleBar;\":[0x29d0,0x338],\r\n  \"NotRightTriangleEqual;\":0x22ed, \"NotSquareSubset;\":[0x228f,0x338],\r\n  \"NotSquareSubsetEqual;\":0x22e2, \"NotSquareSuperset;\":[0x2290,0x338],\r\n  \"NotSquareSupersetEqual;\":0x22e3, \"NotSubset;\":[0x2282,0x20d2],\r\n  \"NotSubsetEqual;\":0x2288, \"NotSucceeds;\":0x2281,\r\n  \"NotSucceedsEqual;\":[0x2ab0,0x338], \"NotSucceedsSlantEqual;\":0x22e1,\r\n  \"NotSucceedsTilde;\":[0x227f,0x338], \"NotSuperset;\":[0x2283,0x20d2],\r\n  \"NotSupersetEqual;\":0x2289, \"NotTilde;\":0x2241,\r\n  \"NotTildeEqual;\":0x2244, \"NotTildeFullEqual;\":0x2247,\r\n  \"NotTildeTilde;\":0x2249, \"NotVerticalBar;\":0x2224,\r\n  \"Nscr;\":[0xd835,0xdca9], \"Ntilde\":0xd1,\r\n  \"Ntilde;\":0xd1, \"Nu;\":0x39d,\r\n  \"OElig;\":0x152, \"Oacute\":0xd3,\r\n  \"Oacute;\":0xd3, \"Ocirc\":0xd4,\r\n  \"Ocirc;\":0xd4, \"Ocy;\":0x41e,\r\n  \"Odblac;\":0x150, \"Ofr;\":[0xd835,0xdd12],\r\n  \"Ograve\":0xd2, \"Ograve;\":0xd2,\r\n  \"Omacr;\":0x14c, \"Omega;\":0x3a9,\r\n  \"Omicron;\":0x39f, \"Oopf;\":[0xd835,0xdd46],\r\n  \"OpenCurlyDoubleQuote;\":0x201c, \"OpenCurlyQuote;\":0x2018,\r\n  \"Or;\":0x2a54, \"Oscr;\":[0xd835,0xdcaa],\r\n  \"Oslash\":0xd8, \"Oslash;\":0xd8,\r\n  \"Otilde\":0xd5, \"Otilde;\":0xd5,\r\n  \"Otimes;\":0x2a37, \"Ouml\":0xd6,\r\n  \"Ouml;\":0xd6, \"OverBar;\":0x203e,\r\n  \"OverBrace;\":0x23de, \"OverBracket;\":0x23b4,\r\n  \"OverParenthesis;\":0x23dc, \"PartialD;\":0x2202,\r\n  \"Pcy;\":0x41f, \"Pfr;\":[0xd835,0xdd13],\r\n  \"Phi;\":0x3a6, \"Pi;\":0x3a0,\r\n  \"PlusMinus;\":0xb1, \"Poincareplane;\":0x210c,\r\n  \"Popf;\":0x2119, \"Pr;\":0x2abb,\r\n  \"Precedes;\":0x227a, \"PrecedesEqual;\":0x2aaf,\r\n  \"PrecedesSlantEqual;\":0x227c, \"PrecedesTilde;\":0x227e,\r\n  \"Prime;\":0x2033, \"Product;\":0x220f,\r\n  \"Proportion;\":0x2237, \"Proportional;\":0x221d,\r\n  \"Pscr;\":[0xd835,0xdcab], \"Psi;\":0x3a8,\r\n  \"QUOT\":0x22, \"QUOT;\":0x22,\r\n  \"Qfr;\":[0xd835,0xdd14], \"Qopf;\":0x211a,\r\n  \"Qscr;\":[0xd835,0xdcac], \"RBarr;\":0x2910,\r\n  \"REG\":0xae, \"REG;\":0xae,\r\n  \"Racute;\":0x154, \"Rang;\":0x27eb,\r\n  \"Rarr;\":0x21a0, \"Rarrtl;\":0x2916,\r\n  \"Rcaron;\":0x158, \"Rcedil;\":0x156,\r\n  \"Rcy;\":0x420, \"Re;\":0x211c,\r\n  \"ReverseElement;\":0x220b, \"ReverseEquilibrium;\":0x21cb,\r\n  \"ReverseUpEquilibrium;\":0x296f, \"Rfr;\":0x211c,\r\n  \"Rho;\":0x3a1, \"RightAngleBracket;\":0x27e9,\r\n  \"RightArrow;\":0x2192, \"RightArrowBar;\":0x21e5,\r\n  \"RightArrowLeftArrow;\":0x21c4, \"RightCeiling;\":0x2309,\r\n  \"RightDoubleBracket;\":0x27e7, \"RightDownTeeVector;\":0x295d,\r\n  \"RightDownVector;\":0x21c2, \"RightDownVectorBar;\":0x2955,\r\n  \"RightFloor;\":0x230b, \"RightTee;\":0x22a2,\r\n  \"RightTeeArrow;\":0x21a6, \"RightTeeVector;\":0x295b,\r\n  \"RightTriangle;\":0x22b3, \"RightTriangleBar;\":0x29d0,\r\n  \"RightTriangleEqual;\":0x22b5, \"RightUpDownVector;\":0x294f,\r\n  \"RightUpTeeVector;\":0x295c, \"RightUpVector;\":0x21be,\r\n  \"RightUpVectorBar;\":0x2954, \"RightVector;\":0x21c0,\r\n  \"RightVectorBar;\":0x2953, \"Rightarrow;\":0x21d2,\r\n  \"Ropf;\":0x211d, \"RoundImplies;\":0x2970,\r\n  \"Rrightarrow;\":0x21db, \"Rscr;\":0x211b,\r\n  \"Rsh;\":0x21b1, \"RuleDelayed;\":0x29f4,\r\n  \"SHCHcy;\":0x429, \"SHcy;\":0x428,\r\n  \"SOFTcy;\":0x42c, \"Sacute;\":0x15a,\r\n  \"Sc;\":0x2abc, \"Scaron;\":0x160,\r\n  \"Scedil;\":0x15e, \"Scirc;\":0x15c,\r\n  \"Scy;\":0x421, \"Sfr;\":[0xd835,0xdd16],\r\n  \"ShortDownArrow;\":0x2193, \"ShortLeftArrow;\":0x2190,\r\n  \"ShortRightArrow;\":0x2192, \"ShortUpArrow;\":0x2191,\r\n  \"Sigma;\":0x3a3, \"SmallCircle;\":0x2218,\r\n  \"Sopf;\":[0xd835,0xdd4a], \"Sqrt;\":0x221a,\r\n  \"Square;\":0x25a1, \"SquareIntersection;\":0x2293,\r\n  \"SquareSubset;\":0x228f, \"SquareSubsetEqual;\":0x2291,\r\n  \"SquareSuperset;\":0x2290, \"SquareSupersetEqual;\":0x2292,\r\n  \"SquareUnion;\":0x2294, \"Sscr;\":[0xd835,0xdcae],\r\n  \"Star;\":0x22c6, \"Sub;\":0x22d0,\r\n  \"Subset;\":0x22d0, \"SubsetEqual;\":0x2286,\r\n  \"Succeeds;\":0x227b, \"SucceedsEqual;\":0x2ab0,\r\n  \"SucceedsSlantEqual;\":0x227d, \"SucceedsTilde;\":0x227f,\r\n  \"SuchThat;\":0x220b, \"Sum;\":0x2211,\r\n  \"Sup;\":0x22d1, \"Superset;\":0x2283,\r\n  \"SupersetEqual;\":0x2287, \"Supset;\":0x22d1,\r\n  \"THORN\":0xde, \"THORN;\":0xde,\r\n  \"TRADE;\":0x2122, \"TSHcy;\":0x40b,\r\n  \"TScy;\":0x426, \"Tab;\":0x9,\r\n  \"Tau;\":0x3a4, \"Tcaron;\":0x164,\r\n  \"Tcedil;\":0x162, \"Tcy;\":0x422,\r\n  \"Tfr;\":[0xd835,0xdd17], \"Therefore;\":0x2234,\r\n  \"Theta;\":0x398, \"ThickSpace;\":[0x205f,0x200a],\r\n  \"ThinSpace;\":0x2009, \"Tilde;\":0x223c,\r\n  \"TildeEqual;\":0x2243, \"TildeFullEqual;\":0x2245,\r\n  \"TildeTilde;\":0x2248, \"Topf;\":[0xd835,0xdd4b],\r\n  \"TripleDot;\":0x20db, \"Tscr;\":[0xd835,0xdcaf],\r\n  \"Tstrok;\":0x166, \"Uacute\":0xda,\r\n  \"Uacute;\":0xda, \"Uarr;\":0x219f,\r\n  \"Uarrocir;\":0x2949, \"Ubrcy;\":0x40e,\r\n  \"Ubreve;\":0x16c, \"Ucirc\":0xdb,\r\n  \"Ucirc;\":0xdb, \"Ucy;\":0x423,\r\n  \"Udblac;\":0x170, \"Ufr;\":[0xd835,0xdd18],\r\n  \"Ugrave\":0xd9, \"Ugrave;\":0xd9,\r\n  \"Umacr;\":0x16a, \"UnderBar;\":0x5f,\r\n  \"UnderBrace;\":0x23df, \"UnderBracket;\":0x23b5,\r\n  \"UnderParenthesis;\":0x23dd, \"Union;\":0x22c3,\r\n  \"UnionPlus;\":0x228e, \"Uogon;\":0x172,\r\n  \"Uopf;\":[0xd835,0xdd4c], \"UpArrow;\":0x2191,\r\n  \"UpArrowBar;\":0x2912, \"UpArrowDownArrow;\":0x21c5,\r\n  \"UpDownArrow;\":0x2195, \"UpEquilibrium;\":0x296e,\r\n  \"UpTee;\":0x22a5, \"UpTeeArrow;\":0x21a5,\r\n  \"Uparrow;\":0x21d1, \"Updownarrow;\":0x21d5,\r\n  \"UpperLeftArrow;\":0x2196, \"UpperRightArrow;\":0x2197,\r\n  \"Upsi;\":0x3d2, \"Upsilon;\":0x3a5,\r\n  \"Uring;\":0x16e, \"Uscr;\":[0xd835,0xdcb0],\r\n  \"Utilde;\":0x168, \"Uuml\":0xdc,\r\n  \"Uuml;\":0xdc, \"VDash;\":0x22ab,\r\n  \"Vbar;\":0x2aeb, \"Vcy;\":0x412,\r\n  \"Vdash;\":0x22a9, \"Vdashl;\":0x2ae6,\r\n  \"Vee;\":0x22c1, \"Verbar;\":0x2016,\r\n  \"Vert;\":0x2016, \"VerticalBar;\":0x2223,\r\n  \"VerticalLine;\":0x7c, \"VerticalSeparator;\":0x2758,\r\n  \"VerticalTilde;\":0x2240, \"VeryThinSpace;\":0x200a,\r\n  \"Vfr;\":[0xd835,0xdd19], \"Vopf;\":[0xd835,0xdd4d],\r\n  \"Vscr;\":[0xd835,0xdcb1], \"Vvdash;\":0x22aa,\r\n  \"Wcirc;\":0x174, \"Wedge;\":0x22c0,\r\n  \"Wfr;\":[0xd835,0xdd1a], \"Wopf;\":[0xd835,0xdd4e],\r\n  \"Wscr;\":[0xd835,0xdcb2], \"Xfr;\":[0xd835,0xdd1b],\r\n  \"Xi;\":0x39e, \"Xopf;\":[0xd835,0xdd4f],\r\n  \"Xscr;\":[0xd835,0xdcb3], \"YAcy;\":0x42f,\r\n  \"YIcy;\":0x407, \"YUcy;\":0x42e,\r\n  \"Yacute\":0xdd, \"Yacute;\":0xdd,\r\n  \"Ycirc;\":0x176, \"Ycy;\":0x42b,\r\n  \"Yfr;\":[0xd835,0xdd1c], \"Yopf;\":[0xd835,0xdd50],\r\n  \"Yscr;\":[0xd835,0xdcb4], \"Yuml;\":0x178,\r\n  \"ZHcy;\":0x416, \"Zacute;\":0x179,\r\n  \"Zcaron;\":0x17d, \"Zcy;\":0x417,\r\n  \"Zdot;\":0x17b, \"ZeroWidthSpace;\":0x200b,\r\n  \"Zeta;\":0x396, \"Zfr;\":0x2128,\r\n  \"Zopf;\":0x2124, \"Zscr;\":[0xd835,0xdcb5],\r\n  \"aacute\":0xe1, \"aacute;\":0xe1,\r\n  \"abreve;\":0x103, \"ac;\":0x223e,\r\n  \"acE;\":[0x223e,0x333], \"acd;\":0x223f,\r\n  \"acirc\":0xe2, \"acirc;\":0xe2,\r\n  \"acute\":0xb4, \"acute;\":0xb4,\r\n  \"acy;\":0x430, \"aelig\":0xe6,\r\n  \"aelig;\":0xe6, \"af;\":0x2061,\r\n  \"afr;\":[0xd835,0xdd1e], \"agrave\":0xe0,\r\n  \"agrave;\":0xe0, \"alefsym;\":0x2135,\r\n  \"aleph;\":0x2135, \"alpha;\":0x3b1,\r\n  \"amacr;\":0x101, \"amalg;\":0x2a3f,\r\n  \"amp\":0x26, \"amp;\":0x26,\r\n  \"and;\":0x2227, \"andand;\":0x2a55,\r\n  \"andd;\":0x2a5c, \"andslope;\":0x2a58,\r\n  \"andv;\":0x2a5a, \"ang;\":0x2220,\r\n  \"ange;\":0x29a4, \"angle;\":0x2220,\r\n  \"angmsd;\":0x2221, \"angmsdaa;\":0x29a8,\r\n  \"angmsdab;\":0x29a9, \"angmsdac;\":0x29aa,\r\n  \"angmsdad;\":0x29ab, \"angmsdae;\":0x29ac,\r\n  \"angmsdaf;\":0x29ad, \"angmsdag;\":0x29ae,\r\n  \"angmsdah;\":0x29af, \"angrt;\":0x221f,\r\n  \"angrtvb;\":0x22be, \"angrtvbd;\":0x299d,\r\n  \"angsph;\":0x2222, \"angst;\":0xc5,\r\n  \"angzarr;\":0x237c, \"aogon;\":0x105,\r\n  \"aopf;\":[0xd835,0xdd52], \"ap;\":0x2248,\r\n  \"apE;\":0x2a70, \"apacir;\":0x2a6f,\r\n  \"ape;\":0x224a, \"apid;\":0x224b,\r\n  \"apos;\":0x27, \"approx;\":0x2248,\r\n  \"approxeq;\":0x224a, \"aring\":0xe5,\r\n  \"aring;\":0xe5, \"ascr;\":[0xd835,0xdcb6],\r\n  \"ast;\":0x2a, \"asymp;\":0x2248,\r\n  \"asympeq;\":0x224d, \"atilde\":0xe3,\r\n  \"atilde;\":0xe3, \"auml\":0xe4,\r\n  \"auml;\":0xe4, \"awconint;\":0x2233,\r\n  \"awint;\":0x2a11, \"bNot;\":0x2aed,\r\n  \"backcong;\":0x224c, \"backepsilon;\":0x3f6,\r\n  \"backprime;\":0x2035, \"backsim;\":0x223d,\r\n  \"backsimeq;\":0x22cd, \"barvee;\":0x22bd,\r\n  \"barwed;\":0x2305, \"barwedge;\":0x2305,\r\n  \"bbrk;\":0x23b5, \"bbrktbrk;\":0x23b6,\r\n  \"bcong;\":0x224c, \"bcy;\":0x431,\r\n  \"bdquo;\":0x201e, \"becaus;\":0x2235,\r\n  \"because;\":0x2235, \"bemptyv;\":0x29b0,\r\n  \"bepsi;\":0x3f6, \"bernou;\":0x212c,\r\n  \"beta;\":0x3b2, \"beth;\":0x2136,\r\n  \"between;\":0x226c, \"bfr;\":[0xd835,0xdd1f],\r\n  \"bigcap;\":0x22c2, \"bigcirc;\":0x25ef,\r\n  \"bigcup;\":0x22c3, \"bigodot;\":0x2a00,\r\n  \"bigoplus;\":0x2a01, \"bigotimes;\":0x2a02,\r\n  \"bigsqcup;\":0x2a06, \"bigstar;\":0x2605,\r\n  \"bigtriangledown;\":0x25bd, \"bigtriangleup;\":0x25b3,\r\n  \"biguplus;\":0x2a04, \"bigvee;\":0x22c1,\r\n  \"bigwedge;\":0x22c0, \"bkarow;\":0x290d,\r\n  \"blacklozenge;\":0x29eb, \"blacksquare;\":0x25aa,\r\n  \"blacktriangle;\":0x25b4, \"blacktriangledown;\":0x25be,\r\n  \"blacktriangleleft;\":0x25c2, \"blacktriangleright;\":0x25b8,\r\n  \"blank;\":0x2423, \"blk12;\":0x2592,\r\n  \"blk14;\":0x2591, \"blk34;\":0x2593,\r\n  \"block;\":0x2588, \"bne;\":[0x3d,0x20e5],\r\n  \"bnequiv;\":[0x2261,0x20e5], \"bnot;\":0x2310,\r\n  \"bopf;\":[0xd835,0xdd53], \"bot;\":0x22a5,\r\n  \"bottom;\":0x22a5, \"bowtie;\":0x22c8,\r\n  \"boxDL;\":0x2557, \"boxDR;\":0x2554,\r\n  \"boxDl;\":0x2556, \"boxDr;\":0x2553,\r\n  \"boxH;\":0x2550, \"boxHD;\":0x2566,\r\n  \"boxHU;\":0x2569, \"boxHd;\":0x2564,\r\n  \"boxHu;\":0x2567, \"boxUL;\":0x255d,\r\n  \"boxUR;\":0x255a, \"boxUl;\":0x255c,\r\n  \"boxUr;\":0x2559, \"boxV;\":0x2551,\r\n  \"boxVH;\":0x256c, \"boxVL;\":0x2563,\r\n  \"boxVR;\":0x2560, \"boxVh;\":0x256b,\r\n  \"boxVl;\":0x2562, \"boxVr;\":0x255f,\r\n  \"boxbox;\":0x29c9, \"boxdL;\":0x2555,\r\n  \"boxdR;\":0x2552, \"boxdl;\":0x2510,\r\n  \"boxdr;\":0x250c, \"boxh;\":0x2500,\r\n  \"boxhD;\":0x2565, \"boxhU;\":0x2568,\r\n  \"boxhd;\":0x252c, \"boxhu;\":0x2534,\r\n  \"boxminus;\":0x229f, \"boxplus;\":0x229e,\r\n  \"boxtimes;\":0x22a0, \"boxuL;\":0x255b,\r\n  \"boxuR;\":0x2558, \"boxul;\":0x2518,\r\n  \"boxur;\":0x2514, \"boxv;\":0x2502,\r\n  \"boxvH;\":0x256a, \"boxvL;\":0x2561,\r\n  \"boxvR;\":0x255e, \"boxvh;\":0x253c,\r\n  \"boxvl;\":0x2524, \"boxvr;\":0x251c,\r\n  \"bprime;\":0x2035, \"breve;\":0x2d8,\r\n  \"brvbar\":0xa6, \"brvbar;\":0xa6,\r\n  \"bscr;\":[0xd835,0xdcb7], \"bsemi;\":0x204f,\r\n  \"bsim;\":0x223d, \"bsime;\":0x22cd,\r\n  \"bsol;\":0x5c, \"bsolb;\":0x29c5,\r\n  \"bsolhsub;\":0x27c8, \"bull;\":0x2022,\r\n  \"bullet;\":0x2022, \"bump;\":0x224e,\r\n  \"bumpE;\":0x2aae, \"bumpe;\":0x224f,\r\n  \"bumpeq;\":0x224f, \"cacute;\":0x107,\r\n  \"cap;\":0x2229, \"capand;\":0x2a44,\r\n  \"capbrcup;\":0x2a49, \"capcap;\":0x2a4b,\r\n  \"capcup;\":0x2a47, \"capdot;\":0x2a40,\r\n  \"caps;\":[0x2229,0xfe00], \"caret;\":0x2041,\r\n  \"caron;\":0x2c7, \"ccaps;\":0x2a4d,\r\n  \"ccaron;\":0x10d, \"ccedil\":0xe7,\r\n  \"ccedil;\":0xe7, \"ccirc;\":0x109,\r\n  \"ccups;\":0x2a4c, \"ccupssm;\":0x2a50,\r\n  \"cdot;\":0x10b, \"cedil\":0xb8,\r\n  \"cedil;\":0xb8, \"cemptyv;\":0x29b2,\r\n  \"cent\":0xa2, \"cent;\":0xa2,\r\n  \"centerdot;\":0xb7, \"cfr;\":[0xd835,0xdd20],\r\n  \"chcy;\":0x447, \"check;\":0x2713,\r\n  \"checkmark;\":0x2713, \"chi;\":0x3c7,\r\n  \"cir;\":0x25cb, \"cirE;\":0x29c3,\r\n  \"circ;\":0x2c6, \"circeq;\":0x2257,\r\n  \"circlearrowleft;\":0x21ba, \"circlearrowright;\":0x21bb,\r\n  \"circledR;\":0xae, \"circledS;\":0x24c8,\r\n  \"circledast;\":0x229b, \"circledcirc;\":0x229a,\r\n  \"circleddash;\":0x229d, \"cire;\":0x2257,\r\n  \"cirfnint;\":0x2a10, \"cirmid;\":0x2aef,\r\n  \"cirscir;\":0x29c2, \"clubs;\":0x2663,\r\n  \"clubsuit;\":0x2663, \"colon;\":0x3a,\r\n  \"colone;\":0x2254, \"coloneq;\":0x2254,\r\n  \"comma;\":0x2c, \"commat;\":0x40,\r\n  \"comp;\":0x2201, \"compfn;\":0x2218,\r\n  \"complement;\":0x2201, \"complexes;\":0x2102,\r\n  \"cong;\":0x2245, \"congdot;\":0x2a6d,\r\n  \"conint;\":0x222e, \"copf;\":[0xd835,0xdd54],\r\n  \"coprod;\":0x2210, \"copy\":0xa9,\r\n  \"copy;\":0xa9, \"copysr;\":0x2117,\r\n  \"crarr;\":0x21b5, \"cross;\":0x2717,\r\n  \"cscr;\":[0xd835,0xdcb8], \"csub;\":0x2acf,\r\n  \"csube;\":0x2ad1, \"csup;\":0x2ad0,\r\n  \"csupe;\":0x2ad2, \"ctdot;\":0x22ef,\r\n  \"cudarrl;\":0x2938, \"cudarrr;\":0x2935,\r\n  \"cuepr;\":0x22de, \"cuesc;\":0x22df,\r\n  \"cularr;\":0x21b6, \"cularrp;\":0x293d,\r\n  \"cup;\":0x222a, \"cupbrcap;\":0x2a48,\r\n  \"cupcap;\":0x2a46, \"cupcup;\":0x2a4a,\r\n  \"cupdot;\":0x228d, \"cupor;\":0x2a45,\r\n  \"cups;\":[0x222a,0xfe00], \"curarr;\":0x21b7,\r\n  \"curarrm;\":0x293c, \"curlyeqprec;\":0x22de,\r\n  \"curlyeqsucc;\":0x22df, \"curlyvee;\":0x22ce,\r\n  \"curlywedge;\":0x22cf, \"curren\":0xa4,\r\n  \"curren;\":0xa4, \"curvearrowleft;\":0x21b6,\r\n  \"curvearrowright;\":0x21b7, \"cuvee;\":0x22ce,\r\n  \"cuwed;\":0x22cf, \"cwconint;\":0x2232,\r\n  \"cwint;\":0x2231, \"cylcty;\":0x232d,\r\n  \"dArr;\":0x21d3, \"dHar;\":0x2965,\r\n  \"dagger;\":0x2020, \"daleth;\":0x2138,\r\n  \"darr;\":0x2193, \"dash;\":0x2010,\r\n  \"dashv;\":0x22a3, \"dbkarow;\":0x290f,\r\n  \"dblac;\":0x2dd, \"dcaron;\":0x10f,\r\n  \"dcy;\":0x434, \"dd;\":0x2146,\r\n  \"ddagger;\":0x2021, \"ddarr;\":0x21ca,\r\n  \"ddotseq;\":0x2a77, \"deg\":0xb0,\r\n  \"deg;\":0xb0, \"delta;\":0x3b4,\r\n  \"demptyv;\":0x29b1, \"dfisht;\":0x297f,\r\n  \"dfr;\":[0xd835,0xdd21], \"dharl;\":0x21c3,\r\n  \"dharr;\":0x21c2, \"diam;\":0x22c4,\r\n  \"diamond;\":0x22c4, \"diamondsuit;\":0x2666,\r\n  \"diams;\":0x2666, \"die;\":0xa8,\r\n  \"digamma;\":0x3dd, \"disin;\":0x22f2,\r\n  \"div;\":0xf7, \"divide\":0xf7,\r\n  \"divide;\":0xf7, \"divideontimes;\":0x22c7,\r\n  \"divonx;\":0x22c7, \"djcy;\":0x452,\r\n  \"dlcorn;\":0x231e, \"dlcrop;\":0x230d,\r\n  \"dollar;\":0x24, \"dopf;\":[0xd835,0xdd55],\r\n  \"dot;\":0x2d9, \"doteq;\":0x2250,\r\n  \"doteqdot;\":0x2251, \"dotminus;\":0x2238,\r\n  \"dotplus;\":0x2214, \"dotsquare;\":0x22a1,\r\n  \"doublebarwedge;\":0x2306, \"downarrow;\":0x2193,\r\n  \"downdownarrows;\":0x21ca, \"downharpoonleft;\":0x21c3,\r\n  \"downharpoonright;\":0x21c2, \"drbkarow;\":0x2910,\r\n  \"drcorn;\":0x231f, \"drcrop;\":0x230c,\r\n  \"dscr;\":[0xd835,0xdcb9], \"dscy;\":0x455,\r\n  \"dsol;\":0x29f6, \"dstrok;\":0x111,\r\n  \"dtdot;\":0x22f1, \"dtri;\":0x25bf,\r\n  \"dtrif;\":0x25be, \"duarr;\":0x21f5,\r\n  \"duhar;\":0x296f, \"dwangle;\":0x29a6,\r\n  \"dzcy;\":0x45f, \"dzigrarr;\":0x27ff,\r\n  \"eDDot;\":0x2a77, \"eDot;\":0x2251,\r\n  \"eacute\":0xe9, \"eacute;\":0xe9,\r\n  \"easter;\":0x2a6e, \"ecaron;\":0x11b,\r\n  \"ecir;\":0x2256, \"ecirc\":0xea,\r\n  \"ecirc;\":0xea, \"ecolon;\":0x2255,\r\n  \"ecy;\":0x44d, \"edot;\":0x117,\r\n  \"ee;\":0x2147, \"efDot;\":0x2252,\r\n  \"efr;\":[0xd835,0xdd22], \"eg;\":0x2a9a,\r\n  \"egrave\":0xe8, \"egrave;\":0xe8,\r\n  \"egs;\":0x2a96, \"egsdot;\":0x2a98,\r\n  \"el;\":0x2a99, \"elinters;\":0x23e7,\r\n  \"ell;\":0x2113, \"els;\":0x2a95,\r\n  \"elsdot;\":0x2a97, \"emacr;\":0x113,\r\n  \"empty;\":0x2205, \"emptyset;\":0x2205,\r\n  \"emptyv;\":0x2205, \"emsp13;\":0x2004,\r\n  \"emsp14;\":0x2005, \"emsp;\":0x2003,\r\n  \"eng;\":0x14b, \"ensp;\":0x2002,\r\n  \"eogon;\":0x119, \"eopf;\":[0xd835,0xdd56],\r\n  \"epar;\":0x22d5, \"eparsl;\":0x29e3,\r\n  \"eplus;\":0x2a71, \"epsi;\":0x3b5,\r\n  \"epsilon;\":0x3b5, \"epsiv;\":0x3f5,\r\n  \"eqcirc;\":0x2256, \"eqcolon;\":0x2255,\r\n  \"eqsim;\":0x2242, \"eqslantgtr;\":0x2a96,\r\n  \"eqslantless;\":0x2a95, \"equals;\":0x3d,\r\n  \"equest;\":0x225f, \"equiv;\":0x2261,\r\n  \"equivDD;\":0x2a78, \"eqvparsl;\":0x29e5,\r\n  \"erDot;\":0x2253, \"erarr;\":0x2971,\r\n  \"escr;\":0x212f, \"esdot;\":0x2250,\r\n  \"esim;\":0x2242, \"eta;\":0x3b7,\r\n  \"eth\":0xf0, \"eth;\":0xf0,\r\n  \"euml\":0xeb, \"euml;\":0xeb,\r\n  \"euro;\":0x20ac, \"excl;\":0x21,\r\n  \"exist;\":0x2203, \"expectation;\":0x2130,\r\n  \"exponentiale;\":0x2147, \"fallingdotseq;\":0x2252,\r\n  \"fcy;\":0x444, \"female;\":0x2640,\r\n  \"ffilig;\":0xfb03, \"fflig;\":0xfb00,\r\n  \"ffllig;\":0xfb04, \"ffr;\":[0xd835,0xdd23],\r\n  \"filig;\":0xfb01, \"fjlig;\":[0x66,0x6a],\r\n  \"flat;\":0x266d, \"fllig;\":0xfb02,\r\n  \"fltns;\":0x25b1, \"fnof;\":0x192,\r\n  \"fopf;\":[0xd835,0xdd57], \"forall;\":0x2200,\r\n  \"fork;\":0x22d4, \"forkv;\":0x2ad9,\r\n  \"fpartint;\":0x2a0d, \"frac12\":0xbd,\r\n  \"frac12;\":0xbd, \"frac13;\":0x2153,\r\n  \"frac14\":0xbc, \"frac14;\":0xbc,\r\n  \"frac15;\":0x2155, \"frac16;\":0x2159,\r\n  \"frac18;\":0x215b, \"frac23;\":0x2154,\r\n  \"frac25;\":0x2156, \"frac34\":0xbe,\r\n  \"frac34;\":0xbe, \"frac35;\":0x2157,\r\n  \"frac38;\":0x215c, \"frac45;\":0x2158,\r\n  \"frac56;\":0x215a, \"frac58;\":0x215d,\r\n  \"frac78;\":0x215e, \"frasl;\":0x2044,\r\n  \"frown;\":0x2322, \"fscr;\":[0xd835,0xdcbb],\r\n  \"gE;\":0x2267, \"gEl;\":0x2a8c,\r\n  \"gacute;\":0x1f5, \"gamma;\":0x3b3,\r\n  \"gammad;\":0x3dd, \"gap;\":0x2a86,\r\n  \"gbreve;\":0x11f, \"gcirc;\":0x11d,\r\n  \"gcy;\":0x433, \"gdot;\":0x121,\r\n  \"ge;\":0x2265, \"gel;\":0x22db,\r\n  \"geq;\":0x2265, \"geqq;\":0x2267,\r\n  \"geqslant;\":0x2a7e, \"ges;\":0x2a7e,\r\n  \"gescc;\":0x2aa9, \"gesdot;\":0x2a80,\r\n  \"gesdoto;\":0x2a82, \"gesdotol;\":0x2a84,\r\n  \"gesl;\":[0x22db,0xfe00], \"gesles;\":0x2a94,\r\n  \"gfr;\":[0xd835,0xdd24], \"gg;\":0x226b,\r\n  \"ggg;\":0x22d9, \"gimel;\":0x2137,\r\n  \"gjcy;\":0x453, \"gl;\":0x2277,\r\n  \"glE;\":0x2a92, \"gla;\":0x2aa5,\r\n  \"glj;\":0x2aa4, \"gnE;\":0x2269,\r\n  \"gnap;\":0x2a8a, \"gnapprox;\":0x2a8a,\r\n  \"gne;\":0x2a88, \"gneq;\":0x2a88,\r\n  \"gneqq;\":0x2269, \"gnsim;\":0x22e7,\r\n  \"gopf;\":[0xd835,0xdd58], \"grave;\":0x60,\r\n  \"gscr;\":0x210a, \"gsim;\":0x2273,\r\n  \"gsime;\":0x2a8e, \"gsiml;\":0x2a90,\r\n  \"gt\":0x3e, \"gt;\":0x3e,\r\n  \"gtcc;\":0x2aa7, \"gtcir;\":0x2a7a,\r\n  \"gtdot;\":0x22d7, \"gtlPar;\":0x2995,\r\n  \"gtquest;\":0x2a7c, \"gtrapprox;\":0x2a86,\r\n  \"gtrarr;\":0x2978, \"gtrdot;\":0x22d7,\r\n  \"gtreqless;\":0x22db, \"gtreqqless;\":0x2a8c,\r\n  \"gtrless;\":0x2277, \"gtrsim;\":0x2273,\r\n  \"gvertneqq;\":[0x2269,0xfe00], \"gvnE;\":[0x2269,0xfe00],\r\n  \"hArr;\":0x21d4, \"hairsp;\":0x200a,\r\n  \"half;\":0xbd, \"hamilt;\":0x210b,\r\n  \"hardcy;\":0x44a, \"harr;\":0x2194,\r\n  \"harrcir;\":0x2948, \"harrw;\":0x21ad,\r\n  \"hbar;\":0x210f, \"hcirc;\":0x125,\r\n  \"hearts;\":0x2665, \"heartsuit;\":0x2665,\r\n  \"hellip;\":0x2026, \"hercon;\":0x22b9,\r\n  \"hfr;\":[0xd835,0xdd25], \"hksearow;\":0x2925,\r\n  \"hkswarow;\":0x2926, \"hoarr;\":0x21ff,\r\n  \"homtht;\":0x223b, \"hookleftarrow;\":0x21a9,\r\n  \"hookrightarrow;\":0x21aa, \"hopf;\":[0xd835,0xdd59],\r\n  \"horbar;\":0x2015, \"hscr;\":[0xd835,0xdcbd],\r\n  \"hslash;\":0x210f, \"hstrok;\":0x127,\r\n  \"hybull;\":0x2043, \"hyphen;\":0x2010,\r\n  \"iacute\":0xed, \"iacute;\":0xed,\r\n  \"ic;\":0x2063, \"icirc\":0xee,\r\n  \"icirc;\":0xee, \"icy;\":0x438,\r\n  \"iecy;\":0x435, \"iexcl\":0xa1,\r\n  \"iexcl;\":0xa1, \"iff;\":0x21d4,\r\n  \"ifr;\":[0xd835,0xdd26], \"igrave\":0xec,\r\n  \"igrave;\":0xec, \"ii;\":0x2148,\r\n  \"iiiint;\":0x2a0c, \"iiint;\":0x222d,\r\n  \"iinfin;\":0x29dc, \"iiota;\":0x2129,\r\n  \"ijlig;\":0x133, \"imacr;\":0x12b,\r\n  \"image;\":0x2111, \"imagline;\":0x2110,\r\n  \"imagpart;\":0x2111, \"imath;\":0x131,\r\n  \"imof;\":0x22b7, \"imped;\":0x1b5,\r\n  \"in;\":0x2208, \"incare;\":0x2105,\r\n  \"infin;\":0x221e, \"infintie;\":0x29dd,\r\n  \"inodot;\":0x131, \"int;\":0x222b,\r\n  \"intcal;\":0x22ba, \"integers;\":0x2124,\r\n  \"intercal;\":0x22ba, \"intlarhk;\":0x2a17,\r\n  \"intprod;\":0x2a3c, \"iocy;\":0x451,\r\n  \"iogon;\":0x12f, \"iopf;\":[0xd835,0xdd5a],\r\n  \"iota;\":0x3b9, \"iprod;\":0x2a3c,\r\n  \"iquest\":0xbf, \"iquest;\":0xbf,\r\n  \"iscr;\":[0xd835,0xdcbe], \"isin;\":0x2208,\r\n  \"isinE;\":0x22f9, \"isindot;\":0x22f5,\r\n  \"isins;\":0x22f4, \"isinsv;\":0x22f3,\r\n  \"isinv;\":0x2208, \"it;\":0x2062,\r\n  \"itilde;\":0x129, \"iukcy;\":0x456,\r\n  \"iuml\":0xef, \"iuml;\":0xef,\r\n  \"jcirc;\":0x135, \"jcy;\":0x439,\r\n  \"jfr;\":[0xd835,0xdd27], \"jmath;\":0x237,\r\n  \"jopf;\":[0xd835,0xdd5b], \"jscr;\":[0xd835,0xdcbf],\r\n  \"jsercy;\":0x458, \"jukcy;\":0x454,\r\n  \"kappa;\":0x3ba, \"kappav;\":0x3f0,\r\n  \"kcedil;\":0x137, \"kcy;\":0x43a,\r\n  \"kfr;\":[0xd835,0xdd28], \"kgreen;\":0x138,\r\n  \"khcy;\":0x445, \"kjcy;\":0x45c,\r\n  \"kopf;\":[0xd835,0xdd5c], \"kscr;\":[0xd835,0xdcc0],\r\n  \"lAarr;\":0x21da, \"lArr;\":0x21d0,\r\n  \"lAtail;\":0x291b, \"lBarr;\":0x290e,\r\n  \"lE;\":0x2266, \"lEg;\":0x2a8b,\r\n  \"lHar;\":0x2962, \"lacute;\":0x13a,\r\n  \"laemptyv;\":0x29b4, \"lagran;\":0x2112,\r\n  \"lambda;\":0x3bb, \"lang;\":0x27e8,\r\n  \"langd;\":0x2991, \"langle;\":0x27e8,\r\n  \"lap;\":0x2a85, \"laquo\":0xab,\r\n  \"laquo;\":0xab, \"larr;\":0x2190,\r\n  \"larrb;\":0x21e4, \"larrbfs;\":0x291f,\r\n  \"larrfs;\":0x291d, \"larrhk;\":0x21a9,\r\n  \"larrlp;\":0x21ab, \"larrpl;\":0x2939,\r\n  \"larrsim;\":0x2973, \"larrtl;\":0x21a2,\r\n  \"lat;\":0x2aab, \"latail;\":0x2919,\r\n  \"late;\":0x2aad, \"lates;\":[0x2aad,0xfe00],\r\n  \"lbarr;\":0x290c, \"lbbrk;\":0x2772,\r\n  \"lbrace;\":0x7b, \"lbrack;\":0x5b,\r\n  \"lbrke;\":0x298b, \"lbrksld;\":0x298f,\r\n  \"lbrkslu;\":0x298d, \"lcaron;\":0x13e,\r\n  \"lcedil;\":0x13c, \"lceil;\":0x2308,\r\n  \"lcub;\":0x7b, \"lcy;\":0x43b,\r\n  \"ldca;\":0x2936, \"ldquo;\":0x201c,\r\n  \"ldquor;\":0x201e, \"ldrdhar;\":0x2967,\r\n  \"ldrushar;\":0x294b, \"ldsh;\":0x21b2,\r\n  \"le;\":0x2264, \"leftarrow;\":0x2190,\r\n  \"leftarrowtail;\":0x21a2, \"leftharpoondown;\":0x21bd,\r\n  \"leftharpoonup;\":0x21bc, \"leftleftarrows;\":0x21c7,\r\n  \"leftrightarrow;\":0x2194, \"leftrightarrows;\":0x21c6,\r\n  \"leftrightharpoons;\":0x21cb, \"leftrightsquigarrow;\":0x21ad,\r\n  \"leftthreetimes;\":0x22cb, \"leg;\":0x22da,\r\n  \"leq;\":0x2264, \"leqq;\":0x2266,\r\n  \"leqslant;\":0x2a7d, \"les;\":0x2a7d,\r\n  \"lescc;\":0x2aa8, \"lesdot;\":0x2a7f,\r\n  \"lesdoto;\":0x2a81, \"lesdotor;\":0x2a83,\r\n  \"lesg;\":[0x22da,0xfe00], \"lesges;\":0x2a93,\r\n  \"lessapprox;\":0x2a85, \"lessdot;\":0x22d6,\r\n  \"lesseqgtr;\":0x22da, \"lesseqqgtr;\":0x2a8b,\r\n  \"lessgtr;\":0x2276, \"lesssim;\":0x2272,\r\n  \"lfisht;\":0x297c, \"lfloor;\":0x230a,\r\n  \"lfr;\":[0xd835,0xdd29], \"lg;\":0x2276,\r\n  \"lgE;\":0x2a91, \"lhard;\":0x21bd,\r\n  \"lharu;\":0x21bc, \"lharul;\":0x296a,\r\n  \"lhblk;\":0x2584, \"ljcy;\":0x459,\r\n  \"ll;\":0x226a, \"llarr;\":0x21c7,\r\n  \"llcorner;\":0x231e, \"llhard;\":0x296b,\r\n  \"lltri;\":0x25fa, \"lmidot;\":0x140,\r\n  \"lmoust;\":0x23b0, \"lmoustache;\":0x23b0,\r\n  \"lnE;\":0x2268, \"lnap;\":0x2a89,\r\n  \"lnapprox;\":0x2a89, \"lne;\":0x2a87,\r\n  \"lneq;\":0x2a87, \"lneqq;\":0x2268,\r\n  \"lnsim;\":0x22e6, \"loang;\":0x27ec,\r\n  \"loarr;\":0x21fd, \"lobrk;\":0x27e6,\r\n  \"longleftarrow;\":0x27f5, \"longleftrightarrow;\":0x27f7,\r\n  \"longmapsto;\":0x27fc, \"longrightarrow;\":0x27f6,\r\n  \"looparrowleft;\":0x21ab, \"looparrowright;\":0x21ac,\r\n  \"lopar;\":0x2985, \"lopf;\":[0xd835,0xdd5d],\r\n  \"loplus;\":0x2a2d, \"lotimes;\":0x2a34,\r\n  \"lowast;\":0x2217, \"lowbar;\":0x5f,\r\n  \"loz;\":0x25ca, \"lozenge;\":0x25ca,\r\n  \"lozf;\":0x29eb, \"lpar;\":0x28,\r\n  \"lparlt;\":0x2993, \"lrarr;\":0x21c6,\r\n  \"lrcorner;\":0x231f, \"lrhar;\":0x21cb,\r\n  \"lrhard;\":0x296d, \"lrm;\":0x200e,\r\n  \"lrtri;\":0x22bf, \"lsaquo;\":0x2039,\r\n  \"lscr;\":[0xd835,0xdcc1], \"lsh;\":0x21b0,\r\n  \"lsim;\":0x2272, \"lsime;\":0x2a8d,\r\n  \"lsimg;\":0x2a8f, \"lsqb;\":0x5b,\r\n  \"lsquo;\":0x2018, \"lsquor;\":0x201a,\r\n  \"lstrok;\":0x142, \"lt\":0x3c,\r\n  \"lt;\":0x3c, \"ltcc;\":0x2aa6,\r\n  \"ltcir;\":0x2a79, \"ltdot;\":0x22d6,\r\n  \"lthree;\":0x22cb, \"ltimes;\":0x22c9,\r\n  \"ltlarr;\":0x2976, \"ltquest;\":0x2a7b,\r\n  \"ltrPar;\":0x2996, \"ltri;\":0x25c3,\r\n  \"ltrie;\":0x22b4, \"ltrif;\":0x25c2,\r\n  \"lurdshar;\":0x294a, \"luruhar;\":0x2966,\r\n  \"lvertneqq;\":[0x2268,0xfe00], \"lvnE;\":[0x2268,0xfe00],\r\n  \"mDDot;\":0x223a, \"macr\":0xaf,\r\n  \"macr;\":0xaf, \"male;\":0x2642,\r\n  \"malt;\":0x2720, \"maltese;\":0x2720,\r\n  \"map;\":0x21a6, \"mapsto;\":0x21a6,\r\n  \"mapstodown;\":0x21a7, \"mapstoleft;\":0x21a4,\r\n  \"mapstoup;\":0x21a5, \"marker;\":0x25ae,\r\n  \"mcomma;\":0x2a29, \"mcy;\":0x43c,\r\n  \"mdash;\":0x2014, \"measuredangle;\":0x2221,\r\n  \"mfr;\":[0xd835,0xdd2a], \"mho;\":0x2127,\r\n  \"micro\":0xb5, \"micro;\":0xb5,\r\n  \"mid;\":0x2223, \"midast;\":0x2a,\r\n  \"midcir;\":0x2af0, \"middot\":0xb7,\r\n  \"middot;\":0xb7, \"minus;\":0x2212,\r\n  \"minusb;\":0x229f, \"minusd;\":0x2238,\r\n  \"minusdu;\":0x2a2a, \"mlcp;\":0x2adb,\r\n  \"mldr;\":0x2026, \"mnplus;\":0x2213,\r\n  \"models;\":0x22a7, \"mopf;\":[0xd835,0xdd5e],\r\n  \"mp;\":0x2213, \"mscr;\":[0xd835,0xdcc2],\r\n  \"mstpos;\":0x223e, \"mu;\":0x3bc,\r\n  \"multimap;\":0x22b8, \"mumap;\":0x22b8,\r\n  \"nGg;\":[0x22d9,0x338], \"nGt;\":[0x226b,0x20d2],\r\n  \"nGtv;\":[0x226b,0x338], \"nLeftarrow;\":0x21cd,\r\n  \"nLeftrightarrow;\":0x21ce, \"nLl;\":[0x22d8,0x338],\r\n  \"nLt;\":[0x226a,0x20d2], \"nLtv;\":[0x226a,0x338],\r\n  \"nRightarrow;\":0x21cf, \"nVDash;\":0x22af,\r\n  \"nVdash;\":0x22ae, \"nabla;\":0x2207,\r\n  \"nacute;\":0x144, \"nang;\":[0x2220,0x20d2],\r\n  \"nap;\":0x2249, \"napE;\":[0x2a70,0x338],\r\n  \"napid;\":[0x224b,0x338], \"napos;\":0x149,\r\n  \"napprox;\":0x2249, \"natur;\":0x266e,\r\n  \"natural;\":0x266e, \"naturals;\":0x2115,\r\n  \"nbsp\":0xa0, \"nbsp;\":0xa0,\r\n  \"nbump;\":[0x224e,0x338], \"nbumpe;\":[0x224f,0x338],\r\n  \"ncap;\":0x2a43, \"ncaron;\":0x148,\r\n  \"ncedil;\":0x146, \"ncong;\":0x2247,\r\n  \"ncongdot;\":[0x2a6d,0x338], \"ncup;\":0x2a42,\r\n  \"ncy;\":0x43d, \"ndash;\":0x2013,\r\n  \"ne;\":0x2260, \"neArr;\":0x21d7,\r\n  \"nearhk;\":0x2924, \"nearr;\":0x2197,\r\n  \"nearrow;\":0x2197, \"nedot;\":[0x2250,0x338],\r\n  \"nequiv;\":0x2262, \"nesear;\":0x2928,\r\n  \"nesim;\":[0x2242,0x338], \"nexist;\":0x2204,\r\n  \"nexists;\":0x2204, \"nfr;\":[0xd835,0xdd2b],\r\n  \"ngE;\":[0x2267,0x338], \"nge;\":0x2271,\r\n  \"ngeq;\":0x2271, \"ngeqq;\":[0x2267,0x338],\r\n  \"ngeqslant;\":[0x2a7e,0x338], \"nges;\":[0x2a7e,0x338],\r\n  \"ngsim;\":0x2275, \"ngt;\":0x226f,\r\n  \"ngtr;\":0x226f, \"nhArr;\":0x21ce,\r\n  \"nharr;\":0x21ae, \"nhpar;\":0x2af2,\r\n  \"ni;\":0x220b, \"nis;\":0x22fc,\r\n  \"nisd;\":0x22fa, \"niv;\":0x220b,\r\n  \"njcy;\":0x45a, \"nlArr;\":0x21cd,\r\n  \"nlE;\":[0x2266,0x338], \"nlarr;\":0x219a,\r\n  \"nldr;\":0x2025, \"nle;\":0x2270,\r\n  \"nleftarrow;\":0x219a, \"nleftrightarrow;\":0x21ae,\r\n  \"nleq;\":0x2270, \"nleqq;\":[0x2266,0x338],\r\n  \"nleqslant;\":[0x2a7d,0x338], \"nles;\":[0x2a7d,0x338],\r\n  \"nless;\":0x226e, \"nlsim;\":0x2274,\r\n  \"nlt;\":0x226e, \"nltri;\":0x22ea,\r\n  \"nltrie;\":0x22ec, \"nmid;\":0x2224,\r\n  \"nopf;\":[0xd835,0xdd5f], \"not\":0xac,\r\n  \"not;\":0xac, \"notin;\":0x2209,\r\n  \"notinE;\":[0x22f9,0x338], \"notindot;\":[0x22f5,0x338],\r\n  \"notinva;\":0x2209, \"notinvb;\":0x22f7,\r\n  \"notinvc;\":0x22f6, \"notni;\":0x220c,\r\n  \"notniva;\":0x220c, \"notnivb;\":0x22fe,\r\n  \"notnivc;\":0x22fd, \"npar;\":0x2226,\r\n  \"nparallel;\":0x2226, \"nparsl;\":[0x2afd,0x20e5],\r\n  \"npart;\":[0x2202,0x338], \"npolint;\":0x2a14,\r\n  \"npr;\":0x2280, \"nprcue;\":0x22e0,\r\n  \"npre;\":[0x2aaf,0x338], \"nprec;\":0x2280,\r\n  \"npreceq;\":[0x2aaf,0x338], \"nrArr;\":0x21cf,\r\n  \"nrarr;\":0x219b, \"nrarrc;\":[0x2933,0x338],\r\n  \"nrarrw;\":[0x219d,0x338], \"nrightarrow;\":0x219b,\r\n  \"nrtri;\":0x22eb, \"nrtrie;\":0x22ed,\r\n  \"nsc;\":0x2281, \"nsccue;\":0x22e1,\r\n  \"nsce;\":[0x2ab0,0x338], \"nscr;\":[0xd835,0xdcc3],\r\n  \"nshortmid;\":0x2224, \"nshortparallel;\":0x2226,\r\n  \"nsim;\":0x2241, \"nsime;\":0x2244,\r\n  \"nsimeq;\":0x2244, \"nsmid;\":0x2224,\r\n  \"nspar;\":0x2226, \"nsqsube;\":0x22e2,\r\n  \"nsqsupe;\":0x22e3, \"nsub;\":0x2284,\r\n  \"nsubE;\":[0x2ac5,0x338], \"nsube;\":0x2288,\r\n  \"nsubset;\":[0x2282,0x20d2], \"nsubseteq;\":0x2288,\r\n  \"nsubseteqq;\":[0x2ac5,0x338], \"nsucc;\":0x2281,\r\n  \"nsucceq;\":[0x2ab0,0x338], \"nsup;\":0x2285,\r\n  \"nsupE;\":[0x2ac6,0x338], \"nsupe;\":0x2289,\r\n  \"nsupset;\":[0x2283,0x20d2], \"nsupseteq;\":0x2289,\r\n  \"nsupseteqq;\":[0x2ac6,0x338], \"ntgl;\":0x2279,\r\n  \"ntilde\":0xf1, \"ntilde;\":0xf1,\r\n  \"ntlg;\":0x2278, \"ntriangleleft;\":0x22ea,\r\n  \"ntrianglelefteq;\":0x22ec, \"ntriangleright;\":0x22eb,\r\n  \"ntrianglerighteq;\":0x22ed, \"nu;\":0x3bd,\r\n  \"num;\":0x23, \"numero;\":0x2116,\r\n  \"numsp;\":0x2007, \"nvDash;\":0x22ad,\r\n  \"nvHarr;\":0x2904, \"nvap;\":[0x224d,0x20d2],\r\n  \"nvdash;\":0x22ac, \"nvge;\":[0x2265,0x20d2],\r\n  \"nvgt;\":[0x3e,0x20d2], \"nvinfin;\":0x29de,\r\n  \"nvlArr;\":0x2902, \"nvle;\":[0x2264,0x20d2],\r\n  \"nvlt;\":[0x3c,0x20d2], \"nvltrie;\":[0x22b4,0x20d2],\r\n  \"nvrArr;\":0x2903, \"nvrtrie;\":[0x22b5,0x20d2],\r\n  \"nvsim;\":[0x223c,0x20d2], \"nwArr;\":0x21d6,\r\n  \"nwarhk;\":0x2923, \"nwarr;\":0x2196,\r\n  \"nwarrow;\":0x2196, \"nwnear;\":0x2927,\r\n  \"oS;\":0x24c8, \"oacute\":0xf3,\r\n  \"oacute;\":0xf3, \"oast;\":0x229b,\r\n  \"ocir;\":0x229a, \"ocirc\":0xf4,\r\n  \"ocirc;\":0xf4, \"ocy;\":0x43e,\r\n  \"odash;\":0x229d, \"odblac;\":0x151,\r\n  \"odiv;\":0x2a38, \"odot;\":0x2299,\r\n  \"odsold;\":0x29bc, \"oelig;\":0x153,\r\n  \"ofcir;\":0x29bf, \"ofr;\":[0xd835,0xdd2c],\r\n  \"ogon;\":0x2db, \"ograve\":0xf2,\r\n  \"ograve;\":0xf2, \"ogt;\":0x29c1,\r\n  \"ohbar;\":0x29b5, \"ohm;\":0x3a9,\r\n  \"oint;\":0x222e, \"olarr;\":0x21ba,\r\n  \"olcir;\":0x29be, \"olcross;\":0x29bb,\r\n  \"oline;\":0x203e, \"olt;\":0x29c0,\r\n  \"omacr;\":0x14d, \"omega;\":0x3c9,\r\n  \"omicron;\":0x3bf, \"omid;\":0x29b6,\r\n  \"ominus;\":0x2296, \"oopf;\":[0xd835,0xdd60],\r\n  \"opar;\":0x29b7, \"operp;\":0x29b9,\r\n  \"oplus;\":0x2295, \"or;\":0x2228,\r\n  \"orarr;\":0x21bb, \"ord;\":0x2a5d,\r\n  \"order;\":0x2134, \"orderof;\":0x2134,\r\n  \"ordf\":0xaa, \"ordf;\":0xaa,\r\n  \"ordm\":0xba, \"ordm;\":0xba,\r\n  \"origof;\":0x22b6, \"oror;\":0x2a56,\r\n  \"orslope;\":0x2a57, \"orv;\":0x2a5b,\r\n  \"oscr;\":0x2134, \"oslash\":0xf8,\r\n  \"oslash;\":0xf8, \"osol;\":0x2298,\r\n  \"otilde\":0xf5, \"otilde;\":0xf5,\r\n  \"otimes;\":0x2297, \"otimesas;\":0x2a36,\r\n  \"ouml\":0xf6, \"ouml;\":0xf6,\r\n  \"ovbar;\":0x233d, \"par;\":0x2225,\r\n  \"para\":0xb6, \"para;\":0xb6,\r\n  \"parallel;\":0x2225, \"parsim;\":0x2af3,\r\n  \"parsl;\":0x2afd, \"part;\":0x2202,\r\n  \"pcy;\":0x43f, \"percnt;\":0x25,\r\n  \"period;\":0x2e, \"permil;\":0x2030,\r\n  \"perp;\":0x22a5, \"pertenk;\":0x2031,\r\n  \"pfr;\":[0xd835,0xdd2d], \"phi;\":0x3c6,\r\n  \"phiv;\":0x3d5, \"phmmat;\":0x2133,\r\n  \"phone;\":0x260e, \"pi;\":0x3c0,\r\n  \"pitchfork;\":0x22d4, \"piv;\":0x3d6,\r\n  \"planck;\":0x210f, \"planckh;\":0x210e,\r\n  \"plankv;\":0x210f, \"plus;\":0x2b,\r\n  \"plusacir;\":0x2a23, \"plusb;\":0x229e,\r\n  \"pluscir;\":0x2a22, \"plusdo;\":0x2214,\r\n  \"plusdu;\":0x2a25, \"pluse;\":0x2a72,\r\n  \"plusmn\":0xb1, \"plusmn;\":0xb1,\r\n  \"plussim;\":0x2a26, \"plustwo;\":0x2a27,\r\n  \"pm;\":0xb1, \"pointint;\":0x2a15,\r\n  \"popf;\":[0xd835,0xdd61], \"pound\":0xa3,\r\n  \"pound;\":0xa3, \"pr;\":0x227a,\r\n  \"prE;\":0x2ab3, \"prap;\":0x2ab7,\r\n  \"prcue;\":0x227c, \"pre;\":0x2aaf,\r\n  \"prec;\":0x227a, \"precapprox;\":0x2ab7,\r\n  \"preccurlyeq;\":0x227c, \"preceq;\":0x2aaf,\r\n  \"precnapprox;\":0x2ab9, \"precneqq;\":0x2ab5,\r\n  \"precnsim;\":0x22e8, \"precsim;\":0x227e,\r\n  \"prime;\":0x2032, \"primes;\":0x2119,\r\n  \"prnE;\":0x2ab5, \"prnap;\":0x2ab9,\r\n  \"prnsim;\":0x22e8, \"prod;\":0x220f,\r\n  \"profalar;\":0x232e, \"profline;\":0x2312,\r\n  \"profsurf;\":0x2313, \"prop;\":0x221d,\r\n  \"propto;\":0x221d, \"prsim;\":0x227e,\r\n  \"prurel;\":0x22b0, \"pscr;\":[0xd835,0xdcc5],\r\n  \"psi;\":0x3c8, \"puncsp;\":0x2008,\r\n  \"qfr;\":[0xd835,0xdd2e], \"qint;\":0x2a0c,\r\n  \"qopf;\":[0xd835,0xdd62], \"qprime;\":0x2057,\r\n  \"qscr;\":[0xd835,0xdcc6], \"quaternions;\":0x210d,\r\n  \"quatint;\":0x2a16, \"quest;\":0x3f,\r\n  \"questeq;\":0x225f, \"quot\":0x22,\r\n  \"quot;\":0x22, \"rAarr;\":0x21db,\r\n  \"rArr;\":0x21d2, \"rAtail;\":0x291c,\r\n  \"rBarr;\":0x290f, \"rHar;\":0x2964,\r\n  \"race;\":[0x223d,0x331], \"racute;\":0x155,\r\n  \"radic;\":0x221a, \"raemptyv;\":0x29b3,\r\n  \"rang;\":0x27e9, \"rangd;\":0x2992,\r\n  \"range;\":0x29a5, \"rangle;\":0x27e9,\r\n  \"raquo\":0xbb, \"raquo;\":0xbb,\r\n  \"rarr;\":0x2192, \"rarrap;\":0x2975,\r\n  \"rarrb;\":0x21e5, \"rarrbfs;\":0x2920,\r\n  \"rarrc;\":0x2933, \"rarrfs;\":0x291e,\r\n  \"rarrhk;\":0x21aa, \"rarrlp;\":0x21ac,\r\n  \"rarrpl;\":0x2945, \"rarrsim;\":0x2974,\r\n  \"rarrtl;\":0x21a3, \"rarrw;\":0x219d,\r\n  \"ratail;\":0x291a, \"ratio;\":0x2236,\r\n  \"rationals;\":0x211a, \"rbarr;\":0x290d,\r\n  \"rbbrk;\":0x2773, \"rbrace;\":0x7d,\r\n  \"rbrack;\":0x5d, \"rbrke;\":0x298c,\r\n  \"rbrksld;\":0x298e, \"rbrkslu;\":0x2990,\r\n  \"rcaron;\":0x159, \"rcedil;\":0x157,\r\n  \"rceil;\":0x2309, \"rcub;\":0x7d,\r\n  \"rcy;\":0x440, \"rdca;\":0x2937,\r\n  \"rdldhar;\":0x2969, \"rdquo;\":0x201d,\r\n  \"rdquor;\":0x201d, \"rdsh;\":0x21b3,\r\n  \"real;\":0x211c, \"realine;\":0x211b,\r\n  \"realpart;\":0x211c, \"reals;\":0x211d,\r\n  \"rect;\":0x25ad, \"reg\":0xae,\r\n  \"reg;\":0xae, \"rfisht;\":0x297d,\r\n  \"rfloor;\":0x230b, \"rfr;\":[0xd835,0xdd2f],\r\n  \"rhard;\":0x21c1, \"rharu;\":0x21c0,\r\n  \"rharul;\":0x296c, \"rho;\":0x3c1,\r\n  \"rhov;\":0x3f1, \"rightarrow;\":0x2192,\r\n  \"rightarrowtail;\":0x21a3, \"rightharpoondown;\":0x21c1,\r\n  \"rightharpoonup;\":0x21c0, \"rightleftarrows;\":0x21c4,\r\n  \"rightleftharpoons;\":0x21cc, \"rightrightarrows;\":0x21c9,\r\n  \"rightsquigarrow;\":0x219d, \"rightthreetimes;\":0x22cc,\r\n  \"ring;\":0x2da, \"risingdotseq;\":0x2253,\r\n  \"rlarr;\":0x21c4, \"rlhar;\":0x21cc,\r\n  \"rlm;\":0x200f, \"rmoust;\":0x23b1,\r\n  \"rmoustache;\":0x23b1, \"rnmid;\":0x2aee,\r\n  \"roang;\":0x27ed, \"roarr;\":0x21fe,\r\n  \"robrk;\":0x27e7, \"ropar;\":0x2986,\r\n  \"ropf;\":[0xd835,0xdd63], \"roplus;\":0x2a2e,\r\n  \"rotimes;\":0x2a35, \"rpar;\":0x29,\r\n  \"rpargt;\":0x2994, \"rppolint;\":0x2a12,\r\n  \"rrarr;\":0x21c9, \"rsaquo;\":0x203a,\r\n  \"rscr;\":[0xd835,0xdcc7], \"rsh;\":0x21b1,\r\n  \"rsqb;\":0x5d, \"rsquo;\":0x2019,\r\n  \"rsquor;\":0x2019, \"rthree;\":0x22cc,\r\n  \"rtimes;\":0x22ca, \"rtri;\":0x25b9,\r\n  \"rtrie;\":0x22b5, \"rtrif;\":0x25b8,\r\n  \"rtriltri;\":0x29ce, \"ruluhar;\":0x2968,\r\n  \"rx;\":0x211e, \"sacute;\":0x15b,\r\n  \"sbquo;\":0x201a, \"sc;\":0x227b,\r\n  \"scE;\":0x2ab4, \"scap;\":0x2ab8,\r\n  \"scaron;\":0x161, \"sccue;\":0x227d,\r\n  \"sce;\":0x2ab0, \"scedil;\":0x15f,\r\n  \"scirc;\":0x15d, \"scnE;\":0x2ab6,\r\n  \"scnap;\":0x2aba, \"scnsim;\":0x22e9,\r\n  \"scpolint;\":0x2a13, \"scsim;\":0x227f,\r\n  \"scy;\":0x441, \"sdot;\":0x22c5,\r\n  \"sdotb;\":0x22a1, \"sdote;\":0x2a66,\r\n  \"seArr;\":0x21d8, \"searhk;\":0x2925,\r\n  \"searr;\":0x2198, \"searrow;\":0x2198,\r\n  \"sect\":0xa7, \"sect;\":0xa7,\r\n  \"semi;\":0x3b, \"seswar;\":0x2929,\r\n  \"setminus;\":0x2216, \"setmn;\":0x2216,\r\n  \"sext;\":0x2736, \"sfr;\":[0xd835,0xdd30],\r\n  \"sfrown;\":0x2322, \"sharp;\":0x266f,\r\n  \"shchcy;\":0x449, \"shcy;\":0x448,\r\n  \"shortmid;\":0x2223, \"shortparallel;\":0x2225,\r\n  \"shy\":0xad, \"shy;\":0xad,\r\n  \"sigma;\":0x3c3, \"sigmaf;\":0x3c2,\r\n  \"sigmav;\":0x3c2, \"sim;\":0x223c,\r\n  \"simdot;\":0x2a6a, \"sime;\":0x2243,\r\n  \"simeq;\":0x2243, \"simg;\":0x2a9e,\r\n  \"simgE;\":0x2aa0, \"siml;\":0x2a9d,\r\n  \"simlE;\":0x2a9f, \"simne;\":0x2246,\r\n  \"simplus;\":0x2a24, \"simrarr;\":0x2972,\r\n  \"slarr;\":0x2190, \"smallsetminus;\":0x2216,\r\n  \"smashp;\":0x2a33, \"smeparsl;\":0x29e4,\r\n  \"smid;\":0x2223, \"smile;\":0x2323,\r\n  \"smt;\":0x2aaa, \"smte;\":0x2aac,\r\n  \"smtes;\":[0x2aac,0xfe00], \"softcy;\":0x44c,\r\n  \"sol;\":0x2f, \"solb;\":0x29c4,\r\n  \"solbar;\":0x233f, \"sopf;\":[0xd835,0xdd64],\r\n  \"spades;\":0x2660, \"spadesuit;\":0x2660,\r\n  \"spar;\":0x2225, \"sqcap;\":0x2293,\r\n  \"sqcaps;\":[0x2293,0xfe00], \"sqcup;\":0x2294,\r\n  \"sqcups;\":[0x2294,0xfe00], \"sqsub;\":0x228f,\r\n  \"sqsube;\":0x2291, \"sqsubset;\":0x228f,\r\n  \"sqsubseteq;\":0x2291, \"sqsup;\":0x2290,\r\n  \"sqsupe;\":0x2292, \"sqsupset;\":0x2290,\r\n  \"sqsupseteq;\":0x2292, \"squ;\":0x25a1,\r\n  \"square;\":0x25a1, \"squarf;\":0x25aa,\r\n  \"squf;\":0x25aa, \"srarr;\":0x2192,\r\n  \"sscr;\":[0xd835,0xdcc8], \"ssetmn;\":0x2216,\r\n  \"ssmile;\":0x2323, \"sstarf;\":0x22c6,\r\n  \"star;\":0x2606, \"starf;\":0x2605,\r\n  \"straightepsilon;\":0x3f5, \"straightphi;\":0x3d5,\r\n  \"strns;\":0xaf, \"sub;\":0x2282,\r\n  \"subE;\":0x2ac5, \"subdot;\":0x2abd,\r\n  \"sube;\":0x2286, \"subedot;\":0x2ac3,\r\n  \"submult;\":0x2ac1, \"subnE;\":0x2acb,\r\n  \"subne;\":0x228a, \"subplus;\":0x2abf,\r\n  \"subrarr;\":0x2979, \"subset;\":0x2282,\r\n  \"subseteq;\":0x2286, \"subseteqq;\":0x2ac5,\r\n  \"subsetneq;\":0x228a, \"subsetneqq;\":0x2acb,\r\n  \"subsim;\":0x2ac7, \"subsub;\":0x2ad5,\r\n  \"subsup;\":0x2ad3, \"succ;\":0x227b,\r\n  \"succapprox;\":0x2ab8, \"succcurlyeq;\":0x227d,\r\n  \"succeq;\":0x2ab0, \"succnapprox;\":0x2aba,\r\n  \"succneqq;\":0x2ab6, \"succnsim;\":0x22e9,\r\n  \"succsim;\":0x227f, \"sum;\":0x2211,\r\n  \"sung;\":0x266a, \"sup1\":0xb9,\r\n  \"sup1;\":0xb9, \"sup2\":0xb2,\r\n  \"sup2;\":0xb2, \"sup3\":0xb3,\r\n  \"sup3;\":0xb3, \"sup;\":0x2283,\r\n  \"supE;\":0x2ac6, \"supdot;\":0x2abe,\r\n  \"supdsub;\":0x2ad8, \"supe;\":0x2287,\r\n  \"supedot;\":0x2ac4, \"suphsol;\":0x27c9,\r\n  \"suphsub;\":0x2ad7, \"suplarr;\":0x297b,\r\n  \"supmult;\":0x2ac2, \"supnE;\":0x2acc,\r\n  \"supne;\":0x228b, \"supplus;\":0x2ac0,\r\n  \"supset;\":0x2283, \"supseteq;\":0x2287,\r\n  \"supseteqq;\":0x2ac6, \"supsetneq;\":0x228b,\r\n  \"supsetneqq;\":0x2acc, \"supsim;\":0x2ac8,\r\n  \"supsub;\":0x2ad4, \"supsup;\":0x2ad6,\r\n  \"swArr;\":0x21d9, \"swarhk;\":0x2926,\r\n  \"swarr;\":0x2199, \"swarrow;\":0x2199,\r\n  \"swnwar;\":0x292a, \"szlig\":0xdf,\r\n  \"szlig;\":0xdf, \"target;\":0x2316,\r\n  \"tau;\":0x3c4, \"tbrk;\":0x23b4,\r\n  \"tcaron;\":0x165, \"tcedil;\":0x163,\r\n  \"tcy;\":0x442, \"tdot;\":0x20db,\r\n  \"telrec;\":0x2315, \"tfr;\":[0xd835,0xdd31],\r\n  \"there4;\":0x2234, \"therefore;\":0x2234,\r\n  \"theta;\":0x3b8, \"thetasym;\":0x3d1,\r\n  \"thetav;\":0x3d1, \"thickapprox;\":0x2248,\r\n  \"thicksim;\":0x223c, \"thinsp;\":0x2009,\r\n  \"thkap;\":0x2248, \"thksim;\":0x223c,\r\n  \"thorn\":0xfe, \"thorn;\":0xfe,\r\n  \"tilde;\":0x2dc, \"times\":0xd7,\r\n  \"times;\":0xd7, \"timesb;\":0x22a0,\r\n  \"timesbar;\":0x2a31, \"timesd;\":0x2a30,\r\n  \"tint;\":0x222d, \"toea;\":0x2928,\r\n  \"top;\":0x22a4, \"topbot;\":0x2336,\r\n  \"topcir;\":0x2af1, \"topf;\":[0xd835,0xdd65],\r\n  \"topfork;\":0x2ada, \"tosa;\":0x2929,\r\n  \"tprime;\":0x2034, \"trade;\":0x2122,\r\n  \"triangle;\":0x25b5, \"triangledown;\":0x25bf,\r\n  \"triangleleft;\":0x25c3, \"trianglelefteq;\":0x22b4,\r\n  \"triangleq;\":0x225c, \"triangleright;\":0x25b9,\r\n  \"trianglerighteq;\":0x22b5, \"tridot;\":0x25ec,\r\n  \"trie;\":0x225c, \"triminus;\":0x2a3a,\r\n  \"triplus;\":0x2a39, \"trisb;\":0x29cd,\r\n  \"tritime;\":0x2a3b, \"trpezium;\":0x23e2,\r\n  \"tscr;\":[0xd835,0xdcc9], \"tscy;\":0x446,\r\n  \"tshcy;\":0x45b, \"tstrok;\":0x167,\r\n  \"twixt;\":0x226c, \"twoheadleftarrow;\":0x219e,\r\n  \"twoheadrightarrow;\":0x21a0, \"uArr;\":0x21d1,\r\n  \"uHar;\":0x2963, \"uacute\":0xfa,\r\n  \"uacute;\":0xfa, \"uarr;\":0x2191,\r\n  \"ubrcy;\":0x45e, \"ubreve;\":0x16d,\r\n  \"ucirc\":0xfb, \"ucirc;\":0xfb,\r\n  \"ucy;\":0x443, \"udarr;\":0x21c5,\r\n  \"udblac;\":0x171, \"udhar;\":0x296e,\r\n  \"ufisht;\":0x297e, \"ufr;\":[0xd835,0xdd32],\r\n  \"ugrave\":0xf9, \"ugrave;\":0xf9,\r\n  \"uharl;\":0x21bf, \"uharr;\":0x21be,\r\n  \"uhblk;\":0x2580, \"ulcorn;\":0x231c,\r\n  \"ulcorner;\":0x231c, \"ulcrop;\":0x230f,\r\n  \"ultri;\":0x25f8, \"umacr;\":0x16b,\r\n  \"uml\":0xa8, \"uml;\":0xa8,\r\n  \"uogon;\":0x173, \"uopf;\":[0xd835,0xdd66],\r\n  \"uparrow;\":0x2191, \"updownarrow;\":0x2195,\r\n  \"upharpoonleft;\":0x21bf, \"upharpoonright;\":0x21be,\r\n  \"uplus;\":0x228e, \"upsi;\":0x3c5,\r\n  \"upsih;\":0x3d2, \"upsilon;\":0x3c5,\r\n  \"upuparrows;\":0x21c8, \"urcorn;\":0x231d,\r\n  \"urcorner;\":0x231d, \"urcrop;\":0x230e,\r\n  \"uring;\":0x16f, \"urtri;\":0x25f9,\r\n  \"uscr;\":[0xd835,0xdcca], \"utdot;\":0x22f0,\r\n  \"utilde;\":0x169, \"utri;\":0x25b5,\r\n  \"utrif;\":0x25b4, \"uuarr;\":0x21c8,\r\n  \"uuml\":0xfc, \"uuml;\":0xfc,\r\n  \"uwangle;\":0x29a7, \"vArr;\":0x21d5,\r\n  \"vBar;\":0x2ae8, \"vBarv;\":0x2ae9,\r\n  \"vDash;\":0x22a8, \"vangrt;\":0x299c,\r\n  \"varepsilon;\":0x3f5, \"varkappa;\":0x3f0,\r\n  \"varnothing;\":0x2205, \"varphi;\":0x3d5,\r\n  \"varpi;\":0x3d6, \"varpropto;\":0x221d,\r\n  \"varr;\":0x2195, \"varrho;\":0x3f1,\r\n  \"varsigma;\":0x3c2, \"varsubsetneq;\":[0x228a,0xfe00],\r\n  \"varsubsetneqq;\":[0x2acb,0xfe00], \"varsupsetneq;\":[0x228b,0xfe00],\r\n  \"varsupsetneqq;\":[0x2acc,0xfe00], \"vartheta;\":0x3d1,\r\n  \"vartriangleleft;\":0x22b2, \"vartriangleright;\":0x22b3,\r\n  \"vcy;\":0x432, \"vdash;\":0x22a2,\r\n  \"vee;\":0x2228, \"veebar;\":0x22bb,\r\n  \"veeeq;\":0x225a, \"vellip;\":0x22ee,\r\n  \"verbar;\":0x7c, \"vert;\":0x7c,\r\n  \"vfr;\":[0xd835,0xdd33], \"vltri;\":0x22b2,\r\n  \"vnsub;\":[0x2282,0x20d2], \"vnsup;\":[0x2283,0x20d2],\r\n  \"vopf;\":[0xd835,0xdd67], \"vprop;\":0x221d,\r\n  \"vrtri;\":0x22b3, \"vscr;\":[0xd835,0xdccb],\r\n  \"vsubnE;\":[0x2acb,0xfe00], \"vsubne;\":[0x228a,0xfe00],\r\n  \"vsupnE;\":[0x2acc,0xfe00], \"vsupne;\":[0x228b,0xfe00],\r\n  \"vzigzag;\":0x299a, \"wcirc;\":0x175,\r\n  \"wedbar;\":0x2a5f, \"wedge;\":0x2227,\r\n  \"wedgeq;\":0x2259, \"weierp;\":0x2118,\r\n  \"wfr;\":[0xd835,0xdd34], \"wopf;\":[0xd835,0xdd68],\r\n  \"wp;\":0x2118, \"wr;\":0x2240,\r\n  \"wreath;\":0x2240, \"wscr;\":[0xd835,0xdccc],\r\n  \"xcap;\":0x22c2, \"xcirc;\":0x25ef,\r\n  \"xcup;\":0x22c3, \"xdtri;\":0x25bd,\r\n  \"xfr;\":[0xd835,0xdd35], \"xhArr;\":0x27fa,\r\n  \"xharr;\":0x27f7, \"xi;\":0x3be,\r\n  \"xlArr;\":0x27f8, \"xlarr;\":0x27f5,\r\n  \"xmap;\":0x27fc, \"xnis;\":0x22fb,\r\n  \"xodot;\":0x2a00, \"xopf;\":[0xd835,0xdd69],\r\n  \"xoplus;\":0x2a01, \"xotime;\":0x2a02,\r\n  \"xrArr;\":0x27f9, \"xrarr;\":0x27f6,\r\n  \"xscr;\":[0xd835,0xdccd], \"xsqcup;\":0x2a06,\r\n  \"xuplus;\":0x2a04, \"xutri;\":0x25b3,\r\n  \"xvee;\":0x22c1, \"xwedge;\":0x22c0,\r\n  \"yacute\":0xfd, \"yacute;\":0xfd,\r\n  \"yacy;\":0x44f, \"ycirc;\":0x177,\r\n  \"ycy;\":0x44b, \"yen\":0xa5,\r\n  \"yen;\":0xa5, \"yfr;\":[0xd835,0xdd36],\r\n  \"yicy;\":0x457, \"yopf;\":[0xd835,0xdd6a],\r\n  \"yscr;\":[0xd835,0xdcce], \"yucy;\":0x44e,\r\n  \"yuml\":0xff, \"yuml;\":0xff,\r\n  \"zacute;\":0x17a, \"zcaron;\":0x17e,\r\n  \"zcy;\":0x437, \"zdot;\":0x17c,\r\n  \"zeetrf;\":0x2128, \"zeta;\":0x3b6,\r\n  \"zfr;\":[0xd835,0xdd37], \"zhcy;\":0x436,\r\n  \"zigrarr;\":0x21dd, \"zopf;\":[0xd835,0xdd6b],\r\n  \"zscr;\":[0xd835,0xdccf], \"zwj;\":0x200d,\r\n  \"zwnj;\":0x200c,\r\n};\r\n/*\r\n * This regexp is generated with test/tools/update-entities.js\r\n * It will always match at least one character -- but note that there\r\n * are no entities whose names are a single character long.\r\n */\r\nvar NAMEDCHARREF = /(A(?:Elig;?|MP;?|acute;?|breve;|c(?:irc;?|y;)|fr;|grave;?|lpha;|macr;|nd;|o(?:gon;|pf;)|pplyFunction;|ring;?|s(?:cr;|sign;)|tilde;?|uml;?)|B(?:a(?:ckslash;|r(?:v;|wed;))|cy;|e(?:cause;|rnoullis;|ta;)|fr;|opf;|reve;|scr;|umpeq;)|C(?:Hcy;|OPY;?|a(?:cute;|p(?:;|italDifferentialD;)|yleys;)|c(?:aron;|edil;?|irc;|onint;)|dot;|e(?:dilla;|nterDot;)|fr;|hi;|ircle(?:Dot;|Minus;|Plus;|Times;)|lo(?:ckwiseContourIntegral;|seCurly(?:DoubleQuote;|Quote;))|o(?:lon(?:;|e;)|n(?:gruent;|int;|tourIntegral;)|p(?:f;|roduct;)|unterClockwiseContourIntegral;)|ross;|scr;|up(?:;|Cap;))|D(?:D(?:;|otrahd;)|Jcy;|Scy;|Zcy;|a(?:gger;|rr;|shv;)|c(?:aron;|y;)|el(?:;|ta;)|fr;|i(?:a(?:critical(?:Acute;|Do(?:t;|ubleAcute;)|Grave;|Tilde;)|mond;)|fferentialD;)|o(?:pf;|t(?:;|Dot;|Equal;)|uble(?:ContourIntegral;|Do(?:t;|wnArrow;)|L(?:eft(?:Arrow;|RightArrow;|Tee;)|ong(?:Left(?:Arrow;|RightArrow;)|RightArrow;))|Right(?:Arrow;|Tee;)|Up(?:Arrow;|DownArrow;)|VerticalBar;)|wn(?:Arrow(?:;|Bar;|UpArrow;)|Breve;|Left(?:RightVector;|TeeVector;|Vector(?:;|Bar;))|Right(?:TeeVector;|Vector(?:;|Bar;))|Tee(?:;|Arrow;)|arrow;))|s(?:cr;|trok;))|E(?:NG;|TH;?|acute;?|c(?:aron;|irc;?|y;)|dot;|fr;|grave;?|lement;|m(?:acr;|pty(?:SmallSquare;|VerySmallSquare;))|o(?:gon;|pf;)|psilon;|qu(?:al(?:;|Tilde;)|ilibrium;)|s(?:cr;|im;)|ta;|uml;?|x(?:ists;|ponentialE;))|F(?:cy;|fr;|illed(?:SmallSquare;|VerySmallSquare;)|o(?:pf;|rAll;|uriertrf;)|scr;)|G(?:Jcy;|T;?|amma(?:;|d;)|breve;|c(?:edil;|irc;|y;)|dot;|fr;|g;|opf;|reater(?:Equal(?:;|Less;)|FullEqual;|Greater;|Less;|SlantEqual;|Tilde;)|scr;|t;)|H(?:ARDcy;|a(?:cek;|t;)|circ;|fr;|ilbertSpace;|o(?:pf;|rizontalLine;)|s(?:cr;|trok;)|ump(?:DownHump;|Equal;))|I(?:Ecy;|Jlig;|Ocy;|acute;?|c(?:irc;?|y;)|dot;|fr;|grave;?|m(?:;|a(?:cr;|ginaryI;)|plies;)|n(?:t(?:;|e(?:gral;|rsection;))|visible(?:Comma;|Times;))|o(?:gon;|pf;|ta;)|scr;|tilde;|u(?:kcy;|ml;?))|J(?:c(?:irc;|y;)|fr;|opf;|s(?:cr;|ercy;)|ukcy;)|K(?:Hcy;|Jcy;|appa;|c(?:edil;|y;)|fr;|opf;|scr;)|L(?:Jcy;|T;?|a(?:cute;|mbda;|ng;|placetrf;|rr;)|c(?:aron;|edil;|y;)|e(?:ft(?:A(?:ngleBracket;|rrow(?:;|Bar;|RightArrow;))|Ceiling;|Do(?:ubleBracket;|wn(?:TeeVector;|Vector(?:;|Bar;)))|Floor;|Right(?:Arrow;|Vector;)|T(?:ee(?:;|Arrow;|Vector;)|riangle(?:;|Bar;|Equal;))|Up(?:DownVector;|TeeVector;|Vector(?:;|Bar;))|Vector(?:;|Bar;)|arrow;|rightarrow;)|ss(?:EqualGreater;|FullEqual;|Greater;|Less;|SlantEqual;|Tilde;))|fr;|l(?:;|eftarrow;)|midot;|o(?:ng(?:Left(?:Arrow;|RightArrow;)|RightArrow;|left(?:arrow;|rightarrow;)|rightarrow;)|pf;|wer(?:LeftArrow;|RightArrow;))|s(?:cr;|h;|trok;)|t;)|M(?:ap;|cy;|e(?:diumSpace;|llintrf;)|fr;|inusPlus;|opf;|scr;|u;)|N(?:Jcy;|acute;|c(?:aron;|edil;|y;)|e(?:gative(?:MediumSpace;|Thi(?:ckSpace;|nSpace;)|VeryThinSpace;)|sted(?:GreaterGreater;|LessLess;)|wLine;)|fr;|o(?:Break;|nBreakingSpace;|pf;|t(?:;|C(?:ongruent;|upCap;)|DoubleVerticalBar;|E(?:lement;|qual(?:;|Tilde;)|xists;)|Greater(?:;|Equal;|FullEqual;|Greater;|Less;|SlantEqual;|Tilde;)|Hump(?:DownHump;|Equal;)|Le(?:ftTriangle(?:;|Bar;|Equal;)|ss(?:;|Equal;|Greater;|Less;|SlantEqual;|Tilde;))|Nested(?:GreaterGreater;|LessLess;)|Precedes(?:;|Equal;|SlantEqual;)|R(?:everseElement;|ightTriangle(?:;|Bar;|Equal;))|S(?:quareSu(?:bset(?:;|Equal;)|perset(?:;|Equal;))|u(?:bset(?:;|Equal;)|cceeds(?:;|Equal;|SlantEqual;|Tilde;)|perset(?:;|Equal;)))|Tilde(?:;|Equal;|FullEqual;|Tilde;)|VerticalBar;))|scr;|tilde;?|u;)|O(?:Elig;|acute;?|c(?:irc;?|y;)|dblac;|fr;|grave;?|m(?:acr;|ega;|icron;)|opf;|penCurly(?:DoubleQuote;|Quote;)|r;|s(?:cr;|lash;?)|ti(?:lde;?|mes;)|uml;?|ver(?:B(?:ar;|rac(?:e;|ket;))|Parenthesis;))|P(?:artialD;|cy;|fr;|hi;|i;|lusMinus;|o(?:incareplane;|pf;)|r(?:;|ecedes(?:;|Equal;|SlantEqual;|Tilde;)|ime;|o(?:duct;|portion(?:;|al;)))|s(?:cr;|i;))|Q(?:UOT;?|fr;|opf;|scr;)|R(?:Barr;|EG;?|a(?:cute;|ng;|rr(?:;|tl;))|c(?:aron;|edil;|y;)|e(?:;|verse(?:E(?:lement;|quilibrium;)|UpEquilibrium;))|fr;|ho;|ight(?:A(?:ngleBracket;|rrow(?:;|Bar;|LeftArrow;))|Ceiling;|Do(?:ubleBracket;|wn(?:TeeVector;|Vector(?:;|Bar;)))|Floor;|T(?:ee(?:;|Arrow;|Vector;)|riangle(?:;|Bar;|Equal;))|Up(?:DownVector;|TeeVector;|Vector(?:;|Bar;))|Vector(?:;|Bar;)|arrow;)|o(?:pf;|undImplies;)|rightarrow;|s(?:cr;|h;)|uleDelayed;)|S(?:H(?:CHcy;|cy;)|OFTcy;|acute;|c(?:;|aron;|edil;|irc;|y;)|fr;|hort(?:DownArrow;|LeftArrow;|RightArrow;|UpArrow;)|igma;|mallCircle;|opf;|q(?:rt;|uare(?:;|Intersection;|Su(?:bset(?:;|Equal;)|perset(?:;|Equal;))|Union;))|scr;|tar;|u(?:b(?:;|set(?:;|Equal;))|c(?:ceeds(?:;|Equal;|SlantEqual;|Tilde;)|hThat;)|m;|p(?:;|erset(?:;|Equal;)|set;)))|T(?:HORN;?|RADE;|S(?:Hcy;|cy;)|a(?:b;|u;)|c(?:aron;|edil;|y;)|fr;|h(?:e(?:refore;|ta;)|i(?:ckSpace;|nSpace;))|ilde(?:;|Equal;|FullEqual;|Tilde;)|opf;|ripleDot;|s(?:cr;|trok;))|U(?:a(?:cute;?|rr(?:;|ocir;))|br(?:cy;|eve;)|c(?:irc;?|y;)|dblac;|fr;|grave;?|macr;|n(?:der(?:B(?:ar;|rac(?:e;|ket;))|Parenthesis;)|ion(?:;|Plus;))|o(?:gon;|pf;)|p(?:Arrow(?:;|Bar;|DownArrow;)|DownArrow;|Equilibrium;|Tee(?:;|Arrow;)|arrow;|downarrow;|per(?:LeftArrow;|RightArrow;)|si(?:;|lon;))|ring;|scr;|tilde;|uml;?)|V(?:Dash;|bar;|cy;|dash(?:;|l;)|e(?:e;|r(?:bar;|t(?:;|ical(?:Bar;|Line;|Separator;|Tilde;))|yThinSpace;))|fr;|opf;|scr;|vdash;)|W(?:circ;|edge;|fr;|opf;|scr;)|X(?:fr;|i;|opf;|scr;)|Y(?:Acy;|Icy;|Ucy;|acute;?|c(?:irc;|y;)|fr;|opf;|scr;|uml;)|Z(?:Hcy;|acute;|c(?:aron;|y;)|dot;|e(?:roWidthSpace;|ta;)|fr;|opf;|scr;)|a(?:acute;?|breve;|c(?:;|E;|d;|irc;?|ute;?|y;)|elig;?|f(?:;|r;)|grave;?|l(?:e(?:fsym;|ph;)|pha;)|m(?:a(?:cr;|lg;)|p;?)|n(?:d(?:;|and;|d;|slope;|v;)|g(?:;|e;|le;|msd(?:;|a(?:a;|b;|c;|d;|e;|f;|g;|h;))|rt(?:;|vb(?:;|d;))|s(?:ph;|t;)|zarr;))|o(?:gon;|pf;)|p(?:;|E;|acir;|e;|id;|os;|prox(?:;|eq;))|ring;?|s(?:cr;|t;|ymp(?:;|eq;))|tilde;?|uml;?|w(?:conint;|int;))|b(?:Not;|a(?:ck(?:cong;|epsilon;|prime;|sim(?:;|eq;))|r(?:vee;|wed(?:;|ge;)))|brk(?:;|tbrk;)|c(?:ong;|y;)|dquo;|e(?:caus(?:;|e;)|mptyv;|psi;|rnou;|t(?:a;|h;|ween;))|fr;|ig(?:c(?:ap;|irc;|up;)|o(?:dot;|plus;|times;)|s(?:qcup;|tar;)|triangle(?:down;|up;)|uplus;|vee;|wedge;)|karow;|l(?:a(?:ck(?:lozenge;|square;|triangle(?:;|down;|left;|right;))|nk;)|k(?:1(?:2;|4;)|34;)|ock;)|n(?:e(?:;|quiv;)|ot;)|o(?:pf;|t(?:;|tom;)|wtie;|x(?:D(?:L;|R;|l;|r;)|H(?:;|D;|U;|d;|u;)|U(?:L;|R;|l;|r;)|V(?:;|H;|L;|R;|h;|l;|r;)|box;|d(?:L;|R;|l;|r;)|h(?:;|D;|U;|d;|u;)|minus;|plus;|times;|u(?:L;|R;|l;|r;)|v(?:;|H;|L;|R;|h;|l;|r;)))|prime;|r(?:eve;|vbar;?)|s(?:cr;|emi;|im(?:;|e;)|ol(?:;|b;|hsub;))|u(?:ll(?:;|et;)|mp(?:;|E;|e(?:;|q;))))|c(?:a(?:cute;|p(?:;|and;|brcup;|c(?:ap;|up;)|dot;|s;)|r(?:et;|on;))|c(?:a(?:ps;|ron;)|edil;?|irc;|ups(?:;|sm;))|dot;|e(?:dil;?|mptyv;|nt(?:;|erdot;|))|fr;|h(?:cy;|eck(?:;|mark;)|i;)|ir(?:;|E;|c(?:;|eq;|le(?:arrow(?:left;|right;)|d(?:R;|S;|ast;|circ;|dash;)))|e;|fnint;|mid;|scir;)|lubs(?:;|uit;)|o(?:lon(?:;|e(?:;|q;))|m(?:ma(?:;|t;)|p(?:;|fn;|le(?:ment;|xes;)))|n(?:g(?:;|dot;)|int;)|p(?:f;|rod;|y(?:;|sr;|)))|r(?:arr;|oss;)|s(?:cr;|u(?:b(?:;|e;)|p(?:;|e;)))|tdot;|u(?:darr(?:l;|r;)|e(?:pr;|sc;)|larr(?:;|p;)|p(?:;|brcap;|c(?:ap;|up;)|dot;|or;|s;)|r(?:arr(?:;|m;)|ly(?:eq(?:prec;|succ;)|vee;|wedge;)|ren;?|vearrow(?:left;|right;))|vee;|wed;)|w(?:conint;|int;)|ylcty;)|d(?:Arr;|Har;|a(?:gger;|leth;|rr;|sh(?:;|v;))|b(?:karow;|lac;)|c(?:aron;|y;)|d(?:;|a(?:gger;|rr;)|otseq;)|e(?:g;?|lta;|mptyv;)|f(?:isht;|r;)|har(?:l;|r;)|i(?:am(?:;|ond(?:;|suit;)|s;)|e;|gamma;|sin;|v(?:;|ide(?:;|ontimes;|)|onx;))|jcy;|lc(?:orn;|rop;)|o(?:llar;|pf;|t(?:;|eq(?:;|dot;)|minus;|plus;|square;)|ublebarwedge;|wn(?:arrow;|downarrows;|harpoon(?:left;|right;)))|r(?:bkarow;|c(?:orn;|rop;))|s(?:c(?:r;|y;)|ol;|trok;)|t(?:dot;|ri(?:;|f;))|u(?:arr;|har;)|wangle;|z(?:cy;|igrarr;))|e(?:D(?:Dot;|ot;)|a(?:cute;?|ster;)|c(?:aron;|ir(?:;|c;?)|olon;|y;)|dot;|e;|f(?:Dot;|r;)|g(?:;|rave;?|s(?:;|dot;))|l(?:;|inters;|l;|s(?:;|dot;))|m(?:acr;|pty(?:;|set;|v;)|sp(?:1(?:3;|4;)|;))|n(?:g;|sp;)|o(?:gon;|pf;)|p(?:ar(?:;|sl;)|lus;|si(?:;|lon;|v;))|q(?:c(?:irc;|olon;)|s(?:im;|lant(?:gtr;|less;))|u(?:als;|est;|iv(?:;|DD;))|vparsl;)|r(?:Dot;|arr;)|s(?:cr;|dot;|im;)|t(?:a;|h;?)|u(?:ml;?|ro;)|x(?:cl;|ist;|p(?:ectation;|onentiale;)))|f(?:allingdotseq;|cy;|emale;|f(?:ilig;|l(?:ig;|lig;)|r;)|ilig;|jlig;|l(?:at;|lig;|tns;)|nof;|o(?:pf;|r(?:all;|k(?:;|v;)))|partint;|r(?:a(?:c(?:1(?:2;?|3;|4;?|5;|6;|8;)|2(?:3;|5;)|3(?:4;?|5;|8;)|45;|5(?:6;|8;)|78;)|sl;)|own;)|scr;)|g(?:E(?:;|l;)|a(?:cute;|mma(?:;|d;)|p;)|breve;|c(?:irc;|y;)|dot;|e(?:;|l;|q(?:;|q;|slant;)|s(?:;|cc;|dot(?:;|o(?:;|l;))|l(?:;|es;)))|fr;|g(?:;|g;)|imel;|jcy;|l(?:;|E;|a;|j;)|n(?:E;|ap(?:;|prox;)|e(?:;|q(?:;|q;))|sim;)|opf;|rave;|s(?:cr;|im(?:;|e;|l;))|t(?:;|c(?:c;|ir;)|dot;|lPar;|quest;|r(?:a(?:pprox;|rr;)|dot;|eq(?:less;|qless;)|less;|sim;)|)|v(?:ertneqq;|nE;))|h(?:Arr;|a(?:irsp;|lf;|milt;|r(?:dcy;|r(?:;|cir;|w;)))|bar;|circ;|e(?:arts(?:;|uit;)|llip;|rcon;)|fr;|ks(?:earow;|warow;)|o(?:arr;|mtht;|ok(?:leftarrow;|rightarrow;)|pf;|rbar;)|s(?:cr;|lash;|trok;)|y(?:bull;|phen;))|i(?:acute;?|c(?:;|irc;?|y;)|e(?:cy;|xcl;?)|f(?:f;|r;)|grave;?|i(?:;|i(?:int;|nt;)|nfin;|ota;)|jlig;|m(?:a(?:cr;|g(?:e;|line;|part;)|th;)|of;|ped;)|n(?:;|care;|fin(?:;|tie;)|odot;|t(?:;|cal;|e(?:gers;|rcal;)|larhk;|prod;))|o(?:cy;|gon;|pf;|ta;)|prod;|quest;?|s(?:cr;|in(?:;|E;|dot;|s(?:;|v;)|v;))|t(?:;|ilde;)|u(?:kcy;|ml;?))|j(?:c(?:irc;|y;)|fr;|math;|opf;|s(?:cr;|ercy;)|ukcy;)|k(?:appa(?:;|v;)|c(?:edil;|y;)|fr;|green;|hcy;|jcy;|opf;|scr;)|l(?:A(?:arr;|rr;|tail;)|Barr;|E(?:;|g;)|Har;|a(?:cute;|emptyv;|gran;|mbda;|ng(?:;|d;|le;)|p;|quo;?|rr(?:;|b(?:;|fs;)|fs;|hk;|lp;|pl;|sim;|tl;)|t(?:;|ail;|e(?:;|s;)))|b(?:arr;|brk;|r(?:ac(?:e;|k;)|k(?:e;|sl(?:d;|u;))))|c(?:aron;|e(?:dil;|il;)|ub;|y;)|d(?:ca;|quo(?:;|r;)|r(?:dhar;|ushar;)|sh;)|e(?:;|ft(?:arrow(?:;|tail;)|harpoon(?:down;|up;)|leftarrows;|right(?:arrow(?:;|s;)|harpoons;|squigarrow;)|threetimes;)|g;|q(?:;|q;|slant;)|s(?:;|cc;|dot(?:;|o(?:;|r;))|g(?:;|es;)|s(?:approx;|dot;|eq(?:gtr;|qgtr;)|gtr;|sim;)))|f(?:isht;|loor;|r;)|g(?:;|E;)|h(?:ar(?:d;|u(?:;|l;))|blk;)|jcy;|l(?:;|arr;|corner;|hard;|tri;)|m(?:idot;|oust(?:;|ache;))|n(?:E;|ap(?:;|prox;)|e(?:;|q(?:;|q;))|sim;)|o(?:a(?:ng;|rr;)|brk;|ng(?:left(?:arrow;|rightarrow;)|mapsto;|rightarrow;)|oparrow(?:left;|right;)|p(?:ar;|f;|lus;)|times;|w(?:ast;|bar;)|z(?:;|enge;|f;))|par(?:;|lt;)|r(?:arr;|corner;|har(?:;|d;)|m;|tri;)|s(?:aquo;|cr;|h;|im(?:;|e;|g;)|q(?:b;|uo(?:;|r;))|trok;)|t(?:;|c(?:c;|ir;)|dot;|hree;|imes;|larr;|quest;|r(?:Par;|i(?:;|e;|f;))|)|ur(?:dshar;|uhar;)|v(?:ertneqq;|nE;))|m(?:DDot;|a(?:cr;?|l(?:e;|t(?:;|ese;))|p(?:;|sto(?:;|down;|left;|up;))|rker;)|c(?:omma;|y;)|dash;|easuredangle;|fr;|ho;|i(?:cro;?|d(?:;|ast;|cir;|dot;?)|nus(?:;|b;|d(?:;|u;)))|l(?:cp;|dr;)|nplus;|o(?:dels;|pf;)|p;|s(?:cr;|tpos;)|u(?:;|ltimap;|map;))|n(?:G(?:g;|t(?:;|v;))|L(?:eft(?:arrow;|rightarrow;)|l;|t(?:;|v;))|Rightarrow;|V(?:Dash;|dash;)|a(?:bla;|cute;|ng;|p(?:;|E;|id;|os;|prox;)|tur(?:;|al(?:;|s;)))|b(?:sp;?|ump(?:;|e;))|c(?:a(?:p;|ron;)|edil;|ong(?:;|dot;)|up;|y;)|dash;|e(?:;|Arr;|ar(?:hk;|r(?:;|ow;))|dot;|quiv;|s(?:ear;|im;)|xist(?:;|s;))|fr;|g(?:E;|e(?:;|q(?:;|q;|slant;)|s;)|sim;|t(?:;|r;))|h(?:Arr;|arr;|par;)|i(?:;|s(?:;|d;)|v;)|jcy;|l(?:Arr;|E;|arr;|dr;|e(?:;|ft(?:arrow;|rightarrow;)|q(?:;|q;|slant;)|s(?:;|s;))|sim;|t(?:;|ri(?:;|e;)))|mid;|o(?:pf;|t(?:;|in(?:;|E;|dot;|v(?:a;|b;|c;))|ni(?:;|v(?:a;|b;|c;))|))|p(?:ar(?:;|allel;|sl;|t;)|olint;|r(?:;|cue;|e(?:;|c(?:;|eq;))))|r(?:Arr;|arr(?:;|c;|w;)|ightarrow;|tri(?:;|e;))|s(?:c(?:;|cue;|e;|r;)|hort(?:mid;|parallel;)|im(?:;|e(?:;|q;))|mid;|par;|qsu(?:be;|pe;)|u(?:b(?:;|E;|e;|set(?:;|eq(?:;|q;)))|cc(?:;|eq;)|p(?:;|E;|e;|set(?:;|eq(?:;|q;)))))|t(?:gl;|ilde;?|lg;|riangle(?:left(?:;|eq;)|right(?:;|eq;)))|u(?:;|m(?:;|ero;|sp;))|v(?:Dash;|Harr;|ap;|dash;|g(?:e;|t;)|infin;|l(?:Arr;|e;|t(?:;|rie;))|r(?:Arr;|trie;)|sim;)|w(?:Arr;|ar(?:hk;|r(?:;|ow;))|near;))|o(?:S;|a(?:cute;?|st;)|c(?:ir(?:;|c;?)|y;)|d(?:ash;|blac;|iv;|ot;|sold;)|elig;|f(?:cir;|r;)|g(?:on;|rave;?|t;)|h(?:bar;|m;)|int;|l(?:arr;|c(?:ir;|ross;)|ine;|t;)|m(?:acr;|ega;|i(?:cron;|d;|nus;))|opf;|p(?:ar;|erp;|lus;)|r(?:;|arr;|d(?:;|er(?:;|of;)|f;?|m;?)|igof;|or;|slope;|v;)|s(?:cr;|lash;?|ol;)|ti(?:lde;?|mes(?:;|as;))|uml;?|vbar;)|p(?:ar(?:;|a(?:;|llel;|)|s(?:im;|l;)|t;)|cy;|er(?:cnt;|iod;|mil;|p;|tenk;)|fr;|h(?:i(?:;|v;)|mmat;|one;)|i(?:;|tchfork;|v;)|l(?:an(?:ck(?:;|h;)|kv;)|us(?:;|acir;|b;|cir;|d(?:o;|u;)|e;|mn;?|sim;|two;))|m;|o(?:intint;|pf;|und;?)|r(?:;|E;|ap;|cue;|e(?:;|c(?:;|approx;|curlyeq;|eq;|n(?:approx;|eqq;|sim;)|sim;))|ime(?:;|s;)|n(?:E;|ap;|sim;)|o(?:d;|f(?:alar;|line;|surf;)|p(?:;|to;))|sim;|urel;)|s(?:cr;|i;)|uncsp;)|q(?:fr;|int;|opf;|prime;|scr;|u(?:at(?:ernions;|int;)|est(?:;|eq;)|ot;?))|r(?:A(?:arr;|rr;|tail;)|Barr;|Har;|a(?:c(?:e;|ute;)|dic;|emptyv;|ng(?:;|d;|e;|le;)|quo;?|rr(?:;|ap;|b(?:;|fs;)|c;|fs;|hk;|lp;|pl;|sim;|tl;|w;)|t(?:ail;|io(?:;|nals;)))|b(?:arr;|brk;|r(?:ac(?:e;|k;)|k(?:e;|sl(?:d;|u;))))|c(?:aron;|e(?:dil;|il;)|ub;|y;)|d(?:ca;|ldhar;|quo(?:;|r;)|sh;)|e(?:al(?:;|ine;|part;|s;)|ct;|g;?)|f(?:isht;|loor;|r;)|h(?:ar(?:d;|u(?:;|l;))|o(?:;|v;))|i(?:ght(?:arrow(?:;|tail;)|harpoon(?:down;|up;)|left(?:arrows;|harpoons;)|rightarrows;|squigarrow;|threetimes;)|ng;|singdotseq;)|l(?:arr;|har;|m;)|moust(?:;|ache;)|nmid;|o(?:a(?:ng;|rr;)|brk;|p(?:ar;|f;|lus;)|times;)|p(?:ar(?:;|gt;)|polint;)|rarr;|s(?:aquo;|cr;|h;|q(?:b;|uo(?:;|r;)))|t(?:hree;|imes;|ri(?:;|e;|f;|ltri;))|uluhar;|x;)|s(?:acute;|bquo;|c(?:;|E;|a(?:p;|ron;)|cue;|e(?:;|dil;)|irc;|n(?:E;|ap;|sim;)|polint;|sim;|y;)|dot(?:;|b;|e;)|e(?:Arr;|ar(?:hk;|r(?:;|ow;))|ct;?|mi;|swar;|tm(?:inus;|n;)|xt;)|fr(?:;|own;)|h(?:arp;|c(?:hcy;|y;)|ort(?:mid;|parallel;)|y;?)|i(?:gma(?:;|f;|v;)|m(?:;|dot;|e(?:;|q;)|g(?:;|E;)|l(?:;|E;)|ne;|plus;|rarr;))|larr;|m(?:a(?:llsetminus;|shp;)|eparsl;|i(?:d;|le;)|t(?:;|e(?:;|s;)))|o(?:ftcy;|l(?:;|b(?:;|ar;))|pf;)|pa(?:des(?:;|uit;)|r;)|q(?:c(?:ap(?:;|s;)|up(?:;|s;))|su(?:b(?:;|e;|set(?:;|eq;))|p(?:;|e;|set(?:;|eq;)))|u(?:;|ar(?:e;|f;)|f;))|rarr;|s(?:cr;|etmn;|mile;|tarf;)|t(?:ar(?:;|f;)|r(?:aight(?:epsilon;|phi;)|ns;))|u(?:b(?:;|E;|dot;|e(?:;|dot;)|mult;|n(?:E;|e;)|plus;|rarr;|s(?:et(?:;|eq(?:;|q;)|neq(?:;|q;))|im;|u(?:b;|p;)))|cc(?:;|approx;|curlyeq;|eq;|n(?:approx;|eqq;|sim;)|sim;)|m;|ng;|p(?:1;?|2;?|3;?|;|E;|d(?:ot;|sub;)|e(?:;|dot;)|hs(?:ol;|ub;)|larr;|mult;|n(?:E;|e;)|plus;|s(?:et(?:;|eq(?:;|q;)|neq(?:;|q;))|im;|u(?:b;|p;))))|w(?:Arr;|ar(?:hk;|r(?:;|ow;))|nwar;)|zlig;?)|t(?:a(?:rget;|u;)|brk;|c(?:aron;|edil;|y;)|dot;|elrec;|fr;|h(?:e(?:re(?:4;|fore;)|ta(?:;|sym;|v;))|i(?:ck(?:approx;|sim;)|nsp;)|k(?:ap;|sim;)|orn;?)|i(?:lde;|mes(?:;|b(?:;|ar;)|d;|)|nt;)|o(?:ea;|p(?:;|bot;|cir;|f(?:;|ork;))|sa;)|prime;|r(?:ade;|i(?:angle(?:;|down;|left(?:;|eq;)|q;|right(?:;|eq;))|dot;|e;|minus;|plus;|sb;|time;)|pezium;)|s(?:c(?:r;|y;)|hcy;|trok;)|w(?:ixt;|ohead(?:leftarrow;|rightarrow;)))|u(?:Arr;|Har;|a(?:cute;?|rr;)|br(?:cy;|eve;)|c(?:irc;?|y;)|d(?:arr;|blac;|har;)|f(?:isht;|r;)|grave;?|h(?:ar(?:l;|r;)|blk;)|l(?:c(?:orn(?:;|er;)|rop;)|tri;)|m(?:acr;|l;?)|o(?:gon;|pf;)|p(?:arrow;|downarrow;|harpoon(?:left;|right;)|lus;|si(?:;|h;|lon;)|uparrows;)|r(?:c(?:orn(?:;|er;)|rop;)|ing;|tri;)|scr;|t(?:dot;|ilde;|ri(?:;|f;))|u(?:arr;|ml;?)|wangle;)|v(?:Arr;|Bar(?:;|v;)|Dash;|a(?:ngrt;|r(?:epsilon;|kappa;|nothing;|p(?:hi;|i;|ropto;)|r(?:;|ho;)|s(?:igma;|u(?:bsetneq(?:;|q;)|psetneq(?:;|q;)))|t(?:heta;|riangle(?:left;|right;))))|cy;|dash;|e(?:e(?:;|bar;|eq;)|llip;|r(?:bar;|t;))|fr;|ltri;|nsu(?:b;|p;)|opf;|prop;|rtri;|s(?:cr;|u(?:bn(?:E;|e;)|pn(?:E;|e;)))|zigzag;)|w(?:circ;|e(?:d(?:bar;|ge(?:;|q;))|ierp;)|fr;|opf;|p;|r(?:;|eath;)|scr;)|x(?:c(?:ap;|irc;|up;)|dtri;|fr;|h(?:Arr;|arr;)|i;|l(?:Arr;|arr;)|map;|nis;|o(?:dot;|p(?:f;|lus;)|time;)|r(?:Arr;|arr;)|s(?:cr;|qcup;)|u(?:plus;|tri;)|vee;|wedge;)|y(?:ac(?:ute;?|y;)|c(?:irc;|y;)|en;?|fr;|icy;|opf;|scr;|u(?:cy;|ml;?))|z(?:acute;|c(?:aron;|y;)|dot;|e(?:etrf;|ta;)|fr;|hcy;|igrarr;|opf;|scr;|w(?:j;|nj;)))|[\\s\\S]/g;\r\n\r\nvar NAMEDCHARREF_MAXLEN = 32;\r\n\r\n// Regular expression constants used by the tokenizer and parser\r\n\r\n// Note that \\r is included in all of these regexps because it will need\r\n// to be converted to LF by the scanChars() function.\r\nvar DBLQUOTEATTRVAL = /[^\\r\"&\\u0000]+/g;\r\nvar SINGLEQUOTEATTRVAL = /[^\\r'&\\u0000]+/g;\r\nvar UNQUOTEDATTRVAL = /[^\\r\\t\\n\\f &>\\u0000]+/g;\r\nvar TAGNAME = /[^\\r\\t\\n\\f \\/>A-Z\\u0000]+/g;\r\nvar ATTRNAME = /[^\\r\\t\\n\\f \\/=>A-Z\\u0000]+/g;\r\n\r\nvar CDATATEXT = /[^\\]\\r\\u0000\\uffff]*/g;\r\nvar DATATEXT = /[^&<\\r\\u0000\\uffff]*/g;\r\nvar RAWTEXT = /[^<\\r\\u0000\\uffff]*/g;\r\nvar PLAINTEXT = /[^\\r\\u0000\\uffff]*/g;\r\n// Since we don't have the 'sticky tag', add '|.' to the end of SIMPLETAG\r\n// and SIMPLEATTR so that we are guaranteed to always match.  This prevents\r\n// us from scanning past the lastIndex set. (Note that the desired matches\r\n// are always greater than 1 char long, so longest-match will ensure that .\r\n// is not matched unless the desired match fails.)\r\nvar SIMPLETAG = /(?:(\\/)?([a-z]+)>)|[\\s\\S]/g;\r\nvar SIMPLEATTR = /(?:([-a-z]+)[ \\t\\n\\f]*=[ \\t\\n\\f]*('[^'&\\r\\u0000]*'|\"[^\"&\\r\\u0000]*\"|[^\\t\\n\\r\\f \"&'\\u0000>][^&> \\t\\n\\r\\f\\u0000]*[ \\t\\n\\f]))|[\\s\\S]/g;\r\n\r\nvar NONWS = /[^\\x09\\x0A\\x0C\\x0D\\x20]/;\r\nvar ALLNONWS = /[^\\x09\\x0A\\x0C\\x0D\\x20]/g; // like above, with g flag\r\nvar NONWSNONNUL = /[^\\x00\\x09\\x0A\\x0C\\x0D\\x20]/; // don't allow NUL either\r\nvar LEADINGWS = /^[\\x09\\x0A\\x0C\\x0D\\x20]+/;\r\nvar NULCHARS = /\\x00/g;\r\n\r\n/***\r\n * These are utility functions that don't use any of the parser's\r\n * internal state.\r\n */\r\nfunction buf2str(buf) {\r\n  var CHUNKSIZE=16384;\r\n  if (buf.length < CHUNKSIZE) {\r\n    return String.fromCharCode.apply(String, buf);\r\n  }\r\n  // special case for large strings, to avoid busting the stack.\r\n  var result = '';\r\n  for (var i = 0; i < buf.length; i += CHUNKSIZE) {\r\n    result += String.fromCharCode.apply(String, buf.slice(i, i+CHUNKSIZE));\r\n  }\r\n  return result;\r\n}\r\n\r\nfunction str2buf(s) {\r\n  var result = [];\r\n  for (var i=0; i<s.length; i++) {\r\n    result[i] = s.charCodeAt(i);\r\n  }\r\n  return result;\r\n}\r\n\r\n// Determine whether the element is a member of the set.\r\n// The set is an object that maps namespaces to objects. The objects\r\n// then map local tagnames to the value true if that tag is part of the set\r\nfunction isA(elt, set) {\r\n  if (typeof set === 'string') {\r\n    // convenience case for testing a particular HTML element\r\n    return elt.namespaceURI === NAMESPACE.HTML &&\r\n      elt.localName === set;\r\n  }\r\n  var tagnames = set[elt.namespaceURI];\r\n  return tagnames && tagnames[elt.localName];\r\n}\r\n\r\nfunction isMathmlTextIntegrationPoint(n) {\r\n  return isA(n, mathmlTextIntegrationPointSet);\r\n}\r\n\r\nfunction isHTMLIntegrationPoint(n) {\r\n  if (isA(n, htmlIntegrationPointSet)) return true;\r\n  if (n.namespaceURI === NAMESPACE.MATHML &&\r\n    n.localName === \"annotation-xml\") {\r\n    var encoding = n.getAttribute(\"encoding\");\r\n    if (encoding) encoding = encoding.toLowerCase();\r\n    if (encoding === \"text/html\" ||\r\n      encoding === \"application/xhtml+xml\")\r\n      return true;\r\n  }\r\n  return false;\r\n}\r\n\r\nfunction adjustSVGTagName(name) {\r\n  if (name in svgTagNameAdjustments)\r\n    return svgTagNameAdjustments[name];\r\n  else\r\n    return name;\r\n}\r\n\r\nfunction adjustSVGAttributes(attrs) {\r\n  for(var i = 0, n = attrs.length; i < n; i++) {\r\n    if (attrs[i][0] in svgAttrAdjustments) {\r\n      attrs[i][0] = svgAttrAdjustments[attrs[i][0]];\r\n    }\r\n  }\r\n}\r\n\r\nfunction adjustMathMLAttributes(attrs) {\r\n  for(var i = 0, n = attrs.length; i < n; i++) {\r\n    if (attrs[i][0] === \"definitionurl\") {\r\n      attrs[i][0] = \"definitionURL\";\r\n      break;\r\n    }\r\n  }\r\n}\r\n\r\nfunction adjustForeignAttributes(attrs) {\r\n  for(var i = 0, n = attrs.length; i < n; i++) {\r\n    if (attrs[i][0] in foreignAttributes) {\r\n      // Attributes with namespaces get a 3rd element:\r\n      // [Qname, value, namespace]\r\n      attrs[i].push(foreignAttributes[attrs[i][0]]);\r\n    }\r\n  }\r\n}\r\n\r\n// For each attribute in attrs, if elt doesn't have an attribute\r\n// by that name, add the attribute to elt\r\n// XXX: I'm ignoring namespaces for now\r\nfunction transferAttributes(attrs, elt) {\r\n  for(var i = 0, n = attrs.length; i < n; i++) {\r\n    var name = attrs[i][0], value = attrs[i][1];\r\n    if (elt.hasAttribute(name)) continue;\r\n    elt._setAttribute(name, value);\r\n  }\r\n}\r\n\r\n/***\r\n * The ElementStack class\r\n */\r\nHTMLParser.ElementStack = function ElementStack() {\r\n  this.elements = [];\r\n  this.top = null; // stack.top is the \"current node\" in the spec\r\n};\r\n\r\n/*\r\n// This is for debugging only\r\nHTMLParser.ElementStack.prototype.toString = function(e) {\r\n  return \"STACK: \" +\r\n  this.elements.map(function(e) {return e.localName;}).join(\"-\");\r\n}\r\n*/\r\n\r\nHTMLParser.ElementStack.prototype.push = function(e) {\r\n  this.elements.push(e);\r\n  this.top = e;\r\n};\r\n\r\nHTMLParser.ElementStack.prototype.pop = function(e) {\r\n  this.elements.pop();\r\n  this.top = this.elements[this.elements.length-1];\r\n};\r\n\r\n// Pop elements off the stack up to and including the first\r\n// element with the specified (HTML) tagname\r\nHTMLParser.ElementStack.prototype.popTag = function(tag) {\r\n  for(var i = this.elements.length-1; i > 0; i--) {\r\n    var e = this.elements[i];\r\n    if (isA(e, tag)) break;\r\n  }\r\n  this.elements.length = i;\r\n  this.top = this.elements[i-1];\r\n};\r\n\r\n// Pop elements off the stack up to and including the first\r\n// element that is an instance of the specified type\r\nHTMLParser.ElementStack.prototype.popElementType = function(type) {\r\n  for(var i = this.elements.length-1; i > 0; i--) {\r\n    if (this.elements[i] instanceof type) break;\r\n  }\r\n  this.elements.length = i;\r\n  this.top = this.elements[i-1];\r\n};\r\n\r\n// Pop elements off the stack up to and including the element e.\r\n// Note that this is very different from removeElement()\r\n// This requires that e is on the stack.\r\nHTMLParser.ElementStack.prototype.popElement = function(e) {\r\n  for(var i = this.elements.length-1; i > 0; i--) {\r\n    if (this.elements[i] === e) break;\r\n  }\r\n  this.elements.length = i;\r\n  this.top = this.elements[i-1];\r\n};\r\n\r\n// Remove a specific element from the stack.\r\n// Do nothing if the element is not on the stack\r\nHTMLParser.ElementStack.prototype.removeElement = function(e) {\r\n  if (this.top === e) this.pop();\r\n  else {\r\n    var idx = this.elements.lastIndexOf(e);\r\n    if (idx !== -1)\r\n      this.elements.splice(idx, 1);\r\n  }\r\n};\r\n\r\nHTMLParser.ElementStack.prototype.clearToContext = function(set) {\r\n  // Note that we don't loop to 0. Never pop the <html> elt off.\r\n  for(var i = this.elements.length-1; i > 0; i--) {\r\n    if (isA(this.elements[i], set)) break;\r\n  }\r\n  this.elements.length = i+1;\r\n  this.top = this.elements[i];\r\n};\r\n\r\nHTMLParser.ElementStack.prototype.contains = function(tag) {\r\n  return this.inSpecificScope(tag, Object.create(null));\r\n};\r\n\r\nHTMLParser.ElementStack.prototype.inSpecificScope = function(tag, set) {\r\n  for(var i = this.elements.length-1; i >= 0; i--) {\r\n    var elt = this.elements[i];\r\n    if (isA(elt, tag)) return true;\r\n    if (isA(elt, set)) return false;\r\n  }\r\n  return false;\r\n};\r\n\r\n// Like the above, but for a specific element, not a tagname\r\nHTMLParser.ElementStack.prototype.elementInSpecificScope = function(target, set) {\r\n  for(var i = this.elements.length-1; i >= 0; i--) {\r\n    var elt = this.elements[i];\r\n    if (elt === target) return true;\r\n    if (isA(elt, set)) return false;\r\n  }\r\n  return false;\r\n};\r\n\r\n// Like the above, but for an element interface, not a tagname\r\nHTMLParser.ElementStack.prototype.elementTypeInSpecificScope = function(target, set) {\r\n  for(var i = this.elements.length-1; i >= 0; i--) {\r\n    var elt = this.elements[i];\r\n    if (elt instanceof target) return true;\r\n    if (isA(elt, set)) return false;\r\n  }\r\n  return false;\r\n};\r\n\r\nHTMLParser.ElementStack.prototype.inScope = function(tag) {\r\n  return this.inSpecificScope(tag, inScopeSet);\r\n};\r\n\r\nHTMLParser.ElementStack.prototype.elementInScope = function(e) {\r\n  return this.elementInSpecificScope(e, inScopeSet);\r\n};\r\n\r\nHTMLParser.ElementStack.prototype.elementTypeInScope = function(type) {\r\n  return this.elementTypeInSpecificScope(type, inScopeSet);\r\n};\r\n\r\nHTMLParser.ElementStack.prototype.inButtonScope = function(tag) {\r\n  return this.inSpecificScope(tag, inButtonScopeSet);\r\n};\r\n\r\nHTMLParser.ElementStack.prototype.inListItemScope = function(tag) {\r\n  return this.inSpecificScope(tag, inListItemScopeSet);\r\n};\r\n\r\nHTMLParser.ElementStack.prototype.inTableScope = function(tag) {\r\n  return this.inSpecificScope(tag, inTableScopeSet);\r\n};\r\n\r\nHTMLParser.ElementStack.prototype.inSelectScope = function(tag) {\r\n  // Can't implement this one with inSpecificScope, since it involves\r\n  // a set defined by inverting another set. So implement manually.\r\n  for(var i = this.elements.length-1; i >= 0; i--) {\r\n    var elt = this.elements[i];\r\n    if (elt.namespaceURI !== NAMESPACE.HTML) return false;\r\n    var localname = elt.localName;\r\n    if (localname === tag) return true;\r\n    if (localname !== \"optgroup\" && localname !== \"option\")\r\n      return false;\r\n  }\r\n  return false;\r\n};\r\n\r\nHTMLParser.ElementStack.prototype.generateImpliedEndTags = function(butnot, thorough) {\r\n  var endTagSet = thorough ? thoroughImpliedEndTagsSet : impliedEndTagsSet;\r\n  for(var i = this.elements.length-1; i >= 0; i--) {\r\n    var e = this.elements[i];\r\n    if (butnot && isA(e, butnot)) break;\r\n    if (!isA(this.elements[i], endTagSet)) break;\r\n  }\r\n\r\n  this.elements.length = i+1;\r\n  this.top = this.elements[i];\r\n};\r\n\r\n/***\r\n * The ActiveFormattingElements class\r\n */\r\nHTMLParser.ActiveFormattingElements = function AFE() {\r\n  this.list = []; // elements\r\n  this.attrs = []; // attribute tokens for cloning\r\n};\r\n\r\nHTMLParser.ActiveFormattingElements.prototype.MARKER = { localName: \"|\" };\r\n\r\n/*\r\n// For debugging\r\nHTMLParser.ActiveFormattingElements.prototype.toString = function() {\r\n  return \"AFE: \" +\r\n  this.list.map(function(e) { return e.localName; }).join(\"-\");\r\n}\r\n*/\r\n\r\nHTMLParser.ActiveFormattingElements.prototype.insertMarker = function() {\r\n  this.list.push(this.MARKER);\r\n  this.attrs.push(this.MARKER);\r\n};\r\n\r\nHTMLParser.ActiveFormattingElements.prototype.push = function(elt, attrs) {\r\n  // Scan backwards: if there are already 3 copies of this element\r\n  // before we encounter a marker, then drop the last one\r\n  var count = 0;\r\n  for(var i = this.list.length-1; i >= 0; i--) {\r\n    if (this.list[i] === this.MARKER) break;\r\n    // equal() is defined below\r\n    if (equal(elt, this.list[i], this.attrs[i])) {\r\n      count++;\r\n      if (count === 3) {\r\n        this.list.splice(i, 1);\r\n        this.attrs.splice(i, 1);\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  // Now push the element onto the list\r\n  this.list.push(elt);\r\n\r\n  // Copy the attributes and push those on, too\r\n  var attrcopy = [];\r\n  for(var ii = 0; ii < attrs.length; ii++) {\r\n    attrcopy[ii] = attrs[ii];\r\n  }\r\n\r\n  this.attrs.push(attrcopy);\r\n\r\n  // This function defines equality of two elements for the purposes\r\n  // of the AFE list.  Note that it compares the new elements\r\n  // attributes to the saved array of attributes associated with\r\n  // the old element because a script could have changed the\r\n  // old element's set of attributes\r\n  function equal(newelt, oldelt, oldattrs) {\r\n    if (newelt.localName !== oldelt.localName) return false;\r\n    if (newelt._numattrs !== oldattrs.length) return false;\r\n    for(var i = 0, n = oldattrs.length; i < n; i++) {\r\n      var oldname = oldattrs[i][0];\r\n      var oldval = oldattrs[i][1];\r\n      if (!newelt.hasAttribute(oldname)) return false;\r\n      if (newelt.getAttribute(oldname) !== oldval) return false;\r\n    }\r\n    return true;\r\n  }\r\n};\r\n\r\nHTMLParser.ActiveFormattingElements.prototype.clearToMarker = function() {\r\n  for(var i = this.list.length-1; i >= 0; i--) {\r\n    if (this.list[i] === this.MARKER) break;\r\n  }\r\n  if (i < 0) i = 0;\r\n  this.list.length = i;\r\n  this.attrs.length = i;\r\n};\r\n\r\n// Find and return the last element with the specified tag between the\r\n// end of the list and the last marker on the list.\r\n// Used when parsing <a> in_body_mode()\r\nHTMLParser.ActiveFormattingElements.prototype.findElementByTag = function(tag) {\r\n  for(var i = this.list.length-1; i >= 0; i--) {\r\n    var elt = this.list[i];\r\n    if (elt === this.MARKER) break;\r\n    if (elt.localName === tag) return elt;\r\n  }\r\n  return null;\r\n};\r\n\r\nHTMLParser.ActiveFormattingElements.prototype.indexOf = function(e) {\r\n  return this.list.lastIndexOf(e);\r\n};\r\n\r\n// Find the element e in the list and remove it\r\n// Used when parsing <a> in_body()\r\nHTMLParser.ActiveFormattingElements.prototype.remove = function(e) {\r\n  var idx = this.list.lastIndexOf(e);\r\n  if (idx !== -1) {\r\n    this.list.splice(idx, 1);\r\n    this.attrs.splice(idx, 1);\r\n  }\r\n};\r\n\r\n// Find element a in the list and replace it with element b\r\n// XXX: Do I need to handle attributes here?\r\nHTMLParser.ActiveFormattingElements.prototype.replace = function(a, b, attrs) {\r\n  var idx = this.list.lastIndexOf(a);\r\n  if (idx !== -1) {\r\n    this.list[idx] = b;\r\n    this.attrs[idx] = attrs;\r\n  }\r\n};\r\n\r\n// Find a in the list and insert b after it\r\n// This is only used for insert a bookmark object, so the\r\n// attrs array doesn't really matter\r\nHTMLParser.ActiveFormattingElements.prototype.insertAfter = function(a,b) {\r\n  var idx = this.list.lastIndexOf(a);\r\n  if (idx !== -1) {\r\n    this.list.splice(idx, 0, b);\r\n    this.attrs.splice(idx, 0, b);\r\n  }\r\n};\r\n\r\n\r\n\r\n\r\n/***\r\n * This is the parser factory function. It is the return value of\r\n * the outer closure that it is defined within.  Most of the parser\r\n * implementation details are inside this function.\r\n */\r\nfunction HTMLParser(address, fragmentContext, options) {\r\n  /***\r\n   * These are the parser's state variables\r\n   */\r\n  // Scanner state\r\n  var chars = null;\r\n  var numchars = 0; // Length of chars\r\n  var nextchar = 0; // Index of next char\r\n  var input_complete = false; // Becomes true when end() called.\r\n  var scanner_skip_newline = false; // If previous char was CR\r\n  var reentrant_invocations = 0;\r\n  var saved_scanner_state = [];\r\n  var leftovers = \"\";\r\n  var first_batch = true;\r\n  var paused = 0; // Becomes non-zero while loading scripts\r\n\r\n\r\n  // Tokenizer state\r\n  var tokenizer = data_state; // Current tokenizer state\r\n  var return_state;\r\n  var character_reference_code;\r\n  var tagnamebuf = \"\";\r\n  var lasttagname = \"\"; // holds the target end tag for text states\r\n  var tempbuf = [];\r\n  var attrnamebuf = \"\";\r\n  var attrvaluebuf = \"\";\r\n  var commentbuf = [];\r\n  var doctypenamebuf = [];\r\n  var doctypepublicbuf = [];\r\n  var doctypesystembuf = [];\r\n  var attributes = [];\r\n  var is_end_tag = false;\r\n\r\n  // Tree builder state\r\n  var parser = initial_mode; // Current insertion mode\r\n  var originalInsertionMode = null; // A saved insertion mode\r\n  var templateInsertionModes = []; // Stack of template insertion modes.\r\n  var stack = new HTMLParser.ElementStack(); // Stack of open elements\r\n  var afe = new HTMLParser.ActiveFormattingElements(); // mis-nested tags\r\n  var fragment = (fragmentContext!==undefined); // For innerHTML, etc.\r\n  var head_element_pointer = null;\r\n  var form_element_pointer = null;\r\n  var scripting_enabled = true;\r\n  if (fragmentContext) {\r\n\tscripting_enabled = fragmentContext.ownerDocument._scripting_enabled;\r\n  }\r\n  if (options && options.scripting_enabled === false)\r\n    scripting_enabled = false;\r\n  var frameset_ok = true;\r\n  var force_quirks = false;\r\n  var pending_table_text;\r\n  var text_integration_mode; // XXX a spec bug workaround?\r\n\r\n  // A single run of characters, buffered up to be sent to\r\n  // the parser as a single string.\r\n  var textrun = [];\r\n  var textIncludesNUL = false;\r\n  var ignore_linefeed = false;\r\n\r\n  /***\r\n   * This is the parser object that will be the return value of this\r\n   * factory function, which is some 5000 lines below.\r\n   * Note that the variable \"parser\" is the current state of the\r\n   * parser's state machine.  This variable \"htmlparser\" is the\r\n   * return value and defines the public API of the parser\r\n   */\r\n  var htmlparser = {\r\n    document: function() {\r\n      return doc;\r\n    },\r\n\r\n    // Convenience function for internal use. Can only be called once,\r\n    // as it removes the nodes from `doc` to add them to fragment.\r\n    _asDocumentFragment: function() {\r\n      var frag = doc.createDocumentFragment();\r\n      var root = doc.firstChild;\r\n      while(root.hasChildNodes()) {\r\n        frag.appendChild(root.firstChild);\r\n      }\r\n      return frag;\r\n    },\r\n\r\n    // Internal function used from HTMLScriptElement to pause the\r\n    // parser while a script is being loaded from the network\r\n    pause: function() {\r\n      // print(\"pausing parser\");\r\n      paused++;\r\n    },\r\n\r\n    // Called when a script finishes loading\r\n    resume: function() {\r\n      // print(\"resuming parser\");\r\n      paused--;\r\n      // XXX: added this to force a resumption.\r\n      // Is this the right thing to do?\r\n      this.parse(\"\");\r\n    },\r\n\r\n    // Parse the HTML text s.\r\n    // The second argument should be true if there is no more\r\n    // text to be parsed, and should be false or omitted otherwise.\r\n    // The second argument must not be set for recursive invocations\r\n    // from document.write()\r\n    parse: function(s, end, shouldPauseFunc) {\r\n      var moreToDo;\r\n\r\n      // If we're paused, remember the text to parse, but\r\n      // don't parse it now.\r\n      // (Don't invoke shouldPauseFunc because we haven't handled 'end' yet.)\r\n      if (paused > 0) {\r\n        leftovers += s;\r\n        return true; // more to do\r\n      }\r\n\r\n\r\n      if (reentrant_invocations === 0) {\r\n        // A normal, top-level invocation\r\n        if (leftovers) {\r\n          s = leftovers + s;\r\n          leftovers = \"\";\r\n        }\r\n\r\n        // Add a special marker character to the end of\r\n        // the buffer.  If the scanner is at the end of\r\n        // the buffer and input_complete is set, then this\r\n        // character will transform into an EOF token.\r\n        // Having an actual character that represents EOF\r\n        // in the character buffer makes lookahead regexp\r\n        // matching work more easily, and this is\r\n        // important for character references.\r\n        if (end) {\r\n          s += \"\\uFFFF\";\r\n          input_complete = true; // Makes scanChars() send EOF\r\n        }\r\n\r\n        chars = s;\r\n        numchars = s.length;\r\n        nextchar = 0;\r\n\r\n        if (first_batch) {\r\n          // We skip a leading Byte Order Mark (\\uFEFF)\r\n          // on first batch of text we're given\r\n          first_batch = false;\r\n          if (chars.charCodeAt(0) === 0xFEFF) nextchar = 1;\r\n        }\r\n\r\n        reentrant_invocations++;\r\n        moreToDo = scanChars(shouldPauseFunc);\r\n        leftovers = chars.substring(nextchar, numchars);\r\n        reentrant_invocations--;\r\n      }\r\n      else {\r\n        // This is the re-entrant case, which we have to\r\n        // handle a little differently.\r\n        reentrant_invocations++;\r\n\r\n        // Save current scanner state\r\n        saved_scanner_state.push(chars, numchars, nextchar);\r\n\r\n        // Set new scanner state\r\n        chars = s;\r\n        numchars = s.length;\r\n        nextchar = 0;\r\n\r\n        // Now scan as many of these new chars as we can\r\n        scanChars();\r\n        moreToDo = false;\r\n\r\n        leftovers = chars.substring(nextchar, numchars);\r\n\r\n        // restore old scanner state\r\n        nextchar = saved_scanner_state.pop();\r\n        numchars = saved_scanner_state.pop();\r\n        chars = saved_scanner_state.pop();\r\n\r\n        // If there were leftover chars from this invocation\r\n        // insert them into the pending invocation's buffer\r\n        // and trim already processed chars at the same time\r\n        if (leftovers) {\r\n          chars = leftovers + chars.substring(nextchar);\r\n          numchars = chars.length;\r\n          nextchar = 0;\r\n          leftovers = \"\";\r\n        }\r\n\r\n        // Decrement the counter\r\n        reentrant_invocations--;\r\n      }\r\n      return moreToDo;\r\n    }\r\n  };\r\n\r\n\r\n  // This is the document we'll be building up\r\n  var doc = new Document(true, address);\r\n\r\n  // The document needs to know about the parser, for document.write().\r\n  // This _parser property will be deleted when we're done parsing.\r\n  doc._parser = htmlparser;\r\n\r\n  // XXX I think that any document we use this parser on should support\r\n  // scripts. But I may need to configure that through a parser parameter\r\n  // Only documents with windows (\"browsing contexts\" to be precise)\r\n  // allow scripting.\r\n  doc._scripting_enabled = scripting_enabled;\r\n\r\n\r\n  /***\r\n   * The actual code of the HTMLParser() factory function begins here.\r\n   */\r\n\r\n  if (fragmentContext) { // for innerHTML parsing\r\n    if (fragmentContext.ownerDocument._quirks)\r\n      doc._quirks = true;\r\n    if (fragmentContext.ownerDocument._limitedQuirks)\r\n      doc._limitedQuirks = true;\r\n\r\n    // Set the initial tokenizer state\r\n    if (fragmentContext.namespaceURI === NAMESPACE.HTML) {\r\n      switch(fragmentContext.localName) {\r\n      case \"title\":\r\n      case \"textarea\":\r\n        tokenizer = rcdata_state;\r\n        break;\r\n      case \"style\":\r\n      case \"xmp\":\r\n      case \"iframe\":\r\n      case \"noembed\":\r\n      case \"noframes\":\r\n      case \"script\":\r\n      case \"plaintext\":\r\n        tokenizer = plaintext_state;\r\n        break;\r\n      }\r\n    }\r\n\r\n    var root = doc.createElement(\"html\");\r\n    doc._appendChild(root);\r\n    stack.push(root);\r\n    if (fragmentContext instanceof impl.HTMLTemplateElement) {\r\n      templateInsertionModes.push(in_template_mode);\r\n    }\r\n    resetInsertionMode();\r\n\r\n    for(var e = fragmentContext; e !== null; e = e.parentElement) {\r\n      if (e instanceof impl.HTMLFormElement) {\r\n        form_element_pointer = e;\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  /***\r\n   * Scanner functions\r\n   */\r\n  // Loop through the characters in chars, and pass them one at a time\r\n  // to the tokenizer FSM. Return when no more characters can be processed\r\n  // (This may leave 1 or more characters in the buffer: like a CR\r\n  // waiting to see if the next char is LF, or for states that require\r\n  // lookahead...)\r\n  function scanChars(shouldPauseFunc) {\r\n    var codepoint, s, pattern, eof;\r\n\r\n    while(nextchar < numchars) {\r\n\r\n      // If we just tokenized a </script> tag, then the paused flag\r\n      // may have been set to tell us to stop tokenizing while\r\n      // the script is loading\r\n      if (paused > 0 || (shouldPauseFunc && shouldPauseFunc())) {\r\n        return true;\r\n      }\r\n\r\n\r\n      switch(typeof tokenizer.lookahead) {\r\n      case 'undefined':\r\n        codepoint = chars.charCodeAt(nextchar++);\r\n        if (scanner_skip_newline) {\r\n          scanner_skip_newline = false;\r\n          if (codepoint === 0x000A) {\r\n            nextchar++;\r\n            continue;\r\n          }\r\n        }\r\n        switch(codepoint) {\r\n        case 0x000D:\r\n          // CR always turns into LF, but if the next character\r\n          // is LF, then that second LF is skipped.\r\n          if (nextchar < numchars) {\r\n            if (chars.charCodeAt(nextchar) === 0x000A)\r\n              nextchar++;\r\n          }\r\n          else {\r\n            // We don't know the next char right now, so we\r\n            // can't check if it is a LF.  So set a flag\r\n            scanner_skip_newline = true;\r\n          }\r\n\r\n          // In either case, emit a LF\r\n          tokenizer(0x000A);\r\n\r\n          break;\r\n        case 0xFFFF:\r\n          if (input_complete && nextchar === numchars) {\r\n            tokenizer(EOF); // codepoint will be 0xFFFF here\r\n            break;\r\n          }\r\n          /* falls through */\r\n        default:\r\n          tokenizer(codepoint);\r\n          break;\r\n        }\r\n        break;\r\n\r\n      case 'number':\r\n        codepoint = chars.charCodeAt(nextchar);\r\n\r\n        // The only tokenizer states that require fixed lookahead\r\n        // only consume alphanum characters, so we don't have\r\n        // to worry about CR and LF in this case\r\n\r\n        // tokenizer wants n chars of lookahead\r\n        var n = tokenizer.lookahead;\r\n        var needsString = true;\r\n        if (n < 0) {\r\n          needsString = false;\r\n          n = -n;\r\n        }\r\n\r\n        if (n < numchars - nextchar) {\r\n          // If we can look ahead that far\r\n          s = needsString ? chars.substring(nextchar, nextchar+n) : null;\r\n          eof = false;\r\n        }\r\n        else { // if we don't have that many characters\r\n          if (input_complete) { // If no more are coming\r\n            // Just return what we have\r\n            s = needsString ? chars.substring(nextchar, numchars) : null;\r\n            eof = true;\r\n            if (codepoint === 0xFFFF && nextchar === numchars-1)\r\n              codepoint = EOF;\r\n          }\r\n          else {\r\n            // Return now and wait for more chars later\r\n            return true;\r\n          }\r\n        }\r\n        tokenizer(codepoint, s, eof);\r\n        break;\r\n      case 'string':\r\n        codepoint = chars.charCodeAt(nextchar);\r\n\r\n        // tokenizer wants characters up to a matching string\r\n        pattern = tokenizer.lookahead;\r\n        var pos = chars.indexOf(pattern, nextchar);\r\n        if (pos !== -1) {\r\n          s = chars.substring(nextchar, pos + pattern.length);\r\n          eof = false;\r\n        }\r\n        else {  // No match\r\n          // If more characters coming, wait for them\r\n          if (!input_complete) return true;\r\n\r\n          // Otherwise, we've got to return what we've got\r\n          s = chars.substring(nextchar, numchars);\r\n          if (codepoint === 0xFFFF && nextchar === numchars-1)\r\n            codepoint = EOF;\r\n          eof = true;\r\n        }\r\n\r\n        // The tokenizer states that require this kind of\r\n        // lookahead have to be careful to handle CR characters\r\n        // correctly\r\n        tokenizer(codepoint, s, eof);\r\n        break;\r\n      }\r\n    }\r\n    return false; // no more characters to scan!\r\n  }\r\n\r\n\r\n  /***\r\n   * Tokenizer utility functions\r\n   */\r\n  function addAttribute(name,value) {\r\n    // Make sure there isn't already an attribute with this name\r\n    // If there is, ignore this one.\r\n    for(var i = 0; i < attributes.length; i++) {\r\n      if (attributes[i][0] === name) return;\r\n    }\r\n\r\n    if (value !== undefined) {\r\n      attributes.push([name, value]);\r\n    }\r\n    else {\r\n      attributes.push([name]);\r\n    }\r\n  }\r\n\r\n  // Shortcut for simple attributes\r\n  function handleSimpleAttribute() {\r\n    SIMPLEATTR.lastIndex = nextchar-1;\r\n    var matched = SIMPLEATTR.exec(chars);\r\n    if (!matched) throw new Error(\"should never happen\");\r\n    var name = matched[1];\r\n    if (!name) return false;\r\n    var value = matched[2];\r\n    var len = value.length;\r\n    switch(value[0]) {\r\n    case '\"':\r\n    case \"'\":\r\n      value = value.substring(1, len-1);\r\n      nextchar += (matched[0].length-1);\r\n      tokenizer = after_attribute_value_quoted_state;\r\n      break;\r\n    default:\r\n      tokenizer = before_attribute_name_state;\r\n      nextchar += (matched[0].length-1);\r\n      value = value.substring(0, len-1);\r\n      break;\r\n    }\r\n\r\n    // Make sure there isn't already an attribute with this name\r\n    // If there is, ignore this one.\r\n    for(var i = 0; i < attributes.length; i++) {\r\n      if (attributes[i][0] === name) return true;\r\n    }\r\n\r\n    attributes.push([name, value]);\r\n    return true;\r\n  }\r\n\r\n  function beginTagName() {\r\n    is_end_tag = false;\r\n    tagnamebuf = \"\";\r\n    attributes.length = 0;\r\n  }\r\n  function beginEndTagName() {\r\n    is_end_tag = true;\r\n    tagnamebuf = \"\";\r\n    attributes.length = 0;\r\n  }\r\n\r\n  function beginTempBuf() { tempbuf.length = 0; }\r\n  function beginAttrName() { attrnamebuf = \"\"; }\r\n  function beginAttrValue() { attrvaluebuf = \"\"; }\r\n  function beginComment() { commentbuf.length = 0; }\r\n  function beginDoctype() {\r\n    doctypenamebuf.length = 0;\r\n    doctypepublicbuf = null;\r\n    doctypesystembuf = null;\r\n  }\r\n  function beginDoctypePublicId() { doctypepublicbuf = []; }\r\n  function beginDoctypeSystemId() { doctypesystembuf = []; }\r\n  function forcequirks() { force_quirks = true; }\r\n  function cdataAllowed() {\r\n    return stack.top &&\r\n      stack.top.namespaceURI !== \"http://www.w3.org/1999/xhtml\";\r\n  }\r\n\r\n  // Return true if the codepoints in the specified buffer match the\r\n  // characters of lasttagname\r\n  function appropriateEndTag(buf) {\r\n    return lasttagname === buf;\r\n  }\r\n\r\n  function flushText() {\r\n    if (textrun.length > 0) {\r\n      var s = buf2str(textrun);\r\n      textrun.length = 0;\r\n\r\n      if (ignore_linefeed) {\r\n        ignore_linefeed = false;\r\n        if (s[0] === \"\\n\") s = s.substring(1);\r\n        if (s.length === 0) return;\r\n      }\r\n\r\n      insertToken(TEXT, s);\r\n      textIncludesNUL = false;\r\n    }\r\n    ignore_linefeed = false;\r\n  }\r\n\r\n  // Consume chars matched by the pattern and return them as a string. Starts\r\n  // matching at the current position, so users should drop the current char\r\n  // otherwise.\r\n  function getMatchingChars(pattern) {\r\n    pattern.lastIndex = nextchar - 1;\r\n    var match = pattern.exec(chars);\r\n    if (match && match.index === nextchar - 1) {\r\n      match = match[0];\r\n      nextchar += match.length - 1;\r\n      /* Careful!  Make sure we haven't matched the EOF character! */\r\n      if (input_complete && nextchar === numchars) {\r\n        // Oops, backup one.\r\n        match = match.slice(0, -1);\r\n        nextchar--;\r\n      }\r\n      return match;\r\n    } else {\r\n      throw new Error(\"should never happen\");\r\n    }\r\n  }\r\n\r\n  // emit a string of chars that match a regexp\r\n  // Returns false if no chars matched.\r\n  function emitCharsWhile(pattern) {\r\n    pattern.lastIndex = nextchar-1;\r\n    var match = pattern.exec(chars)[0];\r\n    if (!match) return false;\r\n    emitCharString(match);\r\n    nextchar += match.length - 1;\r\n    return true;\r\n  }\r\n\r\n  // This is used by CDATA sections\r\n  function emitCharString(s) {\r\n    if (textrun.length > 0) flushText();\r\n\r\n    if (ignore_linefeed) {\r\n      ignore_linefeed = false;\r\n      if (s[0] === \"\\n\") s = s.substring(1);\r\n      if (s.length === 0) return;\r\n    }\r\n\r\n    insertToken(TEXT, s);\r\n  }\r\n\r\n  function emitTag() {\r\n    if (is_end_tag) insertToken(ENDTAG, tagnamebuf);\r\n    else {\r\n      // Remember the last open tag we emitted\r\n      var tagname = tagnamebuf;\r\n      tagnamebuf = \"\";\r\n      lasttagname = tagname;\r\n      insertToken(TAG, tagname, attributes);\r\n    }\r\n  }\r\n\r\n\r\n  // A shortcut: look ahead and if this is a open or close tag\r\n  // in lowercase with no spaces and no attributes, just emit it now.\r\n  function emitSimpleTag() {\r\n    if (nextchar === numchars) { return false; /* not even 1 char left */ }\r\n    SIMPLETAG.lastIndex = nextchar;\r\n    var matched = SIMPLETAG.exec(chars);\r\n    if (!matched) throw new Error(\"should never happen\");\r\n    var tagname = matched[2];\r\n    if (!tagname) return false;\r\n    var endtag = matched[1];\r\n    if (endtag) {\r\n      nextchar += (tagname.length+2);\r\n      insertToken(ENDTAG, tagname);\r\n    }\r\n    else {\r\n      nextchar += (tagname.length+1);\r\n      lasttagname = tagname;\r\n      insertToken(TAG, tagname, NOATTRS);\r\n    }\r\n    return true;\r\n  }\r\n\r\n  function emitSelfClosingTag() {\r\n    if (is_end_tag) insertToken(ENDTAG, tagnamebuf, null, true);\r\n    else {\r\n      insertToken(TAG, tagnamebuf, attributes, true);\r\n    }\r\n  }\r\n\r\n  function emitDoctype() {\r\n    insertToken(DOCTYPE,\r\n          buf2str(doctypenamebuf),\r\n          doctypepublicbuf ? buf2str(doctypepublicbuf) : undefined,\r\n          doctypesystembuf ? buf2str(doctypesystembuf) : undefined);\r\n  }\r\n\r\n  function emitEOF() {\r\n    flushText();\r\n    parser(EOF); // EOF never goes to insertForeignContent()\r\n    doc.modclock = 1; // Start tracking modifications\r\n  }\r\n\r\n  // Insert a token, either using the current parser insertion mode\r\n  // (for HTML stuff) or using the insertForeignToken() method.\r\n  var insertToken = htmlparser.insertToken = function insertToken(t, value, arg3, arg4) {\r\n    flushText();\r\n    var current = stack.top;\r\n\r\n    if (!current || current.namespaceURI === NAMESPACE.HTML) {\r\n      // This is the common case\r\n      parser(t, value, arg3, arg4);\r\n    }\r\n    else {\r\n      // Otherwise we may need to insert this token as foreign content\r\n      if (t !== TAG && t !== TEXT) {\r\n        insertForeignToken(t, value, arg3, arg4);\r\n      }\r\n      else {\r\n        // But in some cases we treat it as regular content\r\n        if ((isMathmlTextIntegrationPoint(current) &&\r\n           (t === TEXT ||\r\n            (t === TAG &&\r\n             value !== \"mglyph\" && value !== \"malignmark\"))) ||\r\n          (t === TAG &&\r\n           value === \"svg\" &&\r\n           current.namespaceURI === NAMESPACE.MATHML &&\r\n           current.localName === \"annotation-xml\") ||\r\n          isHTMLIntegrationPoint(current)) {\r\n\r\n          // XXX: the text_integration_mode stuff is an\r\n          // attempted bug workaround of mine\r\n          text_integration_mode = true;\r\n          parser(t, value, arg3, arg4);\r\n          text_integration_mode = false;\r\n        }\r\n        // Otherwise it is foreign content\r\n        else {\r\n          insertForeignToken(t, value, arg3, arg4);\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n\r\n  /***\r\n   * Tree building utility functions\r\n   */\r\n  function insertComment(data) {\r\n    var parent = stack.top;\r\n    if (foster_parent_mode && isA(parent, tablesectionrowSet)) {\r\n      fosterParent(function(doc) { return doc.createComment(data); });\r\n    } else {\r\n      // \"If the adjusted insertion location is inside a template element,\r\n      // let it instead be inside the template element's template contents\"\r\n      if (parent instanceof impl.HTMLTemplateElement) {\r\n        parent = parent.content;\r\n      }\r\n      parent._appendChild(parent.ownerDocument.createComment(data));\r\n    }\r\n  }\r\n\r\n  function insertText(s) {\r\n    var parent = stack.top;\r\n    if (foster_parent_mode && isA(parent, tablesectionrowSet)) {\r\n      fosterParent(function(doc) { return doc.createTextNode(s); });\r\n    } else {\r\n      // \"If the adjusted insertion location is inside a template element,\r\n      // let it instead be inside the template element's template contents\"\r\n      if (parent instanceof impl.HTMLTemplateElement) {\r\n        parent = parent.content;\r\n      }\r\n      // \"If there is a Text node immediately before the adjusted insertion\r\n      // location, then append data to that Text node's data.\"\r\n      var lastChild = parent.lastChild;\r\n      if (lastChild && lastChild.nodeType === Node.TEXT_NODE) {\r\n        lastChild.appendData(s);\r\n      } else {\r\n        parent._appendChild(parent.ownerDocument.createTextNode(s));\r\n      }\r\n    }\r\n  }\r\n\r\n  function createHTMLElt(doc, name, attrs) {\r\n    // Create the element this way, rather than with\r\n    // doc.createElement because createElement() does error\r\n    // checking on the element name that we need to avoid here.\r\n    var elt = html.createElement(doc, name, null);\r\n\r\n    if (attrs) {\r\n      for(var i = 0, n = attrs.length; i < n; i++) {\r\n        // Use the _ version to avoid testing the validity\r\n        // of the attribute name\r\n        elt._setAttribute(attrs[i][0], attrs[i][1]);\r\n      }\r\n    }\r\n    // XXX\r\n    // If the element is a resettable form element,\r\n    // run its reset algorithm now\r\n    // XXX\r\n    // handle case where form-element-pointer is not null\r\n    return elt;\r\n  }\r\n\r\n  // The in_table insertion mode turns on this flag, and that makes\r\n  // insertHTMLElement use the foster parenting algorithm for elements\r\n  // tags inside a table\r\n  var foster_parent_mode = false;\r\n\r\n  function insertHTMLElement(name, attrs) {\r\n    var elt = insertElement(function(doc) {\r\n      return createHTMLElt(doc, name, attrs);\r\n    });\r\n\r\n    // XXX\r\n    // If this is a form element, set its form attribute property here\r\n    if (isA(elt, formassociatedSet)) {\r\n      elt._form = form_element_pointer;\r\n    }\r\n\r\n    return elt;\r\n  }\r\n\r\n  // Insert the element into the open element or foster parent it\r\n  function insertElement(eltFunc) {\r\n    var elt;\r\n    if (foster_parent_mode && isA(stack.top, tablesectionrowSet)) {\r\n      elt = fosterParent(eltFunc);\r\n    }\r\n    else if (stack.top instanceof impl.HTMLTemplateElement) {\r\n      // \"If the adjusted insertion location is inside a template element,\r\n      // let it instead be inside the template element's template contents\"\r\n      elt = eltFunc(stack.top.content.ownerDocument);\r\n      stack.top.content._appendChild(elt);\r\n    } else {\r\n      elt = eltFunc(stack.top.ownerDocument);\r\n      stack.top._appendChild(elt);\r\n    }\r\n\r\n    stack.push(elt);\r\n    return elt;\r\n  }\r\n\r\n  function insertForeignElement(name, attrs, ns) {\r\n    return insertElement(function(doc) {\r\n      // We need to prevent createElementNS from trying to parse `name` as a\r\n      // `qname`, so use an internal Document#_createElementNS() interface.\r\n      var elt = doc._createElementNS(name, ns, null);\r\n      if (attrs) {\r\n        for(var i = 0, n = attrs.length; i < n; i++) {\r\n          var attr = attrs[i];\r\n          if (attr.length === 2)\r\n            elt._setAttribute(attr[0], attr[1]);\r\n          else {\r\n            elt._setAttributeNS(attr[2], attr[0], attr[1]);\r\n          }\r\n        }\r\n      }\r\n      return elt;\r\n    });\r\n  }\r\n\r\n  function lastElementOfType(type) {\r\n    for(var i = stack.elements.length-1; i >= 0; i--) {\r\n      if (stack.elements[i] instanceof type) {\r\n        return i;\r\n      }\r\n    }\r\n    return -1;\r\n  }\r\n\r\n  function fosterParent(eltFunc) {\r\n    var parent, before, lastTable = -1, lastTemplate = -1, elt;\r\n\r\n    lastTable = lastElementOfType(impl.HTMLTableElement);\r\n    lastTemplate = lastElementOfType(impl.HTMLTemplateElement);\r\n\r\n    if (lastTemplate >= 0 && (lastTable < 0 || lastTemplate > lastTable)) {\r\n      parent = stack.elements[lastTemplate];\r\n    } else if (lastTable >= 0) {\r\n      parent = stack.elements[lastTable].parentNode;\r\n      if (parent) {\r\n        before = stack.elements[lastTable];\r\n      } else {\r\n        parent = stack.elements[lastTable - 1];\r\n      }\r\n    }\r\n    if (!parent) parent = stack.elements[0]; // the `html` element.\r\n\r\n    // \"If the adjusted insertion location is inside a template element,\r\n    // let it instead be inside the template element's template contents\"\r\n    if (parent instanceof impl.HTMLTemplateElement) {\r\n      parent = parent.content;\r\n    }\r\n    // Create element in the appropriate document.\r\n    elt = eltFunc(parent.ownerDocument);\r\n\r\n    if (elt.nodeType === Node.TEXT_NODE) {\r\n      var prev;\r\n      if (before) prev = before.previousSibling;\r\n      else prev = parent.lastChild;\r\n      if (prev && prev.nodeType === Node.TEXT_NODE) {\r\n        prev.appendData(elt.data);\r\n        return elt;\r\n      }\r\n    }\r\n    if (before)\r\n      parent.insertBefore(elt, before);\r\n    else\r\n      parent._appendChild(elt);\r\n    return elt;\r\n  }\r\n\r\n\r\n  function resetInsertionMode() {\r\n    var last = false;\r\n    for(var i = stack.elements.length-1; i >= 0; i--) {\r\n      var node = stack.elements[i];\r\n      if (i === 0) {\r\n        last = true;\r\n        if (fragment) {\r\n          node = fragmentContext;\r\n        }\r\n      }\r\n      if (node.namespaceURI === NAMESPACE.HTML) {\r\n        var tag = node.localName;\r\n        switch(tag) {\r\n        case \"select\":\r\n          for(var j = i; j > 0; ) {\r\n            var ancestor = stack.elements[--j];\r\n            if (ancestor instanceof impl.HTMLTemplateElement) {\r\n              break;\r\n            } else if (ancestor instanceof impl.HTMLTableElement) {\r\n              parser = in_select_in_table_mode;\r\n              return;\r\n            }\r\n          }\r\n          parser = in_select_mode;\r\n          return;\r\n        case \"tr\":\r\n          parser = in_row_mode;\r\n          return;\r\n        case \"tbody\":\r\n        case \"tfoot\":\r\n        case \"thead\":\r\n          parser = in_table_body_mode;\r\n          return;\r\n        case \"caption\":\r\n          parser = in_caption_mode;\r\n          return;\r\n        case \"colgroup\":\r\n          parser = in_column_group_mode;\r\n          return;\r\n        case \"table\":\r\n          parser = in_table_mode;\r\n          return;\r\n        case \"template\":\r\n          parser = templateInsertionModes[templateInsertionModes.length-1];\r\n          return;\r\n        case \"body\":\r\n          parser = in_body_mode;\r\n          return;\r\n        case \"frameset\":\r\n          parser = in_frameset_mode;\r\n          return;\r\n        case \"html\":\r\n          if (head_element_pointer === null) {\r\n            parser = before_head_mode;\r\n          } else {\r\n            parser = after_head_mode;\r\n          }\r\n          return;\r\n        default:\r\n          if (!last) {\r\n            if (tag === \"head\") {\r\n              parser = in_head_mode;\r\n              return;\r\n            }\r\n            if (tag === \"td\" || tag === \"th\") {\r\n              parser = in_cell_mode;\r\n              return;\r\n            }\r\n          }\r\n        }\r\n      }\r\n      if (last) {\r\n        parser = in_body_mode;\r\n        return;\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  function parseRawText(name, attrs) {\r\n    insertHTMLElement(name, attrs);\r\n    tokenizer = rawtext_state;\r\n    originalInsertionMode = parser;\r\n    parser = text_mode;\r\n  }\r\n\r\n  function parseRCDATA(name, attrs) {\r\n    insertHTMLElement(name, attrs);\r\n    tokenizer = rcdata_state;\r\n    originalInsertionMode = parser;\r\n    parser = text_mode;\r\n  }\r\n\r\n  // Make a copy of element i on the list of active formatting\r\n  // elements, using its original attributes, not current\r\n  // attributes (which may have been modified by a script)\r\n  function afeclone(doc, i) {\r\n    return {\r\n      elt: createHTMLElt(doc, afe.list[i].localName, afe.attrs[i]),\r\n      attrs: afe.attrs[i],\r\n    };\r\n  }\r\n\r\n\r\n  function afereconstruct() {\r\n    if (afe.list.length === 0) return;\r\n    var entry = afe.list[afe.list.length-1];\r\n    // If the last is a marker , do nothing\r\n    if (entry === afe.MARKER) return;\r\n    // Or if it is an open element, do nothing\r\n    if (stack.elements.lastIndexOf(entry) !== -1) return;\r\n\r\n    // Loop backward through the list until we find a marker or an\r\n    // open element, and then move forward one from there.\r\n    for(var i = afe.list.length-2; i >= 0; i--) {\r\n      entry = afe.list[i];\r\n      if (entry === afe.MARKER) break;\r\n      if (stack.elements.lastIndexOf(entry) !== -1) break;\r\n    }\r\n\r\n    // Now loop forward, starting from the element after the current\r\n    // one, recreating formatting elements and pushing them back onto\r\n    // the list of open elements\r\n    for(i = i+1; i < afe.list.length; i++) {\r\n      var newelt = insertElement(function(doc) { return afeclone(doc, i).elt; });\r\n      afe.list[i] = newelt;\r\n    }\r\n  }\r\n\r\n  // Used by the adoptionAgency() function\r\n  var BOOKMARK = {localName:\"BM\"};\r\n\r\n  function adoptionAgency(tag) {\r\n    // If the current node is an HTML element whose tag name is subject,\r\n    // and the current node is not in the list of active formatting\r\n    // elements, then pop the current node off the stack of open\r\n    // elements and abort these steps.\r\n    if (isA(stack.top, tag) && afe.indexOf(stack.top) === -1) {\r\n      stack.pop();\r\n      return true; // no more handling required\r\n    }\r\n\r\n    // Let outer loop counter be zero.\r\n    var outer = 0;\r\n\r\n    // Outer loop: If outer loop counter is greater than or\r\n    // equal to eight, then abort these steps.\r\n    while(outer < 8) {\r\n      // Increment outer loop counter by one.\r\n      outer++;\r\n\r\n      // Let the formatting element be the last element in the list\r\n      // of active formatting elements that: is between the end of\r\n      // the list and the last scope marker in the list, if any, or\r\n      // the start of the list otherwise, and has the same tag name\r\n      // as the token.\r\n      var fmtelt = afe.findElementByTag(tag);\r\n\r\n      // If there is no such node, then abort these steps and instead\r\n      // act as described in the \"any other end tag\" entry below.\r\n      if (!fmtelt) {\r\n        return false; // false means handle by the default case\r\n      }\r\n\r\n      // Otherwise, if there is such a node, but that node is not in\r\n      // the stack of open elements, then this is a parse error;\r\n      // remove the element from the list, and abort these steps.\r\n      var index = stack.elements.lastIndexOf(fmtelt);\r\n      if (index === -1) {\r\n        afe.remove(fmtelt);\r\n        return true;   // true means no more handling required\r\n      }\r\n\r\n      // Otherwise, if there is such a node, and that node is also in\r\n      // the stack of open elements, but the element is not in scope,\r\n      // then this is a parse error; ignore the token, and abort\r\n      // these steps.\r\n      if (!stack.elementInScope(fmtelt)) {\r\n        return true;\r\n      }\r\n\r\n      // Let the furthest block be the topmost node in the stack of\r\n      // open elements that is lower in the stack than the formatting\r\n      // element, and is an element in the special category. There\r\n      // might not be one.\r\n      var furthestblock = null, furthestblockindex;\r\n      for(var i = index+1; i < stack.elements.length; i++) {\r\n        if (isA(stack.elements[i], specialSet)) {\r\n          furthestblock = stack.elements[i];\r\n          furthestblockindex = i;\r\n          break;\r\n        }\r\n      }\r\n\r\n      // If there is no furthest block, then the UA must skip the\r\n      // subsequent steps and instead just pop all the nodes from the\r\n      // bottom of the stack of open elements, from the current node\r\n      // up to and including the formatting element, and remove the\r\n      // formatting element from the list of active formatting\r\n      // elements.\r\n      if (!furthestblock) {\r\n        stack.popElement(fmtelt);\r\n        afe.remove(fmtelt);\r\n        return true;\r\n      }\r\n      else {\r\n        // Let the common ancestor be the element immediately above\r\n        // the formatting element in the stack of open elements.\r\n        var ancestor = stack.elements[index-1];\r\n\r\n        // Let a bookmark note the position of the formatting\r\n        // element in the list of active formatting elements\r\n        // relative to the elements on either side of it in the\r\n        // list.\r\n        afe.insertAfter(fmtelt, BOOKMARK);\r\n\r\n        // Let node and last node be the furthest block.\r\n        var node = furthestblock;\r\n        var lastnode = furthestblock;\r\n        var nodeindex = furthestblockindex;\r\n        var nodeafeindex;\r\n\r\n        // Let inner loop counter be zero.\r\n        var inner = 0;\r\n\r\n        while (true) {\r\n\r\n          // Increment inner loop counter by one.\r\n          inner++;\r\n\r\n          // Let node be the element immediately above node in\r\n          // the stack of open elements, or if node is no longer\r\n          // in the stack of open elements (e.g. because it got\r\n          // removed by this algorithm), the element that was\r\n          // immediately above node in the stack of open elements\r\n          // before node was removed.\r\n          node = stack.elements[--nodeindex];\r\n\r\n          // If node is the formatting element, then go\r\n          // to the next step in the overall algorithm.\r\n          if (node === fmtelt) break;\r\n\r\n          // If the inner loop counter is greater than three and node\r\n          // is in the list of active formatting elements, then remove\r\n          // node from the list of active formatting elements.\r\n          nodeafeindex = afe.indexOf(node);\r\n          if (inner > 3 && nodeafeindex !== -1) {\r\n            afe.remove(node);\r\n            nodeafeindex = -1;\r\n          }\r\n\r\n          // If node is not in the list of active formatting\r\n          // elements, then remove node from the stack of open\r\n          // elements and then go back to the step labeled inner\r\n          // loop.\r\n          if (nodeafeindex === -1) {\r\n            stack.removeElement(node);\r\n            continue;\r\n          }\r\n\r\n          // Create an element for the token for which the\r\n          // element node was created with common ancestor as\r\n          // the intended parent, replace the entry for node\r\n          // in the list of active formatting elements with an\r\n          // entry for the new element, replace the entry for\r\n          // node in the stack of open elements with an entry for\r\n          // the new element, and let node be the new element.\r\n          var newelt = afeclone(ancestor.ownerDocument, nodeafeindex);\r\n          afe.replace(node, newelt.elt, newelt.attrs);\r\n          stack.elements[nodeindex] = newelt.elt;\r\n          node = newelt.elt;\r\n\r\n          // If last node is the furthest block, then move the\r\n          // aforementioned bookmark to be immediately after the\r\n          // new node in the list of active formatting elements.\r\n          if (lastnode === furthestblock) {\r\n            afe.remove(BOOKMARK);\r\n            afe.insertAfter(newelt.elt, BOOKMARK);\r\n          }\r\n\r\n          // Insert last node into node, first removing it from\r\n          // its previous parent node if any.\r\n          node._appendChild(lastnode);\r\n\r\n          // Let last node be node.\r\n          lastnode = node;\r\n        }\r\n\r\n        // If the common ancestor node is a table, tbody, tfoot,\r\n        // thead, or tr element, then, foster parent whatever last\r\n        // node ended up being in the previous step, first removing\r\n        // it from its previous parent node if any.\r\n        if (foster_parent_mode && isA(ancestor, tablesectionrowSet)) {\r\n          fosterParent(function() { return lastnode; });\r\n        }\r\n        // Otherwise, append whatever last node ended up being in\r\n        // the previous step to the common ancestor node, first\r\n        // removing it from its previous parent node if any.\r\n        else if (ancestor instanceof impl.HTMLTemplateElement) {\r\n          ancestor.content._appendChild(lastnode);\r\n        } else {\r\n          ancestor._appendChild(lastnode);\r\n        }\r\n\r\n        // Create an element for the token for which the\r\n        // formatting element was created, with furthest block\r\n        // as the intended parent.\r\n        var newelt2 = afeclone(furthestblock.ownerDocument, afe.indexOf(fmtelt));\r\n\r\n        // Take all of the child nodes of the furthest block and\r\n        // append them to the element created in the last step.\r\n        while(furthestblock.hasChildNodes()) {\r\n          newelt2.elt._appendChild(furthestblock.firstChild);\r\n        }\r\n\r\n        // Append that new element to the furthest block.\r\n        furthestblock._appendChild(newelt2.elt);\r\n\r\n        // Remove the formatting element from the list of active\r\n        // formatting elements, and insert the new element into the\r\n        // list of active formatting elements at the position of\r\n        // the aforementioned bookmark.\r\n        afe.remove(fmtelt);\r\n        afe.replace(BOOKMARK, newelt2.elt, newelt2.attrs);\r\n\r\n        // Remove the formatting element from the stack of open\r\n        // elements, and insert the new element into the stack of\r\n        // open elements immediately below the position of the\r\n        // furthest block in that stack.\r\n        stack.removeElement(fmtelt);\r\n        var pos = stack.elements.lastIndexOf(furthestblock);\r\n        stack.elements.splice(pos+1, 0, newelt2.elt);\r\n      }\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  // We do this when we get /script in in_text_mode\r\n  function handleScriptEnd() {\r\n    // XXX:\r\n    // This is just a stub implementation right now and doesn't run scripts.\r\n    // Getting this method right involves the event loop, URL resolution\r\n    // script fetching etc. For now I just want to be able to parse\r\n    // documents and test the parser.\r\n\r\n    //var script = stack.top;\r\n    stack.pop();\r\n    parser = originalInsertionMode;\r\n    //script._prepare();\r\n    return;\r\n\r\n    // XXX: here is what this method is supposed to do\r\n\r\n    // Provide a stable state.\r\n\r\n    // Let script be the current node (which will be a script\r\n    // element).\r\n\r\n    // Pop the current node off the stack of open elements.\r\n\r\n    // Switch the insertion mode to the original insertion mode.\r\n\r\n    // Let the old insertion point have the same value as the current\r\n    // insertion point. Let the insertion point be just before the\r\n    // next input character.\r\n\r\n    // Increment the parser's script nesting level by one.\r\n\r\n    // Prepare the script. This might cause some script to execute,\r\n    // which might cause new characters to be inserted into the\r\n    // tokenizer, and might cause the tokenizer to output more tokens,\r\n    // resulting in a reentrant invocation of the parser.\r\n\r\n    // Decrement the parser's script nesting level by one. If the\r\n    // parser's script nesting level is zero, then set the parser\r\n    // pause flag to false.\r\n\r\n    // Let the insertion point have the value of the old insertion\r\n    // point. (In other words, restore the insertion point to its\r\n    // previous value. This value might be the \"undefined\" value.)\r\n\r\n    // At this stage, if there is a pending parsing-blocking script,\r\n    // then:\r\n\r\n    // If the script nesting level is not zero:\r\n\r\n    //   Set the parser pause flag to true, and abort the processing\r\n    //   of any nested invocations of the tokenizer, yielding\r\n    //   control back to the caller. (Tokenization will resume when\r\n    //   the caller returns to the \"outer\" tree construction stage.)\r\n\r\n    //   The tree construction stage of this particular parser is\r\n    //   being called reentrantly, say from a call to\r\n    //   document.write().\r\n\r\n    // Otherwise:\r\n\r\n    //     Run these steps:\r\n\r\n    //       Let the script be the pending parsing-blocking\r\n    //       script. There is no longer a pending\r\n    //       parsing-blocking script.\r\n\r\n    //       Block the tokenizer for this instance of the HTML\r\n    //       parser, such that the event loop will not run tasks\r\n    //       that invoke the tokenizer.\r\n\r\n    //       If the parser's Document has a style sheet that is\r\n    //       blocking scripts or the script's \"ready to be\r\n    //       parser-executed\" flag is not set: spin the event\r\n    //       loop until the parser's Document has no style sheet\r\n    //       that is blocking scripts and the script's \"ready to\r\n    //       be parser-executed\" flag is set.\r\n\r\n    //       Unblock the tokenizer for this instance of the HTML\r\n    //       parser, such that tasks that invoke the tokenizer\r\n    //       can again be run.\r\n\r\n    //       Let the insertion point be just before the next\r\n    //       input character.\r\n\r\n    //       Increment the parser's script nesting level by one\r\n    //       (it should be zero before this step, so this sets\r\n    //       it to one).\r\n\r\n    //       Execute the script.\r\n\r\n    //       Decrement the parser's script nesting level by\r\n    //       one. If the parser's script nesting level is zero\r\n    //       (which it always should be at this point), then set\r\n    //       the parser pause flag to false.\r\n\r\n    //       Let the insertion point be undefined again.\r\n\r\n    //       If there is once again a pending parsing-blocking\r\n    //       script, then repeat these steps from step 1.\r\n\r\n\r\n  }\r\n\r\n  function stopParsing() {\r\n    // XXX This is just a temporary implementation to get the parser working.\r\n    // A full implementation involves scripts and events and the event loop.\r\n\r\n    // Remove the link from document to parser.\r\n    // This is instead of \"set the insertion point to undefined\".\r\n    // It means that document.write() can't write into the doc anymore.\r\n    delete doc._parser;\r\n\r\n    stack.elements.length = 0; // pop everything off\r\n\r\n    // If there is a window object associated with the document\r\n    // then trigger an load event on it\r\n    if (doc.defaultView) {\r\n      doc.defaultView.dispatchEvent(new impl.Event(\"load\",{}));\r\n    }\r\n\r\n  }\r\n\r\n  /****\r\n   * Tokenizer states\r\n   */\r\n\r\n  /**\r\n   * This file was partially mechanically generated from\r\n   * http://www.whatwg.org/specs/web-apps/current-work/multipage/tokenization.html\r\n   *\r\n   * After mechanical conversion, it was further converted from\r\n   * prose to JS by hand, but the intent is that it is a very\r\n   * faithful rendering of the HTML tokenization spec in\r\n   * JavaScript.\r\n   *\r\n   * It is not a goal of this tokenizer to detect or report\r\n   * parse errors.\r\n   *\r\n   * XXX The tokenizer is supposed to work with straight UTF32\r\n   * codepoints. But I don't think it has any dependencies on\r\n   * any character outside of the BMP so I think it is safe to\r\n   * pass it UTF16 characters. I don't think it will ever change\r\n   * state in the middle of a surrogate pair.\r\n   */\r\n\r\n  /*\r\n   * Each state is represented by a function.  For most states, the\r\n   * scanner simply passes the next character (as an integer\r\n   * codepoint) to the current state function and automatically\r\n   * consumes the character.  If the state function can't process\r\n   * the character it can call pushback() to push it back to the\r\n   * scanner.\r\n   *\r\n   * Some states require lookahead, though.  If a state function has\r\n   * a lookahead property, then it is invoked differently.  In this\r\n   * case, the scanner invokes the function with 3 arguments: 1) the\r\n   * next codepoint 2) a string of lookahead text 3) a boolean that\r\n   * is true if the lookahead goes all the way to the EOF. (XXX\r\n   * actually maybe this third is not necessary... the lookahead\r\n   * could just include \\uFFFF?)\r\n   *\r\n   * If the lookahead property of a state function is an integer, it\r\n   * specifies the number of characters required. If it is a string,\r\n   * then the scanner will scan for that string and return all\r\n   * characters up to and including that sequence, or up to EOF.  If\r\n   * the lookahead property is a regexp, then the scanner will match\r\n   * the regexp at the current point and return the matching string.\r\n   *\r\n   * States that require lookahead are responsible for explicitly\r\n   * consuming the characters they process. They do this by\r\n   * incrementing nextchar by the number of processed characters.\r\n   */\r\n  function reconsume(c, new_state) {\r\n    tokenizer = new_state;\r\n    nextchar--; // pushback\r\n  }\r\n\r\n  function data_state(c) {\r\n    switch(c) {\r\n    case 0x0026: // AMPERSAND\r\n      return_state = data_state;\r\n      tokenizer = character_reference_state;\r\n      break;\r\n    case 0x003C: // LESS-THAN SIGN\r\n      if (emitSimpleTag()) // Shortcut for <p>, <dl>, </div> etc.\r\n        break;\r\n      tokenizer = tag_open_state;\r\n      break;\r\n    case 0x0000: // NULL\r\n      // Usually null characters emitted by the tokenizer will be\r\n      // ignored by the tree builder, but sometimes they'll be\r\n      // converted to \\uFFFD.  I don't want to have the search every\r\n      // string emitted to replace NULs, so I'll set a flag\r\n      // if I've emitted a NUL.\r\n      textrun.push(c);\r\n      textIncludesNUL = true;\r\n      break;\r\n    case -1: // EOF\r\n      emitEOF();\r\n      break;\r\n    default:\r\n      // Instead of just pushing a single character and then\r\n      // coming back to the very same place, lookahead and\r\n      // emit everything we can at once.\r\n      /*jshint -W030 */\r\n      emitCharsWhile(DATATEXT) || textrun.push(c);\r\n      break;\r\n    }\r\n  }\r\n\r\n  function rcdata_state(c) {\r\n    // Save the open tag so we can find a matching close tag\r\n    switch(c) {\r\n    case 0x0026: // AMPERSAND\r\n      return_state = rcdata_state;\r\n      tokenizer = character_reference_state;\r\n      break;\r\n    case 0x003C: // LESS-THAN SIGN\r\n      tokenizer = rcdata_less_than_sign_state;\r\n      break;\r\n    case 0x0000: // NULL\r\n      textrun.push(0xFFFD); // REPLACEMENT CHARACTER\r\n      textIncludesNUL = true;\r\n      break;\r\n    case -1: // EOF\r\n      emitEOF();\r\n      break;\r\n    default:\r\n      textrun.push(c);\r\n      break;\r\n    }\r\n  }\r\n\r\n  function rawtext_state(c) {\r\n    switch(c) {\r\n    case 0x003C: // LESS-THAN SIGN\r\n      tokenizer = rawtext_less_than_sign_state;\r\n      break;\r\n    case 0x0000: // NULL\r\n      textrun.push(0xFFFD); // REPLACEMENT CHARACTER\r\n      break;\r\n    case -1: // EOF\r\n      emitEOF();\r\n      break;\r\n    default:\r\n      /*jshint -W030 */\r\n      emitCharsWhile(RAWTEXT) || textrun.push(c);\r\n      break;\r\n    }\r\n  }\r\n\r\n  function script_data_state(c) {\r\n    switch(c) {\r\n    case 0x003C: // LESS-THAN SIGN\r\n      tokenizer = script_data_less_than_sign_state;\r\n      break;\r\n    case 0x0000: // NULL\r\n      textrun.push(0xFFFD); // REPLACEMENT CHARACTER\r\n      break;\r\n    case -1: // EOF\r\n      emitEOF();\r\n      break;\r\n    default:\r\n      /*jshint -W030 */\r\n      emitCharsWhile(RAWTEXT) || textrun.push(c);\r\n      break;\r\n    }\r\n  }\r\n\r\n  function plaintext_state(c) {\r\n    switch(c) {\r\n    case 0x0000: // NULL\r\n      textrun.push(0xFFFD); // REPLACEMENT CHARACTER\r\n      break;\r\n    case -1: // EOF\r\n      emitEOF();\r\n      break;\r\n    default:\r\n      /*jshint -W030 */\r\n      emitCharsWhile(PLAINTEXT) || textrun.push(c);\r\n      break;\r\n    }\r\n  }\r\n\r\n  function tag_open_state(c) {\r\n    switch(c) {\r\n    case 0x0021: // EXCLAMATION MARK\r\n      tokenizer = markup_declaration_open_state;\r\n      break;\r\n    case 0x002F: // SOLIDUS\r\n      tokenizer = end_tag_open_state;\r\n      break;\r\n    case 0x0041:  // [A-Z]\r\n    case 0x0042:case 0x0043:case 0x0044:case 0x0045:case 0x0046:\r\n    case 0x0047:case 0x0048:case 0x0049:case 0x004A:case 0x004B:\r\n    case 0x004C:case 0x004D:case 0x004E:case 0x004F:case 0x0050:\r\n    case 0x0051:case 0x0052:case 0x0053:case 0x0054:case 0x0055:\r\n    case 0x0056:case 0x0057:case 0x0058:case 0x0059:case 0x005A:\r\n    case 0x0061:  // [a-z]\r\n    case 0x0062:case 0x0063:case 0x0064:case 0x0065:case 0x0066:\r\n    case 0x0067:case 0x0068:case 0x0069:case 0x006A:case 0x006B:\r\n    case 0x006C:case 0x006D:case 0x006E:case 0x006F:case 0x0070:\r\n    case 0x0071:case 0x0072:case 0x0073:case 0x0074:case 0x0075:\r\n    case 0x0076:case 0x0077:case 0x0078:case 0x0079:case 0x007A:\r\n      beginTagName();\r\n      reconsume(c, tag_name_state);\r\n      break;\r\n    case 0x003F: // QUESTION MARK\r\n      reconsume(c, bogus_comment_state);\r\n      break;\r\n    default:\r\n      textrun.push(0x003C); // LESS-THAN SIGN\r\n      reconsume(c, data_state);\r\n      break;\r\n    }\r\n  }\r\n\r\n  function end_tag_open_state(c) {\r\n    switch(c) {\r\n    case 0x0041:  // [A-Z]\r\n    case 0x0042:case 0x0043:case 0x0044:case 0x0045:case 0x0046:\r\n    case 0x0047:case 0x0048:case 0x0049:case 0x004A:case 0x004B:\r\n    case 0x004C:case 0x004D:case 0x004E:case 0x004F:case 0x0050:\r\n    case 0x0051:case 0x0052:case 0x0053:case 0x0054:case 0x0055:\r\n    case 0x0056:case 0x0057:case 0x0058:case 0x0059:case 0x005A:\r\n    case 0x0061:  // [a-z]\r\n    case 0x0062:case 0x0063:case 0x0064:case 0x0065:case 0x0066:\r\n    case 0x0067:case 0x0068:case 0x0069:case 0x006A:case 0x006B:\r\n    case 0x006C:case 0x006D:case 0x006E:case 0x006F:case 0x0070:\r\n    case 0x0071:case 0x0072:case 0x0073:case 0x0074:case 0x0075:\r\n    case 0x0076:case 0x0077:case 0x0078:case 0x0079:case 0x007A:\r\n      beginEndTagName();\r\n      reconsume(c, tag_name_state);\r\n      break;\r\n    case 0x003E: // GREATER-THAN SIGN\r\n      tokenizer = data_state;\r\n      break;\r\n    case -1: // EOF\r\n      textrun.push(0x003C); // LESS-THAN SIGN\r\n      textrun.push(0x002F); // SOLIDUS\r\n      emitEOF();\r\n      break;\r\n    default:\r\n      reconsume(c, bogus_comment_state);\r\n      break;\r\n    }\r\n  }\r\n\r\n  function tag_name_state(c) {\r\n    switch(c) {\r\n    case 0x0009: // CHARACTER TABULATION (tab)\r\n    case 0x000A: // LINE FEED (LF)\r\n    case 0x000C: // FORM FEED (FF)\r\n    case 0x0020: // SPACE\r\n      tokenizer = before_attribute_name_state;\r\n      break;\r\n    case 0x002F: // SOLIDUS\r\n      tokenizer = self_closing_start_tag_state;\r\n      break;\r\n    case 0x003E: // GREATER-THAN SIGN\r\n      tokenizer = data_state;\r\n      emitTag();\r\n      break;\r\n    case 0x0041:  // [A-Z]\r\n    case 0x0042:case 0x0043:case 0x0044:case 0x0045:case 0x0046:\r\n    case 0x0047:case 0x0048:case 0x0049:case 0x004A:case 0x004B:\r\n    case 0x004C:case 0x004D:case 0x004E:case 0x004F:case 0x0050:\r\n    case 0x0051:case 0x0052:case 0x0053:case 0x0054:case 0x0055:\r\n    case 0x0056:case 0x0057:case 0x0058:case 0x0059:case 0x005A:\r\n      tagnamebuf += String.fromCharCode(c + 0x0020);\r\n      break;\r\n    case 0x0000: // NULL\r\n      tagnamebuf += String.fromCharCode(0xFFFD /* REPLACEMENT CHARACTER */);\r\n      break;\r\n    case -1: // EOF\r\n      emitEOF();\r\n      break;\r\n    default:\r\n      tagnamebuf += getMatchingChars(TAGNAME);\r\n      break;\r\n    }\r\n  }\r\n\r\n  function rcdata_less_than_sign_state(c) {\r\n    /* identical to the RAWTEXT less-than sign state, except s/RAWTEXT/RCDATA/g */\r\n    if (c === 0x002F) {  // SOLIDUS\r\n      beginTempBuf();\r\n      tokenizer = rcdata_end_tag_open_state;\r\n    }\r\n    else {\r\n      textrun.push(0x003C); // LESS-THAN SIGN\r\n      reconsume(c, rcdata_state);\r\n    }\r\n  }\r\n\r\n  function rcdata_end_tag_open_state(c) {\r\n    /* identical to the RAWTEXT (and Script data) end tag open state, except s/RAWTEXT/RCDATA/g */\r\n    switch(c) {\r\n    case 0x0041:  // [A-Z]\r\n    case 0x0042:case 0x0043:case 0x0044:case 0x0045:case 0x0046:\r\n    case 0x0047:case 0x0048:case 0x0049:case 0x004A:case 0x004B:\r\n    case 0x004C:case 0x004D:case 0x004E:case 0x004F:case 0x0050:\r\n    case 0x0051:case 0x0052:case 0x0053:case 0x0054:case 0x0055:\r\n    case 0x0056:case 0x0057:case 0x0058:case 0x0059:case 0x005A:\r\n    case 0x0061:  // [a-z]\r\n    case 0x0062:case 0x0063:case 0x0064:case 0x0065:case 0x0066:\r\n    case 0x0067:case 0x0068:case 0x0069:case 0x006A:case 0x006B:\r\n    case 0x006C:case 0x006D:case 0x006E:case 0x006F:case 0x0070:\r\n    case 0x0071:case 0x0072:case 0x0073:case 0x0074:case 0x0075:\r\n    case 0x0076:case 0x0077:case 0x0078:case 0x0079:case 0x007A:\r\n      beginEndTagName();\r\n      reconsume(c, rcdata_end_tag_name_state);\r\n      break;\r\n    default:\r\n      textrun.push(0x003C); // LESS-THAN SIGN\r\n      textrun.push(0x002F); // SOLIDUS\r\n      reconsume(c, rcdata_state);\r\n      break;\r\n    }\r\n  }\r\n\r\n  function rcdata_end_tag_name_state(c) {\r\n    /* identical to the RAWTEXT (and Script data) end tag name state, except s/RAWTEXT/RCDATA/g */\r\n    switch(c) {\r\n    case 0x0009: // CHARACTER TABULATION (tab)\r\n    case 0x000A: // LINE FEED (LF)\r\n    case 0x000C: // FORM FEED (FF)\r\n    case 0x0020: // SPACE\r\n      if (appropriateEndTag(tagnamebuf)) {\r\n        tokenizer = before_attribute_name_state;\r\n        return;\r\n      }\r\n      break;\r\n    case 0x002F: // SOLIDUS\r\n      if (appropriateEndTag(tagnamebuf)) {\r\n        tokenizer = self_closing_start_tag_state;\r\n        return;\r\n      }\r\n      break;\r\n    case 0x003E: // GREATER-THAN SIGN\r\n      if (appropriateEndTag(tagnamebuf)) {\r\n        tokenizer = data_state;\r\n        emitTag();\r\n        return;\r\n      }\r\n      break;\r\n    case 0x0041:  // [A-Z]\r\n    case 0x0042:case 0x0043:case 0x0044:case 0x0045:case 0x0046:\r\n    case 0x0047:case 0x0048:case 0x0049:case 0x004A:case 0x004B:\r\n    case 0x004C:case 0x004D:case 0x004E:case 0x004F:case 0x0050:\r\n    case 0x0051:case 0x0052:case 0x0053:case 0x0054:case 0x0055:\r\n    case 0x0056:case 0x0057:case 0x0058:case 0x0059:case 0x005A:\r\n\r\n      tagnamebuf += String.fromCharCode(c + 0x0020);\r\n      tempbuf.push(c);\r\n      return;\r\n    case 0x0061:  // [a-z]\r\n    case 0x0062:case 0x0063:case 0x0064:case 0x0065:case 0x0066:\r\n    case 0x0067:case 0x0068:case 0x0069:case 0x006A:case 0x006B:\r\n    case 0x006C:case 0x006D:case 0x006E:case 0x006F:case 0x0070:\r\n    case 0x0071:case 0x0072:case 0x0073:case 0x0074:case 0x0075:\r\n    case 0x0076:case 0x0077:case 0x0078:case 0x0079:case 0x007A:\r\n\r\n      tagnamebuf += String.fromCharCode(c);\r\n      tempbuf.push(c);\r\n      return;\r\n    default:\r\n      break;\r\n    }\r\n\r\n    // If we don't return in one of the cases above, then this was not\r\n    // an appropriately matching close tag, so back out by emitting all\r\n    // the characters as text\r\n    textrun.push(0x003C); // LESS-THAN SIGN\r\n    textrun.push(0x002F); // SOLIDUS\r\n    pushAll(textrun, tempbuf);\r\n    reconsume(c, rcdata_state);\r\n  }\r\n\r\n  function rawtext_less_than_sign_state(c) {\r\n    /* identical to the RCDATA less-than sign state, except s/RCDATA/RAWTEXT/g\r\n     */\r\n    if (c === 0x002F) { // SOLIDUS\r\n      beginTempBuf();\r\n      tokenizer = rawtext_end_tag_open_state;\r\n    }\r\n    else {\r\n      textrun.push(0x003C); // LESS-THAN SIGN\r\n      reconsume(c, rawtext_state);\r\n    }\r\n  }\r\n\r\n  function rawtext_end_tag_open_state(c) {\r\n    /* identical to the RCDATA (and Script data) end tag open state, except s/RCDATA/RAWTEXT/g */\r\n    switch(c) {\r\n    case 0x0041:  // [A-Z]\r\n    case 0x0042:case 0x0043:case 0x0044:case 0x0045:case 0x0046:\r\n    case 0x0047:case 0x0048:case 0x0049:case 0x004A:case 0x004B:\r\n    case 0x004C:case 0x004D:case 0x004E:case 0x004F:case 0x0050:\r\n    case 0x0051:case 0x0052:case 0x0053:case 0x0054:case 0x0055:\r\n    case 0x0056:case 0x0057:case 0x0058:case 0x0059:case 0x005A:\r\n    case 0x0061:  // [a-z]\r\n    case 0x0062:case 0x0063:case 0x0064:case 0x0065:case 0x0066:\r\n    case 0x0067:case 0x0068:case 0x0069:case 0x006A:case 0x006B:\r\n    case 0x006C:case 0x006D:case 0x006E:case 0x006F:case 0x0070:\r\n    case 0x0071:case 0x0072:case 0x0073:case 0x0074:case 0x0075:\r\n    case 0x0076:case 0x0077:case 0x0078:case 0x0079:case 0x007A:\r\n      beginEndTagName();\r\n      reconsume(c, rawtext_end_tag_name_state);\r\n      break;\r\n    default:\r\n      textrun.push(0x003C); // LESS-THAN SIGN\r\n      textrun.push(0x002F); // SOLIDUS\r\n      reconsume(c, rawtext_state);\r\n      break;\r\n    }\r\n  }\r\n\r\n  function rawtext_end_tag_name_state(c) {\r\n    /* identical to the RCDATA (and Script data) end tag name state, except s/RCDATA/RAWTEXT/g */\r\n    switch(c) {\r\n    case 0x0009: // CHARACTER TABULATION (tab)\r\n    case 0x000A: // LINE FEED (LF)\r\n    case 0x000C: // FORM FEED (FF)\r\n    case 0x0020: // SPACE\r\n      if (appropriateEndTag(tagnamebuf)) {\r\n        tokenizer = before_attribute_name_state;\r\n        return;\r\n      }\r\n      break;\r\n    case 0x002F: // SOLIDUS\r\n      if (appropriateEndTag(tagnamebuf)) {\r\n        tokenizer = self_closing_start_tag_state;\r\n        return;\r\n      }\r\n      break;\r\n    case 0x003E: // GREATER-THAN SIGN\r\n      if (appropriateEndTag(tagnamebuf)) {\r\n        tokenizer = data_state;\r\n        emitTag();\r\n        return;\r\n      }\r\n      break;\r\n    case 0x0041:  // [A-Z]\r\n    case 0x0042:case 0x0043:case 0x0044:case 0x0045:case 0x0046:\r\n    case 0x0047:case 0x0048:case 0x0049:case 0x004A:case 0x004B:\r\n    case 0x004C:case 0x004D:case 0x004E:case 0x004F:case 0x0050:\r\n    case 0x0051:case 0x0052:case 0x0053:case 0x0054:case 0x0055:\r\n    case 0x0056:case 0x0057:case 0x0058:case 0x0059:case 0x005A:\r\n      tagnamebuf += String.fromCharCode(c + 0x0020);\r\n      tempbuf.push(c);\r\n      return;\r\n    case 0x0061:  // [a-z]\r\n    case 0x0062:case 0x0063:case 0x0064:case 0x0065:case 0x0066:\r\n    case 0x0067:case 0x0068:case 0x0069:case 0x006A:case 0x006B:\r\n    case 0x006C:case 0x006D:case 0x006E:case 0x006F:case 0x0070:\r\n    case 0x0071:case 0x0072:case 0x0073:case 0x0074:case 0x0075:\r\n    case 0x0076:case 0x0077:case 0x0078:case 0x0079:case 0x007A:\r\n      tagnamebuf += String.fromCharCode(c);\r\n      tempbuf.push(c);\r\n      return;\r\n    default:\r\n      break;\r\n    }\r\n\r\n    // If we don't return in one of the cases above, then this was not\r\n    // an appropriately matching close tag, so back out by emitting all\r\n    // the characters as text\r\n    textrun.push(0x003C); // LESS-THAN SIGN\r\n    textrun.push(0x002F); // SOLIDUS\r\n    pushAll(textrun,tempbuf);\r\n    reconsume(c, rawtext_state);\r\n  }\r\n\r\n  function script_data_less_than_sign_state(c) {\r\n    switch(c) {\r\n    case 0x002F: // SOLIDUS\r\n      beginTempBuf();\r\n      tokenizer = script_data_end_tag_open_state;\r\n      break;\r\n    case 0x0021: // EXCLAMATION MARK\r\n      tokenizer = script_data_escape_start_state;\r\n      textrun.push(0x003C); // LESS-THAN SIGN\r\n      textrun.push(0x0021); // EXCLAMATION MARK\r\n      break;\r\n    default:\r\n      textrun.push(0x003C); // LESS-THAN SIGN\r\n      reconsume(c, script_data_state);\r\n      break;\r\n    }\r\n  }\r\n\r\n  function script_data_end_tag_open_state(c) {\r\n    /* identical to the RCDATA (and RAWTEXT) end tag open state, except s/RCDATA/Script data/g */\r\n    switch(c) {\r\n    case 0x0041:  // [A-Z]\r\n    case 0x0042:case 0x0043:case 0x0044:case 0x0045:case 0x0046:\r\n    case 0x0047:case 0x0048:case 0x0049:case 0x004A:case 0x004B:\r\n    case 0x004C:case 0x004D:case 0x004E:case 0x004F:case 0x0050:\r\n    case 0x0051:case 0x0052:case 0x0053:case 0x0054:case 0x0055:\r\n    case 0x0056:case 0x0057:case 0x0058:case 0x0059:case 0x005A:\r\n    case 0x0061:  // [a-z]\r\n    case 0x0062:case 0x0063:case 0x0064:case 0x0065:case 0x0066:\r\n    case 0x0067:case 0x0068:case 0x0069:case 0x006A:case 0x006B:\r\n    case 0x006C:case 0x006D:case 0x006E:case 0x006F:case 0x0070:\r\n    case 0x0071:case 0x0072:case 0x0073:case 0x0074:case 0x0075:\r\n    case 0x0076:case 0x0077:case 0x0078:case 0x0079:case 0x007A:\r\n      beginEndTagName();\r\n      reconsume(c, script_data_end_tag_name_state);\r\n      break;\r\n    default:\r\n      textrun.push(0x003C); // LESS-THAN SIGN\r\n      textrun.push(0x002F); // SOLIDUS\r\n      reconsume(c, script_data_state);\r\n      break;\r\n    }\r\n  }\r\n\r\n  function script_data_end_tag_name_state(c) {\r\n    /* identical to the RCDATA (and RAWTEXT) end tag name state, except s/RCDATA/Script data/g */\r\n    switch(c) {\r\n    case 0x0009: // CHARACTER TABULATION (tab)\r\n    case 0x000A: // LINE FEED (LF)\r\n    case 0x000C: // FORM FEED (FF)\r\n    case 0x0020: // SPACE\r\n      if (appropriateEndTag(tagnamebuf)) {\r\n        tokenizer = before_attribute_name_state;\r\n        return;\r\n      }\r\n      break;\r\n    case 0x002F: // SOLIDUS\r\n      if (appropriateEndTag(tagnamebuf)) {\r\n        tokenizer = self_closing_start_tag_state;\r\n        return;\r\n      }\r\n      break;\r\n    case 0x003E: // GREATER-THAN SIGN\r\n      if (appropriateEndTag(tagnamebuf)) {\r\n        tokenizer = data_state;\r\n        emitTag();\r\n        return;\r\n      }\r\n      break;\r\n    case 0x0041:  // [A-Z]\r\n    case 0x0042:case 0x0043:case 0x0044:case 0x0045:case 0x0046:\r\n    case 0x0047:case 0x0048:case 0x0049:case 0x004A:case 0x004B:\r\n    case 0x004C:case 0x004D:case 0x004E:case 0x004F:case 0x0050:\r\n    case 0x0051:case 0x0052:case 0x0053:case 0x0054:case 0x0055:\r\n    case 0x0056:case 0x0057:case 0x0058:case 0x0059:case 0x005A:\r\n\r\n      tagnamebuf += String.fromCharCode(c + 0x0020);\r\n      tempbuf.push(c);\r\n      return;\r\n    case 0x0061:  // [a-z]\r\n    case 0x0062:case 0x0063:case 0x0064:case 0x0065:case 0x0066:\r\n    case 0x0067:case 0x0068:case 0x0069:case 0x006A:case 0x006B:\r\n    case 0x006C:case 0x006D:case 0x006E:case 0x006F:case 0x0070:\r\n    case 0x0071:case 0x0072:case 0x0073:case 0x0074:case 0x0075:\r\n    case 0x0076:case 0x0077:case 0x0078:case 0x0079:case 0x007A:\r\n\r\n      tagnamebuf += String.fromCharCode(c);\r\n      tempbuf.push(c);\r\n      return;\r\n    default:\r\n      break;\r\n    }\r\n\r\n    // If we don't return in one of the cases above, then this was not\r\n    // an appropriately matching close tag, so back out by emitting all\r\n    // the characters as text\r\n    textrun.push(0x003C); // LESS-THAN SIGN\r\n    textrun.push(0x002F); // SOLIDUS\r\n    pushAll(textrun,tempbuf);\r\n    reconsume(c, script_data_state);\r\n  }\r\n\r\n  function script_data_escape_start_state(c) {\r\n    if (c === 0x002D) { // HYPHEN-MINUS\r\n      tokenizer = script_data_escape_start_dash_state;\r\n      textrun.push(0x002D); // HYPHEN-MINUS\r\n    }\r\n    else {\r\n      reconsume(c, script_data_state);\r\n    }\r\n  }\r\n\r\n  function script_data_escape_start_dash_state(c) {\r\n    if (c === 0x002D) { // HYPHEN-MINUS\r\n      tokenizer = script_data_escaped_dash_dash_state;\r\n      textrun.push(0x002D); // HYPHEN-MINUS\r\n    }\r\n    else {\r\n      reconsume(c, script_data_state);\r\n    }\r\n  }\r\n\r\n  function script_data_escaped_state(c) {\r\n    switch(c) {\r\n    case 0x002D: // HYPHEN-MINUS\r\n      tokenizer = script_data_escaped_dash_state;\r\n      textrun.push(0x002D); // HYPHEN-MINUS\r\n      break;\r\n    case 0x003C: // LESS-THAN SIGN\r\n      tokenizer = script_data_escaped_less_than_sign_state;\r\n      break;\r\n    case 0x0000: // NULL\r\n      textrun.push(0xFFFD); // REPLACEMENT CHARACTER\r\n      break;\r\n    case -1: // EOF\r\n      emitEOF();\r\n      break;\r\n    default:\r\n      textrun.push(c);\r\n      break;\r\n    }\r\n  }\r\n\r\n  function script_data_escaped_dash_state(c) {\r\n    switch(c) {\r\n    case 0x002D: // HYPHEN-MINUS\r\n      tokenizer = script_data_escaped_dash_dash_state;\r\n      textrun.push(0x002D); // HYPHEN-MINUS\r\n      break;\r\n    case 0x003C: // LESS-THAN SIGN\r\n      tokenizer = script_data_escaped_less_than_sign_state;\r\n      break;\r\n    case 0x0000: // NULL\r\n      tokenizer = script_data_escaped_state;\r\n      textrun.push(0xFFFD); // REPLACEMENT CHARACTER\r\n      break;\r\n    case -1: // EOF\r\n      emitEOF();\r\n      break;\r\n    default:\r\n      tokenizer = script_data_escaped_state;\r\n      textrun.push(c);\r\n      break;\r\n    }\r\n  }\r\n\r\n  function script_data_escaped_dash_dash_state(c) {\r\n    switch(c) {\r\n    case 0x002D: // HYPHEN-MINUS\r\n      textrun.push(0x002D); // HYPHEN-MINUS\r\n      break;\r\n    case 0x003C: // LESS-THAN SIGN\r\n      tokenizer = script_data_escaped_less_than_sign_state;\r\n      break;\r\n    case 0x003E: // GREATER-THAN SIGN\r\n      tokenizer = script_data_state;\r\n      textrun.push(0x003E); // GREATER-THAN SIGN\r\n      break;\r\n    case 0x0000: // NULL\r\n      tokenizer = script_data_escaped_state;\r\n      textrun.push(0xFFFD); // REPLACEMENT CHARACTER\r\n      break;\r\n    case -1: // EOF\r\n      emitEOF();\r\n      break;\r\n    default:\r\n      tokenizer = script_data_escaped_state;\r\n      textrun.push(c);\r\n      break;\r\n    }\r\n  }\r\n\r\n  function script_data_escaped_less_than_sign_state(c) {\r\n    switch(c) {\r\n    case 0x002F: // SOLIDUS\r\n      beginTempBuf();\r\n      tokenizer = script_data_escaped_end_tag_open_state;\r\n      break;\r\n    case 0x0041:  // [A-Z]\r\n    case 0x0042:case 0x0043:case 0x0044:case 0x0045:case 0x0046:\r\n    case 0x0047:case 0x0048:case 0x0049:case 0x004A:case 0x004B:\r\n    case 0x004C:case 0x004D:case 0x004E:case 0x004F:case 0x0050:\r\n    case 0x0051:case 0x0052:case 0x0053:case 0x0054:case 0x0055:\r\n    case 0x0056:case 0x0057:case 0x0058:case 0x0059:case 0x005A:\r\n    case 0x0061:  // [a-z]\r\n    case 0x0062:case 0x0063:case 0x0064:case 0x0065:case 0x0066:\r\n    case 0x0067:case 0x0068:case 0x0069:case 0x006A:case 0x006B:\r\n    case 0x006C:case 0x006D:case 0x006E:case 0x006F:case 0x0070:\r\n    case 0x0071:case 0x0072:case 0x0073:case 0x0074:case 0x0075:\r\n    case 0x0076:case 0x0077:case 0x0078:case 0x0079:case 0x007A:\r\n      beginTempBuf();\r\n      textrun.push(0x003C); // LESS-THAN SIGN\r\n      reconsume(c, script_data_double_escape_start_state);\r\n      break;\r\n    default:\r\n      textrun.push(0x003C); // LESS-THAN SIGN\r\n      reconsume(c, script_data_escaped_state);\r\n      break;\r\n    }\r\n  }\r\n\r\n  function script_data_escaped_end_tag_open_state(c) {\r\n    switch(c) {\r\n    case 0x0041:  // [A-Z]\r\n    case 0x0042:case 0x0043:case 0x0044:case 0x0045:case 0x0046:\r\n    case 0x0047:case 0x0048:case 0x0049:case 0x004A:case 0x004B:\r\n    case 0x004C:case 0x004D:case 0x004E:case 0x004F:case 0x0050:\r\n    case 0x0051:case 0x0052:case 0x0053:case 0x0054:case 0x0055:\r\n    case 0x0056:case 0x0057:case 0x0058:case 0x0059:case 0x005A:\r\n    case 0x0061:  // [a-z]\r\n    case 0x0062:case 0x0063:case 0x0064:case 0x0065:case 0x0066:\r\n    case 0x0067:case 0x0068:case 0x0069:case 0x006A:case 0x006B:\r\n    case 0x006C:case 0x006D:case 0x006E:case 0x006F:case 0x0070:\r\n    case 0x0071:case 0x0072:case 0x0073:case 0x0074:case 0x0075:\r\n    case 0x0076:case 0x0077:case 0x0078:case 0x0079:case 0x007A:\r\n      beginEndTagName();\r\n      reconsume(c, script_data_escaped_end_tag_name_state);\r\n      break;\r\n    default:\r\n      textrun.push(0x003C); // LESS-THAN SIGN\r\n      textrun.push(0x002F); // SOLIDUS\r\n      reconsume(c, script_data_escaped_state);\r\n      break;\r\n    }\r\n  }\r\n\r\n  function script_data_escaped_end_tag_name_state(c) {\r\n    switch(c) {\r\n    case 0x0009: // CHARACTER TABULATION (tab)\r\n    case 0x000A: // LINE FEED (LF)\r\n    case 0x000C: // FORM FEED (FF)\r\n    case 0x0020: // SPACE\r\n      if (appropriateEndTag(tagnamebuf)) {\r\n        tokenizer = before_attribute_name_state;\r\n        return;\r\n      }\r\n      break;\r\n    case 0x002F: // SOLIDUS\r\n      if (appropriateEndTag(tagnamebuf)) {\r\n        tokenizer = self_closing_start_tag_state;\r\n        return;\r\n      }\r\n      break;\r\n    case 0x003E: // GREATER-THAN SIGN\r\n      if (appropriateEndTag(tagnamebuf)) {\r\n        tokenizer = data_state;\r\n        emitTag();\r\n        return;\r\n      }\r\n      break;\r\n    case 0x0041:  // [A-Z]\r\n    case 0x0042:case 0x0043:case 0x0044:case 0x0045:case 0x0046:\r\n    case 0x0047:case 0x0048:case 0x0049:case 0x004A:case 0x004B:\r\n    case 0x004C:case 0x004D:case 0x004E:case 0x004F:case 0x0050:\r\n    case 0x0051:case 0x0052:case 0x0053:case 0x0054:case 0x0055:\r\n    case 0x0056:case 0x0057:case 0x0058:case 0x0059:case 0x005A:\r\n      tagnamebuf += String.fromCharCode(c + 0x0020);\r\n      tempbuf.push(c);\r\n      return;\r\n    case 0x0061:  // [a-z]\r\n    case 0x0062:case 0x0063:case 0x0064:case 0x0065:case 0x0066:\r\n    case 0x0067:case 0x0068:case 0x0069:case 0x006A:case 0x006B:\r\n    case 0x006C:case 0x006D:case 0x006E:case 0x006F:case 0x0070:\r\n    case 0x0071:case 0x0072:case 0x0073:case 0x0074:case 0x0075:\r\n    case 0x0076:case 0x0077:case 0x0078:case 0x0079:case 0x007A:\r\n      tagnamebuf += String.fromCharCode(c);\r\n      tempbuf.push(c);\r\n      return;\r\n    default:\r\n      break;\r\n    }\r\n\r\n    // We get here in the default case, and if the closing tagname\r\n    // is not an appropriate tagname.\r\n    textrun.push(0x003C); // LESS-THAN SIGN\r\n    textrun.push(0x002F); // SOLIDUS\r\n    pushAll(textrun,tempbuf);\r\n    reconsume(c, script_data_escaped_state);\r\n  }\r\n\r\n  function script_data_double_escape_start_state(c) {\r\n    switch(c) {\r\n    case 0x0009: // CHARACTER TABULATION (tab)\r\n    case 0x000A: // LINE FEED (LF)\r\n    case 0x000C: // FORM FEED (FF)\r\n    case 0x0020: // SPACE\r\n    case 0x002F: // SOLIDUS\r\n    case 0x003E: // GREATER-THAN SIGN\r\n      if (buf2str(tempbuf) === \"script\") {\r\n        tokenizer = script_data_double_escaped_state;\r\n      }\r\n      else {\r\n        tokenizer = script_data_escaped_state;\r\n      }\r\n      textrun.push(c);\r\n      break;\r\n    case 0x0041:  // [A-Z]\r\n    case 0x0042:case 0x0043:case 0x0044:case 0x0045:case 0x0046:\r\n    case 0x0047:case 0x0048:case 0x0049:case 0x004A:case 0x004B:\r\n    case 0x004C:case 0x004D:case 0x004E:case 0x004F:case 0x0050:\r\n    case 0x0051:case 0x0052:case 0x0053:case 0x0054:case 0x0055:\r\n    case 0x0056:case 0x0057:case 0x0058:case 0x0059:case 0x005A:\r\n      tempbuf.push(c + 0x0020);\r\n      textrun.push(c);\r\n      break;\r\n    case 0x0061:  // [a-z]\r\n    case 0x0062:case 0x0063:case 0x0064:case 0x0065:case 0x0066:\r\n    case 0x0067:case 0x0068:case 0x0069:case 0x006A:case 0x006B:\r\n    case 0x006C:case 0x006D:case 0x006E:case 0x006F:case 0x0070:\r\n    case 0x0071:case 0x0072:case 0x0073:case 0x0074:case 0x0075:\r\n    case 0x0076:case 0x0077:case 0x0078:case 0x0079:case 0x007A:\r\n      tempbuf.push(c);\r\n      textrun.push(c);\r\n      break;\r\n    default:\r\n      reconsume(c, script_data_escaped_state);\r\n      break;\r\n    }\r\n  }\r\n\r\n  function script_data_double_escaped_state(c) {\r\n    switch(c) {\r\n    case 0x002D: // HYPHEN-MINUS\r\n      tokenizer = script_data_double_escaped_dash_state;\r\n      textrun.push(0x002D); // HYPHEN-MINUS\r\n      break;\r\n    case 0x003C: // LESS-THAN SIGN\r\n      tokenizer = script_data_double_escaped_less_than_sign_state;\r\n      textrun.push(0x003C); // LESS-THAN SIGN\r\n      break;\r\n    case 0x0000: // NULL\r\n      textrun.push(0xFFFD); // REPLACEMENT CHARACTER\r\n      break;\r\n    case -1: // EOF\r\n      emitEOF();\r\n      break;\r\n    default:\r\n      textrun.push(c);\r\n      break;\r\n    }\r\n  }\r\n\r\n  function script_data_double_escaped_dash_state(c) {\r\n    switch(c) {\r\n    case 0x002D: // HYPHEN-MINUS\r\n      tokenizer = script_data_double_escaped_dash_dash_state;\r\n      textrun.push(0x002D); // HYPHEN-MINUS\r\n      break;\r\n    case 0x003C: // LESS-THAN SIGN\r\n      tokenizer = script_data_double_escaped_less_than_sign_state;\r\n      textrun.push(0x003C); // LESS-THAN SIGN\r\n      break;\r\n    case 0x0000: // NULL\r\n      tokenizer = script_data_double_escaped_state;\r\n      textrun.push(0xFFFD); // REPLACEMENT CHARACTER\r\n      break;\r\n    case -1: // EOF\r\n      emitEOF();\r\n      break;\r\n    default:\r\n      tokenizer = script_data_double_escaped_state;\r\n      textrun.push(c);\r\n      break;\r\n    }\r\n  }\r\n\r\n  function script_data_double_escaped_dash_dash_state(c) {\r\n    switch(c) {\r\n    case 0x002D: // HYPHEN-MINUS\r\n      textrun.push(0x002D); // HYPHEN-MINUS\r\n      break;\r\n    case 0x003C: // LESS-THAN SIGN\r\n      tokenizer = script_data_double_escaped_less_than_sign_state;\r\n      textrun.push(0x003C); // LESS-THAN SIGN\r\n      break;\r\n    case 0x003E: // GREATER-THAN SIGN\r\n      tokenizer = script_data_state;\r\n      textrun.push(0x003E); // GREATER-THAN SIGN\r\n      break;\r\n    case 0x0000: // NULL\r\n      tokenizer = script_data_double_escaped_state;\r\n      textrun.push(0xFFFD); // REPLACEMENT CHARACTER\r\n      break;\r\n    case -1: // EOF\r\n      emitEOF();\r\n      break;\r\n    default:\r\n      tokenizer = script_data_double_escaped_state;\r\n      textrun.push(c);\r\n      break;\r\n    }\r\n  }\r\n\r\n  function script_data_double_escaped_less_than_sign_state(c) {\r\n    if (c === 0x002F) { // SOLIDUS\r\n      beginTempBuf();\r\n      tokenizer = script_data_double_escape_end_state;\r\n      textrun.push(0x002F); // SOLIDUS\r\n    }\r\n    else {\r\n      reconsume(c, script_data_double_escaped_state);\r\n    }\r\n  }\r\n\r\n  function script_data_double_escape_end_state(c) {\r\n    switch(c) {\r\n    case 0x0009: // CHARACTER TABULATION (tab)\r\n    case 0x000A: // LINE FEED (LF)\r\n    case 0x000C: // FORM FEED (FF)\r\n    case 0x0020: // SPACE\r\n    case 0x002F: // SOLIDUS\r\n    case 0x003E: // GREATER-THAN SIGN\r\n      if (buf2str(tempbuf) === \"script\") {\r\n        tokenizer = script_data_escaped_state;\r\n      }\r\n      else {\r\n        tokenizer = script_data_double_escaped_state;\r\n      }\r\n      textrun.push(c);\r\n      break;\r\n    case 0x0041:  // [A-Z]\r\n    case 0x0042:case 0x0043:case 0x0044:case 0x0045:case 0x0046:\r\n    case 0x0047:case 0x0048:case 0x0049:case 0x004A:case 0x004B:\r\n    case 0x004C:case 0x004D:case 0x004E:case 0x004F:case 0x0050:\r\n    case 0x0051:case 0x0052:case 0x0053:case 0x0054:case 0x0055:\r\n    case 0x0056:case 0x0057:case 0x0058:case 0x0059:case 0x005A:\r\n      tempbuf.push(c + 0x0020);\r\n      textrun.push(c);\r\n      break;\r\n    case 0x0061:  // [a-z]\r\n    case 0x0062:case 0x0063:case 0x0064:case 0x0065:case 0x0066:\r\n    case 0x0067:case 0x0068:case 0x0069:case 0x006A:case 0x006B:\r\n    case 0x006C:case 0x006D:case 0x006E:case 0x006F:case 0x0070:\r\n    case 0x0071:case 0x0072:case 0x0073:case 0x0074:case 0x0075:\r\n    case 0x0076:case 0x0077:case 0x0078:case 0x0079:case 0x007A:\r\n      tempbuf.push(c);\r\n      textrun.push(c);\r\n      break;\r\n    default:\r\n      reconsume(c, script_data_double_escaped_state);\r\n      break;\r\n    }\r\n  }\r\n\r\n  function before_attribute_name_state(c) {\r\n    switch(c) {\r\n    case 0x0009: // CHARACTER TABULATION (tab)\r\n    case 0x000A: // LINE FEED (LF)\r\n    case 0x000C: // FORM FEED (FF)\r\n    case 0x0020: // SPACE\r\n      /* Ignore the character. */\r\n      break;\r\n    // For SOLIDUS, GREATER-THAN SIGN, and EOF, spec says \"reconsume in\r\n    // the after attribute name state\", but in our implementation that\r\n    // state always has an active attribute in attrnamebuf.  Just clone\r\n    // the rules here, without the addAttribute business.\r\n    case 0x002F: // SOLIDUS\r\n      tokenizer = self_closing_start_tag_state;\r\n      break;\r\n    case 0x003E: // GREATER-THAN SIGN\r\n      tokenizer = data_state;\r\n      emitTag();\r\n      break;\r\n    case -1: // EOF\r\n      emitEOF();\r\n      break;\r\n    case 0x003D: // EQUALS SIGN\r\n      beginAttrName();\r\n      attrnamebuf += String.fromCharCode(c);\r\n      tokenizer = attribute_name_state;\r\n      break;\r\n    default:\r\n      if (handleSimpleAttribute()) break;\r\n      beginAttrName();\r\n      reconsume(c, attribute_name_state);\r\n      break;\r\n    }\r\n  }\r\n\r\n  // beginAttrName() must have been called before this point\r\n  // There is an active attribute in attrnamebuf (but not attrvaluebuf)\r\n  function attribute_name_state(c) {\r\n    switch(c) {\r\n    case 0x0009: // CHARACTER TABULATION (tab)\r\n    case 0x000A: // LINE FEED (LF)\r\n    case 0x000C: // FORM FEED (FF)\r\n    case 0x0020: // SPACE\r\n    case 0x002F: // SOLIDUS\r\n    case 0x003E: // GREATER-THAN SIGN\r\n    case -1: // EOF\r\n      reconsume(c, after_attribute_name_state);\r\n      break;\r\n    case 0x003D: // EQUALS SIGN\r\n      tokenizer = before_attribute_value_state;\r\n      break;\r\n    case 0x0041:  // [A-Z]\r\n    case 0x0042:case 0x0043:case 0x0044:case 0x0045:case 0x0046:\r\n    case 0x0047:case 0x0048:case 0x0049:case 0x004A:case 0x004B:\r\n    case 0x004C:case 0x004D:case 0x004E:case 0x004F:case 0x0050:\r\n    case 0x0051:case 0x0052:case 0x0053:case 0x0054:case 0x0055:\r\n    case 0x0056:case 0x0057:case 0x0058:case 0x0059:case 0x005A:\r\n      attrnamebuf += String.fromCharCode(c + 0x0020);\r\n      break;\r\n    case 0x0000: // NULL\r\n      attrnamebuf += String.fromCharCode(0xFFFD /* REPLACEMENT CHARACTER */);\r\n      break;\r\n    case 0x0022: // QUOTATION MARK\r\n    case 0x0027: // APOSTROPHE\r\n    case 0x003C: // LESS-THAN SIGN\r\n      /* falls through */\r\n    default:\r\n      attrnamebuf += getMatchingChars(ATTRNAME);\r\n      break;\r\n    }\r\n  }\r\n\r\n  // There is an active attribute in attrnamebuf, but not yet in attrvaluebuf.\r\n  function after_attribute_name_state(c) {\r\n    switch(c) {\r\n    case 0x0009: // CHARACTER TABULATION (tab)\r\n    case 0x000A: // LINE FEED (LF)\r\n    case 0x000C: // FORM FEED (FF)\r\n    case 0x0020: // SPACE\r\n      /* Ignore the character. */\r\n      break;\r\n    case 0x002F: // SOLIDUS\r\n      // Keep in sync with before_attribute_name_state.\r\n      addAttribute(attrnamebuf);\r\n      tokenizer = self_closing_start_tag_state;\r\n      break;\r\n    case 0x003D: // EQUALS SIGN\r\n      tokenizer = before_attribute_value_state;\r\n      break;\r\n    case 0x003E: // GREATER-THAN SIGN\r\n      // Keep in sync with before_attribute_name_state.\r\n      tokenizer = data_state;\r\n      addAttribute(attrnamebuf);\r\n      emitTag();\r\n      break;\r\n    case -1: // EOF\r\n      // Keep in sync with before_attribute_name_state.\r\n      addAttribute(attrnamebuf);\r\n      emitEOF();\r\n      break;\r\n    default:\r\n      addAttribute(attrnamebuf);\r\n      beginAttrName();\r\n      reconsume(c, attribute_name_state);\r\n      break;\r\n    }\r\n  }\r\n\r\n  function before_attribute_value_state(c) {\r\n    switch(c) {\r\n    case 0x0009: // CHARACTER TABULATION (tab)\r\n    case 0x000A: // LINE FEED (LF)\r\n    case 0x000C: // FORM FEED (FF)\r\n    case 0x0020: // SPACE\r\n      /* Ignore the character. */\r\n      break;\r\n    case 0x0022: // QUOTATION MARK\r\n      beginAttrValue();\r\n      tokenizer = attribute_value_double_quoted_state;\r\n      break;\r\n    case 0x0027: // APOSTROPHE\r\n      beginAttrValue();\r\n      tokenizer = attribute_value_single_quoted_state;\r\n      break;\r\n    case 0x003E: // GREATER-THAN SIGN\r\n      /* falls through */\r\n    default:\r\n      beginAttrValue();\r\n      reconsume(c, attribute_value_unquoted_state);\r\n      break;\r\n    }\r\n  }\r\n\r\n  function attribute_value_double_quoted_state(c) {\r\n    switch(c) {\r\n    case 0x0022: // QUOTATION MARK\r\n      addAttribute(attrnamebuf, attrvaluebuf);\r\n      tokenizer = after_attribute_value_quoted_state;\r\n      break;\r\n    case 0x0026: // AMPERSAND\r\n      return_state = attribute_value_double_quoted_state;\r\n      tokenizer = character_reference_state;\r\n      break;\r\n    case 0x0000: // NULL\r\n      attrvaluebuf += String.fromCharCode(0xFFFD /* REPLACEMENT CHARACTER */);\r\n      break;\r\n    case -1: // EOF\r\n      emitEOF();\r\n      break;\r\n    case 0x000A: // LF\r\n      // this could be a converted \\r, so don't use getMatchingChars\r\n      attrvaluebuf += String.fromCharCode(c);\r\n      break;\r\n    default:\r\n      attrvaluebuf += getMatchingChars(DBLQUOTEATTRVAL);\r\n      break;\r\n    }\r\n  }\r\n\r\n  function attribute_value_single_quoted_state(c) {\r\n    switch(c) {\r\n    case 0x0027: // APOSTROPHE\r\n      addAttribute(attrnamebuf, attrvaluebuf);\r\n      tokenizer = after_attribute_value_quoted_state;\r\n      break;\r\n    case 0x0026: // AMPERSAND\r\n      return_state = attribute_value_single_quoted_state;\r\n      tokenizer = character_reference_state;\r\n      break;\r\n    case 0x0000: // NULL\r\n      attrvaluebuf += String.fromCharCode(0xFFFD /* REPLACEMENT CHARACTER */);\r\n      break;\r\n    case -1: // EOF\r\n      emitEOF();\r\n      break;\r\n    case 0x000A: // LF\r\n      // this could be a converted \\r, so don't use getMatchingChars\r\n      attrvaluebuf += String.fromCharCode(c);\r\n      break;\r\n    default:\r\n      attrvaluebuf += getMatchingChars(SINGLEQUOTEATTRVAL);\r\n      break;\r\n    }\r\n  }\r\n\r\n  function attribute_value_unquoted_state(c) {\r\n    switch(c) {\r\n    case 0x0009: // CHARACTER TABULATION (tab)\r\n    case 0x000A: // LINE FEED (LF)\r\n    case 0x000C: // FORM FEED (FF)\r\n    case 0x0020: // SPACE\r\n      addAttribute(attrnamebuf, attrvaluebuf);\r\n      tokenizer = before_attribute_name_state;\r\n      break;\r\n    case 0x0026: // AMPERSAND\r\n      return_state = attribute_value_unquoted_state;\r\n      tokenizer = character_reference_state;\r\n      break;\r\n    case 0x003E: // GREATER-THAN SIGN\r\n      addAttribute(attrnamebuf, attrvaluebuf);\r\n      tokenizer = data_state;\r\n      emitTag();\r\n      break;\r\n    case 0x0000: // NULL\r\n      attrvaluebuf += String.fromCharCode(0xFFFD /* REPLACEMENT CHARACTER */);\r\n      break;\r\n    case -1: // EOF\r\n      nextchar--; // pushback\r\n      tokenizer = data_state;\r\n      break;\r\n    case 0x0022: // QUOTATION MARK\r\n    case 0x0027: // APOSTROPHE\r\n    case 0x003C: // LESS-THAN SIGN\r\n    case 0x003D: // EQUALS SIGN\r\n    case 0x0060: // GRAVE ACCENT\r\n      /* falls through */\r\n    default:\r\n      attrvaluebuf += getMatchingChars(UNQUOTEDATTRVAL);\r\n      break;\r\n    }\r\n  }\r\n\r\n  function after_attribute_value_quoted_state(c) {\r\n    switch(c) {\r\n    case 0x0009: // CHARACTER TABULATION (tab)\r\n    case 0x000A: // LINE FEED (LF)\r\n    case 0x000C: // FORM FEED (FF)\r\n    case 0x0020: // SPACE\r\n      tokenizer = before_attribute_name_state;\r\n      break;\r\n    case 0x002F: // SOLIDUS\r\n      tokenizer = self_closing_start_tag_state;\r\n      break;\r\n    case 0x003E: // GREATER-THAN SIGN\r\n      tokenizer = data_state;\r\n      emitTag();\r\n      break;\r\n    case -1: // EOF\r\n      emitEOF();\r\n      break;\r\n    default:\r\n      reconsume(c, before_attribute_name_state);\r\n      break;\r\n    }\r\n  }\r\n\r\n  function self_closing_start_tag_state(c) {\r\n    switch(c) {\r\n    case 0x003E: // GREATER-THAN SIGN\r\n      // Set the <i>self-closing flag</i> of the current tag token.\r\n      tokenizer = data_state;\r\n      emitSelfClosingTag(true);\r\n      break;\r\n    case -1: // EOF\r\n      emitEOF();\r\n      break;\r\n    default:\r\n      reconsume(c, before_attribute_name_state);\r\n      break;\r\n    }\r\n  }\r\n\r\n  function bogus_comment_state(c, lookahead, eof) {\r\n    var len = lookahead.length;\r\n\r\n    if (eof) {\r\n      nextchar += len-1; // don't consume the eof\r\n    }\r\n    else {\r\n      nextchar += len;\r\n    }\r\n\r\n    var comment = lookahead.substring(0, len-1);\r\n\r\n    comment = comment.replace(/\\u0000/g,\"\\uFFFD\");\r\n    comment = comment.replace(/\\u000D\\u000A/g,\"\\u000A\");\r\n    comment = comment.replace(/\\u000D/g,\"\\u000A\");\r\n\r\n    insertToken(COMMENT, comment);\r\n    tokenizer = data_state;\r\n  }\r\n  bogus_comment_state.lookahead = \">\";\r\n\r\n  function markup_declaration_open_state(c, lookahead, eof) {\r\n    if (lookahead[0] === \"-\" && lookahead[1] === \"-\") {\r\n      nextchar += 2;\r\n      beginComment();\r\n      tokenizer = comment_start_state;\r\n      return;\r\n    }\r\n\r\n    if (lookahead.toUpperCase() === \"DOCTYPE\") {\r\n      nextchar += 7;\r\n      tokenizer = doctype_state;\r\n    }\r\n    else if (lookahead === \"[CDATA[\" && cdataAllowed()) {\r\n      nextchar += 7;\r\n      tokenizer = cdata_section_state;\r\n    }\r\n    else {\r\n      tokenizer = bogus_comment_state;\r\n    }\r\n  }\r\n  markup_declaration_open_state.lookahead = 7;\r\n\r\n  function comment_start_state(c) {\r\n    beginComment();\r\n    switch(c) {\r\n    case 0x002D: // HYPHEN-MINUS\r\n      tokenizer = comment_start_dash_state;\r\n      break;\r\n    case 0x003E: // GREATER-THAN SIGN\r\n      tokenizer = data_state;\r\n      insertToken(COMMENT, buf2str(commentbuf));\r\n      break; /* see comment in comment end state */\r\n    default:\r\n      reconsume(c, comment_state);\r\n      break;\r\n    }\r\n  }\r\n\r\n  function comment_start_dash_state(c) {\r\n    switch(c) {\r\n    case 0x002D: // HYPHEN-MINUS\r\n      tokenizer = comment_end_state;\r\n      break;\r\n    case 0x003E: // GREATER-THAN SIGN\r\n      tokenizer = data_state;\r\n      insertToken(COMMENT, buf2str(commentbuf));\r\n      break;\r\n    case -1: // EOF\r\n      insertToken(COMMENT, buf2str(commentbuf));\r\n      emitEOF();\r\n      break; /* see comment in comment end state */\r\n    default:\r\n      commentbuf.push(0x002D /* HYPHEN-MINUS */);\r\n      reconsume(c, comment_state);\r\n      break;\r\n    }\r\n  }\r\n\r\n  function comment_state(c) {\r\n    switch(c) {\r\n    case 0x003C: // LESS-THAN SIGN\r\n      commentbuf.push(c);\r\n      tokenizer = comment_less_than_sign_state;\r\n      break;\r\n    case 0x002D: // HYPHEN-MINUS\r\n      tokenizer = comment_end_dash_state;\r\n      break;\r\n    case 0x0000: // NULL\r\n      commentbuf.push(0xFFFD /* REPLACEMENT CHARACTER */);\r\n      break;\r\n    case -1: // EOF\r\n      insertToken(COMMENT, buf2str(commentbuf));\r\n      emitEOF();\r\n      break; /* see comment in comment end state */\r\n    default:\r\n      commentbuf.push(c);\r\n      break;\r\n    }\r\n  }\r\n\r\n  function comment_less_than_sign_state(c) {\r\n    switch(c) {\r\n    case 0x0021: // EXCLAMATION MARK\r\n      commentbuf.push(c);\r\n      tokenizer = comment_less_than_sign_bang_state;\r\n      break;\r\n    case 0x003C: // LESS-THAN SIGN\r\n      commentbuf.push(c);\r\n      break;\r\n    default:\r\n      reconsume(c, comment_state);\r\n      break;\r\n    }\r\n  }\r\n\r\n  function comment_less_than_sign_bang_state(c) {\r\n    switch(c) {\r\n    case 0x002D: // HYPHEN-MINUS\r\n      tokenizer = comment_less_than_sign_bang_dash_state;\r\n      break;\r\n    default:\r\n      reconsume(c, comment_state);\r\n      break;\r\n    }\r\n  }\r\n\r\n  function comment_less_than_sign_bang_dash_state(c) {\r\n    switch(c) {\r\n    case 0x002D: // HYPHEN-MINUS\r\n      tokenizer = comment_less_than_sign_bang_dash_dash_state;\r\n      break;\r\n    default:\r\n      reconsume(c, comment_end_dash_state);\r\n      break;\r\n    }\r\n  }\r\n\r\n  function comment_less_than_sign_bang_dash_dash_state(c) {\r\n    switch(c) {\r\n    case 0x003E: // GREATER-THAN SIGN\r\n    case -1: // EOF\r\n      reconsume(c, comment_end_state);\r\n      break;\r\n    default:\r\n      // parse error\r\n      reconsume(c, comment_end_state);\r\n      break;\r\n    }\r\n  }\r\n\r\n  function comment_end_dash_state(c) {\r\n    switch(c) {\r\n    case 0x002D: // HYPHEN-MINUS\r\n      tokenizer = comment_end_state;\r\n      break;\r\n    case -1: // EOF\r\n      insertToken(COMMENT, buf2str(commentbuf));\r\n      emitEOF();\r\n      break; /* see comment in comment end state */\r\n    default:\r\n      commentbuf.push(0x002D /* HYPHEN-MINUS */);\r\n      reconsume(c, comment_state);\r\n      break;\r\n    }\r\n  }\r\n\r\n  function comment_end_state(c) {\r\n    switch(c) {\r\n    case 0x003E: // GREATER-THAN SIGN\r\n      tokenizer = data_state;\r\n      insertToken(COMMENT, buf2str(commentbuf));\r\n      break;\r\n    case 0x0021: // EXCLAMATION MARK\r\n      tokenizer = comment_end_bang_state;\r\n      break;\r\n    case 0x002D: // HYPHEN-MINUS\r\n      commentbuf.push(0x002D);\r\n      break;\r\n    case -1: // EOF\r\n      insertToken(COMMENT, buf2str(commentbuf));\r\n      emitEOF();\r\n      break; /* For security reasons: otherwise, hostile user could put a script in a comment e.g. in a blog comment and then DOS the server so that the end tag isn't read, and then the commented script tag would be treated as live code */\r\n    default:\r\n      commentbuf.push(0x002D);\r\n      commentbuf.push(0x002D);\r\n      reconsume(c, comment_state);\r\n      break;\r\n    }\r\n  }\r\n\r\n  function comment_end_bang_state(c) {\r\n    switch(c) {\r\n    case 0x002D: // HYPHEN-MINUS\r\n      commentbuf.push(0x002D);\r\n      commentbuf.push(0x002D);\r\n      commentbuf.push(0x0021);\r\n      tokenizer = comment_end_dash_state;\r\n      break;\r\n    case 0x003E: // GREATER-THAN SIGN\r\n      tokenizer = data_state;\r\n      insertToken(COMMENT, buf2str(commentbuf));\r\n      break;\r\n    case -1: // EOF\r\n      insertToken(COMMENT, buf2str(commentbuf));\r\n      emitEOF();\r\n      break; /* see comment in comment end state */\r\n    default:\r\n      commentbuf.push(0x002D);\r\n      commentbuf.push(0x002D);\r\n      commentbuf.push(0x0021);\r\n      reconsume(c, comment_state);\r\n      break;\r\n    }\r\n  }\r\n\r\n  function doctype_state(c) {\r\n    switch(c) {\r\n    case 0x0009: // CHARACTER TABULATION (tab)\r\n    case 0x000A: // LINE FEED (LF)\r\n    case 0x000C: // FORM FEED (FF)\r\n    case 0x0020: // SPACE\r\n      tokenizer = before_doctype_name_state;\r\n      break;\r\n    case -1: // EOF\r\n      beginDoctype();\r\n      forcequirks();\r\n      emitDoctype();\r\n      emitEOF();\r\n      break;\r\n    default:\r\n      reconsume(c, before_doctype_name_state);\r\n      break;\r\n    }\r\n  }\r\n\r\n  function before_doctype_name_state(c) {\r\n    switch(c) {\r\n    case 0x0009: // CHARACTER TABULATION (tab)\r\n    case 0x000A: // LINE FEED (LF)\r\n    case 0x000C: // FORM FEED (FF)\r\n    case 0x0020: // SPACE\r\n      /* Ignore the character. */\r\n      break;\r\n    case 0x0041:  // [A-Z]\r\n    case 0x0042:case 0x0043:case 0x0044:case 0x0045:case 0x0046:\r\n    case 0x0047:case 0x0048:case 0x0049:case 0x004A:case 0x004B:\r\n    case 0x004C:case 0x004D:case 0x004E:case 0x004F:case 0x0050:\r\n    case 0x0051:case 0x0052:case 0x0053:case 0x0054:case 0x0055:\r\n    case 0x0056:case 0x0057:case 0x0058:case 0x0059:case 0x005A:\r\n      beginDoctype();\r\n      doctypenamebuf.push(c + 0x0020);\r\n      tokenizer = doctype_name_state;\r\n      break;\r\n    case 0x0000: // NULL\r\n      beginDoctype();\r\n      doctypenamebuf.push(0xFFFD);\r\n      tokenizer = doctype_name_state;\r\n      break;\r\n    case 0x003E: // GREATER-THAN SIGN\r\n      beginDoctype();\r\n      forcequirks();\r\n      tokenizer = data_state;\r\n      emitDoctype();\r\n      break;\r\n    case -1: // EOF\r\n      beginDoctype();\r\n      forcequirks();\r\n      emitDoctype();\r\n      emitEOF();\r\n      break;\r\n    default:\r\n      beginDoctype();\r\n      doctypenamebuf.push(c);\r\n      tokenizer = doctype_name_state;\r\n      break;\r\n    }\r\n  }\r\n\r\n  function doctype_name_state(c) {\r\n    switch(c) {\r\n    case 0x0009: // CHARACTER TABULATION (tab)\r\n    case 0x000A: // LINE FEED (LF)\r\n    case 0x000C: // FORM FEED (FF)\r\n    case 0x0020: // SPACE\r\n      tokenizer = after_doctype_name_state;\r\n      break;\r\n    case 0x003E: // GREATER-THAN SIGN\r\n      tokenizer = data_state;\r\n      emitDoctype();\r\n      break;\r\n    case 0x0041:  // [A-Z]\r\n    case 0x0042:case 0x0043:case 0x0044:case 0x0045:case 0x0046:\r\n    case 0x0047:case 0x0048:case 0x0049:case 0x004A:case 0x004B:\r\n    case 0x004C:case 0x004D:case 0x004E:case 0x004F:case 0x0050:\r\n    case 0x0051:case 0x0052:case 0x0053:case 0x0054:case 0x0055:\r\n    case 0x0056:case 0x0057:case 0x0058:case 0x0059:case 0x005A:\r\n      doctypenamebuf.push(c + 0x0020);\r\n      break;\r\n    case 0x0000: // NULL\r\n      doctypenamebuf.push(0xFFFD /* REPLACEMENT CHARACTER */);\r\n      break;\r\n    case -1: // EOF\r\n      forcequirks();\r\n      emitDoctype();\r\n      emitEOF();\r\n      break;\r\n    default:\r\n      doctypenamebuf.push(c);\r\n      break;\r\n    }\r\n  }\r\n\r\n  function after_doctype_name_state(c, lookahead, eof) {\r\n    switch(c) {\r\n    case 0x0009: // CHARACTER TABULATION (tab)\r\n    case 0x000A: // LINE FEED (LF)\r\n    case 0x000C: // FORM FEED (FF)\r\n    case 0x0020: // SPACE\r\n      /* Ignore the character. */\r\n      nextchar += 1;\r\n      break;\r\n    case 0x003E: // GREATER-THAN SIGN\r\n      tokenizer = data_state;\r\n      nextchar += 1;\r\n      emitDoctype();\r\n      break;\r\n    case -1: // EOF\r\n      forcequirks();\r\n      emitDoctype();\r\n      emitEOF();\r\n      break;\r\n    default:\r\n      lookahead = lookahead.toUpperCase();\r\n      if (lookahead === \"PUBLIC\") {\r\n        nextchar += 6;\r\n        tokenizer = after_doctype_public_keyword_state;\r\n      }\r\n      else if (lookahead === \"SYSTEM\") {\r\n        nextchar += 6;\r\n        tokenizer = after_doctype_system_keyword_state;\r\n      }\r\n      else {\r\n        forcequirks();\r\n        tokenizer = bogus_doctype_state;\r\n      }\r\n      break;\r\n    }\r\n  }\r\n  after_doctype_name_state.lookahead = 6;\r\n\r\n  function after_doctype_public_keyword_state(c) {\r\n    switch(c) {\r\n    case 0x0009: // CHARACTER TABULATION (tab)\r\n    case 0x000A: // LINE FEED (LF)\r\n    case 0x000C: // FORM FEED (FF)\r\n    case 0x0020: // SPACE\r\n      tokenizer = before_doctype_public_identifier_state;\r\n      break;\r\n    case 0x0022: // QUOTATION MARK\r\n      beginDoctypePublicId();\r\n      tokenizer = doctype_public_identifier_double_quoted_state;\r\n      break;\r\n    case 0x0027: // APOSTROPHE\r\n      beginDoctypePublicId();\r\n      tokenizer = doctype_public_identifier_single_quoted_state;\r\n      break;\r\n    case 0x003E: // GREATER-THAN SIGN\r\n      forcequirks();\r\n      tokenizer = data_state;\r\n      emitDoctype();\r\n      break;\r\n    case -1: // EOF\r\n      forcequirks();\r\n      emitDoctype();\r\n      emitEOF();\r\n      break;\r\n    default:\r\n      forcequirks();\r\n      tokenizer = bogus_doctype_state;\r\n      break;\r\n    }\r\n  }\r\n\r\n  function before_doctype_public_identifier_state(c) {\r\n    switch(c) {\r\n    case 0x0009: // CHARACTER TABULATION (tab)\r\n    case 0x000A: // LINE FEED (LF)\r\n    case 0x000C: // FORM FEED (FF)\r\n    case 0x0020: // SPACE\r\n      /* Ignore the character. */\r\n      break;\r\n    case 0x0022: // QUOTATION MARK\r\n      beginDoctypePublicId();\r\n      tokenizer = doctype_public_identifier_double_quoted_state;\r\n      break;\r\n    case 0x0027: // APOSTROPHE\r\n      beginDoctypePublicId();\r\n      tokenizer = doctype_public_identifier_single_quoted_state;\r\n      break;\r\n    case 0x003E: // GREATER-THAN SIGN\r\n      forcequirks();\r\n      tokenizer = data_state;\r\n      emitDoctype();\r\n      break;\r\n    case -1: // EOF\r\n      forcequirks();\r\n      emitDoctype();\r\n      emitEOF();\r\n      break;\r\n    default:\r\n      forcequirks();\r\n      tokenizer = bogus_doctype_state;\r\n      break;\r\n    }\r\n  }\r\n\r\n  function doctype_public_identifier_double_quoted_state(c) {\r\n    switch(c) {\r\n    case 0x0022: // QUOTATION MARK\r\n      tokenizer = after_doctype_public_identifier_state;\r\n      break;\r\n    case 0x0000: // NULL\r\n      doctypepublicbuf.push(0xFFFD /* REPLACEMENT CHARACTER */);\r\n      break;\r\n    case 0x003E: // GREATER-THAN SIGN\r\n      forcequirks();\r\n      tokenizer = data_state;\r\n      emitDoctype();\r\n      break;\r\n    case -1: // EOF\r\n      forcequirks();\r\n      emitDoctype();\r\n      emitEOF();\r\n      break;\r\n    default:\r\n      doctypepublicbuf.push(c);\r\n      break;\r\n    }\r\n  }\r\n\r\n  function doctype_public_identifier_single_quoted_state(c) {\r\n    switch(c) {\r\n    case 0x0027: // APOSTROPHE\r\n      tokenizer = after_doctype_public_identifier_state;\r\n      break;\r\n    case 0x0000: // NULL\r\n      doctypepublicbuf.push(0xFFFD /* REPLACEMENT CHARACTER */);\r\n      break;\r\n    case 0x003E: // GREATER-THAN SIGN\r\n      forcequirks();\r\n      tokenizer = data_state;\r\n      emitDoctype();\r\n      break;\r\n    case -1: // EOF\r\n      forcequirks();\r\n      emitDoctype();\r\n      emitEOF();\r\n      break;\r\n    default:\r\n      doctypepublicbuf.push(c);\r\n      break;\r\n    }\r\n  }\r\n\r\n  function after_doctype_public_identifier_state(c) {\r\n    switch(c) {\r\n    case 0x0009: // CHARACTER TABULATION (tab)\r\n    case 0x000A: // LINE FEED (LF)\r\n    case 0x000C: // FORM FEED (FF)\r\n    case 0x0020: // SPACE\r\n      tokenizer = between_doctype_public_and_system_identifiers_state;\r\n      break;\r\n    case 0x003E: // GREATER-THAN SIGN\r\n      tokenizer = data_state;\r\n      emitDoctype();\r\n      break;\r\n    case 0x0022: // QUOTATION MARK\r\n      beginDoctypeSystemId();\r\n      tokenizer = doctype_system_identifier_double_quoted_state;\r\n      break;\r\n    case 0x0027: // APOSTROPHE\r\n      beginDoctypeSystemId();\r\n      tokenizer = doctype_system_identifier_single_quoted_state;\r\n      break;\r\n    case -1: // EOF\r\n      forcequirks();\r\n      emitDoctype();\r\n      emitEOF();\r\n      break;\r\n    default:\r\n      forcequirks();\r\n      tokenizer = bogus_doctype_state;\r\n      break;\r\n    }\r\n  }\r\n\r\n  function between_doctype_public_and_system_identifiers_state(c) {\r\n    switch(c) {\r\n    case 0x0009: // CHARACTER TABULATION (tab)\r\n    case 0x000A: // LINE FEED (LF)\r\n    case 0x000C: // FORM FEED (FF)\r\n    case 0x0020: // SPACE Ignore the character.\r\n      break;\r\n    case 0x003E: // GREATER-THAN SIGN\r\n      tokenizer = data_state;\r\n      emitDoctype();\r\n      break;\r\n    case 0x0022: // QUOTATION MARK\r\n      beginDoctypeSystemId();\r\n      tokenizer = doctype_system_identifier_double_quoted_state;\r\n      break;\r\n    case 0x0027: // APOSTROPHE\r\n      beginDoctypeSystemId();\r\n      tokenizer = doctype_system_identifier_single_quoted_state;\r\n      break;\r\n    case -1: // EOF\r\n      forcequirks();\r\n      emitDoctype();\r\n      emitEOF();\r\n      break;\r\n    default:\r\n      forcequirks();\r\n      tokenizer = bogus_doctype_state;\r\n      break;\r\n    }\r\n  }\r\n\r\n  function after_doctype_system_keyword_state(c) {\r\n    switch(c) {\r\n    case 0x0009: // CHARACTER TABULATION (tab)\r\n    case 0x000A: // LINE FEED (LF)\r\n    case 0x000C: // FORM FEED (FF)\r\n    case 0x0020: // SPACE\r\n      tokenizer = before_doctype_system_identifier_state;\r\n      break;\r\n    case 0x0022: // QUOTATION MARK\r\n      beginDoctypeSystemId();\r\n      tokenizer = doctype_system_identifier_double_quoted_state;\r\n      break;\r\n    case 0x0027: // APOSTROPHE\r\n      beginDoctypeSystemId();\r\n      tokenizer = doctype_system_identifier_single_quoted_state;\r\n      break;\r\n    case 0x003E: // GREATER-THAN SIGN\r\n      forcequirks();\r\n      tokenizer = data_state;\r\n      emitDoctype();\r\n      break;\r\n    case -1: // EOF\r\n      forcequirks();\r\n      emitDoctype();\r\n      emitEOF();\r\n      break;\r\n    default:\r\n      forcequirks();\r\n      tokenizer = bogus_doctype_state;\r\n      break;\r\n    }\r\n  }\r\n\r\n  function before_doctype_system_identifier_state(c) {\r\n    switch(c) {\r\n    case 0x0009: // CHARACTER TABULATION (tab)\r\n    case 0x000A: // LINE FEED (LF)\r\n    case 0x000C: // FORM FEED (FF)\r\n    case 0x0020: // SPACE Ignore the character.\r\n      break;\r\n    case 0x0022: // QUOTATION MARK\r\n      beginDoctypeSystemId();\r\n      tokenizer = doctype_system_identifier_double_quoted_state;\r\n      break;\r\n    case 0x0027: // APOSTROPHE\r\n      beginDoctypeSystemId();\r\n      tokenizer = doctype_system_identifier_single_quoted_state;\r\n      break;\r\n    case 0x003E: // GREATER-THAN SIGN\r\n      forcequirks();\r\n      tokenizer = data_state;\r\n      emitDoctype();\r\n      break;\r\n    case -1: // EOF\r\n      forcequirks();\r\n      emitDoctype();\r\n      emitEOF();\r\n      break;\r\n    default:\r\n      forcequirks();\r\n      tokenizer = bogus_doctype_state;\r\n      break;\r\n    }\r\n  }\r\n\r\n  function doctype_system_identifier_double_quoted_state(c) {\r\n    switch(c) {\r\n    case 0x0022: // QUOTATION MARK\r\n      tokenizer = after_doctype_system_identifier_state;\r\n      break;\r\n    case 0x0000: // NULL\r\n      doctypesystembuf.push(0xFFFD /* REPLACEMENT CHARACTER */);\r\n      break;\r\n    case 0x003E: // GREATER-THAN SIGN\r\n      forcequirks();\r\n      tokenizer = data_state;\r\n      emitDoctype();\r\n      break;\r\n    case -1: // EOF\r\n      forcequirks();\r\n      emitDoctype();\r\n      emitEOF();\r\n      break;\r\n    default:\r\n      doctypesystembuf.push(c);\r\n      break;\r\n    }\r\n  }\r\n\r\n  function doctype_system_identifier_single_quoted_state(c) {\r\n    switch(c) {\r\n    case 0x0027: // APOSTROPHE\r\n      tokenizer = after_doctype_system_identifier_state;\r\n      break;\r\n    case 0x0000: // NULL\r\n      doctypesystembuf.push(0xFFFD /* REPLACEMENT CHARACTER */);\r\n      break;\r\n    case 0x003E: // GREATER-THAN SIGN\r\n      forcequirks();\r\n      tokenizer = data_state;\r\n      emitDoctype();\r\n      break;\r\n    case -1: // EOF\r\n      forcequirks();\r\n      emitDoctype();\r\n      emitEOF();\r\n      break;\r\n    default:\r\n      doctypesystembuf.push(c);\r\n      break;\r\n    }\r\n  }\r\n\r\n  function after_doctype_system_identifier_state(c) {\r\n    switch(c) {\r\n    case 0x0009: // CHARACTER TABULATION (tab)\r\n    case 0x000A: // LINE FEED (LF)\r\n    case 0x000C: // FORM FEED (FF)\r\n    case 0x0020: // SPACE\r\n      /* Ignore the character. */\r\n      break;\r\n    case 0x003E: // GREATER-THAN SIGN\r\n      tokenizer = data_state;\r\n      emitDoctype();\r\n      break;\r\n    case -1: // EOF\r\n      forcequirks();\r\n      emitDoctype();\r\n      emitEOF();\r\n      break;\r\n    default:\r\n      tokenizer = bogus_doctype_state;\r\n      /* This does *not* set the DOCTYPE token's force-quirks flag. */\r\n      break;\r\n    }\r\n  }\r\n\r\n  function bogus_doctype_state(c) {\r\n    switch(c) {\r\n    case 0x003E: // GREATER-THAN SIGN\r\n      tokenizer = data_state;\r\n      emitDoctype();\r\n      break;\r\n    case -1: // EOF\r\n      emitDoctype();\r\n      emitEOF();\r\n      break;\r\n    default:\r\n      /* Ignore the character. */\r\n      break;\r\n    }\r\n  }\r\n\r\n  function cdata_section_state(c) {\r\n    switch(c) {\r\n    case 0x005D: // RIGHT SQUARE BRACKET\r\n      tokenizer = cdata_section_bracket_state;\r\n      break;\r\n    case -1: // EOF\r\n      emitEOF();\r\n      break;\r\n    case 0x0000: // NULL\r\n      textIncludesNUL = true;\r\n      /* fall through */\r\n    default:\r\n      // Instead of just pushing a single character and then\r\n      // coming back to the very same place, lookahead and\r\n      // emit everything we can at once.\r\n      /*jshint -W030 */\r\n      emitCharsWhile(CDATATEXT) || textrun.push(c);\r\n      break;\r\n    }\r\n  }\r\n\r\n  function cdata_section_bracket_state(c) {\r\n    switch(c) {\r\n    case 0x005D: // RIGHT SQUARE BRACKET\r\n      tokenizer = cdata_section_end_state;\r\n      break;\r\n    default:\r\n      textrun.push(0x005D);\r\n      reconsume(c, cdata_section_state);\r\n      break;\r\n    }\r\n  }\r\n\r\n  function cdata_section_end_state(c) {\r\n    switch(c) {\r\n    case 0x005D: // RIGHT SQUARE BRACKET\r\n      textrun.push(0x005D);\r\n      break;\r\n    case 0x003E: // GREATER-THAN SIGN\r\n      flushText();\r\n      tokenizer = data_state;\r\n      break;\r\n    default:\r\n      textrun.push(0x005D);\r\n      textrun.push(0x005D);\r\n      reconsume(c, cdata_section_state);\r\n      break;\r\n    }\r\n  }\r\n\r\n  function character_reference_state(c) {\r\n    beginTempBuf();\r\n    tempbuf.push(0x0026);\r\n    switch(c) {\r\n    case 0x0009: // TAB\r\n    case 0x000A: // LINE FEED\r\n    case 0x000C: // FORM FEED\r\n    case 0x0020: // SPACE\r\n    case 0x003C: // LESS-THAN SIGN\r\n    case 0x0026: // AMPERSAND\r\n    case -1: // EOF\r\n      reconsume(c, character_reference_end_state);\r\n      break;\r\n    case 0x0023: // NUMBER SIGN\r\n      tempbuf.push(c);\r\n      tokenizer = numeric_character_reference_state;\r\n      break;\r\n    default:\r\n      reconsume(c, named_character_reference_state);\r\n      break;\r\n    }\r\n  }\r\n\r\n  function named_character_reference_state(c) {\r\n    NAMEDCHARREF.lastIndex = nextchar; // w/ lookahead no char has been consumed\r\n    var matched = NAMEDCHARREF.exec(chars);\r\n    if (!matched) throw new Error(\"should never happen\");\r\n    var name = matched[1];\r\n    if (!name) {\r\n      // If no match can be made, switch to the character reference end state\r\n      tokenizer = character_reference_end_state;\r\n      return;\r\n    }\r\n\r\n    // Consume the matched characters and append them to temporary buffer\r\n    nextchar += name.length;\r\n    pushAll(tempbuf, str2buf(name));\r\n\r\n    switch(return_state) {\r\n    case attribute_value_double_quoted_state:\r\n    case attribute_value_single_quoted_state:\r\n    case attribute_value_unquoted_state:\r\n      // If the character reference was consumed as part of an attribute...\r\n      if (name[name.length-1] !== ';') { // ...and the last char is not ;\r\n        if (/[=A-Za-z0-9]/.test(chars[nextchar])) {\r\n          tokenizer = character_reference_end_state;\r\n          return;\r\n        }\r\n      }\r\n      break;\r\n    default:\r\n      break;\r\n    }\r\n\r\n    beginTempBuf();\r\n    var rv = namedCharRefs[name];\r\n    if (typeof rv === 'number') {\r\n      tempbuf.push(rv);\r\n    } else {\r\n      pushAll(tempbuf, rv);\r\n    }\r\n    tokenizer = character_reference_end_state;\r\n  }\r\n  // We might need to pause tokenization until we have enough characters\r\n  // in the buffer for longest possible character reference.\r\n  named_character_reference_state.lookahead = -NAMEDCHARREF_MAXLEN;\r\n\r\n  function numeric_character_reference_state(c) {\r\n    character_reference_code = 0;\r\n    switch(c) {\r\n    case 0x0078: // x\r\n    case 0x0058: // X\r\n      tempbuf.push(c);\r\n      tokenizer = hexadecimal_character_reference_start_state;\r\n      break;\r\n    default:\r\n      reconsume(c, decimal_character_reference_start_state);\r\n      break;\r\n    }\r\n  }\r\n\r\n  function hexadecimal_character_reference_start_state(c) {\r\n    switch(c) {\r\n    case 0x0030: case 0x0031: case 0x0032: case 0x0033: case 0x0034:\r\n    case 0x0035: case 0x0036: case 0x0037: case 0x0038: case 0x0039: // [0-9]\r\n    case 0x0041: case 0x0042: case 0x0043: case 0x0044: case 0x0045:\r\n    case 0x0046: // [A-F]\r\n    case 0x0061: case 0x0062: case 0x0063: case 0x0064: case 0x0065:\r\n    case 0x0066: // [a-f]\r\n      reconsume(c, hexadecimal_character_reference_state);\r\n      break;\r\n    default:\r\n      reconsume(c, character_reference_end_state);\r\n      break;\r\n    }\r\n  }\r\n\r\n  function decimal_character_reference_start_state(c) {\r\n    switch(c) {\r\n    case 0x0030: case 0x0031: case 0x0032: case 0x0033: case 0x0034:\r\n    case 0x0035: case 0x0036: case 0x0037: case 0x0038: case 0x0039: // [0-9]\r\n      reconsume(c, decimal_character_reference_state);\r\n      break;\r\n    default:\r\n      reconsume(c, character_reference_end_state);\r\n      break;\r\n    }\r\n  }\r\n\r\n  function hexadecimal_character_reference_state(c) {\r\n    switch(c) {\r\n    case 0x0041: case 0x0042: case 0x0043: case 0x0044: case 0x0045:\r\n    case 0x0046: // [A-F]\r\n      character_reference_code *= 16;\r\n      character_reference_code += (c - 0x0037);\r\n      break;\r\n    case 0x0061: case 0x0062: case 0x0063: case 0x0064: case 0x0065:\r\n    case 0x0066: // [a-f]\r\n      character_reference_code *= 16;\r\n      character_reference_code += (c - 0x0057);\r\n      break;\r\n    case 0x0030: case 0x0031: case 0x0032: case 0x0033: case 0x0034:\r\n    case 0x0035: case 0x0036: case 0x0037: case 0x0038: case 0x0039: // [0-9]\r\n      character_reference_code *= 16;\r\n      character_reference_code += (c - 0x0030);\r\n      break;\r\n    case 0x003B: // SEMICOLON\r\n      tokenizer = numeric_character_reference_end_state;\r\n      break;\r\n    default:\r\n      reconsume(c, numeric_character_reference_end_state);\r\n      break;\r\n    }\r\n  }\r\n\r\n  function decimal_character_reference_state(c) {\r\n    switch(c) {\r\n    case 0x0030: case 0x0031: case 0x0032: case 0x0033: case 0x0034:\r\n    case 0x0035: case 0x0036: case 0x0037: case 0x0038: case 0x0039: // [0-9]\r\n      character_reference_code *= 10;\r\n      character_reference_code += (c - 0x0030);\r\n      break;\r\n    case 0x003B: // SEMICOLON\r\n      tokenizer = numeric_character_reference_end_state;\r\n      break;\r\n    default:\r\n      reconsume(c, numeric_character_reference_end_state);\r\n      break;\r\n    }\r\n  }\r\n\r\n  function numeric_character_reference_end_state(c) {\r\n    if (character_reference_code in numericCharRefReplacements) {\r\n      character_reference_code = numericCharRefReplacements[character_reference_code];\r\n    } else if (character_reference_code > 0x10FFFF || (character_reference_code >= 0xD800 && character_reference_code < 0xE000)) {\r\n      character_reference_code = 0xFFFD;\r\n    }\r\n\r\n    beginTempBuf();\r\n    if (character_reference_code <= 0xFFFF) {\r\n      tempbuf.push(character_reference_code);\r\n    } else {\r\n      character_reference_code = character_reference_code - 0x10000;\r\n      /* jshint bitwise: false */\r\n      tempbuf.push(0xD800 + (character_reference_code >> 10));\r\n      tempbuf.push(0xDC00 + (character_reference_code & 0x03FF));\r\n    }\r\n    reconsume(c, character_reference_end_state);\r\n  }\r\n\r\n  function character_reference_end_state(c) {\r\n    switch(return_state) {\r\n    case attribute_value_double_quoted_state:\r\n    case attribute_value_single_quoted_state:\r\n    case attribute_value_unquoted_state:\r\n      // append each character to the current attribute's value\r\n      attrvaluebuf += buf2str(tempbuf);\r\n      break;\r\n    default:\r\n      pushAll(textrun, tempbuf);\r\n      break;\r\n    }\r\n    reconsume(c, return_state);\r\n  }\r\n\r\n  /***\r\n   * The tree builder insertion modes\r\n   */\r\n\r\n  // 11.2.5.4.1 The \"initial\" insertion mode\r\n  function initial_mode(t, value, arg3, arg4) {\r\n    switch(t) {\r\n    case 1: // TEXT\r\n      value = value.replace(LEADINGWS, \"\"); // Ignore spaces\r\n      if (value.length === 0) return; // Are we done?\r\n      break; // Handle anything non-space text below\r\n    case 4: // COMMENT\r\n      doc._appendChild(doc.createComment(value));\r\n      return;\r\n    case 5: // DOCTYPE\r\n      var name = value;\r\n      var publicid = arg3;\r\n      var systemid = arg4;\r\n      // Use the constructor directly instead of\r\n      // implementation.createDocumentType because the create\r\n      // function throws errors on invalid characters, and\r\n      // we don't want the parser to throw them.\r\n      doc.appendChild(new DocumentType(doc, name, publicid, systemid));\r\n\r\n      // Note that there is no public API for setting quirks mode We can\r\n      // do this here because we have access to implementation details\r\n      if (force_quirks ||\r\n        name.toLowerCase() !== \"html\" ||\r\n        quirkyPublicIds.test(publicid) ||\r\n        (systemid && systemid.toLowerCase() === quirkySystemId) ||\r\n        (systemid === undefined &&\r\n         conditionallyQuirkyPublicIds.test(publicid)))\r\n        doc._quirks = true;\r\n      else if (limitedQuirkyPublicIds.test(publicid) ||\r\n           (systemid !== undefined &&\r\n            conditionallyQuirkyPublicIds.test(publicid)))\r\n        doc._limitedQuirks = true;\r\n      parser = before_html_mode;\r\n      return;\r\n    }\r\n\r\n    // tags or non-whitespace text\r\n    doc._quirks = true;\r\n    parser = before_html_mode;\r\n    parser(t,value,arg3,arg4);\r\n  }\r\n\r\n  // 11.2.5.4.2 The \"before html\" insertion mode\r\n  function before_html_mode(t,value,arg3,arg4) {\r\n    var elt;\r\n    switch(t) {\r\n    case 1: // TEXT\r\n      value = value.replace(LEADINGWS, \"\"); // Ignore spaces\r\n      if (value.length === 0) return; // Are we done?\r\n      break; // Handle anything non-space text below\r\n    case 5: // DOCTYPE\r\n      /* ignore the token */\r\n      return;\r\n    case 4: // COMMENT\r\n      doc._appendChild(doc.createComment(value));\r\n      return;\r\n    case 2: // TAG\r\n      if (value === \"html\") {\r\n        elt = createHTMLElt(doc, value, arg3);\r\n        stack.push(elt);\r\n        doc.appendChild(elt);\r\n        // XXX: handle application cache here\r\n        parser = before_head_mode;\r\n        return;\r\n      }\r\n      break;\r\n    case 3: // ENDTAG\r\n      switch(value) {\r\n      case \"html\":\r\n      case \"head\":\r\n      case \"body\":\r\n      case \"br\":\r\n        break;  // fall through on these\r\n      default:\r\n        return; // ignore most end tags\r\n      }\r\n    }\r\n\r\n    // Anything that didn't get handled above is handled like this:\r\n    elt = createHTMLElt(doc, \"html\", null);\r\n    stack.push(elt);\r\n    doc.appendChild(elt);\r\n    // XXX: handle application cache here\r\n    parser = before_head_mode;\r\n    parser(t,value,arg3,arg4);\r\n  }\r\n\r\n  // 11.2.5.4.3 The \"before head\" insertion mode\r\n  function before_head_mode(t,value,arg3,arg4) {\r\n    switch(t) {\r\n    case 1: // TEXT\r\n      value = value.replace(LEADINGWS, \"\");  // Ignore spaces\r\n      if (value.length === 0) return; // Are we done?\r\n      break;  // Handle anything non-space text below\r\n    case 5: // DOCTYPE\r\n      /* ignore the token */\r\n      return;\r\n    case 4: // COMMENT\r\n      insertComment(value);\r\n      return;\r\n    case 2: // TAG\r\n      switch(value) {\r\n      case \"html\":\r\n        in_body_mode(t,value,arg3,arg4);\r\n        return;\r\n      case \"head\":\r\n        var elt = insertHTMLElement(value, arg3);\r\n        head_element_pointer = elt;\r\n        parser = in_head_mode;\r\n        return;\r\n      }\r\n      break;\r\n    case 3: // ENDTAG\r\n      switch(value) {\r\n      case \"html\":\r\n      case \"head\":\r\n      case \"body\":\r\n      case \"br\":\r\n        break;\r\n      default:\r\n        return; // ignore most end tags\r\n      }\r\n    }\r\n\r\n    // If not handled explicitly above\r\n    before_head_mode(TAG, \"head\", null); // create a head tag\r\n    parser(t, value, arg3, arg4); // then try again with this token\r\n  }\r\n\r\n  function in_head_mode(t, value, arg3, arg4) {\r\n    switch(t) {\r\n    case 1: // TEXT\r\n      var ws = value.match(LEADINGWS);\r\n      if (ws) {\r\n        insertText(ws[0]);\r\n        value = value.substring(ws[0].length);\r\n      }\r\n      if (value.length === 0) return;\r\n      break; // Handle non-whitespace below\r\n    case 4: // COMMENT\r\n      insertComment(value);\r\n      return;\r\n    case 5: // DOCTYPE\r\n      return;\r\n    case 2: // TAG\r\n      switch(value) {\r\n      case \"html\":\r\n        in_body_mode(t, value, arg3, arg4);\r\n        return;\r\n      case \"meta\":\r\n        // XXX:\r\n        // May need to change the encoding based on this tag\r\n        /* falls through */\r\n      case \"base\":\r\n      case \"basefont\":\r\n      case \"bgsound\":\r\n      case \"link\":\r\n        insertHTMLElement(value, arg3);\r\n        stack.pop();\r\n        return;\r\n      case \"title\":\r\n        parseRCDATA(value, arg3);\r\n        return;\r\n      case \"noscript\":\r\n        if (!scripting_enabled) {\r\n          insertHTMLElement(value, arg3);\r\n          parser = in_head_noscript_mode;\r\n          return;\r\n        }\r\n        // Otherwise, if scripting is enabled...\r\n        /* falls through */\r\n      case \"noframes\":\r\n      case \"style\":\r\n        parseRawText(value,arg3);\r\n        return;\r\n      case \"script\":\r\n        insertElement(function(doc) {\r\n          var elt = createHTMLElt(doc, value, arg3);\r\n          elt._parser_inserted = true;\r\n          elt._force_async = false;\r\n          if (fragment) elt._already_started = true;\r\n          flushText();\r\n          return elt;\r\n        });\r\n        tokenizer = script_data_state;\r\n        originalInsertionMode = parser;\r\n        parser = text_mode;\r\n        return;\r\n      case \"template\":\r\n        insertHTMLElement(value, arg3);\r\n        afe.insertMarker();\r\n        frameset_ok = false;\r\n        parser = in_template_mode;\r\n        templateInsertionModes.push(parser);\r\n        return;\r\n      case \"head\":\r\n        return; // ignore it\r\n      }\r\n      break;\r\n    case 3: // ENDTAG\r\n      switch(value) {\r\n      case \"head\":\r\n        stack.pop();\r\n        parser = after_head_mode;\r\n        return;\r\n      case \"body\":\r\n      case \"html\":\r\n      case \"br\":\r\n        break; // handle these at the bottom of the function\r\n      case \"template\":\r\n        if (!stack.contains(\"template\")) {\r\n          return;\r\n        }\r\n        stack.generateImpliedEndTags(null, \"thorough\");\r\n        stack.popTag(\"template\");\r\n        afe.clearToMarker();\r\n        templateInsertionModes.pop();\r\n        resetInsertionMode();\r\n        return;\r\n      default:\r\n        // ignore any other end tag\r\n        return;\r\n      }\r\n      break;\r\n    }\r\n\r\n    // If not handled above\r\n    in_head_mode(ENDTAG, \"head\", null);   // synthetic </head>\r\n    parser(t, value, arg3, arg4);   // Then redo this one\r\n  }\r\n\r\n  // 13.2.5.4.5 The \"in head noscript\" insertion mode\r\n  function in_head_noscript_mode(t, value, arg3, arg4) {\r\n    switch(t) {\r\n    case 5: // DOCTYPE\r\n      return;\r\n    case 4: // COMMENT\r\n      in_head_mode(t, value);\r\n      return;\r\n    case 1: // TEXT\r\n      var ws = value.match(LEADINGWS);\r\n      if (ws) {\r\n        in_head_mode(t, ws[0]);\r\n        value = value.substring(ws[0].length);\r\n      }\r\n      if (value.length === 0) return; // no more text\r\n      break; // Handle non-whitespace below\r\n    case 2: // TAG\r\n      switch(value) {\r\n      case \"html\":\r\n        in_body_mode(t, value, arg3, arg4);\r\n        return;\r\n      case \"basefont\":\r\n      case \"bgsound\":\r\n      case \"link\":\r\n      case \"meta\":\r\n      case \"noframes\":\r\n      case \"style\":\r\n        in_head_mode(t, value, arg3);\r\n        return;\r\n      case \"head\":\r\n      case \"noscript\":\r\n        return;\r\n      }\r\n      break;\r\n    case 3: // ENDTAG\r\n      switch(value) {\r\n      case \"noscript\":\r\n        stack.pop();\r\n        parser = in_head_mode;\r\n        return;\r\n      case \"br\":\r\n        break;  // goes to the outer default\r\n      default:\r\n        return; // ignore other end tags\r\n      }\r\n      break;\r\n    }\r\n\r\n    // If not handled above\r\n    in_head_noscript_mode(ENDTAG, \"noscript\", null);\r\n    parser(t, value, arg3, arg4);\r\n  }\r\n\r\n  function after_head_mode(t, value, arg3, arg4) {\r\n    switch(t) {\r\n    case 1: // TEXT\r\n      var ws = value.match(LEADINGWS);\r\n      if (ws) {\r\n        insertText(ws[0]);\r\n        value = value.substring(ws[0].length);\r\n      }\r\n      if (value.length === 0) return;\r\n      break; // Handle non-whitespace below\r\n    case 4: // COMMENT\r\n      insertComment(value);\r\n      return;\r\n    case 5: // DOCTYPE\r\n      return;\r\n    case 2: // TAG\r\n      switch(value) {\r\n      case \"html\":\r\n        in_body_mode(t, value, arg3, arg4);\r\n        return;\r\n      case \"body\":\r\n        insertHTMLElement(value, arg3);\r\n        frameset_ok = false;\r\n        parser = in_body_mode;\r\n        return;\r\n      case \"frameset\":\r\n        insertHTMLElement(value, arg3);\r\n        parser = in_frameset_mode;\r\n        return;\r\n      case \"base\":\r\n      case \"basefont\":\r\n      case \"bgsound\":\r\n      case \"link\":\r\n      case \"meta\":\r\n      case \"noframes\":\r\n      case \"script\":\r\n      case \"style\":\r\n      case \"template\":\r\n      case \"title\":\r\n        stack.push(head_element_pointer);\r\n        in_head_mode(TAG, value, arg3);\r\n        stack.removeElement(head_element_pointer);\r\n        return;\r\n      case \"head\":\r\n        return;\r\n      }\r\n      break;\r\n    case 3: // ENDTAG\r\n      switch(value) {\r\n      case \"template\":\r\n        return in_head_mode(t, value, arg3, arg4);\r\n      case \"body\":\r\n      case \"html\":\r\n      case \"br\":\r\n        break;\r\n      default:\r\n        return;  // ignore any other end tag\r\n      }\r\n      break;\r\n    }\r\n\r\n    after_head_mode(TAG, \"body\", null);\r\n    frameset_ok = true;\r\n    parser(t, value, arg3, arg4);\r\n  }\r\n\r\n  // 13.2.5.4.7 The \"in body\" insertion mode\r\n  function in_body_mode(t,value,arg3,arg4) {\r\n    var body, i, node, elt;\r\n    switch(t) {\r\n    case 1: // TEXT\r\n      if (textIncludesNUL) {\r\n        value = value.replace(NULCHARS, \"\");\r\n        if (value.length === 0) return;\r\n      }\r\n      // If any non-space characters\r\n      if (frameset_ok && NONWS.test(value))\r\n        frameset_ok = false;\r\n      afereconstruct();\r\n      insertText(value);\r\n      return;\r\n    case 5: // DOCTYPE\r\n      return;\r\n    case 4: // COMMENT\r\n      insertComment(value);\r\n      return;\r\n    case -1: // EOF\r\n      if (templateInsertionModes.length) {\r\n        return in_template_mode(t);\r\n      }\r\n      stopParsing();\r\n      return;\r\n    case 2: // TAG\r\n      switch(value) {\r\n      case \"html\":\r\n        if (stack.contains(\"template\")) {\r\n          return;\r\n        }\r\n        transferAttributes(arg3, stack.elements[0]);\r\n        return;\r\n      case \"base\":\r\n      case \"basefont\":\r\n      case \"bgsound\":\r\n      case \"link\":\r\n      case \"meta\":\r\n      case \"noframes\":\r\n      case \"script\":\r\n      case \"style\":\r\n      case \"template\":\r\n      case \"title\":\r\n        in_head_mode(TAG, value, arg3);\r\n        return;\r\n      case \"body\":\r\n        body = stack.elements[1];\r\n        if (!body || !(body instanceof impl.HTMLBodyElement) ||\r\n            stack.contains(\"template\"))\r\n          return;\r\n        frameset_ok = false;\r\n        transferAttributes(arg3, body);\r\n        return;\r\n      case \"frameset\":\r\n        if (!frameset_ok) return;\r\n        body = stack.elements[1];\r\n        if (!body || !(body instanceof impl.HTMLBodyElement))\r\n          return;\r\n        if (body.parentNode) body.parentNode.removeChild(body);\r\n        while(!(stack.top instanceof impl.HTMLHtmlElement))\r\n          stack.pop();\r\n        insertHTMLElement(value, arg3);\r\n        parser = in_frameset_mode;\r\n        return;\r\n\r\n      case \"address\":\r\n      case \"article\":\r\n      case \"aside\":\r\n      case \"blockquote\":\r\n      case \"center\":\r\n      case \"details\":\r\n      case \"dialog\":\r\n      case \"dir\":\r\n      case \"div\":\r\n      case \"dl\":\r\n      case \"fieldset\":\r\n      case \"figcaption\":\r\n      case \"figure\":\r\n      case \"footer\":\r\n      case \"header\":\r\n      case \"hgroup\":\r\n      case \"main\":\r\n      case \"nav\":\r\n      case \"ol\":\r\n      case \"p\":\r\n      case \"section\":\r\n      case \"summary\":\r\n      case \"ul\":\r\n        if (stack.inButtonScope(\"p\")) in_body_mode(ENDTAG, \"p\");\r\n        insertHTMLElement(value, arg3);\r\n        return;\r\n\r\n      case \"menu\":\r\n        if (stack.inButtonScope(\"p\")) in_body_mode(ENDTAG, \"p\");\r\n        if (isA(stack.top, 'menuitem')) {\r\n          stack.pop();\r\n        }\r\n        insertHTMLElement(value, arg3);\r\n        return;\r\n\r\n      case \"h1\":\r\n      case \"h2\":\r\n      case \"h3\":\r\n      case \"h4\":\r\n      case \"h5\":\r\n      case \"h6\":\r\n        if (stack.inButtonScope(\"p\")) in_body_mode(ENDTAG, \"p\");\r\n        if (stack.top instanceof impl.HTMLHeadingElement)\r\n          stack.pop();\r\n        insertHTMLElement(value, arg3);\r\n        return;\r\n\r\n      case \"pre\":\r\n      case \"listing\":\r\n        if (stack.inButtonScope(\"p\")) in_body_mode(ENDTAG, \"p\");\r\n        insertHTMLElement(value, arg3);\r\n        ignore_linefeed = true;\r\n        frameset_ok = false;\r\n        return;\r\n\r\n      case \"form\":\r\n        if (form_element_pointer && !stack.contains(\"template\")) return;\r\n        if (stack.inButtonScope(\"p\")) in_body_mode(ENDTAG, \"p\");\r\n        elt = insertHTMLElement(value, arg3);\r\n        if (!stack.contains(\"template\"))\r\n          form_element_pointer = elt;\r\n        return;\r\n\r\n      case \"li\":\r\n        frameset_ok = false;\r\n        for(i = stack.elements.length-1; i >= 0; i--) {\r\n          node = stack.elements[i];\r\n          if (node instanceof impl.HTMLLIElement) {\r\n            in_body_mode(ENDTAG, \"li\");\r\n            break;\r\n          }\r\n          if (isA(node, specialSet) && !isA(node, addressdivpSet))\r\n            break;\r\n        }\r\n        if (stack.inButtonScope(\"p\")) in_body_mode(ENDTAG, \"p\");\r\n        insertHTMLElement(value, arg3);\r\n        return;\r\n\r\n      case \"dd\":\r\n      case \"dt\":\r\n        frameset_ok = false;\r\n        for(i = stack.elements.length-1; i >= 0; i--) {\r\n          node = stack.elements[i];\r\n          if (isA(node, dddtSet)) {\r\n            in_body_mode(ENDTAG, node.localName);\r\n            break;\r\n          }\r\n          if (isA(node, specialSet) && !isA(node, addressdivpSet))\r\n            break;\r\n        }\r\n        if (stack.inButtonScope(\"p\")) in_body_mode(ENDTAG, \"p\");\r\n        insertHTMLElement(value, arg3);\r\n        return;\r\n\r\n      case \"plaintext\":\r\n        if (stack.inButtonScope(\"p\")) in_body_mode(ENDTAG, \"p\");\r\n        insertHTMLElement(value, arg3);\r\n        tokenizer = plaintext_state;\r\n        return;\r\n\r\n      case \"button\":\r\n        if (stack.inScope(\"button\")) {\r\n          in_body_mode(ENDTAG, \"button\");\r\n          parser(t, value, arg3, arg4);\r\n        }\r\n        else {\r\n          afereconstruct();\r\n          insertHTMLElement(value, arg3);\r\n          frameset_ok = false;\r\n        }\r\n        return;\r\n\r\n      case \"a\":\r\n        var activeElement = afe.findElementByTag(\"a\");\r\n        if (activeElement) {\r\n          in_body_mode(ENDTAG, value);\r\n          afe.remove(activeElement);\r\n          stack.removeElement(activeElement);\r\n        }\r\n        /* falls through */\r\n      case \"b\":\r\n      case \"big\":\r\n      case \"code\":\r\n      case \"em\":\r\n      case \"font\":\r\n      case \"i\":\r\n      case \"s\":\r\n      case \"small\":\r\n      case \"strike\":\r\n      case \"strong\":\r\n      case \"tt\":\r\n      case \"u\":\r\n        afereconstruct();\r\n        afe.push(insertHTMLElement(value,arg3), arg3);\r\n        return;\r\n\r\n      case \"nobr\":\r\n        afereconstruct();\r\n\r\n        if (stack.inScope(value)) {\r\n          in_body_mode(ENDTAG, value);\r\n          afereconstruct();\r\n        }\r\n        afe.push(insertHTMLElement(value,arg3), arg3);\r\n        return;\r\n\r\n      case \"applet\":\r\n      case \"marquee\":\r\n      case \"object\":\r\n        afereconstruct();\r\n        insertHTMLElement(value,arg3);\r\n        afe.insertMarker();\r\n        frameset_ok = false;\r\n        return;\r\n\r\n      case \"table\":\r\n        if (!doc._quirks && stack.inButtonScope(\"p\")) {\r\n          in_body_mode(ENDTAG, \"p\");\r\n        }\r\n        insertHTMLElement(value,arg3);\r\n        frameset_ok = false;\r\n        parser = in_table_mode;\r\n        return;\r\n\r\n      case \"area\":\r\n      case \"br\":\r\n      case \"embed\":\r\n      case \"img\":\r\n      case \"keygen\":\r\n      case \"wbr\":\r\n        afereconstruct();\r\n        insertHTMLElement(value,arg3);\r\n        stack.pop();\r\n        frameset_ok = false;\r\n        return;\r\n\r\n      case \"input\":\r\n        afereconstruct();\r\n        elt = insertHTMLElement(value,arg3);\r\n        stack.pop();\r\n        var type = elt.getAttribute(\"type\");\r\n        if (!type || type.toLowerCase() !== \"hidden\")\r\n          frameset_ok = false;\r\n        return;\r\n\r\n      case \"param\":\r\n      case \"source\":\r\n      case \"track\":\r\n        insertHTMLElement(value,arg3);\r\n        stack.pop();\r\n        return;\r\n\r\n      case \"hr\":\r\n        if (stack.inButtonScope(\"p\")) in_body_mode(ENDTAG, \"p\");\r\n        if (isA(stack.top, 'menuitem')) {\r\n          stack.pop();\r\n        }\r\n        insertHTMLElement(value,arg3);\r\n        stack.pop();\r\n        frameset_ok = false;\r\n        return;\r\n\r\n      case \"image\":\r\n        in_body_mode(TAG, \"img\", arg3, arg4);\r\n        return;\r\n\r\n      case \"textarea\":\r\n        insertHTMLElement(value,arg3);\r\n        ignore_linefeed = true;\r\n        frameset_ok = false;\r\n        tokenizer = rcdata_state;\r\n        originalInsertionMode = parser;\r\n        parser = text_mode;\r\n        return;\r\n\r\n      case \"xmp\":\r\n        if (stack.inButtonScope(\"p\")) in_body_mode(ENDTAG, \"p\");\r\n        afereconstruct();\r\n        frameset_ok = false;\r\n        parseRawText(value, arg3);\r\n        return;\r\n\r\n      case \"iframe\":\r\n        frameset_ok = false;\r\n        parseRawText(value, arg3);\r\n        return;\r\n\r\n      case \"noembed\":\r\n        parseRawText(value,arg3);\r\n        return;\r\n\r\n      case \"select\":\r\n        afereconstruct();\r\n        insertHTMLElement(value,arg3);\r\n        frameset_ok = false;\r\n        if (parser === in_table_mode ||\r\n          parser === in_caption_mode ||\r\n          parser === in_table_body_mode ||\r\n          parser === in_row_mode ||\r\n          parser === in_cell_mode)\r\n          parser = in_select_in_table_mode;\r\n        else\r\n          parser = in_select_mode;\r\n        return;\r\n\r\n      case \"optgroup\":\r\n      case \"option\":\r\n        if (stack.top instanceof impl.HTMLOptionElement) {\r\n          in_body_mode(ENDTAG, \"option\");\r\n        }\r\n        afereconstruct();\r\n        insertHTMLElement(value,arg3);\r\n        return;\r\n\r\n      case \"menuitem\":\r\n        if (isA(stack.top, 'menuitem')) {\r\n          stack.pop();\r\n        }\r\n        afereconstruct();\r\n        insertHTMLElement(value, arg3);\r\n        return;\r\n\r\n      case \"rb\":\r\n      case \"rtc\":\r\n        if (stack.inScope(\"ruby\")) {\r\n          stack.generateImpliedEndTags();\r\n        }\r\n        insertHTMLElement(value,arg3);\r\n        return;\r\n\r\n      case \"rp\":\r\n      case \"rt\":\r\n        if (stack.inScope(\"ruby\")) {\r\n          stack.generateImpliedEndTags(\"rtc\");\r\n        }\r\n        insertHTMLElement(value,arg3);\r\n        return;\r\n\r\n      case \"math\":\r\n        afereconstruct();\r\n        adjustMathMLAttributes(arg3);\r\n        adjustForeignAttributes(arg3);\r\n        insertForeignElement(value, arg3, NAMESPACE.MATHML);\r\n        if (arg4) // self-closing flag\r\n          stack.pop();\r\n        return;\r\n\r\n      case \"svg\":\r\n        afereconstruct();\r\n        adjustSVGAttributes(arg3);\r\n        adjustForeignAttributes(arg3);\r\n        insertForeignElement(value, arg3, NAMESPACE.SVG);\r\n        if (arg4) // self-closing flag\r\n          stack.pop();\r\n        return;\r\n\r\n      case \"caption\":\r\n      case \"col\":\r\n      case \"colgroup\":\r\n      case \"frame\":\r\n      case \"head\":\r\n      case \"tbody\":\r\n      case \"td\":\r\n      case \"tfoot\":\r\n      case \"th\":\r\n      case \"thead\":\r\n      case \"tr\":\r\n        // Ignore table tags if we're not in_table mode\r\n        return;\r\n      }\r\n\r\n      // Handle any other start tag here\r\n      // (and also noscript tags when scripting is disabled)\r\n      afereconstruct();\r\n      insertHTMLElement(value,arg3);\r\n      return;\r\n\r\n    case 3: // ENDTAG\r\n      switch(value) {\r\n      case \"template\":\r\n        in_head_mode(ENDTAG, value, arg3);\r\n        return;\r\n      case \"body\":\r\n        if (!stack.inScope(\"body\")) return;\r\n        parser = after_body_mode;\r\n        return;\r\n      case \"html\":\r\n        if (!stack.inScope(\"body\")) return;\r\n        parser = after_body_mode;\r\n        parser(t, value, arg3);\r\n        return;\r\n\r\n      case \"address\":\r\n      case \"article\":\r\n      case \"aside\":\r\n      case \"blockquote\":\r\n      case \"button\":\r\n      case \"center\":\r\n      case \"details\":\r\n      case \"dialog\":\r\n      case \"dir\":\r\n      case \"div\":\r\n      case \"dl\":\r\n      case \"fieldset\":\r\n      case \"figcaption\":\r\n      case \"figure\":\r\n      case \"footer\":\r\n      case \"header\":\r\n      case \"hgroup\":\r\n      case \"listing\":\r\n      case \"main\":\r\n      case \"menu\":\r\n      case \"nav\":\r\n      case \"ol\":\r\n      case \"pre\":\r\n      case \"section\":\r\n      case \"summary\":\r\n      case \"ul\":\r\n        // Ignore if there is not a matching open tag\r\n        if (!stack.inScope(value)) return;\r\n        stack.generateImpliedEndTags();\r\n        stack.popTag(value);\r\n        return;\r\n\r\n      case \"form\":\r\n        if (!stack.contains(\"template\")) {\r\n          var openform = form_element_pointer;\r\n          form_element_pointer = null;\r\n          if (!openform || !stack.elementInScope(openform)) return;\r\n          stack.generateImpliedEndTags();\r\n          stack.removeElement(openform);\r\n        } else {\r\n          if (!stack.inScope(\"form\")) return;\r\n          stack.generateImpliedEndTags();\r\n          stack.popTag(\"form\");\r\n        }\r\n        return;\r\n\r\n      case \"p\":\r\n        if (!stack.inButtonScope(value)) {\r\n          in_body_mode(TAG, value, null);\r\n          parser(t, value, arg3, arg4);\r\n        }\r\n        else {\r\n          stack.generateImpliedEndTags(value);\r\n          stack.popTag(value);\r\n        }\r\n        return;\r\n\r\n      case \"li\":\r\n        if (!stack.inListItemScope(value)) return;\r\n        stack.generateImpliedEndTags(value);\r\n        stack.popTag(value);\r\n        return;\r\n\r\n      case \"dd\":\r\n      case \"dt\":\r\n        if (!stack.inScope(value)) return;\r\n        stack.generateImpliedEndTags(value);\r\n        stack.popTag(value);\r\n        return;\r\n\r\n      case \"h1\":\r\n      case \"h2\":\r\n      case \"h3\":\r\n      case \"h4\":\r\n      case \"h5\":\r\n      case \"h6\":\r\n        if (!stack.elementTypeInScope(impl.HTMLHeadingElement)) return;\r\n        stack.generateImpliedEndTags();\r\n        stack.popElementType(impl.HTMLHeadingElement);\r\n        return;\r\n\r\n      case \"sarcasm\":\r\n        // Take a deep breath, and then:\r\n        break;\r\n\r\n      case \"a\":\r\n      case \"b\":\r\n      case \"big\":\r\n      case \"code\":\r\n      case \"em\":\r\n      case \"font\":\r\n      case \"i\":\r\n      case \"nobr\":\r\n      case \"s\":\r\n      case \"small\":\r\n      case \"strike\":\r\n      case \"strong\":\r\n      case \"tt\":\r\n      case \"u\":\r\n        var result = adoptionAgency(value);\r\n        if (result) return;  // If we did something we're done\r\n        break;         // Go to the \"any other end tag\" case\r\n\r\n      case \"applet\":\r\n      case \"marquee\":\r\n      case \"object\":\r\n        if (!stack.inScope(value)) return;\r\n        stack.generateImpliedEndTags();\r\n        stack.popTag(value);\r\n        afe.clearToMarker();\r\n        return;\r\n\r\n      case \"br\":\r\n        in_body_mode(TAG, value, null);  // Turn </br> into <br>\r\n        return;\r\n      }\r\n\r\n      // Any other end tag goes here\r\n      for(i = stack.elements.length-1; i >= 0; i--) {\r\n        node = stack.elements[i];\r\n        if (isA(node, value)) {\r\n          stack.generateImpliedEndTags(value);\r\n          stack.popElement(node);\r\n          break;\r\n        }\r\n        else if (isA(node, specialSet)) {\r\n          return;\r\n        }\r\n      }\r\n\r\n      return;\r\n    }\r\n  }\r\n\r\n  function text_mode(t, value, arg3, arg4) {\r\n    switch(t) {\r\n    case 1: // TEXT\r\n      insertText(value);\r\n      return;\r\n    case -1: // EOF\r\n      if (stack.top instanceof impl.HTMLScriptElement)\r\n        stack.top._already_started = true;\r\n      stack.pop();\r\n      parser = originalInsertionMode;\r\n      parser(t);\r\n      return;\r\n    case 3: // ENDTAG\r\n      if (value === \"script\") {\r\n        handleScriptEnd();\r\n      }\r\n      else {\r\n        stack.pop();\r\n        parser = originalInsertionMode;\r\n      }\r\n      return;\r\n    default:\r\n      // We should never get any other token types\r\n      return;\r\n    }\r\n  }\r\n\r\n  function in_table_mode(t, value, arg3, arg4) {\r\n    function getTypeAttr(attrs) {\r\n      for(var i = 0, n = attrs.length; i < n; i++) {\r\n        if (attrs[i][0] === \"type\")\r\n          return attrs[i][1].toLowerCase();\r\n      }\r\n      return null;\r\n    }\r\n\r\n    switch(t) {\r\n    case 1: // TEXT\r\n      // XXX the text_integration_mode stuff is\r\n      // just a hack I made up\r\n      if (text_integration_mode) {\r\n        in_body_mode(t, value, arg3, arg4);\r\n        return;\r\n      }\r\n      else if (isA(stack.top, tablesectionrowSet)) {\r\n        pending_table_text = [];\r\n        originalInsertionMode = parser;\r\n        parser = in_table_text_mode;\r\n        parser(t, value, arg3, arg4);\r\n        return;\r\n      }\r\n      break;\r\n    case 4: // COMMENT\r\n      insertComment(value);\r\n      return;\r\n    case 5: // DOCTYPE\r\n      return;\r\n    case 2: // TAG\r\n      switch(value) {\r\n      case \"caption\":\r\n        stack.clearToContext(tableContextSet);\r\n        afe.insertMarker();\r\n        insertHTMLElement(value,arg3);\r\n        parser = in_caption_mode;\r\n        return;\r\n      case \"colgroup\":\r\n        stack.clearToContext(tableContextSet);\r\n        insertHTMLElement(value,arg3);\r\n        parser = in_column_group_mode;\r\n        return;\r\n      case \"col\":\r\n        in_table_mode(TAG, \"colgroup\", null);\r\n        parser(t, value, arg3, arg4);\r\n        return;\r\n      case \"tbody\":\r\n      case \"tfoot\":\r\n      case \"thead\":\r\n        stack.clearToContext(tableContextSet);\r\n        insertHTMLElement(value,arg3);\r\n        parser = in_table_body_mode;\r\n        return;\r\n      case \"td\":\r\n      case \"th\":\r\n      case \"tr\":\r\n        in_table_mode(TAG, \"tbody\", null);\r\n        parser(t, value, arg3, arg4);\r\n        return;\r\n\r\n      case \"table\":\r\n        if (!stack.inTableScope(value)) {\r\n          return; // Ignore the token\r\n        }\r\n        in_table_mode(ENDTAG, value);\r\n        parser(t, value, arg3, arg4);\r\n        return;\r\n\r\n      case \"style\":\r\n      case \"script\":\r\n      case \"template\":\r\n        in_head_mode(t, value, arg3, arg4);\r\n        return;\r\n\r\n      case \"input\":\r\n        var type = getTypeAttr(arg3);\r\n        if (type !== \"hidden\") break;  // to the anything else case\r\n        insertHTMLElement(value,arg3);\r\n        stack.pop();\r\n        return;\r\n\r\n      case \"form\":\r\n        if (form_element_pointer || stack.contains(\"template\")) return;\r\n        form_element_pointer = insertHTMLElement(value, arg3);\r\n        stack.popElement(form_element_pointer);\r\n        return;\r\n      }\r\n      break;\r\n    case 3: // ENDTAG\r\n      switch(value) {\r\n      case \"table\":\r\n        if (!stack.inTableScope(value)) return;\r\n        stack.popTag(value);\r\n        resetInsertionMode();\r\n        return;\r\n      case \"body\":\r\n      case \"caption\":\r\n      case \"col\":\r\n      case \"colgroup\":\r\n      case \"html\":\r\n      case \"tbody\":\r\n      case \"td\":\r\n      case \"tfoot\":\r\n      case \"th\":\r\n      case \"thead\":\r\n      case \"tr\":\r\n        return;\r\n      case \"template\":\r\n        in_head_mode(t, value, arg3, arg4);\r\n        return;\r\n      }\r\n\r\n      break;\r\n    case -1: // EOF\r\n      in_body_mode(t, value, arg3, arg4);\r\n      return;\r\n    }\r\n\r\n    // This is the anything else case\r\n    foster_parent_mode = true;\r\n    in_body_mode(t, value, arg3, arg4);\r\n    foster_parent_mode = false;\r\n  }\r\n\r\n  function in_table_text_mode(t, value, arg3, arg4) {\r\n    if (t === TEXT) {\r\n      if (textIncludesNUL) {\r\n        value = value.replace(NULCHARS, \"\");\r\n        if (value.length === 0) return;\r\n      }\r\n      pending_table_text.push(value);\r\n    }\r\n    else {\r\n      var s = pending_table_text.join(\"\");\r\n      pending_table_text.length = 0;\r\n      if (NONWS.test(s)) { // If any non-whitespace characters\r\n        // This must be the same code as the \"anything else\"\r\n        // case of the in_table mode above.\r\n        foster_parent_mode = true;\r\n        in_body_mode(TEXT, s);\r\n        foster_parent_mode = false;\r\n      }\r\n      else {\r\n        insertText(s);\r\n      }\r\n      parser = originalInsertionMode;\r\n      parser(t, value, arg3, arg4);\r\n    }\r\n  }\r\n\r\n\r\n  function in_caption_mode(t, value, arg3, arg4) {\r\n    function end_caption() {\r\n      if (!stack.inTableScope(\"caption\")) return false;\r\n      stack.generateImpliedEndTags();\r\n      stack.popTag(\"caption\");\r\n      afe.clearToMarker();\r\n      parser = in_table_mode;\r\n      return true;\r\n    }\r\n\r\n    switch(t) {\r\n    case 2: // TAG\r\n      switch(value) {\r\n      case \"caption\":\r\n      case \"col\":\r\n      case \"colgroup\":\r\n      case \"tbody\":\r\n      case \"td\":\r\n      case \"tfoot\":\r\n      case \"th\":\r\n      case \"thead\":\r\n      case \"tr\":\r\n        if (end_caption()) parser(t, value, arg3, arg4);\r\n        return;\r\n      }\r\n      break;\r\n    case 3: // ENDTAG\r\n      switch(value) {\r\n      case \"caption\":\r\n        end_caption();\r\n        return;\r\n      case \"table\":\r\n        if (end_caption()) parser(t, value, arg3, arg4);\r\n        return;\r\n      case \"body\":\r\n      case \"col\":\r\n      case \"colgroup\":\r\n      case \"html\":\r\n      case \"tbody\":\r\n      case \"td\":\r\n      case \"tfoot\":\r\n      case \"th\":\r\n      case \"thead\":\r\n      case \"tr\":\r\n        return;\r\n      }\r\n      break;\r\n    }\r\n\r\n    // The Anything Else case\r\n    in_body_mode(t, value, arg3, arg4);\r\n  }\r\n\r\n  function in_column_group_mode(t, value, arg3, arg4) {\r\n    switch(t) {\r\n    case 1: // TEXT\r\n      var ws = value.match(LEADINGWS);\r\n      if (ws) {\r\n        insertText(ws[0]);\r\n        value = value.substring(ws[0].length);\r\n      }\r\n      if (value.length === 0) return;\r\n      break; // Handle non-whitespace below\r\n\r\n    case 4: // COMMENT\r\n      insertComment(value);\r\n      return;\r\n    case 5: // DOCTYPE\r\n      return;\r\n    case 2: // TAG\r\n      switch(value) {\r\n      case \"html\":\r\n        in_body_mode(t, value, arg3, arg4);\r\n        return;\r\n      case \"col\":\r\n        insertHTMLElement(value, arg3);\r\n        stack.pop();\r\n        return;\r\n      case \"template\":\r\n        in_head_mode(t, value, arg3, arg4);\r\n        return;\r\n      }\r\n      break;\r\n    case 3: // ENDTAG\r\n      switch(value) {\r\n      case \"colgroup\":\r\n        if (!isA(stack.top, 'colgroup')) {\r\n          return; // Ignore the token.\r\n        }\r\n        stack.pop();\r\n        parser = in_table_mode;\r\n        return;\r\n      case \"col\":\r\n        return;\r\n      case \"template\":\r\n        in_head_mode(t, value, arg3, arg4);\r\n        return;\r\n      }\r\n      break;\r\n    case -1: // EOF\r\n      in_body_mode(t, value, arg3, arg4);\r\n      return;\r\n    }\r\n\r\n    // Anything else\r\n    if (!isA(stack.top, 'colgroup')) {\r\n      return; // Ignore the token.\r\n    }\r\n    in_column_group_mode(ENDTAG, \"colgroup\");\r\n    parser(t, value, arg3, arg4);\r\n  }\r\n\r\n  function in_table_body_mode(t, value, arg3, arg4) {\r\n    function endsect() {\r\n      if (!stack.inTableScope(\"tbody\") &&\r\n        !stack.inTableScope(\"thead\") &&\r\n        !stack.inTableScope(\"tfoot\"))\r\n        return;\r\n      stack.clearToContext(tableBodyContextSet);\r\n      in_table_body_mode(ENDTAG, stack.top.localName, null);\r\n      parser(t, value, arg3, arg4);\r\n    }\r\n\r\n    switch(t) {\r\n    case 2: // TAG\r\n      switch(value) {\r\n      case \"tr\":\r\n        stack.clearToContext(tableBodyContextSet);\r\n        insertHTMLElement(value, arg3);\r\n        parser = in_row_mode;\r\n        return;\r\n      case \"th\":\r\n      case \"td\":\r\n        in_table_body_mode(TAG, \"tr\", null);\r\n        parser(t, value, arg3, arg4);\r\n        return;\r\n      case \"caption\":\r\n      case \"col\":\r\n      case \"colgroup\":\r\n      case \"tbody\":\r\n      case \"tfoot\":\r\n      case \"thead\":\r\n        endsect();\r\n        return;\r\n      }\r\n      break;\r\n    case 3: // ENDTAG\r\n      switch(value) {\r\n      case \"table\":\r\n        endsect();\r\n        return;\r\n      case \"tbody\":\r\n      case \"tfoot\":\r\n      case \"thead\":\r\n        if (stack.inTableScope(value)) {\r\n          stack.clearToContext(tableBodyContextSet);\r\n          stack.pop();\r\n          parser = in_table_mode;\r\n        }\r\n        return;\r\n      case \"body\":\r\n      case \"caption\":\r\n      case \"col\":\r\n      case \"colgroup\":\r\n      case \"html\":\r\n      case \"td\":\r\n      case \"th\":\r\n      case \"tr\":\r\n        return;\r\n      }\r\n      break;\r\n    }\r\n\r\n    // Anything else:\r\n    in_table_mode(t, value, arg3, arg4);\r\n  }\r\n\r\n  function in_row_mode(t, value, arg3, arg4) {\r\n    function endrow() {\r\n      if (!stack.inTableScope(\"tr\")) return false;\r\n      stack.clearToContext(tableRowContextSet);\r\n      stack.pop();\r\n      parser = in_table_body_mode;\r\n      return true;\r\n    }\r\n\r\n    switch(t) {\r\n    case 2: // TAG\r\n      switch(value) {\r\n      case \"th\":\r\n      case \"td\":\r\n        stack.clearToContext(tableRowContextSet);\r\n        insertHTMLElement(value, arg3);\r\n        parser = in_cell_mode;\r\n        afe.insertMarker();\r\n        return;\r\n      case \"caption\":\r\n      case \"col\":\r\n      case \"colgroup\":\r\n      case \"tbody\":\r\n      case \"tfoot\":\r\n      case \"thead\":\r\n      case \"tr\":\r\n        if (endrow()) parser(t, value, arg3, arg4);\r\n        return;\r\n      }\r\n      break;\r\n    case 3: // ENDTAG\r\n      switch(value) {\r\n      case \"tr\":\r\n        endrow();\r\n        return;\r\n      case \"table\":\r\n        if (endrow()) parser(t, value, arg3, arg4);\r\n        return;\r\n      case \"tbody\":\r\n      case \"tfoot\":\r\n      case \"thead\":\r\n        if (stack.inTableScope(value)) {\r\n          if (endrow()) parser(t, value, arg3, arg4);\r\n        }\r\n        return;\r\n      case \"body\":\r\n      case \"caption\":\r\n      case \"col\":\r\n      case \"colgroup\":\r\n      case \"html\":\r\n      case \"td\":\r\n      case \"th\":\r\n        return;\r\n      }\r\n      break;\r\n    }\r\n\r\n    // anything else\r\n    in_table_mode(t, value, arg3, arg4);\r\n  }\r\n\r\n  function in_cell_mode(t, value, arg3, arg4) {\r\n    switch(t) {\r\n    case 2: // TAG\r\n      switch(value) {\r\n      case \"caption\":\r\n      case \"col\":\r\n      case \"colgroup\":\r\n      case \"tbody\":\r\n      case \"td\":\r\n      case \"tfoot\":\r\n      case \"th\":\r\n      case \"thead\":\r\n      case \"tr\":\r\n        if (stack.inTableScope(\"td\")) {\r\n          in_cell_mode(ENDTAG, \"td\");\r\n          parser(t, value, arg3, arg4);\r\n        }\r\n        else if (stack.inTableScope(\"th\")) {\r\n          in_cell_mode(ENDTAG, \"th\");\r\n          parser(t, value, arg3, arg4);\r\n        }\r\n        return;\r\n      }\r\n      break;\r\n    case 3: // ENDTAG\r\n      switch(value) {\r\n      case \"td\":\r\n      case \"th\":\r\n        if (!stack.inTableScope(value)) return;\r\n        stack.generateImpliedEndTags();\r\n        stack.popTag(value);\r\n        afe.clearToMarker();\r\n        parser = in_row_mode;\r\n        return;\r\n\r\n      case \"body\":\r\n      case \"caption\":\r\n      case \"col\":\r\n      case \"colgroup\":\r\n      case \"html\":\r\n        return;\r\n\r\n      case \"table\":\r\n      case \"tbody\":\r\n      case \"tfoot\":\r\n      case \"thead\":\r\n      case \"tr\":\r\n        if (!stack.inTableScope(value)) return;\r\n        in_cell_mode(ENDTAG, stack.inTableScope(\"td\") ? \"td\" : \"th\");\r\n        parser(t, value, arg3, arg4);\r\n        return;\r\n      }\r\n      break;\r\n    }\r\n\r\n    // anything else\r\n    in_body_mode(t, value, arg3, arg4);\r\n  }\r\n\r\n  function in_select_mode(t, value, arg3, arg4) {\r\n    switch(t) {\r\n    case 1: // TEXT\r\n      if (textIncludesNUL) {\r\n        value = value.replace(NULCHARS, \"\");\r\n        if (value.length === 0) return;\r\n      }\r\n      insertText(value);\r\n      return;\r\n    case 4: // COMMENT\r\n      insertComment(value);\r\n      return;\r\n    case 5: // DOCTYPE\r\n      return;\r\n    case -1: // EOF\r\n      in_body_mode(t, value, arg3, arg4);\r\n      return;\r\n    case 2: // TAG\r\n      switch(value) {\r\n      case \"html\":\r\n        in_body_mode(t, value, arg3, arg4);\r\n        return;\r\n      case \"option\":\r\n        if (stack.top instanceof impl.HTMLOptionElement)\r\n          in_select_mode(ENDTAG, value);\r\n        insertHTMLElement(value, arg3);\r\n        return;\r\n      case \"optgroup\":\r\n        if (stack.top instanceof impl.HTMLOptionElement)\r\n          in_select_mode(ENDTAG, \"option\");\r\n        if (stack.top instanceof impl.HTMLOptGroupElement)\r\n          in_select_mode(ENDTAG, value);\r\n        insertHTMLElement(value, arg3);\r\n        return;\r\n      case \"select\":\r\n        in_select_mode(ENDTAG, value); // treat it as a close tag\r\n        return;\r\n\r\n      case \"input\":\r\n      case \"keygen\":\r\n      case \"textarea\":\r\n        if (!stack.inSelectScope(\"select\")) return;\r\n        in_select_mode(ENDTAG, \"select\");\r\n        parser(t, value, arg3, arg4);\r\n        return;\r\n\r\n      case \"script\":\r\n      case \"template\":\r\n        in_head_mode(t, value, arg3, arg4);\r\n        return;\r\n      }\r\n      break;\r\n    case 3: // ENDTAG\r\n      switch(value) {\r\n      case \"optgroup\":\r\n        if (stack.top instanceof impl.HTMLOptionElement &&\r\n          stack.elements[stack.elements.length-2] instanceof\r\n          impl.HTMLOptGroupElement) {\r\n          in_select_mode(ENDTAG, \"option\");\r\n        }\r\n        if (stack.top instanceof impl.HTMLOptGroupElement)\r\n          stack.pop();\r\n\r\n        return;\r\n\r\n      case \"option\":\r\n        if (stack.top instanceof impl.HTMLOptionElement)\r\n          stack.pop();\r\n        return;\r\n\r\n      case \"select\":\r\n        if (!stack.inSelectScope(value)) return;\r\n        stack.popTag(value);\r\n        resetInsertionMode();\r\n        return;\r\n\r\n      case \"template\":\r\n        in_head_mode(t, value, arg3, arg4);\r\n        return;\r\n      }\r\n\r\n      break;\r\n    }\r\n\r\n    // anything else: just ignore the token\r\n  }\r\n\r\n  function in_select_in_table_mode(t, value, arg3, arg4) {\r\n    switch(value) {\r\n    case \"caption\":\r\n    case \"table\":\r\n    case \"tbody\":\r\n    case \"tfoot\":\r\n    case \"thead\":\r\n    case \"tr\":\r\n    case \"td\":\r\n    case \"th\":\r\n      switch(t) {\r\n      case 2: // TAG\r\n        in_select_in_table_mode(ENDTAG, \"select\");\r\n        parser(t, value, arg3, arg4);\r\n        return;\r\n      case 3: // ENDTAG\r\n        if (stack.inTableScope(value)) {\r\n          in_select_in_table_mode(ENDTAG, \"select\");\r\n          parser(t, value, arg3, arg4);\r\n        }\r\n        return;\r\n      }\r\n    }\r\n\r\n    // anything else\r\n    in_select_mode(t, value, arg3, arg4);\r\n  }\r\n\r\n  function in_template_mode(t, value, arg3, arg4) {\r\n    function switchModeAndReprocess(mode) {\r\n      parser = mode;\r\n      templateInsertionModes[templateInsertionModes.length-1] = parser;\r\n      parser(t, value, arg3, arg4);\r\n    }\r\n    switch(t) {\r\n    case 1: // TEXT\r\n    case 4: // COMMENT\r\n    case 5: // DOCTYPE\r\n      in_body_mode(t, value, arg3, arg4);\r\n      return;\r\n    case -1: // EOF\r\n      if (!stack.contains(\"template\")) {\r\n        stopParsing();\r\n      } else {\r\n        stack.popTag(\"template\");\r\n        afe.clearToMarker();\r\n        templateInsertionModes.pop();\r\n        resetInsertionMode();\r\n        parser(t, value, arg3, arg4);\r\n      }\r\n      return;\r\n    case 2: // TAG\r\n      switch(value) {\r\n      case \"base\":\r\n      case \"basefont\":\r\n      case \"bgsound\":\r\n      case \"link\":\r\n      case \"meta\":\r\n      case \"noframes\":\r\n      case \"script\":\r\n      case \"style\":\r\n      case \"template\":\r\n      case \"title\":\r\n        in_head_mode(t, value, arg3, arg4);\r\n        return;\r\n      case \"caption\":\r\n      case \"colgroup\":\r\n      case \"tbody\":\r\n      case \"tfoot\":\r\n      case \"thead\":\r\n        switchModeAndReprocess(in_table_mode);\r\n        return;\r\n      case \"col\":\r\n        switchModeAndReprocess(in_column_group_mode);\r\n        return;\r\n      case \"tr\":\r\n        switchModeAndReprocess(in_table_body_mode);\r\n        return;\r\n      case \"td\":\r\n      case \"th\":\r\n        switchModeAndReprocess(in_row_mode);\r\n        return;\r\n      }\r\n      switchModeAndReprocess(in_body_mode);\r\n      return;\r\n    case 3: // ENDTAG\r\n      switch(value) {\r\n      case \"template\":\r\n        in_head_mode(t, value, arg3, arg4);\r\n        return;\r\n      default:\r\n        return;\r\n      }\r\n    }\r\n  }\r\n\r\n  function after_body_mode(t, value, arg3, arg4) {\r\n    switch(t) {\r\n    case 1: // TEXT\r\n      // If any non-space chars, handle below\r\n      if (NONWS.test(value)) break;\r\n      in_body_mode(t, value);\r\n      return;\r\n    case 4: // COMMENT\r\n      // Append it to the <html> element\r\n      stack.elements[0]._appendChild(doc.createComment(value));\r\n      return;\r\n    case 5: // DOCTYPE\r\n      return;\r\n    case -1: // EOF\r\n      stopParsing();\r\n      return;\r\n    case 2: // TAG\r\n      if (value === \"html\") {\r\n        in_body_mode(t, value, arg3, arg4);\r\n        return;\r\n      }\r\n      break; // for any other tags\r\n    case 3: // ENDTAG\r\n      if (value === \"html\") {\r\n        if (fragment) return;\r\n        parser = after_after_body_mode;\r\n        return;\r\n      }\r\n      break; // for any other tags\r\n    }\r\n\r\n    // anything else\r\n    parser = in_body_mode;\r\n    parser(t, value, arg3, arg4);\r\n  }\r\n\r\n  function in_frameset_mode(t, value, arg3, arg4) {\r\n    switch(t) {\r\n    case 1: // TEXT\r\n      // Ignore any non-space characters\r\n      value = value.replace(ALLNONWS, \"\");\r\n      if (value.length > 0) insertText(value);\r\n      return;\r\n    case 4: // COMMENT\r\n      insertComment(value);\r\n      return;\r\n    case 5: // DOCTYPE\r\n      return;\r\n    case -1: // EOF\r\n      stopParsing();\r\n      return;\r\n    case 2: // TAG\r\n      switch(value) {\r\n      case \"html\":\r\n        in_body_mode(t, value, arg3, arg4);\r\n        return;\r\n      case \"frameset\":\r\n        insertHTMLElement(value, arg3);\r\n        return;\r\n      case \"frame\":\r\n        insertHTMLElement(value, arg3);\r\n        stack.pop();\r\n        return;\r\n      case \"noframes\":\r\n        in_head_mode(t, value, arg3, arg4);\r\n        return;\r\n      }\r\n      break;\r\n    case 3: // ENDTAG\r\n      if (value === \"frameset\") {\r\n        if (fragment && stack.top instanceof impl.HTMLHtmlElement)\r\n          return;\r\n        stack.pop();\r\n        if (!fragment &&\r\n          !(stack.top instanceof impl.HTMLFrameSetElement))\r\n          parser = after_frameset_mode;\r\n        return;\r\n      }\r\n      break;\r\n    }\r\n\r\n    // ignore anything else\r\n  }\r\n\r\n  function after_frameset_mode(t, value, arg3, arg4) {\r\n    switch(t) {\r\n    case 1: // TEXT\r\n      // Ignore any non-space characters\r\n      value = value.replace(ALLNONWS, \"\");\r\n      if (value.length > 0) insertText(value);\r\n      return;\r\n    case 4: // COMMENT\r\n      insertComment(value);\r\n      return;\r\n    case 5: // DOCTYPE\r\n      return;\r\n    case -1: // EOF\r\n      stopParsing();\r\n      return;\r\n    case 2: // TAG\r\n      switch(value) {\r\n      case \"html\":\r\n        in_body_mode(t, value, arg3, arg4);\r\n        return;\r\n      case \"noframes\":\r\n        in_head_mode(t, value, arg3, arg4);\r\n        return;\r\n      }\r\n      break;\r\n    case 3: // ENDTAG\r\n      if (value === \"html\") {\r\n        parser = after_after_frameset_mode;\r\n        return;\r\n      }\r\n      break;\r\n    }\r\n\r\n    // ignore anything else\r\n  }\r\n\r\n  function after_after_body_mode(t, value, arg3, arg4) {\r\n    switch(t) {\r\n    case 1: // TEXT\r\n      // If any non-space chars, handle below\r\n      if (NONWS.test(value)) break;\r\n      in_body_mode(t, value, arg3, arg4);\r\n      return;\r\n    case 4: // COMMENT\r\n      doc._appendChild(doc.createComment(value));\r\n      return;\r\n    case 5: // DOCTYPE\r\n      in_body_mode(t, value, arg3, arg4);\r\n      return;\r\n    case -1: // EOF\r\n      stopParsing();\r\n      return;\r\n    case 2: // TAG\r\n      if (value === \"html\") {\r\n        in_body_mode(t, value, arg3, arg4);\r\n        return;\r\n      }\r\n      break;\r\n    }\r\n\r\n    // anything else\r\n    parser = in_body_mode;\r\n    parser(t, value, arg3, arg4);\r\n  }\r\n\r\n  function after_after_frameset_mode(t, value, arg3, arg4) {\r\n    switch(t) {\r\n    case 1: // TEXT\r\n      // Ignore any non-space characters\r\n      value = value.replace(ALLNONWS, \"\");\r\n      if (value.length > 0)\r\n        in_body_mode(t, value, arg3, arg4);\r\n      return;\r\n    case 4: // COMMENT\r\n      doc._appendChild(doc.createComment(value));\r\n      return;\r\n    case 5: // DOCTYPE\r\n      in_body_mode(t, value, arg3, arg4);\r\n      return;\r\n    case -1: // EOF\r\n      stopParsing();\r\n      return;\r\n    case 2: // TAG\r\n      switch(value) {\r\n      case \"html\":\r\n        in_body_mode(t, value, arg3, arg4);\r\n        return;\r\n      case \"noframes\":\r\n        in_head_mode(t, value, arg3, arg4);\r\n        return;\r\n      }\r\n      break;\r\n    }\r\n\r\n    // ignore anything else\r\n  }\r\n\r\n\r\n  // 13.2.5.5 The rules for parsing tokens in foreign content\r\n  //\r\n  // This is like one of the insertion modes above, but is\r\n  // invoked somewhat differently when the current token is not HTML.\r\n  // See the insertToken() function.\r\n  function insertForeignToken(t, value, arg3, arg4) {\r\n    // A <font> tag is an HTML font tag if it has a color, font, or size\r\n    // attribute.  Otherwise we assume it is foreign content\r\n    function isHTMLFont(attrs) {\r\n      for(var i = 0, n = attrs.length; i < n; i++) {\r\n        switch(attrs[i][0]) {\r\n        case \"color\":\r\n        case \"face\":\r\n        case \"size\":\r\n          return true;\r\n        }\r\n      }\r\n      return false;\r\n    }\r\n\r\n    var current;\r\n\r\n    switch(t) {\r\n    case 1: // TEXT\r\n      // If any non-space, non-nul characters\r\n      if (frameset_ok && NONWSNONNUL.test(value))\r\n        frameset_ok = false;\r\n      if (textIncludesNUL) {\r\n        value = value.replace(NULCHARS, \"\\uFFFD\");\r\n      }\r\n      insertText(value);\r\n      return;\r\n    case 4: // COMMENT\r\n      insertComment(value);\r\n      return;\r\n    case 5: // DOCTYPE\r\n      // ignore it\r\n      return;\r\n    case 2: // TAG\r\n      switch(value) {\r\n      case \"font\":\r\n        if (!isHTMLFont(arg3)) break;\r\n        /* falls through */\r\n      case \"b\":\r\n      case \"big\":\r\n      case \"blockquote\":\r\n      case \"body\":\r\n      case \"br\":\r\n      case \"center\":\r\n      case \"code\":\r\n      case \"dd\":\r\n      case \"div\":\r\n      case \"dl\":\r\n      case \"dt\":\r\n      case \"em\":\r\n      case \"embed\":\r\n      case \"h1\":\r\n      case \"h2\":\r\n      case \"h3\":\r\n      case \"h4\":\r\n      case \"h5\":\r\n      case \"h6\":\r\n      case \"head\":\r\n      case \"hr\":\r\n      case \"i\":\r\n      case \"img\":\r\n      case \"li\":\r\n      case \"listing\":\r\n      case \"menu\":\r\n      case \"meta\":\r\n      case \"nobr\":\r\n      case \"ol\":\r\n      case \"p\":\r\n      case \"pre\":\r\n      case \"ruby\":\r\n      case \"s\":\r\n      case \"small\":\r\n      case \"span\":\r\n      case \"strong\":\r\n      case \"strike\":\r\n      case \"sub\":\r\n      case \"sup\":\r\n      case \"table\":\r\n      case \"tt\":\r\n      case \"u\":\r\n      case \"ul\":\r\n      case \"var\":\r\n        if (fragment) {\r\n          break;\r\n        }\r\n        do {\r\n          stack.pop();\r\n          current = stack.top;\r\n        } while(current.namespaceURI !== NAMESPACE.HTML &&\r\n            !isMathmlTextIntegrationPoint(current) &&\r\n            !isHTMLIntegrationPoint(current));\r\n\r\n        insertToken(t, value, arg3, arg4);  // reprocess\r\n        return;\r\n      }\r\n\r\n      // Any other start tag case goes here\r\n      current = (stack.elements.length===1 && fragment) ? fragmentContext :\r\n        stack.top;\r\n      if (current.namespaceURI === NAMESPACE.MATHML) {\r\n        adjustMathMLAttributes(arg3);\r\n      }\r\n      else if (current.namespaceURI === NAMESPACE.SVG) {\r\n        value = adjustSVGTagName(value);\r\n        adjustSVGAttributes(arg3);\r\n      }\r\n      adjustForeignAttributes(arg3);\r\n\r\n      insertForeignElement(value, arg3, current.namespaceURI);\r\n      if (arg4) { // the self-closing flag\r\n        if (value === 'script' && current.namespaceURI === NAMESPACE.SVG) {\r\n          // XXX deal with SVG scripts here\r\n        }\r\n        stack.pop();\r\n      }\r\n      return;\r\n\r\n    case 3: // ENDTAG\r\n      current = stack.top;\r\n      if (value === \"script\" &&\r\n        current.namespaceURI === NAMESPACE.SVG &&\r\n        current.localName === \"script\") {\r\n\r\n        stack.pop();\r\n\r\n        // XXX\r\n        // Deal with SVG scripts here\r\n      }\r\n      else {\r\n        // The any other end tag case\r\n        var i = stack.elements.length-1;\r\n        var node = stack.elements[i];\r\n        for(;;) {\r\n          if (node.localName.toLowerCase() === value) {\r\n            stack.popElement(node);\r\n            break;\r\n          }\r\n          node = stack.elements[--i];\r\n          // If non-html, keep looping\r\n          if (node.namespaceURI !== NAMESPACE.HTML)\r\n            continue;\r\n          // Otherwise process the end tag as html\r\n          parser(t, value, arg3, arg4);\r\n          break;\r\n        }\r\n      }\r\n      return;\r\n    }\r\n  }\r\n\r\n  /***\r\n   * Finally, this is the end of the HTMLParser() factory function.\r\n   * It returns the htmlparser object with the append() and end() methods.\r\n   */\r\n\r\n  // Sneak another method into the htmlparser object to allow us to run\r\n  // tokenizer tests.  This can be commented out in production code.\r\n  // This is a hook for testing the tokenizer. It has to be here\r\n  // because the tokenizer details are all hidden away within the closure.\r\n  // It should return an array of tokens generated while parsing the\r\n  // input string.\r\n  htmlparser.testTokenizer = function(input, initialState, lastStartTag, charbychar) {\r\n    var tokens = [];\r\n\r\n    switch(initialState) {\r\n    case \"PCDATA state\":\r\n      tokenizer = data_state;\r\n      break;\r\n    case \"RCDATA state\":\r\n      tokenizer = rcdata_state;\r\n      break;\r\n    case \"RAWTEXT state\":\r\n      tokenizer = rawtext_state;\r\n      break;\r\n    case \"PLAINTEXT state\":\r\n      tokenizer = plaintext_state;\r\n      break;\r\n    }\r\n\r\n    if (lastStartTag) {\r\n      lasttagname = lastStartTag;\r\n    }\r\n\r\n    insertToken = function(t, value, arg3, arg4) {\r\n      flushText();\r\n      switch(t) {\r\n      case 1: // TEXT\r\n        if (tokens.length > 0 &&\r\n          tokens[tokens.length-1][0] === \"Character\") {\r\n          tokens[tokens.length-1][1] += value;\r\n        }\r\n        else tokens.push([\"Character\", value]);\r\n        break;\r\n      case 4: // COMMENT\r\n        tokens.push([\"Comment\", value]);\r\n        break;\r\n      case 5: // DOCTYPE\r\n        tokens.push([\"DOCTYPE\", value,\r\n               arg3 === undefined ? null : arg3,\r\n               arg4 === undefined ? null : arg4,\r\n               !force_quirks]);\r\n        break;\r\n      case 2: // TAG\r\n        var attrs = Object.create(null);\r\n        for(var i = 0; i < arg3.length; i++) {\r\n          // XXX: does attribute order matter?\r\n          var a = arg3[i];\r\n          if (a.length === 1) {\r\n            attrs[a[0]] = \"\";\r\n          }\r\n          else {\r\n            attrs[a[0]] = a[1];\r\n          }\r\n        }\r\n        var token = [\"StartTag\", value, attrs];\r\n        if (arg4) token.push(true);\r\n        tokens.push(token);\r\n        break;\r\n      case 3: // ENDTAG\r\n        tokens.push([\"EndTag\", value]);\r\n        break;\r\n      case -1: // EOF\r\n        break;\r\n      }\r\n    };\r\n\r\n    if (!charbychar) {\r\n      this.parse(input, true);\r\n    }\r\n    else {\r\n      for(var i = 0; i < input.length; i++) {\r\n        this.parse(input[i]);\r\n      }\r\n      this.parse(\"\", true);\r\n    }\r\n    return tokens;\r\n  };\r\n\r\n  // Return the parser object from the HTMLParser() factory function\r\n  return htmlparser;\r\n}\r\n", "\"use strict\";\r\nmodule.exports = DOMImplementation;\r\n\r\nvar Document = require('./Document');\r\nvar DocumentType = require('./DocumentType');\r\nvar HTMLParser = require('./HTMLParser');\r\nvar utils = require('./utils');\r\nvar xml = require('./xmlnames');\r\n\r\n// Each document must have its own instance of the domimplementation object\r\nfunction DOMImplementation(contextObject) {\r\n  this.contextObject = contextObject;\r\n}\r\n\r\n\r\n// Feature/version pairs that DOMImplementation.hasFeature() returns\r\n// true for.  It returns false for anything else.\r\nvar supportedFeatures = {\r\n  'xml': { '': true, '1.0': true, '2.0': true },   // DOM Core\r\n  'core': { '': true, '2.0': true },               // DOM Core\r\n  'html': { '': true, '1.0': true, '2.0': true} ,  // HTML\r\n  'xhtml': { '': true, '1.0': true, '2.0': true} , // HTML\r\n};\r\n\r\nDOMImplementation.prototype = {\r\n  hasFeature: function hasFeature(feature, version) {\r\n    var f = supportedFeatures[(feature || '').toLowerCase()];\r\n    return (f && f[version || '']) || false;\r\n  },\r\n\r\n  createDocumentType: function createDocumentType(qualifiedName, publicId, systemId) {\r\n    if (!xml.isValidQName(qualifiedName)) utils.InvalidCharacterError();\r\n\r\n    return new DocumentType(this.contextObject, qualifiedName, publicId, systemId);\r\n  },\r\n\r\n  createDocument: function createDocument(namespace, qualifiedName, doctype) {\r\n    //\r\n    // Note that the current DOMCore spec makes it impossible to\r\n    // create an HTML document with this function, even if the\r\n    // namespace and doctype are propertly set.  See this thread:\r\n    // http://lists.w3.org/Archives/Public/www-dom/2011AprJun/0132.html\r\n    //\r\n    var d = new Document(false, null);\r\n    var e;\r\n\r\n    if (qualifiedName)\r\n      e = d.createElementNS(namespace, qualifiedName);\r\n    else\r\n      e = null;\r\n\r\n    if (doctype) {\r\n      d.appendChild(doctype);\r\n    }\r\n\r\n    if (e) d.appendChild(e);\r\n    if (namespace === utils.NAMESPACE.HTML) {\r\n      d._contentType = 'application/xhtml+xml';\r\n    } else if (namespace === utils.NAMESPACE.SVG) {\r\n      d._contentType = 'image/svg+xml';\r\n    } else {\r\n      d._contentType = 'application/xml';\r\n    }\r\n\r\n    return d;\r\n  },\r\n\r\n  createHTMLDocument: function createHTMLDocument(titleText) {\r\n    var d = new Document(true, null);\r\n    d.appendChild(new DocumentType(d, 'html'));\r\n    var html = d.createElement('html');\r\n    d.appendChild(html);\r\n    var head = d.createElement('head');\r\n    html.appendChild(head);\r\n    if (titleText !== undefined) {\r\n      var title = d.createElement('title');\r\n      head.appendChild(title);\r\n      title.appendChild(d.createTextNode(titleText));\r\n    }\r\n    html.appendChild(d.createElement('body'));\r\n    d.modclock = 1; // Start tracking modifications\r\n    return d;\r\n  },\r\n\r\n  mozSetOutputMutationHandler: function(doc, handler) {\r\n    doc.mutationHandler = handler;\r\n  },\r\n\r\n  mozGetInputMutationHandler: function(doc) {\r\n    utils.nyi();\r\n  },\r\n\r\n  mozHTMLParser: HTMLParser,\r\n};\r\n", "\"use strict\";\r\nvar URL = require('./URL');\r\nvar URLUtils = require('./URLUtils');\r\n\r\nmodule.exports = Location;\r\n\r\nfunction Location(window, href) {\r\n  this._window = window;\r\n  this._href = href;\r\n}\r\n\r\nLocation.prototype = Object.create(URLUtils.prototype, {\r\n  constructor: { value: Location },\r\n\r\n  // Special behavior when href is set\r\n  href: {\r\n    get: function() { return this._href; },\r\n    set: function(v) { this.assign(v); }\r\n  },\r\n\r\n  assign: { value: function(url) {\r\n    // Resolve the new url against the current one\r\n    // XXX:\r\n    // This is not actually correct. It should be resolved against\r\n    // the URL of the document of the script. For now, though, I only\r\n    // support a single window and there is only one base url.\r\n    // So this is good enough for now.\r\n    var current = new URL(this._href);\r\n    var newurl = current.resolve(url);\r\n\r\n    // Save the new url\r\n    this._href = newurl;\r\n\r\n    // Start loading the new document!\r\n    // XXX\r\n    // This is just something hacked together.\r\n    // The real algorithm is: http://www.whatwg.org/specs/web-apps/current-work/multipage/history.html#navigate\r\n  }},\r\n\r\n  replace: { value: function(url) {\r\n    // XXX\r\n    // Since we aren't tracking history yet, replace is the same as assign\r\n    this.assign(url);\r\n  }},\r\n\r\n  reload: { value: function() {\r\n    // XXX:\r\n    // Actually, the spec is a lot more complicated than this\r\n    this.assign(this.href);\r\n  }},\r\n\r\n  toString: { value: function() {\r\n    return this.href;\r\n  }}\r\n\r\n});\r\n", "\"use strict\";\r\n\r\n// https://html.spec.whatwg.org/multipage/webappapis.html#navigatorid\r\nvar NavigatorID = Object.create(null, {\r\n  appCodeName: { value: \"Mozilla\" },\r\n  appName: { value: \"Netscape\" },\r\n  appVersion: { value: \"4.0\" },\r\n  platform: { value: \"\" },\r\n  product: { value: \"Gecko\" },\r\n  productSub: { value: \"20100101\" },\r\n  userAgent: { value: \"\" },\r\n  vendor: { value: \"\" },\r\n  vendorSub: { value: \"\" },\r\n  taintEnabled: { value: function() { return false; } }\r\n});\r\n\r\nmodule.exports = NavigatorID;\r\n", "\"use strict\";\r\n\r\n// https://html.spec.whatwg.org/multipage/webappapis.html#windowtimers\r\nvar WindowTimers = {\r\n  setTimeout: setTimeout,\r\n  clearTimeout: clearTimeout,\r\n  setInterval: setInterval,\r\n  clearInterval: clearInterval\r\n};\r\n\r\nmodule.exports = WindowTimers;\r\n", "\"use strict\";\r\nvar utils = require('./utils');\r\n\r\nexports = module.exports = {\r\n  CSSStyleDeclaration: require('./CSSStyleDeclaration'),\r\n  CharacterData: require('./CharacterData'),\r\n  Comment: require('./Comment'),\r\n  DOMException: require('./DOMException'),\r\n  DOMImplementation: require('./DOMImplementation'),\r\n  DOMTokenList: require('./DOMTokenList'),\r\n  Document: require('./Document'),\r\n  DocumentFragment: require('./DocumentFragment'),\r\n  DocumentType: require('./DocumentType'),\r\n  Element: require('./Element'),\r\n  HTMLParser: require('./HTMLParser'),\r\n  NamedNodeMap: require('./NamedNodeMap'),\r\n  Node: require('./Node'),\r\n  NodeList: require('./NodeList'),\r\n  NodeFilter: require('./NodeFilter'),\r\n  ProcessingInstruction: require('./ProcessingInstruction'),\r\n  Text: require('./Text'),\r\n  Window: require('./Window')\r\n};\r\n\r\nutils.merge(exports, require('./events'));\r\nutils.merge(exports, require('./htmlelts').elements);\r\nutils.merge(exports, require('./svg').elements);\r\n", "\"use strict\";\r\nvar DOMImplementation = require('./DOMImplementation');\r\nvar EventTarget = require('./EventTarget');\r\nvar Location = require('./Location');\r\nvar utils = require('./utils');\r\n\r\nmodule.exports = Window;\r\n\r\nfunction Window(document) {\r\n  this.document = document || new DOMImplementation(null).createHTMLDocument(\"\");\r\n  this.document._scripting_enabled = true;\r\n  this.document.defaultView = this;\r\n  this.location = new Location(this, this.document._address || 'about:blank');\r\n}\r\n\r\nWindow.prototype = Object.create(EventTarget.prototype, {\r\n  console: { value: console },\r\n  history: { value: {\r\n    back: utils.nyi,\r\n    forward: utils.nyi,\r\n    go: utils.nyi\r\n  }},\r\n  navigator: { value: require(\"./NavigatorID\") },\r\n\r\n  // Self-referential properties\r\n  window: { get: function() { return this; }},\r\n  self: { get: function() { return this; }},\r\n  frames: { get: function() { return this; }},\r\n\r\n  // Self-referential properties for a top-level window\r\n  parent: { get: function() { return this; }},\r\n  top: { get: function() { return this; }},\r\n\r\n  // We don't support any other windows for now\r\n  length: { value: 0 },           // no frames\r\n  frameElement: { value: null },  // not part of a frame\r\n  opener: { value: null },        // not opened by another window\r\n\r\n  // The onload event handler.\r\n  // XXX: need to support a bunch of other event types, too,\r\n  // and have them interoperate with document.body.\r\n\r\n  onload: {\r\n    get: function() {\r\n      return this._getEventHandler(\"load\");\r\n    },\r\n    set: function(v) {\r\n      this._setEventHandler(\"load\", v);\r\n    }\r\n  },\r\n\r\n  // XXX This is a completely broken implementation\r\n  getComputedStyle: { value: function getComputedStyle(elt) {\r\n    return elt.style;\r\n  }}\r\n\r\n});\r\n\r\nutils.expose(require('./WindowTimers'), Window);\r\nutils.expose(require('./impl'), Window);\r\n", "\"use strict\";\r\nvar DOMImplementation = require('./DOMImplementation');\r\nvar HTMLParser = require('./HTMLParser');\r\nvar Window = require('./Window');\r\nvar impl = require('./impl');\r\n\r\nexports.createDOMImplementation = function() {\r\n  return new DOMImplementation(null);\r\n};\r\n\r\nexports.createDocument = function(html, force) {\r\n  // Previous API couldn't let you pass '' as a document, and that\r\n  // yields a slightly different document than createHTMLDocument('')\r\n  // does.  The new `force` parameter lets you pass '' if you want to.\r\n  if (html || force) {\r\n    var parser = new HTMLParser();\r\n    parser.parse(html || '', true);\r\n    return parser.document();\r\n  }\r\n  return new DOMImplementation(null).createHTMLDocument(\"\");\r\n};\r\n\r\nexports.createIncrementalHTMLParser = function() {\r\n    var parser = new HTMLParser();\r\n    /** API for incremental parser. */\r\n    return {\r\n        /** Provide an additional chunk of text to be parsed. */\r\n        write: function(s) {\r\n          if (s.length > 0) {\r\n            parser.parse(s, false, function() { return true; });\r\n          }\r\n        },\r\n        /**\r\n         * Signal that we are done providing input text, optionally\r\n         * providing one last chunk as a parameter.\r\n         */\r\n        end: function(s) {\r\n          parser.parse(s || '', true, function() { return true; });\r\n        },\r\n        /**\r\n         * Performs a chunk of parsing work, returning at the end of\r\n         * the next token as soon as shouldPauseFunc() returns true.\r\n         * Returns true iff there is more work to do.\r\n         *\r\n         * For example:\r\n         * ```\r\n         *  var incrParser = domino.createIncrementalHTMLParser();\r\n         *  incrParser.end('...long html document...');\r\n         *  while (true) {\r\n         *    // Pause every 10ms\r\n         *    var start = Date.now();\r\n         *    var pauseIn10 = function() { return (Date.now() - start) >= 10; };\r\n         *    if (!incrParser.process(pauseIn10)) {\r\n         *      break;\r\n         *    }\r\n         *    ...yield to other tasks, do other housekeeping, etc...\r\n         *  }\r\n         * ```\r\n         */\r\n        process: function(shouldPauseFunc) {\r\n          return parser.parse('', false, shouldPauseFunc);\r\n        },\r\n        /**\r\n         * Returns the result of the incremental parse.  Valid after\r\n         * `this.end()` has been called and `this.process()` has returned\r\n         * false.\r\n         */\r\n        document: function() {\r\n          return parser.document();\r\n        },\r\n    };  \r\n};\r\n\r\nexports.createWindow = function(html, address) {\r\n  var document = exports.createDocument(html);\r\n  if (address !== undefined) { document._address = address; }\r\n  return new impl.Window(document);\r\n};\r\n\r\nexports.impl = impl;", "'use strict';\n\nfunction extend (destination) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n    for (var key in source) {\n      if (source.hasOwnProperty(key)) destination[key] = source[key];\n    }\n  }\n  return destination\n}\n\nfunction repeat (character, count) {\n  return Array(count + 1).join(character)\n}\n\nfunction trimLeadingNewlines (string) {\n  return string.replace(/^\\n*/, '')\n}\n\nfunction trimTrailingNewlines (string) {\n  // avoid match-at-end regexp bottleneck, see #370\n  var indexEnd = string.length;\n  while (indexEnd > 0 && string[indexEnd - 1] === '\\n') indexEnd--;\n  return string.substring(0, indexEnd)\n}\n\nvar blockElements = [\n  'ADDRESS', 'ARTICLE', 'ASIDE', 'AUDIO', 'BLOCKQUOTE', 'BODY', 'CANVAS',\n  'CENTER', 'DD', 'DIR', 'DIV', 'DL', 'DT', 'FIELDSET', 'FIGCAPTION', 'FIGURE',\n  'FOOTER', 'FORM', 'FRAMESET', 'H1', 'H2', 'H3', 'H4', 'H5', 'H6', 'HEADER',\n  'HGROUP', 'HR', 'HTML', 'ISINDEX', 'LI', 'MAIN', 'MENU', 'NAV', 'NOFRAMES',\n  'NOSCRIPT', 'OL', 'OUTPUT', 'P', 'PRE', 'SECTION', 'TABLE', 'TBODY', 'TD',\n  'TFOOT', 'TH', 'THEAD', 'TR', 'UL'\n];\n\nfunction isBlock (node) {\n  return is(node, blockElements)\n}\n\nvar voidElements = [\n  'AREA', 'BASE', 'BR', 'COL', 'COMMAND', 'EMBED', 'HR', 'IMG', 'INPUT',\n  'KEYGEN', 'LINK', 'META', 'PARAM', 'SOURCE', 'TRACK', 'WBR'\n];\n\nfunction isVoid (node) {\n  return is(node, voidElements)\n}\n\nfunction hasVoid (node) {\n  return has(node, voidElements)\n}\n\nvar meaningfulWhenBlankElements = [\n  'A', 'TABLE', 'THEAD', 'TBODY', 'TFOOT', 'TH', 'TD', 'IFRAME', 'SCRIPT',\n  'AUDIO', 'VIDEO'\n];\n\nfunction isMeaningfulWhenBlank (node) {\n  return is(node, meaningfulWhenBlankElements)\n}\n\nfunction hasMeaningfulWhenBlank (node) {\n  return has(node, meaningfulWhenBlankElements)\n}\n\nfunction is (node, tagNames) {\n  return tagNames.indexOf(node.nodeName) >= 0\n}\n\nfunction has (node, tagNames) {\n  return (\n    node.getElementsByTagName &&\n    tagNames.some(function (tagName) {\n      return node.getElementsByTagName(tagName).length\n    })\n  )\n}\n\nvar rules = {};\n\nrules.paragraph = {\n  filter: 'p',\n\n  replacement: function (content) {\n    return '\\n\\n' + content + '\\n\\n'\n  }\n};\n\nrules.lineBreak = {\n  filter: 'br',\n\n  replacement: function (content, node, options) {\n    return options.br + '\\n'\n  }\n};\n\nrules.heading = {\n  filter: ['h1', 'h2', 'h3', 'h4', 'h5', 'h6'],\n\n  replacement: function (content, node, options) {\n    var hLevel = Number(node.nodeName.charAt(1));\n\n    if (options.headingStyle === 'setext' && hLevel < 3) {\n      var underline = repeat((hLevel === 1 ? '=' : '-'), content.length);\n      return (\n        '\\n\\n' + content + '\\n' + underline + '\\n\\n'\n      )\n    } else {\n      return '\\n\\n' + repeat('#', hLevel) + ' ' + content + '\\n\\n'\n    }\n  }\n};\n\nrules.blockquote = {\n  filter: 'blockquote',\n\n  replacement: function (content) {\n    content = content.replace(/^\\n+|\\n+$/g, '');\n    content = content.replace(/^/gm, '> ');\n    return '\\n\\n' + content + '\\n\\n'\n  }\n};\n\nrules.list = {\n  filter: ['ul', 'ol'],\n\n  replacement: function (content, node) {\n    var parent = node.parentNode;\n    if (parent.nodeName === 'LI' && parent.lastElementChild === node) {\n      return '\\n' + content\n    } else {\n      return '\\n\\n' + content + '\\n\\n'\n    }\n  }\n};\n\nrules.listItem = {\n  filter: 'li',\n\n  replacement: function (content, node, options) {\n    content = content\n      .replace(/^\\n+/, '') // remove leading newlines\n      .replace(/\\n+$/, '\\n') // replace trailing newlines with just a single one\n      .replace(/\\n/gm, '\\n    '); // indent\n    var prefix = options.bulletListMarker + '   ';\n    var parent = node.parentNode;\n    if (parent.nodeName === 'OL') {\n      var start = parent.getAttribute('start');\n      var index = Array.prototype.indexOf.call(parent.children, node);\n      prefix = (start ? Number(start) + index : index + 1) + '.  ';\n    }\n    return (\n      prefix + content + (node.nextSibling && !/\\n$/.test(content) ? '\\n' : '')\n    )\n  }\n};\n\nrules.indentedCodeBlock = {\n  filter: function (node, options) {\n    return (\n      options.codeBlockStyle === 'indented' &&\n      node.nodeName === 'PRE' &&\n      node.firstChild &&\n      node.firstChild.nodeName === 'CODE'\n    )\n  },\n\n  replacement: function (content, node, options) {\n    return (\n      '\\n\\n    ' +\n      node.firstChild.textContent.replace(/\\n/g, '\\n    ') +\n      '\\n\\n'\n    )\n  }\n};\n\nrules.fencedCodeBlock = {\n  filter: function (node, options) {\n    return (\n      options.codeBlockStyle === 'fenced' &&\n      node.nodeName === 'PRE' &&\n      node.firstChild &&\n      node.firstChild.nodeName === 'CODE'\n    )\n  },\n\n  replacement: function (content, node, options) {\n    var className = node.firstChild.getAttribute('class') || '';\n    var language = (className.match(/language-(\\S+)/) || [null, ''])[1];\n    var code = node.firstChild.textContent;\n\n    var fenceChar = options.fence.charAt(0);\n    var fenceSize = 3;\n    var fenceInCodeRegex = new RegExp('^' + fenceChar + '{3,}', 'gm');\n\n    var match;\n    while ((match = fenceInCodeRegex.exec(code))) {\n      if (match[0].length >= fenceSize) {\n        fenceSize = match[0].length + 1;\n      }\n    }\n\n    var fence = repeat(fenceChar, fenceSize);\n\n    return (\n      '\\n\\n' + fence + language + '\\n' +\n      code.replace(/\\n$/, '') +\n      '\\n' + fence + '\\n\\n'\n    )\n  }\n};\n\nrules.horizontalRule = {\n  filter: 'hr',\n\n  replacement: function (content, node, options) {\n    return '\\n\\n' + options.hr + '\\n\\n'\n  }\n};\n\nrules.inlineLink = {\n  filter: function (node, options) {\n    return (\n      options.linkStyle === 'inlined' &&\n      node.nodeName === 'A' &&\n      node.getAttribute('href')\n    )\n  },\n\n  replacement: function (content, node) {\n    var href = node.getAttribute('href');\n    if (href) href = href.replace(/([()])/g, '\\\\$1');\n    var title = cleanAttribute(node.getAttribute('title'));\n    if (title) title = ' \"' + title.replace(/\"/g, '\\\\\"') + '\"';\n    return '[' + content + '](' + href + title + ')'\n  }\n};\n\nrules.referenceLink = {\n  filter: function (node, options) {\n    return (\n      options.linkStyle === 'referenced' &&\n      node.nodeName === 'A' &&\n      node.getAttribute('href')\n    )\n  },\n\n  replacement: function (content, node, options) {\n    var href = node.getAttribute('href');\n    var title = cleanAttribute(node.getAttribute('title'));\n    if (title) title = ' \"' + title + '\"';\n    var replacement;\n    var reference;\n\n    switch (options.linkReferenceStyle) {\n      case 'collapsed':\n        replacement = '[' + content + '][]';\n        reference = '[' + content + ']: ' + href + title;\n        break\n      case 'shortcut':\n        replacement = '[' + content + ']';\n        reference = '[' + content + ']: ' + href + title;\n        break\n      default:\n        var id = this.references.length + 1;\n        replacement = '[' + content + '][' + id + ']';\n        reference = '[' + id + ']: ' + href + title;\n    }\n\n    this.references.push(reference);\n    return replacement\n  },\n\n  references: [],\n\n  append: function (options) {\n    var references = '';\n    if (this.references.length) {\n      references = '\\n\\n' + this.references.join('\\n') + '\\n\\n';\n      this.references = []; // Reset references\n    }\n    return references\n  }\n};\n\nrules.emphasis = {\n  filter: ['em', 'i'],\n\n  replacement: function (content, node, options) {\n    if (!content.trim()) return ''\n    return options.emDelimiter + content + options.emDelimiter\n  }\n};\n\nrules.strong = {\n  filter: ['strong', 'b'],\n\n  replacement: function (content, node, options) {\n    if (!content.trim()) return ''\n    return options.strongDelimiter + content + options.strongDelimiter\n  }\n};\n\nrules.code = {\n  filter: function (node) {\n    var hasSiblings = node.previousSibling || node.nextSibling;\n    var isCodeBlock = node.parentNode.nodeName === 'PRE' && !hasSiblings;\n\n    return node.nodeName === 'CODE' && !isCodeBlock\n  },\n\n  replacement: function (content) {\n    if (!content) return ''\n    content = content.replace(/\\r?\\n|\\r/g, ' ');\n\n    var extraSpace = /^`|^ .*?[^ ].* $|`$/.test(content) ? ' ' : '';\n    var delimiter = '`';\n    var matches = content.match(/`+/gm) || [];\n    while (matches.indexOf(delimiter) !== -1) delimiter = delimiter + '`';\n\n    return delimiter + extraSpace + content + extraSpace + delimiter\n  }\n};\n\nrules.image = {\n  filter: 'img',\n\n  replacement: function (content, node) {\n    var alt = cleanAttribute(node.getAttribute('alt'));\n    var src = node.getAttribute('src') || '';\n    var title = cleanAttribute(node.getAttribute('title'));\n    var titlePart = title ? ' \"' + title + '\"' : '';\n    return src ? '![' + alt + ']' + '(' + src + titlePart + ')' : ''\n  }\n};\n\nfunction cleanAttribute (attribute) {\n  return attribute ? attribute.replace(/(\\n+\\s*)+/g, '\\n') : ''\n}\n\n/**\n * Manages a collection of rules used to convert HTML to Markdown\n */\n\nfunction Rules (options) {\n  this.options = options;\n  this._keep = [];\n  this._remove = [];\n\n  this.blankRule = {\n    replacement: options.blankReplacement\n  };\n\n  this.keepReplacement = options.keepReplacement;\n\n  this.defaultRule = {\n    replacement: options.defaultReplacement\n  };\n\n  this.array = [];\n  for (var key in options.rules) this.array.push(options.rules[key]);\n}\n\nRules.prototype = {\n  add: function (key, rule) {\n    this.array.unshift(rule);\n  },\n\n  keep: function (filter) {\n    this._keep.unshift({\n      filter: filter,\n      replacement: this.keepReplacement\n    });\n  },\n\n  remove: function (filter) {\n    this._remove.unshift({\n      filter: filter,\n      replacement: function () {\n        return ''\n      }\n    });\n  },\n\n  forNode: function (node) {\n    if (node.isBlank) return this.blankRule\n    var rule;\n\n    if ((rule = findRule(this.array, node, this.options))) return rule\n    if ((rule = findRule(this._keep, node, this.options))) return rule\n    if ((rule = findRule(this._remove, node, this.options))) return rule\n\n    return this.defaultRule\n  },\n\n  forEach: function (fn) {\n    for (var i = 0; i < this.array.length; i++) fn(this.array[i], i);\n  }\n};\n\nfunction findRule (rules, node, options) {\n  for (var i = 0; i < rules.length; i++) {\n    var rule = rules[i];\n    if (filterValue(rule, node, options)) return rule\n  }\n  return void 0\n}\n\nfunction filterValue (rule, node, options) {\n  var filter = rule.filter;\n  if (typeof filter === 'string') {\n    if (filter === node.nodeName.toLowerCase()) return true\n  } else if (Array.isArray(filter)) {\n    if (filter.indexOf(node.nodeName.toLowerCase()) > -1) return true\n  } else if (typeof filter === 'function') {\n    if (filter.call(rule, node, options)) return true\n  } else {\n    throw new TypeError('`filter` needs to be a string, array, or function')\n  }\n}\n\n/**\n * The collapseWhitespace function is adapted from collapse-whitespace\n * by Luc Thevenard.\n *\n * The MIT License (MIT)\n *\n * Copyright (c) 2014 Luc Thevenard <lucthevenard@gmail.com>\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/**\n * collapseWhitespace(options) removes extraneous whitespace from an the given element.\n *\n * @param {Object} options\n */\nfunction collapseWhitespace (options) {\n  var element = options.element;\n  var isBlock = options.isBlock;\n  var isVoid = options.isVoid;\n  var isPre = options.isPre || function (node) {\n    return node.nodeName === 'PRE'\n  };\n\n  if (!element.firstChild || isPre(element)) return\n\n  var prevText = null;\n  var keepLeadingWs = false;\n\n  var prev = null;\n  var node = next(prev, element, isPre);\n\n  while (node !== element) {\n    if (node.nodeType === 3 || node.nodeType === 4) { // Node.TEXT_NODE or Node.CDATA_SECTION_NODE\n      var text = node.data.replace(/[ \\r\\n\\t]+/g, ' ');\n\n      if ((!prevText || / $/.test(prevText.data)) &&\n          !keepLeadingWs && text[0] === ' ') {\n        text = text.substr(1);\n      }\n\n      // `text` might be empty at this point.\n      if (!text) {\n        node = remove(node);\n        continue\n      }\n\n      node.data = text;\n\n      prevText = node;\n    } else if (node.nodeType === 1) { // Node.ELEMENT_NODE\n      if (isBlock(node) || node.nodeName === 'BR') {\n        if (prevText) {\n          prevText.data = prevText.data.replace(/ $/, '');\n        }\n\n        prevText = null;\n        keepLeadingWs = false;\n      } else if (isVoid(node) || isPre(node)) {\n        // Avoid trimming space around non-block, non-BR void elements and inline PRE.\n        prevText = null;\n        keepLeadingWs = true;\n      } else if (prevText) {\n        // Drop protection if set previously.\n        keepLeadingWs = false;\n      }\n    } else {\n      node = remove(node);\n      continue\n    }\n\n    var nextNode = next(prev, node, isPre);\n    prev = node;\n    node = nextNode;\n  }\n\n  if (prevText) {\n    prevText.data = prevText.data.replace(/ $/, '');\n    if (!prevText.data) {\n      remove(prevText);\n    }\n  }\n}\n\n/**\n * remove(node) removes the given node from the DOM and returns the\n * next node in the sequence.\n *\n * @param {Node} node\n * @return {Node} node\n */\nfunction remove (node) {\n  var next = node.nextSibling || node.parentNode;\n\n  node.parentNode.removeChild(node);\n\n  return next\n}\n\n/**\n * next(prev, current, isPre) returns the next node in the sequence, given the\n * current and previous nodes.\n *\n * @param {Node} prev\n * @param {Node} current\n * @param {Function} isPre\n * @return {Node}\n */\nfunction next (prev, current, isPre) {\n  if ((prev && prev.parentNode === current) || isPre(current)) {\n    return current.nextSibling || current.parentNode\n  }\n\n  return current.firstChild || current.nextSibling || current.parentNode\n}\n\n/*\n * Set up window for Node.js\n */\n\nvar root = (typeof window !== 'undefined' ? window : {});\n\n/*\n * Parsing HTML strings\n */\n\nfunction canParseHTMLNatively () {\n  var Parser = root.DOMParser;\n  var canParse = false;\n\n  // Adapted from https://gist.github.com/1129031\n  // Firefox/Opera/IE throw errors on unsupported types\n  try {\n    // WebKit returns null on unsupported types\n    if (new Parser().parseFromString('', 'text/html')) {\n      canParse = true;\n    }\n  } catch (e) {}\n\n  return canParse\n}\n\nfunction createHTMLParser () {\n  var Parser = function () {};\n\n  {\n    var domino = require('@mixmark-io/domino');\n    Parser.prototype.parseFromString = function (string) {\n      return domino.createDocument(string)\n    };\n  }\n  return Parser\n}\n\nvar HTMLParser = canParseHTMLNatively() ? root.DOMParser : createHTMLParser();\n\nfunction RootNode (input, options) {\n  var root;\n  if (typeof input === 'string') {\n    var doc = htmlParser().parseFromString(\n      // DOM parsers arrange elements in the <head> and <body>.\n      // Wrapping in a custom element ensures elements are reliably arranged in\n      // a single element.\n      '<x-turndown id=\"turndown-root\">' + input + '</x-turndown>',\n      'text/html'\n    );\n    root = doc.getElementById('turndown-root');\n  } else {\n    root = input.cloneNode(true);\n  }\n  collapseWhitespace({\n    element: root,\n    isBlock: isBlock,\n    isVoid: isVoid,\n    isPre: options.preformattedCode ? isPreOrCode : null\n  });\n\n  return root\n}\n\nvar _htmlParser;\nfunction htmlParser () {\n  _htmlParser = _htmlParser || new HTMLParser();\n  return _htmlParser\n}\n\nfunction isPreOrCode (node) {\n  return node.nodeName === 'PRE' || node.nodeName === 'CODE'\n}\n\nfunction Node (node, options) {\n  node.isBlock = isBlock(node);\n  node.isCode = node.nodeName === 'CODE' || node.parentNode.isCode;\n  node.isBlank = isBlank(node);\n  node.flankingWhitespace = flankingWhitespace(node, options);\n  return node\n}\n\nfunction isBlank (node) {\n  return (\n    !isVoid(node) &&\n    !isMeaningfulWhenBlank(node) &&\n    /^\\s*$/i.test(node.textContent) &&\n    !hasVoid(node) &&\n    !hasMeaningfulWhenBlank(node)\n  )\n}\n\nfunction flankingWhitespace (node, options) {\n  if (node.isBlock || (options.preformattedCode && node.isCode)) {\n    return { leading: '', trailing: '' }\n  }\n\n  var edges = edgeWhitespace(node.textContent);\n\n  // abandon leading ASCII WS if left-flanked by ASCII WS\n  if (edges.leadingAscii && isFlankedByWhitespace('left', node, options)) {\n    edges.leading = edges.leadingNonAscii;\n  }\n\n  // abandon trailing ASCII WS if right-flanked by ASCII WS\n  if (edges.trailingAscii && isFlankedByWhitespace('right', node, options)) {\n    edges.trailing = edges.trailingNonAscii;\n  }\n\n  return { leading: edges.leading, trailing: edges.trailing }\n}\n\nfunction edgeWhitespace (string) {\n  var m = string.match(/^(([ \\t\\r\\n]*)(\\s*))(?:(?=\\S)[\\s\\S]*\\S)?((\\s*?)([ \\t\\r\\n]*))$/);\n  return {\n    leading: m[1], // whole string for whitespace-only strings\n    leadingAscii: m[2],\n    leadingNonAscii: m[3],\n    trailing: m[4], // empty for whitespace-only strings\n    trailingNonAscii: m[5],\n    trailingAscii: m[6]\n  }\n}\n\nfunction isFlankedByWhitespace (side, node, options) {\n  var sibling;\n  var regExp;\n  var isFlanked;\n\n  if (side === 'left') {\n    sibling = node.previousSibling;\n    regExp = / $/;\n  } else {\n    sibling = node.nextSibling;\n    regExp = /^ /;\n  }\n\n  if (sibling) {\n    if (sibling.nodeType === 3) {\n      isFlanked = regExp.test(sibling.nodeValue);\n    } else if (options.preformattedCode && sibling.nodeName === 'CODE') {\n      isFlanked = false;\n    } else if (sibling.nodeType === 1 && !isBlock(sibling)) {\n      isFlanked = regExp.test(sibling.textContent);\n    }\n  }\n  return isFlanked\n}\n\nvar reduce = Array.prototype.reduce;\nvar escapes = [\n  [/\\\\/g, '\\\\\\\\'],\n  [/\\*/g, '\\\\*'],\n  [/^-/g, '\\\\-'],\n  [/^\\+ /g, '\\\\+ '],\n  [/^(=+)/g, '\\\\$1'],\n  [/^(#{1,6}) /g, '\\\\$1 '],\n  [/`/g, '\\\\`'],\n  [/^~~~/g, '\\\\~~~'],\n  [/\\[/g, '\\\\['],\n  [/\\]/g, '\\\\]'],\n  [/^>/g, '\\\\>'],\n  [/_/g, '\\\\_'],\n  [/^(\\d+)\\. /g, '$1\\\\. ']\n];\n\nfunction TurndownService (options) {\n  if (!(this instanceof TurndownService)) return new TurndownService(options)\n\n  var defaults = {\n    rules: rules,\n    headingStyle: 'setext',\n    hr: '* * *',\n    bulletListMarker: '*',\n    codeBlockStyle: 'indented',\n    fence: '```',\n    emDelimiter: '_',\n    strongDelimiter: '**',\n    linkStyle: 'inlined',\n    linkReferenceStyle: 'full',\n    br: '  ',\n    preformattedCode: false,\n    blankReplacement: function (content, node) {\n      return node.isBlock ? '\\n\\n' : ''\n    },\n    keepReplacement: function (content, node) {\n      return node.isBlock ? '\\n\\n' + node.outerHTML + '\\n\\n' : node.outerHTML\n    },\n    defaultReplacement: function (content, node) {\n      return node.isBlock ? '\\n\\n' + content + '\\n\\n' : content\n    }\n  };\n  this.options = extend({}, defaults, options);\n  this.rules = new Rules(this.options);\n}\n\nTurndownService.prototype = {\n  /**\n   * The entry point for converting a string or DOM node to Markdown\n   * @public\n   * @param {String|HTMLElement} input The string or DOM node to convert\n   * @returns A Markdown representation of the input\n   * @type String\n   */\n\n  turndown: function (input) {\n    if (!canConvert(input)) {\n      throw new TypeError(\n        input + ' is not a string, or an element/document/fragment node.'\n      )\n    }\n\n    if (input === '') return ''\n\n    var output = process.call(this, new RootNode(input, this.options));\n    return postProcess.call(this, output)\n  },\n\n  /**\n   * Add one or more plugins\n   * @public\n   * @param {Function|Array} plugin The plugin or array of plugins to add\n   * @returns The Turndown instance for chaining\n   * @type Object\n   */\n\n  use: function (plugin) {\n    if (Array.isArray(plugin)) {\n      for (var i = 0; i < plugin.length; i++) this.use(plugin[i]);\n    } else if (typeof plugin === 'function') {\n      plugin(this);\n    } else {\n      throw new TypeError('plugin must be a Function or an Array of Functions')\n    }\n    return this\n  },\n\n  /**\n   * Adds a rule\n   * @public\n   * @param {String} key The unique key of the rule\n   * @param {Object} rule The rule\n   * @returns The Turndown instance for chaining\n   * @type Object\n   */\n\n  addRule: function (key, rule) {\n    this.rules.add(key, rule);\n    return this\n  },\n\n  /**\n   * Keep a node (as HTML) that matches the filter\n   * @public\n   * @param {String|Array|Function} filter The unique key of the rule\n   * @returns The Turndown instance for chaining\n   * @type Object\n   */\n\n  keep: function (filter) {\n    this.rules.keep(filter);\n    return this\n  },\n\n  /**\n   * Remove a node that matches the filter\n   * @public\n   * @param {String|Array|Function} filter The unique key of the rule\n   * @returns The Turndown instance for chaining\n   * @type Object\n   */\n\n  remove: function (filter) {\n    this.rules.remove(filter);\n    return this\n  },\n\n  /**\n   * Escapes Markdown syntax\n   * @public\n   * @param {String} string The string to escape\n   * @returns A string with Markdown syntax escaped\n   * @type String\n   */\n\n  escape: function (string) {\n    return escapes.reduce(function (accumulator, escape) {\n      return accumulator.replace(escape[0], escape[1])\n    }, string)\n  }\n};\n\n/**\n * Reduces a DOM node down to its Markdown string equivalent\n * @private\n * @param {HTMLElement} parentNode The node to convert\n * @returns A Markdown representation of the node\n * @type String\n */\n\nfunction process (parentNode) {\n  var self = this;\n  return reduce.call(parentNode.childNodes, function (output, node) {\n    node = new Node(node, self.options);\n\n    var replacement = '';\n    if (node.nodeType === 3) {\n      replacement = node.isCode ? node.nodeValue : self.escape(node.nodeValue);\n    } else if (node.nodeType === 1) {\n      replacement = replacementForNode.call(self, node);\n    }\n\n    return join(output, replacement)\n  }, '')\n}\n\n/**\n * Appends strings as each rule requires and trims the output\n * @private\n * @param {String} output The conversion output\n * @returns A trimmed version of the ouput\n * @type String\n */\n\nfunction postProcess (output) {\n  var self = this;\n  this.rules.forEach(function (rule) {\n    if (typeof rule.append === 'function') {\n      output = join(output, rule.append(self.options));\n    }\n  });\n\n  return output.replace(/^[\\t\\r\\n]+/, '').replace(/[\\t\\r\\n\\s]+$/, '')\n}\n\n/**\n * Converts an element node to its Markdown equivalent\n * @private\n * @param {HTMLElement} node The node to convert\n * @returns A Markdown representation of the node\n * @type String\n */\n\nfunction replacementForNode (node) {\n  var rule = this.rules.forNode(node);\n  var content = process.call(this, node);\n  var whitespace = node.flankingWhitespace;\n  if (whitespace.leading || whitespace.trailing) content = content.trim();\n  return (\n    whitespace.leading +\n    rule.replacement(content, node, this.options) +\n    whitespace.trailing\n  )\n}\n\n/**\n * Joins replacement to the current output with appropriate number of new lines\n * @private\n * @param {String} output The current conversion output\n * @param {String} replacement The string to append to the output\n * @returns Joined output\n * @type String\n */\n\nfunction join (output, replacement) {\n  var s1 = trimTrailingNewlines(output);\n  var s2 = trimLeadingNewlines(replacement);\n  var nls = Math.max(output.length - s1.length, replacement.length - s2.length);\n  var separator = '\\n\\n'.substring(0, nls);\n\n  return s1 + separator + s2\n}\n\n/**\n * Determines whether an input can be converted\n * @private\n * @param {String|HTMLElement} input Describe this parameter\n * @returns Describe what it returns\n * @type String|Object|Array|Boolean|Number\n */\n\nfunction canConvert (input) {\n  return (\n    input != null && (\n      typeof input === 'string' ||\n      (input.nodeType && (\n        input.nodeType === 1 || input.nodeType === 9 || input.nodeType === 11\n      ))\n    )\n  )\n}\n\nmodule.exports = TurndownService;\n", "import { createRequire } from 'module';\r\n\r\n// @ts-ignore\r\nlet vscode: Promise<any> = null;\r\n\r\n// @ts-ignore\r\nconst VSCODE_MOD_NAME = \"vscode\";\r\n\r\n//\r\nconst tryLegacyMethod = ()=>{\r\n    // @ts-ignore\r\n    let require:any = null;\r\n    try {\r\n        require = createRequire(import.meta.url);\r\n    } catch (error) {\r\n        console.warn(error); // @ts-ignore\r\n    }\r\n\r\n    try { // @ts-ignore\r\n        return require?.(\"\" + VSCODE_MOD_NAME) ?? (typeof acquireVsCodeApi !== \"undefined\" ? acquireVsCodeApi?.() : globalThis);\r\n    } catch (error) {\r\n        console.warn(error); // @ts-ignore\r\n        return (typeof acquireVsCodeApi !== \"undefined\" ? acquireVsCodeApi?.() : globalThis);\r\n    }\r\n};\r\n\r\n//\r\ntry {\r\n    vscode = import(\"\" + VSCODE_MOD_NAME)?.catch?.((e)=>{\r\n        console.warn(e);\r\n        return tryLegacyMethod(); // @ts-ignore\r\n    });\r\n} catch (e) {\r\n    console.warn(e);\r\n    vscode = tryLegacyMethod();\r\n}\r\n\r\n//\r\nexport default vscode;\r\n", "import vscodeAPI from '../imports/api.ts';\n\n//\nconst view = `<iframe style=\"padding:0px;margin:0px;border:none 0px transparent;box-sizing:border-box;inline-size:100dvw;block-size:100dvh;\" src=\"https://gptunnel.ru/model/gpt-4.1/\"></iframe>`;\nconst html = `<html><body style=\"inline-size:100dvw;block-size:100dvh;overflow:hidden;padding:0px;margin:0px;border:none 0px transparent;\">${view}</body></html>`;\n\n//\nexport class CustomSidebarViewProvider {\n    static viewType = \"vext.gptView\";\n    constructor(extensionUri) {}\n\n    //\n    resolveWebviewView(webviewView, context, token) {\n        this._view = webviewView;\n        webviewView.webview.options = { enableScripts: true, localResourceRoots: [this._extensionUri] };\n        webviewView.webview.html = this.getHtmlContent(webviewView.webview);\n    }\n\n    //\n    getHtmlContent(webview) {\n        return html;\n    }\n}\n\n//\nexport async function webview(context) {\n    const vscode = await vscodeAPI;\n    const provider = new CustomSidebarViewProvider(context.extensionUri);\n    context.subscriptions.push(vscode.window.registerWebviewViewProvider(CustomSidebarViewProvider.viewType, provider));\n    context.subscriptions.push(vscode.commands.registerCommand('vext.openWebview', function () {\n        const panel = vscode.window.createWebviewPanel(\n            'vext.gptView',\n            'GPTUnnel Web View',\n            vscode.ViewColumn.One,\n            { enableScripts: true }\n        );\n        panel.webview.html = html;\n    }));\n}\n", "//! use only TS types\r\nimport * as vscode from \"vscode\";\r\n\r\n//\r\nimport vscodePromise from '../imports/api.ts';\r\n\r\n//\r\nexport async function getWebviewContent(webview: vscode.Webview, extensionUri: vscode.Uri, modules: string[]): Promise<string> {\r\n    const vscodeAPI = await vscodePromise; // @ts-ignore\r\n    const defaultCSS = webview?.asWebviewUri(vscodeAPI?.Uri?.joinPath?.(extensionUri, 'icons', 'webview.css'))||'';\r\n    const codiconCSS = webview?.asWebviewUri(vscodeAPI?.Uri?.joinPath?.(extensionUri, 'icons', 'codicon.css'))||'';\r\n    const actionsJS = webview?.asWebviewUri(vscodeAPI?.Uri?.joinPath?.(extensionUri, 'icons', 'actions.mjs'))||'';\r\n\r\n    // @ts-ignore\r\n    let layout = `<html><head><link rel=\"stylesheet\" href=\"${codiconCSS}\"><link rel=\"stylesheet\" href=\"${defaultCSS}\"><script src=\"${actionsJS}\" async defer></script></head>\r\n    <body style=\"margin: 0px; border: none 0px transparent; min-block-size: 100svh;\">\r\n        <div class=\"toolbar\" tabindex=\"0\">\r\n            <span class=\"toolbar-label\" style=\"flex-grow: 1;\">Bulk actions:</span>\r\n            <div class=\"toolbar-actions\">\r\n                <button onclick=\"send('bulk_build', '')\" title=\"Build all\"><i class='codicon codicon-package'></i></button>\r\n                <button onclick=\"send('bulk_push', '')\" title=\"Git add/commit/push all\"><i class='codicon codicon-cloud-upload'></i></button>\r\n            </div>\r\n        </div>\r\n        <table>${modules?.map?.(m => `<tr tabindex=\"0\">\r\n            <td class=\"name\" style=\"display: flex; flex-basis: max-content; inline-size: -webkit-fill-available; inline-size: stretch;\">${m}</td>\r\n            <td class=\"actions\" style=\"min-inline-size: fit-content; inline-size: fit-content; max-inline-size: -webkit-fill-available; max-inline-size: stretch;\">\r\n                <div class=\"actions-container\">\r\n                <button onclick=\"send('open-dir', '${m}')\" title=\"Open\"><i class=\"codicon codicon-folder-opened\"></i></button>\r\n                <button onclick=\"send('audit', '${m}')\" title=\"Audit\"><i class=\"codicon codicon-github-action\"></i></button>\r\n                <button onclick=\"send('watch', '${m}')\" title=\"Watch\"><i class=\"codicon codicon-eye\"></i></button>\r\n                <button onclick=\"send('debug', '${m}')\" title=\"Debug\"><i class=\"codicon codicon-debug\"></i></button>\r\n                <button onclick=\"send('build', '${m}')\" title=\"Build\"><i class=\"codicon codicon-package\"></i></button>\r\n                <button onclick=\"send('test' , '${m}')\" title=\"Test\"><i class=\"codicon codicon-beaker\"></i></button>\r\n                <button onclick=\"send('diff', '${m}')\" title=\"Git diff\"><i class=\"codicon codicon-diff\"></i></button>\r\n                <button onclick=\"send('terminal', '${m}')\" title=\"Terminal\"><i class=\"codicon codicon-terminal\"></i></button>\r\n                <button onclick=\"send('push' , '${m}')\" title=\"Git push\"><i class=\"codicon codicon-cloud-upload\"></i></button>\r\n                </div>\r\n            </td>\r\n        </tr>`)?.join?.('')}</table>\r\n    </body>\r\n</html>`;\r\n\r\n    // needs to remove indent and spaces \"gas\" from string (but needs to remain one space in tags)\r\n    layout = layout.replace(/[\\s\\t]+/g, ' ');\r\n\r\n    return layout;\r\n}\r\n", "//! use only TS types\nimport * as vscode from \"vscode\";\n\n//\nimport vscodePromise from '../imports/api.ts';\nimport { getWebviewContent } from \"./webview.ts\";\n\n//\nconst MOD_DIR = \"modules\";\nconst inWatch = new Set<any>([]);\n\n// Initialize vscode API asynchronously\nlet vscodeAPI: any = null;\nlet ctxMap = new WeakMap();\n\n//\nasync function initVscodeAPI() {\n    if (!vscodeAPI) {\n        vscodeAPI = await vscodePromise;\n\n        // Set up watchers and event listeners\n        const watcher = vscodeAPI?.workspace?.createFileSystemWatcher?.('./**');\n        watcher?.onDidCreate?.(() => inWatch.forEach((cb: any)=>cb?.()));\n        watcher?.onDidDelete?.(() => inWatch.forEach((cb: any)=>cb?.()));\n        watcher?.onDidChange?.(() => inWatch.forEach((cb: any)=>cb?.()));\n        vscodeAPI?.workspace?.onDidChangeWorkspaceFolders?.(() => () => inWatch.forEach((cb: any)=>cb?.()));\n        vscodeAPI?.window?.onDidChangeActiveTextEditor?.(() => () => inWatch.forEach((cb: any)=>cb?.()));\n        vscodeAPI?.window?.onDidCloseTerminal?.((closedTerminal) => {\n            for (const [cwd, obj] of terminalMap.entries())\n                { if (obj.terminal === closedTerminal) { terminalMap.delete(cwd); break; } }\n        });\n    }\n    return vscodeAPI;\n}\n\n//\nconst getWorkspaceFolder = async (workspace, res = \"\") => {\n    const vscodeAPI = await initVscodeAPI();\n    const editor = vscodeAPI?.window?.activeTextEditor;\n    res = res || editor?.document?.uri || \"\";\n\n    let folder: vscode.WorkspaceFolder | undefined;\n    if (!workspace.workspaceFolders)\n        {}\n    else if (workspace.workspaceFolders.length === 1 || !res)\n        {folder = workspace.workspaceFolders[0];}\n    else\n        {folder = workspace.getWorkspaceFolder(res);}\n\n    return folder?.uri || undefined;\n};\n\n//\nasync function getBaseDir(dir: string = MOD_DIR): Promise<{ baseDir: vscode.Uri, isModules: boolean }> {\n    const vscodeAPI = await initVscodeAPI();\n    const wsdUri: vscode.Uri | undefined = await getWorkspaceFolder(vscodeAPI?.workspace);\n    if (!wsdUri) {\n        return { baseDir: vscodeAPI.Uri.file(''), isModules: false };\n    }\n\n    const modulesDirUri = vscodeAPI.Uri.joinPath(wsdUri, dir);\n    let isModules = false;\n    try {\n        const stat = await vscodeAPI.workspace.fs.stat(modulesDirUri);\n        isModules = stat.type === vscodeAPI.FileType.Directory;\n    } catch (e) {\n        // ignore\n    }\n    return { baseDir: isModules ? modulesDirUri : wsdUri, isModules };\n}\n\n// ...\n// \u0412\u0441\u043F\u043E\u043C\u043E\u0433\u0430\u0442\u0435\u043B\u044C\u043D\u0430\u044F \u0444\u0443\u043D\u043A\u0446\u0438\u044F \u0434\u043B\u044F \u043F\u043E\u0438\u0441\u043A\u0430 \u0434\u0438\u0440\u0435\u043A\u0442\u043E\u0440\u0438\u0439 \u0441 .git \u0438\u043B\u0438 package.json\nasync function findProjectDirs(\n    vscodeAPI: any,\n    baseDir: vscode.Uri,\n    relPath: string = \"\"\n): Promise<string[]> {\n    let result: string[] = [];\n    try {\n        const entries = await vscodeAPI.workspace.fs.readDirectory(baseDir);\n        let hasGit = false, hasPkg = false;\n        for (const [name, type] of entries) {\n            if (type === vscodeAPI.FileType.File) {\n                if (name === \".git\") {hasGit = true;}\n                if (name === \"package.json\") {hasPkg = true;}\n            }\n        }\n        // \u0415\u0441\u043B\u0438 \u0435\u0441\u0442\u044C .git \u0438\u043B\u0438 package.json, \u0434\u043E\u0431\u0430\u0432\u043B\u044F\u0435\u043C \u043F\u0443\u0442\u044C\n        if (hasGit || hasPkg) {\n            result.push(relPath || \"./\");\n        }\n        // \u0420\u0435\u043A\u0443\u0440\u0441\u0438\u0432\u043D\u043E \u043E\u0431\u0445\u043E\u0434\u0438\u043C \u043F\u043E\u0434\u043F\u0430\u043F\u043A\u0438 (\u043A\u0440\u043E\u043C\u0435 node_modules \u0438 \u0441\u043A\u0440\u044B\u0442\u044B\u0445)\n        for (const [name, type] of entries) {\n            if (\n                type === vscodeAPI.FileType.Directory &&\n                name !== \"node_modules\" &&\n                !name.startsWith(\".\")\n            ) {\n                const subDir = vscodeAPI.Uri.joinPath(baseDir, name);\n                const subRelPath = relPath ? `${relPath}/${name}` : name;\n                const subResult = await findProjectDirs(vscodeAPI, subDir, subRelPath);\n                result.push(...subResult);\n            }\n        }\n    } catch (e) {\n        // ignore\n    }\n    return result;\n}\n\n// \u041D\u043E\u0432\u044B\u0439 getDirs\nconst getDirs = async (context) => {\n    const vscodeAPI = await initVscodeAPI();\n    const wsdUri: vscode.Uri | undefined = await getWorkspaceFolder(vscodeAPI?.workspace);\n    if (!context || !wsdUri) { return [\"./\"]; }\n    let modules: string[] = ctxMap.get(context) ?? [];\n    ctxMap.set(context, modules);\n\n    try {\n        modules = await findProjectDirs(vscodeAPI, wsdUri, \"\");\n    } catch (e) { /* ignore */ }\n\n    if (modules?.length < 1) { modules?.push?.(\"./\"); }\n    return modules;\n};\n\n//\nconst plNormalize = (m)=>{\n    if (/^\\/[a-zA-Z]:\\//.test(m)) {\n        return m.slice(1);\n    }\n    return m;\n};\n\n//\nexport class ManagerViewProvider {\n    _extensionUri: any; static viewType = \"vext.managerView\";\n    constructor(extensionUri) { this._extensionUri = extensionUri; }\n\n    //\n    async updateView(webviewView, context, modules?) {\n        modules ??= (await getDirs(context)) || [\"./\"];\n        webviewView.webview.html = await getWebviewContent(webviewView.webview, this._extensionUri, modules);\n    }\n\n    //\n    async resolveWebviewView(webviewView, context, token) {\n        const vscodeAPI = await initVscodeAPI();\n        const wsdUri = await getWorkspaceFolder(vscodeAPI?.workspace);\n        let modules = await getDirs(context) || [\"./\"];\n\n        //\n        webviewView.webview.options = { enableScripts: true, localResourceRoots: [this._extensionUri]  };\n        try { await this.updateView(webviewView, context, modules); } catch(e) { console.warn(e); };\n        inWatch?.add?.(()=>this.updateView(webviewView, context));\n\n        //\n        if (modules = await getDirs(context) || [\"./\"]) { try {\n            webviewView?.webview?.onDidReceiveMessage?.(async message => {\n                const moduleUri = vscodeAPI.Uri.joinPath(wsdUri, message.module);\n                modules = await getDirs(context) || [\"./\"];\n\n                //\n                switch (message.command) {\n                    case 'bulk_push': {\n                        const commitMsg = await vscodeAPI?.window?.showInputBox?.({ prompt: 'Commit Message for all?', value: '', default: 'No Description' });\n                        if (!commitMsg) { return; }\n                        for (const m of modules) {\n                            const mUri = vscodeAPI.Uri.joinPath(wsdUri, m);\n                            runInTerminal([\n                                'git rm -r --cached .',\n                                'git add .', 'git add *',\n                                `git commit -m \"${commitMsg}\"`,\n                                'git pull --rebase --ff',\n                                'git push --all'\n                            ], plNormalize(mUri?.path || mUri?.fsPath));\n                        }\n                    }; break;\n                    case 'bulk_build':\n                        for (const m of modules) {\n                            const mUri = vscodeAPI.Uri.joinPath(wsdUri, m);\n                            runInTerminal(['npm run build'], plNormalize(mUri?.path || mUri?.fsPath));\n                        }\n                        break;\n                    case 'terminal': runInTerminal([''], plNormalize(moduleUri?.path || moduleUri?.fsPath)); break;\n                    case 'audit': runInTerminal(['npm install -D', 'npm audit fix'], plNormalize(moduleUri?.path || moduleUri?.fsPath)); break;\n                    case 'build': runInTerminal(['npm run build'], plNormalize(moduleUri?.path || moduleUri?.fsPath)); break;\n                    case 'watch': runInTerminal(['npm run watch'], plNormalize(moduleUri?.path || moduleUri?.fsPath), true); break;\n                    case 'test' : runInTerminal(['npm run test'] , plNormalize(moduleUri?.path || moduleUri?.fsPath), true); break;\n                    case 'diff': runInTerminal(['git diff'], plNormalize(moduleUri?.path || moduleUri?.fsPath), true); break;\n                    case 'push': {\n                        const commitMsg = await vscodeAPI?.window?.showInputBox?.({ prompt: 'Commit Message?', value: '', default: 'No Description' });\n                        if (!commitMsg) { return; }\n                        runInTerminal([\n                            'git rm -r --cached .',\n                            'git add .', 'git add *',\n                            `git commit -m \"${commitMsg}\"`,\n                            'git pull --rebase --ff',\n                            'git push --all'\n                        ], plNormalize(moduleUri?.path || moduleUri?.fsPath));\n                    }; break;\n                    case 'open-dir': vscodeAPI?.commands?.executeCommand?.('vscode.openFolder', moduleUri); break;\n                }\n            });\n        } catch(e) { console.warn(e); }}\n    }\n}\n\n//\nexport async function manager(context: vscode.ExtensionContext) {\n    const vscodeAPI = await initVscodeAPI();\n    const provider = new ManagerViewProvider(context?.extensionUri);\n    const prov = vscodeAPI?.window?.registerWebviewViewProvider?.(ManagerViewProvider.viewType, provider);\n    if (prov) { context?.subscriptions?.push?.(prov); }\n}\n\n//\ntype TerminalStatus = 'free' | 'busy';\nconst terminalMap = new Map<string, { terminal: vscode.Terminal, status: TerminalStatus }>();\nasync function runInTerminal(cmds: string[], cwd: string, longRunning = false) {\n    const vscodeAPI = await initVscodeAPI();\n    // longRunning = true \u0434\u043B\u044F watch/dev/test, false \u0434\u043B\u044F diff/build/push\n    let entry = !longRunning ? Array.from(terminalMap.entries()).find(([dir, obj]) => (dir === cwd && obj.status === 'free')) : null, termObj = entry?.[1];\n\n    if (!termObj) {\n        const terminal = vscodeAPI?.window.createTerminal({ cwd }); // @ts-ignore\n        termObj = { terminal, status: longRunning ? 'busy' : 'free' }; if (!longRunning) { terminalMap.set(cwd, termObj); }\n    } else if (longRunning) {\n        termObj.status = 'busy';\n    }\n\n    termObj?.terminal?.show();\n    cmds.forEach(cmd => termObj?.terminal?.sendText?.(cmd));\n}\n\n//\n// Initialize terminal event listener\ninitVscodeAPI().then(vscodeAPI => {\n    vscodeAPI?.window?.onDidCloseTerminal?.((closedTerminal) => {\n        for (const [cwd, obj] of terminalMap.entries())\n            { if (obj.terminal === closedTerminal) { terminalMap.delete(cwd); break; } }\n    });\n});\n", "import vscodePromise from './api.ts';\n\n//\nexport const getSelection = async (): Promise<string> =>{\n    const vscodeAPI = await vscodePromise;\n    const editor: any = vscodeAPI?.window?.activeTextEditor;\n    const selection = editor?.selection;\n    if (selection && !selection.isEmpty) { // @ts-ignore\n        const selectionRange = new vscodeAPI.Range(selection.start.line, selection.start.character, selection.end.line, selection.end.character);\n        const highlighted = editor?.document?.getText(selectionRange);\n        return highlighted;\n    }\n    return \"\";\n};\n\n//\nexport const replaceSelectionWith = async (text: string) => {\n    const vscodeAPI = await vscodePromise;\n    const editor: any = vscodeAPI?.window?.activeTextEditor;\n    const selection = editor?.selection;\n    if (selection) { // @ts-ignore\n        const selectionRange = new vscodeAPI.Range(selection.start.line, selection.start.character, selection.end.line, selection.end.character);\n        editor?.edit((builder: any)=>{\n            builder.replace(selectionRange, text);\n        });\n    }\n};\n", "/**\n * This is the ParseError class, which is the main error thrown by Temml\n * functions when something has gone wrong. This is used to distinguish internal\n * errors from errors in the expression that the user provided.\n *\n * If possible, a caller should provide a Token or ParseNode with information\n * about where in the source string the problem occurred.\n */\nclass ParseError {\n  constructor(\n    message, // The error message\n    token // An object providing position information\n  ) {\n    let error = \" \" + message;\n    let start;\n\n    const loc = token && token.loc;\n    if (loc && loc.start <= loc.end) {\n      // If we have the input and a position, make the error a bit fancier\n\n      // Get the input\n      const input = loc.lexer.input;\n\n      // Prepend some information\n      start = loc.start;\n      const end = loc.end;\n      if (start === input.length) {\n        error += \" at end of input: \";\n      } else {\n        error += \" at position \" + (start + 1) + \": \\n\";\n      }\n\n      // Underline token in question using combining underscores\n      const underlined = input.slice(start, end).replace(/[^]/g, \"$&\\u0332\");\n\n      // Extract some context from the input and add it to the error\n      let left;\n      if (start > 15) {\n        left = \"\u2026\" + input.slice(start - 15, start);\n      } else {\n        left = input.slice(0, start);\n      }\n      let right;\n      if (end + 15 < input.length) {\n        right = input.slice(end, end + 15) + \"\u2026\";\n      } else {\n        right = input.slice(end);\n      }\n      error += left + underlined + right;\n    }\n\n    // Some hackery to make ParseError a prototype of Error\n    // See http://stackoverflow.com/a/8460753\n    const self = new Error(error);\n    self.name = \"ParseError\";\n    self.__proto__ = ParseError.prototype;\n    self.position = start;\n    return self;\n  }\n}\n\nParseError.prototype.__proto__ = Error.prototype;\n\n//\n/**\n * This file contains a list of utility functions which are useful in other\n * files.\n */\n\n/**\n * Provide a default value if a setting is undefined\n */\nconst deflt = function(setting, defaultIfUndefined) {\n  return setting === undefined ? defaultIfUndefined : setting;\n};\n\n// hyphenate and escape adapted from Facebook's React under Apache 2 license\n\nconst uppercase = /([A-Z])/g;\nconst hyphenate = function(str) {\n  return str.replace(uppercase, \"-$1\").toLowerCase();\n};\n\nconst ESCAPE_LOOKUP = {\n  \"&\": \"&amp;\",\n  \">\": \"&gt;\",\n  \"<\": \"&lt;\",\n  '\"': \"&quot;\",\n  \"'\": \"&#x27;\"\n};\n\nconst ESCAPE_REGEX = /[&><\"']/g;\n\n/**\n * Escapes text to prevent scripting attacks.\n */\nfunction escape(text) {\n  return String(text).replace(ESCAPE_REGEX, (match) => ESCAPE_LOOKUP[match]);\n}\n\n/**\n * Sometimes we want to pull out the innermost element of a group. In most\n * cases, this will just be the group itself, but when ordgroups and colors have\n * a single element, we want to pull that out.\n */\nconst getBaseElem = function(group) {\n  if (group.type === \"ordgroup\") {\n    if (group.body.length === 1) {\n      return getBaseElem(group.body[0]);\n    } else {\n      return group;\n    }\n  } else if (group.type === \"color\") {\n    if (group.body.length === 1) {\n      return getBaseElem(group.body[0]);\n    } else {\n      return group;\n    }\n  } else if (group.type === \"font\") {\n    return getBaseElem(group.body);\n  } else {\n    return group;\n  }\n};\n\n/**\n * TeXbook algorithms often reference \"character boxes\", which are simply groups\n * with a single character in them. To decide if something is a character box,\n * we find its innermost group, and see if it is a single character.\n */\nconst isCharacterBox = function(group) {\n  const baseElem = getBaseElem(group);\n\n  // These are all the types of groups which hold single characters\n  return baseElem.type === \"mathord\" || baseElem.type === \"textord\" || baseElem.type === \"atom\"\n};\n\nconst assert = function(value) {\n  if (!value) {\n    throw new Error(\"Expected non-null, but got \" + String(value));\n  }\n  return value;\n};\n\n/**\n * Return the protocol of a URL, or \"_relative\" if the URL does not specify a\n * protocol (and thus is relative), or `null` if URL has invalid protocol\n * (so should be outright rejected).\n */\nconst protocolFromUrl = function(url) {\n  // Check for possible leading protocol.\n  // https://url.spec.whatwg.org/#url-parsing strips leading whitespace\n  // (\\x00) or C0 control (\\x00-\\x1F) characters.\n  // eslint-disable-next-line no-control-regex\n  const protocol = /^[\\x00-\\x20]*([^\\\\/#?]*?)(:|&#0*58|&#x0*3a|&colon)/i.exec(url);\n  if (!protocol) {\n    return \"_relative\";\n  }\n  // Reject weird colons\n  if (protocol[2] !== \":\") {\n    return null;\n  }\n  // Reject invalid characters in scheme according to\n  // https://datatracker.ietf.org/doc/html/rfc3986#section-3.1\n  if (!/^[a-zA-Z][a-zA-Z0-9+\\-.]*$/.test(protocol[1])) {\n    return null;\n  }\n  // Lowercase the protocol\n  return protocol[1].toLowerCase();\n};\n\n/**\n * Round `n` to 4 decimal places, or to the nearest 1/10,000th em. The TeXbook\n * gives an acceptable rounding error of 100sp (which would be the nearest\n * 1/6551.6em with our ptPerEm = 10):\n * http://www.ctex.org/documents/shredder/src/texbook.pdf#page=69\n */\nconst round = function(n) {\n  return +n.toFixed(4);\n};\n\nvar utils = {\n  deflt,\n  escape,\n  hyphenate,\n  getBaseElem,\n  isCharacterBox,\n  protocolFromUrl,\n  round\n};\n\n/**\n * This is a module for storing settings passed into Temml. It correctly handles\n * default settings.\n */\n\n\n/**\n * The main Settings object\n */\nclass Settings {\n  constructor(options) {\n    // allow null options\n    options = options || {};\n    this.displayMode = utils.deflt(options.displayMode, false);    // boolean\n    this.annotate = utils.deflt(options.annotate, false);           // boolean\n    this.leqno = utils.deflt(options.leqno, false);                // boolean\n    this.throwOnError = utils.deflt(options.throwOnError, false);  // boolean\n    this.errorColor = utils.deflt(options.errorColor, \"#b22222\");  // string\n    this.macros = options.macros || {};\n    this.wrap = utils.deflt(options.wrap, \"tex\");                    // \"tex\" | \"=\"\n    this.xml = utils.deflt(options.xml, false);                     // boolean\n    this.colorIsTextColor = utils.deflt(options.colorIsTextColor, false);  // booelean\n    this.strict = utils.deflt(options.strict, false);    // boolean\n    this.trust = utils.deflt(options.trust, false);  // trust context. See html.js.\n    this.maxSize = (options.maxSize === undefined\n      ? [Infinity, Infinity]\n      : Array.isArray(options.maxSize)\n      ? options.maxSize\n      : [Infinity, Infinity]\n    );\n    this.maxExpand = Math.max(0, utils.deflt(options.maxExpand, 1000)); // number\n  }\n\n  /**\n   * Check whether to test potentially dangerous input, and return\n   * `true` (trusted) or `false` (untrusted).  The sole argument `context`\n   * should be an object with `command` field specifying the relevant LaTeX\n   * command (as a string starting with `\\`), and any other arguments, etc.\n   * If `context` has a `url` field, a `protocol` field will automatically\n   * get added by this function (changing the specified object).\n   */\n  isTrusted(context) {\n    if (context.url && !context.protocol) {\n      const protocol = utils.protocolFromUrl(context.url);\n      if (protocol == null) {\n        return false\n      }\n      context.protocol = protocol;\n    }\n    const trust = typeof this.trust === \"function\" ? this.trust(context) : this.trust;\n    return Boolean(trust);\n  }\n}\n\n/**\n * All registered functions.\n * `functions.js` just exports this same dictionary again and makes it public.\n * `Parser.js` requires this dictionary.\n */\nconst _functions = {};\n\n/**\n * All MathML builders. Should be only used in the `define*` and the `build*ML`\n * functions.\n */\nconst _mathmlGroupBuilders = {};\n\nfunction defineFunction({\n  type,\n  names,\n  props,\n  handler,\n  mathmlBuilder\n}) {\n  // Set default values of functions\n  const data = {\n    type,\n    numArgs: props.numArgs,\n    argTypes: props.argTypes,\n    allowedInArgument: !!props.allowedInArgument,\n    allowedInText: !!props.allowedInText,\n    allowedInMath: props.allowedInMath === undefined ? true : props.allowedInMath,\n    numOptionalArgs: props.numOptionalArgs || 0,\n    infix: !!props.infix,\n    primitive: !!props.primitive,\n    handler: handler\n  };\n  for (let i = 0; i < names.length; ++i) {\n    _functions[names[i]] = data;\n  }\n  if (type) {\n    if (mathmlBuilder) {\n      _mathmlGroupBuilders[type] = mathmlBuilder;\n    }\n  }\n}\n\n/**\n * Use this to register only the MathML builder for a function(e.g.\n * if the function's ParseNode is generated in Parser.js rather than via a\n * stand-alone handler provided to `defineFunction`).\n */\nfunction defineFunctionBuilders({ type, mathmlBuilder }) {\n  defineFunction({\n    type,\n    names: [],\n    props: { numArgs: 0 },\n    handler() {\n      throw new Error(\"Should never be called.\")\n    },\n    mathmlBuilder\n  });\n}\n\nconst normalizeArgument = function(arg) {\n  return arg.type === \"ordgroup\" && arg.body.length === 1 ? arg.body[0] : arg\n};\n\n// Since the corresponding buildMathML function expects a\n// list of elements, we normalize for different kinds of arguments\nconst ordargument = function(arg) {\n  return arg.type === \"ordgroup\" ? arg.body : [arg]\n};\n\n/**\n * This node represents a document fragment, which contains elements, but when\n * placed into the DOM doesn't have any representation itself. It only contains\n * children and doesn't have any DOM node properties.\n */\nclass DocumentFragment {\n  constructor(children) {\n    this.children = children;\n    this.classes = [];\n    this.style = {};\n  }\n\n  hasClass(className) {\n    return this.classes.includes(className);\n  }\n\n  /** Convert the fragment into a node. */\n  toNode() {\n    const frag = document.createDocumentFragment();\n\n    for (let i = 0; i < this.children.length; i++) {\n      frag.appendChild(this.children[i].toNode());\n    }\n\n    return frag;\n  }\n\n  /** Convert the fragment into HTML markup. */\n  toMarkup() {\n    let markup = \"\";\n\n    // Simply concatenate the markup for the children together.\n    for (let i = 0; i < this.children.length; i++) {\n      markup += this.children[i].toMarkup();\n    }\n\n    return markup;\n  }\n\n  /**\n   * Converts the math node into a string, similar to innerText. Applies to\n   * MathDomNode's only.\n   */\n  toText() {\n    // To avoid this, we would subclass documentFragment separately for\n    // MathML, but polyfills for subclassing is expensive per PR 1469.\n    const toText = (child) => child.toText();\n    return this.children.map(toText).join(\"\");\n  }\n}\n\n/**\n * These objects store the data about the DOM nodes we create, as well as some\n * extra data. They can then be transformed into real DOM nodes with the\n * `toNode` function or HTML markup using `toMarkup`. They are useful for both\n * storing extra properties on the nodes, as well as providing a way to easily\n * work with the DOM.\n *\n * Similar functions for working with MathML nodes exist in mathMLTree.js.\n *\n */\n\n/**\n * Create an HTML className based on a list of classes. In addition to joining\n * with spaces, we also remove empty classes.\n */\nconst createClass = function(classes) {\n  return classes.filter((cls) => cls).join(\" \");\n};\n\nconst initNode = function(classes, style) {\n  this.classes = classes || [];\n  this.attributes = {};\n  this.style = style || {};\n};\n\n/**\n * Convert into an HTML node\n */\nconst toNode = function(tagName) {\n  const node = document.createElement(tagName);\n\n  // Apply the class\n  node.className = createClass(this.classes);\n\n  // Apply inline styles\n  for (const style in this.style) {\n    if (Object.prototype.hasOwnProperty.call(this.style, style )) {\n      node.style[style] = this.style[style];\n    }\n  }\n\n  // Apply attributes\n  for (const attr in this.attributes) {\n    if (Object.prototype.hasOwnProperty.call(this.attributes, attr )) {\n      node.setAttribute(attr, this.attributes[attr]);\n    }\n  }\n\n  // Append the children, also as HTML nodes\n  for (let i = 0; i < this.children.length; i++) {\n    node.appendChild(this.children[i].toNode());\n  }\n\n  return node;\n};\n\n/**\n * Convert into an HTML markup string\n */\nconst toMarkup = function(tagName) {\n  let markup = `<${tagName}`;\n\n  // Add the class\n  if (this.classes.length) {\n    markup += ` class=\"${utils.escape(createClass(this.classes))}\"`;\n  }\n\n  let styles = \"\";\n\n  // Add the styles, after hyphenation\n  for (const style in this.style) {\n    if (Object.prototype.hasOwnProperty.call(this.style, style )) {\n      styles += `${utils.hyphenate(style)}:${this.style[style]};`;\n    }\n  }\n\n  if (styles) {\n    markup += ` style=\"${styles}\"`;\n  }\n\n  // Add the attributes\n  for (const attr in this.attributes) {\n    if (Object.prototype.hasOwnProperty.call(this.attributes, attr )) {\n      markup += ` ${attr}=\"${utils.escape(this.attributes[attr])}\"`;\n    }\n  }\n\n  markup += \">\";\n\n  // Add the markup of the children, also as markup\n  for (let i = 0; i < this.children.length; i++) {\n    markup += this.children[i].toMarkup();\n  }\n\n  markup += `</${tagName}>`;\n\n  return markup;\n};\n\n/**\n * This node represents a span node, with a className, a list of children, and\n * an inline style.\n *\n */\nclass Span {\n  constructor(classes, children, style) {\n    initNode.call(this, classes, style);\n    this.children = children || [];\n  }\n\n  setAttribute(attribute, value) {\n    this.attributes[attribute] = value;\n  }\n\n  toNode() {\n    return toNode.call(this, \"span\");\n  }\n\n  toMarkup() {\n    return toMarkup.call(this, \"span\");\n  }\n}\n\nlet TextNode$1 = class TextNode {\n  constructor(text) {\n    this.text = text;\n  }\n  toNode() {\n    return document.createTextNode(this.text);\n  }\n  toMarkup() {\n    return utils.escape(this.text);\n  }\n};\n\n// Create an <a href=\"\u2026\"> node.\nclass AnchorNode {\n  constructor(href, classes, children) {\n    this.href = href;\n    this.classes = classes;\n    this.children = children || [];\n  }\n\n  toNode() {\n    const node = document.createElement(\"a\");\n    node.setAttribute(\"href\", this.href);\n    if (this.classes.length > 0) {\n      node.className = createClass(this.classes);\n    }\n    for (let i = 0; i < this.children.length; i++) {\n      node.appendChild(this.children[i].toNode());\n    }\n    return node\n  }\n\n  toMarkup() {\n    let markup = `<a href='${utils.escape(this.href)}'`;\n    if (this.classes.length > 0) {\n      markup += ` class=\"${utils.escape(createClass(this.classes))}\"`;\n    }\n    markup += \">\";\n    for (let i = 0; i < this.children.length; i++) {\n      markup += this.children[i].toMarkup();\n    }\n    markup += \"</a>\";\n    return markup\n  }\n}\n\n/*\n * This node represents an image embed (<img>) element.\n */\nclass Img {\n  constructor(src, alt, style) {\n    this.alt = alt;\n    this.src = src;\n    this.classes = [\"mord\"];\n    this.style = style;\n  }\n\n  hasClass(className) {\n    return this.classes.includes(className);\n  }\n\n  toNode() {\n    const node = document.createElement(\"img\");\n    node.src = this.src;\n    node.alt = this.alt;\n    node.className = \"mord\";\n\n    // Apply inline styles\n    for (const style in this.style) {\n      if (Object.prototype.hasOwnProperty.call(this.style, style )) {\n        node.style[style] = this.style[style];\n      }\n    }\n\n    return node;\n  }\n\n  toMarkup() {\n    let markup = `<img src='${this.src}' alt='${this.alt}'`;\n\n    // Add the styles, after hyphenation\n    let styles = \"\";\n    for (const style in this.style) {\n      if (Object.prototype.hasOwnProperty.call(this.style, style )) {\n        styles += `${utils.hyphenate(style)}:${this.style[style]};`;\n      }\n    }\n    if (styles) {\n      markup += ` style=\"${utils.escape(styles)}\"`;\n    }\n\n    markup += \">\";\n    return markup;\n  }\n}\n\n//\n/**\n * These objects store data about MathML nodes.\n * The `toNode` and `toMarkup` functions  create namespaced DOM nodes and\n * HTML text markup respectively.\n */\n\n\nfunction newDocumentFragment(children) {\n  return new DocumentFragment(children);\n}\n\n/**\n * This node represents a general purpose MathML node of any type,\n * for example, `\"mo\"` or `\"mspace\"`, corresponding to `<mo>` and\n * `<mspace>` tags).\n */\nclass MathNode {\n  constructor(type, children, classes, style) {\n    this.type = type;\n    this.attributes = {};\n    this.children = children || [];\n    this.classes = classes || [];\n    this.style = style || {};   // Used for <mstyle> elements\n    this.label = \"\";\n  }\n\n  /**\n   * Sets an attribute on a MathML node. MathML depends on attributes to convey a\n   * semantic content, so this is used heavily.\n   */\n  setAttribute(name, value) {\n    this.attributes[name] = value;\n  }\n\n  /**\n   * Gets an attribute on a MathML node.\n   */\n  getAttribute(name) {\n    return this.attributes[name];\n  }\n\n  setLabel(value) {\n    this.label = value;\n  }\n\n  /**\n   * Converts the math node into a MathML-namespaced DOM element.\n   */\n  toNode() {\n    const node = document.createElementNS(\"http://www.w3.org/1998/Math/MathML\", this.type);\n\n    for (const attr in this.attributes) {\n      if (Object.prototype.hasOwnProperty.call(this.attributes, attr)) {\n        node.setAttribute(attr, this.attributes[attr]);\n      }\n    }\n\n    if (this.classes.length > 0) {\n      node.className = createClass(this.classes);\n    }\n\n    // Apply inline styles\n    for (const style in this.style) {\n      if (Object.prototype.hasOwnProperty.call(this.style, style )) {\n        node.style[style] = this.style[style];\n      }\n    }\n\n    for (let i = 0; i < this.children.length; i++) {\n      node.appendChild(this.children[i].toNode());\n    }\n\n    return node;\n  }\n\n  /**\n   * Converts the math node into an HTML markup string.\n   */\n  toMarkup() {\n    let markup = \"<\" + this.type;\n\n    // Add the attributes\n    for (const attr in this.attributes) {\n      if (Object.prototype.hasOwnProperty.call(this.attributes, attr)) {\n        markup += \" \" + attr + '=\"';\n        markup += utils.escape(this.attributes[attr]);\n        markup += '\"';\n      }\n    }\n\n    if (this.classes.length > 0) {\n      markup += ` class=\"${utils.escape(createClass(this.classes))}\"`;\n    }\n\n    let styles = \"\";\n\n    // Add the styles, after hyphenation\n    for (const style in this.style) {\n      if (Object.prototype.hasOwnProperty.call(this.style, style )) {\n        styles += `${utils.hyphenate(style)}:${this.style[style]};`;\n      }\n    }\n\n    if (styles) {\n      markup += ` style=\"${styles}\"`;\n    }\n\n    markup += \">\";\n\n    for (let i = 0; i < this.children.length; i++) {\n      markup += this.children[i].toMarkup();\n    }\n\n    markup += \"</\" + this.type + \">\";\n\n    return markup;\n  }\n\n  /**\n   * Converts the math node into a string, similar to innerText, but escaped.\n   */\n  toText() {\n    return this.children.map((child) => child.toText()).join(\"\");\n  }\n}\n\n/**\n * This node represents a piece of text.\n */\nclass TextNode {\n  constructor(text) {\n    this.text = text;\n  }\n\n  /**\n   * Converts the text node into a DOM text node.\n   */\n  toNode() {\n    return document.createTextNode(this.text);\n  }\n\n  /**\n   * Converts the text node into escaped HTML markup\n   * (representing the text itself).\n   */\n  toMarkup() {\n    return utils.escape(this.toText());\n  }\n\n  /**\n   * Converts the text node into a string\n   * (representing the text itself).\n   */\n  toText() {\n    return this.text;\n  }\n}\n\n// Do not make an <mrow> the only child of a <mstyle>.\n// An <mstyle> acts as its own implicit <mrow>.\nconst wrapWithMstyle = expression => {\n  let node;\n  if (expression.length === 1 && expression[0].type === \"mrow\") {\n    node = expression.pop();\n    node.type = \"mstyle\";\n  } else {\n    node = new MathNode(\"mstyle\", expression);\n  }\n  return node\n};\n\nvar mathMLTree = {\n  MathNode,\n  TextNode,\n  newDocumentFragment\n};\n\n/**\n * This file provides support for building horizontal stretchy elements.\n */\n\n\n// TODO: Remove when Chromium stretches \\widetilde & \\widehat\nconst estimatedWidth = node => {\n  let width = 0;\n  if (node.body && Array.isArray(node.body)) {\n    for (const item of node.body) {\n      width += estimatedWidth(item);\n    }\n  } else if (node.body) {\n    width += estimatedWidth(node.body);\n  } else if (node.type === \"supsub\") {\n    width += estimatedWidth(node.base);\n    if (node.sub) { width += 0.7 * estimatedWidth(node.sub); }\n    if (node.sup) { width += 0.7 * estimatedWidth(node.sup); }\n  } else if (node.type === \"mathord\" || node.type === \"textord\") {\n    for (const ch of node.text.split('')) {\n      const codePoint = ch.codePointAt(0);\n      if ((0x60 < codePoint && codePoint < 0x7B) || (0x03B0 < codePoint && codePoint < 0x3CA)) {\n        width += 0.56; // lower case latin or greek. Use advance width of letter n\n      } else if (0x2F < codePoint && codePoint < 0x3A) {\n        width += 0.50; // numerals.\n      } else {\n        width += 0.92; // advance width of letter M\n      }\n    }\n  } else {\n    width += 1.0;\n  }\n  return width\n};\n\nconst stretchyCodePoint = {\n  widehat: \"^\",\n  widecheck: \"\u02C7\",\n  widetilde: \"~\",\n  wideparen: \"\u23DC\", // \\u23dc\n  utilde: \"~\",\n  overleftarrow: \"\\u2190\",\n  underleftarrow: \"\\u2190\",\n  xleftarrow: \"\\u2190\",\n  overrightarrow: \"\\u2192\",\n  underrightarrow: \"\\u2192\",\n  xrightarrow: \"\\u2192\",\n  underbrace: \"\\u23df\",\n  overbrace: \"\\u23de\",\n  overgroup: \"\\u23e0\",\n  overparen: \"\u23DC\",\n  undergroup: \"\\u23e1\",\n  underparen: \"\\u23dd\",\n  overleftrightarrow: \"\\u2194\",\n  underleftrightarrow: \"\\u2194\",\n  xleftrightarrow: \"\\u2194\",\n  Overrightarrow: \"\\u21d2\",\n  xRightarrow: \"\\u21d2\",\n  overleftharpoon: \"\\u21bc\",\n  xleftharpoonup: \"\\u21bc\",\n  overrightharpoon: \"\\u21c0\",\n  xrightharpoonup: \"\\u21c0\",\n  xLeftarrow: \"\\u21d0\",\n  xLeftrightarrow: \"\\u21d4\",\n  xhookleftarrow: \"\\u21a9\",\n  xhookrightarrow: \"\\u21aa\",\n  xmapsto: \"\\u21a6\",\n  xrightharpoondown: \"\\u21c1\",\n  xleftharpoondown: \"\\u21bd\",\n  xtwoheadleftarrow: \"\\u219e\",\n  xtwoheadrightarrow: \"\\u21a0\",\n  xlongequal: \"=\",\n  xrightleftarrows: \"\\u21c4\",\n  yields: \"\\u2192\",\n  yieldsLeft: \"\\u2190\",\n  mesomerism: \"\\u2194\",\n  longrightharpoonup: \"\\u21c0\",\n  longleftharpoondown: \"\\u21bd\",\n  eqrightharpoonup: \"\\u21c0\",\n  eqleftharpoondown: \"\\u21bd\",\n  \"\\\\cdrightarrow\": \"\\u2192\",\n  \"\\\\cdleftarrow\": \"\\u2190\",\n  \"\\\\cdlongequal\": \"=\"\n};\n\nconst mathMLnode = function(label) {\n  const child = new mathMLTree.TextNode(stretchyCodePoint[label.slice(1)]);\n  const node = new mathMLTree.MathNode(\"mo\", [child]);\n  node.setAttribute(\"stretchy\", \"true\");\n  return node\n};\n\nconst crookedWides = [\"\\\\widetilde\", \"\\\\widehat\", \"\\\\widecheck\", \"\\\\utilde\"];\n\n// TODO: Remove when Chromium stretches \\widetilde & \\widehat\nconst accentNode = (group) => {\n  const mo = mathMLnode(group.label);\n  if (crookedWides.includes(group.label)) {\n    const width = estimatedWidth(group.base);\n    if (1 < width && width < 1.6) {\n      mo.classes.push(\"tml-crooked-2\");\n    } else if (1.6 <= width && width < 2.5) {\n      mo.classes.push(\"tml-crooked-3\");\n    } else if (2.5 <= width) {\n      mo.classes.push(\"tml-crooked-4\");\n    }\n  }\n  return mo\n};\n\nvar stretchy = {\n  mathMLnode,\n  accentNode\n};\n\n/**\n * This file holds a list of all no-argument functions and single-character\n * symbols (like 'a' or ';').\n *\n * For each of the symbols, there are two properties they can have:\n * - group (required): the ParseNode group type the symbol should have (i.e.\n     \"textord\", \"mathord\", etc).\n * - replace: the character that this symbol or function should be\n *   replaced with (i.e. \"\\phi\" has a replace value of \"\\u03d5\", the phi\n *   character in the main font).\n *\n * The outermost map in the table indicates what mode the symbols should be\n * accepted in (e.g. \"math\" or \"text\").\n */\n\n// Some of these have a \"-token\" suffix since these are also used as `ParseNode`\n// types for raw text tokens, and we want to avoid conflicts with higher-level\n// `ParseNode` types. These `ParseNode`s are constructed within `Parser` by\n// looking up the `symbols` map.\nconst ATOMS = {\n  bin: 1,\n  close: 1,\n  inner: 1,\n  open: 1,\n  punct: 1,\n  rel: 1\n};\nconst NON_ATOMS = {\n  \"accent-token\": 1,\n  mathord: 1,\n  \"op-token\": 1,\n  spacing: 1,\n  textord: 1\n};\n\nconst symbols = {\n  math: {},\n  text: {}\n};\n\n/** `acceptUnicodeChar = true` is only applicable if `replace` is set. */\nfunction defineSymbol(mode, group, replace, name, acceptUnicodeChar) {\n  symbols[mode][name] = { group, replace };\n\n  if (acceptUnicodeChar && replace) {\n    symbols[mode][replace] = symbols[mode][name];\n  }\n}\n\n// Some abbreviations for commonly used strings.\n// This helps minify the code, and also spotting typos using jshint.\n\n// modes:\nconst math = \"math\";\nconst text = \"text\";\n\n// groups:\nconst accent = \"accent-token\";\nconst bin = \"bin\";\nconst close = \"close\";\nconst inner = \"inner\";\nconst mathord = \"mathord\";\nconst op = \"op-token\";\nconst open = \"open\";\nconst punct = \"punct\";\nconst rel = \"rel\";\nconst spacing = \"spacing\";\nconst textord = \"textord\";\n\n// Now comes the symbol table\n\n// Relation Symbols\ndefineSymbol(math, rel, \"\\u2261\", \"\\\\equiv\", true);\ndefineSymbol(math, rel, \"\\u227a\", \"\\\\prec\", true);\ndefineSymbol(math, rel, \"\\u227b\", \"\\\\succ\", true);\ndefineSymbol(math, rel, \"\\u223c\", \"\\\\sim\", true);\ndefineSymbol(math, rel, \"\\u27c2\", \"\\\\perp\", true);\ndefineSymbol(math, rel, \"\\u2aaf\", \"\\\\preceq\", true);\ndefineSymbol(math, rel, \"\\u2ab0\", \"\\\\succeq\", true);\ndefineSymbol(math, rel, \"\\u2243\", \"\\\\simeq\", true);\ndefineSymbol(math, rel, \"\\u224c\", \"\\\\backcong\", true);\ndefineSymbol(math, rel, \"|\", \"\\\\mid\", true);\ndefineSymbol(math, rel, \"\\u226a\", \"\\\\ll\", true);\ndefineSymbol(math, rel, \"\\u226b\", \"\\\\gg\", true);\ndefineSymbol(math, rel, \"\\u224d\", \"\\\\asymp\", true);\ndefineSymbol(math, rel, \"\\u2225\", \"\\\\parallel\");\ndefineSymbol(math, rel, \"\\u2323\", \"\\\\smile\", true);\ndefineSymbol(math, rel, \"\\u2291\", \"\\\\sqsubseteq\", true);\ndefineSymbol(math, rel, \"\\u2292\", \"\\\\sqsupseteq\", true);\ndefineSymbol(math, rel, \"\\u2250\", \"\\\\doteq\", true);\ndefineSymbol(math, rel, \"\\u2322\", \"\\\\frown\", true);\ndefineSymbol(math, rel, \"\\u220b\", \"\\\\ni\", true);\ndefineSymbol(math, rel, \"\\u220c\", \"\\\\notni\", true);\ndefineSymbol(math, rel, \"\\u221d\", \"\\\\propto\", true);\ndefineSymbol(math, rel, \"\\u22a2\", \"\\\\vdash\", true);\ndefineSymbol(math, rel, \"\\u22a3\", \"\\\\dashv\", true);\ndefineSymbol(math, rel, \"\\u220b\", \"\\\\owns\");\ndefineSymbol(math, rel, \"\\u2258\", \"\\\\arceq\", true);\ndefineSymbol(math, rel, \"\\u2259\", \"\\\\wedgeq\", true);\ndefineSymbol(math, rel, \"\\u225a\", \"\\\\veeeq\", true);\ndefineSymbol(math, rel, \"\\u225b\", \"\\\\stareq\", true);\ndefineSymbol(math, rel, \"\\u225d\", \"\\\\eqdef\", true);\ndefineSymbol(math, rel, \"\\u225e\", \"\\\\measeq\", true);\ndefineSymbol(math, rel, \"\\u225f\", \"\\\\questeq\", true);\ndefineSymbol(math, rel, \"\\u2260\", \"\\\\ne\", true);\ndefineSymbol(math, rel, \"\\u2260\", \"\\\\neq\");\n// unicodemath\ndefineSymbol(math, rel, \"\\u2a75\", \"\\\\eqeq\", true);\ndefineSymbol(math, rel, \"\\u2a76\", \"\\\\eqeqeq\", true);\n// mathtools.sty\ndefineSymbol(math, rel, \"\\u2237\", \"\\\\dblcolon\", true);\ndefineSymbol(math, rel, \"\\u2254\", \"\\\\coloneqq\", true);\ndefineSymbol(math, rel, \"\\u2255\", \"\\\\eqqcolon\", true);\ndefineSymbol(math, rel, \"\\u2239\", \"\\\\eqcolon\", true);\ndefineSymbol(math, rel, \"\\u2A74\", \"\\\\Coloneqq\", true);\n\n// Punctuation\ndefineSymbol(math, punct, \"\\u002e\", \"\\\\ldotp\");\ndefineSymbol(math, punct, \"\\u00b7\", \"\\\\cdotp\");\n\n// Misc Symbols\ndefineSymbol(math, textord, \"\\u0023\", \"\\\\#\");\ndefineSymbol(text, textord, \"\\u0023\", \"\\\\#\");\ndefineSymbol(math, textord, \"\\u0026\", \"\\\\&\");\ndefineSymbol(text, textord, \"\\u0026\", \"\\\\&\");\ndefineSymbol(math, textord, \"\\u2135\", \"\\\\aleph\", true);\ndefineSymbol(math, textord, \"\\u2200\", \"\\\\forall\", true);\ndefineSymbol(math, textord, \"\\u210f\", \"\\\\hbar\", true);\ndefineSymbol(math, textord, \"\\u2203\", \"\\\\exists\", true);\n// \u2207 is actually a unary operator, not binary. But this works.\ndefineSymbol(math, bin, \"\\u2207\", \"\\\\nabla\", true);\ndefineSymbol(math, textord, \"\\u266d\", \"\\\\flat\", true);\ndefineSymbol(math, textord, \"\\u2113\", \"\\\\ell\", true);\ndefineSymbol(math, textord, \"\\u266e\", \"\\\\natural\", true);\ndefineSymbol(math, textord, \"\u212B\", \"\\\\Angstrom\", true);\ndefineSymbol(text, textord, \"\u212B\", \"\\\\Angstrom\", true);\ndefineSymbol(math, textord, \"\\u2663\", \"\\\\clubsuit\", true);\ndefineSymbol(math, textord, \"\\u2667\", \"\\\\varclubsuit\", true);\ndefineSymbol(math, textord, \"\\u2118\", \"\\\\wp\", true);\ndefineSymbol(math, textord, \"\\u266f\", \"\\\\sharp\", true);\ndefineSymbol(math, textord, \"\\u2662\", \"\\\\diamondsuit\", true);\ndefineSymbol(math, textord, \"\\u2666\", \"\\\\vardiamondsuit\", true);\ndefineSymbol(math, textord, \"\\u211c\", \"\\\\Re\", true);\ndefineSymbol(math, textord, \"\\u2661\", \"\\\\heartsuit\", true);\ndefineSymbol(math, textord, \"\\u2665\", \"\\\\varheartsuit\", true);\ndefineSymbol(math, textord, \"\\u2111\", \"\\\\Im\", true);\ndefineSymbol(math, textord, \"\\u2660\", \"\\\\spadesuit\", true);\ndefineSymbol(math, textord, \"\\u2664\", \"\\\\varspadesuit\", true);\ndefineSymbol(math, textord, \"\\u2640\", \"\\\\female\", true);\ndefineSymbol(math, textord, \"\\u2642\", \"\\\\male\", true);\ndefineSymbol(math, textord, \"\\u00a7\", \"\\\\S\", true);\ndefineSymbol(text, textord, \"\\u00a7\", \"\\\\S\");\ndefineSymbol(math, textord, \"\\u00b6\", \"\\\\P\", true);\ndefineSymbol(text, textord, \"\\u00b6\", \"\\\\P\");\ndefineSymbol(text, textord, \"\\u263a\", \"\\\\smiley\", true);\ndefineSymbol(math, textord, \"\\u263a\", \"\\\\smiley\", true);\n\n// Math and Text\ndefineSymbol(math, textord, \"\\u2020\", \"\\\\dag\");\ndefineSymbol(text, textord, \"\\u2020\", \"\\\\dag\");\ndefineSymbol(text, textord, \"\\u2020\", \"\\\\textdagger\");\ndefineSymbol(math, textord, \"\\u2021\", \"\\\\ddag\");\ndefineSymbol(text, textord, \"\\u2021\", \"\\\\ddag\");\ndefineSymbol(text, textord, \"\\u2021\", \"\\\\textdaggerdbl\");\n\n// Large Delimiters\ndefineSymbol(math, close, \"\\u23b1\", \"\\\\rmoustache\", true);\ndefineSymbol(math, open, \"\\u23b0\", \"\\\\lmoustache\", true);\ndefineSymbol(math, close, \"\\u27ef\", \"\\\\rgroup\", true);\ndefineSymbol(math, open, \"\\u27ee\", \"\\\\lgroup\", true);\n\n// Binary Operators\ndefineSymbol(math, bin, \"\\u2213\", \"\\\\mp\", true);\ndefineSymbol(math, bin, \"\\u2296\", \"\\\\ominus\", true);\ndefineSymbol(math, bin, \"\\u228e\", \"\\\\uplus\", true);\ndefineSymbol(math, bin, \"\\u2293\", \"\\\\sqcap\", true);\ndefineSymbol(math, bin, \"\\u2217\", \"\\\\ast\");\ndefineSymbol(math, bin, \"\\u2294\", \"\\\\sqcup\", true);\ndefineSymbol(math, bin, \"\\u25ef\", \"\\\\bigcirc\", true);\ndefineSymbol(math, bin, \"\\u2219\", \"\\\\bullet\", true);\ndefineSymbol(math, bin, \"\\u2021\", \"\\\\ddagger\");\ndefineSymbol(math, bin, \"\\u2240\", \"\\\\wr\", true);\ndefineSymbol(math, bin, \"\\u2a3f\", \"\\\\amalg\");\ndefineSymbol(math, bin, \"\\u0026\", \"\\\\And\"); // from amsmath\ndefineSymbol(math, bin, \"\\u2AFD\", \"\\\\sslash\", true); // from stmaryrd\n\n// Arrow Symbols\ndefineSymbol(math, rel, \"\\u27f5\", \"\\\\longleftarrow\", true);\ndefineSymbol(math, rel, \"\\u21d0\", \"\\\\Leftarrow\", true);\ndefineSymbol(math, rel, \"\\u27f8\", \"\\\\Longleftarrow\", true);\ndefineSymbol(math, rel, \"\\u27f6\", \"\\\\longrightarrow\", true);\ndefineSymbol(math, rel, \"\\u21d2\", \"\\\\Rightarrow\", true);\ndefineSymbol(math, rel, \"\\u27f9\", \"\\\\Longrightarrow\", true);\ndefineSymbol(math, rel, \"\\u2194\", \"\\\\leftrightarrow\", true);\ndefineSymbol(math, rel, \"\\u27f7\", \"\\\\longleftrightarrow\", true);\ndefineSymbol(math, rel, \"\\u21d4\", \"\\\\Leftrightarrow\", true);\ndefineSymbol(math, rel, \"\\u27fa\", \"\\\\Longleftrightarrow\", true);\ndefineSymbol(math, rel, \"\\u21a4\", \"\\\\mapsfrom\", true);\ndefineSymbol(math, rel, \"\\u21a6\", \"\\\\mapsto\", true);\ndefineSymbol(math, rel, \"\\u27fc\", \"\\\\longmapsto\", true);\ndefineSymbol(math, rel, \"\\u2197\", \"\\\\nearrow\", true);\ndefineSymbol(math, rel, \"\\u21a9\", \"\\\\hookleftarrow\", true);\ndefineSymbol(math, rel, \"\\u21aa\", \"\\\\hookrightarrow\", true);\ndefineSymbol(math, rel, \"\\u2198\", \"\\\\searrow\", true);\ndefineSymbol(math, rel, \"\\u21bc\", \"\\\\leftharpoonup\", true);\ndefineSymbol(math, rel, \"\\u21c0\", \"\\\\rightharpoonup\", true);\ndefineSymbol(math, rel, \"\\u2199\", \"\\\\swarrow\", true);\ndefineSymbol(math, rel, \"\\u21bd\", \"\\\\leftharpoondown\", true);\ndefineSymbol(math, rel, \"\\u21c1\", \"\\\\rightharpoondown\", true);\ndefineSymbol(math, rel, \"\\u2196\", \"\\\\nwarrow\", true);\ndefineSymbol(math, rel, \"\\u21cc\", \"\\\\rightleftharpoons\", true);\ndefineSymbol(math, mathord, \"\\u21af\", \"\\\\lightning\", true);\ndefineSymbol(math, mathord, \"\\u220E\", \"\\\\QED\", true);\ndefineSymbol(math, mathord, \"\\u2030\", \"\\\\permil\", true);\ndefineSymbol(text, textord, \"\\u2030\", \"\\\\permil\");\ndefineSymbol(math, mathord, \"\\u2609\", \"\\\\astrosun\", true);\ndefineSymbol(math, mathord, \"\\u263c\", \"\\\\sun\", true);\ndefineSymbol(math, mathord, \"\\u263e\", \"\\\\leftmoon\", true);\ndefineSymbol(math, mathord, \"\\u263d\", \"\\\\rightmoon\", true);\ndefineSymbol(math, mathord, \"\\u2295\", \"\\\\Earth\");\n\n// AMS Negated Binary Relations\ndefineSymbol(math, rel, \"\\u226e\", \"\\\\nless\", true);\n// Symbol names preceeded by \"@\" each have a corresponding macro.\ndefineSymbol(math, rel, \"\\u2a87\", \"\\\\lneq\", true);\ndefineSymbol(math, rel, \"\\u2268\", \"\\\\lneqq\", true);\ndefineSymbol(math, rel, \"\\u2268\\ufe00\", \"\\\\lvertneqq\");\ndefineSymbol(math, rel, \"\\u22e6\", \"\\\\lnsim\", true);\ndefineSymbol(math, rel, \"\\u2a89\", \"\\\\lnapprox\", true);\ndefineSymbol(math, rel, \"\\u2280\", \"\\\\nprec\", true);\n// unicode-math maps \\u22e0 to \\npreccurlyeq. We'll use the AMS synonym.\ndefineSymbol(math, rel, \"\\u22e0\", \"\\\\npreceq\", true);\ndefineSymbol(math, rel, \"\\u22e8\", \"\\\\precnsim\", true);\ndefineSymbol(math, rel, \"\\u2ab9\", \"\\\\precnapprox\", true);\ndefineSymbol(math, rel, \"\\u2241\", \"\\\\nsim\", true);\ndefineSymbol(math, rel, \"\\u2224\", \"\\\\nmid\", true);\ndefineSymbol(math, rel, \"\\u2224\", \"\\\\nshortmid\");\ndefineSymbol(math, rel, \"\\u22ac\", \"\\\\nvdash\", true);\ndefineSymbol(math, rel, \"\\u22ad\", \"\\\\nvDash\", true);\ndefineSymbol(math, rel, \"\\u22ea\", \"\\\\ntriangleleft\");\ndefineSymbol(math, rel, \"\\u22ec\", \"\\\\ntrianglelefteq\", true);\ndefineSymbol(math, rel, \"\\u2284\", \"\\\\nsubset\", true);\ndefineSymbol(math, rel, \"\\u2285\", \"\\\\nsupset\", true);\ndefineSymbol(math, rel, \"\\u228a\", \"\\\\subsetneq\", true);\ndefineSymbol(math, rel, \"\\u228a\\ufe00\", \"\\\\varsubsetneq\");\ndefineSymbol(math, rel, \"\\u2acb\", \"\\\\subsetneqq\", true);\ndefineSymbol(math, rel, \"\\u2acb\\ufe00\", \"\\\\varsubsetneqq\");\ndefineSymbol(math, rel, \"\\u226f\", \"\\\\ngtr\", true);\ndefineSymbol(math, rel, \"\\u2a88\", \"\\\\gneq\", true);\ndefineSymbol(math, rel, \"\\u2269\", \"\\\\gneqq\", true);\ndefineSymbol(math, rel, \"\\u2269\\ufe00\", \"\\\\gvertneqq\");\ndefineSymbol(math, rel, \"\\u22e7\", \"\\\\gnsim\", true);\ndefineSymbol(math, rel, \"\\u2a8a\", \"\\\\gnapprox\", true);\ndefineSymbol(math, rel, \"\\u2281\", \"\\\\nsucc\", true);\n// unicode-math maps \\u22e1 to \\nsucccurlyeq. We'll use the AMS synonym.\ndefineSymbol(math, rel, \"\\u22e1\", \"\\\\nsucceq\", true);\ndefineSymbol(math, rel, \"\\u22e9\", \"\\\\succnsim\", true);\ndefineSymbol(math, rel, \"\\u2aba\", \"\\\\succnapprox\", true);\n// unicode-math maps \\u2246 to \\simneqq. We'll use the AMS synonym.\ndefineSymbol(math, rel, \"\\u2246\", \"\\\\ncong\", true);\ndefineSymbol(math, rel, \"\\u2226\", \"\\\\nparallel\", true);\ndefineSymbol(math, rel, \"\\u2226\", \"\\\\nshortparallel\");\ndefineSymbol(math, rel, \"\\u22af\", \"\\\\nVDash\", true);\ndefineSymbol(math, rel, \"\\u22eb\", \"\\\\ntriangleright\");\ndefineSymbol(math, rel, \"\\u22ed\", \"\\\\ntrianglerighteq\", true);\ndefineSymbol(math, rel, \"\\u228b\", \"\\\\supsetneq\", true);\ndefineSymbol(math, rel, \"\\u228b\", \"\\\\varsupsetneq\");\ndefineSymbol(math, rel, \"\\u2acc\", \"\\\\supsetneqq\", true);\ndefineSymbol(math, rel, \"\\u2acc\\ufe00\", \"\\\\varsupsetneqq\");\ndefineSymbol(math, rel, \"\\u22ae\", \"\\\\nVdash\", true);\ndefineSymbol(math, rel, \"\\u2ab5\", \"\\\\precneqq\", true);\ndefineSymbol(math, rel, \"\\u2ab6\", \"\\\\succneqq\", true);\ndefineSymbol(math, bin, \"\\u22b4\", \"\\\\unlhd\");\ndefineSymbol(math, bin, \"\\u22b5\", \"\\\\unrhd\");\n\n// AMS Negated Arrows\ndefineSymbol(math, rel, \"\\u219a\", \"\\\\nleftarrow\", true);\ndefineSymbol(math, rel, \"\\u219b\", \"\\\\nrightarrow\", true);\ndefineSymbol(math, rel, \"\\u21cd\", \"\\\\nLeftarrow\", true);\ndefineSymbol(math, rel, \"\\u21cf\", \"\\\\nRightarrow\", true);\ndefineSymbol(math, rel, \"\\u21ae\", \"\\\\nleftrightarrow\", true);\ndefineSymbol(math, rel, \"\\u21ce\", \"\\\\nLeftrightarrow\", true);\n\n// AMS Misc\ndefineSymbol(math, rel, \"\\u25b3\", \"\\\\vartriangle\");\ndefineSymbol(math, textord, \"\\u210f\", \"\\\\hslash\");\ndefineSymbol(math, textord, \"\\u25bd\", \"\\\\triangledown\");\ndefineSymbol(math, textord, \"\\u25ca\", \"\\\\lozenge\");\ndefineSymbol(math, textord, \"\\u24c8\", \"\\\\circledS\");\ndefineSymbol(math, textord, \"\\u00ae\", \"\\\\circledR\", true);\ndefineSymbol(text, textord, \"\\u00ae\", \"\\\\circledR\");\ndefineSymbol(text, textord, \"\\u00ae\", \"\\\\textregistered\");\ndefineSymbol(math, textord, \"\\u2221\", \"\\\\measuredangle\", true);\ndefineSymbol(math, textord, \"\\u2204\", \"\\\\nexists\");\ndefineSymbol(math, textord, \"\\u2127\", \"\\\\mho\");\ndefineSymbol(math, textord, \"\\u2132\", \"\\\\Finv\", true);\ndefineSymbol(math, textord, \"\\u2141\", \"\\\\Game\", true);\ndefineSymbol(math, textord, \"\\u2035\", \"\\\\backprime\");\ndefineSymbol(math, textord, \"\\u2036\", \"\\\\backdprime\");\ndefineSymbol(math, textord, \"\\u2037\", \"\\\\backtrprime\");\ndefineSymbol(math, textord, \"\\u25b2\", \"\\\\blacktriangle\");\ndefineSymbol(math, textord, \"\\u25bc\", \"\\\\blacktriangledown\");\ndefineSymbol(math, textord, \"\\u25a0\", \"\\\\blacksquare\");\ndefineSymbol(math, textord, \"\\u29eb\", \"\\\\blacklozenge\");\ndefineSymbol(math, textord, \"\\u2605\", \"\\\\bigstar\");\ndefineSymbol(math, textord, \"\\u2222\", \"\\\\sphericalangle\", true);\ndefineSymbol(math, textord, \"\\u2201\", \"\\\\complement\", true);\ndefineSymbol(math, textord, \"\\u2571\", \"\\\\diagup\");\ndefineSymbol(math, textord, \"\\u2572\", \"\\\\diagdown\");\ndefineSymbol(math, textord, \"\\u25a1\", \"\\\\square\");\ndefineSymbol(math, textord, \"\\u25a1\", \"\\\\Box\");\ndefineSymbol(math, textord, \"\\u25ca\", \"\\\\Diamond\");\n// unicode-math maps U+A5 to \\mathyen. We map to AMS function \\yen\ndefineSymbol(math, textord, \"\\u00a5\", \"\\\\yen\", true);\ndefineSymbol(text, textord, \"\\u00a5\", \"\\\\yen\", true);\ndefineSymbol(math, textord, \"\\u2713\", \"\\\\checkmark\", true);\ndefineSymbol(text, textord, \"\\u2713\", \"\\\\checkmark\");\ndefineSymbol(math, textord, \"\\u2717\", \"\\\\ballotx\", true);\ndefineSymbol(text, textord, \"\\u2717\", \"\\\\ballotx\");\ndefineSymbol(text, textord, \"\\u2022\", \"\\\\textbullet\");\n\n// AMS Hebrew\ndefineSymbol(math, textord, \"\\u2136\", \"\\\\beth\", true);\ndefineSymbol(math, textord, \"\\u2138\", \"\\\\daleth\", true);\ndefineSymbol(math, textord, \"\\u2137\", \"\\\\gimel\", true);\n\n// AMS Greek\ndefineSymbol(math, textord, \"\\u03dd\", \"\\\\digamma\", true);\ndefineSymbol(math, textord, \"\\u03f0\", \"\\\\varkappa\");\n\n// AMS Delimiters\ndefineSymbol(math, open, \"\\u231C\", \"\\\\ulcorner\", true);\ndefineSymbol(math, close, \"\\u231D\", \"\\\\urcorner\", true);\ndefineSymbol(math, open, \"\\u231E\", \"\\\\llcorner\", true);\ndefineSymbol(math, close, \"\\u231F\", \"\\\\lrcorner\", true);\n\n// AMS Binary Relations\ndefineSymbol(math, rel, \"\\u2266\", \"\\\\leqq\", true);\ndefineSymbol(math, rel, \"\\u2a7d\", \"\\\\leqslant\", true);\ndefineSymbol(math, rel, \"\\u2a95\", \"\\\\eqslantless\", true);\ndefineSymbol(math, rel, \"\\u2272\", \"\\\\lesssim\", true);\ndefineSymbol(math, rel, \"\\u2a85\", \"\\\\lessapprox\", true);\ndefineSymbol(math, rel, \"\\u224a\", \"\\\\approxeq\", true);\ndefineSymbol(math, bin, \"\\u22d6\", \"\\\\lessdot\");\ndefineSymbol(math, rel, \"\\u22d8\", \"\\\\lll\", true);\ndefineSymbol(math, rel, \"\\u2276\", \"\\\\lessgtr\", true);\ndefineSymbol(math, rel, \"\\u22da\", \"\\\\lesseqgtr\", true);\ndefineSymbol(math, rel, \"\\u2a8b\", \"\\\\lesseqqgtr\", true);\ndefineSymbol(math, rel, \"\\u2251\", \"\\\\doteqdot\");\ndefineSymbol(math, rel, \"\\u2253\", \"\\\\risingdotseq\", true);\ndefineSymbol(math, rel, \"\\u2252\", \"\\\\fallingdotseq\", true);\ndefineSymbol(math, rel, \"\\u223d\", \"\\\\backsim\", true);\ndefineSymbol(math, rel, \"\\u22cd\", \"\\\\backsimeq\", true);\ndefineSymbol(math, rel, \"\\u2ac5\", \"\\\\subseteqq\", true);\ndefineSymbol(math, rel, \"\\u22d0\", \"\\\\Subset\", true);\ndefineSymbol(math, rel, \"\\u228f\", \"\\\\sqsubset\", true);\ndefineSymbol(math, rel, \"\\u227c\", \"\\\\preccurlyeq\", true);\ndefineSymbol(math, rel, \"\\u22de\", \"\\\\curlyeqprec\", true);\ndefineSymbol(math, rel, \"\\u227e\", \"\\\\precsim\", true);\ndefineSymbol(math, rel, \"\\u2ab7\", \"\\\\precapprox\", true);\ndefineSymbol(math, rel, \"\\u22b2\", \"\\\\vartriangleleft\");\ndefineSymbol(math, rel, \"\\u22b4\", \"\\\\trianglelefteq\");\ndefineSymbol(math, rel, \"\\u22a8\", \"\\\\vDash\", true);\ndefineSymbol(math, rel, \"\\u22ab\", \"\\\\VDash\", true);\ndefineSymbol(math, rel, \"\\u22aa\", \"\\\\Vvdash\", true);\ndefineSymbol(math, rel, \"\\u2323\", \"\\\\smallsmile\");\ndefineSymbol(math, rel, \"\\u2322\", \"\\\\smallfrown\");\ndefineSymbol(math, rel, \"\\u224f\", \"\\\\bumpeq\", true);\ndefineSymbol(math, rel, \"\\u224e\", \"\\\\Bumpeq\", true);\ndefineSymbol(math, rel, \"\\u2267\", \"\\\\geqq\", true);\ndefineSymbol(math, rel, \"\\u2a7e\", \"\\\\geqslant\", true);\ndefineSymbol(math, rel, \"\\u2a96\", \"\\\\eqslantgtr\", true);\ndefineSymbol(math, rel, \"\\u2273\", \"\\\\gtrsim\", true);\ndefineSymbol(math, rel, \"\\u2a86\", \"\\\\gtrapprox\", true);\ndefineSymbol(math, bin, \"\\u22d7\", \"\\\\gtrdot\");\ndefineSymbol(math, rel, \"\\u22d9\", \"\\\\ggg\", true);\ndefineSymbol(math, rel, \"\\u2277\", \"\\\\gtrless\", true);\ndefineSymbol(math, rel, \"\\u22db\", \"\\\\gtreqless\", true);\ndefineSymbol(math, rel, \"\\u2a8c\", \"\\\\gtreqqless\", true);\ndefineSymbol(math, rel, \"\\u2256\", \"\\\\eqcirc\", true);\ndefineSymbol(math, rel, \"\\u2257\", \"\\\\circeq\", true);\ndefineSymbol(math, rel, \"\\u225c\", \"\\\\triangleq\", true);\ndefineSymbol(math, rel, \"\\u223c\", \"\\\\thicksim\");\ndefineSymbol(math, rel, \"\\u2248\", \"\\\\thickapprox\");\ndefineSymbol(math, rel, \"\\u2ac6\", \"\\\\supseteqq\", true);\ndefineSymbol(math, rel, \"\\u22d1\", \"\\\\Supset\", true);\ndefineSymbol(math, rel, \"\\u2290\", \"\\\\sqsupset\", true);\ndefineSymbol(math, rel, \"\\u227d\", \"\\\\succcurlyeq\", true);\ndefineSymbol(math, rel, \"\\u22df\", \"\\\\curlyeqsucc\", true);\ndefineSymbol(math, rel, \"\\u227f\", \"\\\\succsim\", true);\ndefineSymbol(math, rel, \"\\u2ab8\", \"\\\\succapprox\", true);\ndefineSymbol(math, rel, \"\\u22b3\", \"\\\\vartriangleright\");\ndefineSymbol(math, rel, \"\\u22b5\", \"\\\\trianglerighteq\");\ndefineSymbol(math, rel, \"\\u22a9\", \"\\\\Vdash\", true);\ndefineSymbol(math, rel, \"\\u2223\", \"\\\\shortmid\");\ndefineSymbol(math, rel, \"\\u2225\", \"\\\\shortparallel\");\ndefineSymbol(math, rel, \"\\u226c\", \"\\\\between\", true);\ndefineSymbol(math, rel, \"\\u22d4\", \"\\\\pitchfork\", true);\ndefineSymbol(math, rel, \"\\u221d\", \"\\\\varpropto\");\ndefineSymbol(math, rel, \"\\u25c0\", \"\\\\blacktriangleleft\");\n// unicode-math says that \\therefore is a mathord atom.\n// We kept the amssymb atom type, which is rel.\ndefineSymbol(math, rel, \"\\u2234\", \"\\\\therefore\", true);\ndefineSymbol(math, rel, \"\\u220d\", \"\\\\backepsilon\");\ndefineSymbol(math, rel, \"\\u25b6\", \"\\\\blacktriangleright\");\n// unicode-math says that \\because is a mathord atom.\n// We kept the amssymb atom type, which is rel.\ndefineSymbol(math, rel, \"\\u2235\", \"\\\\because\", true);\ndefineSymbol(math, rel, \"\\u22d8\", \"\\\\llless\");\ndefineSymbol(math, rel, \"\\u22d9\", \"\\\\gggtr\");\ndefineSymbol(math, bin, \"\\u22b2\", \"\\\\lhd\");\ndefineSymbol(math, bin, \"\\u22b3\", \"\\\\rhd\");\ndefineSymbol(math, rel, \"\\u2242\", \"\\\\eqsim\", true);\ndefineSymbol(math, rel, \"\\u2251\", \"\\\\Doteq\", true);\ndefineSymbol(math, rel, \"\\u297d\", \"\\\\strictif\", true);\ndefineSymbol(math, rel, \"\\u297c\", \"\\\\strictfi\", true);\n\n// AMS Binary Operators\ndefineSymbol(math, bin, \"\\u2214\", \"\\\\dotplus\", true);\ndefineSymbol(math, bin, \"\\u2216\", \"\\\\smallsetminus\");\ndefineSymbol(math, bin, \"\\u22d2\", \"\\\\Cap\", true);\ndefineSymbol(math, bin, \"\\u22d3\", \"\\\\Cup\", true);\ndefineSymbol(math, bin, \"\\u2a5e\", \"\\\\doublebarwedge\", true);\ndefineSymbol(math, bin, \"\\u229f\", \"\\\\boxminus\", true);\ndefineSymbol(math, bin, \"\\u229e\", \"\\\\boxplus\", true);\ndefineSymbol(math, bin, \"\\u29C4\", \"\\\\boxslash\", true);\ndefineSymbol(math, bin, \"\\u22c7\", \"\\\\divideontimes\", true);\ndefineSymbol(math, bin, \"\\u22c9\", \"\\\\ltimes\", true);\ndefineSymbol(math, bin, \"\\u22ca\", \"\\\\rtimes\", true);\ndefineSymbol(math, bin, \"\\u22cb\", \"\\\\leftthreetimes\", true);\ndefineSymbol(math, bin, \"\\u22cc\", \"\\\\rightthreetimes\", true);\ndefineSymbol(math, bin, \"\\u22cf\", \"\\\\curlywedge\", true);\ndefineSymbol(math, bin, \"\\u22ce\", \"\\\\curlyvee\", true);\ndefineSymbol(math, bin, \"\\u229d\", \"\\\\circleddash\", true);\ndefineSymbol(math, bin, \"\\u229b\", \"\\\\circledast\", true);\ndefineSymbol(math, bin, \"\\u22ba\", \"\\\\intercal\", true);\ndefineSymbol(math, bin, \"\\u22d2\", \"\\\\doublecap\");\ndefineSymbol(math, bin, \"\\u22d3\", \"\\\\doublecup\");\ndefineSymbol(math, bin, \"\\u22a0\", \"\\\\boxtimes\", true);\ndefineSymbol(math, bin, \"\\u22c8\", \"\\\\bowtie\", true);\ndefineSymbol(math, bin, \"\\u22c8\", \"\\\\Join\");\ndefineSymbol(math, bin, \"\\u27d5\", \"\\\\leftouterjoin\", true);\ndefineSymbol(math, bin, \"\\u27d6\", \"\\\\rightouterjoin\", true);\ndefineSymbol(math, bin, \"\\u27d7\", \"\\\\fullouterjoin\", true);\n\n// stix Binary Operators\ndefineSymbol(math, bin, \"\\u2238\", \"\\\\dotminus\", true);\ndefineSymbol(math, bin, \"\\u27D1\", \"\\\\wedgedot\", true);\ndefineSymbol(math, bin, \"\\u27C7\", \"\\\\veedot\", true);\ndefineSymbol(math, bin, \"\\u2A62\", \"\\\\doublebarvee\", true);\ndefineSymbol(math, bin, \"\\u2A63\", \"\\\\veedoublebar\", true);\ndefineSymbol(math, bin, \"\\u2A5F\", \"\\\\wedgebar\", true);\ndefineSymbol(math, bin, \"\\u2A60\", \"\\\\wedgedoublebar\", true);\ndefineSymbol(math, bin, \"\\u2A54\", \"\\\\Vee\", true);\ndefineSymbol(math, bin, \"\\u2A53\", \"\\\\Wedge\", true);\ndefineSymbol(math, bin, \"\\u2A43\", \"\\\\barcap\", true);\ndefineSymbol(math, bin, \"\\u2A42\", \"\\\\barcup\", true);\ndefineSymbol(math, bin, \"\\u2A48\", \"\\\\capbarcup\", true);\ndefineSymbol(math, bin, \"\\u2A40\", \"\\\\capdot\", true);\ndefineSymbol(math, bin, \"\\u2A47\", \"\\\\capovercup\", true);\ndefineSymbol(math, bin, \"\\u2A46\", \"\\\\cupovercap\", true);\ndefineSymbol(math, bin, \"\\u2A4D\", \"\\\\closedvarcap\", true);\ndefineSymbol(math, bin, \"\\u2A4C\", \"\\\\closedvarcup\", true);\ndefineSymbol(math, bin, \"\\u2A2A\", \"\\\\minusdot\", true);\ndefineSymbol(math, bin, \"\\u2A2B\", \"\\\\minusfdots\", true);\ndefineSymbol(math, bin, \"\\u2A2C\", \"\\\\minusrdots\", true);\ndefineSymbol(math, bin, \"\\u22BB\", \"\\\\Xor\", true);\ndefineSymbol(math, bin, \"\\u22BC\", \"\\\\Nand\", true);\ndefineSymbol(math, bin, \"\\u22BD\", \"\\\\Nor\", true);\ndefineSymbol(math, bin, \"\\u22BD\", \"\\\\barvee\");\ndefineSymbol(math, bin, \"\\u2AF4\", \"\\\\interleave\", true);\ndefineSymbol(math, bin, \"\\u29E2\", \"\\\\shuffle\", true);\ndefineSymbol(math, bin, \"\\u2AF6\", \"\\\\threedotcolon\", true);\ndefineSymbol(math, bin, \"\\u2982\", \"\\\\typecolon\", true);\ndefineSymbol(math, bin, \"\\u223E\", \"\\\\invlazys\", true);\ndefineSymbol(math, bin, \"\\u2A4B\", \"\\\\twocaps\", true);\ndefineSymbol(math, bin, \"\\u2A4A\", \"\\\\twocups\", true);\ndefineSymbol(math, bin, \"\\u2A4E\", \"\\\\Sqcap\", true);\ndefineSymbol(math, bin, \"\\u2A4F\", \"\\\\Sqcup\", true);\ndefineSymbol(math, bin, \"\\u2A56\", \"\\\\veeonvee\", true);\ndefineSymbol(math, bin, \"\\u2A55\", \"\\\\wedgeonwedge\", true);\ndefineSymbol(math, bin, \"\\u29D7\", \"\\\\blackhourglass\", true);\ndefineSymbol(math, bin, \"\\u29C6\", \"\\\\boxast\", true);\ndefineSymbol(math, bin, \"\\u29C8\", \"\\\\boxbox\", true);\ndefineSymbol(math, bin, \"\\u29C7\", \"\\\\boxcircle\", true);\ndefineSymbol(math, bin, \"\\u229C\", \"\\\\circledequal\", true);\ndefineSymbol(math, bin, \"\\u29B7\", \"\\\\circledparallel\", true);\ndefineSymbol(math, bin, \"\\u29B6\", \"\\\\circledvert\", true);\ndefineSymbol(math, bin, \"\\u29B5\", \"\\\\circlehbar\", true);\ndefineSymbol(math, bin, \"\\u27E1\", \"\\\\concavediamond\", true);\ndefineSymbol(math, bin, \"\\u27E2\", \"\\\\concavediamondtickleft\", true);\ndefineSymbol(math, bin, \"\\u27E3\", \"\\\\concavediamondtickright\", true);\ndefineSymbol(math, bin, \"\\u22C4\", \"\\\\diamond\", true);\ndefineSymbol(math, bin, \"\\u29D6\", \"\\\\hourglass\", true);\ndefineSymbol(math, bin, \"\\u27E0\", \"\\\\lozengeminus\", true);\ndefineSymbol(math, bin, \"\\u233D\", \"\\\\obar\", true);\ndefineSymbol(math, bin, \"\\u29B8\", \"\\\\obslash\", true);\ndefineSymbol(math, bin, \"\\u2A38\", \"\\\\odiv\", true);\ndefineSymbol(math, bin, \"\\u29C1\", \"\\\\ogreaterthan\", true);\ndefineSymbol(math, bin, \"\\u29C0\", \"\\\\olessthan\", true);\ndefineSymbol(math, bin, \"\\u29B9\", \"\\\\operp\", true);\ndefineSymbol(math, bin, \"\\u2A37\", \"\\\\Otimes\", true);\ndefineSymbol(math, bin, \"\\u2A36\", \"\\\\otimeshat\", true);\ndefineSymbol(math, bin, \"\\u22C6\", \"\\\\star\", true);\ndefineSymbol(math, bin, \"\\u25B3\", \"\\\\triangle\", true);\ndefineSymbol(math, bin, \"\\u2A3A\", \"\\\\triangleminus\", true);\ndefineSymbol(math, bin, \"\\u2A39\", \"\\\\triangleplus\", true);\ndefineSymbol(math, bin, \"\\u2A3B\", \"\\\\triangletimes\", true);\ndefineSymbol(math, bin, \"\\u27E4\", \"\\\\whitesquaretickleft\", true);\ndefineSymbol(math, bin, \"\\u27E5\", \"\\\\whitesquaretickright\", true);\ndefineSymbol(math, bin, \"\\u2A33\", \"\\\\smashtimes\", true);\n\n// AMS Arrows\n// Note: unicode-math maps \\u21e2 to their own function \\rightdasharrow.\n// We'll map it to AMS function \\dashrightarrow. It produces the same atom.\ndefineSymbol(math, rel, \"\\u21e2\", \"\\\\dashrightarrow\", true);\n// unicode-math maps \\u21e0 to \\leftdasharrow. We'll use the AMS synonym.\ndefineSymbol(math, rel, \"\\u21e0\", \"\\\\dashleftarrow\", true);\ndefineSymbol(math, rel, \"\\u21c7\", \"\\\\leftleftarrows\", true);\ndefineSymbol(math, rel, \"\\u21c6\", \"\\\\leftrightarrows\", true);\ndefineSymbol(math, rel, \"\\u21da\", \"\\\\Lleftarrow\", true);\ndefineSymbol(math, rel, \"\\u219e\", \"\\\\twoheadleftarrow\", true);\ndefineSymbol(math, rel, \"\\u21a2\", \"\\\\leftarrowtail\", true);\ndefineSymbol(math, rel, \"\\u21ab\", \"\\\\looparrowleft\", true);\ndefineSymbol(math, rel, \"\\u21cb\", \"\\\\leftrightharpoons\", true);\ndefineSymbol(math, rel, \"\\u21b6\", \"\\\\curvearrowleft\", true);\n// unicode-math maps \\u21ba to \\acwopencirclearrow. We'll use the AMS synonym.\ndefineSymbol(math, rel, \"\\u21ba\", \"\\\\circlearrowleft\", true);\ndefineSymbol(math, rel, \"\\u21b0\", \"\\\\Lsh\", true);\ndefineSymbol(math, rel, \"\\u21c8\", \"\\\\upuparrows\", true);\ndefineSymbol(math, rel, \"\\u21bf\", \"\\\\upharpoonleft\", true);\ndefineSymbol(math, rel, \"\\u21c3\", \"\\\\downharpoonleft\", true);\ndefineSymbol(math, rel, \"\\u22b6\", \"\\\\origof\", true);\ndefineSymbol(math, rel, \"\\u22b7\", \"\\\\imageof\", true);\ndefineSymbol(math, rel, \"\\u22b8\", \"\\\\multimap\", true);\ndefineSymbol(math, rel, \"\\u21ad\", \"\\\\leftrightsquigarrow\", true);\ndefineSymbol(math, rel, \"\\u21c9\", \"\\\\rightrightarrows\", true);\ndefineSymbol(math, rel, \"\\u21c4\", \"\\\\rightleftarrows\", true);\ndefineSymbol(math, rel, \"\\u21a0\", \"\\\\twoheadrightarrow\", true);\ndefineSymbol(math, rel, \"\\u21a3\", \"\\\\rightarrowtail\", true);\ndefineSymbol(math, rel, \"\\u21ac\", \"\\\\looparrowright\", true);\ndefineSymbol(math, rel, \"\\u21b7\", \"\\\\curvearrowright\", true);\n// unicode-math maps \\u21bb to \\cwopencirclearrow. We'll use the AMS synonym.\ndefineSymbol(math, rel, \"\\u21bb\", \"\\\\circlearrowright\", true);\ndefineSymbol(math, rel, \"\\u21b1\", \"\\\\Rsh\", true);\ndefineSymbol(math, rel, \"\\u21ca\", \"\\\\downdownarrows\", true);\ndefineSymbol(math, rel, \"\\u21be\", \"\\\\upharpoonright\", true);\ndefineSymbol(math, rel, \"\\u21c2\", \"\\\\downharpoonright\", true);\ndefineSymbol(math, rel, \"\\u21dd\", \"\\\\rightsquigarrow\", true);\ndefineSymbol(math, rel, \"\\u21dd\", \"\\\\leadsto\");\ndefineSymbol(math, rel, \"\\u21db\", \"\\\\Rrightarrow\", true);\ndefineSymbol(math, rel, \"\\u21be\", \"\\\\restriction\");\n\ndefineSymbol(math, textord, \"\\u2018\", \"`\");\ndefineSymbol(math, textord, \"$\", \"\\\\$\");\ndefineSymbol(text, textord, \"$\", \"\\\\$\");\ndefineSymbol(text, textord, \"$\", \"\\\\textdollar\");\ndefineSymbol(math, textord, \"\u00A2\", \"\\\\cent\");\ndefineSymbol(text, textord, \"\u00A2\", \"\\\\cent\");\ndefineSymbol(math, textord, \"%\", \"\\\\%\");\ndefineSymbol(text, textord, \"%\", \"\\\\%\");\ndefineSymbol(math, textord, \"_\", \"\\\\_\");\ndefineSymbol(text, textord, \"_\", \"\\\\_\");\ndefineSymbol(text, textord, \"_\", \"\\\\textunderscore\");\ndefineSymbol(text, textord, \"\\u2423\", \"\\\\textvisiblespace\", true);\ndefineSymbol(math, textord, \"\\u2220\", \"\\\\angle\", true);\ndefineSymbol(math, textord, \"\\u221e\", \"\\\\infty\", true);\ndefineSymbol(math, textord, \"\\u2032\", \"\\\\prime\");\ndefineSymbol(math, textord, \"\\u2033\", \"\\\\dprime\");\ndefineSymbol(math, textord, \"\\u2034\", \"\\\\trprime\");\ndefineSymbol(math, textord, \"\\u2057\", \"\\\\qprime\");\ndefineSymbol(math, textord, \"\\u25b3\", \"\\\\triangle\");\ndefineSymbol(text, textord, \"\\u0391\", \"\\\\Alpha\", true);\ndefineSymbol(text, textord, \"\\u0392\", \"\\\\Beta\", true);\ndefineSymbol(text, textord, \"\\u0393\", \"\\\\Gamma\", true);\ndefineSymbol(text, textord, \"\\u0394\", \"\\\\Delta\", true);\ndefineSymbol(text, textord, \"\\u0395\", \"\\\\Epsilon\", true);\ndefineSymbol(text, textord, \"\\u0396\", \"\\\\Zeta\", true);\ndefineSymbol(text, textord, \"\\u0397\", \"\\\\Eta\", true);\ndefineSymbol(text, textord, \"\\u0398\", \"\\\\Theta\", true);\ndefineSymbol(text, textord, \"\\u0399\", \"\\\\Iota\", true);\ndefineSymbol(text, textord, \"\\u039a\", \"\\\\Kappa\", true);\ndefineSymbol(text, textord, \"\\u039b\", \"\\\\Lambda\", true);\ndefineSymbol(text, textord, \"\\u039c\", \"\\\\Mu\", true);\ndefineSymbol(text, textord, \"\\u039d\", \"\\\\Nu\", true);\ndefineSymbol(text, textord, \"\\u039e\", \"\\\\Xi\", true);\ndefineSymbol(text, textord, \"\\u039f\", \"\\\\Omicron\", true);\ndefineSymbol(text, textord, \"\\u03a0\", \"\\\\Pi\", true);\ndefineSymbol(text, textord, \"\\u03a1\", \"\\\\Rho\", true);\ndefineSymbol(text, textord, \"\\u03a3\", \"\\\\Sigma\", true);\ndefineSymbol(text, textord, \"\\u03a4\", \"\\\\Tau\", true);\ndefineSymbol(text, textord, \"\\u03a5\", \"\\\\Upsilon\", true);\ndefineSymbol(text, textord, \"\\u03a6\", \"\\\\Phi\", true);\ndefineSymbol(text, textord, \"\\u03a7\", \"\\\\Chi\", true);\ndefineSymbol(text, textord, \"\\u03a8\", \"\\\\Psi\", true);\ndefineSymbol(text, textord, \"\\u03a9\", \"\\\\Omega\", true);\ndefineSymbol(math, mathord, \"\\u0391\", \"\\\\Alpha\", true);\ndefineSymbol(math, mathord, \"\\u0392\", \"\\\\Beta\", true);\ndefineSymbol(math, mathord, \"\\u0393\", \"\\\\Gamma\", true);\ndefineSymbol(math, mathord, \"\\u0394\", \"\\\\Delta\", true);\ndefineSymbol(math, mathord, \"\\u0395\", \"\\\\Epsilon\", true);\ndefineSymbol(math, mathord, \"\\u0396\", \"\\\\Zeta\", true);\ndefineSymbol(math, mathord, \"\\u0397\", \"\\\\Eta\", true);\ndefineSymbol(math, mathord, \"\\u0398\", \"\\\\Theta\", true);\ndefineSymbol(math, mathord, \"\\u0399\", \"\\\\Iota\", true);\ndefineSymbol(math, mathord, \"\\u039a\", \"\\\\Kappa\", true);\ndefineSymbol(math, mathord, \"\\u039b\", \"\\\\Lambda\", true);\ndefineSymbol(math, mathord, \"\\u039c\", \"\\\\Mu\", true);\ndefineSymbol(math, mathord, \"\\u039d\", \"\\\\Nu\", true);\ndefineSymbol(math, mathord, \"\\u039e\", \"\\\\Xi\", true);\ndefineSymbol(math, mathord, \"\\u039f\", \"\\\\Omicron\", true);\ndefineSymbol(math, mathord, \"\\u03a0\", \"\\\\Pi\", true);\ndefineSymbol(math, mathord, \"\\u03a1\", \"\\\\Rho\", true);\ndefineSymbol(math, mathord, \"\\u03a3\", \"\\\\Sigma\", true);\ndefineSymbol(math, mathord, \"\\u03a4\", \"\\\\Tau\", true);\ndefineSymbol(math, mathord, \"\\u03a5\", \"\\\\Upsilon\", true);\ndefineSymbol(math, mathord, \"\\u03a6\", \"\\\\Phi\", true);\ndefineSymbol(math, mathord, \"\\u03a7\", \"\\\\Chi\", true);\ndefineSymbol(math, mathord, \"\\u03a8\", \"\\\\Psi\", true);\ndefineSymbol(math, mathord, \"\\u03a9\", \"\\\\Omega\", true);\ndefineSymbol(math, open, \"\\u00ac\", \"\\\\neg\", true);\ndefineSymbol(math, open, \"\\u00ac\", \"\\\\lnot\");\ndefineSymbol(math, textord, \"\\u22a4\", \"\\\\top\");\ndefineSymbol(math, textord, \"\\u22a5\", \"\\\\bot\");\ndefineSymbol(math, textord, \"\\u2205\", \"\\\\emptyset\");\ndefineSymbol(math, textord, \"\\u2300\", \"\\\\varnothing\");\ndefineSymbol(math, mathord, \"\\u03b1\", \"\\\\alpha\", true);\ndefineSymbol(math, mathord, \"\\u03b2\", \"\\\\beta\", true);\ndefineSymbol(math, mathord, \"\\u03b3\", \"\\\\gamma\", true);\ndefineSymbol(math, mathord, \"\\u03b4\", \"\\\\delta\", true);\ndefineSymbol(math, mathord, \"\\u03f5\", \"\\\\epsilon\", true);\ndefineSymbol(math, mathord, \"\\u03b6\", \"\\\\zeta\", true);\ndefineSymbol(math, mathord, \"\\u03b7\", \"\\\\eta\", true);\ndefineSymbol(math, mathord, \"\\u03b8\", \"\\\\theta\", true);\ndefineSymbol(math, mathord, \"\\u03b9\", \"\\\\iota\", true);\ndefineSymbol(math, mathord, \"\\u03ba\", \"\\\\kappa\", true);\ndefineSymbol(math, mathord, \"\\u03bb\", \"\\\\lambda\", true);\ndefineSymbol(math, mathord, \"\\u03bc\", \"\\\\mu\", true);\ndefineSymbol(math, mathord, \"\\u03bd\", \"\\\\nu\", true);\ndefineSymbol(math, mathord, \"\\u03be\", \"\\\\xi\", true);\ndefineSymbol(math, mathord, \"\\u03bf\", \"\\\\omicron\", true);\ndefineSymbol(math, mathord, \"\\u03c0\", \"\\\\pi\", true);\ndefineSymbol(math, mathord, \"\\u03c1\", \"\\\\rho\", true);\ndefineSymbol(math, mathord, \"\\u03c3\", \"\\\\sigma\", true);\ndefineSymbol(math, mathord, \"\\u03c4\", \"\\\\tau\", true);\ndefineSymbol(math, mathord, \"\\u03c5\", \"\\\\upsilon\", true);\ndefineSymbol(math, mathord, \"\\u03d5\", \"\\\\phi\", true);\ndefineSymbol(math, mathord, \"\\u03c7\", \"\\\\chi\", true);\ndefineSymbol(math, mathord, \"\\u03c8\", \"\\\\psi\", true);\ndefineSymbol(math, mathord, \"\\u03c9\", \"\\\\omega\", true);\ndefineSymbol(math, mathord, \"\\u03b5\", \"\\\\varepsilon\", true);\ndefineSymbol(math, mathord, \"\\u03d1\", \"\\\\vartheta\", true);\ndefineSymbol(math, mathord, \"\\u03d6\", \"\\\\varpi\", true);\ndefineSymbol(math, mathord, \"\\u03f1\", \"\\\\varrho\", true);\ndefineSymbol(math, mathord, \"\\u03c2\", \"\\\\varsigma\", true);\ndefineSymbol(math, mathord, \"\\u03c6\", \"\\\\varphi\", true);\ndefineSymbol(math, mathord, \"\\u03d8\", \"\\\\Coppa\", true);\ndefineSymbol(math, mathord, \"\\u03d9\", \"\\\\coppa\", true);\ndefineSymbol(math, mathord, \"\\u03d9\", \"\\\\varcoppa\", true);\ndefineSymbol(math, mathord, \"\\u03de\", \"\\\\Koppa\", true);\ndefineSymbol(math, mathord, \"\\u03df\", \"\\\\koppa\", true);\ndefineSymbol(math, mathord, \"\\u03e0\", \"\\\\Sampi\", true);\ndefineSymbol(math, mathord, \"\\u03e1\", \"\\\\sampi\", true);\ndefineSymbol(math, mathord, \"\\u03da\", \"\\\\Stigma\", true);\ndefineSymbol(math, mathord, \"\\u03db\", \"\\\\stigma\", true);\ndefineSymbol(math, mathord, \"\\u2aeb\", \"\\\\Bot\");\n\n// unicode-math maps U+F0 to \\matheth. We map to AMS function \\eth\ndefineSymbol(math, textord, \"\\u00f0\", \"\\\\eth\", true); // \u00F0\ndefineSymbol(text, textord, \"\\u00f0\", \"\\u00f0\");\n// Extended ASCII and non-ASCII Letters\ndefineSymbol(math, textord, \"\\u00C5\", \"\\\\AA\"); // \u00C5\ndefineSymbol(text, textord, \"\\u00C5\", \"\\\\AA\", true);\ndefineSymbol(math, textord, \"\\u00C6\", \"\\\\AE\", true); // \u00C6\ndefineSymbol(text, textord, \"\\u00C6\", \"\\\\AE\", true);\ndefineSymbol(math, textord, \"\\u00D0\", \"\\\\DH\", true); // \u00D0\ndefineSymbol(text, textord, \"\\u00D0\", \"\\\\DH\", true);\ndefineSymbol(math, textord, \"\\u00DE\", \"\\\\TH\", true); // \u00DE\ndefineSymbol(text, textord, \"\\u00DE\", \"\\\\TH\", true);\ndefineSymbol(math, textord, \"\\u00DF\", \"\\\\ss\", true); // \u00DF\ndefineSymbol(text, textord, \"\\u00DF\", \"\\\\ss\", true);\ndefineSymbol(math, textord, \"\\u00E5\", \"\\\\aa\"); // \u00E5\ndefineSymbol(text, textord, \"\\u00E5\", \"\\\\aa\", true);\ndefineSymbol(math, textord, \"\\u00E6\", \"\\\\ae\", true); // \u00E6\ndefineSymbol(text, textord, \"\\u00E6\", \"\\\\ae\", true);\ndefineSymbol(math, textord, \"\\u00F0\", \"\\\\dh\"); // \u00F0\ndefineSymbol(text, textord, \"\\u00F0\", \"\\\\dh\", true);\ndefineSymbol(math, textord, \"\\u00FE\", \"\\\\th\", true); // \u00FE\ndefineSymbol(text, textord, \"\\u00FE\", \"\\\\th\", true);\ndefineSymbol(math, textord, \"\\u0110\", \"\\\\DJ\", true); // \u0110\ndefineSymbol(text, textord, \"\\u0110\", \"\\\\DJ\", true);\ndefineSymbol(math, textord, \"\\u0111\", \"\\\\dj\", true); // \u0111\ndefineSymbol(text, textord, \"\\u0111\", \"\\\\dj\", true);\ndefineSymbol(math, textord, \"\\u0141\", \"\\\\L\", true); // \u0141\ndefineSymbol(text, textord, \"\\u0141\", \"\\\\L\", true);\ndefineSymbol(math, textord, \"\\u0141\", \"\\\\l\", true); // \u0142\ndefineSymbol(text, textord, \"\\u0141\", \"\\\\l\", true);\ndefineSymbol(math, textord, \"\\u014A\", \"\\\\NG\", true); // \u014A\ndefineSymbol(text, textord, \"\\u014A\", \"\\\\NG\", true);\ndefineSymbol(math, textord, \"\\u014B\", \"\\\\ng\", true); // \u014B\ndefineSymbol(text, textord, \"\\u014B\", \"\\\\ng\", true);\ndefineSymbol(math, textord, \"\\u0152\", \"\\\\OE\", true); // \u0152\ndefineSymbol(text, textord, \"\\u0152\", \"\\\\OE\", true);\ndefineSymbol(math, textord, \"\\u0153\", \"\\\\oe\", true); // \u0153\ndefineSymbol(text, textord, \"\\u0153\", \"\\\\oe\", true);\n\ndefineSymbol(math, bin, \"\\u2217\", \"\\u2217\", true);\ndefineSymbol(math, bin, \"+\", \"+\");\ndefineSymbol(math, bin, \"\\u2217\", \"*\");\ndefineSymbol(math, bin, \"\\u2044\", \"/\", true);\ndefineSymbol(math, bin, \"\\u2044\", \"\\u2044\");\ndefineSymbol(math, bin, \"\\u2212\", \"-\", true);\ndefineSymbol(math, bin, \"\\u22c5\", \"\\\\cdot\", true);\ndefineSymbol(math, bin, \"\\u2218\", \"\\\\circ\", true);\ndefineSymbol(math, bin, \"\\u00f7\", \"\\\\div\", true);\ndefineSymbol(math, bin, \"\\u00b1\", \"\\\\pm\", true);\ndefineSymbol(math, bin, \"\\u00d7\", \"\\\\times\", true);\ndefineSymbol(math, bin, \"\\u2229\", \"\\\\cap\", true);\ndefineSymbol(math, bin, \"\\u222a\", \"\\\\cup\", true);\ndefineSymbol(math, bin, \"\\u2216\", \"\\\\setminus\", true);\ndefineSymbol(math, bin, \"\\u2227\", \"\\\\land\");\ndefineSymbol(math, bin, \"\\u2228\", \"\\\\lor\");\ndefineSymbol(math, bin, \"\\u2227\", \"\\\\wedge\", true);\ndefineSymbol(math, bin, \"\\u2228\", \"\\\\vee\", true);\ndefineSymbol(math, open, \"\\u27e6\", \"\\\\llbracket\", true); // stmaryrd/semantic packages\ndefineSymbol(math, close, \"\\u27e7\", \"\\\\rrbracket\", true);\ndefineSymbol(math, open, \"\\u27e8\", \"\\\\langle\", true);\ndefineSymbol(math, open, \"\\u27ea\", \"\\\\lAngle\", true);\ndefineSymbol(math, open, \"\\u2989\", \"\\\\llangle\", true);\ndefineSymbol(math, open, \"|\", \"\\\\lvert\");\ndefineSymbol(math, open, \"\\u2016\", \"\\\\lVert\", true);\ndefineSymbol(math, textord, \"!\", \"\\\\oc\"); // cmll package\ndefineSymbol(math, textord, \"?\", \"\\\\wn\");\ndefineSymbol(math, textord, \"\\u2193\", \"\\\\shpos\");\ndefineSymbol(math, textord, \"\\u2195\", \"\\\\shift\");\ndefineSymbol(math, textord, \"\\u2191\", \"\\\\shneg\");\ndefineSymbol(math, close, \"?\", \"?\");\ndefineSymbol(math, close, \"!\", \"!\");\ndefineSymbol(math, close, \"\u203C\", \"\u203C\");\ndefineSymbol(math, close, \"\\u27e9\", \"\\\\rangle\", true);\ndefineSymbol(math, close, \"\\u27eb\", \"\\\\rAngle\", true);\ndefineSymbol(math, close, \"\\u298a\", \"\\\\rrangle\", true);\ndefineSymbol(math, close, \"|\", \"\\\\rvert\");\ndefineSymbol(math, close, \"\\u2016\", \"\\\\rVert\");\ndefineSymbol(math, open, \"\\u2983\", \"\\\\lBrace\", true); // stmaryrd/semantic packages\ndefineSymbol(math, close, \"\\u2984\", \"\\\\rBrace\", true);\ndefineSymbol(math, rel, \"=\", \"\\\\equal\", true);\ndefineSymbol(math, rel, \":\", \":\");\ndefineSymbol(math, rel, \"\\u2248\", \"\\\\approx\", true);\ndefineSymbol(math, rel, \"\\u2245\", \"\\\\cong\", true);\ndefineSymbol(math, rel, \"\\u2265\", \"\\\\ge\");\ndefineSymbol(math, rel, \"\\u2265\", \"\\\\geq\", true);\ndefineSymbol(math, rel, \"\\u2190\", \"\\\\gets\");\ndefineSymbol(math, rel, \">\", \"\\\\gt\", true);\ndefineSymbol(math, rel, \"\\u2208\", \"\\\\in\", true);\ndefineSymbol(math, rel, \"\\u2209\", \"\\\\notin\", true);\ndefineSymbol(math, rel, \"\\ue020\", \"\\\\@not\");\ndefineSymbol(math, rel, \"\\u2282\", \"\\\\subset\", true);\ndefineSymbol(math, rel, \"\\u2283\", \"\\\\supset\", true);\ndefineSymbol(math, rel, \"\\u2286\", \"\\\\subseteq\", true);\ndefineSymbol(math, rel, \"\\u2287\", \"\\\\supseteq\", true);\ndefineSymbol(math, rel, \"\\u2288\", \"\\\\nsubseteq\", true);\ndefineSymbol(math, rel, \"\\u2288\", \"\\\\nsubseteqq\");\ndefineSymbol(math, rel, \"\\u2289\", \"\\\\nsupseteq\", true);\ndefineSymbol(math, rel, \"\\u2289\", \"\\\\nsupseteqq\");\ndefineSymbol(math, rel, \"\\u22a8\", \"\\\\models\");\ndefineSymbol(math, rel, \"\\u2190\", \"\\\\leftarrow\", true);\ndefineSymbol(math, rel, \"\\u2264\", \"\\\\le\");\ndefineSymbol(math, rel, \"\\u2264\", \"\\\\leq\", true);\ndefineSymbol(math, rel, \"<\", \"\\\\lt\", true);\ndefineSymbol(math, rel, \"\\u2192\", \"\\\\rightarrow\", true);\ndefineSymbol(math, rel, \"\\u2192\", \"\\\\to\");\ndefineSymbol(math, rel, \"\\u2271\", \"\\\\ngeq\", true);\ndefineSymbol(math, rel, \"\\u2271\", \"\\\\ngeqq\");\ndefineSymbol(math, rel, \"\\u2271\", \"\\\\ngeqslant\");\ndefineSymbol(math, rel, \"\\u2270\", \"\\\\nleq\", true);\ndefineSymbol(math, rel, \"\\u2270\", \"\\\\nleqq\");\ndefineSymbol(math, rel, \"\\u2270\", \"\\\\nleqslant\");\ndefineSymbol(math, rel, \"\\u2aeb\", \"\\\\Perp\", true); //cmll package\ndefineSymbol(math, spacing, \"\\u00a0\", \"\\\\ \");\ndefineSymbol(math, spacing, \"\\u00a0\", \"\\\\space\");\n// Ref: LaTeX Source 2e: \\DeclareRobustCommand{\\nobreakspace}{%\ndefineSymbol(math, spacing, \"\\u00a0\", \"\\\\nobreakspace\");\ndefineSymbol(text, spacing, \"\\u00a0\", \"\\\\ \");\ndefineSymbol(text, spacing, \"\\u00a0\", \" \");\ndefineSymbol(text, spacing, \"\\u00a0\", \"\\\\space\");\ndefineSymbol(text, spacing, \"\\u00a0\", \"\\\\nobreakspace\");\ndefineSymbol(math, spacing, null, \"\\\\nobreak\");\ndefineSymbol(math, spacing, null, \"\\\\allowbreak\");\ndefineSymbol(math, punct, \",\", \",\");\ndefineSymbol(text, punct, \":\", \":\");\ndefineSymbol(math, punct, \";\", \";\");\ndefineSymbol(math, bin, \"\\u22bc\", \"\\\\barwedge\");\ndefineSymbol(math, bin, \"\\u22bb\", \"\\\\veebar\");\ndefineSymbol(math, bin, \"\\u2299\", \"\\\\odot\", true);\n// Firefox turns \u2295 into an emoji. So append \\uFE0E. Define Unicode character in macros, not here.\ndefineSymbol(math, bin, \"\\u2295\\uFE0E\", \"\\\\oplus\");\ndefineSymbol(math, bin, \"\\u2297\", \"\\\\otimes\", true);\ndefineSymbol(math, textord, \"\\u2202\", \"\\\\partial\", true);\ndefineSymbol(math, bin, \"\\u2298\", \"\\\\oslash\", true);\ndefineSymbol(math, bin, \"\\u229a\", \"\\\\circledcirc\", true);\ndefineSymbol(math, bin, \"\\u22a1\", \"\\\\boxdot\", true);\ndefineSymbol(math, bin, \"\\u25b3\", \"\\\\bigtriangleup\");\ndefineSymbol(math, bin, \"\\u25bd\", \"\\\\bigtriangledown\");\ndefineSymbol(math, bin, \"\\u2020\", \"\\\\dagger\");\ndefineSymbol(math, bin, \"\\u22c4\", \"\\\\diamond\");\ndefineSymbol(math, bin, \"\\u25c3\", \"\\\\triangleleft\");\ndefineSymbol(math, bin, \"\\u25b9\", \"\\\\triangleright\");\ndefineSymbol(math, open, \"{\", \"\\\\{\");\ndefineSymbol(text, textord, \"{\", \"\\\\{\");\ndefineSymbol(text, textord, \"{\", \"\\\\textbraceleft\");\ndefineSymbol(math, close, \"}\", \"\\\\}\");\ndefineSymbol(text, textord, \"}\", \"\\\\}\");\ndefineSymbol(text, textord, \"}\", \"\\\\textbraceright\");\ndefineSymbol(math, open, \"{\", \"\\\\lbrace\");\ndefineSymbol(math, close, \"}\", \"\\\\rbrace\");\ndefineSymbol(math, open, \"[\", \"\\\\lbrack\", true);\ndefineSymbol(text, textord, \"[\", \"\\\\lbrack\", true);\ndefineSymbol(math, close, \"]\", \"\\\\rbrack\", true);\ndefineSymbol(text, textord, \"]\", \"\\\\rbrack\", true);\ndefineSymbol(math, open, \"(\", \"\\\\lparen\", true);\ndefineSymbol(math, close, \")\", \"\\\\rparen\", true);\ndefineSymbol(math, open, \"\u2987\", \"\\\\llparenthesis\", true);\ndefineSymbol(math, close, \"\u2988\", \"\\\\rrparenthesis\", true);\ndefineSymbol(text, textord, \"<\", \"\\\\textless\", true); // in T1 fontenc\ndefineSymbol(text, textord, \">\", \"\\\\textgreater\", true); // in T1 fontenc\ndefineSymbol(math, open, \"\\u230a\", \"\\\\lfloor\", true);\ndefineSymbol(math, close, \"\\u230b\", \"\\\\rfloor\", true);\ndefineSymbol(math, open, \"\\u2308\", \"\\\\lceil\", true);\ndefineSymbol(math, close, \"\\u2309\", \"\\\\rceil\", true);\ndefineSymbol(math, textord, \"\\\\\", \"\\\\backslash\");\ndefineSymbol(math, textord, \"|\", \"|\");\ndefineSymbol(math, textord, \"|\", \"\\\\vert\");\ndefineSymbol(text, textord, \"|\", \"\\\\textbar\", true); // in T1 fontenc\ndefineSymbol(math, textord, \"\\u2016\", \"\\\\|\");\ndefineSymbol(math, textord, \"\\u2016\", \"\\\\Vert\");\ndefineSymbol(text, textord, \"\\u2016\", \"\\\\textbardbl\");\ndefineSymbol(text, textord, \"~\", \"\\\\textasciitilde\");\ndefineSymbol(text, textord, \"\\\\\", \"\\\\textbackslash\");\ndefineSymbol(text, textord, \"^\", \"\\\\textasciicircum\");\ndefineSymbol(math, rel, \"\\u2191\", \"\\\\uparrow\", true);\ndefineSymbol(math, rel, \"\\u21d1\", \"\\\\Uparrow\", true);\ndefineSymbol(math, rel, \"\\u2193\", \"\\\\downarrow\", true);\ndefineSymbol(math, rel, \"\\u21d3\", \"\\\\Downarrow\", true);\ndefineSymbol(math, rel, \"\\u2195\", \"\\\\updownarrow\", true);\ndefineSymbol(math, rel, \"\\u21d5\", \"\\\\Updownarrow\", true);\ndefineSymbol(math, op, \"\\u2210\", \"\\\\coprod\");\ndefineSymbol(math, op, \"\\u22c1\", \"\\\\bigvee\");\ndefineSymbol(math, op, \"\\u22c0\", \"\\\\bigwedge\");\ndefineSymbol(math, op, \"\\u2a04\", \"\\\\biguplus\");\ndefineSymbol(math, op, \"\\u2a04\", \"\\\\bigcupplus\");\ndefineSymbol(math, op, \"\\u2a03\", \"\\\\bigcupdot\");\ndefineSymbol(math, op, \"\\u2a07\", \"\\\\bigdoublevee\");\ndefineSymbol(math, op, \"\\u2a08\", \"\\\\bigdoublewedge\");\ndefineSymbol(math, op, \"\\u22c2\", \"\\\\bigcap\");\ndefineSymbol(math, op, \"\\u22c3\", \"\\\\bigcup\");\ndefineSymbol(math, op, \"\\u222b\", \"\\\\int\");\ndefineSymbol(math, op, \"\\u222b\", \"\\\\intop\");\ndefineSymbol(math, op, \"\\u222c\", \"\\\\iint\");\ndefineSymbol(math, op, \"\\u222d\", \"\\\\iiint\");\ndefineSymbol(math, op, \"\\u220f\", \"\\\\prod\");\ndefineSymbol(math, op, \"\\u2211\", \"\\\\sum\");\ndefineSymbol(math, op, \"\\u2a02\", \"\\\\bigotimes\");\ndefineSymbol(math, op, \"\\u2a01\", \"\\\\bigoplus\");\ndefineSymbol(math, op, \"\\u2a00\", \"\\\\bigodot\");\ndefineSymbol(math, op, \"\\u2a09\", \"\\\\bigtimes\");\ndefineSymbol(math, op, \"\\u222e\", \"\\\\oint\");\ndefineSymbol(math, op, \"\\u222f\", \"\\\\oiint\");\ndefineSymbol(math, op, \"\\u2230\", \"\\\\oiiint\");\ndefineSymbol(math, op, \"\\u2231\", \"\\\\intclockwise\");\ndefineSymbol(math, op, \"\\u2232\", \"\\\\varointclockwise\");\ndefineSymbol(math, op, \"\\u2a0c\", \"\\\\iiiint\");\ndefineSymbol(math, op, \"\\u2a0d\", \"\\\\intbar\");\ndefineSymbol(math, op, \"\\u2a0e\", \"\\\\intBar\");\ndefineSymbol(math, op, \"\\u2a0f\", \"\\\\fint\");\ndefineSymbol(math, op, \"\\u2a12\", \"\\\\rppolint\");\ndefineSymbol(math, op, \"\\u2a13\", \"\\\\scpolint\");\ndefineSymbol(math, op, \"\\u2a15\", \"\\\\pointint\");\ndefineSymbol(math, op, \"\\u2a16\", \"\\\\sqint\");\ndefineSymbol(math, op, \"\\u2a17\", \"\\\\intlarhk\");\ndefineSymbol(math, op, \"\\u2a18\", \"\\\\intx\");\ndefineSymbol(math, op, \"\\u2a19\", \"\\\\intcap\");\ndefineSymbol(math, op, \"\\u2a1a\", \"\\\\intcup\");\ndefineSymbol(math, op, \"\\u2a05\", \"\\\\bigsqcap\");\ndefineSymbol(math, op, \"\\u2a06\", \"\\\\bigsqcup\");\ndefineSymbol(math, op, \"\\u222b\", \"\\\\smallint\");\ndefineSymbol(text, inner, \"\\u2026\", \"\\\\textellipsis\");\ndefineSymbol(math, inner, \"\\u2026\", \"\\\\mathellipsis\");\ndefineSymbol(text, inner, \"\\u2026\", \"\\\\ldots\", true);\ndefineSymbol(math, inner, \"\\u2026\", \"\\\\ldots\", true);\ndefineSymbol(math, inner, \"\\u22f0\", \"\\\\iddots\", true);\ndefineSymbol(math, inner, \"\\u22ef\", \"\\\\@cdots\", true);\ndefineSymbol(math, inner, \"\\u22f1\", \"\\\\ddots\", true);\ndefineSymbol(math, textord, \"\\u22ee\", \"\\\\varvdots\"); // \\vdots is a macro\ndefineSymbol(text, textord, \"\\u22ee\", \"\\\\varvdots\");\ndefineSymbol(math, accent, \"\\u02ca\", \"\\\\acute\");\ndefineSymbol(math, accent, \"\\u0060\", \"\\\\grave\");\ndefineSymbol(math, accent, \"\\u00a8\", \"\\\\ddot\");\ndefineSymbol(math, accent, \"\\u2026\", \"\\\\dddot\");\ndefineSymbol(math, accent, \"\\u2026\\u002e\", \"\\\\ddddot\");\ndefineSymbol(math, accent, \"\\u007e\", \"\\\\tilde\");\ndefineSymbol(math, accent, \"\\u203e\", \"\\\\bar\");\ndefineSymbol(math, accent, \"\\u02d8\", \"\\\\breve\");\ndefineSymbol(math, accent, \"\\u02c7\", \"\\\\check\");\ndefineSymbol(math, accent, \"\\u005e\", \"\\\\hat\");\ndefineSymbol(math, accent, \"\\u2192\", \"\\\\vec\");\ndefineSymbol(math, accent, \"\\u02d9\", \"\\\\dot\");\ndefineSymbol(math, accent, \"\\u02da\", \"\\\\mathring\");\ndefineSymbol(math, mathord, \"\\u0131\", \"\\\\imath\", true);\ndefineSymbol(math, mathord, \"\\u0237\", \"\\\\jmath\", true);\ndefineSymbol(math, textord, \"\\u0131\", \"\\u0131\");\ndefineSymbol(math, textord, \"\\u0237\", \"\\u0237\");\ndefineSymbol(text, textord, \"\\u0131\", \"\\\\i\", true);\ndefineSymbol(text, textord, \"\\u0237\", \"\\\\j\", true);\ndefineSymbol(text, textord, \"\\u00f8\", \"\\\\o\", true);\ndefineSymbol(math, mathord, \"\\u00f8\", \"\\\\o\", true);\ndefineSymbol(text, textord, \"\\u00d8\", \"\\\\O\", true);\ndefineSymbol(math, mathord, \"\\u00d8\", \"\\\\O\", true);\ndefineSymbol(text, accent, \"\\u02ca\", \"\\\\'\"); // acute\ndefineSymbol(text, accent, \"\\u02cb\", \"\\\\`\"); // grave\ndefineSymbol(text, accent, \"\\u02c6\", \"\\\\^\"); // circumflex\ndefineSymbol(text, accent, \"\\u02dc\", \"\\\\~\"); // tilde\ndefineSymbol(text, accent, \"\\u02c9\", \"\\\\=\"); // macron\ndefineSymbol(text, accent, \"\\u02d8\", \"\\\\u\"); // breve\ndefineSymbol(text, accent, \"\\u02d9\", \"\\\\.\"); // dot above\ndefineSymbol(text, accent, \"\\u00b8\", \"\\\\c\"); // cedilla\ndefineSymbol(text, accent, \"\\u02da\", \"\\\\r\"); // ring above\ndefineSymbol(text, accent, \"\\u02c7\", \"\\\\v\"); // caron\ndefineSymbol(text, accent, \"\\u00a8\", '\\\\\"'); // diaeresis\ndefineSymbol(text, accent, \"\\u02dd\", \"\\\\H\"); // double acute\ndefineSymbol(math, accent, \"\\u02ca\", \"\\\\'\"); // acute\ndefineSymbol(math, accent, \"\\u02cb\", \"\\\\`\"); // grave\ndefineSymbol(math, accent, \"\\u02c6\", \"\\\\^\"); // circumflex\ndefineSymbol(math, accent, \"\\u02dc\", \"\\\\~\"); // tilde\ndefineSymbol(math, accent, \"\\u02c9\", \"\\\\=\"); // macron\ndefineSymbol(math, accent, \"\\u02d8\", \"\\\\u\"); // breve\ndefineSymbol(math, accent, \"\\u02d9\", \"\\\\.\"); // dot above\ndefineSymbol(math, accent, \"\\u00b8\", \"\\\\c\"); // cedilla\ndefineSymbol(math, accent, \"\\u02da\", \"\\\\r\"); // ring above\ndefineSymbol(math, accent, \"\\u02c7\", \"\\\\v\"); // caron\ndefineSymbol(math, accent, \"\\u00a8\", '\\\\\"'); // diaeresis\ndefineSymbol(math, accent, \"\\u02dd\", \"\\\\H\"); // double acute\n\n// These ligatures are detected and created in Parser.js's `formLigatures`.\nconst ligatures = {\n  \"--\": true,\n  \"---\": true,\n  \"``\": true,\n  \"''\": true\n};\n\ndefineSymbol(text, textord, \"\\u2013\", \"--\", true);\ndefineSymbol(text, textord, \"\\u2013\", \"\\\\textendash\");\ndefineSymbol(text, textord, \"\\u2014\", \"---\", true);\ndefineSymbol(text, textord, \"\\u2014\", \"\\\\textemdash\");\ndefineSymbol(text, textord, \"\\u2018\", \"`\", true);\ndefineSymbol(text, textord, \"\\u2018\", \"\\\\textquoteleft\");\ndefineSymbol(text, textord, \"\\u2019\", \"'\", true);\ndefineSymbol(text, textord, \"\\u2019\", \"\\\\textquoteright\");\ndefineSymbol(text, textord, \"\\u201c\", \"``\", true);\ndefineSymbol(text, textord, \"\\u201c\", \"\\\\textquotedblleft\");\ndefineSymbol(text, textord, \"\\u201d\", \"''\", true);\ndefineSymbol(text, textord, \"\\u201d\", \"\\\\textquotedblright\");\n//  \\degree from gensymb package\ndefineSymbol(math, textord, \"\\u00b0\", \"\\\\degree\", true);\ndefineSymbol(text, textord, \"\\u00b0\", \"\\\\degree\");\n// \\textdegree from inputenc package\ndefineSymbol(text, textord, \"\\u00b0\", \"\\\\textdegree\", true);\n// TODO: In LaTeX, \\pounds can generate a different character in text and math\n// mode, but among our fonts, only Main-Regular defines this character \"163\".\ndefineSymbol(math, textord, \"\\u00a3\", \"\\\\pounds\");\ndefineSymbol(math, textord, \"\\u00a3\", \"\\\\mathsterling\", true);\ndefineSymbol(text, textord, \"\\u00a3\", \"\\\\pounds\");\ndefineSymbol(text, textord, \"\\u00a3\", \"\\\\textsterling\", true);\ndefineSymbol(math, textord, \"\\u2720\", \"\\\\maltese\");\ndefineSymbol(text, textord, \"\\u2720\", \"\\\\maltese\");\ndefineSymbol(math, textord, \"\\u20ac\", \"\\\\euro\", true);\ndefineSymbol(text, textord, \"\\u20ac\", \"\\\\euro\", true);\ndefineSymbol(text, textord, \"\\u20ac\", \"\\\\texteuro\");\ndefineSymbol(math, textord, \"\\u00a9\", \"\\\\copyright\", true);\ndefineSymbol(text, textord, \"\\u00a9\", \"\\\\textcopyright\");\ndefineSymbol(math, textord, \"\\u2300\", \"\\\\diameter\", true);\ndefineSymbol(text, textord, \"\\u2300\", \"\\\\diameter\");\n\n// Italic Greek\ndefineSymbol(math, textord, \"\uD835\uDEE4\", \"\\\\varGamma\");\ndefineSymbol(math, textord, \"\uD835\uDEE5\", \"\\\\varDelta\");\ndefineSymbol(math, textord, \"\uD835\uDEE9\", \"\\\\varTheta\");\ndefineSymbol(math, textord, \"\uD835\uDEEC\", \"\\\\varLambda\");\ndefineSymbol(math, textord, \"\uD835\uDEEF\", \"\\\\varXi\");\ndefineSymbol(math, textord, \"\uD835\uDEF1\", \"\\\\varPi\");\ndefineSymbol(math, textord, \"\uD835\uDEF4\", \"\\\\varSigma\");\ndefineSymbol(math, textord, \"\uD835\uDEF6\", \"\\\\varUpsilon\");\ndefineSymbol(math, textord, \"\uD835\uDEF7\", \"\\\\varPhi\");\ndefineSymbol(math, textord, \"\uD835\uDEF9\", \"\\\\varPsi\");\ndefineSymbol(math, textord, \"\uD835\uDEFA\", \"\\\\varOmega\");\ndefineSymbol(text, textord, \"\uD835\uDEE4\", \"\\\\varGamma\");\ndefineSymbol(text, textord, \"\uD835\uDEE5\", \"\\\\varDelta\");\ndefineSymbol(text, textord, \"\uD835\uDEE9\", \"\\\\varTheta\");\ndefineSymbol(text, textord, \"\uD835\uDEEC\", \"\\\\varLambda\");\ndefineSymbol(text, textord, \"\uD835\uDEEF\", \"\\\\varXi\");\ndefineSymbol(text, textord, \"\uD835\uDEF1\", \"\\\\varPi\");\ndefineSymbol(text, textord, \"\uD835\uDEF4\", \"\\\\varSigma\");\ndefineSymbol(text, textord, \"\uD835\uDEF6\", \"\\\\varUpsilon\");\ndefineSymbol(text, textord, \"\uD835\uDEF7\", \"\\\\varPhi\");\ndefineSymbol(text, textord, \"\uD835\uDEF9\", \"\\\\varPsi\");\ndefineSymbol(text, textord, \"\uD835\uDEFA\", \"\\\\varOmega\");\n\n\n// There are lots of symbols which are the same, so we add them in afterwards.\n// All of these are textords in math mode\nconst mathTextSymbols = '0123456789/@.\"';\nfor (let i = 0; i < mathTextSymbols.length; i++) {\n  const ch = mathTextSymbols.charAt(i);\n  defineSymbol(math, textord, ch, ch);\n}\n\n// All of these are textords in text mode\nconst textSymbols = '0123456789!@*()-=+\";:?/.,';\nfor (let i = 0; i < textSymbols.length; i++) {\n  const ch = textSymbols.charAt(i);\n  defineSymbol(text, textord, ch, ch);\n}\n\n// All of these are textords in text mode, and mathords in math mode\nconst letters = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\";\nfor (let i = 0; i < letters.length; i++) {\n  const ch = letters.charAt(i);\n  defineSymbol(math, mathord, ch, ch);\n  defineSymbol(text, textord, ch, ch);\n}\n\n// Some more letters in Unicode Basic Multilingual Plane.\nconst narrow = \"\u00C7\u00D0\u00DE\u00E7\u00FE\u2102\u210D\u2115\u2119\u211A\u211D\u2124\u210E\u210F\u210A\u210B\u210C\u2110\u2111\u2112\u2113\u2118\u211B\u211C\u212C\u2130\u2131\u2133\u212D\u2128\";\nfor (let i = 0; i < narrow.length; i++) {\n  const ch = narrow.charAt(i);\n  defineSymbol(math, mathord, ch, ch);\n  defineSymbol(text, textord, ch, ch);\n}\n\n// The next loop loads wide (surrogate pair) characters.\n// We support some letters in the Unicode range U+1D400 to U+1D7FF,\n// Mathematical Alphanumeric Symbols.\nlet wideChar = \"\";\nfor (let i = 0; i < letters.length; i++) {\n  // The hex numbers in the next line are a surrogate pair.\n  // 0xD835 is the high surrogate for all letters in the range we support.\n  // 0xDC00 is the low surrogate for bold A.\n  wideChar = String.fromCharCode(0xd835, 0xdc00 + i); // A-Z a-z bold\n  defineSymbol(math, mathord, wideChar, wideChar);\n  defineSymbol(text, textord, wideChar, wideChar);\n\n  wideChar = String.fromCharCode(0xd835, 0xdc34 + i); // A-Z a-z italic\n  defineSymbol(math, mathord, wideChar, wideChar);\n  defineSymbol(text, textord, wideChar, wideChar);\n\n  wideChar = String.fromCharCode(0xd835, 0xdc68 + i); // A-Z a-z bold italic\n  defineSymbol(math, mathord, wideChar, wideChar);\n  defineSymbol(text, textord, wideChar, wideChar);\n\n  wideChar = String.fromCharCode(0xd835, 0xdd04 + i); // A-Z a-z Fractur\n  defineSymbol(math, mathord, wideChar, wideChar);\n  defineSymbol(text, textord, wideChar, wideChar);\n\n  wideChar = String.fromCharCode(0xd835, 0xdda0 + i); // A-Z a-z sans-serif\n  defineSymbol(math, mathord, wideChar, wideChar);\n  defineSymbol(text, textord, wideChar, wideChar);\n\n  wideChar = String.fromCharCode(0xd835, 0xddd4 + i); // A-Z a-z sans bold\n  defineSymbol(math, mathord, wideChar, wideChar);\n  defineSymbol(text, textord, wideChar, wideChar);\n\n  wideChar = String.fromCharCode(0xd835, 0xde08 + i); // A-Z a-z sans italic\n  defineSymbol(math, mathord, wideChar, wideChar);\n  defineSymbol(text, textord, wideChar, wideChar);\n\n  wideChar = String.fromCharCode(0xd835, 0xde70 + i); // A-Z a-z monospace\n  defineSymbol(math, mathord, wideChar, wideChar);\n  defineSymbol(text, textord, wideChar, wideChar);\n\n  wideChar = String.fromCharCode(0xd835, 0xdd38 + i); // A-Z a-z double struck\n  defineSymbol(math, mathord, wideChar, wideChar);\n  defineSymbol(text, textord, wideChar, wideChar);\n\n  const ch = letters.charAt(i);\n  wideChar = String.fromCharCode(0xd835, 0xdc9c + i); // A-Z a-z calligraphic\n  defineSymbol(math, mathord, ch, wideChar);\n  defineSymbol(text, textord, ch, wideChar);\n}\n\n// Next, some wide character numerals\nfor (let i = 0; i < 10; i++) {\n  wideChar = String.fromCharCode(0xd835, 0xdfce + i); // 0-9 bold\n  defineSymbol(math, mathord, wideChar, wideChar);\n  defineSymbol(text, textord, wideChar, wideChar);\n\n  wideChar = String.fromCharCode(0xd835, 0xdfe2 + i); // 0-9 sans serif\n  defineSymbol(math, mathord, wideChar, wideChar);\n  defineSymbol(text, textord, wideChar, wideChar);\n\n  wideChar = String.fromCharCode(0xd835, 0xdfec + i); // 0-9 bold sans\n  defineSymbol(math, mathord, wideChar, wideChar);\n  defineSymbol(text, textord, wideChar, wideChar);\n\n  wideChar = String.fromCharCode(0xd835, 0xdff6 + i); // 0-9 monospace\n  defineSymbol(math, mathord, wideChar, wideChar);\n  defineSymbol(text, textord, wideChar, wideChar);\n}\n\n/*\n * Neither Firefox nor Chrome support hard line breaks or soft line breaks.\n * (Despite https://www.w3.org/Math/draft-spec/mathml.html#chapter3_presm.lbattrs)\n * So Temml has work-arounds for both hard and soft breaks.\n * The work-arounds sadly do not work simultaneously. Any top-level hard\n * break makes soft line breaks impossible.\n *\n * Hard breaks are simulated by creating a <mtable> and putting each line in its own <mtr>.\n *\n * To create soft line breaks, Temml avoids using the <semantics> and <annotation> tags.\n * Then the top level of a <math> element can be occupied by <mrow> elements, and the browser\n * will break after a <mrow> if the expression extends beyond the container limit.\n *\n * The default is for soft line breaks after each top-level binary or\n * relational operator, per TeXbook p. 173. So we gather the expression into <mrow>s so that\n * each <mrow> ends in a binary or relational operator.\n *\n * An option is for soft line breaks before an \"=\" sign. That changes the <mrow>s.\n *\n * Soft line breaks will not work in Chromium and Safari, only Firefox.\n *\n * Hopefully browsers will someday do their own linebreaking and we will be able to delete\n * much of this module.\n */\n\nconst openDelims = \"([{\u230A\u2308\u27E8\u27EE\u23B0\u27E6\u2983\";\nconst closeDelims = \")]}\u230B\u2309\u27E9\u27EF\u23B1\u27E6\u2984\";\n\nfunction setLineBreaks(expression, wrapMode, isDisplayMode) {\n  const mtrs = [];\n  let mrows = [];\n  let block = [];\n  let numTopLevelEquals = 0;\n  let i = 0;\n  let level = 0;\n  while (i < expression.length) {\n    while (expression[i] instanceof DocumentFragment) {\n      expression.splice(i, 1, ...expression[i].children); // Expand the fragment.\n    }\n    const node = expression[i];\n    if (node.attributes && node.attributes.linebreak &&\n      node.attributes.linebreak === \"newline\") {\n      // A hard line break. Create a <mtr> for the current block.\n      if (block.length > 0) {\n        mrows.push(new mathMLTree.MathNode(\"mrow\", block));\n      }\n      mrows.push(node);\n      block = [];\n      const mtd = new mathMLTree.MathNode(\"mtd\", mrows);\n      mtd.style.textAlign = \"left\";\n      mtrs.push(new mathMLTree.MathNode(\"mtr\", [mtd]));\n      mrows = [];\n      i += 1;\n      continue\n    }\n    block.push(node);\n    if (node.type && node.type === \"mo\" && node.children.length === 1 &&\n        !Object.prototype.hasOwnProperty.call(node.attributes, \"movablelimits\")) {\n      const ch = node.children[0].text;\n      if (openDelims.indexOf(ch) > -1) {\n        level += 1;\n      } else if (closeDelims.indexOf(ch) > -1) {\n        level -= 1;\n      } else if (level === 0 && wrapMode === \"=\" && ch === \"=\") {\n        numTopLevelEquals += 1;\n        if (numTopLevelEquals > 1) {\n          block.pop();\n          // Start a new block. (Insert a soft linebreak.)\n          const element = new mathMLTree.MathNode(\"mrow\", block);\n          mrows.push(element);\n          block = [node];\n        }\n      } else if (level === 0 && wrapMode === \"tex\" && ch !== \"\u2207\") {\n        // Check if the following node is a \\nobreak text node, e.g. \"~\"\"\n        const next = i < expression.length - 1 ? expression[i + 1] : null;\n        let glueIsFreeOfNobreak = true;\n        if (\n          !(\n            next &&\n            next.type === \"mtext\" &&\n            next.attributes.linebreak &&\n            next.attributes.linebreak === \"nobreak\"\n          )\n        ) {\n          // We may need to start a new block.\n          // First, put any post-operator glue on same line as operator.\n          for (let j = i + 1; j < expression.length; j++) {\n            const nd = expression[j];\n            if (\n              nd.type &&\n              nd.type === \"mspace\" &&\n              !(nd.attributes.linebreak && nd.attributes.linebreak === \"newline\")\n            ) {\n              block.push(nd);\n              i += 1;\n              if (\n                nd.attributes &&\n                nd.attributes.linebreak &&\n                nd.attributes.linebreak === \"nobreak\"\n              ) {\n                glueIsFreeOfNobreak = false;\n              }\n            } else {\n              break;\n            }\n          }\n        }\n        if (glueIsFreeOfNobreak) {\n          // Start a new block. (Insert a soft linebreak.)\n          const element = new mathMLTree.MathNode(\"mrow\", block);\n          mrows.push(element);\n          block = [];\n        }\n      }\n    }\n    i += 1;\n  }\n  if (block.length > 0) {\n    const element = new mathMLTree.MathNode(\"mrow\", block);\n    mrows.push(element);\n  }\n  if (mtrs.length > 0) {\n    const mtd = new mathMLTree.MathNode(\"mtd\", mrows);\n    mtd.style.textAlign = \"left\";\n    const mtr = new mathMLTree.MathNode(\"mtr\", [mtd]);\n    mtrs.push(mtr);\n    const mtable = new mathMLTree.MathNode(\"mtable\", mtrs);\n    if (!isDisplayMode) {\n      mtable.setAttribute(\"columnalign\", \"left\");\n      mtable.setAttribute(\"rowspacing\", \"0em\");\n    }\n    return mtable\n  }\n  return mathMLTree.newDocumentFragment(mrows);\n}\n\n/**\n * This file converts a parse tree into a corresponding MathML tree. The main\n * entry point is the `buildMathML` function, which takes a parse tree from the\n * parser.\n */\n\n\n/**\n * Takes a symbol and converts it into a MathML text node after performing\n * optional replacement from symbols.js.\n */\nconst makeText = function(text, mode, style) {\n  if (\n    symbols[mode][text] &&\n    symbols[mode][text].replace &&\n    text.charCodeAt(0) !== 0xd835 &&\n    !(\n      Object.prototype.hasOwnProperty.call(ligatures, text) &&\n      style &&\n      ((style.fontFamily && style.fontFamily.slice(4, 6) === \"tt\") ||\n        (style.font && style.font.slice(4, 6) === \"tt\"))\n    )\n  ) {\n    text = symbols[mode][text].replace;\n  }\n\n  return new mathMLTree.TextNode(text);\n};\n\nconst copyChar = (newRow, child) => {\n  if (newRow.children.length === 0 ||\n      newRow.children[newRow.children.length - 1].type !== \"mtext\") {\n    const mtext = new mathMLTree.MathNode(\n      \"mtext\",\n      [new mathMLTree.TextNode(child.children[0].text)]\n    );\n    newRow.children.push(mtext);\n  } else {\n    newRow.children[newRow.children.length - 1].children[0].text += child.children[0].text;\n  }\n};\n\nconst consolidateText = mrow => {\n  // If possible, consolidate adjacent <mtext> elements into a single element.\n  if (mrow.type !== \"mrow\" && mrow.type !== \"mstyle\") { return mrow }\n  if (mrow.children.length === 0) { return mrow } // empty group, e.g., \\text{}\n  const newRow = new mathMLTree.MathNode(\"mrow\");\n  for (let i = 0; i < mrow.children.length; i++) {\n    const child = mrow.children[i];\n    if (child.type === \"mtext\" && Object.keys(child.attributes).length === 0) {\n      copyChar(newRow, child);\n    } else if (child.type === \"mrow\") {\n      // We'll also check the children of an mrow. One level only. No recursion.\n      let canConsolidate = true;\n      for (let j = 0; j < child.children.length; j++) {\n        const grandChild = child.children[j];\n        if (grandChild.type !== \"mtext\" || Object.keys(child.attributes).length !== 0) {\n          canConsolidate = false;\n          break\n        }\n      }\n      if (canConsolidate) {\n        for (let j = 0; j < child.children.length; j++) {\n          const grandChild = child.children[j];\n          copyChar(newRow, grandChild);\n        }\n      } else {\n        newRow.children.push(child);\n      }\n    } else {\n      newRow.children.push(child);\n    }\n  }\n  for (let i = 0; i < newRow.children.length; i++) {\n    if (newRow.children[i].type === \"mtext\") {\n      const mtext = newRow.children[i];\n      // Firefox does not render a space at either end of an <mtext> string.\n      // To get proper rendering, we replace leading or trailing spaces with no-break spaces.\n      if (mtext.children[0].text.charAt(0) === \" \") {\n        mtext.children[0].text = \"\\u00a0\" + mtext.children[0].text.slice(1);\n      }\n      const L = mtext.children[0].text.length;\n      if (L > 0 && mtext.children[0].text.charAt(L - 1) === \" \") {\n        mtext.children[0].text = mtext.children[0].text.slice(0, -1) + \"\\u00a0\";\n      }\n      for (const [key, value] of Object.entries(mrow.attributes)) {\n        mtext.attributes[key] = value;\n      }\n    }\n  }\n  if (newRow.children.length === 1 && newRow.children[0].type === \"mtext\") {\n    return newRow.children[0]; // A consolidated <mtext>\n  } else {\n    return newRow\n  }\n};\n\n/**\n * Wrap the given array of nodes in an <mrow> node if needed, i.e.,\n * unless the array has length 1.  Always returns a single node.\n */\nconst makeRow = function(body, semisimple = false) {\n  if (body.length === 1 && !(body[0] instanceof DocumentFragment)) {\n    return body[0];\n  } else if (!semisimple) {\n    // Suppress spacing on <mo> nodes at both ends of the row.\n    if (body[0] instanceof MathNode && body[0].type === \"mo\" && !body[0].attributes.fence) {\n      body[0].attributes.lspace = \"0em\";\n      body[0].attributes.rspace = \"0em\";\n    }\n    const end = body.length - 1;\n    if (body[end] instanceof MathNode && body[end].type === \"mo\" && !body[end].attributes.fence) {\n      body[end].attributes.lspace = \"0em\";\n      body[end].attributes.rspace = \"0em\";\n    }\n  }\n  return new mathMLTree.MathNode(\"mrow\", body);\n};\n\n/**\n * Check for <mi>.</mi> which is how a dot renders in MathML,\n * or <mo separator=\"true\" lspace=\"0em\" rspace=\"0em\">,</mo>\n * which is how a braced comma {,} renders in MathML\n */\nfunction isNumberPunctuation(group) {\n  if (!group) {\n    return false\n  }\n  if (group.type === 'mi' && group.children.length === 1) {\n    const child = group.children[0];\n    return child instanceof TextNode && child.text === '.'\n  } else if (group.type === \"mtext\" && group.children.length === 1) {\n    const child = group.children[0];\n    return child instanceof TextNode && child.text === '\\u2008' // punctuation space\n  } else if (group.type === 'mo' && group.children.length === 1 &&\n    group.getAttribute('separator') === 'true' &&\n    group.getAttribute('lspace') === '0em' &&\n    group.getAttribute('rspace') === '0em') {\n    const child = group.children[0];\n    return child instanceof TextNode && child.text === ','\n  } else {\n    return false\n  }\n}\nconst isComma = (expression, i) => {\n  const node = expression[i];\n  const followingNode = expression[i + 1];\n  return (node.type === \"atom\" && node.text === \",\") &&\n    // Don't consolidate if there is a space after the comma.\n    node.loc && followingNode.loc && node.loc.end === followingNode.loc.start\n};\n\nconst isRel = item => {\n  return (item.type === \"atom\" && item.family === \"rel\") ||\n      (item.type === \"mclass\" && item.mclass === \"mrel\")\n};\n\n/**\n * Takes a list of nodes, builds them, and returns a list of the generated\n * MathML nodes.  Also do a couple chores along the way:\n * (1) Suppress spacing when an author wraps an operator w/braces, as in {=}.\n * (2) Suppress spacing between two adjacent relations.\n */\nconst buildExpression = function(expression, style, semisimple = false) {\n  if (!semisimple && expression.length === 1) {\n    const group = buildGroup$1(expression[0], style);\n    if (group instanceof MathNode && group.type === \"mo\") {\n      // When TeX writers want to suppress spacing on an operator,\n      // they often put the operator by itself inside braces.\n      group.setAttribute(\"lspace\", \"0em\");\n      group.setAttribute(\"rspace\", \"0em\");\n    }\n    return [group];\n  }\n\n  const groups = [];\n  const groupArray = [];\n  let lastGroup;\n  for (let i = 0; i < expression.length; i++) {\n    groupArray.push(buildGroup$1(expression[i], style));\n  }\n\n  for (let i = 0; i < groupArray.length; i++) {\n    const group = groupArray[i];\n\n    // Suppress spacing between adjacent relations\n    if (i < expression.length - 1 && isRel(expression[i]) && isRel(expression[i + 1])) {\n      group.setAttribute(\"rspace\", \"0em\");\n    }\n    if (i > 0 && isRel(expression[i]) && isRel(expression[i - 1])) {\n      group.setAttribute(\"lspace\", \"0em\");\n    }\n\n    // Concatenate numbers\n    if (group.type === 'mn' && lastGroup && lastGroup.type === 'mn') {\n      // Concatenate <mn>...</mn> followed by <mi>.</mi>\n      lastGroup.children.push(...group.children);\n      continue\n    } else if (isNumberPunctuation(group) && lastGroup && lastGroup.type === 'mn') {\n      // Concatenate <mn>...</mn> followed by <mi>.</mi>\n      lastGroup.children.push(...group.children);\n      continue\n    } else if (lastGroup && lastGroup.type === \"mn\" && i < groupArray.length - 1 &&\n      groupArray[i + 1].type === \"mn\" && isComma(expression, i)) {\n      lastGroup.children.push(...group.children);\n      continue\n    } else if (group.type === 'mn' && isNumberPunctuation(lastGroup)) {\n      // Concatenate <mi>.</mi> followed by <mn>...</mn>\n      group.children = [...lastGroup.children, ...group.children];\n      groups.pop();\n    } else if ((group.type === 'msup' || group.type === 'msub') &&\n        group.children.length >= 1 && lastGroup &&\n        (lastGroup.type === 'mn' || isNumberPunctuation(lastGroup))) {\n      // Put preceding <mn>...</mn> or <mi>.</mi> inside base of\n      // <msup><mn>...base...</mn>...exponent...</msup> (or <msub>)\n      const base = group.children[0];\n      if (base instanceof MathNode && base.type === 'mn' && lastGroup) {\n        base.children = [...lastGroup.children, ...base.children];\n        groups.pop();\n      }\n    }\n    groups.push(group);\n    lastGroup = group;\n  }\n  return groups\n};\n\n/**\n * Equivalent to buildExpression, but wraps the elements in an <mrow>\n * if there's more than one.  Returns a single node instead of an array.\n */\nconst buildExpressionRow = function(expression, style, semisimple = false) {\n  return makeRow(buildExpression(expression, style, semisimple), semisimple);\n};\n\n/**\n * Takes a group from the parser and calls the appropriate groupBuilders function\n * on it to produce a MathML node.\n */\nconst buildGroup$1 = function(group, style) {\n  if (!group) {\n    return new mathMLTree.MathNode(\"mrow\");\n  }\n\n  if (_mathmlGroupBuilders[group.type]) {\n    // Call the groupBuilders function\n    const result = _mathmlGroupBuilders[group.type](group, style);\n    return result;\n  } else {\n    throw new ParseError(\"Got group of unknown type: '\" + group.type + \"'\");\n  }\n};\n\nconst glue$1 = _ => {\n  return new mathMLTree.MathNode(\"mtd\", [], [], { padding: \"0\", width: \"50%\" })\n};\n\nconst labelContainers = [\"mrow\", \"mtd\", \"mtable\", \"mtr\"];\nconst getLabel = parent => {\n  for (const node of parent.children) {\n    if (node.type && labelContainers.includes(node.type)) {\n      if (node.classes && node.classes[0] === \"tml-label\") {\n        const label = node.label;\n        return label\n      } else {\n        const label = getLabel(node);\n        if (label) { return label }\n      }\n    } else if (!node.type) {\n      const label = getLabel(node);\n      if (label) { return label }\n    }\n  }\n};\n\nconst taggedExpression = (expression, tag, style, leqno) => {\n  tag = buildExpressionRow(tag[0].body, style);\n  tag = consolidateText(tag);\n  tag.classes.push(\"tml-tag\");\n\n  const label = getLabel(expression); // from a \\label{} function.\n  expression = new mathMLTree.MathNode(\"mtd\", [expression]);\n  const rowArray = [glue$1(), expression, glue$1()];\n  rowArray[leqno ? 0 : 2].classes.push(leqno ? \"tml-left\" : \"tml-right\");\n  rowArray[leqno ? 0 : 2].children.push(tag);\n  const mtr = new mathMLTree.MathNode(\"mtr\", rowArray, [\"tml-tageqn\"]);\n  if (label) { mtr.setAttribute(\"id\", label); }\n  const table = new mathMLTree.MathNode(\"mtable\", [mtr]);\n  table.style.width = \"100%\";\n  table.setAttribute(\"displaystyle\", \"true\");\n  return table\n};\n\n/**\n * Takes a full parse tree and settings and builds a MathML representation of\n * it.\n */\nfunction buildMathML(tree, texExpression, style, settings) {\n  // Strip off outer tag wrapper for processing below.\n  let tag = null;\n  if (tree.length === 1 && tree[0].type === \"tag\") {\n    tag = tree[0].tag;\n    tree = tree[0].body;\n  }\n\n  const expression = buildExpression(tree, style);\n\n  if (expression.length === 1 && expression[0] instanceof AnchorNode) {\n    return expression[0]\n  }\n\n  const wrap = (settings.displayMode || settings.annotate) ? \"none\" : settings.wrap;\n\n  const n1 = expression.length === 0 ? null : expression[0];\n  let wrapper = expression.length === 1 && tag === null && (n1 instanceof MathNode)\n      ? expression[0]\n      : setLineBreaks(expression, wrap, settings.displayMode);\n\n  if (tag) {\n    wrapper = taggedExpression(wrapper, tag, style, settings.leqno);\n  }\n\n  if (settings.annotate) {\n    // Build a TeX annotation of the source\n    const annotation = new mathMLTree.MathNode(\n      \"annotation\", [new mathMLTree.TextNode(texExpression)]);\n    annotation.setAttribute(\"encoding\", \"application/x-tex\");\n    wrapper = new mathMLTree.MathNode(\"semantics\", [wrapper, annotation]);\n  }\n\n  const math = new mathMLTree.MathNode(\"math\", [wrapper]);\n\n  if (settings.xml) {\n    math.setAttribute(\"xmlns\", \"http://www.w3.org/1998/Math/MathML\");\n  }\n  if (settings.displayMode) {\n    math.setAttribute(\"display\", \"block\");\n    math.style.display = \"block math\"; // necessary in Chromium.\n    // Firefox and Safari do not recognize display: \"block math\".\n    // Set a class so that the CSS file can set display: block.\n    math.classes = [\"tml-display\"];\n  }\n  return math;\n}\n\nconst smalls = \"aceg\u0131\u0237mnopqrsuvwxyz\u03B1\u03B3\u03B5\u03B7\u03B9\u03BA\u03BC\u03BD\u03BF\u03C0\u03C1\u03C2\u03C3\u03C4\u03C5\u03C7\u03C9\u03D5\uD835\uDC1A\uD835\uDC1C\uD835\uDC1E\uD835\uDC20\uD835\uDC26\uD835\uDC27\uD835\uDC28\uD835\uDC29\uD835\uDC2A\uD835\uDC2B\uD835\uDC2C\uD835\uDC2E\uD835\uDC2F\uD835\uDC30\uD835\uDC31\uD835\uDC32\uD835\uDC33\";\nconst talls = \"ABCDEFGHIJKLMNOPQRSTUVWXYZbdfhklt\u0391\u0392\u0393\u0394\u0395\u0396\u0397\u0398\u0399\u039A\u039B\u039C\u039D\u039E\u039F\u03A0\u03A1\u03A3\u03A4\u03A5\u03A6\u03A7\u03A8\u03A9\u03B2\u03B4\u03BB\u03B6\u03C6\u03B8\u03C8\"\n             + \"\uD835\uDC00\uD835\uDC01\uD835\uDC02\uD835\uDC03\uD835\uDC04\uD835\uDC05\uD835\uDC06\uD835\uDC07\uD835\uDC08\uD835\uDC09\uD835\uDC0A\uD835\uDC0B\uD835\uDC0C\uD835\uDC0D\uD835\uDC0E\uD835\uDC0F\uD835\uDC10\uD835\uDC11\uD835\uDC12\uD835\uDC13\uD835\uDC14\uD835\uDC15\uD835\uDC16\uD835\uDC17\uD835\uDC18\uD835\uDC19\uD835\uDC1B\uD835\uDC1D\uD835\uDC1F\uD835\uDC21\uD835\uDC24\uD835\uDC25\uD835\uDC2D\";\nconst longSmalls = new Set([\"\\\\alpha\", \"\\\\gamma\", \"\\\\delta\", \"\\\\epsilon\", \"\\\\eta\", \"\\\\iota\",\n  \"\\\\kappa\", \"\\\\mu\", \"\\\\nu\", \"\\\\pi\", \"\\\\rho\", \"\\\\sigma\", \"\\\\tau\", \"\\\\upsilon\", \"\\\\chi\", \"\\\\psi\",\n  \"\\\\omega\", \"\\\\imath\", \"\\\\jmath\"]);\nconst longTalls = new Set([\"\\\\Gamma\", \"\\\\Delta\", \"\\\\Sigma\", \"\\\\Omega\", \"\\\\beta\", \"\\\\delta\",\n  \"\\\\lambda\", \"\\\\theta\", \"\\\\psi\"]);\n\nconst mathmlBuilder$a = (group, style) => {\n  const accentNode = group.isStretchy\n    ? stretchy.accentNode(group)\n    : new mathMLTree.MathNode(\"mo\", [makeText(group.label, group.mode)]);\n\n  if (group.label === \"\\\\vec\") {\n    accentNode.style.transform = \"scale(0.75) translate(10%, 30%)\";\n  } else {\n    accentNode.style.mathStyle = \"normal\";\n    accentNode.style.mathDepth = \"0\";\n    if (needWebkitShift.has(group.label) &&  utils.isCharacterBox(group.base)) {\n      let shift = \"\";\n      const ch = group.base.text;\n      if (smalls.indexOf(ch) > -1 || longSmalls.has(ch)) { shift = \"tml-xshift\"; }\n      if (talls.indexOf(ch) > -1  || longTalls.has(ch))  { shift = \"tml-capshift\"; }\n      if (shift) { accentNode.classes.push(shift); }\n    }\n  }\n  if (!group.isStretchy) {\n    accentNode.setAttribute(\"stretchy\", \"false\");\n  }\n\n  const node = new mathMLTree.MathNode((group.label === \"\\\\c\" ? \"munder\" : \"mover\"),\n    [buildGroup$1(group.base, style), accentNode]\n  );\n\n  return node;\n};\n\nconst nonStretchyAccents = new Set([\n  \"\\\\acute\",\n  \"\\\\grave\",\n  \"\\\\ddot\",\n  \"\\\\dddot\",\n  \"\\\\ddddot\",\n  \"\\\\tilde\",\n  \"\\\\bar\",\n  \"\\\\breve\",\n  \"\\\\check\",\n  \"\\\\hat\",\n  \"\\\\vec\",\n  \"\\\\dot\",\n  \"\\\\mathring\"\n]);\n\nconst needWebkitShift = new Set([\n  \"\\\\acute\",\n  \"\\\\bar\",\n  \"\\\\breve\",\n  \"\\\\check\",\n  \"\\\\dot\",\n  \"\\\\ddot\",\n  \"\\\\grave\",\n  \"\\\\hat\",\n  \"\\\\mathring\",\n  \"\\\\'\", \"\\\\^\", \"\\\\~\", \"\\\\=\", \"\\\\u\", \"\\\\.\", '\\\\\"', \"\\\\r\", \"\\\\H\", \"\\\\v\"\n]);\n\nconst combiningChar = {\n  \"\\\\`\": \"\\u0300\",\n  \"\\\\'\": \"\\u0301\",\n  \"\\\\^\": \"\\u0302\",\n  \"\\\\~\": \"\\u0303\",\n  \"\\\\=\": \"\\u0304\",\n  \"\\\\u\": \"\\u0306\",\n  \"\\\\.\": \"\\u0307\",\n  '\\\\\"': \"\\u0308\",\n  \"\\\\r\": \"\\u030A\",\n  \"\\\\H\": \"\\u030B\",\n  \"\\\\v\": \"\\u030C\"\n};\n\n// Accents\ndefineFunction({\n  type: \"accent\",\n  names: [\n    \"\\\\acute\",\n    \"\\\\grave\",\n    \"\\\\ddot\",\n    \"\\\\dddot\",\n    \"\\\\ddddot\",\n    \"\\\\tilde\",\n    \"\\\\bar\",\n    \"\\\\breve\",\n    \"\\\\check\",\n    \"\\\\hat\",\n    \"\\\\vec\",\n    \"\\\\dot\",\n    \"\\\\mathring\",\n    \"\\\\overparen\",\n    \"\\\\widecheck\",\n    \"\\\\widehat\",\n    \"\\\\wideparen\",\n    \"\\\\widetilde\",\n    \"\\\\overrightarrow\",\n    \"\\\\overleftarrow\",\n    \"\\\\Overrightarrow\",\n    \"\\\\overleftrightarrow\",\n    \"\\\\overgroup\",\n    \"\\\\overleftharpoon\",\n    \"\\\\overrightharpoon\"\n  ],\n  props: {\n    numArgs: 1\n  },\n  handler: (context, args) => {\n    const base = normalizeArgument(args[0]);\n\n    const isStretchy = !nonStretchyAccents.has(context.funcName);\n\n    return {\n      type: \"accent\",\n      mode: context.parser.mode,\n      label: context.funcName,\n      isStretchy: isStretchy,\n      base: base\n    };\n  },\n  mathmlBuilder: mathmlBuilder$a\n});\n\n// Text-mode accents\ndefineFunction({\n  type: \"accent\",\n  names: [\"\\\\'\", \"\\\\`\", \"\\\\^\", \"\\\\~\", \"\\\\=\", \"\\\\c\", \"\\\\u\", \"\\\\.\", '\\\\\"', \"\\\\r\", \"\\\\H\", \"\\\\v\"],\n  props: {\n    numArgs: 1,\n    allowedInText: true,\n    allowedInMath: true,\n    argTypes: [\"primitive\"]\n  },\n  handler: (context, args) => {\n    const base = normalizeArgument(args[0]);\n    const mode = context.parser.mode;\n\n    if (mode === \"math\" && context.parser.settings.strict) {\n      // LaTeX only writes a warning. It doesn't stop. We'll issue the same warning.\n      // eslint-disable-next-line no-console\n      console.log(`Temml parse error: Command ${context.funcName} is invalid in math mode.`);\n    }\n\n    if (mode === \"text\" && base.text && base.text.length === 1\n        && context.funcName in combiningChar  && smalls.indexOf(base.text) > -1) {\n      // Return a combining accent character\n      return {\n        type: \"textord\",\n        mode: \"text\",\n        text: base.text + combiningChar[context.funcName]\n      }\n    } else {\n      // Build up the accent\n      return {\n        type: \"accent\",\n        mode: mode,\n        label: context.funcName,\n        isStretchy: false,\n        base: base\n      }\n    }\n  },\n  mathmlBuilder: mathmlBuilder$a\n});\n\ndefineFunction({\n  type: \"accentUnder\",\n  names: [\n    \"\\\\underleftarrow\",\n    \"\\\\underrightarrow\",\n    \"\\\\underleftrightarrow\",\n    \"\\\\undergroup\",\n    \"\\\\underparen\",\n    \"\\\\utilde\"\n  ],\n  props: {\n    numArgs: 1\n  },\n  handler: ({ parser, funcName }, args) => {\n    const base = args[0];\n    return {\n      type: \"accentUnder\",\n      mode: parser.mode,\n      label: funcName,\n      base: base\n    };\n  },\n  mathmlBuilder: (group, style) => {\n    const accentNode = stretchy.accentNode(group);\n    accentNode.style[\"math-depth\"] = 0;\n    const node = new mathMLTree.MathNode(\"munder\", [\n      buildGroup$1(group.base, style),\n      accentNode\n    ]);\n    return node;\n  }\n});\n\n/**\n * This file does conversion between units.  In particular, it provides\n * calculateSize to convert other units into CSS units.\n */\n\n\nconst ptPerUnit = {\n  // Convert to CSS (Postscipt) points, not TeX points\n  // https://en.wikibooks.org/wiki/LaTeX/Lengths and\n  // https://tex.stackexchange.com/a/8263\n  pt: 800 / 803, // convert TeX point to CSS (Postscript) point\n  pc: (12 * 800) / 803, // pica\n  dd: ((1238 / 1157) * 800) / 803, // didot\n  cc: ((14856 / 1157) * 800) / 803, // cicero (12 didot)\n  nd: ((685 / 642) * 800) / 803, // new didot\n  nc: ((1370 / 107) * 800) / 803, // new cicero (12 new didot)\n  sp: ((1 / 65536) * 800) / 803, // scaled point (TeX's internal smallest unit)\n  mm: (25.4 / 72),\n  cm: (2.54 / 72),\n  in: (1 / 72),\n  px: (96 / 72)\n};\n\n/**\n * Determine whether the specified unit (either a string defining the unit\n * or a \"size\" parse node containing a unit field) is valid.\n */\nconst validUnits = [\n  \"em\",\n  \"ex\",\n  \"mu\",\n  \"pt\",\n  \"mm\",\n  \"cm\",\n  \"in\",\n  \"px\",\n  \"bp\",\n  \"pc\",\n  \"dd\",\n  \"cc\",\n  \"nd\",\n  \"nc\",\n  \"sp\"\n];\n\nconst validUnit = function(unit) {\n  if (typeof unit !== \"string\") {\n    unit = unit.unit;\n  }\n  return validUnits.indexOf(unit) > -1\n};\n\nconst emScale = styleLevel => {\n  const scriptLevel = Math.max(styleLevel - 1, 0);\n  return [1, 0.7, 0.5][scriptLevel]\n};\n\n/*\n * Convert a \"size\" parse node (with numeric \"number\" and string \"unit\" fields,\n * as parsed by functions.js argType \"size\") into a CSS value.\n */\nconst calculateSize = function(sizeValue, style) {\n  let number = sizeValue.number;\n  if (style.maxSize[0] < 0 && number > 0) {\n    return { number: 0, unit: \"em\" }\n  }\n  const unit = sizeValue.unit;\n  switch (unit) {\n    case \"mm\":\n    case \"cm\":\n    case \"in\":\n    case \"px\": {\n      const numInCssPts = number * ptPerUnit[unit];\n      if (numInCssPts > style.maxSize[1]) {\n        return { number: style.maxSize[1], unit: \"pt\" }\n      }\n      return { number, unit }; // absolute CSS units.\n    }\n    case \"em\":\n    case \"ex\": {\n      // In TeX, em and ex do not change size in \\scriptstyle.\n      if (unit === \"ex\") { number *= 0.431; }\n      number = Math.min(number / emScale(style.level), style.maxSize[0]);\n      return { number: utils.round(number), unit: \"em\" };\n    }\n    case \"bp\": {\n      if (number > style.maxSize[1]) { number = style.maxSize[1]; }\n      return { number, unit: \"pt\" }; // TeX bp is a CSS pt. (1/72 inch).\n    }\n    case \"pt\":\n    case \"pc\":\n    case \"dd\":\n    case \"cc\":\n    case \"nd\":\n    case \"nc\":\n    case \"sp\": {\n      number = Math.min(number * ptPerUnit[unit], style.maxSize[1]);\n      return { number: utils.round(number), unit: \"pt\" }\n    }\n    case \"mu\": {\n      number = Math.min(number / 18, style.maxSize[0]);\n      return { number: utils.round(number), unit: \"em\" }\n    }\n    default:\n      throw new ParseError(\"Invalid unit: '\" + unit + \"'\")\n  }\n};\n\n// Helper functions\n\nconst padding$1 = width => {\n  const node = new mathMLTree.MathNode(\"mspace\");\n  node.setAttribute(\"width\", width + \"em\");\n  return node\n};\n\nconst paddedNode = (group, lspace = 0.3, rspace = 0, mustSmash = false) => {\n  if (group == null && rspace === 0) { return padding$1(lspace) }\n  const row = group ? [group] : [];\n  if (lspace !== 0)   { row.unshift(padding$1(lspace)); }\n  if (rspace > 0) { row.push(padding$1(rspace)); }\n  if (mustSmash) {\n    // Used for the bottom arrow in a {CD} environment\n    const mpadded = new mathMLTree.MathNode(\"mpadded\", row);\n    mpadded.setAttribute(\"height\", \"0\");\n    return mpadded\n  } else {\n    return new mathMLTree.MathNode(\"mrow\", row)\n  }\n};\n\nconst labelSize = (size, scriptLevel) =>  Number(size) / emScale(scriptLevel);\n\nconst munderoverNode = (fName, body, below, style) => {\n  const arrowNode = stretchy.mathMLnode(fName);\n  // Is this the short part of a mhchem equilibrium arrow?\n  const isEq = fName.slice(1, 3) === \"eq\";\n  const minWidth = fName.charAt(1) === \"x\"\n    ? \"1.75\"  // mathtools extensible arrows are \u2265 1.75em long\n    : fName.slice(2, 4) === \"cd\"\n    ? \"3.0\"  // cd package arrows\n    : isEq\n    ? \"1.0\"  // The shorter harpoon of a mhchem equilibrium arrow\n    : \"2.0\"; // other mhchem arrows\n  // TODO: When Firefox supports minsize, use the next line.\n  //arrowNode.setAttribute(\"minsize\", String(minWidth) + \"em\")\n  arrowNode.setAttribute(\"lspace\", \"0\");\n  arrowNode.setAttribute(\"rspace\", (isEq ? \"0.5em\" : \"0\"));\n\n  // <munderover> upper and lower labels are set to scriptlevel by MathML\n  // So we have to adjust our label dimensions accordingly.\n  const labelStyle = style.withLevel(style.level < 2 ? 2 : 3);\n  const minArrowWidth = labelSize(minWidth, labelStyle.level);\n  // The dummyNode will be inside a <mover> inside a <mover>\n  // So it will be at scriptlevel 3\n  const dummyWidth = labelSize(minWidth, 3);\n  const emptyLabel = paddedNode(null, minArrowWidth.toFixed(4), 0);\n  const dummyNode = paddedNode(null, dummyWidth.toFixed(4), 0);\n  // The arrow is a little longer than the label. Set a spacer length.\n  const space = labelSize((isEq ? 0 : 0.3), labelStyle.level).toFixed(4);\n  let upperNode;\n  let lowerNode;\n\n  const gotUpper = (body && body.body &&\n    // \\hphantom        visible content\n    (body.body.body || body.body.length > 0));\n  if (gotUpper) {\n    let label =  buildGroup$1(body, labelStyle);\n    const mustSmash = (fName === \"\\\\\\\\cdrightarrow\" || fName === \"\\\\\\\\cdleftarrow\");\n    label = paddedNode(label, space, space, mustSmash);\n    // Since Firefox does not support minsize, stack a invisible node\n    // on top of the label. Its width will serve as a min-width.\n    // TODO: Refactor this after Firefox supports minsize.\n    upperNode = new mathMLTree.MathNode(\"mover\", [label, dummyNode]);\n  }\n  const gotLower = (below && below.body &&\n    (below.body.body || below.body.length > 0));\n  if (gotLower) {\n    let label =  buildGroup$1(below, labelStyle);\n    label = paddedNode(label, space, space);\n    lowerNode = new mathMLTree.MathNode(\"munder\", [label, dummyNode]);\n  }\n\n  let node;\n  if (!gotUpper && !gotLower) {\n    node = new mathMLTree.MathNode(\"mover\", [arrowNode, emptyLabel]);\n  } else if (gotUpper && gotLower) {\n    node = new mathMLTree.MathNode(\"munderover\", [arrowNode, lowerNode, upperNode]);\n  } else if (gotUpper) {\n    node = new mathMLTree.MathNode(\"mover\", [arrowNode, upperNode]);\n  } else {\n    node = new mathMLTree.MathNode(\"munder\", [arrowNode, lowerNode]);\n  }\n  if (minWidth === \"3.0\") { node.style.height = \"1em\"; } // CD environment\n  node.setAttribute(\"accent\", \"false\"); // Necessary for MS Word\n  return node\n};\n\n// Stretchy arrows with an optional argument\ndefineFunction({\n  type: \"xArrow\",\n  names: [\n    \"\\\\xleftarrow\",\n    \"\\\\xrightarrow\",\n    \"\\\\xLeftarrow\",\n    \"\\\\xRightarrow\",\n    \"\\\\xleftrightarrow\",\n    \"\\\\xLeftrightarrow\",\n    \"\\\\xhookleftarrow\",\n    \"\\\\xhookrightarrow\",\n    \"\\\\xmapsto\",\n    \"\\\\xrightharpoondown\",\n    \"\\\\xrightharpoonup\",\n    \"\\\\xleftharpoondown\",\n    \"\\\\xleftharpoonup\",\n    \"\\\\xlongequal\",\n    \"\\\\xtwoheadrightarrow\",\n    \"\\\\xtwoheadleftarrow\",\n    // The next 5 functions are here only to support mhchem\n    \"\\\\yields\",\n    \"\\\\yieldsLeft\",\n    \"\\\\mesomerism\",\n    \"\\\\longrightharpoonup\",\n    \"\\\\longleftharpoondown\",\n    // The next 3 functions are here only to support the {CD} environment.\n    \"\\\\\\\\cdrightarrow\",\n    \"\\\\\\\\cdleftarrow\",\n    \"\\\\\\\\cdlongequal\"\n  ],\n  props: {\n    numArgs: 1,\n    numOptionalArgs: 1\n  },\n  handler({ parser, funcName }, args, optArgs) {\n    return {\n      type: \"xArrow\",\n      mode: parser.mode,\n      name: funcName,\n      body: args[0],\n      below: optArgs[0]\n    };\n  },\n  mathmlBuilder(group, style) {\n    // Build the arrow and its labels.\n    const node = munderoverNode(group.name, group.body, group.below, style);\n    // Create operator spacing for a relation.\n    const row = [node];\n    row.unshift(padding$1(0.2778));\n    row.push(padding$1(0.2778));\n    return new mathMLTree.MathNode(\"mrow\", row)\n  }\n});\n\nconst arrowComponent = {\n  \"\\\\xtofrom\": [\"\\\\xrightarrow\", \"\\\\xleftarrow\"],\n  \"\\\\xleftrightharpoons\": [\"\\\\xleftharpoonup\", \"\\\\xrightharpoondown\"],\n  \"\\\\xrightleftharpoons\": [\"\\\\xrightharpoonup\", \"\\\\xleftharpoondown\"],\n  \"\\\\yieldsLeftRight\": [\"\\\\yields\", \"\\\\yieldsLeft\"],\n  // The next three all get the same harpoon glyphs. Only the lengths and paddings differ.\n  \"\\\\equilibrium\": [\"\\\\longrightharpoonup\", \"\\\\longleftharpoondown\"],\n  \"\\\\equilibriumRight\": [\"\\\\longrightharpoonup\", \"\\\\eqleftharpoondown\"],\n  \"\\\\equilibriumLeft\": [\"\\\\eqrightharpoonup\", \"\\\\longleftharpoondown\"]\n};\n\n// Browsers are not good at stretching a glyph that contains a pair of stacked arrows such as \u21C4.\n// So we stack a pair of single arrows.\ndefineFunction({\n  type: \"stackedArrow\",\n  names: [\n    \"\\\\xtofrom\",              // expfeil\n    \"\\\\xleftrightharpoons\",   // mathtools\n    \"\\\\xrightleftharpoons\",   // mathtools\n    \"\\\\yieldsLeftRight\",      // mhchem\n    \"\\\\equilibrium\",          // mhchem\n    \"\\\\equilibriumRight\",\n    \"\\\\equilibriumLeft\"\n  ],\n  props: {\n    numArgs: 1,\n    numOptionalArgs: 1\n  },\n  handler({ parser, funcName }, args, optArgs) {\n    const lowerArrowBody = args[0]\n      ? {\n        type: \"hphantom\",\n        mode: parser.mode,\n        body: args[0]\n      }\n      : null;\n    const upperArrowBelow = optArgs[0]\n      ? {\n        type: \"hphantom\",\n        mode: parser.mode,\n        body: optArgs[0]\n      }\n      : null;\n    return {\n      type: \"stackedArrow\",\n      mode: parser.mode,\n      name: funcName,\n      body: args[0],\n      upperArrowBelow,\n      lowerArrowBody,\n      below: optArgs[0]\n    };\n  },\n  mathmlBuilder(group, style) {\n    const topLabel = arrowComponent[group.name][0];\n    const botLabel = arrowComponent[group.name][1];\n    const topArrow = munderoverNode(topLabel, group.body, group.upperArrowBelow, style);\n    const botArrow = munderoverNode(botLabel, group.lowerArrowBody, group.below, style);\n    let wrapper;\n\n    const raiseNode = new mathMLTree.MathNode(\"mpadded\", [topArrow]);\n    raiseNode.setAttribute(\"voffset\", \"0.3em\");\n    raiseNode.setAttribute(\"height\", \"+0.3em\");\n    raiseNode.setAttribute(\"depth\", \"-0.3em\");\n    // One of the arrows is given ~zero width. so the other has the same horzontal alignment.\n    if (group.name === \"\\\\equilibriumLeft\") {\n      const botNode =  new mathMLTree.MathNode(\"mpadded\", [botArrow]);\n      botNode.setAttribute(\"width\", \"0.5em\");\n      wrapper = new mathMLTree.MathNode(\n        \"mpadded\",\n        [padding$1(0.2778), botNode, raiseNode, padding$1(0.2778)]\n      );\n    } else {\n      raiseNode.setAttribute(\"width\", (group.name === \"\\\\equilibriumRight\" ? \"0.5em\" : \"0\"));\n      wrapper = new mathMLTree.MathNode(\n        \"mpadded\",\n        [padding$1(0.2778), raiseNode, botArrow, padding$1(0.2778)]\n      );\n    }\n\n    wrapper.setAttribute(\"voffset\", \"-0.18em\");\n    wrapper.setAttribute(\"height\", \"-0.18em\");\n    wrapper.setAttribute(\"depth\", \"+0.18em\");\n    return wrapper\n  }\n});\n\n/**\n * All registered environments.\n * `environments.js` exports this same dictionary again and makes it public.\n * `Parser.js` requires this dictionary via `environments.js`.\n */\nconst _environments = {};\n\nfunction defineEnvironment({ type, names, props, handler, mathmlBuilder }) {\n  // Set default values of environments.\n  const data = {\n    type,\n    numArgs: props.numArgs || 0,\n    allowedInText: false,\n    numOptionalArgs: 0,\n    handler\n  };\n  for (let i = 0; i < names.length; ++i) {\n    _environments[names[i]] = data;\n  }\n  if (mathmlBuilder) {\n    _mathmlGroupBuilders[type] = mathmlBuilder;\n  }\n}\n\n/**\n * Asserts that the node is of the given type and returns it with stricter\n * typing. Throws if the node's type does not match.\n */\nfunction assertNodeType(node, type) {\n  if (!node || node.type !== type) {\n    throw new Error(\n      `Expected node of type ${type}, but got ` +\n        (node ? `node of type ${node.type}` : String(node))\n    );\n  }\n  return node;\n}\n\n/**\n * Returns the node more strictly typed iff it is of the given type. Otherwise,\n * returns null.\n */\nfunction assertSymbolNodeType(node) {\n  const typedNode = checkSymbolNodeType(node);\n  if (!typedNode) {\n    throw new Error(\n      `Expected node of symbol group type, but got ` +\n        (node ? `node of type ${node.type}` : String(node))\n    );\n  }\n  return typedNode;\n}\n\n/**\n * Returns the node more strictly typed iff it is of the given type. Otherwise,\n * returns null.\n */\nfunction checkSymbolNodeType(node) {\n  if (node && (node.type === \"atom\" ||\n      Object.prototype.hasOwnProperty.call(NON_ATOMS, node.type))) {\n    return node;\n  }\n  return null;\n}\n\nconst cdArrowFunctionName = {\n  \">\": \"\\\\\\\\cdrightarrow\",\n  \"<\": \"\\\\\\\\cdleftarrow\",\n  \"=\": \"\\\\\\\\cdlongequal\",\n  A: \"\\\\uparrow\",\n  V: \"\\\\downarrow\",\n  \"|\": \"\\\\Vert\",\n  \".\": \"no arrow\"\n};\n\nconst newCell = () => {\n  // Create an empty cell, to be filled below with parse nodes.\n  return { type: \"styling\", body: [], mode: \"math\", scriptLevel: \"display\" };\n};\n\nconst isStartOfArrow = (node) => {\n  return node.type === \"textord\" && node.text === \"@\";\n};\n\nconst isLabelEnd = (node, endChar) => {\n  return (node.type === \"mathord\" || node.type === \"atom\") && node.text === endChar;\n};\n\nfunction cdArrow(arrowChar, labels, parser) {\n  // Return a parse tree of an arrow and its labels.\n  // This acts in a way similar to a macro expansion.\n  const funcName = cdArrowFunctionName[arrowChar];\n  switch (funcName) {\n    case \"\\\\\\\\cdrightarrow\":\n    case \"\\\\\\\\cdleftarrow\":\n      return parser.callFunction(funcName, [labels[0]], [labels[1]]);\n    case \"\\\\uparrow\":\n    case \"\\\\downarrow\": {\n      const leftLabel = parser.callFunction(\"\\\\\\\\cdleft\", [labels[0]], []);\n      const bareArrow = {\n        type: \"atom\",\n        text: funcName,\n        mode: \"math\",\n        family: \"rel\"\n      };\n      const sizedArrow = parser.callFunction(\"\\\\Big\", [bareArrow], []);\n      const rightLabel = parser.callFunction(\"\\\\\\\\cdright\", [labels[1]], []);\n      const arrowGroup = {\n        type: \"ordgroup\",\n        mode: \"math\",\n        body: [leftLabel, sizedArrow, rightLabel],\n        semisimple: true\n      };\n      return parser.callFunction(\"\\\\\\\\cdparent\", [arrowGroup], []);\n    }\n    case \"\\\\\\\\cdlongequal\":\n      return parser.callFunction(\"\\\\\\\\cdlongequal\", [], []);\n    case \"\\\\Vert\": {\n      const arrow = { type: \"textord\", text: \"\\\\Vert\", mode: \"math\" };\n      return parser.callFunction(\"\\\\Big\", [arrow], []);\n    }\n    default:\n      return { type: \"textord\", text: \" \", mode: \"math\" };\n  }\n}\n\nfunction parseCD(parser) {\n  // Get the array's parse nodes with \\\\ temporarily mapped to \\cr.\n  const parsedRows = [];\n  parser.gullet.beginGroup();\n  parser.gullet.macros.set(\"\\\\cr\", \"\\\\\\\\\\\\relax\");\n  parser.gullet.beginGroup();\n  while (true) {\n    // Get the parse nodes for the next row.\n    parsedRows.push(parser.parseExpression(false, \"\\\\\\\\\"));\n    parser.gullet.endGroup();\n    parser.gullet.beginGroup();\n    const next = parser.fetch().text;\n    if (next === \"&\" || next === \"\\\\\\\\\") {\n      parser.consume();\n    } else if (next === \"\\\\end\") {\n      if (parsedRows[parsedRows.length - 1].length === 0) {\n        parsedRows.pop(); // final row ended in \\\\\n      }\n      break;\n    } else {\n      throw new ParseError(\"Expected \\\\\\\\ or \\\\cr or \\\\end\", parser.nextToken);\n    }\n  }\n\n  let row = [];\n  const body = [row];\n\n  // Loop thru the parse nodes. Collect them into cells and arrows.\n  for (let i = 0; i < parsedRows.length; i++) {\n    // Start a new row.\n    const rowNodes = parsedRows[i];\n    // Create the first cell.\n    let cell = newCell();\n\n    for (let j = 0; j < rowNodes.length; j++) {\n      if (!isStartOfArrow(rowNodes[j])) {\n        // If a parseNode is not an arrow, it goes into a cell.\n        cell.body.push(rowNodes[j]);\n      } else {\n        // Parse node j is an \"@\", the start of an arrow.\n        // Before starting on the arrow, push the cell into `row`.\n        row.push(cell);\n\n        // Now collect parseNodes into an arrow.\n        // The character after \"@\" defines the arrow type.\n        j += 1;\n        const arrowChar = assertSymbolNodeType(rowNodes[j]).text;\n\n        // Create two empty label nodes. We may or may not use them.\n        const labels = new Array(2);\n        labels[0] = { type: \"ordgroup\", mode: \"math\", body: [] };\n        labels[1] = { type: \"ordgroup\", mode: \"math\", body: [] };\n\n        // Process the arrow.\n        if (\"=|.\".indexOf(arrowChar) > -1) ; else if (\"<>AV\".indexOf(arrowChar) > -1) {\n          // Four arrows, `@>>>`, `@<<<`, `@AAA`, and `@VVV`, each take\n          // two optional labels. E.g. the right-point arrow syntax is\n          // really:  @>{optional label}>{optional label}>\n          // Collect parseNodes into labels.\n          for (let labelNum = 0; labelNum < 2; labelNum++) {\n            let inLabel = true;\n            for (let k = j + 1; k < rowNodes.length; k++) {\n              if (isLabelEnd(rowNodes[k], arrowChar)) {\n                inLabel = false;\n                j = k;\n                break;\n              }\n              if (isStartOfArrow(rowNodes[k])) {\n                throw new ParseError(\n                  \"Missing a \" + arrowChar + \" character to complete a CD arrow.\",\n                  rowNodes[k]\n                );\n              }\n\n              labels[labelNum].body.push(rowNodes[k]);\n            }\n            if (inLabel) {\n              // isLabelEnd never returned a true.\n              throw new ParseError(\n                \"Missing a \" + arrowChar + \" character to complete a CD arrow.\",\n                rowNodes[j]\n              );\n            }\n          }\n        } else {\n          throw new ParseError(`Expected one of \"<>AV=|.\" after @.`);\n        }\n\n        // Now join the arrow to its labels.\n        const arrow = cdArrow(arrowChar, labels, parser);\n\n        // Wrap the arrow in a styling node\n        row.push(arrow);\n        // In CD's syntax, cells are implicit. That is, everything that\n        // is not an arrow gets collected into a cell. So create an empty\n        // cell now. It will collect upcoming parseNodes.\n        cell = newCell();\n      }\n    }\n    if (i % 2 === 0) {\n      // Even-numbered rows consist of: cell, arrow, cell, arrow, ... cell\n      // The last cell is not yet pushed into `row`, so:\n      row.push(cell);\n    } else {\n      // Odd-numbered rows consist of: vert arrow, empty cell, ... vert arrow\n      // Remove the empty cell that was placed at the beginning of `row`.\n      row.shift();\n    }\n    row = [];\n    body.push(row);\n  }\n  body.pop();\n\n  // End row group\n  parser.gullet.endGroup();\n  // End array group defining \\\\\n  parser.gullet.endGroup();\n\n  return {\n    type: \"array\",\n    mode: \"math\",\n    body,\n    tags: null,\n    labels: new Array(body.length + 1).fill(\"\"),\n    envClasses: [\"jot\", \"cd\"],\n    cols: [],\n    hLinesBeforeRow: new Array(body.length + 1).fill([])\n  };\n}\n\n// The functions below are not available for general use.\n// They are here only for internal use by the {CD} environment in placing labels\n// next to vertical arrows.\n\n// We don't need any such functions for horizontal arrows because we can reuse\n// the functionality that already exists for extensible arrows.\n\ndefineFunction({\n  type: \"cdlabel\",\n  names: [\"\\\\\\\\cdleft\", \"\\\\\\\\cdright\"],\n  props: {\n    numArgs: 1\n  },\n  handler({ parser, funcName }, args) {\n    return {\n      type: \"cdlabel\",\n      mode: parser.mode,\n      side: funcName.slice(4),\n      label: args[0]\n    };\n  },\n  mathmlBuilder(group, style) {\n    if (group.label.body.length === 0) {\n      return new mathMLTree.MathNode(\"mrow\", style)  // empty label\n    }\n    // Abuse an <mtable> to create vertically centered content.\n    const mtd = new mathMLTree.MathNode(\"mtd\", [buildGroup$1(group.label, style)]);\n    mtd.style.padding = \"0\";\n    const mtr = new mathMLTree.MathNode(\"mtr\", [mtd]);\n    const mtable = new mathMLTree.MathNode(\"mtable\", [mtr]);\n    const label = new mathMLTree.MathNode(\"mpadded\", [mtable]);\n    // Set the label width to zero so that the arrow will be centered under the corner cell.\n    label.setAttribute(\"width\", \"0\");\n    label.setAttribute(\"displaystyle\", \"false\");\n    label.setAttribute(\"scriptlevel\", \"1\");\n    if (group.side === \"left\") {\n      label.style.display = \"flex\";\n      label.style.justifyContent = \"flex-end\";\n    }\n    return label;\n  }\n});\n\ndefineFunction({\n  type: \"cdlabelparent\",\n  names: [\"\\\\\\\\cdparent\"],\n  props: {\n    numArgs: 1\n  },\n  handler({ parser }, args) {\n    return {\n      type: \"cdlabelparent\",\n      mode: parser.mode,\n      fragment: args[0]\n    };\n  },\n  mathmlBuilder(group, style) {\n    return new mathMLTree.MathNode(\"mrow\", [buildGroup$1(group.fragment, style)]);\n  }\n});\n\nconst ordGroup = (body) => {\n  return {\n    \"type\": \"ordgroup\",\n    \"mode\": \"math\",\n    \"body\": body,\n    \"semisimple\": true\n  }\n};\n\nconst phantom = (body, type) => {\n  return {\n    \"type\": type,\n    \"mode\": \"math\",\n    \"body\": ordGroup(body)\n  }\n};\n\n/*\n * A helper for \\bordermatrix.\n * parseArray() has parsed the tokens as if the environment\n * was \\begin{matrix}. That parse tree is this function\u2019s input.\n * Here, we rearrange the parse tree to get one that will\n * result in TeX \\bordermatrix.\n * The final result includes a {pmatrix}, which is the bottom\n * half of a <mover> element. The top of the <mover> contains\n * the \\bordermatrix headings. The top section also contains the\n * contents of the bottom {pmatrix}. Those elements are hidden via\n * \\hphantom, but they ensure that column widths are the same top and\n * bottom.\n *\n * We also create a left {matrix} with a single column that contains\n * elements shifted out of the matrix. The left {matrix} also\n * contains \\vphantom copies of the other {pmatrix} elements.\n * As before, this ensures consistent row heights of left and main.\n */\n\nconst bordermatrixParseTree = (matrix, delimiters) => {\n  const body = matrix.body;\n  body[0].shift(); // dispose of top left cell\n\n  // Create an array for the left column\n  const leftColumnBody = new Array(body.length - 1).fill().map(() => []);\n  for (let i = 1; i < body.length; i++) {\n    // The visible part of the cell\n    leftColumnBody[i - 1].push(body[i].shift());\n    // A vphantom with contents from the pmatrix, to set minimum cell height\n    const phantomBody = [];\n    for (let j = 0; j < body[i].length; j++) {\n      phantomBody.push(body[i][j]);\n    }\n    leftColumnBody[i - 1].push(phantom(phantomBody, \"vphantom\"));\n  }\n\n  // Create an array for the top row\n  const topRowBody = new Array(body.length).fill().map(() => []);\n  for (let j = 0; j < body[0].length; j++) {\n    topRowBody[0].push(body[0][j]);\n  }\n  // Copy the rest of the pmatrix, but squashed via \\hphantom\n  for (let i = 1; i < body.length; i++) {\n    for (let j = 0; j < body[0].length; j++) {\n      topRowBody[i].push(phantom(body[i][j].body, \"hphantom\"));\n    }\n  }\n\n  // Squash the top row of the main {pmatrix}\n  for (let j = 0; j < body[0].length; j++) {\n    body[0][j] = phantom(body[0][j].body, \"hphantom\");\n  }\n\n  // Now wrap the arrays in the proper parse nodes.\n\n  const leftColumn = {\n    type: \"array\",\n    mode: \"math\",\n    body: leftColumnBody,\n    cols: [{ type: \"align\", align: \"c\" }],\n    rowGaps: new Array(leftColumnBody.length - 1).fill(null),\n    hLinesBeforeRow: new Array(leftColumnBody.length + 1).fill().map(() => []),\n    envClasses: [],\n    scriptLevel: \"text\",\n    arraystretch: 1,\n    labels: new Array(leftColumnBody.length).fill(\"\"),\n    arraycolsep: { \"number\": 0.04, unit: \"em\" }\n  };\n\n  const topRow = {\n    type: \"array\",\n    mode: \"math\",\n    body: topRowBody,\n    cols: new Array(topRowBody.length).fill({ type: \"align\", align: \"c\" }),\n    rowGaps: new Array(topRowBody.length - 1).fill(null),\n    hLinesBeforeRow: new Array(topRowBody.length + 1).fill().map(() => []),\n    envClasses: [],\n    scriptLevel: \"text\",\n    arraystretch: 1,\n    labels: new Array(topRowBody.length).fill(\"\"),\n    arraycolsep: null\n  };\n\n  const topWrapper = {\n    type: \"styling\",\n    mode: \"math\",\n    scriptLevel: \"text\", // Must set this explicitly.\n    body: [topRow]       // Default level is \"script\".\n  };\n\n  const container = {\n    type: \"leftright\",\n    mode: \"math\",\n    body: [matrix],\n    left: delimiters ? delimiters[0] : \"(\",\n    right: delimiters ? delimiters[1] : \")\",\n    rightColor: undefined\n  };\n\n  const base = {\n    type: \"op\",   // The base of a TeX \\overset\n    mode: \"math\",\n    limits: true,\n    alwaysHandleSupSub: true,\n    parentIsSupSub: true,\n    symbol: false,\n    stack: true,\n    suppressBaseShift: true,\n    body: [container]\n  };\n\n  const mover = {\n    type: \"supsub\",  // We're using the MathML equivalent\n    mode: \"math\",    // of TeX \\overset.\n    base: base,      // That keeps the {pmatrix} aligned with\n    sup: topWrapper, // the math centerline.\n    sub: null\n  };\n\n  return ordGroup([leftColumn, mover])\n};\n\n/**\n * Lexing or parsing positional information for error reporting.\n * This object is immutable.\n */\nclass SourceLocation {\n  constructor(lexer, start, end) {\n    this.lexer = lexer; // Lexer holding the input string.\n    this.start = start; // Start offset, zero-based inclusive.\n    this.end = end;     // End offset, zero-based exclusive.\n  }\n\n  /**\n   * Merges two `SourceLocation`s from location providers, given they are\n   * provided in order of appearance.\n   * - Returns the first one's location if only the first is provided.\n   * - Returns a merged range of the first and the last if both are provided\n   *   and their lexers match.\n   * - Otherwise, returns null.\n   */\n  static range(first, second) {\n    if (!second) {\n      return first && first.loc;\n    } else if (!first || !first.loc || !second.loc || first.loc.lexer !== second.loc.lexer) {\n      return null;\n    } else {\n      return new SourceLocation(first.loc.lexer, first.loc.start, second.loc.end);\n    }\n  }\n}\n\n/**\n * Interface required to break circular dependency between Token, Lexer, and\n * ParseError.\n */\n\n/**\n * The resulting token returned from `lex`.\n *\n * It consists of the token text plus some position information.\n * The position information is essentially a range in an input string,\n * but instead of referencing the bare input string, we refer to the lexer.\n * That way it is possible to attach extra metadata to the input string,\n * like for example a file name or similar.\n *\n * The position information is optional, so it is OK to construct synthetic\n * tokens if appropriate. Not providing available position information may\n * lead to degraded error reporting, though.\n */\nclass Token {\n  constructor(\n    text, // the text of this token\n    loc\n  ) {\n    this.text = text;\n    this.loc = loc;\n  }\n\n  /**\n   * Given a pair of tokens (this and endToken), compute a `Token` encompassing\n   * the whole input range enclosed by these two.\n   */\n  range(\n    endToken, // last token of the range, inclusive\n    text // the text of the newly constructed token\n  ) {\n    return new Token(text, SourceLocation.range(this, endToken));\n  }\n}\n\n// In TeX, there are actually three sets of dimensions, one for each of\n// textstyle, scriptstyle, and scriptscriptstyle.  These are\n// provided in the the arrays below, in that order.\n//\n\n// Math style is not quite the same thing as script level.\nconst StyleLevel = {\n  DISPLAY: 0,\n  TEXT: 1,\n  SCRIPT: 2,\n  SCRIPTSCRIPT: 3\n};\n\n/**\n * All registered global/built-in macros.\n * `macros.js` exports this same dictionary again and makes it public.\n * `Parser.js` requires this dictionary via `macros.js`.\n */\nconst _macros = {};\n\n// This function might one day accept an additional argument and do more things.\nfunction defineMacro(name, body) {\n  _macros[name] = body;\n}\n\n/**\n * Predefined macros for Temml.\n * This can be used to define some commands in terms of others.\n */\n\nconst macros = _macros;\n\n//////////////////////////////////////////////////////////////////////\n// macro tools\n\ndefineMacro(\"\\\\noexpand\", function(context) {\n  // The expansion is the token itself; but that token is interpreted\n  // as if its meaning were \u2018\\relax\u2019 if it is a control sequence that\n  // would ordinarily be expanded by TeX\u2019s expansion rules.\n  const t = context.popToken();\n  if (context.isExpandable(t.text)) {\n    t.noexpand = true;\n    t.treatAsRelax = true;\n  }\n  return { tokens: [t], numArgs: 0 };\n});\n\ndefineMacro(\"\\\\expandafter\", function(context) {\n  // TeX first reads the token that comes immediately after \\expandafter,\n  // without expanding it; let\u2019s call this token t. Then TeX reads the\n  // token that comes after t (and possibly more tokens, if that token\n  // has an argument), replacing it by its expansion. Finally TeX puts\n  // t back in front of that expansion.\n  const t = context.popToken();\n  context.expandOnce(true); // expand only an expandable token\n  return { tokens: [t], numArgs: 0 };\n});\n\n// LaTeX's \\@firstoftwo{#1}{#2} expands to #1, skipping #2\n// TeX source: \\long\\def\\@firstoftwo#1#2{#1}\ndefineMacro(\"\\\\@firstoftwo\", function(context) {\n  const args = context.consumeArgs(2);\n  return { tokens: args[0], numArgs: 0 };\n});\n\n// LaTeX's \\@secondoftwo{#1}{#2} expands to #2, skipping #1\n// TeX source: \\long\\def\\@secondoftwo#1#2{#2}\ndefineMacro(\"\\\\@secondoftwo\", function(context) {\n  const args = context.consumeArgs(2);\n  return { tokens: args[1], numArgs: 0 };\n});\n\n// LaTeX's \\@ifnextchar{#1}{#2}{#3} looks ahead to the next (unexpanded)\n// symbol that isn't a space, consuming any spaces but not consuming the\n// first nonspace character.  If that nonspace character matches #1, then\n// the macro expands to #2; otherwise, it expands to #3.\ndefineMacro(\"\\\\@ifnextchar\", function(context) {\n  const args = context.consumeArgs(3); // symbol, if, else\n  context.consumeSpaces();\n  const nextToken = context.future();\n  if (args[0].length === 1 && args[0][0].text === nextToken.text) {\n    return { tokens: args[1], numArgs: 0 };\n  } else {\n    return { tokens: args[2], numArgs: 0 };\n  }\n});\n\n// LaTeX's \\@ifstar{#1}{#2} looks ahead to the next (unexpanded) symbol.\n// If it is `*`, then it consumes the symbol, and the macro expands to #1;\n// otherwise, the macro expands to #2 (without consuming the symbol).\n// TeX source: \\def\\@ifstar#1{\\@ifnextchar *{\\@firstoftwo{#1}}}\ndefineMacro(\"\\\\@ifstar\", \"\\\\@ifnextchar *{\\\\@firstoftwo{#1}}\");\n\n// LaTeX's \\TextOrMath{#1}{#2} expands to #1 in text mode, #2 in math mode\ndefineMacro(\"\\\\TextOrMath\", function(context) {\n  const args = context.consumeArgs(2);\n  if (context.mode === \"text\") {\n    return { tokens: args[0], numArgs: 0 };\n  } else {\n    return { tokens: args[1], numArgs: 0 };\n  }\n});\n\nconst stringFromArg = arg => {\n  // Reverse the order of the arg and return a string.\n  let str = \"\";\n  for (let i = arg.length - 1; i > -1; i--) {\n    str += arg[i].text;\n  }\n  return str\n};\n\n// Lookup table for parsing numbers in base 8 through 16\nconst digitToNumber = {\n  0: 0,\n  1: 1,\n  2: 2,\n  3: 3,\n  4: 4,\n  5: 5,\n  6: 6,\n  7: 7,\n  8: 8,\n  9: 9,\n  a: 10,\n  A: 10,\n  b: 11,\n  B: 11,\n  c: 12,\n  C: 12,\n  d: 13,\n  D: 13,\n  e: 14,\n  E: 14,\n  f: 15,\n  F: 15\n};\n\nconst nextCharNumber = context => {\n  const numStr = context.future().text;\n  if (numStr === \"EOF\") { return [null, \"\"] }\n  return [digitToNumber[numStr.charAt(0)], numStr]\n};\n\nconst appendCharNumbers = (number, numStr, base) => {\n  for (let i = 1; i < numStr.length; i++) {\n    const digit = digitToNumber[numStr.charAt(i)];\n    number *= base;\n    number += digit;\n  }\n  return number\n};\n\n// TeX \\char makes a literal character (catcode 12) using the following forms:\n// (see The TeXBook, p. 43)\n//   \\char123  -- decimal\n//   \\char'123 -- octal\n//   \\char\"123 -- hex\n//   \\char`x   -- character that can be written (i.e. isn't active)\n//   \\char`\\x  -- character that cannot be written (e.g. %)\n// These all refer to characters from the font, so we turn them into special\n// calls to a function \\@char dealt with in the Parser.\ndefineMacro(\"\\\\char\", function(context) {\n  let token = context.popToken();\n  let base;\n  let number = \"\";\n  if (token.text === \"'\") {\n    base = 8;\n    token = context.popToken();\n  } else if (token.text === '\"') {\n    base = 16;\n    token = context.popToken();\n  } else if (token.text === \"`\") {\n    token = context.popToken();\n    if (token.text[0] === \"\\\\\") {\n      number = token.text.charCodeAt(1);\n    } else if (token.text === \"EOF\") {\n      throw new ParseError(\"\\\\char` missing argument\");\n    } else {\n      number = token.text.charCodeAt(0);\n    }\n  } else {\n    base = 10;\n  }\n  if (base) {\n    // Parse a number in the given base, starting with first `token`.\n    let numStr = token.text;\n    number = digitToNumber[numStr.charAt(0)];\n    if (number == null || number >= base) {\n      throw new ParseError(`Invalid base-${base} digit ${token.text}`);\n    }\n    number = appendCharNumbers(number, numStr, base);\n    let digit;\n    [digit, numStr] = nextCharNumber(context);\n    while (digit != null && digit < base) {\n      number *= base;\n      number += digit;\n      number = appendCharNumbers(number, numStr, base);\n      context.popToken();\n      [digit, numStr] = nextCharNumber(context);\n    }\n  }\n  return `\\\\@char{${number}}`;\n});\n\nfunction recreateArgStr(context) {\n  // Recreate the macro's original argument string from the array of parse tokens.\n  const tokens = context.consumeArgs(1)[0];\n  let str = \"\";\n  let expectedLoc = tokens[tokens.length - 1].loc.start;\n  for (let i = tokens.length - 1; i >= 0; i--) {\n    const actualLoc = tokens[i].loc.start;\n    if (actualLoc > expectedLoc) {\n      // context.consumeArgs has eaten a space.\n      str += \" \";\n      expectedLoc = actualLoc;\n    }\n    str += tokens[i].text;\n    expectedLoc += tokens[i].text.length;\n  }\n  return str\n}\n\n// The Latin Modern font renders <mi>\u221A</mi> at the wrong vertical alignment.\n// This macro provides a better rendering.\ndefineMacro(\"\\\\surd\", '\\\\sqrt{\\\\vphantom{|}}');\n\n// See comment for \\oplus in symbols.js.\ndefineMacro(\"\\u2295\", \"\\\\oplus\");\n\n// Since Temml has no \\par, ignore \\long.\ndefineMacro(\"\\\\long\", \"\");\n\n//////////////////////////////////////////////////////////////////////\n// Grouping\n// \\let\\bgroup={ \\let\\egroup=}\ndefineMacro(\"\\\\bgroup\", \"{\");\ndefineMacro(\"\\\\egroup\", \"}\");\n\n// Symbols from latex.ltx:\n// \\def~{\\nobreakspace{}}\n// \\def\\lq{`}\n// \\def\\rq{'}\n// \\def \\aa {\\r a}\ndefineMacro(\"~\", \"\\\\nobreakspace\");\ndefineMacro(\"\\\\lq\", \"`\");\ndefineMacro(\"\\\\rq\", \"'\");\ndefineMacro(\"\\\\aa\", \"\\\\r a\");\n\ndefineMacro(\"\\\\Bbbk\", \"\\\\Bbb{k}\");\n\n// \\mathstrut from the TeXbook, p 360\ndefineMacro(\"\\\\mathstrut\", \"\\\\vphantom{(}\");\n\n// \\underbar from TeXbook p 353\ndefineMacro(\"\\\\underbar\", \"\\\\underline{\\\\text{#1}}\");\n\n//////////////////////////////////////////////////////////////////////\n// LaTeX_2\u03B5\n\n// \\vdots{\\vbox{\\baselineskip4\\p@  \\lineskiplimit\\z@\n// \\kern6\\p@\\hbox{.}\\hbox{.}\\hbox{.}}}\n// We'll call \\varvdots, which gets a glyph from symbols.js.\n// The zero-width rule gets us an equivalent to the vertical 6pt kern.\ndefineMacro(\"\\\\vdots\", \"{\\\\varvdots\\\\rule{0pt}{15pt}}\");\ndefineMacro(\"\\u22ee\", \"\\\\vdots\");\n\n// {array} environment gaps\ndefineMacro(\"\\\\arraystretch\", \"1\");     // line spacing factor times 12pt\ndefineMacro(\"\\\\arraycolsep\", \"6pt\");    // half the width separating columns\n\n//////////////////////////////////////////////////////////////////////\n// amsmath.sty\n// http://mirrors.concertpass.com/tex-archive/macros/latex/required/amsmath/amsmath.pdf\n\n//\\newcommand{\\substack}[1]{\\subarray{c}#1\\endsubarray}\ndefineMacro(\"\\\\substack\", \"\\\\begin{subarray}{c}#1\\\\end{subarray}\");\n\n// \\def\\iff{\\DOTSB\\;\\Longleftrightarrow\\;}\n// \\def\\implies{\\DOTSB\\;\\Longrightarrow\\;}\n// \\def\\impliedby{\\DOTSB\\;\\Longleftarrow\\;}\ndefineMacro(\"\\\\iff\", \"\\\\DOTSB\\\\;\\\\Longleftrightarrow\\\\;\");\ndefineMacro(\"\\\\implies\", \"\\\\DOTSB\\\\;\\\\Longrightarrow\\\\;\");\ndefineMacro(\"\\\\impliedby\", \"\\\\DOTSB\\\\;\\\\Longleftarrow\\\\;\");\n\n// AMSMath's automatic \\dots, based on \\mdots@@ macro.\nconst dotsByToken = {\n  \",\": \"\\\\dotsc\",\n  \"\\\\not\": \"\\\\dotsb\",\n  // \\keybin@ checks for the following:\n  \"+\": \"\\\\dotsb\",\n  \"=\": \"\\\\dotsb\",\n  \"<\": \"\\\\dotsb\",\n  \">\": \"\\\\dotsb\",\n  \"-\": \"\\\\dotsb\",\n  \"*\": \"\\\\dotsb\",\n  \":\": \"\\\\dotsb\",\n  // Symbols whose definition starts with \\DOTSB:\n  \"\\\\DOTSB\": \"\\\\dotsb\",\n  \"\\\\coprod\": \"\\\\dotsb\",\n  \"\\\\bigvee\": \"\\\\dotsb\",\n  \"\\\\bigwedge\": \"\\\\dotsb\",\n  \"\\\\biguplus\": \"\\\\dotsb\",\n  \"\\\\bigcap\": \"\\\\dotsb\",\n  \"\\\\bigcup\": \"\\\\dotsb\",\n  \"\\\\prod\": \"\\\\dotsb\",\n  \"\\\\sum\": \"\\\\dotsb\",\n  \"\\\\bigotimes\": \"\\\\dotsb\",\n  \"\\\\bigoplus\": \"\\\\dotsb\",\n  \"\\\\bigodot\": \"\\\\dotsb\",\n  \"\\\\bigsqcap\": \"\\\\dotsb\",\n  \"\\\\bigsqcup\": \"\\\\dotsb\",\n  \"\\\\bigtimes\": \"\\\\dotsb\",\n  \"\\\\And\": \"\\\\dotsb\",\n  \"\\\\longrightarrow\": \"\\\\dotsb\",\n  \"\\\\Longrightarrow\": \"\\\\dotsb\",\n  \"\\\\longleftarrow\": \"\\\\dotsb\",\n  \"\\\\Longleftarrow\": \"\\\\dotsb\",\n  \"\\\\longleftrightarrow\": \"\\\\dotsb\",\n  \"\\\\Longleftrightarrow\": \"\\\\dotsb\",\n  \"\\\\mapsto\": \"\\\\dotsb\",\n  \"\\\\longmapsto\": \"\\\\dotsb\",\n  \"\\\\hookrightarrow\": \"\\\\dotsb\",\n  \"\\\\doteq\": \"\\\\dotsb\",\n  // Symbols whose definition starts with \\mathbin:\n  \"\\\\mathbin\": \"\\\\dotsb\",\n  // Symbols whose definition starts with \\mathrel:\n  \"\\\\mathrel\": \"\\\\dotsb\",\n  \"\\\\relbar\": \"\\\\dotsb\",\n  \"\\\\Relbar\": \"\\\\dotsb\",\n  \"\\\\xrightarrow\": \"\\\\dotsb\",\n  \"\\\\xleftarrow\": \"\\\\dotsb\",\n  // Symbols whose definition starts with \\DOTSI:\n  \"\\\\DOTSI\": \"\\\\dotsi\",\n  \"\\\\int\": \"\\\\dotsi\",\n  \"\\\\oint\": \"\\\\dotsi\",\n  \"\\\\iint\": \"\\\\dotsi\",\n  \"\\\\iiint\": \"\\\\dotsi\",\n  \"\\\\iiiint\": \"\\\\dotsi\",\n  \"\\\\idotsint\": \"\\\\dotsi\",\n  // Symbols whose definition starts with \\DOTSX:\n  \"\\\\DOTSX\": \"\\\\dotsx\"\n};\n\ndefineMacro(\"\\\\dots\", function(context) {\n  // TODO: If used in text mode, should expand to \\textellipsis.\n  // However, in Temml, \\textellipsis and \\ldots behave the same\n  // (in text mode), and it's unlikely we'd see any of the math commands\n  // that affect the behavior of \\dots when in text mode.  So fine for now\n  // (until we support \\ifmmode ... \\else ... \\fi).\n  let thedots = \"\\\\dotso\";\n  const next = context.expandAfterFuture().text;\n  if (next in dotsByToken) {\n    thedots = dotsByToken[next];\n  } else if (next.slice(0, 4) === \"\\\\not\") {\n    thedots = \"\\\\dotsb\";\n  } else if (next in symbols.math) {\n    if ([\"bin\", \"rel\"].includes(symbols.math[next].group)) {\n      thedots = \"\\\\dotsb\";\n    }\n  }\n  return thedots;\n});\n\nconst spaceAfterDots = {\n  // \\rightdelim@ checks for the following:\n  \")\": true,\n  \"]\": true,\n  \"\\\\rbrack\": true,\n  \"\\\\}\": true,\n  \"\\\\rbrace\": true,\n  \"\\\\rangle\": true,\n  \"\\\\rceil\": true,\n  \"\\\\rfloor\": true,\n  \"\\\\rgroup\": true,\n  \"\\\\rmoustache\": true,\n  \"\\\\right\": true,\n  \"\\\\bigr\": true,\n  \"\\\\biggr\": true,\n  \"\\\\Bigr\": true,\n  \"\\\\Biggr\": true,\n  // \\extra@ also tests for the following:\n  $: true,\n  // \\extrap@ checks for the following:\n  \";\": true,\n  \".\": true,\n  \",\": true\n};\n\ndefineMacro(\"\\\\dotso\", function(context) {\n  const next = context.future().text;\n  if (next in spaceAfterDots) {\n    return \"\\\\ldots\\\\,\";\n  } else {\n    return \"\\\\ldots\";\n  }\n});\n\ndefineMacro(\"\\\\dotsc\", function(context) {\n  const next = context.future().text;\n  // \\dotsc uses \\extra@ but not \\extrap@, instead specially checking for\n  // ';' and '.', but doesn't check for ','.\n  if (next in spaceAfterDots && next !== \",\") {\n    return \"\\\\ldots\\\\,\";\n  } else {\n    return \"\\\\ldots\";\n  }\n});\n\ndefineMacro(\"\\\\cdots\", function(context) {\n  const next = context.future().text;\n  if (next in spaceAfterDots) {\n    return \"\\\\@cdots\\\\,\";\n  } else {\n    return \"\\\\@cdots\";\n  }\n});\n\ndefineMacro(\"\\\\dotsb\", \"\\\\cdots\");\ndefineMacro(\"\\\\dotsm\", \"\\\\cdots\");\ndefineMacro(\"\\\\dotsi\", \"\\\\!\\\\cdots\");\ndefineMacro(\"\\\\idotsint\", \"\\\\dotsi\");\n// amsmath doesn't actually define \\dotsx, but \\dots followed by a macro\n// starting with \\DOTSX implies \\dotso, and then \\extra@ detects this case\n// and forces the added `\\,`.\ndefineMacro(\"\\\\dotsx\", \"\\\\ldots\\\\,\");\n\n// \\let\\DOTSI\\relax\n// \\let\\DOTSB\\relax\n// \\let\\DOTSX\\relax\ndefineMacro(\"\\\\DOTSI\", \"\\\\relax\");\ndefineMacro(\"\\\\DOTSB\", \"\\\\relax\");\ndefineMacro(\"\\\\DOTSX\", \"\\\\relax\");\n\n// Spacing, based on amsmath.sty's override of LaTeX defaults\n// \\DeclareRobustCommand{\\tmspace}[3]{%\n//   \\ifmmode\\mskip#1#2\\else\\kern#1#3\\fi\\relax}\ndefineMacro(\"\\\\tmspace\", \"\\\\TextOrMath{\\\\kern#1#3}{\\\\mskip#1#2}\\\\relax\");\n// \\renewcommand{\\,}{\\tmspace+\\thinmuskip{.1667em}}\n// TODO: math mode should use \\thinmuskip\ndefineMacro(\"\\\\,\", \"{\\\\tmspace+{3mu}{.1667em}}\");\n// \\let\\thinspace\\,\ndefineMacro(\"\\\\thinspace\", \"\\\\,\");\n// \\def\\>{\\mskip\\medmuskip}\n// \\renewcommand{\\:}{\\tmspace+\\medmuskip{.2222em}}\n// TODO: \\> and math mode of \\: should use \\medmuskip = 4mu plus 2mu minus 4mu\ndefineMacro(\"\\\\>\", \"\\\\mskip{4mu}\");\ndefineMacro(\"\\\\:\", \"{\\\\tmspace+{4mu}{.2222em}}\");\n// \\let\\medspace\\:\ndefineMacro(\"\\\\medspace\", \"\\\\:\");\n// \\renewcommand{\\;}{\\tmspace+\\thickmuskip{.2777em}}\n// TODO: math mode should use \\thickmuskip = 5mu plus 5mu\ndefineMacro(\"\\\\;\", \"{\\\\tmspace+{5mu}{.2777em}}\");\n// \\let\\thickspace\\;\ndefineMacro(\"\\\\thickspace\", \"\\\\;\");\n// \\renewcommand{\\!}{\\tmspace-\\thinmuskip{.1667em}}\n// TODO: math mode should use \\thinmuskip\ndefineMacro(\"\\\\!\", \"{\\\\tmspace-{3mu}{.1667em}}\");\n// \\let\\negthinspace\\!\ndefineMacro(\"\\\\negthinspace\", \"\\\\!\");\n// \\newcommand{\\negmedspace}{\\tmspace-\\medmuskip{.2222em}}\n// TODO: math mode should use \\medmuskip\ndefineMacro(\"\\\\negmedspace\", \"{\\\\tmspace-{4mu}{.2222em}}\");\n// \\newcommand{\\negthickspace}{\\tmspace-\\thickmuskip{.2777em}}\n// TODO: math mode should use \\thickmuskip\ndefineMacro(\"\\\\negthickspace\", \"{\\\\tmspace-{5mu}{.277em}}\");\n// \\def\\enspace{\\kern.5em }\ndefineMacro(\"\\\\enspace\", \"\\\\kern.5em \");\n// \\def\\enskip{\\hskip.5em\\relax}\ndefineMacro(\"\\\\enskip\", \"\\\\hskip.5em\\\\relax\");\n// \\def\\quad{\\hskip1em\\relax}\ndefineMacro(\"\\\\quad\", \"\\\\hskip1em\\\\relax\");\n// \\def\\qquad{\\hskip2em\\relax}\ndefineMacro(\"\\\\qquad\", \"\\\\hskip2em\\\\relax\");\n\ndefineMacro(\"\\\\AA\", \"\\\\TextOrMath{\\\\Angstrom}{\\\\mathring{A}}\\\\relax\");\n\n// \\tag@in@display form of \\tag\ndefineMacro(\"\\\\tag\", \"\\\\@ifstar\\\\tag@literal\\\\tag@paren\");\ndefineMacro(\"\\\\tag@paren\", \"\\\\tag@literal{({#1})}\");\ndefineMacro(\"\\\\tag@literal\", (context) => {\n  if (context.macros.get(\"\\\\df@tag\")) {\n    throw new ParseError(\"Multiple \\\\tag\");\n  }\n  return \"\\\\gdef\\\\df@tag{\\\\text{#1}}\";\n});\ndefineMacro(\"\\\\notag\", \"\\\\nonumber\");\ndefineMacro(\"\\\\nonumber\", \"\\\\gdef\\\\@eqnsw{0}\");\n\n// \\renewcommand{\\bmod}{\\nonscript\\mskip-\\medmuskip\\mkern5mu\\mathbin\n//   {\\operator@font mod}\\penalty900\n//   \\mkern5mu\\nonscript\\mskip-\\medmuskip}\n// \\newcommand{\\pod}[1]{\\allowbreak\n//   \\if@display\\mkern18mu\\else\\mkern8mu\\fi(#1)}\n// \\renewcommand{\\pmod}[1]{\\pod{{\\operator@font mod}\\mkern6mu#1}}\n// \\newcommand{\\mod}[1]{\\allowbreak\\if@display\\mkern18mu\n//   \\else\\mkern12mu\\fi{\\operator@font mod}\\,\\,#1}\n// TODO: math mode should use \\medmuskip = 4mu plus 2mu minus 4mu\ndefineMacro(\"\\\\bmod\", \"\\\\mathbin{\\\\text{mod}}\");\ndefineMacro(\n  \"\\\\pod\",\n  \"\\\\allowbreak\" + \"\\\\mathchoice{\\\\mkern18mu}{\\\\mkern8mu}{\\\\mkern8mu}{\\\\mkern8mu}(#1)\"\n);\ndefineMacro(\"\\\\pmod\", \"\\\\pod{{\\\\rm mod}\\\\mkern6mu#1}\");\ndefineMacro(\n  \"\\\\mod\",\n  \"\\\\allowbreak\" +\n    \"\\\\mathchoice{\\\\mkern18mu}{\\\\mkern12mu}{\\\\mkern12mu}{\\\\mkern12mu}\" +\n    \"{\\\\rm mod}\\\\,\\\\,#1\"\n);\n\n//////////////////////////////////////////////////////////////////////\n// LaTeX source2e\n\n// \\expandafter\\let\\expandafter\\@normalcr\n//     \\csname\\expandafter\\@gobble\\string\\\\ \\endcsname\n// \\DeclareRobustCommand\\newline{\\@normalcr\\relax}\ndefineMacro(\"\\\\newline\", \"\\\\\\\\\\\\relax\");\n\n// \\def\\TeX{T\\kern-.1667em\\lower.5ex\\hbox{E}\\kern-.125emX\\@}\n// TODO: Doesn't normally work in math mode because \\@ fails.\ndefineMacro(\"\\\\TeX\", \"\\\\textrm{T}\\\\kern-.1667em\\\\raisebox{-.5ex}{E}\\\\kern-.125em\\\\textrm{X}\");\n\ndefineMacro(\n  \"\\\\LaTeX\",\n    \"\\\\textrm{L}\\\\kern-.35em\\\\raisebox{0.2em}{\\\\scriptstyle A}\\\\kern-.15em\\\\TeX\"\n);\n\ndefineMacro(\n  \"\\\\Temml\",\n  // eslint-disable-next-line max-len\n  \"\\\\textrm{T}\\\\kern-0.2em\\\\lower{0.2em}{\\\\textrm{E}}\\\\kern-0.08em{\\\\textrm{M}\\\\kern-0.08em\\\\raise{0.2em}\\\\textrm{M}\\\\kern-0.08em\\\\textrm{L}}\"\n);\n\n// \\DeclareRobustCommand\\hspace{\\@ifstar\\@hspacer\\@hspace}\n// \\def\\@hspace#1{\\hskip  #1\\relax}\n// \\def\\@hspacer#1{\\vrule \\@width\\z@\\nobreak\n//                 \\hskip #1\\hskip \\z@skip}\ndefineMacro(\"\\\\hspace\", \"\\\\@ifstar\\\\@hspacer\\\\@hspace\");\ndefineMacro(\"\\\\@hspace\", \"\\\\hskip #1\\\\relax\");\ndefineMacro(\"\\\\@hspacer\", \"\\\\rule{0pt}{0pt}\\\\hskip #1\\\\relax\");\n\ndefineMacro(\"\\\\colon\", `\\\\mathpunct{\\\\char\"3a}`);\n\n//////////////////////////////////////////////////////////////////////\n// mathtools.sty\n\ndefineMacro(\"\\\\prescript\", \"\\\\pres@cript{_{#1}^{#2}}{}{#3}\");\n\n//\\providecommand\\ordinarycolon{:}\ndefineMacro(\"\\\\ordinarycolon\", `\\\\char\"3a`);\n// Raise to center on the math axis, as closely as possible.\ndefineMacro(\"\\\\vcentcolon\", \"\\\\mathrel{\\\\raisebox{0.035em}{\\\\ordinarycolon}}\");\n// \\providecommand*\\coloneq{\\vcentcolon\\mathrel{\\mkern-1.2mu}\\mathrel{-}}\ndefineMacro(\"\\\\coloneq\", '\\\\mathrel{\\\\raisebox{0.035em}{\\\\ordinarycolon}\\\\char\"2212}');\n// \\providecommand*\\Coloneq{\\dblcolon\\mathrel{\\mkern-1.2mu}\\mathrel{-}}\ndefineMacro(\"\\\\Coloneq\", '\\\\mathrel{\\\\char\"2237\\\\char\"2212}');\n// \\providecommand*\\Eqqcolon{=\\mathrel{\\mkern-1.2mu}\\dblcolon}\ndefineMacro(\"\\\\Eqqcolon\", '\\\\mathrel{\\\\char\"3d\\\\char\"2237}');\n// \\providecommand*\\Eqcolon{\\mathrel{-}\\mathrel{\\mkern-1.2mu}\\dblcolon}\ndefineMacro(\"\\\\Eqcolon\", '\\\\mathrel{\\\\char\"2212\\\\char\"2237}');\n// \\providecommand*\\colonapprox{\\vcentcolon\\mathrel{\\mkern-1.2mu}\\approx}\ndefineMacro(\"\\\\colonapprox\", '\\\\mathrel{\\\\raisebox{0.035em}{\\\\ordinarycolon}\\\\char\"2248}');\n// \\providecommand*\\Colonapprox{\\dblcolon\\mathrel{\\mkern-1.2mu}\\approx}\ndefineMacro(\"\\\\Colonapprox\", '\\\\mathrel{\\\\char\"2237\\\\char\"2248}');\n// \\providecommand*\\colonsim{\\vcentcolon\\mathrel{\\mkern-1.2mu}\\sim}\ndefineMacro(\"\\\\colonsim\", '\\\\mathrel{\\\\raisebox{0.035em}{\\\\ordinarycolon}\\\\char\"223c}');\n// \\providecommand*\\Colonsim{\\dblcolon\\mathrel{\\mkern-1.2mu}\\sim}\ndefineMacro(\"\\\\Colonsim\", '\\\\mathrel{\\\\raisebox{0.035em}{\\\\ordinarycolon}\\\\char\"223c}');\n\n//////////////////////////////////////////////////////////////////////\n// colonequals.sty\n\n// Alternate names for mathtools's macros:\ndefineMacro(\"\\\\ratio\", \"\\\\vcentcolon\");\ndefineMacro(\"\\\\coloncolon\", \"\\\\dblcolon\");\ndefineMacro(\"\\\\colonequals\", \"\\\\coloneqq\");\ndefineMacro(\"\\\\coloncolonequals\", \"\\\\Coloneqq\");\ndefineMacro(\"\\\\equalscolon\", \"\\\\eqqcolon\");\ndefineMacro(\"\\\\equalscoloncolon\", \"\\\\Eqqcolon\");\ndefineMacro(\"\\\\colonminus\", \"\\\\coloneq\");\ndefineMacro(\"\\\\coloncolonminus\", \"\\\\Coloneq\");\ndefineMacro(\"\\\\minuscolon\", \"\\\\eqcolon\");\ndefineMacro(\"\\\\minuscoloncolon\", \"\\\\Eqcolon\");\n// \\colonapprox name is same in mathtools and colonequals.\ndefineMacro(\"\\\\coloncolonapprox\", \"\\\\Colonapprox\");\n// \\colonsim name is same in mathtools and colonequals.\ndefineMacro(\"\\\\coloncolonsim\", \"\\\\Colonsim\");\n\n// Present in newtxmath, pxfonts and txfonts\ndefineMacro(\"\\\\notni\", \"\\\\mathrel{\\\\char`\\u220C}\");\ndefineMacro(\"\\\\limsup\", \"\\\\DOTSB\\\\operatorname*{lim\\\\,sup}\");\ndefineMacro(\"\\\\liminf\", \"\\\\DOTSB\\\\operatorname*{lim\\\\,inf}\");\n\n//////////////////////////////////////////////////////////////////////\n// From amsopn.sty\ndefineMacro(\"\\\\injlim\", \"\\\\DOTSB\\\\operatorname*{inj\\\\,lim}\");\ndefineMacro(\"\\\\projlim\", \"\\\\DOTSB\\\\operatorname*{proj\\\\,lim}\");\ndefineMacro(\"\\\\varlimsup\", \"\\\\DOTSB\\\\operatorname*{\\\\overline{\\\\text{lim}}}\");\ndefineMacro(\"\\\\varliminf\", \"\\\\DOTSB\\\\operatorname*{\\\\underline{\\\\text{lim}}}\");\ndefineMacro(\"\\\\varinjlim\", \"\\\\DOTSB\\\\operatorname*{\\\\underrightarrow{\\\\text{lim}}}\");\ndefineMacro(\"\\\\varprojlim\", \"\\\\DOTSB\\\\operatorname*{\\\\underleftarrow{\\\\text{lim}}}\");\n\ndefineMacro(\"\\\\centerdot\", \"{\\\\medspace\\\\rule{0.167em}{0.189em}\\\\medspace}\");\n\n//////////////////////////////////////////////////////////////////////\n// statmath.sty\n// https://ctan.math.illinois.edu/macros/latex/contrib/statmath/statmath.pdf\n\ndefineMacro(\"\\\\argmin\", \"\\\\DOTSB\\\\operatorname*{arg\\\\,min}\");\ndefineMacro(\"\\\\argmax\", \"\\\\DOTSB\\\\operatorname*{arg\\\\,max}\");\ndefineMacro(\"\\\\plim\", \"\\\\DOTSB\\\\operatorname*{plim}\");\n\n//////////////////////////////////////////////////////////////////////\n// MnSymbol.sty\n\ndefineMacro(\"\\\\leftmodels\", \"\\\\mathop{\\\\reflectbox{$\\\\models$}}\");\n\n//////////////////////////////////////////////////////////////////////\n// braket.sty\n// http://ctan.math.washington.edu/tex-archive/macros/latex/contrib/braket/braket.pdf\n\ndefineMacro(\"\\\\bra\", \"\\\\mathinner{\\\\langle{#1}|}\");\ndefineMacro(\"\\\\ket\", \"\\\\mathinner{|{#1}\\\\rangle}\");\ndefineMacro(\"\\\\braket\", \"\\\\mathinner{\\\\langle{#1}\\\\rangle}\");\ndefineMacro(\"\\\\Bra\", \"\\\\left\\\\langle#1\\\\right|\");\ndefineMacro(\"\\\\Ket\", \"\\\\left|#1\\\\right\\\\rangle\");\n// A helper for \\Braket and \\Set\nconst replaceVert = (argStr, match) => {\n  const ch = match[0] === \"|\" ? \"\\\\vert\" : \"\\\\Vert\";\n  const replaceStr = `}\\\\,\\\\middle${ch}\\\\,{`;\n  return argStr.slice(0, match.index) + replaceStr + argStr.slice(match.index + match[0].length)\n};\ndefineMacro(\"\\\\Braket\",  function(context) {\n  let argStr = recreateArgStr(context);\n  const regEx = /\\|\\||\\||\\\\\\|/g;\n  let match;\n  while ((match = regEx.exec(argStr)) !== null) {\n    argStr = replaceVert(argStr, match);\n  }\n  return \"\\\\left\\\\langle{\" + argStr + \"}\\\\right\\\\rangle\"\n});\ndefineMacro(\"\\\\Set\",  function(context) {\n  let argStr = recreateArgStr(context);\n  const match = /\\|\\||\\||\\\\\\|/.exec(argStr);\n  if (match) {\n    argStr = replaceVert(argStr, match);\n  }\n  return \"\\\\left\\\\{\\\\:{\" + argStr + \"}\\\\:\\\\right\\\\}\"\n});\ndefineMacro(\"\\\\set\",  function(context) {\n  const argStr = recreateArgStr(context);\n  return \"\\\\{{\" + argStr.replace(/\\|/, \"}\\\\mid{\") + \"}\\\\}\"\n});\n\n//////////////////////////////////////////////////////////////////////\n// actuarialangle.dtx\ndefineMacro(\"\\\\angln\", \"{\\\\angl n}\");\n\n//////////////////////////////////////////////////////////////////////\n// derivative.sty\ndefineMacro(\"\\\\odv\", \"\\\\@ifstar\\\\odv@next\\\\odv@numerator\");\ndefineMacro(\"\\\\odv@numerator\", \"\\\\frac{\\\\mathrm{d}#1}{\\\\mathrm{d}#2}\");\ndefineMacro(\"\\\\odv@next\", \"\\\\frac{\\\\mathrm{d}}{\\\\mathrm{d}#2}#1\");\ndefineMacro(\"\\\\pdv\", \"\\\\@ifstar\\\\pdv@next\\\\pdv@numerator\");\n\nconst pdvHelper = args => {\n  const numerator = args[0][0].text;\n  const denoms = stringFromArg(args[1]).split(\",\");\n  const power = String(denoms.length);\n  const numOp = power === \"1\" ? \"\\\\partial\" : `\\\\partial^${power}`;\n  let denominator = \"\";\n  denoms.map(e => { denominator += \"\\\\partial \" + e.trim() +  \"\\\\,\";});\n  return [numerator, numOp,  denominator.replace(/\\\\,$/, \"\")]\n};\ndefineMacro(\"\\\\pdv@numerator\", function(context) {\n  const [numerator, numOp, denominator] = pdvHelper(context.consumeArgs(2));\n  return `\\\\frac{${numOp} ${numerator}}{${denominator}}`\n});\ndefineMacro(\"\\\\pdv@next\", function(context) {\n  const [numerator, numOp, denominator] = pdvHelper(context.consumeArgs(2));\n  return `\\\\frac{${numOp}}{${denominator}} ${numerator}`\n});\n\n//////////////////////////////////////////////////////////////////////\n// upgreek.dtx\ndefineMacro(\"\\\\upalpha\", \"\\\\up@greek{\\\\alpha}\");\ndefineMacro(\"\\\\upbeta\", \"\\\\up@greek{\\\\beta}\");\ndefineMacro(\"\\\\upgamma\", \"\\\\up@greek{\\\\gamma}\");\ndefineMacro(\"\\\\updelta\", \"\\\\up@greek{\\\\delta}\");\ndefineMacro(\"\\\\upepsilon\", \"\\\\up@greek{\\\\epsilon}\");\ndefineMacro(\"\\\\upzeta\", \"\\\\up@greek{\\\\zeta}\");\ndefineMacro(\"\\\\upeta\", \"\\\\up@greek{\\\\eta}\");\ndefineMacro(\"\\\\uptheta\", \"\\\\up@greek{\\\\theta}\");\ndefineMacro(\"\\\\upiota\", \"\\\\up@greek{\\\\iota}\");\ndefineMacro(\"\\\\upkappa\", \"\\\\up@greek{\\\\kappa}\");\ndefineMacro(\"\\\\uplambda\", \"\\\\up@greek{\\\\lambda}\");\ndefineMacro(\"\\\\upmu\", \"\\\\up@greek{\\\\mu}\");\ndefineMacro(\"\\\\upnu\", \"\\\\up@greek{\\\\nu}\");\ndefineMacro(\"\\\\upxi\", \"\\\\up@greek{\\\\xi}\");\ndefineMacro(\"\\\\upomicron\", \"\\\\up@greek{\\\\omicron}\");\ndefineMacro(\"\\\\uppi\", \"\\\\up@greek{\\\\pi}\");\ndefineMacro(\"\\\\upalpha\", \"\\\\up@greek{\\\\alpha}\");\ndefineMacro(\"\\\\uprho\", \"\\\\up@greek{\\\\rho}\");\ndefineMacro(\"\\\\upsigma\", \"\\\\up@greek{\\\\sigma}\");\ndefineMacro(\"\\\\uptau\", \"\\\\up@greek{\\\\tau}\");\ndefineMacro(\"\\\\upupsilon\", \"\\\\up@greek{\\\\upsilon}\");\ndefineMacro(\"\\\\upphi\", \"\\\\up@greek{\\\\phi}\");\ndefineMacro(\"\\\\upchi\", \"\\\\up@greek{\\\\chi}\");\ndefineMacro(\"\\\\uppsi\", \"\\\\up@greek{\\\\psi}\");\ndefineMacro(\"\\\\upomega\", \"\\\\up@greek{\\\\omega}\");\n\n//////////////////////////////////////////////////////////////////////\n// cmll package\ndefineMacro(\"\\\\invamp\", '\\\\mathbin{\\\\char\"214b}');\ndefineMacro(\"\\\\parr\", '\\\\mathbin{\\\\char\"214b}');\ndefineMacro(\"\\\\with\", '\\\\mathbin{\\\\char\"26}');\ndefineMacro(\"\\\\multimapinv\", '\\\\mathrel{\\\\char\"27dc}');\ndefineMacro(\"\\\\multimapboth\", '\\\\mathrel{\\\\char\"29df}');\ndefineMacro(\"\\\\scoh\", '{\\\\mkern5mu\\\\char\"2322\\\\mkern5mu}');\ndefineMacro(\"\\\\sincoh\", '{\\\\mkern5mu\\\\char\"2323\\\\mkern5mu}');\ndefineMacro(\"\\\\coh\", `{\\\\mkern5mu\\\\rule{}{0.7em}\\\\mathrlap{\\\\smash{\\\\raise2mu{\\\\char\"2322}}}\n{\\\\smash{\\\\lower4mu{\\\\char\"2323}}}\\\\mkern5mu}`);\ndefineMacro(\"\\\\incoh\", `{\\\\mkern5mu\\\\rule{}{0.7em}\\\\mathrlap{\\\\smash{\\\\raise2mu{\\\\char\"2323}}}\n{\\\\smash{\\\\lower4mu{\\\\char\"2322}}}\\\\mkern5mu}`);\n\n\n//////////////////////////////////////////////////////////////////////\n// chemstyle package\ndefineMacro(\"\\\\standardstate\", \"\\\\text{\\\\tiny\\\\char`\u29B5}\");\n\n\uFEFF/* eslint-disable */\n/* -*- Mode: JavaScript; indent-tabs-mode:nil; js-indent-level: 2 -*- */\n/* vim: set ts=2 et sw=2 tw=80: */\n\n/*************************************************************\n *\n *  Temml mhchem.js\n *\n *  This file implements a Temml version of mhchem version 3.3.0.\n *  It is adapted from MathJax/extensions/TeX/mhchem.js\n *  It differs from the MathJax version as follows:\n *    1. The interface is changed so that it can be called from Temml, not MathJax.\n *    2. \\rlap and \\llap are replaced with \\mathrlap and \\mathllap.\n *    3. The reaction arrow code is simplified. All reaction arrows are rendered\n *       using Temml extensible arrows instead of building non-extensible arrows.\n *    4. The ~bond forms are composed entirely of \\rule elements.\n *    5. Two dashes in _getBond are wrapped in braces to suppress spacing. i.e., {-}\n *    6. The electron dot uses \\textbullet instead of \\bullet.\n *    7. \\smash[T] has been removed. (WebKit hides anything inside \\smash{\u2026})\n *\n *    This code, as other Temml code, is released under the MIT license.\n * \n * /*************************************************************\n *\n *  MathJax/extensions/TeX/mhchem.js\n *\n *  Implements the \\ce command for handling chemical formulas\n *  from the mhchem LaTeX package.\n *\n *  ---------------------------------------------------------------------\n *\n *  Copyright (c) 2011-2015 The MathJax Consortium\n *  Copyright (c) 2015-2018 Martin Hensel\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n//\n// Coding Style\n//   - use '' for identifiers that can by minified/uglified\n//   - use \"\" for strings that need to stay untouched\n\n// version: \"3.3.0\" for MathJax and Temml\n\n\n// Add \\ce, \\pu, and \\tripleDash to the Temml macros.\n\ndefineMacro(\"\\\\ce\", function(context) {\n  return chemParse(context.consumeArgs(1)[0], \"ce\")\n});\n\ndefineMacro(\"\\\\pu\", function(context) {\n  return chemParse(context.consumeArgs(1)[0], \"pu\");\n});\n\n// Math fonts do not include glyphs for the ~ form of bonds. So we'll send path geometry\n// So we'll compose characters built from \\rule elements.\ndefineMacro(\"\\\\uniDash\", `{\\\\rule{0.672em}{0.06em}}`)\ndefineMacro(\"\\\\triDash\", `{\\\\rule{0.15em}{0.06em}\\\\kern2mu\\\\rule{0.15em}{0.06em}\\\\kern2mu\\\\rule{0.15em}{0.06em}}`)\ndefineMacro(\"\\\\tripleDash\", `\\\\kern0.075em\\\\raise0.25em{\\\\triDash}\\\\kern0.075em`)\ndefineMacro(\"\\\\tripleDashOverLine\", `\\\\kern0.075em\\\\mathrlap{\\\\raise0.125em{\\\\uniDash}}\\\\raise0.34em{\\\\triDash}\\\\kern0.075em`)\ndefineMacro(\"\\\\tripleDashOverDoubleLine\", `\\\\kern0.075em\\\\mathrlap{\\\\mathrlap{\\\\raise0.48em{\\\\triDash}}\\\\raise0.27em{\\\\uniDash}}{\\\\raise0.05em{\\\\uniDash}}\\\\kern0.075em`)\ndefineMacro(\"\\\\tripleDashBetweenDoubleLine\", `\\\\kern0.075em\\\\mathrlap{\\\\mathrlap{\\\\raise0.48em{\\\\uniDash}}\\\\raise0.27em{\\\\triDash}}{\\\\raise0.05em{\\\\uniDash}}\\\\kern0.075em`)\n\n  //\n  //  This is the main function for handing the \\ce and \\pu commands.\n  //  It takes the argument to \\ce or \\pu and returns the corresponding TeX string.\n  //\n\n  var chemParse = function (tokens, stateMachine) {\n    // Recreate the argument string from Temml's array of tokens.\n    var str = \"\";\n    var expectedLoc = tokens.length && tokens[tokens.length - 1].loc.start\n    for (var i = tokens.length - 1; i >= 0; i--) {\n      if(tokens[i].loc.start > expectedLoc) {\n        // context.consumeArgs has eaten a space.\n        str += \" \";\n        expectedLoc = tokens[i].loc.start;\n      }\n      str += tokens[i].text;\n      expectedLoc += tokens[i].text.length;\n    }\n    // Call the mhchem core parser.\n    var tex = texify.go(mhchemParser.go(str, stateMachine));\n    return tex;\n  };\n\n  //\n  // Core parser for mhchem syntax  (recursive)\n  //\n  /** @type {MhchemParser} */\n  var mhchemParser = {\n    //\n    // Parses mchem \\ce syntax\n    //\n    // Call like\n    //   go(\"H2O\");\n    //\n    go: function (input, stateMachine) {\n      if (!input) { return []; }\n      if (stateMachine === undefined) { stateMachine = 'ce'; }\n      var state = '0';\n\n      //\n      // String buffers for parsing:\n      //\n      // buffer.a == amount\n      // buffer.o == element\n      // buffer.b == left-side superscript\n      // buffer.p == left-side subscript\n      // buffer.q == right-side subscript\n      // buffer.d == right-side superscript\n      //\n      // buffer.r == arrow\n      // buffer.rdt == arrow, script above, type\n      // buffer.rd == arrow, script above, content\n      // buffer.rqt == arrow, script below, type\n      // buffer.rq == arrow, script below, content\n      //\n      // buffer.text_\n      // buffer.rm\n      // etc.\n      //\n      // buffer.parenthesisLevel == int, starting at 0\n      // buffer.sb == bool, space before\n      // buffer.beginsWithBond == bool\n      //\n      // These letters are also used as state names.\n      //\n      // Other states:\n      // 0 == begin of main part (arrow/operator unlikely)\n      // 1 == next entity\n      // 2 == next entity (arrow/operator unlikely)\n      // 3 == next atom\n      // c == macro\n      //\n      /** @type {Buffer} */\n      var buffer = {};\n      buffer['parenthesisLevel'] = 0;\n\n      input = input.replace(/\\n/g, \" \");\n      input = input.replace(/[\\u2212\\u2013\\u2014\\u2010]/g, \"-\");\n      input = input.replace(/[\\u2026]/g, \"...\");\n\n      //\n      // Looks through mhchemParser.transitions, to execute a matching action\n      // (recursive)\n      //\n      var lastInput;\n      var watchdog = 10;\n      /** @type {ParserOutput[]} */\n      var output = [];\n      while (true) {\n        if (lastInput !== input) {\n          watchdog = 10;\n          lastInput = input;\n        } else {\n          watchdog--;\n        }\n        //\n        // Find actions in transition table\n        //\n        var machine = mhchemParser.stateMachines[stateMachine];\n        var t = machine.transitions[state] || machine.transitions['*'];\n        iterateTransitions:\n        for (var i=0; i<t.length; i++) {\n          var matches = mhchemParser.patterns.match_(t[i].pattern, input);\n          if (matches) {\n            //\n            // Execute actions\n            //\n            var task = t[i].task;\n            for (var iA=0; iA<task.action_.length; iA++) {\n              var o;\n              //\n              // Find and execute action\n              //\n              if (machine.actions[task.action_[iA].type_]) {\n                o = machine.actions[task.action_[iA].type_](buffer, matches.match_, task.action_[iA].option);\n              } else if (mhchemParser.actions[task.action_[iA].type_]) {\n                o = mhchemParser.actions[task.action_[iA].type_](buffer, matches.match_, task.action_[iA].option);\n              } else {\n                throw [\"MhchemBugA\", \"mhchem bug A. Please report. (\" + task.action_[iA].type_ + \")\"];  // Trying to use non-existing action\n              }\n              //\n              // Add output\n              //\n              mhchemParser.concatArray(output, o);\n            }\n            //\n            // Set next state,\n            // Shorten input,\n            // Continue with next character\n            //   (= apply only one transition per position)\n            //\n            state = task.nextState || state;\n            if (input.length > 0) {\n              if (!task.revisit) {\n                input = matches.remainder;\n              }\n              if (!task.toContinue) {\n                break iterateTransitions;\n              }\n            } else {\n              return output;\n            }\n          }\n        }\n        //\n        // Prevent infinite loop\n        //\n        if (watchdog <= 0) {\n          throw [\"MhchemBugU\", \"mhchem bug U. Please report.\"];  // Unexpected character\n        }\n      }\n    },\n    concatArray: function (a, b) {\n      if (b) {\n        if (Array.isArray(b)) {\n          for (var iB=0; iB<b.length; iB++) {\n            a.push(b[iB]);\n          }\n        } else {\n          a.push(b);\n        }\n      }\n    },\n\n    patterns: {\n      //\n      // Matching patterns\n      // either regexps or function that return null or {match_:\"a\", remainder:\"bc\"}\n      //\n      patterns: {\n        // property names must not look like integers (\"2\") for correct property traversal order, later on\n        'empty': /^$/,\n        'else': /^./,\n        'else2': /^./,\n        'space': /^\\s/,\n        'space A': /^\\s(?=[A-Z\\\\$])/,\n        'space$': /^\\s$/,\n        'a-z': /^[a-z]/,\n        'x': /^x/,\n        'x$': /^x$/,\n        'i$': /^i$/,\n        'letters': /^(?:[a-zA-Z\\u03B1-\\u03C9\\u0391-\\u03A9?@]|(?:\\\\(?:alpha|beta|gamma|delta|epsilon|zeta|eta|theta|iota|kappa|lambda|mu|nu|xi|omicron|pi|rho|sigma|tau|upsilon|phi|chi|psi|omega|Gamma|Delta|Theta|Lambda|Xi|Pi|Sigma|Upsilon|Phi|Psi|Omega)(?:\\s+|\\{\\}|(?![a-zA-Z]))))+/,\n        '\\\\greek': /^\\\\(?:alpha|beta|gamma|delta|epsilon|zeta|eta|theta|iota|kappa|lambda|mu|nu|xi|omicron|pi|rho|sigma|tau|upsilon|phi|chi|psi|omega|Gamma|Delta|Theta|Lambda|Xi|Pi|Sigma|Upsilon|Phi|Psi|Omega)(?:\\s+|\\{\\}|(?![a-zA-Z]))/,\n        'one lowercase latin letter $': /^(?:([a-z])(?:$|[^a-zA-Z]))$/,\n        '$one lowercase latin letter$ $': /^\\$(?:([a-z])(?:$|[^a-zA-Z]))\\$$/,\n        'one lowercase greek letter $': /^(?:\\$?[\\u03B1-\\u03C9]\\$?|\\$?\\\\(?:alpha|beta|gamma|delta|epsilon|zeta|eta|theta|iota|kappa|lambda|mu|nu|xi|omicron|pi|rho|sigma|tau|upsilon|phi|chi|psi|omega)\\s*\\$?)(?:\\s+|\\{\\}|(?![a-zA-Z]))$/,\n        'digits': /^[0-9]+/,\n        '-9.,9': /^[+\\-]?(?:[0-9]+(?:[,.][0-9]+)?|[0-9]*(?:\\.[0-9]+))/,\n        '-9.,9 no missing 0': /^[+\\-]?[0-9]+(?:[.,][0-9]+)?/,\n        '(-)(9.,9)(e)(99)': function (input) {\n          var m = input.match(/^(\\+\\-|\\+\\/\\-|\\+|\\-|\\\\pm\\s?)?([0-9]+(?:[,.][0-9]+)?|[0-9]*(?:\\.[0-9]+))?(\\((?:[0-9]+(?:[,.][0-9]+)?|[0-9]*(?:\\.[0-9]+))\\))?(?:([eE]|\\s*(\\*|x|\\\\times|\\u00D7)\\s*10\\^)([+\\-]?[0-9]+|\\{[+\\-]?[0-9]+\\}))?/);\n          if (m && m[0]) {\n            return { match_: m.splice(1), remainder: input.substr(m[0].length) };\n          }\n          return null;\n        },\n        '(-)(9)^(-9)': function (input) {\n          var m = input.match(/^(\\+\\-|\\+\\/\\-|\\+|\\-|\\\\pm\\s?)?([0-9]+(?:[,.][0-9]+)?|[0-9]*(?:\\.[0-9]+)?)\\^([+\\-]?[0-9]+|\\{[+\\-]?[0-9]+\\})/);\n          if (m && m[0]) {\n            return { match_: m.splice(1), remainder: input.substr(m[0].length) };\n          }\n          return null;\n        },\n        'state of aggregation $': function (input) {  // ... or crystal system\n          var a = mhchemParser.patterns.findObserveGroups(input, \"\", /^\\([a-z]{1,3}(?=[\\),])/, \")\", \"\");  // (aq), (aq,$\\infty$), (aq, sat)\n          if (a  &&  a.remainder.match(/^($|[\\s,;\\)\\]\\}])/)) { return a; }  //  AND end of 'phrase'\n          var m = input.match(/^(?:\\((?:\\\\ca\\s?)?\\$[amothc]\\$\\))/);  // OR crystal system ($o$) (\\ca$c$)\n          if (m) {\n            return { match_: m[0], remainder: input.substr(m[0].length) };\n          }\n          return null;\n        },\n        '_{(state of aggregation)}$': /^_\\{(\\([a-z]{1,3}\\))\\}/,\n        '{[(': /^(?:\\\\\\{|\\[|\\()/,\n        ')]}': /^(?:\\)|\\]|\\\\\\})/,\n        ', ': /^[,;]\\s*/,\n        ',': /^[,;]/,\n        '.': /^[.]/,\n        '. ': /^([.\\u22C5\\u00B7\\u2022])\\s*/,\n        '...': /^\\.\\.\\.(?=$|[^.])/,\n        '* ': /^([*])\\s*/,\n        '^{(...)}': function (input) { return mhchemParser.patterns.findObserveGroups(input, \"^{\", \"\", \"\", \"}\"); },\n        '^($...$)': function (input) { return mhchemParser.patterns.findObserveGroups(input, \"^\", \"$\", \"$\", \"\"); },\n        '^a': /^\\^([0-9]+|[^\\\\_])/,\n        '^\\\\x{}{}': function (input) { return mhchemParser.patterns.findObserveGroups(input, \"^\", /^\\\\[a-zA-Z]+\\{/, \"}\", \"\", \"\", \"{\", \"}\", \"\", true); },\n        '^\\\\x{}': function (input) { return mhchemParser.patterns.findObserveGroups(input, \"^\", /^\\\\[a-zA-Z]+\\{/, \"}\", \"\"); },\n        '^\\\\x': /^\\^(\\\\[a-zA-Z]+)\\s*/,\n        '^(-1)': /^\\^(-?\\d+)/,\n        '\\'': /^'/,\n        '_{(...)}': function (input) { return mhchemParser.patterns.findObserveGroups(input, \"_{\", \"\", \"\", \"}\"); },\n        '_($...$)': function (input) { return mhchemParser.patterns.findObserveGroups(input, \"_\", \"$\", \"$\", \"\"); },\n        '_9': /^_([+\\-]?[0-9]+|[^\\\\])/,\n        '_\\\\x{}{}': function (input) { return mhchemParser.patterns.findObserveGroups(input, \"_\", /^\\\\[a-zA-Z]+\\{/, \"}\", \"\", \"\", \"{\", \"}\", \"\", true); },\n        '_\\\\x{}': function (input) { return mhchemParser.patterns.findObserveGroups(input, \"_\", /^\\\\[a-zA-Z]+\\{/, \"}\", \"\"); },\n        '_\\\\x': /^_(\\\\[a-zA-Z]+)\\s*/,\n        '^_': /^(?:\\^(?=_)|\\_(?=\\^)|[\\^_]$)/,\n        '{}': /^\\{\\}/,\n        '{...}': function (input) { return mhchemParser.patterns.findObserveGroups(input, \"\", \"{\", \"}\", \"\"); },\n        '{(...)}': function (input) { return mhchemParser.patterns.findObserveGroups(input, \"{\", \"\", \"\", \"}\"); },\n        '$...$': function (input) { return mhchemParser.patterns.findObserveGroups(input, \"\", \"$\", \"$\", \"\"); },\n        '${(...)}$': function (input) { return mhchemParser.patterns.findObserveGroups(input, \"${\", \"\", \"\", \"}$\"); },\n        '$(...)$': function (input) { return mhchemParser.patterns.findObserveGroups(input, \"$\", \"\", \"\", \"$\"); },\n        '=<>': /^[=<>]/,\n        '#': /^[#\\u2261]/,\n        '+': /^\\+/,\n        '-$': /^-(?=[\\s_},;\\]/]|$|\\([a-z]+\\))/,  // -space -, -; -] -/ -$ -state-of-aggregation\n        '-9': /^-(?=[0-9])/,\n        '- orbital overlap': /^-(?=(?:[spd]|sp)(?:$|[\\s,;\\)\\]\\}]))/,\n        '-': /^-/,\n        'pm-operator': /^(?:\\\\pm|\\$\\\\pm\\$|\\+-|\\+\\/-)/,\n        'operator': /^(?:\\+|(?:[\\-=<>]|<<|>>|\\\\approx|\\$\\\\approx\\$)(?=\\s|$|-?[0-9]))/,\n        'arrowUpDown': /^(?:v|\\(v\\)|\\^|\\(\\^\\))(?=$|[\\s,;\\)\\]\\}])/,\n        '\\\\bond{(...)}': function (input) { return mhchemParser.patterns.findObserveGroups(input, \"\\\\bond{\", \"\", \"\", \"}\"); },\n        '->': /^(?:<->|<-->|->|<-|<=>>|<<=>|<=>|[\\u2192\\u27F6\\u21CC])/,\n        'CMT': /^[CMT](?=\\[)/,\n        '[(...)]': function (input) { return mhchemParser.patterns.findObserveGroups(input, \"[\", \"\", \"\", \"]\"); },\n        '1st-level escape': /^(&|\\\\\\\\|\\\\hline)\\s*/,\n        '\\\\,': /^(?:\\\\[,\\ ;:])/,  // \\\\x - but output no space before\n        '\\\\x{}{}': function (input) { return mhchemParser.patterns.findObserveGroups(input, \"\", /^\\\\[a-zA-Z]+\\{/, \"}\", \"\", \"\", \"{\", \"}\", \"\", true); },\n        '\\\\x{}': function (input) { return mhchemParser.patterns.findObserveGroups(input, \"\", /^\\\\[a-zA-Z]+\\{/, \"}\", \"\"); },\n        '\\\\ca': /^\\\\ca(?:\\s+|(?![a-zA-Z]))/,\n        '\\\\x': /^(?:\\\\[a-zA-Z]+\\s*|\\\\[_&{}%])/,\n        'orbital': /^(?:[0-9]{1,2}[spdfgh]|[0-9]{0,2}sp)(?=$|[^a-zA-Z])/,  // only those with numbers in front, because the others will be formatted correctly anyway\n        'others': /^[\\/~|]/,\n        '\\\\frac{(...)}': function (input) { return mhchemParser.patterns.findObserveGroups(input, \"\\\\frac{\", \"\", \"\", \"}\", \"{\", \"\", \"\", \"}\"); },\n        '\\\\overset{(...)}': function (input) { return mhchemParser.patterns.findObserveGroups(input, \"\\\\overset{\", \"\", \"\", \"}\", \"{\", \"\", \"\", \"}\"); },\n        '\\\\underset{(...)}': function (input) { return mhchemParser.patterns.findObserveGroups(input, \"\\\\underset{\", \"\", \"\", \"}\", \"{\", \"\", \"\", \"}\"); },\n        '\\\\underbrace{(...)}': function (input) { return mhchemParser.patterns.findObserveGroups(input, \"\\\\underbrace{\", \"\", \"\", \"}_\", \"{\", \"\", \"\", \"}\"); },\n        '\\\\color{(...)}0': function (input) { return mhchemParser.patterns.findObserveGroups(input, \"\\\\color{\", \"\", \"\", \"}\"); },\n        '\\\\color{(...)}{(...)}1': function (input) { return mhchemParser.patterns.findObserveGroups(input, \"\\\\color{\", \"\", \"\", \"}\", \"{\", \"\", \"\", \"}\"); },\n        '\\\\color(...){(...)}2': function (input) { return mhchemParser.patterns.findObserveGroups(input, \"\\\\color\", \"\\\\\", \"\", /^(?=\\{)/, \"{\", \"\", \"\", \"}\"); },\n        '\\\\ce{(...)}': function (input) { return mhchemParser.patterns.findObserveGroups(input, \"\\\\ce{\", \"\", \"\", \"}\"); },\n        'oxidation$': /^(?:[+-][IVX]+|\\\\pm\\s*0|\\$\\\\pm\\$\\s*0)$/,\n        'd-oxidation$': /^(?:[+-]?\\s?[IVX]+|\\\\pm\\s*0|\\$\\\\pm\\$\\s*0)$/,  // 0 could be oxidation or charge\n        'roman numeral': /^[IVX]+/,\n        '1/2$': /^[+\\-]?(?:[0-9]+|\\$[a-z]\\$|[a-z])\\/[0-9]+(?:\\$[a-z]\\$|[a-z])?$/,\n        'amount': function (input) {\n          var match;\n          // e.g. 2, 0.5, 1/2, -2, n/2, +;  $a$ could be added later in parsing\n          match = input.match(/^(?:(?:(?:\\([+\\-]?[0-9]+\\/[0-9]+\\)|[+\\-]?(?:[0-9]+|\\$[a-z]\\$|[a-z])\\/[0-9]+|[+\\-]?[0-9]+[.,][0-9]+|[+\\-]?\\.[0-9]+|[+\\-]?[0-9]+)(?:[a-z](?=\\s*[A-Z]))?)|[+\\-]?[a-z](?=\\s*[A-Z])|\\+(?!\\s))/);\n          if (match) {\n            return { match_: match[0], remainder: input.substr(match[0].length) };\n          }\n          var a = mhchemParser.patterns.findObserveGroups(input, \"\", \"$\", \"$\", \"\");\n          if (a) {  // e.g. $2n-1$, $-$\n            match = a.match_.match(/^\\$(?:\\(?[+\\-]?(?:[0-9]*[a-z]?[+\\-])?[0-9]*[a-z](?:[+\\-][0-9]*[a-z]?)?\\)?|\\+|-)\\$$/);\n            if (match) {\n              return { match_: match[0], remainder: input.substr(match[0].length) };\n            }\n          }\n          return null;\n        },\n        'amount2': function (input) { return this['amount'](input); },\n        '(KV letters),': /^(?:[A-Z][a-z]{0,2}|i)(?=,)/,\n        'formula$': function (input) {\n          if (input.match(/^\\([a-z]+\\)$/)) { return null; }  // state of aggregation = no formula\n          var match = input.match(/^(?:[a-z]|(?:[0-9\\ \\+\\-\\,\\.\\(\\)]+[a-z])+[0-9\\ \\+\\-\\,\\.\\(\\)]*|(?:[a-z][0-9\\ \\+\\-\\,\\.\\(\\)]+)+[a-z]?)$/);\n          if (match) {\n            return { match_: match[0], remainder: input.substr(match[0].length) };\n          }\n          return null;\n        },\n        'uprightEntities': /^(?:pH|pOH|pC|pK|iPr|iBu)(?=$|[^a-zA-Z])/,\n        '/': /^\\s*(\\/)\\s*/,\n        '//': /^\\s*(\\/\\/)\\s*/,\n        '*': /^\\s*[*.]\\s*/\n      },\n      findObserveGroups: function (input, begExcl, begIncl, endIncl, endExcl, beg2Excl, beg2Incl, end2Incl, end2Excl, combine) {\n        /** @type {{(input: string, pattern: string | RegExp): string | string[] | null;}} */\n        var _match = function (input, pattern) {\n          if (typeof pattern === \"string\") {\n            if (input.indexOf(pattern) !== 0) { return null; }\n            return pattern;\n          } else {\n            var match = input.match(pattern);\n            if (!match) { return null; }\n            return match[0];\n          }\n        };\n        /** @type {{(input: string, i: number, endChars: string | RegExp): {endMatchBegin: number, endMatchEnd: number} | null;}} */\n        var _findObserveGroups = function (input, i, endChars) {\n          var braces = 0;\n          while (i < input.length) {\n            var a = input.charAt(i);\n            var match = _match(input.substr(i), endChars);\n            if (match !== null  &&  braces === 0) {\n              return { endMatchBegin: i, endMatchEnd: i + match.length };\n            } else if (a === \"{\") {\n              braces++;\n            } else if (a === \"}\") {\n              if (braces === 0) {\n                throw [\"ExtraCloseMissingOpen\", \"Extra close brace or missing open brace\"];\n              } else {\n                braces--;\n              }\n            }\n            i++;\n          }\n          if (braces > 0) {\n            return null;\n          }\n          return null;\n        };\n        var match = _match(input, begExcl);\n        if (match === null) { return null; }\n        input = input.substr(match.length);\n        match = _match(input, begIncl);\n        if (match === null) { return null; }\n        var e = _findObserveGroups(input, match.length, endIncl || endExcl);\n        if (e === null) { return null; }\n        var match1 = input.substring(0, (endIncl ? e.endMatchEnd : e.endMatchBegin));\n        if (!(beg2Excl || beg2Incl)) {\n          return {\n            match_: match1,\n            remainder: input.substr(e.endMatchEnd)\n          };\n        } else {\n          var group2 = this.findObserveGroups(input.substr(e.endMatchEnd), beg2Excl, beg2Incl, end2Incl, end2Excl);\n          if (group2 === null) { return null; }\n          /** @type {string[]} */\n          var matchRet = [match1, group2.match_];\n          return {\n            match_: (combine ? matchRet.join(\"\") : matchRet),\n            remainder: group2.remainder\n          };\n        }\n      },\n\n      //\n      // Matching function\n      // e.g. match(\"a\", input) will look for the regexp called \"a\" and see if it matches\n      // returns null or {match_:\"a\", remainder:\"bc\"}\n      //\n      match_: function (m, input) {\n        var pattern = mhchemParser.patterns.patterns[m];\n        if (pattern === undefined) {\n          throw [\"MhchemBugP\", \"mhchem bug P. Please report. (\" + m + \")\"];  // Trying to use non-existing pattern\n        } else if (typeof pattern === \"function\") {\n          return mhchemParser.patterns.patterns[m](input);  // cannot use cached var pattern here, because some pattern functions need this===mhchemParser\n        } else {  // RegExp\n          var match = input.match(pattern);\n          if (match) {\n            var mm;\n            if (match[2]) {\n              mm = [ match[1], match[2] ];\n            } else if (match[1]) {\n              mm = match[1];\n            } else {\n              mm = match[0];\n            }\n            return { match_: mm, remainder: input.substr(match[0].length) };\n          }\n          return null;\n        }\n      }\n    },\n\n    //\n    // Generic state machine actions\n    //\n    actions: {\n      'a=': function (buffer, m) { buffer.a = (buffer.a || \"\") + m; },\n      'b=': function (buffer, m) { buffer.b = (buffer.b || \"\") + m; },\n      'p=': function (buffer, m) { buffer.p = (buffer.p || \"\") + m; },\n      'o=': function (buffer, m) { buffer.o = (buffer.o || \"\") + m; },\n      'q=': function (buffer, m) { buffer.q = (buffer.q || \"\") + m; },\n      'd=': function (buffer, m) { buffer.d = (buffer.d || \"\") + m; },\n      'rm=': function (buffer, m) { buffer.rm = (buffer.rm || \"\") + m; },\n      'text=': function (buffer, m) { buffer.text_ = (buffer.text_ || \"\") + m; },\n      'insert': function (buffer, m, a) { return { type_: a }; },\n      'insert+p1': function (buffer, m, a) { return { type_: a, p1: m }; },\n      'insert+p1+p2': function (buffer, m, a) { return { type_: a, p1: m[0], p2: m[1] }; },\n      'copy': function (buffer, m) { return m; },\n      'rm': function (buffer, m) { return { type_: 'rm', p1: m || \"\"}; },\n      'text': function (buffer, m) { return mhchemParser.go(m, 'text'); },\n      '{text}': function (buffer, m) {\n        var ret = [ \"{\" ];\n        mhchemParser.concatArray(ret, mhchemParser.go(m, 'text'));\n        ret.push(\"}\");\n        return ret;\n      },\n      'tex-math': function (buffer, m) { return mhchemParser.go(m, 'tex-math'); },\n      'tex-math tight': function (buffer, m) { return mhchemParser.go(m, 'tex-math tight'); },\n      'bond': function (buffer, m, k) { return { type_: 'bond', kind_: k || m }; },\n      'color0-output': function (buffer, m) { return { type_: 'color0', color: m[0] }; },\n      'ce': function (buffer, m) { return mhchemParser.go(m); },\n      '1/2': function (buffer, m) {\n        /** @type {ParserOutput[]} */\n        var ret = [];\n        if (m.match(/^[+\\-]/)) {\n          ret.push(m.substr(0, 1));\n          m = m.substr(1);\n        }\n        var n = m.match(/^([0-9]+|\\$[a-z]\\$|[a-z])\\/([0-9]+)(\\$[a-z]\\$|[a-z])?$/);\n        n[1] = n[1].replace(/\\$/g, \"\");\n        ret.push({ type_: 'frac', p1: n[1], p2: n[2] });\n        if (n[3]) {\n          n[3] = n[3].replace(/\\$/g, \"\");\n          ret.push({ type_: 'tex-math', p1: n[3] });\n        }\n        return ret;\n      },\n      '9,9': function (buffer, m) { return mhchemParser.go(m, '9,9'); }\n    },\n    //\n    // createTransitions\n    // convert  { 'letter': { 'state': { action_: 'output' } } }  to  { 'state' => [ { pattern: 'letter', task: { action_: [{type_: 'output'}] } } ] }\n    // with expansion of 'a|b' to 'a' and 'b' (at 2 places)\n    //\n    createTransitions: function (o) {\n      var pattern, state;\n      /** @type {string[]} */\n      var stateArray;\n      var i;\n      //\n      // 1. Collect all states\n      //\n      /** @type {Transitions} */\n      var transitions = {};\n      for (pattern in o) {\n        for (state in o[pattern]) {\n          stateArray = state.split(\"|\");\n          o[pattern][state].stateArray = stateArray;\n          for (i=0; i<stateArray.length; i++) {\n            transitions[stateArray[i]] = [];\n          }\n        }\n      }\n      //\n      // 2. Fill states\n      //\n      for (pattern in o) {\n        for (state in o[pattern]) {\n          stateArray = o[pattern][state].stateArray || [];\n          for (i=0; i<stateArray.length; i++) {\n            //\n            // 2a. Normalize actions into array:  'text=' ==> [{type_:'text='}]\n            // (Note to myself: Resolving the function here would be problematic. It would need .bind (for *this*) and currying (for *option*).)\n            //\n            /** @type {any} */\n            var p = o[pattern][state];\n            if (p.action_) {\n              p.action_ = [].concat(p.action_);\n              for (var k=0; k<p.action_.length; k++) {\n                if (typeof p.action_[k] === \"string\") {\n                  p.action_[k] = { type_: p.action_[k] };\n                }\n              }\n            } else {\n              p.action_ = [];\n            }\n            //\n            // 2.b Multi-insert\n            //\n            var patternArray = pattern.split(\"|\");\n            for (var j=0; j<patternArray.length; j++) {\n              if (stateArray[i] === '*') {  // insert into all\n                for (var t in transitions) {\n                  transitions[t].push({ pattern: patternArray[j], task: p });\n                }\n              } else {\n                transitions[stateArray[i]].push({ pattern: patternArray[j], task: p });\n              }\n            }\n          }\n        }\n      }\n      return transitions;\n    },\n    stateMachines: {}\n  };\n\n  //\n  // Definition of state machines\n  //\n  mhchemParser.stateMachines = {\n    //\n    // \\ce state machines\n    //\n    //#region ce\n    'ce': {  // main parser\n      transitions: mhchemParser.createTransitions({\n        'empty': {\n          '*': { action_: 'output' } },\n        'else':  {\n          '0|1|2': { action_: 'beginsWithBond=false', revisit: true, toContinue: true } },\n        'oxidation$': {\n          '0': { action_: 'oxidation-output' } },\n        'CMT': {\n          'r': { action_: 'rdt=', nextState: 'rt' },\n          'rd': { action_: 'rqt=', nextState: 'rdt' } },\n        'arrowUpDown': {\n          '0|1|2|as': { action_: [ 'sb=false', 'output', 'operator' ], nextState: '1' } },\n        'uprightEntities': {\n          '0|1|2': { action_: [ 'o=', 'output' ], nextState: '1' } },\n        'orbital': {\n          '0|1|2|3': { action_: 'o=', nextState: 'o' } },\n        '->': {\n          '0|1|2|3': { action_: 'r=', nextState: 'r' },\n          'a|as': { action_: [ 'output', 'r=' ], nextState: 'r' },\n          '*': { action_: [ 'output', 'r=' ], nextState: 'r' } },\n        '+': {\n          'o': { action_: 'd= kv',  nextState: 'd' },\n          'd|D': { action_: 'd=', nextState: 'd' },\n          'q': { action_: 'd=',  nextState: 'qd' },\n          'qd|qD': { action_: 'd=', nextState: 'qd' },\n          'dq': { action_: [ 'output', 'd=' ], nextState: 'd' },\n          '3': { action_: [ 'sb=false', 'output', 'operator' ], nextState: '0' } },\n        'amount': {\n          '0|2': { action_: 'a=', nextState: 'a' } },\n        'pm-operator': {\n          '0|1|2|a|as': { action_: [ 'sb=false', 'output', { type_: 'operator', option: '\\\\pm' } ], nextState: '0' } },\n        'operator': {\n          '0|1|2|a|as': { action_: [ 'sb=false', 'output', 'operator' ], nextState: '0' } },\n        '-$': {\n          'o|q': { action_: [ 'charge or bond', 'output' ],  nextState: 'qd' },\n          'd': { action_: 'd=', nextState: 'd' },\n          'D': { action_: [ 'output', { type_: 'bond', option: \"-\" } ], nextState: '3' },\n          'q': { action_: 'd=',  nextState: 'qd' },\n          'qd': { action_: 'd=', nextState: 'qd' },\n          'qD|dq': { action_: [ 'output', { type_: 'bond', option: \"-\" } ], nextState: '3' } },\n        '-9': {\n          '3|o': { action_: [ 'output', { type_: 'insert', option: 'hyphen' } ], nextState: '3' } },\n        '- orbital overlap': {\n          'o': { action_: [ 'output', { type_: 'insert', option: 'hyphen' } ], nextState: '2' },\n          'd': { action_: [ 'output', { type_: 'insert', option: 'hyphen' } ], nextState: '2' } },\n        '-': {\n          '0|1|2': { action_: [ { type_: 'output', option: 1 }, 'beginsWithBond=true', { type_: 'bond', option: \"-\" } ], nextState: '3' },\n          '3': { action_: { type_: 'bond', option: \"-\" } },\n          'a': { action_: [ 'output', { type_: 'insert', option: 'hyphen' } ], nextState: '2' },\n          'as': { action_: [ { type_: 'output', option: 2 }, { type_: 'bond', option: \"-\" } ], nextState: '3' },\n          'b': { action_: 'b=' },\n          'o': { action_: { type_: '- after o/d', option: false }, nextState: '2' },\n          'q': { action_: { type_: '- after o/d', option: false }, nextState: '2' },\n          'd|qd|dq': { action_: { type_: '- after o/d', option: true }, nextState: '2' },\n          'D|qD|p': { action_: [ 'output', { type_: 'bond', option: \"-\" } ], nextState: '3' } },\n        'amount2': {\n          '1|3': { action_: 'a=', nextState: 'a' } },\n        'letters': {\n          '0|1|2|3|a|as|b|p|bp|o': { action_: 'o=', nextState: 'o' },\n          'q|dq': { action_: ['output', 'o='], nextState: 'o' },\n          'd|D|qd|qD': { action_: 'o after d', nextState: 'o' } },\n        'digits': {\n          'o': { action_: 'q=', nextState: 'q' },\n          'd|D': { action_: 'q=', nextState: 'dq' },\n          'q': { action_: [ 'output', 'o=' ], nextState: 'o' },\n          'a': { action_: 'o=', nextState: 'o' } },\n        'space A': {\n          'b|p|bp': {} },\n        'space': {\n          'a': { nextState: 'as' },\n          '0': { action_: 'sb=false' },\n          '1|2': { action_: 'sb=true' },\n          'r|rt|rd|rdt|rdq': { action_: 'output', nextState: '0' },\n          '*': { action_: [ 'output', 'sb=true' ], nextState: '1'} },\n        '1st-level escape': {\n          '1|2': { action_: [ 'output', { type_: 'insert+p1', option: '1st-level escape' } ] },\n          '*': { action_: [ 'output', { type_: 'insert+p1', option: '1st-level escape' } ], nextState: '0' } },\n        '[(...)]': {\n          'r|rt': { action_: 'rd=', nextState: 'rd' },\n          'rd|rdt': { action_: 'rq=', nextState: 'rdq' } },\n        '...': {\n          'o|d|D|dq|qd|qD': { action_: [ 'output', { type_: 'bond', option: \"...\" } ], nextState: '3' },\n          '*': { action_: [ { type_: 'output', option: 1 }, { type_: 'insert', option: 'ellipsis' } ], nextState: '1' } },\n        '. |* ': {\n          '*': { action_: [ 'output', { type_: 'insert', option: 'addition compound' } ], nextState: '1' } },\n        'state of aggregation $': {\n          '*': { action_: [ 'output', 'state of aggregation' ], nextState: '1' } },\n        '{[(': {\n          'a|as|o': { action_: [ 'o=', 'output', 'parenthesisLevel++' ], nextState: '2' },\n          '0|1|2|3': { action_: [ 'o=', 'output', 'parenthesisLevel++' ], nextState: '2' },\n          '*': { action_: [ 'output', 'o=', 'output', 'parenthesisLevel++' ], nextState: '2' } },\n        ')]}': {\n          '0|1|2|3|b|p|bp|o': { action_: [ 'o=', 'parenthesisLevel--' ], nextState: 'o' },\n          'a|as|d|D|q|qd|qD|dq': { action_: [ 'output', 'o=', 'parenthesisLevel--' ], nextState: 'o' } },\n        ', ': {\n          '*': { action_: [ 'output', 'comma' ], nextState: '0' } },\n        '^_': {  // ^ and _ without a sensible argument\n          '*': { } },\n        '^{(...)}|^($...$)': {\n          '0|1|2|as': { action_: 'b=', nextState: 'b' },\n          'p': { action_: 'b=', nextState: 'bp' },\n          '3|o': { action_: 'd= kv', nextState: 'D' },\n          'q': { action_: 'd=', nextState: 'qD' },\n          'd|D|qd|qD|dq': { action_: [ 'output', 'd=' ], nextState: 'D' } },\n        '^a|^\\\\x{}{}|^\\\\x{}|^\\\\x|\\'': {\n          '0|1|2|as': { action_: 'b=', nextState: 'b' },\n          'p': { action_: 'b=', nextState: 'bp' },\n          '3|o': { action_: 'd= kv', nextState: 'd' },\n          'q': { action_: 'd=', nextState: 'qd' },\n          'd|qd|D|qD': { action_: 'd=' },\n          'dq': { action_: [ 'output', 'd=' ], nextState: 'd' } },\n        '_{(state of aggregation)}$': {\n          'd|D|q|qd|qD|dq': { action_: [ 'output', 'q=' ], nextState: 'q' } },\n        '_{(...)}|_($...$)|_9|_\\\\x{}{}|_\\\\x{}|_\\\\x': {\n          '0|1|2|as': { action_: 'p=', nextState: 'p' },\n          'b': { action_: 'p=', nextState: 'bp' },\n          '3|o': { action_: 'q=', nextState: 'q' },\n          'd|D': { action_: 'q=', nextState: 'dq' },\n          'q|qd|qD|dq': { action_: [ 'output', 'q=' ], nextState: 'q' } },\n        '=<>': {\n          '0|1|2|3|a|as|o|q|d|D|qd|qD|dq': { action_: [ { type_: 'output', option: 2 }, 'bond' ], nextState: '3' } },\n        '#': {\n          '0|1|2|3|a|as|o': { action_: [ { type_: 'output', option: 2 }, { type_: 'bond', option: \"#\" } ], nextState: '3' } },\n        '{}': {\n          '*': { action_: { type_: 'output', option: 1 },  nextState: '1' } },\n        '{...}': {\n          '0|1|2|3|a|as|b|p|bp': { action_: 'o=', nextState: 'o' },\n          'o|d|D|q|qd|qD|dq': { action_: [ 'output', 'o=' ], nextState: 'o' } },\n        '$...$': {\n          'a': { action_: 'a=' },  // 2$n$\n          '0|1|2|3|as|b|p|bp|o': { action_: 'o=', nextState: 'o' },  // not 'amount'\n          'as|o': { action_: 'o=' },\n          'q|d|D|qd|qD|dq': { action_: [ 'output', 'o=' ], nextState: 'o' } },\n        '\\\\bond{(...)}': {\n          '*': { action_: [ { type_: 'output', option: 2 }, 'bond' ], nextState: \"3\" } },\n        '\\\\frac{(...)}': {\n          '*': { action_: [ { type_: 'output', option: 1 }, 'frac-output' ], nextState: '3' } },\n        '\\\\overset{(...)}': {\n          '*': { action_: [ { type_: 'output', option: 2 }, 'overset-output' ], nextState: '3' } },\n        '\\\\underset{(...)}': {\n          '*': { action_: [ { type_: 'output', option: 2 }, 'underset-output' ], nextState: '3' } },\n        '\\\\underbrace{(...)}': {\n          '*': { action_: [ { type_: 'output', option: 2 }, 'underbrace-output' ], nextState: '3' } },\n        '\\\\color{(...)}{(...)}1|\\\\color(...){(...)}2': {\n          '*': { action_: [ { type_: 'output', option: 2 }, 'color-output' ], nextState: '3' } },\n        '\\\\color{(...)}0': {\n          '*': { action_: [ { type_: 'output', option: 2 }, 'color0-output' ] } },\n        '\\\\ce{(...)}': {\n          '*': { action_: [ { type_: 'output', option: 2 }, 'ce' ], nextState: '3' } },\n        '\\\\,': {\n          '*': { action_: [ { type_: 'output', option: 1 }, 'copy' ], nextState: '1' } },\n        '\\\\x{}{}|\\\\x{}|\\\\x': {\n          '0|1|2|3|a|as|b|p|bp|o|c0': { action_: [ 'o=', 'output' ], nextState: '3' },\n          '*': { action_: ['output', 'o=', 'output' ], nextState: '3' } },\n        'others': {\n          '*': { action_: [ { type_: 'output', option: 1 }, 'copy' ], nextState: '3' } },\n        'else2': {\n          'a': { action_: 'a to o', nextState: 'o', revisit: true },\n          'as': { action_: [ 'output', 'sb=true' ], nextState: '1', revisit: true },\n          'r|rt|rd|rdt|rdq': { action_: [ 'output' ], nextState: '0', revisit: true },\n          '*': { action_: [ 'output', 'copy' ], nextState: '3' } }\n      }),\n      actions: {\n        'o after d': function (buffer, m) {\n          var ret;\n          if ((buffer.d || \"\").match(/^[0-9]+$/)) {\n            var tmp = buffer.d;\n            buffer.d = undefined;\n            ret = this['output'](buffer);\n            buffer.b = tmp;\n          } else {\n            ret = this['output'](buffer);\n          }\n          mhchemParser.actions['o='](buffer, m);\n          return ret;\n        },\n        'd= kv': function (buffer, m) {\n          buffer.d = m;\n          buffer.dType = 'kv';\n        },\n        'charge or bond': function (buffer, m) {\n          if (buffer['beginsWithBond']) {\n            /** @type {ParserOutput[]} */\n            var ret = [];\n            mhchemParser.concatArray(ret, this['output'](buffer));\n            mhchemParser.concatArray(ret, mhchemParser.actions['bond'](buffer, m, \"-\"));\n            return ret;\n          } else {\n            buffer.d = m;\n          }\n        },\n        '- after o/d': function (buffer, m, isAfterD) {\n          var c1 = mhchemParser.patterns.match_('orbital', buffer.o || \"\");\n          var c2 = mhchemParser.patterns.match_('one lowercase greek letter $', buffer.o || \"\");\n          var c3 = mhchemParser.patterns.match_('one lowercase latin letter $', buffer.o || \"\");\n          var c4 = mhchemParser.patterns.match_('$one lowercase latin letter$ $', buffer.o || \"\");\n          var hyphenFollows =  m===\"-\" && ( c1 && c1.remainder===\"\"  ||  c2  ||  c3  ||  c4 );\n          if (hyphenFollows && !buffer.a && !buffer.b && !buffer.p && !buffer.d && !buffer.q && !c1 && c3) {\n            buffer.o = '$' + buffer.o + '$';\n          }\n          /** @type {ParserOutput[]} */\n          var ret = [];\n          if (hyphenFollows) {\n            mhchemParser.concatArray(ret, this['output'](buffer));\n            ret.push({ type_: 'hyphen' });\n          } else {\n            c1 = mhchemParser.patterns.match_('digits', buffer.d || \"\");\n            if (isAfterD && c1 && c1.remainder==='') {\n              mhchemParser.concatArray(ret, mhchemParser.actions['d='](buffer, m));\n              mhchemParser.concatArray(ret, this['output'](buffer));\n            } else {\n              mhchemParser.concatArray(ret, this['output'](buffer));\n              mhchemParser.concatArray(ret, mhchemParser.actions['bond'](buffer, m, \"-\"));\n            }\n          }\n          return ret;\n        },\n        'a to o': function (buffer) {\n          buffer.o = buffer.a;\n          buffer.a = undefined;\n        },\n        'sb=true': function (buffer) { buffer.sb = true; },\n        'sb=false': function (buffer) { buffer.sb = false; },\n        'beginsWithBond=true': function (buffer) { buffer['beginsWithBond'] = true; },\n        'beginsWithBond=false': function (buffer) { buffer['beginsWithBond'] = false; },\n        'parenthesisLevel++': function (buffer) { buffer['parenthesisLevel']++; },\n        'parenthesisLevel--': function (buffer) { buffer['parenthesisLevel']--; },\n        'state of aggregation': function (buffer, m) {\n          return { type_: 'state of aggregation', p1: mhchemParser.go(m, 'o') };\n        },\n        'comma': function (buffer, m) {\n          var a = m.replace(/\\s*$/, '');\n          var withSpace = (a !== m);\n          if (withSpace  &&  buffer['parenthesisLevel'] === 0) {\n            return { type_: 'comma enumeration L', p1: a };\n          } else {\n            return { type_: 'comma enumeration M', p1: a };\n          }\n        },\n        'output': function (buffer, m, entityFollows) {\n          // entityFollows:\n          //   undefined = if we have nothing else to output, also ignore the just read space (buffer.sb)\n          //   1 = an entity follows, never omit the space if there was one just read before (can only apply to state 1)\n          //   2 = 1 + the entity can have an amount, so output a\\, instead of converting it to o (can only apply to states a|as)\n          /** @type {ParserOutput | ParserOutput[]} */\n          var ret;\n          if (!buffer.r) {\n            ret = [];\n            if (!buffer.a && !buffer.b && !buffer.p && !buffer.o && !buffer.q && !buffer.d && !entityFollows) {\n              //ret = [];\n            } else {\n              if (buffer.sb) {\n                ret.push({ type_: 'entitySkip' });\n              }\n              if (!buffer.o && !buffer.q && !buffer.d && !buffer.b && !buffer.p && entityFollows!==2) {\n                buffer.o = buffer.a;\n                buffer.a = undefined;\n              } else if (!buffer.o && !buffer.q && !buffer.d && (buffer.b || buffer.p)) {\n                buffer.o = buffer.a;\n                buffer.d = buffer.b;\n                buffer.q = buffer.p;\n                buffer.a = buffer.b = buffer.p = undefined;\n              } else {\n                if (buffer.o && buffer.dType==='kv' && mhchemParser.patterns.match_('d-oxidation$', buffer.d || \"\")) {\n                  buffer.dType = 'oxidation';\n                } else if (buffer.o && buffer.dType==='kv' && !buffer.q) {\n                  buffer.dType = undefined;\n                }\n              }\n              ret.push({\n                type_: 'chemfive',\n                a: mhchemParser.go(buffer.a, 'a'),\n                b: mhchemParser.go(buffer.b, 'bd'),\n                p: mhchemParser.go(buffer.p, 'pq'),\n                o: mhchemParser.go(buffer.o, 'o'),\n                q: mhchemParser.go(buffer.q, 'pq'),\n                d: mhchemParser.go(buffer.d, (buffer.dType === 'oxidation' ? 'oxidation' : 'bd')),\n                dType: buffer.dType\n              });\n            }\n          } else {  // r\n            /** @type {ParserOutput[]} */\n            var rd;\n            if (buffer.rdt === 'M') {\n              rd = mhchemParser.go(buffer.rd, 'tex-math');\n            } else if (buffer.rdt === 'T') {\n              rd = [ { type_: 'text', p1: buffer.rd || \"\" } ];\n            } else {\n              rd = mhchemParser.go(buffer.rd);\n            }\n            /** @type {ParserOutput[]} */\n            var rq;\n            if (buffer.rqt === 'M') {\n              rq = mhchemParser.go(buffer.rq, 'tex-math');\n            } else if (buffer.rqt === 'T') {\n              rq = [ { type_: 'text', p1: buffer.rq || \"\"} ];\n            } else {\n              rq = mhchemParser.go(buffer.rq);\n            }\n            ret = {\n              type_: 'arrow',\n              r: buffer.r,\n              rd: rd,\n              rq: rq\n            };\n          }\n          for (var p in buffer) {\n            if (p !== 'parenthesisLevel'  &&  p !== 'beginsWithBond') {\n              delete buffer[p];\n            }\n          }\n          return ret;\n        },\n        'oxidation-output': function (buffer, m) {\n          var ret = [ \"{\" ];\n          mhchemParser.concatArray(ret, mhchemParser.go(m, 'oxidation'));\n          ret.push(\"}\");\n          return ret;\n        },\n        'frac-output': function (buffer, m) {\n          return { type_: 'frac-ce', p1: mhchemParser.go(m[0]), p2: mhchemParser.go(m[1]) };\n        },\n        'overset-output': function (buffer, m) {\n          return { type_: 'overset', p1: mhchemParser.go(m[0]), p2: mhchemParser.go(m[1]) };\n        },\n        'underset-output': function (buffer, m) {\n          return { type_: 'underset', p1: mhchemParser.go(m[0]), p2: mhchemParser.go(m[1]) };\n        },\n        'underbrace-output': function (buffer, m) {\n          return { type_: 'underbrace', p1: mhchemParser.go(m[0]), p2: mhchemParser.go(m[1]) };\n        },\n        'color-output': function (buffer, m) {\n          return { type_: 'color', color1: m[0], color2: mhchemParser.go(m[1]) };\n        },\n        'r=': function (buffer, m) { buffer.r = m; },\n        'rdt=': function (buffer, m) { buffer.rdt = m; },\n        'rd=': function (buffer, m) { buffer.rd = m; },\n        'rqt=': function (buffer, m) { buffer.rqt = m; },\n        'rq=': function (buffer, m) { buffer.rq = m; },\n        'operator': function (buffer, m, p1) { return { type_: 'operator', kind_: (p1 || m) }; }\n      }\n    },\n    'a': {\n      transitions: mhchemParser.createTransitions({\n        'empty': {\n          '*': {} },\n        '1/2$': {\n          '0': { action_: '1/2' } },\n        'else': {\n          '0': { nextState: '1', revisit: true } },\n        '$(...)$': {\n          '*': { action_: 'tex-math tight', nextState: '1' } },\n        ',': {\n          '*': { action_: { type_: 'insert', option: 'commaDecimal' } } },\n        'else2': {\n          '*': { action_: 'copy' } }\n      }),\n      actions: {}\n    },\n    'o': {\n      transitions: mhchemParser.createTransitions({\n        'empty': {\n          '*': {} },\n        '1/2$': {\n          '0': { action_: '1/2' } },\n        'else': {\n          '0': { nextState: '1', revisit: true } },\n        'letters': {\n          '*': { action_: 'rm' } },\n        '\\\\ca': {\n          '*': { action_: { type_: 'insert', option: 'circa' } } },\n        '\\\\x{}{}|\\\\x{}|\\\\x': {\n          '*': { action_: 'copy' } },\n        '${(...)}$|$(...)$': {\n          '*': { action_: 'tex-math' } },\n        '{(...)}': {\n          '*': { action_: '{text}' } },\n        'else2': {\n          '*': { action_: 'copy' } }\n      }),\n      actions: {}\n    },\n    'text': {\n      transitions: mhchemParser.createTransitions({\n        'empty': {\n          '*': { action_: 'output' } },\n        '{...}': {\n          '*': { action_: 'text=' } },\n        '${(...)}$|$(...)$': {\n          '*': { action_: 'tex-math' } },\n        '\\\\greek': {\n          '*': { action_: [ 'output', 'rm' ] } },\n        '\\\\,|\\\\x{}{}|\\\\x{}|\\\\x': {\n          '*': { action_: [ 'output', 'copy' ] } },\n        'else': {\n          '*': { action_: 'text=' } }\n      }),\n      actions: {\n        'output': function (buffer) {\n          if (buffer.text_) {\n            /** @type {ParserOutput} */\n            var ret = { type_: 'text', p1: buffer.text_ };\n            for (var p in buffer) { delete buffer[p]; }\n            return ret;\n          }\n        }\n      }\n    },\n    'pq': {\n      transitions: mhchemParser.createTransitions({\n        'empty': {\n          '*': {} },\n        'state of aggregation $': {\n          '*': { action_: 'state of aggregation' } },\n        'i$': {\n          '0': { nextState: '!f', revisit: true } },\n        '(KV letters),': {\n          '0': { action_: 'rm', nextState: '0' } },\n        'formula$': {\n          '0': { nextState: 'f', revisit: true } },\n        '1/2$': {\n          '0': { action_: '1/2' } },\n        'else': {\n          '0': { nextState: '!f', revisit: true } },\n        '${(...)}$|$(...)$': {\n          '*': { action_: 'tex-math' } },\n        '{(...)}': {\n          '*': { action_: 'text' } },\n        'a-z': {\n          'f': { action_: 'tex-math' } },\n        'letters': {\n          '*': { action_: 'rm' } },\n        '-9.,9': {\n          '*': { action_: '9,9'  } },\n        ',': {\n          '*': { action_: { type_: 'insert+p1', option: 'comma enumeration S' } } },\n        '\\\\color{(...)}{(...)}1|\\\\color(...){(...)}2': {\n          '*': { action_: 'color-output' } },\n        '\\\\color{(...)}0': {\n          '*': { action_: 'color0-output' } },\n        '\\\\ce{(...)}': {\n          '*': { action_: 'ce' } },\n        '\\\\,|\\\\x{}{}|\\\\x{}|\\\\x': {\n          '*': { action_: 'copy' } },\n        'else2': {\n          '*': { action_: 'copy' } }\n      }),\n      actions: {\n        'state of aggregation': function (buffer, m) {\n          return { type_: 'state of aggregation subscript', p1: mhchemParser.go(m, 'o') };\n        },\n        'color-output': function (buffer, m) {\n          return { type_: 'color', color1: m[0], color2: mhchemParser.go(m[1], 'pq') };\n        }\n      }\n    },\n    'bd': {\n      transitions: mhchemParser.createTransitions({\n        'empty': {\n          '*': {} },\n        'x$': {\n          '0': { nextState: '!f', revisit: true } },\n        'formula$': {\n          '0': { nextState: 'f', revisit: true } },\n        'else': {\n          '0': { nextState: '!f', revisit: true } },\n        '-9.,9 no missing 0': {\n          '*': { action_: '9,9' } },\n        '.': {\n          '*': { action_: { type_: 'insert', option: 'electron dot' } } },\n        'a-z': {\n          'f': { action_: 'tex-math' } },\n        'x': {\n          '*': { action_: { type_: 'insert', option: 'KV x' } } },\n        'letters': {\n          '*': { action_: 'rm' } },\n        '\\'': {\n          '*': { action_: { type_: 'insert', option: 'prime' } } },\n        '${(...)}$|$(...)$': {\n          '*': { action_: 'tex-math' } },\n        '{(...)}': {\n          '*': { action_: 'text' } },\n        '\\\\color{(...)}{(...)}1|\\\\color(...){(...)}2': {\n          '*': { action_: 'color-output' } },\n        '\\\\color{(...)}0': {\n          '*': { action_: 'color0-output' } },\n        '\\\\ce{(...)}': {\n          '*': { action_: 'ce' } },\n        '\\\\,|\\\\x{}{}|\\\\x{}|\\\\x': {\n          '*': { action_: 'copy' } },\n        'else2': {\n          '*': { action_: 'copy' } }\n      }),\n      actions: {\n        'color-output': function (buffer, m) {\n          return { type_: 'color', color1: m[0], color2: mhchemParser.go(m[1], 'bd') };\n        }\n      }\n    },\n    'oxidation': {\n      transitions: mhchemParser.createTransitions({\n        'empty': {\n          '*': {} },\n        'roman numeral': {\n          '*': { action_: 'roman-numeral' } },\n        '${(...)}$|$(...)$': {\n          '*': { action_: 'tex-math' } },\n        'else': {\n          '*': { action_: 'copy' } }\n      }),\n      actions: {\n        'roman-numeral': function (buffer, m) { return { type_: 'roman numeral', p1: m || \"\" }; }\n      }\n    },\n    'tex-math': {\n      transitions: mhchemParser.createTransitions({\n        'empty': {\n          '*': { action_: 'output' } },\n        '\\\\ce{(...)}': {\n          '*': { action_: [ 'output', 'ce' ] } },\n        '{...}|\\\\,|\\\\x{}{}|\\\\x{}|\\\\x': {\n          '*': { action_: 'o=' } },\n        'else': {\n          '*': { action_: 'o=' } }\n      }),\n      actions: {\n        'output': function (buffer) {\n          if (buffer.o) {\n            /** @type {ParserOutput} */\n            var ret = { type_: 'tex-math', p1: buffer.o };\n            for (var p in buffer) { delete buffer[p]; }\n            return ret;\n          }\n        }\n      }\n    },\n    'tex-math tight': {\n      transitions: mhchemParser.createTransitions({\n        'empty': {\n          '*': { action_: 'output' } },\n        '\\\\ce{(...)}': {\n          '*': { action_: [ 'output', 'ce' ] } },\n        '{...}|\\\\,|\\\\x{}{}|\\\\x{}|\\\\x': {\n          '*': { action_: 'o=' } },\n        '-|+': {\n          '*': { action_: 'tight operator' } },\n        'else': {\n          '*': { action_: 'o=' } }\n      }),\n      actions: {\n        'tight operator': function (buffer, m) { buffer.o = (buffer.o || \"\") + \"{\"+m+\"}\"; },\n        'output': function (buffer) {\n          if (buffer.o) {\n            /** @type {ParserOutput} */\n            var ret = { type_: 'tex-math', p1: buffer.o };\n            for (var p in buffer) { delete buffer[p]; }\n            return ret;\n          }\n        }\n      }\n    },\n    '9,9': {\n      transitions: mhchemParser.createTransitions({\n        'empty': {\n          '*': {} },\n        ',': {\n          '*': { action_: 'comma' } },\n        'else': {\n          '*': { action_: 'copy' } }\n      }),\n      actions: {\n        'comma': function () { return { type_: 'commaDecimal' }; }\n      }\n    },\n    //#endregion\n    //\n    // \\pu state machines\n    //\n    //#region pu\n    'pu': {\n      transitions: mhchemParser.createTransitions({\n        'empty': {\n          '*': { action_: 'output' } },\n        'space$': {\n          '*': { action_: [ 'output', 'space' ] } },\n        '{[(|)]}': {\n          '0|a': { action_: 'copy' } },\n        '(-)(9)^(-9)': {\n          '0': { action_: 'number^', nextState: 'a' } },\n        '(-)(9.,9)(e)(99)': {\n          '0': { action_: 'enumber', nextState: 'a' } },\n        'space': {\n          '0|a': {} },\n        'pm-operator': {\n          '0|a': { action_: { type_: 'operator', option: '\\\\pm' }, nextState: '0' } },\n        'operator': {\n          '0|a': { action_: 'copy', nextState: '0' } },\n        '//': {\n          'd': { action_: 'o=', nextState: '/' } },\n        '/': {\n          'd': { action_: 'o=', nextState: '/' } },\n        '{...}|else': {\n          '0|d': { action_: 'd=', nextState: 'd' },\n          'a': { action_: [ 'space', 'd=' ], nextState: 'd' },\n          '/|q': { action_: 'q=', nextState: 'q' } }\n      }),\n      actions: {\n        'enumber': function (buffer, m) {\n          /** @type {ParserOutput[]} */\n          var ret = [];\n          if (m[0] === \"+-\"  ||  m[0] === \"+/-\") {\n            ret.push(\"\\\\pm \");\n          } else if (m[0]) {\n            ret.push(m[0]);\n          }\n          if (m[1]) {\n            mhchemParser.concatArray(ret, mhchemParser.go(m[1], 'pu-9,9'));\n            if (m[2]) {\n              if (m[2].match(/[,.]/)) {\n                mhchemParser.concatArray(ret, mhchemParser.go(m[2], 'pu-9,9'));\n              } else {\n                ret.push(m[2]);\n              }\n            }\n            m[3] = m[4] || m[3];\n            if (m[3]) {\n              m[3] = m[3].trim();\n              if (m[3] === \"e\"  ||  m[3].substr(0, 1) === \"*\") {\n                ret.push({ type_: 'cdot' });\n              } else {\n                ret.push({ type_: 'times' });\n              }\n            }\n          }\n          if (m[3]) {\n            ret.push(\"10^{\"+m[5]+\"}\");\n          }\n          return ret;\n        },\n        'number^': function (buffer, m) {\n          /** @type {ParserOutput[]} */\n          var ret = [];\n          if (m[0] === \"+-\"  ||  m[0] === \"+/-\") {\n            ret.push(\"\\\\pm \");\n          } else if (m[0]) {\n            ret.push(m[0]);\n          }\n          mhchemParser.concatArray(ret, mhchemParser.go(m[1], 'pu-9,9'));\n          ret.push(\"^{\"+m[2]+\"}\");\n          return ret;\n        },\n        'operator': function (buffer, m, p1) { return { type_: 'operator', kind_: (p1 || m) }; },\n        'space': function () { return { type_: 'pu-space-1' }; },\n        'output': function (buffer) {\n          /** @type {ParserOutput | ParserOutput[]} */\n          var ret;\n          var md = mhchemParser.patterns.match_('{(...)}', buffer.d || \"\");\n          if (md  &&  md.remainder === '') { buffer.d = md.match_; }\n          var mq = mhchemParser.patterns.match_('{(...)}', buffer.q || \"\");\n          if (mq  &&  mq.remainder === '') { buffer.q = mq.match_; }\n          if (buffer.d) {\n            buffer.d = buffer.d.replace(/\\u00B0C|\\^oC|\\^{o}C/g, \"{}^{\\\\circ}C\");\n            buffer.d = buffer.d.replace(/\\u00B0F|\\^oF|\\^{o}F/g, \"{}^{\\\\circ}F\");\n          }\n          if (buffer.q) {  // fraction\n            buffer.q = buffer.q.replace(/\\u00B0C|\\^oC|\\^{o}C/g, \"{}^{\\\\circ}C\");\n            buffer.q = buffer.q.replace(/\\u00B0F|\\^oF|\\^{o}F/g, \"{}^{\\\\circ}F\");\n            var b5 = {\n              d: mhchemParser.go(buffer.d, 'pu'),\n              q: mhchemParser.go(buffer.q, 'pu')\n            };\n            if (buffer.o === '//') {\n              ret = { type_: 'pu-frac', p1: b5.d, p2: b5.q };\n            } else {\n              ret = b5.d;\n              if (b5.d.length > 1  ||  b5.q.length > 1) {\n                ret.push({ type_: ' / ' });\n              } else {\n                ret.push({ type_: '/' });\n              }\n              mhchemParser.concatArray(ret, b5.q);\n            }\n          } else {  // no fraction\n            ret = mhchemParser.go(buffer.d, 'pu-2');\n          }\n          for (var p in buffer) { delete buffer[p]; }\n          return ret;\n        }\n      }\n    },\n    'pu-2': {\n      transitions: mhchemParser.createTransitions({\n        'empty': {\n          '*': { action_: 'output' } },\n        '*': {\n          '*': { action_: [ 'output', 'cdot' ], nextState: '0' } },\n        '\\\\x': {\n          '*': { action_: 'rm=' } },\n        'space': {\n          '*': { action_: [ 'output', 'space' ], nextState: '0' } },\n        '^{(...)}|^(-1)': {\n          '1': { action_: '^(-1)' } },\n        '-9.,9': {\n          '0': { action_: 'rm=', nextState: '0' },\n          '1': { action_: '^(-1)', nextState: '0' } },\n        '{...}|else': {\n          '*': { action_: 'rm=', nextState: '1' } }\n      }),\n      actions: {\n        'cdot': function () { return { type_: 'tight cdot' }; },\n        '^(-1)': function (buffer, m) { buffer.rm += \"^{\"+m+\"}\"; },\n        'space': function () { return { type_: 'pu-space-2' }; },\n        'output': function (buffer) {\n          /** @type {ParserOutput | ParserOutput[]} */\n          var ret = [];\n          if (buffer.rm) {\n            var mrm = mhchemParser.patterns.match_('{(...)}', buffer.rm || \"\");\n            if (mrm  &&  mrm.remainder === '') {\n              ret = mhchemParser.go(mrm.match_, 'pu');\n            } else {\n              ret = { type_: 'rm', p1: buffer.rm };\n            }\n          }\n          for (var p in buffer) { delete buffer[p]; }\n          return ret;\n        }\n      }\n    },\n    'pu-9,9': {\n      transitions: mhchemParser.createTransitions({\n        'empty': {\n          '0': { action_: 'output-0' },\n          'o': { action_: 'output-o' } },\n        ',': {\n          '0': { action_: [ 'output-0', 'comma' ], nextState: 'o' } },\n        '.': {\n          '0': { action_: [ 'output-0', 'copy' ], nextState: 'o' } },\n        'else': {\n          '*': { action_: 'text=' } }\n      }),\n      actions: {\n        'comma': function () { return { type_: 'commaDecimal' }; },\n        'output-0': function (buffer) {\n          /** @type {ParserOutput[]} */\n          var ret = [];\n          buffer.text_ = buffer.text_ || \"\";\n          if (buffer.text_.length > 4) {\n            var a = buffer.text_.length % 3;\n            if (a === 0) { a = 3; }\n            for (var i=buffer.text_.length-3; i>0; i-=3) {\n              ret.push(buffer.text_.substr(i, 3));\n              ret.push({ type_: '1000 separator' });\n            }\n            ret.push(buffer.text_.substr(0, a));\n            ret.reverse();\n          } else {\n            ret.push(buffer.text_);\n          }\n          for (var p in buffer) { delete buffer[p]; }\n          return ret;\n        },\n        'output-o': function (buffer) {\n          /** @type {ParserOutput[]} */\n          var ret = [];\n          buffer.text_ = buffer.text_ || \"\";\n          if (buffer.text_.length > 4) {\n            var a = buffer.text_.length - 3;\n            for (var i=0; i<a; i+=3) {\n              ret.push(buffer.text_.substr(i, 3));\n              ret.push({ type_: '1000 separator' });\n            }\n            ret.push(buffer.text_.substr(i));\n          } else {\n            ret.push(buffer.text_);\n          }\n          for (var p in buffer) { delete buffer[p]; }\n          return ret;\n        }\n      }\n    }\n    //#endregion\n  };\n\n  //\n  // texify: Take MhchemParser output and convert it to TeX\n  //\n  /** @type {Texify} */\n  var texify = {\n    go: function (input, isInner) {  // (recursive, max 4 levels)\n      if (!input) { return \"\"; }\n      var res = \"\";\n      var cee = false;\n      for (var i=0; i < input.length; i++) {\n        var inputi = input[i];\n        if (typeof inputi === \"string\") {\n          res += inputi;\n        } else {\n          res += texify._go2(inputi);\n          if (inputi.type_ === '1st-level escape') { cee = true; }\n        }\n      }\n      if (!isInner && !cee && res) {\n        res = \"{\" + res + \"}\";\n      }\n      return res;\n    },\n    _goInner: function (input) {\n      if (!input) { return input; }\n      return texify.go(input, true);\n    },\n    _go2: function (buf) {\n      /** @type {undefined | string} */\n      var res;\n      switch (buf.type_) {\n        case 'chemfive':\n          res = \"\";\n          var b5 = {\n            a: texify._goInner(buf.a),\n            b: texify._goInner(buf.b),\n            p: texify._goInner(buf.p),\n            o: texify._goInner(buf.o),\n            q: texify._goInner(buf.q),\n            d: texify._goInner(buf.d)\n          };\n          //\n          // a\n          //\n          if (b5.a) {\n            if (b5.a.match(/^[+\\-]/)) { b5.a = \"{\"+b5.a+\"}\"; }\n            res += b5.a + \"\\\\,\";\n          }\n          //\n          // b and p\n          //\n          if (b5.b || b5.p) {\n            res += \"{\\\\vphantom{X}}\";\n            res += \"^{\\\\hphantom{\"+(b5.b||\"\")+\"}}_{\\\\hphantom{\"+(b5.p||\"\")+\"}}\";\n            res += \"{\\\\vphantom{X}}\";\n            // In the next two lines, I've removed \\smash[t] (ron)\n            // TODO: Revert \\smash[t] when WebKit properly renders <mpadded> w/height=\"0\"\n            //res += \"^{\\\\smash[t]{\\\\vphantom{2}}\\\\mathllap{\"+(b5.b||\"\")+\"}}\";\n            res += \"^{\\\\vphantom{2}\\\\mathllap{\"+(b5.b||\"\")+\"}}\";\n            //res += \"_{\\\\vphantom{2}\\\\mathllap{\\\\smash[t]{\"+(b5.p||\"\")+\"}}}\";\n            res += \"_{\\\\vphantom{2}\\\\mathllap{\"+(b5.p||\"\")+\"}}\";\n          }\n          //\n          // o\n          //\n          if (b5.o) {\n            if (b5.o.match(/^[+\\-]/)) { b5.o = \"{\"+b5.o+\"}\"; }\n            res += b5.o;\n          }\n          //\n          // q and d\n          //\n          if (buf.dType === 'kv') {\n            if (b5.d || b5.q) {\n              res += \"{\\\\vphantom{X}}\";\n            }\n            if (b5.d) {\n              res += \"^{\"+b5.d+\"}\";\n            }\n            if (b5.q) {\n              // In the next line, I've removed \\smash[t] (ron)\n              // TODO: Revert \\smash[t] when WebKit properly renders <mpadded> w/height=\"0\"\n              //res += \"_{\\\\smash[t]{\"+b5.q+\"}}\";\n              res += \"_{\"+b5.q+\"}\";\n            }\n          } else if (buf.dType === 'oxidation') {\n            if (b5.d) {\n              res += \"{\\\\vphantom{X}}\";\n              res += \"^{\"+b5.d+\"}\";\n            }\n            if (b5.q) {\n              // A Firefox bug adds a bogus depth to <mphantom>, so we change \\vphantom{X} to {}\n              // TODO: Reinstate \\vphantom{X} when the Firefox bug is fixed.\n//              res += \"{\\\\vphantom{X}}\";\n              res += \"{{}}\";\n              // In the next line, I've removed \\smash[t] (ron)\n              // TODO: Revert \\smash[t] when WebKit properly renders <mpadded> w/height=\"0\"\n              //res += \"_{\\\\smash[t]{\"+b5.q+\"}}\";\n              res += \"_{\"+b5.q+\"}\";\n            }\n          } else {\n            if (b5.q) {\n              // TODO: Reinstate \\vphantom{X} when the Firefox bug is fixed.\n//              res += \"{\\\\vphantom{X}}\";\n              res += \"{{}}\";\n              // In the next line, I've removed \\smash[t] (ron)\n              // TODO: Revert \\smash[t] when WebKit properly renders <mpadded> w/height=\"0\"\n              //res += \"_{\\\\smash[t]{\"+b5.q+\"}}\";\n              res += \"_{\"+b5.q+\"}\";\n            }\n            if (b5.d) {\n              // TODO: Reinstate \\vphantom{X} when the Firefox bug is fixed.\n//              res += \"{\\\\vphantom{X}}\";\n              res += \"{{}}\";\n              res += \"^{\"+b5.d+\"}\";\n            }\n          }\n          break;\n        case 'rm':\n          res = \"\\\\mathrm{\"+buf.p1+\"}\";\n          break;\n        case 'text':\n          if (buf.p1.match(/[\\^_]/)) {\n            buf.p1 = buf.p1.replace(\" \", \"~\").replace(\"-\", \"\\\\text{-}\");\n            res = \"\\\\mathrm{\"+buf.p1+\"}\";\n          } else {\n            res = \"\\\\text{\"+buf.p1+\"}\";\n          }\n          break;\n        case 'roman numeral':\n          res = \"\\\\mathrm{\"+buf.p1+\"}\";\n          break;\n        case 'state of aggregation':\n          res = \"\\\\mskip2mu \"+texify._goInner(buf.p1);\n          break;\n        case 'state of aggregation subscript':\n          res = \"\\\\mskip1mu \"+texify._goInner(buf.p1);\n          break;\n        case 'bond':\n          res = texify._getBond(buf.kind_);\n          if (!res) {\n            throw [\"MhchemErrorBond\", \"mhchem Error. Unknown bond type (\" + buf.kind_ + \")\"];\n          }\n          break;\n        case 'frac':\n          var c = \"\\\\frac{\" + buf.p1 + \"}{\" + buf.p2 + \"}\";\n          res = \"\\\\mathchoice{\\\\textstyle\"+c+\"}{\"+c+\"}{\"+c+\"}{\"+c+\"}\";\n          break;\n        case 'pu-frac':\n          var d = \"\\\\frac{\" + texify._goInner(buf.p1) + \"}{\" + texify._goInner(buf.p2) + \"}\";\n          res = \"\\\\mathchoice{\\\\textstyle\"+d+\"}{\"+d+\"}{\"+d+\"}{\"+d+\"}\";\n          break;\n        case 'tex-math':\n          res = buf.p1 + \" \";\n          break;\n        case 'frac-ce':\n          res = \"\\\\frac{\" + texify._goInner(buf.p1) + \"}{\" + texify._goInner(buf.p2) + \"}\";\n          break;\n        case 'overset':\n          res = \"\\\\overset{\" + texify._goInner(buf.p1) + \"}{\" + texify._goInner(buf.p2) + \"}\";\n          break;\n        case 'underset':\n          res = \"\\\\underset{\" + texify._goInner(buf.p1) + \"}{\" + texify._goInner(buf.p2) + \"}\";\n          break;\n        case 'underbrace':\n          res =  \"\\\\underbrace{\" + texify._goInner(buf.p1) + \"}_{\" + texify._goInner(buf.p2) + \"}\";\n          break;\n        case 'color':\n          res = \"{\\\\color{\" + buf.color1 + \"}{\" + texify._goInner(buf.color2) + \"}}\";\n          break;\n        case 'color0':\n          res = \"\\\\color{\" + buf.color + \"}\";\n          break;\n        case 'arrow':\n          var b6 = {\n            rd: texify._goInner(buf.rd),\n            rq: texify._goInner(buf.rq)\n          };\n          var arrow = texify._getArrow(buf.r);\n          if (b6.rq) { arrow += \"[{\\\\rm \" + b6.rq + \"}]\"; }\n          if (b6.rd) {\n            arrow += \"{\\\\rm \" + b6.rd + \"}\";\n          } else {\n            arrow += \"{}\";\n          }\n          res = arrow;\n          break;\n        case 'operator':\n          res = texify._getOperator(buf.kind_);\n          break;\n        case '1st-level escape':\n          res = buf.p1+\" \";  // &, \\\\\\\\, \\\\hlin\n          break;\n        case 'space':\n          res = \" \";\n          break;\n        case 'entitySkip':\n          res = \"~\";\n          break;\n        case 'pu-space-1':\n          res = \"~\";\n          break;\n        case 'pu-space-2':\n          res = \"\\\\mkern3mu \";\n          break;\n        case '1000 separator':\n          res = \"\\\\mkern2mu \";\n          break;\n        case 'commaDecimal':\n          res = \"{,}\";\n          break;\n          case 'comma enumeration L':\n          res = \"{\"+buf.p1+\"}\\\\mkern6mu \";\n          break;\n        case 'comma enumeration M':\n          res = \"{\"+buf.p1+\"}\\\\mkern3mu \";\n          break;\n        case 'comma enumeration S':\n          res = \"{\"+buf.p1+\"}\\\\mkern1mu \";\n          break;\n        case 'hyphen':\n          res = \"\\\\text{-}\";\n          break;\n        case 'addition compound':\n          res = \"\\\\,{\\\\cdot}\\\\,\";\n          break;\n        case 'electron dot':\n          res = \"\\\\mkern1mu \\\\text{\\\\textbullet}\\\\mkern1mu \";\n          break;\n        case 'KV x':\n          res = \"{\\\\times}\";\n          break;\n        case 'prime':\n          res = \"\\\\prime \";\n          break;\n        case 'cdot':\n          res = \"\\\\cdot \";\n          break;\n        case 'tight cdot':\n          res = \"\\\\mkern1mu{\\\\cdot}\\\\mkern1mu \";\n          break;\n        case 'times':\n          res = \"\\\\times \";\n          break;\n        case 'circa':\n          res = \"{\\\\sim}\";\n          break;\n        case '^':\n          res = \"uparrow\";\n          break;\n        case 'v':\n          res = \"downarrow\";\n          break;\n        case 'ellipsis':\n          res = \"\\\\ldots \";\n          break;\n        case '/':\n          res = \"/\";\n          break;\n        case ' / ':\n          res = \"\\\\,/\\\\,\";\n          break;\n        default:\n          assertNever(buf);\n          throw [\"MhchemBugT\", \"mhchem bug T. Please report.\"];  // Missing texify rule or unknown MhchemParser output\n      }\n      assertString(res);\n      return res;\n    },\n    _getArrow: function (a) {\n      switch (a) {\n        case \"->\": return \"\\\\yields\";\n        case \"\\u2192\": return \"\\\\yields\";\n        case \"\\u27F6\": return \"\\\\yields\";\n        case \"<-\": return \"\\\\yieldsLeft\";\n        case \"<->\": return \"\\\\mesomerism\";\n        case \"<-->\": return \"\\\\yieldsLeftRight\";\n        case \"<=>\": return \"\\\\equilibrium\";\n        case \"\\u21CC\": return \"\\\\equilibrium\";\n        case \"<=>>\": return \"\\\\equilibriumRight\";\n        case \"<<=>\": return \"\\\\equilibriumLeft\";\n        default:\n          assertNever(a);\n          throw [\"MhchemBugT\", \"mhchem bug T. Please report.\"];\n      }\n    },\n    _getBond: function (a) {\n      switch (a) {\n        case \"-\": return \"{-}\";\n        case \"1\": return \"{-}\";\n        case \"=\": return \"{=}\";\n        case \"2\": return \"{=}\";\n        case \"#\": return \"{\\\\equiv}\";\n        case \"3\": return \"{\\\\equiv}\";\n        case \"~\": return \"{\\\\tripleDash}\";\n        case \"~-\": return \"{\\\\tripleDashOverLine}\";\n        case \"~=\": return \"{\\\\tripleDashOverDoubleLine}\";\n        case \"~--\": return \"{\\\\tripleDashOverDoubleLine}\";\n        case \"-~-\": return \"{\\\\tripleDashBetweenDoubleLine}\";\n        case \"...\": return \"{{\\\\cdot}{\\\\cdot}{\\\\cdot}}\";\n        case \"....\": return \"{{\\\\cdot}{\\\\cdot}{\\\\cdot}{\\\\cdot}}\";\n        case \"->\": return \"{\\\\rightarrow}\";\n        case \"<-\": return \"{\\\\leftarrow}\";\n        case \"<\": return \"{<}\";\n        case \">\": return \"{>}\";\n        default:\n          assertNever(a);\n          throw [\"MhchemBugT\", \"mhchem bug T. Please report.\"];\n      }\n    },\n    _getOperator: function (a) {\n      switch (a) {\n        case \"+\": return \" {}+{} \";\n        case \"-\": return \" {}-{} \";\n        case \"=\": return \" {}={} \";\n        case \"<\": return \" {}<{} \";\n        case \">\": return \" {}>{} \";\n        case \"<<\": return \" {}\\\\ll{} \";\n        case \">>\": return \" {}\\\\gg{} \";\n        case \"\\\\pm\": return \" {}\\\\pm{} \";\n        case \"\\\\approx\": return \" {}\\\\approx{} \";\n        case \"$\\\\approx$\": return \" {}\\\\approx{} \";\n        case \"v\": return \" \\\\downarrow{} \";\n        case \"(v)\": return \" \\\\downarrow{} \";\n        case \"^\": return \" \\\\uparrow{} \";\n        case \"(^)\": return \" \\\\uparrow{} \";\n        default:\n          assertNever(a);\n          throw [\"MhchemBugT\", \"mhchem bug T. Please report.\"];\n      }\n    }\n  };\n\n  //\n  // Helpers for code analysis\n  // Will show type error at calling position\n  //\n  /** @param {number} a */\n  function assertNever(a) {}\n  /** @param {string} a */\n  function assertString(a) {}\n\n/* eslint-disable no-undef */\n\n//////////////////////////////////////////////////////////////////////\n// texvc.sty\n\n// The texvc package contains macros available in mediawiki pages.\n// We omit the functions deprecated at\n// https://en.wikipedia.org/wiki/Help:Displaying_a_formula#Deprecated_syntax\n\n// We also omit texvc's \\O, which conflicts with \\text{\\O}\n\ndefineMacro(\"\\\\darr\", \"\\\\downarrow\");\ndefineMacro(\"\\\\dArr\", \"\\\\Downarrow\");\ndefineMacro(\"\\\\Darr\", \"\\\\Downarrow\");\ndefineMacro(\"\\\\lang\", \"\\\\langle\");\ndefineMacro(\"\\\\rang\", \"\\\\rangle\");\ndefineMacro(\"\\\\uarr\", \"\\\\uparrow\");\ndefineMacro(\"\\\\uArr\", \"\\\\Uparrow\");\ndefineMacro(\"\\\\Uarr\", \"\\\\Uparrow\");\ndefineMacro(\"\\\\N\", \"\\\\mathbb{N}\");\ndefineMacro(\"\\\\R\", \"\\\\mathbb{R}\");\ndefineMacro(\"\\\\Z\", \"\\\\mathbb{Z}\");\ndefineMacro(\"\\\\alef\", \"\\\\aleph\");\ndefineMacro(\"\\\\alefsym\", \"\\\\aleph\");\ndefineMacro(\"\\\\bull\", \"\\\\bullet\");\ndefineMacro(\"\\\\clubs\", \"\\\\clubsuit\");\ndefineMacro(\"\\\\cnums\", \"\\\\mathbb{C}\");\ndefineMacro(\"\\\\Complex\", \"\\\\mathbb{C}\");\ndefineMacro(\"\\\\Dagger\", \"\\\\ddagger\");\ndefineMacro(\"\\\\diamonds\", \"\\\\diamondsuit\");\ndefineMacro(\"\\\\empty\", \"\\\\emptyset\");\ndefineMacro(\"\\\\exist\", \"\\\\exists\");\ndefineMacro(\"\\\\harr\", \"\\\\leftrightarrow\");\ndefineMacro(\"\\\\hArr\", \"\\\\Leftrightarrow\");\ndefineMacro(\"\\\\Harr\", \"\\\\Leftrightarrow\");\ndefineMacro(\"\\\\hearts\", \"\\\\heartsuit\");\ndefineMacro(\"\\\\image\", \"\\\\Im\");\ndefineMacro(\"\\\\infin\", \"\\\\infty\");\ndefineMacro(\"\\\\isin\", \"\\\\in\");\ndefineMacro(\"\\\\larr\", \"\\\\leftarrow\");\ndefineMacro(\"\\\\lArr\", \"\\\\Leftarrow\");\ndefineMacro(\"\\\\Larr\", \"\\\\Leftarrow\");\ndefineMacro(\"\\\\lrarr\", \"\\\\leftrightarrow\");\ndefineMacro(\"\\\\lrArr\", \"\\\\Leftrightarrow\");\ndefineMacro(\"\\\\Lrarr\", \"\\\\Leftrightarrow\");\ndefineMacro(\"\\\\natnums\", \"\\\\mathbb{N}\");\ndefineMacro(\"\\\\plusmn\", \"\\\\pm\");\ndefineMacro(\"\\\\rarr\", \"\\\\rightarrow\");\ndefineMacro(\"\\\\rArr\", \"\\\\Rightarrow\");\ndefineMacro(\"\\\\Rarr\", \"\\\\Rightarrow\");\ndefineMacro(\"\\\\real\", \"\\\\Re\");\ndefineMacro(\"\\\\reals\", \"\\\\mathbb{R}\");\ndefineMacro(\"\\\\Reals\", \"\\\\mathbb{R}\");\ndefineMacro(\"\\\\sdot\", \"\\\\cdot\");\ndefineMacro(\"\\\\sect\", \"\\\\S\");\ndefineMacro(\"\\\\spades\", \"\\\\spadesuit\");\ndefineMacro(\"\\\\sub\", \"\\\\subset\");\ndefineMacro(\"\\\\sube\", \"\\\\subseteq\");\ndefineMacro(\"\\\\supe\", \"\\\\supseteq\");\ndefineMacro(\"\\\\thetasym\", \"\\\\vartheta\");\ndefineMacro(\"\\\\weierp\", \"\\\\wp\");\n\n/* eslint-disable no-undef */\n\n/****************************************************\n *\n *  physics.js\n *\n *  Implements the Physics Package for LaTeX input.\n *\n *  ---------------------------------------------------------------------\n *\n *  The original version of this file is licensed as follows:\n *  Copyright (c) 2015-2016 Kolen Cheung <https://github.com/ickc/MathJax-third-party-extensions>.\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n *\n *  ---------------------------------------------------------------------\n *\n *  This file has been revised from the original in the following ways:\n *  1. The interface is changed so that it can be called from Temml, not MathJax.\n *  2. \\Re and \\Im are not used, to avoid conflict with existing LaTeX letters.\n *\n *  This revision of the file is released under the MIT license.\n *  https://mit-license.org/\n */\ndefineMacro(\"\\\\quantity\", \"{\\\\left\\\\{ #1 \\\\right\\\\}}\");\ndefineMacro(\"\\\\qty\", \"{\\\\left\\\\{ #1 \\\\right\\\\}}\");\ndefineMacro(\"\\\\pqty\", \"{\\\\left( #1 \\\\right)}\");\ndefineMacro(\"\\\\bqty\", \"{\\\\left[ #1 \\\\right]}\");\ndefineMacro(\"\\\\vqty\", \"{\\\\left\\\\vert #1 \\\\right\\\\vert}\");\ndefineMacro(\"\\\\Bqty\", \"{\\\\left\\\\{ #1 \\\\right\\\\}}\");\ndefineMacro(\"\\\\absolutevalue\", \"{\\\\left\\\\vert #1 \\\\right\\\\vert}\");\ndefineMacro(\"\\\\abs\", \"{\\\\left\\\\vert #1 \\\\right\\\\vert}\");\ndefineMacro(\"\\\\norm\", \"{\\\\left\\\\Vert #1 \\\\right\\\\Vert}\");\ndefineMacro(\"\\\\evaluated\", \"{\\\\left.#1 \\\\right\\\\vert}\");\ndefineMacro(\"\\\\eval\", \"{\\\\left.#1 \\\\right\\\\vert}\");\ndefineMacro(\"\\\\order\", \"{\\\\mathcal{O} \\\\left( #1 \\\\right)}\");\ndefineMacro(\"\\\\commutator\", \"{\\\\left[ #1 , #2 \\\\right]}\");\ndefineMacro(\"\\\\comm\", \"{\\\\left[ #1 , #2 \\\\right]}\");\ndefineMacro(\"\\\\anticommutator\", \"{\\\\left\\\\{ #1 , #2 \\\\right\\\\}}\");\ndefineMacro(\"\\\\acomm\", \"{\\\\left\\\\{ #1 , #2 \\\\right\\\\}}\");\ndefineMacro(\"\\\\poissonbracket\", \"{\\\\left\\\\{ #1 , #2 \\\\right\\\\}}\");\ndefineMacro(\"\\\\pb\", \"{\\\\left\\\\{ #1 , #2 \\\\right\\\\}}\");\ndefineMacro(\"\\\\vectorbold\", \"{\\\\boldsymbol{ #1 }}\");\ndefineMacro(\"\\\\vb\", \"{\\\\boldsymbol{ #1 }}\");\ndefineMacro(\"\\\\vectorarrow\", \"{\\\\vec{\\\\boldsymbol{ #1 }}}\");\ndefineMacro(\"\\\\va\", \"{\\\\vec{\\\\boldsymbol{ #1 }}}\");\ndefineMacro(\"\\\\vectorunit\", \"{{\\\\boldsymbol{\\\\hat{ #1 }}}}\");\ndefineMacro(\"\\\\vu\", \"{{\\\\boldsymbol{\\\\hat{ #1 }}}}\");\ndefineMacro(\"\\\\dotproduct\", \"\\\\mathbin{\\\\boldsymbol\\\\cdot}\");\ndefineMacro(\"\\\\vdot\", \"{\\\\boldsymbol\\\\cdot}\");\ndefineMacro(\"\\\\crossproduct\", \"\\\\mathbin{\\\\boldsymbol\\\\times}\");\ndefineMacro(\"\\\\cross\", \"\\\\mathbin{\\\\boldsymbol\\\\times}\");\ndefineMacro(\"\\\\cp\", \"\\\\mathbin{\\\\boldsymbol\\\\times}\");\ndefineMacro(\"\\\\gradient\", \"{\\\\boldsymbol\\\\nabla}\");\ndefineMacro(\"\\\\grad\", \"{\\\\boldsymbol\\\\nabla}\");\ndefineMacro(\"\\\\divergence\", \"{\\\\grad\\\\vdot}\");\n//defineMacro(\"\\\\div\", \"{\\\\grad\\\\vdot}\"); Not included in Temml. Conflicts w/LaTeX \\div\ndefineMacro(\"\\\\curl\", \"{\\\\grad\\\\cross}\");\ndefineMacro(\"\\\\laplacian\", \"\\\\nabla^2\");\ndefineMacro(\"\\\\tr\", \"{\\\\operatorname{tr}}\");\ndefineMacro(\"\\\\Tr\", \"{\\\\operatorname{Tr}}\");\ndefineMacro(\"\\\\rank\", \"{\\\\operatorname{rank}}\");\ndefineMacro(\"\\\\erf\", \"{\\\\operatorname{erf}}\");\ndefineMacro(\"\\\\Res\", \"{\\\\operatorname{Res}}\");\ndefineMacro(\"\\\\principalvalue\", \"{\\\\mathcal{P}}\");\ndefineMacro(\"\\\\pv\", \"{\\\\mathcal{P}}\");\ndefineMacro(\"\\\\PV\", \"{\\\\operatorname{P.V.}}\");\n// Temml does not use the next two lines. They conflict with LaTeX letters.\n//defineMacro(\"\\\\Re\", \"{\\\\operatorname{Re} \\\\left\\\\{ #1 \\\\right\\\\}}\");\n//defineMacro(\"\\\\Im\", \"{\\\\operatorname{Im} \\\\left\\\\{ #1 \\\\right\\\\}}\");\ndefineMacro(\"\\\\qqtext\", \"{\\\\quad\\\\text{ #1 }\\\\quad}\");\ndefineMacro(\"\\\\qq\", \"{\\\\quad\\\\text{ #1 }\\\\quad}\");\ndefineMacro(\"\\\\qcomma\", \"{\\\\text{,}\\\\quad}\");\ndefineMacro(\"\\\\qc\", \"{\\\\text{,}\\\\quad}\");\ndefineMacro(\"\\\\qcc\", \"{\\\\quad\\\\text{c.c.}\\\\quad}\");\ndefineMacro(\"\\\\qif\", \"{\\\\quad\\\\text{if}\\\\quad}\");\ndefineMacro(\"\\\\qthen\", \"{\\\\quad\\\\text{then}\\\\quad}\");\ndefineMacro(\"\\\\qelse\", \"{\\\\quad\\\\text{else}\\\\quad}\");\ndefineMacro(\"\\\\qotherwise\", \"{\\\\quad\\\\text{otherwise}\\\\quad}\");\ndefineMacro(\"\\\\qunless\", \"{\\\\quad\\\\text{unless}\\\\quad}\");\ndefineMacro(\"\\\\qgiven\", \"{\\\\quad\\\\text{given}\\\\quad}\");\ndefineMacro(\"\\\\qusing\", \"{\\\\quad\\\\text{using}\\\\quad}\");\ndefineMacro(\"\\\\qassume\", \"{\\\\quad\\\\text{assume}\\\\quad}\");\ndefineMacro(\"\\\\qsince\", \"{\\\\quad\\\\text{since}\\\\quad}\");\ndefineMacro(\"\\\\qlet\", \"{\\\\quad\\\\text{let}\\\\quad}\");\ndefineMacro(\"\\\\qfor\", \"{\\\\quad\\\\text{for}\\\\quad}\");\ndefineMacro(\"\\\\qall\", \"{\\\\quad\\\\text{all}\\\\quad}\");\ndefineMacro(\"\\\\qeven\", \"{\\\\quad\\\\text{even}\\\\quad}\");\ndefineMacro(\"\\\\qodd\", \"{\\\\quad\\\\text{odd}\\\\quad}\");\ndefineMacro(\"\\\\qinteger\", \"{\\\\quad\\\\text{integer}\\\\quad}\");\ndefineMacro(\"\\\\qand\", \"{\\\\quad\\\\text{and}\\\\quad}\");\ndefineMacro(\"\\\\qor\", \"{\\\\quad\\\\text{or}\\\\quad}\");\ndefineMacro(\"\\\\qas\", \"{\\\\quad\\\\text{as}\\\\quad}\");\ndefineMacro(\"\\\\qin\", \"{\\\\quad\\\\text{in}\\\\quad}\");\ndefineMacro(\"\\\\differential\", \"{\\\\text{d}}\");\ndefineMacro(\"\\\\dd\", \"{\\\\text{d}}\");\ndefineMacro(\"\\\\derivative\", \"{\\\\frac{\\\\text{d}{ #1 }}{\\\\text{d}{ #2 }}}\");\ndefineMacro(\"\\\\dv\", \"{\\\\frac{\\\\text{d}{ #1 }}{\\\\text{d}{ #2 }}}\");\ndefineMacro(\"\\\\partialderivative\", \"{\\\\frac{\\\\partial{ #1 }}{\\\\partial{ #2 }}}\");\ndefineMacro(\"\\\\variation\", \"{\\\\delta}\");\ndefineMacro(\"\\\\var\", \"{\\\\delta}\");\ndefineMacro(\"\\\\functionalderivative\", \"{\\\\frac{\\\\delta{ #1 }}{\\\\delta{ #2 }}}\");\ndefineMacro(\"\\\\fdv\", \"{\\\\frac{\\\\delta{ #1 }}{\\\\delta{ #2 }}}\");\ndefineMacro(\"\\\\innerproduct\", \"{\\\\left\\\\langle {#1} \\\\mid { #2} \\\\right\\\\rangle}\");\ndefineMacro(\"\\\\outerproduct\",\n  \"{\\\\left\\\\vert { #1 } \\\\right\\\\rangle\\\\left\\\\langle { #2} \\\\right\\\\vert}\");\ndefineMacro(\"\\\\dyad\",\n  \"{\\\\left\\\\vert { #1 } \\\\right\\\\rangle\\\\left\\\\langle { #2} \\\\right\\\\vert}\");\ndefineMacro(\"\\\\ketbra\",\n  \"{\\\\left\\\\vert { #1 } \\\\right\\\\rangle\\\\left\\\\langle { #2} \\\\right\\\\vert}\");\ndefineMacro(\"\\\\op\",\n  \"{\\\\left\\\\vert { #1 } \\\\right\\\\rangle\\\\left\\\\langle { #2} \\\\right\\\\vert}\");\ndefineMacro(\"\\\\expectationvalue\", \"{\\\\left\\\\langle {#1 } \\\\right\\\\rangle}\");\ndefineMacro(\"\\\\expval\", \"{\\\\left\\\\langle {#1 } \\\\right\\\\rangle}\");\ndefineMacro(\"\\\\ev\", \"{\\\\left\\\\langle {#1 } \\\\right\\\\rangle}\");\ndefineMacro(\"\\\\matrixelement\",\n  \"{\\\\left\\\\langle{ #1 }\\\\right\\\\vert{ #2 }\\\\left\\\\vert{#3}\\\\right\\\\rangle}\");\ndefineMacro(\"\\\\matrixel\",\n  \"{\\\\left\\\\langle{ #1 }\\\\right\\\\vert{ #2 }\\\\left\\\\vert{#3}\\\\right\\\\rangle}\");\ndefineMacro(\"\\\\mel\",\n  \"{\\\\left\\\\langle{ #1 }\\\\right\\\\vert{ #2 }\\\\left\\\\vert{#3}\\\\right\\\\rangle}\");\n\n// Helper functions\nfunction getHLines(parser) {\n  // Return an array. The array length = number of hlines.\n  // Each element in the array tells if the line is dashed.\n  const hlineInfo = [];\n  parser.consumeSpaces();\n  let nxt = parser.fetch().text;\n  if (nxt === \"\\\\relax\") {\n    parser.consume();\n    parser.consumeSpaces();\n    nxt = parser.fetch().text;\n  }\n  while (nxt === \"\\\\hline\" || nxt === \"\\\\hdashline\") {\n    parser.consume();\n    hlineInfo.push(nxt === \"\\\\hdashline\");\n    parser.consumeSpaces();\n    nxt = parser.fetch().text;\n  }\n  return hlineInfo;\n}\n\nconst validateAmsEnvironmentContext = context => {\n  const settings = context.parser.settings;\n  if (!settings.displayMode) {\n    throw new ParseError(`{${context.envName}} can be used only in display mode.`);\n  }\n};\n\nconst sizeRegEx$1 = /([-+]?) *(\\d+(?:\\.\\d*)?|\\.\\d+) *([a-z]{2})/;\nconst arrayGaps = macros => {\n  let arraystretch = macros.get(\"\\\\arraystretch\");\n  if (typeof arraystretch !== \"string\") {\n    arraystretch = stringFromArg(arraystretch.tokens);\n  }\n  arraystretch = isNaN(arraystretch) ? null : Number(arraystretch);\n  let arraycolsepStr = macros.get(\"\\\\arraycolsep\");\n  if (typeof arraycolsepStr !== \"string\") {\n    arraycolsepStr = stringFromArg(arraycolsepStr.tokens);\n  }\n  const match = sizeRegEx$1.exec(arraycolsepStr);\n  const arraycolsep = match\n    ? { number: +(match[1] + match[2]), unit: match[3] }\n    : null;\n  return [arraystretch, arraycolsep]\n};\n\nconst checkCellForLabels = cell => {\n  // Check if the author wrote a \\tag{} inside this cell.\n  let rowLabel = \"\";\n  for (let i = 0; i < cell.length; i++) {\n    if (cell[i].type === \"label\") {\n      if (rowLabel) { throw new ParseError((\"Multiple \\\\labels in one row\")) }\n      rowLabel = cell[i].string;\n    }\n  }\n  return rowLabel\n};\n\n// autoTag (an argument to parseArray) can be one of three values:\n// * undefined: Regular (not-top-level) array; no tags on each row\n// * true: Automatic equation numbering, overridable by \\tag\n// * false: Tags allowed on each row, but no automatic numbering\n// This function *doesn't* work with the \"split\" environment name.\nfunction getAutoTag(name) {\n  if (name.indexOf(\"ed\") === -1) {\n    return name.indexOf(\"*\") === -1;\n  }\n  // return undefined;\n}\n\n/**\n * Parse the body of the environment, with rows delimited by \\\\ and\n * columns delimited by &, and create a nested list in row-major order\n * with one group per cell.  If given an optional argument scriptLevel\n * (\"text\", \"display\", etc.), then each cell is cast into that scriptLevel.\n */\nfunction parseArray(\n  parser,\n  {\n    cols, // [{ type: string , align: l|c|r|null }]\n    envClasses, // align(ed|at|edat) | array | cases | cd | small | multline\n    autoTag,        // boolean\n    singleRow,      // boolean\n    emptySingleRow, // boolean\n    maxNumCols,     // number\n    leqno,          // boolean\n    arraystretch,   // number  | null\n    arraycolsep     // size value | null\n},\n  scriptLevel\n) {\n  const endToken = envClasses && envClasses.includes(\"bordermatrix\") ? \"}\" : \"\\\\end\";\n  parser.gullet.beginGroup();\n  if (!singleRow) {\n    // \\cr is equivalent to \\\\ without the optional size argument (see below)\n    // TODO: provide helpful error when \\cr is used outside array environment\n    parser.gullet.macros.set(\"\\\\cr\", \"\\\\\\\\\\\\relax\");\n  }\n\n  // Start group for first cell\n  parser.gullet.beginGroup();\n\n  let row = [];\n  const body = [row];\n  const rowGaps = [];\n  const labels = [];\n\n  const hLinesBeforeRow = [];\n\n  const tags = (autoTag != null ? [] : undefined);\n\n  // amsmath uses \\global\\@eqnswtrue and \\global\\@eqnswfalse to represent\n  // whether this row should have an equation number.  Simulate this with\n  // a \\@eqnsw macro set to 1 or 0.\n  function beginRow() {\n    if (autoTag) {\n      parser.gullet.macros.set(\"\\\\@eqnsw\", \"1\", true);\n    }\n  }\n  function endRow() {\n    if (tags) {\n      if (parser.gullet.macros.get(\"\\\\df@tag\")) {\n        tags.push(parser.subparse([new Token(\"\\\\df@tag\")]));\n        parser.gullet.macros.set(\"\\\\df@tag\", undefined, true);\n      } else {\n        tags.push(Boolean(autoTag) &&\n            parser.gullet.macros.get(\"\\\\@eqnsw\") === \"1\");\n      }\n    }\n  }\n  beginRow();\n\n  // Test for \\hline at the top of the array.\n  hLinesBeforeRow.push(getHLines(parser));\n\n  while (true) {\n    // Parse each cell in its own group (namespace)\n    let cell = parser.parseExpression(false, singleRow ? \"\\\\end\" : \"\\\\\\\\\");\n    parser.gullet.endGroup();\n    parser.gullet.beginGroup();\n\n    cell = {\n      type: \"ordgroup\",\n      mode: parser.mode,\n      body: cell,\n      semisimple: true\n    };\n    row.push(cell);\n    const next = parser.fetch().text;\n    if (next === \"&\") {\n      if (maxNumCols && row.length === maxNumCols) {\n        if (envClasses.includes(\"array\")) {\n          if (parser.settings.strict) {\n            throw new ParseError(\"Too few columns \" + \"specified in the {array} column argument.\",\n              parser.nextToken)\n          }\n        } else if (maxNumCols === 2) {\n          throw new ParseError(\"The split environment accepts no more than two columns\",\n            parser.nextToken);\n        } else {\n          throw new ParseError(\"The equation environment accepts only one column\",\n            parser.nextToken)\n        }\n      }\n      parser.consume();\n    } else if (next === endToken) {\n      endRow();\n      // Arrays terminate newlines with `\\crcr` which consumes a `\\cr` if\n      // the last line is empty.  However, AMS environments keep the\n      // empty row if it's the only one.\n      // NOTE: Currently, `cell` is the last item added into `row`.\n      if (row.length === 1 && cell.body.length === 0 && (body.length > 1 || !emptySingleRow)) {\n        body.pop();\n      }\n      labels.push(checkCellForLabels(cell.body));\n      if (hLinesBeforeRow.length < body.length + 1) {\n        hLinesBeforeRow.push([]);\n      }\n      break;\n    } else if (next === \"\\\\\\\\\") {\n      parser.consume();\n      let size;\n      // \\def\\Let@{\\let\\\\\\math@cr}\n      // \\def\\math@cr{...\\math@cr@}\n      // \\def\\math@cr@{\\new@ifnextchar[\\math@cr@@{\\math@cr@@[\\z@]}}\n      // \\def\\math@cr@@[#1]{...\\math@cr@@@...}\n      // \\def\\math@cr@@@{\\cr}\n      if (parser.gullet.future().text !== \" \") {\n        size = parser.parseSizeGroup(true);\n      }\n      rowGaps.push(size ? size.value : null);\n      endRow();\n\n      labels.push(checkCellForLabels(cell.body));\n\n      // check for \\hline(s) following the row separator\n      hLinesBeforeRow.push(getHLines(parser));\n\n      row = [];\n      body.push(row);\n      beginRow();\n    } else {\n      throw new ParseError(\"Expected & or \\\\\\\\ or \\\\cr or \" + endToken, parser.nextToken);\n    }\n  }\n\n  // End cell group\n  parser.gullet.endGroup();\n  // End array group defining \\cr\n  parser.gullet.endGroup();\n\n  return {\n    type: \"array\",\n    mode: parser.mode,\n    body,\n    cols,\n    rowGaps,\n    hLinesBeforeRow,\n    envClasses,\n    autoTag,\n    scriptLevel,\n    tags,\n    labels,\n    leqno,\n    arraystretch,\n    arraycolsep\n  };\n}\n\n// Decides on a scriptLevel for cells in an array according to whether the given\n// environment name starts with the letter 'd'.\nfunction dCellStyle(envName) {\n  return envName.slice(0, 1) === \"d\" ? \"display\" : \"text\"\n}\n\nconst alignMap = {\n  c: \"center \",\n  l: \"left \",\n  r: \"right \"\n};\n\nconst glue = group => {\n  const glueNode = new mathMLTree.MathNode(\"mtd\", []);\n  glueNode.style = { padding: \"0\", width: \"50%\" };\n  if (group.envClasses.includes(\"multline\")) {\n    glueNode.style.width = \"7.5%\";\n  }\n  return glueNode\n};\n\nconst mathmlBuilder$9 = function(group, style) {\n  const tbl = [];\n  const numRows = group.body.length;\n  const hlines = group.hLinesBeforeRow;\n\n  for (let i = 0; i < numRows; i++) {\n    const rw = group.body[i];\n    const row = [];\n    const cellLevel = group.scriptLevel === \"text\"\n      ? StyleLevel.TEXT\n      : group.scriptLevel === \"script\"\n      ? StyleLevel.SCRIPT\n      : StyleLevel.DISPLAY;\n\n    for (let j = 0; j < rw.length; j++) {\n      const mtd = new mathMLTree.MathNode(\n        \"mtd\",\n        [buildGroup$1(rw[j], style.withLevel(cellLevel))]\n      );\n\n      if (group.envClasses.includes(\"multline\")) {\n        const align = i === 0 ? \"left\" : i === numRows - 1 ? \"right\" : \"center\";\n        mtd.setAttribute(\"columnalign\", align);\n        if (align !== \"center\") {\n          mtd.classes.push(\"tml-\" + align);\n        }\n      }\n      row.push(mtd);\n    }\n    const numColumns = group.body[0].length;\n    // Fill out a short row with empty <mtd> elements.\n    for (let k = 0; k < numColumns - rw.length; k++) {\n      row.push(new mathMLTree.MathNode(\"mtd\", [], [], style));\n    }\n    if (group.autoTag) {\n      const tag = group.tags[i];\n      let tagElement;\n      if (tag === true) {  // automatic numbering\n        tagElement = new mathMLTree.MathNode(\"mtext\", [new Span([\"tml-eqn\"])]);\n      } else if (tag === false) {\n        // \\nonumber/\\notag or starred environment\n        tagElement = new mathMLTree.MathNode(\"mtext\", [], []);\n      } else {  // manual \\tag\n        tagElement = buildExpressionRow(tag[0].body, style.withLevel(cellLevel), true);\n        tagElement = consolidateText(tagElement);\n        tagElement.classes = [\"tml-tag\"];\n      }\n      if (tagElement) {\n        row.unshift(glue(group));\n        row.push(glue(group));\n        if (group.leqno) {\n          row[0].children.push(tagElement);\n          row[0].classes.push(\"tml-left\");\n        } else {\n          row[row.length - 1].children.push(tagElement);\n          row[row.length - 1].classes.push(\"tml-right\");\n        }\n      }\n    }\n    const mtr = new mathMLTree.MathNode(\"mtr\", row, []);\n    const label = group.labels.shift();\n    if (label && group.tags && group.tags[i]) {\n      mtr.setAttribute(\"id\", label);\n      if (Array.isArray(group.tags[i])) { mtr.classes.push(\"tml-tageqn\"); }\n    }\n\n    // Write horizontal rules\n    if (i === 0 && hlines[0].length > 0) {\n      if (hlines[0].length === 2) {\n        mtr.children.forEach(cell => { cell.style.borderTop = \"0.15em double\"; });\n      } else {\n        mtr.children.forEach(cell => {\n          cell.style.borderTop = hlines[0][0] ? \"0.06em dashed\" : \"0.06em solid\";\n        });\n      }\n    }\n    if (hlines[i + 1].length > 0) {\n      if (hlines[i + 1].length === 2) {\n        mtr.children.forEach(cell => { cell.style.borderBottom = \"0.15em double\"; });\n      } else {\n        mtr.children.forEach(cell => {\n          cell.style.borderBottom = hlines[i + 1][0] ? \"0.06em dashed\" : \"0.06em solid\";\n        });\n      }\n    }\n\n    // Check for \\hphantom \\from \\bordermatrix\n    let mustSquashRow = true;\n    for (let j = 0; j < mtr.children.length; j++) {\n      const child = mtr.children[j].children[0];\n      if (!(child && child.type === \"mpadded\" && child.attributes.height === \"0px\")) {\n        mustSquashRow = false;\n        break\n      }\n    }\n    if (mustSquashRow) {\n      // All the cell contents are \\hphantom. Squash the padding.\n      for (let j = 0; j < mtr.children.length; j++) {\n        mtr.children[j].style.paddingTop = \"0\";\n        mtr.children[j].style.paddingBottom = \"0\";\n      }\n    }\n\n    tbl.push(mtr);\n  }\n\n  if (group.arraystretch && group.arraystretch !== 1) {\n    // In LaTeX, \\arraystretch is a factor applied to a 12pt strut height.\n    // It defines a baseline to baseline distance.\n    // Here, we do an approximation of that approach.\n    const pad = String(1.4 * group.arraystretch - 0.8) + \"ex\";\n    for (let i = 0; i < tbl.length; i++) {\n      for (let j = 0; j < tbl[i].children.length; j++) {\n        tbl[i].children[j].style.paddingTop = pad;\n        tbl[i].children[j].style.paddingBottom = pad;\n      }\n    }\n  }\n\n  let sidePadding;\n  let sidePadUnit;\n  if (group.envClasses.length > 0) {\n    sidePadding = group.envClasses.includes(\"abut\")\n      ? \"0\"\n      : group.envClasses.includes(\"cases\")\n      ? \"0\"\n      : group.envClasses.includes(\"small\")\n      ? \"0.1389\"\n      : group.envClasses.includes(\"cd\")\n      ? \"0.25\"\n      : \"0.4\"; // default side padding\n    sidePadUnit = \"em\";\n  }\n  if (group.arraycolsep) {\n    const arraySidePad = calculateSize(group.arraycolsep, style);\n    sidePadding = arraySidePad.number.toFixed(4);\n    sidePadUnit = arraySidePad.unit;\n  }\n  if (sidePadding) {\n    const numCols = tbl.length === 0 ? 0 : tbl[0].children.length;\n\n    const sidePad = (j, hand) => {\n      if (j === 0 && hand === 0) { return \"0\" }\n      if (j === numCols - 1 && hand === 1) { return \"0\" }\n      if (group.envClasses[0] !== \"align\") { return sidePadding }\n      if (hand === 1) { return \"0\" }\n      if (group.autoTag) {\n        return (j % 2) ? \"1\" : \"0\"\n      } else {\n        return (j % 2) ? \"0\" : \"1\"\n      }\n    };\n\n    // Side padding\n    for (let i = 0; i < tbl.length; i++) {\n      for (let j = 0; j < tbl[i].children.length; j++) {\n        tbl[i].children[j].style.paddingLeft = `${sidePad(j, 0)}${sidePadUnit}`;\n        tbl[i].children[j].style.paddingRight = `${sidePad(j, 1)}${sidePadUnit}`;\n      }\n    }\n  }\n  if (group.envClasses.length === 0) {\n    // Set zero padding on side of the matrix\n    for (let i = 0; i < tbl.length; i++) {\n      tbl[i].children[0].style.paddingLeft = \"0em\";\n      if (tbl[i].children.length === tbl[0].children.length) {\n        tbl[i].children[tbl[i].children.length - 1].style.paddingRight = \"0em\";\n      }\n    }\n  }\n\n  if (group.envClasses.length > 0) {\n    // Justification\n    const align = group.envClasses.includes(\"align\") || group.envClasses.includes(\"alignat\");\n    for (let i = 0; i < tbl.length; i++) {\n      const row = tbl[i];\n      if (align) {\n        for (let j = 0; j < row.children.length; j++) {\n          // Chromium does not recognize text-align: left. Use -webkit-\n          // TODO: Remove -webkit- when Chromium no longer needs it.\n          row.children[j].classes = [\"tml-\" + (j % 2 ? \"left\" : \"right\")];\n        }\n        if (group.autoTag) {\n          const k = group.leqno ? 0 : row.children.length - 1;\n          row.children[k].classes = [\"tml-\" + (group.leqno ? \"left\" : \"right\")];\n        }\n      }\n      if (row.children.length > 1 && group.envClasses.includes(\"cases\")) {\n        row.children[1].style.paddingLeft = \"1em\";\n      }\n\n      if (group.envClasses.includes(\"cases\") || group.envClasses.includes(\"subarray\")) {\n        for (const cell of row.children) {\n          cell.classes.push(\"tml-left\");\n        }\n      }\n    }\n  }\n\n  let table = new mathMLTree.MathNode(\"mtable\", tbl);\n  if (group.envClasses.length > 0) {\n    // Top & bottom padding\n    if (group.envClasses.includes(\"jot\")) {\n      table.classes.push(\"tml-jot\");\n    } else if (group.envClasses.includes(\"small\")) {\n      table.classes.push(\"tml-small\");\n    }\n  }\n  if (group.scriptLevel === \"display\") { table.setAttribute(\"displaystyle\", \"true\"); }\n\n  if (group.autoTag || group.envClasses.includes(\"multline\")) {\n    table.style.width = \"100%\";\n  }\n\n  // Column separator lines and column alignment\n  let align = \"\";\n\n  if (group.cols && group.cols.length > 0) {\n    const cols = group.cols;\n    let prevTypeWasAlign = false;\n    let iStart = 0;\n    let iEnd = cols.length;\n\n    while (cols[iStart].type === \"separator\") {\n      iStart += 1;\n    }\n    while (cols[iEnd - 1].type === \"separator\") {\n      iEnd -= 1;\n    }\n\n    if (cols[0].type === \"separator\") {\n      const sep = cols[1].type === \"separator\"\n        ? \"0.15em double\"\n        : cols[0].separator === \"|\"\n        ? \"0.06em solid \"\n        : \"0.06em dashed \";\n      for (const row of table.children) {\n        row.children[0].style.borderLeft = sep;\n      }\n    }\n    let iCol = group.autoTag ? 0 : -1;\n    for (let i = iStart; i < iEnd; i++) {\n      if (cols[i].type === \"align\") {\n        const colAlign = alignMap[cols[i].align];\n        align += colAlign;\n        iCol += 1;\n        for (const row of table.children) {\n          if (colAlign.trim() !== \"center\" && iCol < row.children.length) {\n            row.children[iCol].classes = [\"tml-\" + colAlign.trim()];\n          }\n        }\n        prevTypeWasAlign = true;\n      } else if (cols[i].type === \"separator\") {\n        // MathML accepts only single lines between cells.\n        // So we read only the first of consecutive separators.\n        if (prevTypeWasAlign) {\n          const sep = cols[i + 1].type === \"separator\"\n            ? \"0.15em double\"\n            : cols[i].separator === \"|\"\n            ? \"0.06em solid\"\n            : \"0.06em dashed\";\n          for (const row of table.children) {\n            if (iCol < row.children.length) {\n              row.children[iCol].style.borderRight = sep;\n            }\n          }\n        }\n        prevTypeWasAlign = false;\n      }\n    }\n    if (cols[cols.length - 1].type === \"separator\") {\n      const sep = cols[cols.length - 2].type === \"separator\"\n        ? \"0.15em double\"\n        : cols[cols.length - 1].separator === \"|\"\n        ? \"0.06em solid\"\n        : \"0.06em dashed\";\n      for (const row of table.children) {\n        row.children[row.children.length - 1].style.borderRight = sep;\n        row.children[row.children.length - 1].style.paddingRight = \"0.4em\";\n      }\n    }\n  }\n  if (group.autoTag) {\n     // allow for glue cells on each side\n    align = \"left \" + (align.length > 0 ? align : \"center \") + \"right \";\n  }\n  if (align) {\n    // Firefox reads this attribute, not the -webkit-left|right written above.\n    // TODO: When Chrome no longer needs \"-webkit-\", use CSS and delete the next line.\n    table.setAttribute(\"columnalign\", align.trim());\n  }\n\n  if (group.envClasses.includes(\"small\")) {\n    // A small array. Wrap in scriptstyle.\n    table = new mathMLTree.MathNode(\"mstyle\", [table]);\n    table.setAttribute(\"scriptlevel\", \"1\");\n  }\n\n  return table\n};\n\n// Convenience function for align, align*, aligned, alignat, alignat*, alignedat, split.\nconst alignedHandler = function(context, args) {\n  if (context.envName.indexOf(\"ed\") === -1) {\n    validateAmsEnvironmentContext(context);\n  }\n  const isSplit = context.envName === \"split\";\n  const cols = [];\n  const res = parseArray(\n    context.parser,\n    {\n      cols,\n      emptySingleRow: true,\n      autoTag: isSplit ? undefined : getAutoTag(context.envName),\n      envClasses: [\"abut\", \"jot\"], // set row spacing & provisional column spacing\n      maxNumCols: context.envName === \"split\" ? 2 : undefined,\n      leqno: context.parser.settings.leqno\n    },\n    \"display\"\n  );\n\n  // Determining number of columns.\n  // 1. If the first argument is given, we use it as a number of columns,\n  //    and makes sure that each row doesn't exceed that number.\n  // 2. Otherwise, just count number of columns = maximum number\n  //    of cells in each row (\"aligned\" mode -- isAligned will be true).\n  //\n  // At the same time, prepend empty group {} at beginning of every second\n  // cell in each row (starting with second cell) so that operators become\n  // binary.  This behavior is implemented in amsmath's \\start@aligned.\n  let numMaths;\n  let numCols = 0;\n  const isAlignedAt = context.envName.indexOf(\"at\") > -1;\n  if (args[0] && isAlignedAt) {\n    // alignat environment takes an argument w/ number of columns\n    let arg0 = \"\";\n    for (let i = 0; i < args[0].body.length; i++) {\n      const textord = assertNodeType(args[0].body[i], \"textord\");\n      arg0 += textord.text;\n    }\n    if (isNaN(arg0)) {\n      throw new ParseError(\"The alignat enviroment requires a numeric first argument.\")\n    }\n    numMaths = Number(arg0);\n    numCols = numMaths * 2;\n  }\n  res.body.forEach(function(row) {\n    if (isAlignedAt) {\n      // Case 1\n      const curMaths = row.length / 2;\n      if (numMaths < curMaths) {\n        throw new ParseError(\n          \"Too many math in a row: \" + `expected ${numMaths}, but got ${curMaths}`,\n          row[0]\n        );\n      }\n    } else if (numCols < row.length) {\n      // Case 2\n      numCols = row.length;\n    }\n  });\n\n  // Adjusting alignment.\n  // In aligned mode, we add one \\qquad between columns;\n  // otherwise we add nothing.\n  for (let i = 0; i < numCols; ++i) {\n    let align = \"r\";\n    if (i % 2 === 1) {\n      align = \"l\";\n    }\n    cols[i] = {\n      type: \"align\",\n      align: align\n    };\n  }\n  if (context.envName === \"split\") ; else if (isAlignedAt) {\n    res.envClasses.push(\"alignat\"); // Sets justification\n  } else {\n    res.envClasses[0] = \"align\"; // Sets column spacing & justification\n  }\n  return res;\n};\n\n// Arrays are part of LaTeX, defined in lttab.dtx so its documentation\n// is part of the source2e.pdf file of LaTeX2e source documentation.\n// {darray} is an {array} environment where cells are set in \\displaystyle,\n// as defined in nccmath.sty.\ndefineEnvironment({\n  type: \"array\",\n  names: [\"array\", \"darray\"],\n  props: {\n    numArgs: 1\n  },\n  handler(context, args) {\n    // Since no types are specified above, the two possibilities are\n    // - The argument is wrapped in {} or [], in which case Parser's\n    //   parseGroup() returns an \"ordgroup\" wrapping some symbol node.\n    // - The argument is a bare symbol node.\n    const symNode = checkSymbolNodeType(args[0]);\n    const colalign = symNode ? [args[0]] : assertNodeType(args[0], \"ordgroup\").body;\n    const cols = colalign.map(function(nde) {\n      const node = assertSymbolNodeType(nde);\n      const ca = node.text;\n      if (\"lcr\".indexOf(ca) !== -1) {\n        return {\n          type: \"align\",\n          align: ca\n        };\n      } else if (ca === \"|\") {\n        return {\n          type: \"separator\",\n          separator: \"|\"\n        };\n      } else if (ca === \":\") {\n        return {\n          type: \"separator\",\n          separator: \":\"\n        };\n      }\n      throw new ParseError(\"Unknown column alignment: \" + ca, nde);\n    });\n    const [arraystretch, arraycolsep] = arrayGaps(context.parser.gullet.macros);\n    const res = {\n      cols,\n      envClasses: [\"array\"],\n      maxNumCols: cols.length,\n      arraystretch,\n      arraycolsep\n    };\n    return parseArray(context.parser, res, dCellStyle(context.envName));\n  },\n  mathmlBuilder: mathmlBuilder$9\n});\n\n// The matrix environments of amsmath build on the array environment\n// of LaTeX, which is discussed above.\n// The mathtools package adds starred versions of the same environments.\n// These have an optional argument to choose left|center|right justification.\ndefineEnvironment({\n  type: \"array\",\n  names: [\n    \"matrix\",\n    \"pmatrix\",\n    \"bmatrix\",\n    \"Bmatrix\",\n    \"vmatrix\",\n    \"Vmatrix\",\n    \"matrix*\",\n    \"pmatrix*\",\n    \"bmatrix*\",\n    \"Bmatrix*\",\n    \"vmatrix*\",\n    \"Vmatrix*\"\n  ],\n  props: {\n    numArgs: 0\n  },\n  handler(context) {\n    const delimiters = {\n      matrix: null,\n      pmatrix: [\"(\", \")\"],\n      bmatrix: [\"[\", \"]\"],\n      Bmatrix: [\"\\\\{\", \"\\\\}\"],\n      vmatrix: [\"|\", \"|\"],\n      Vmatrix: [\"\\\\Vert\", \"\\\\Vert\"]\n    }[context.envName.replace(\"*\", \"\")];\n    // \\hskip -\\arraycolsep in amsmath\n    let colAlign = \"c\";\n    const payload = {\n      envClasses: [],\n      cols: []\n    };\n    if (context.envName.charAt(context.envName.length - 1) === \"*\") {\n      // It's one of the mathtools starred functions.\n      // Parse the optional alignment argument.\n      const parser = context.parser;\n      parser.consumeSpaces();\n      if (parser.fetch().text === \"[\") {\n        parser.consume();\n        parser.consumeSpaces();\n        colAlign = parser.fetch().text;\n        if (\"lcr\".indexOf(colAlign) === -1) {\n          throw new ParseError(\"Expected l or c or r\", parser.nextToken);\n        }\n        parser.consume();\n        parser.consumeSpaces();\n        parser.expect(\"]\");\n        parser.consume();\n        payload.cols = [];\n      }\n    }\n    const res = parseArray(context.parser, payload, \"text\");\n    res.cols = res.body.length > 0\n      ? new Array(res.body[0].length).fill({ type: \"align\", align: colAlign })\n      : [];\n    const [arraystretch, arraycolsep] = arrayGaps(context.parser.gullet.macros);\n    res.arraystretch = arraystretch;\n    if (arraycolsep && !(arraycolsep === 6 && arraycolsep === \"pt\")) {\n      res.arraycolsep = arraycolsep;\n    }\n    return delimiters\n      ? {\n        type: \"leftright\",\n        mode: context.mode,\n        body: [res],\n        left: delimiters[0],\n        right: delimiters[1],\n        rightColor: undefined // \\right uninfluenced by \\color in array\n      }\n      : res;\n  },\n  mathmlBuilder: mathmlBuilder$9\n});\n\ndefineEnvironment({\n  type: \"array\",\n  names: [\"bordermatrix\"],\n  props: {\n    numArgs: 0\n  },\n  handler(context) {\n    const payload = { cols: [], envClasses: [\"bordermatrix\"] };\n    const res = parseArray(context.parser, payload, \"text\");\n    res.cols = res.body.length > 0\n      ? new Array(res.body[0].length).fill({ type: \"align\", align: \"c\" })\n      : [];\n    res.envClasses = [];\n    res.arraystretch = 1;\n    if (context.envName === \"matrix\") { return res}\n    return bordermatrixParseTree(res, context.delimiters)\n  },\n  mathmlBuilder: mathmlBuilder$9\n});\n\ndefineEnvironment({\n  type: \"array\",\n  names: [\"smallmatrix\"],\n  props: {\n    numArgs: 0\n  },\n  handler(context) {\n    const payload = { type: \"small\" };\n    const res = parseArray(context.parser, payload, \"script\");\n    res.envClasses = [\"small\"];\n    return res;\n  },\n  mathmlBuilder: mathmlBuilder$9\n});\n\ndefineEnvironment({\n  type: \"array\",\n  names: [\"subarray\"],\n  props: {\n    numArgs: 1\n  },\n  handler(context, args) {\n    // Parsing of {subarray} is similar to {array}\n    const symNode = checkSymbolNodeType(args[0]);\n    const colalign = symNode ? [args[0]] : assertNodeType(args[0], \"ordgroup\").body;\n    const cols = colalign.map(function(nde) {\n      const node = assertSymbolNodeType(nde);\n      const ca = node.text;\n      // {subarray} only recognizes \"l\" & \"c\"\n      if (\"lc\".indexOf(ca) !== -1) {\n        return {\n          type: \"align\",\n          align: ca\n        };\n      }\n      throw new ParseError(\"Unknown column alignment: \" + ca, nde);\n    });\n    if (cols.length > 1) {\n      throw new ParseError(\"{subarray} can contain only one column\");\n    }\n    let res = {\n      cols,\n      envClasses: [\"small\"]\n    };\n    res = parseArray(context.parser, res, \"script\");\n    if (res.body.length > 0 && res.body[0].length > 1) {\n      throw new ParseError(\"{subarray} can contain only one column\");\n    }\n    return res;\n  },\n  mathmlBuilder: mathmlBuilder$9\n});\n\n// A cases environment (in amsmath.sty) is almost equivalent to\n// \\def\n// \\left\\{\\begin{array}{@{}l@{\\quad}l@{}} \u2026 \\end{array}\\right.\n// {dcases} is a {cases} environment where cells are set in \\displaystyle,\n// as defined in mathtools.sty.\n// {rcases} is another mathtools environment. It's brace is on the right side.\ndefineEnvironment({\n  type: \"array\",\n  names: [\"cases\", \"dcases\", \"rcases\", \"drcases\"],\n  props: {\n    numArgs: 0\n  },\n  handler(context) {\n    const payload = {\n      cols: [],\n      envClasses: [\"cases\"]\n    };\n    const res = parseArray(context.parser, payload, dCellStyle(context.envName));\n    return {\n      type: \"leftright\",\n      mode: context.mode,\n      body: [res],\n      left: context.envName.indexOf(\"r\") > -1 ? \".\" : \"\\\\{\",\n      right: context.envName.indexOf(\"r\") > -1 ? \"\\\\}\" : \".\",\n      rightColor: undefined\n    };\n  },\n  mathmlBuilder: mathmlBuilder$9\n});\n\n// In the align environment, one uses ampersands, &, to specify number of\n// columns in each row, and to locate spacing between each column.\n// align gets automatic numbering. align* and aligned do not.\n// The alignedat environment can be used in math mode.\ndefineEnvironment({\n  type: \"array\",\n  names: [\"align\", \"align*\", \"aligned\", \"split\"],\n  props: {\n    numArgs: 0\n  },\n  handler: alignedHandler,\n  mathmlBuilder: mathmlBuilder$9\n});\n\n// alignat environment is like an align environment, but one must explicitly\n// specify maximum number of columns in each row, and can adjust where spacing occurs.\ndefineEnvironment({\n  type: \"array\",\n  names: [\"alignat\", \"alignat*\", \"alignedat\"],\n  props: {\n    numArgs: 1\n  },\n  handler: alignedHandler,\n  mathmlBuilder: mathmlBuilder$9\n});\n\n// A gathered environment is like an array environment with one centered\n// column, but where rows are considered lines so get \\jot line spacing\n// and contents are set in \\displaystyle.\ndefineEnvironment({\n  type: \"array\",\n  names: [\"gathered\", \"gather\", \"gather*\"],\n  props: {\n    numArgs: 0\n  },\n  handler(context) {\n    if (context.envName !== \"gathered\") {\n      validateAmsEnvironmentContext(context);\n    }\n    const res = {\n      cols: [],\n      envClasses: [\"abut\", \"jot\"],\n      autoTag: getAutoTag(context.envName),\n      emptySingleRow: true,\n      leqno: context.parser.settings.leqno\n    };\n    return parseArray(context.parser, res, \"display\");\n  },\n  mathmlBuilder: mathmlBuilder$9\n});\n\ndefineEnvironment({\n  type: \"array\",\n  names: [\"equation\", \"equation*\"],\n  props: {\n    numArgs: 0\n  },\n  handler(context) {\n    validateAmsEnvironmentContext(context);\n    const res = {\n      autoTag: getAutoTag(context.envName),\n      emptySingleRow: true,\n      singleRow: true,\n      maxNumCols: 1,\n      envClasses: [\"align\"],\n      leqno: context.parser.settings.leqno\n    };\n    return parseArray(context.parser, res, \"display\");\n  },\n  mathmlBuilder: mathmlBuilder$9\n});\n\ndefineEnvironment({\n  type: \"array\",\n  names: [\"multline\", \"multline*\"],\n  props: {\n    numArgs: 0\n  },\n  handler(context) {\n    validateAmsEnvironmentContext(context);\n    const res = {\n      autoTag: context.envName === \"multline\",\n      maxNumCols: 1,\n      envClasses: [\"jot\", \"multline\"],\n      leqno: context.parser.settings.leqno\n    };\n    return parseArray(context.parser, res, \"display\");\n  },\n  mathmlBuilder: mathmlBuilder$9\n});\n\ndefineEnvironment({\n  type: \"array\",\n  names: [\"CD\"],\n  props: {\n    numArgs: 0\n  },\n  handler(context) {\n    validateAmsEnvironmentContext(context);\n    return parseCD(context.parser);\n  },\n  mathmlBuilder: mathmlBuilder$9\n});\n\n// Catch \\hline outside array environment\ndefineFunction({\n  type: \"text\", // Doesn't matter what this is.\n  names: [\"\\\\hline\", \"\\\\hdashline\"],\n  props: {\n    numArgs: 0,\n    allowedInText: true,\n    allowedInMath: true\n  },\n  handler(context, args) {\n    throw new ParseError(`${context.funcName} valid only within array environment`);\n  }\n});\n\nconst environments = _environments;\n\n// \\bordermatrix  from TeXbook pp 177 & 361\n// Optional argument from Herbert Vo\u00DF, Math mode, p 20\n// Ref: https://tug.ctan.org/obsolete/info/math/voss/mathmode/Mathmode.pdf\n\ndefineFunction({\n  type: \"bordermatrix\",\n  names: [\"\\\\bordermatrix\", \"\\\\matrix\"],\n  props: {\n    numArgs: 0,\n    numOptionalArgs: 1\n  },\n  handler: ({ parser, funcName }, args, optArgs) => {\n    // Find out if the author has defined custom delimiters\n    let delimiters = [\"(\", \")\"];\n    if (funcName === \"\\\\bordermatrix\" && optArgs[0] && optArgs[0].body) {\n      const body = optArgs[0].body;\n      if (body.length === 2 && body[0].type === \"atom\" && body[1].type === \"atom\") {\n        if (body[0].family === \"open\" && body[1].family === \"close\") {\n          delimiters = [body[0].text, body[1].text];\n        }\n      }\n    }\n    // consume the opening brace\n    parser.consumeSpaces();\n    parser.consume();\n\n    // Pass control to the environment handler in array.js.\n    const env = environments[\"bordermatrix\"];\n    const context = {\n      mode: parser.mode,\n      envName: funcName.slice(1),\n      delimiters,\n      parser\n    };\n    const result = env.handler(context);\n    parser.expect(\"}\", true);\n    return result\n  }\n});\n\n// \\@char is an internal function that takes a grouped decimal argument like\n// {123} and converts into symbol with code 123.  It is used by the *macro*\n// \\char defined in macros.js.\ndefineFunction({\n  type: \"textord\",\n  names: [\"\\\\@char\"],\n  props: {\n    numArgs: 1,\n    allowedInText: true\n  },\n  handler({ parser, token }, args) {\n    const arg = assertNodeType(args[0], \"ordgroup\");\n    const group = arg.body;\n    let number = \"\";\n    for (let i = 0; i < group.length; i++) {\n      const node = assertNodeType(group[i], \"textord\");\n      number += node.text;\n    }\n    const code = parseInt(number);\n    if (isNaN(code)) {\n      throw new ParseError(`\\\\@char has non-numeric argument ${number}`, token)\n    }\n    return {\n      type: \"textord\",\n      mode: parser.mode,\n      text: String.fromCodePoint(code)\n    }\n  }\n});\n\n// Helpers\nconst htmlRegEx = /^(#[a-f0-9]{3}|#?[a-f0-9]{6})$/i;\nconst htmlOrNameRegEx = /^(#[a-f0-9]{3}|#?[a-f0-9]{6}|[a-z]+)$/i;\nconst RGBregEx = /^ *\\d{1,3} *(?:, *\\d{1,3} *){2}$/;\nconst rgbRegEx = /^ *[10](?:\\.\\d*)? *(?:, *[10](?:\\.\\d*)? *){2}$/;\nconst xcolorHtmlRegEx = /^[a-f0-9]{6}$/i;\nconst toHex = num => {\n  let str = num.toString(16);\n  if (str.length === 1) { str = \"0\" + str; }\n  return str\n};\n\n// Colors from Tables 4.1 and 4.2 of the xcolor package.\n// Table 4.1 (lower case) RGB values are taken from chroma and xcolor.dtx.\n// Table 4.2 (Capitalizzed) values were sampled, because Chroma contains a unreliable\n// conversion from cmyk to RGB. See https://tex.stackexchange.com/a/537274.\nconst xcolors = JSON.parse(`{\n  \"Apricot\": \"#ffb484\",\n  \"Aquamarine\": \"#08b4bc\",\n  \"Bittersweet\": \"#c84c14\",\n  \"blue\": \"#0000FF\",\n  \"Blue\": \"#303494\",\n  \"BlueGreen\": \"#08b4bc\",\n  \"BlueViolet\": \"#503c94\",\n  \"BrickRed\": \"#b8341c\",\n  \"brown\": \"#BF8040\",\n  \"Brown\": \"#802404\",\n  \"BurntOrange\": \"#f8941c\",\n  \"CadetBlue\": \"#78749c\",\n  \"CarnationPink\": \"#f884b4\",\n  \"Cerulean\": \"#08a4e4\",\n  \"CornflowerBlue\": \"#40ace4\",\n  \"cyan\": \"#00FFFF\",\n  \"Cyan\": \"#08acec\",\n  \"Dandelion\": \"#ffbc44\",\n  \"darkgray\": \"#404040\",\n  \"DarkOrchid\": \"#a8548c\",\n  \"Emerald\": \"#08ac9c\",\n  \"ForestGreen\": \"#089c54\",\n  \"Fuchsia\": \"#90348c\",\n  \"Goldenrod\": \"#ffdc44\",\n  \"gray\": \"#808080\",\n  \"Gray\": \"#98949c\",\n  \"green\": \"#00FF00\",\n  \"Green\": \"#08a44c\",\n  \"GreenYellow\": \"#e0e474\",\n  \"JungleGreen\": \"#08ac9c\",\n  \"Lavender\": \"#f89cc4\",\n  \"lightgray\": \"#c0c0c0\",\n  \"lime\": \"#BFFF00\",\n  \"LimeGreen\": \"#90c43c\",\n  \"magenta\": \"#FF00FF\",\n  \"Magenta\": \"#f0048c\",\n  \"Mahogany\": \"#b0341c\",\n  \"Maroon\": \"#b03434\",\n  \"Melon\": \"#f89c7c\",\n  \"MidnightBlue\": \"#086494\",\n  \"Mulberry\": \"#b03c94\",\n  \"NavyBlue\": \"#086cbc\",\n  \"olive\": \"#7F7F00\",\n  \"OliveGreen\": \"#407c34\",\n  \"orange\": \"#FF8000\",\n  \"Orange\": \"#f8843c\",\n  \"OrangeRed\": \"#f0145c\",\n  \"Orchid\": \"#b074ac\",\n  \"Peach\": \"#f8945c\",\n  \"Periwinkle\": \"#8074bc\",\n  \"PineGreen\": \"#088c74\",\n  \"pink\": \"#ff7f7f\",\n  \"Plum\": \"#98248c\",\n  \"ProcessBlue\": \"#08b4ec\",\n  \"purple\": \"#BF0040\",\n  \"Purple\": \"#a0449c\",\n  \"RawSienna\": \"#983c04\",\n  \"red\": \"#ff0000\",\n  \"Red\": \"#f01c24\",\n  \"RedOrange\": \"#f86434\",\n  \"RedViolet\": \"#a0246c\",\n  \"Rhodamine\": \"#f0549c\",\n  \"Royallue\": \"#0874bc\",\n  \"RoyalPurple\": \"#683c9c\",\n  \"RubineRed\": \"#f0047c\",\n  \"Salmon\": \"#f8948c\",\n  \"SeaGreen\": \"#30bc9c\",\n  \"Sepia\": \"#701404\",\n  \"SkyBlue\": \"#48c4dc\",\n  \"SpringGreen\": \"#c8dc64\",\n  \"Tan\": \"#e09c74\",\n  \"teal\": \"#007F7F\",\n  \"TealBlue\": \"#08acb4\",\n  \"Thistle\": \"#d884b4\",\n  \"Turquoise\": \"#08b4cc\",\n  \"violet\": \"#800080\",\n  \"Violet\": \"#60449c\",\n  \"VioletRed\": \"#f054a4\",\n  \"WildStrawberry\": \"#f0246c\",\n  \"yellow\": \"#FFFF00\",\n  \"Yellow\": \"#fff404\",\n  \"YellowGreen\": \"#98cc6c\",\n  \"YellowOrange\": \"#ffa41c\"\n}`);\n\nconst colorFromSpec = (model, spec) => {\n  let color = \"\";\n  if (model === \"HTML\") {\n    if (!htmlRegEx.test(spec)) {\n      throw new ParseError(\"Invalid HTML input.\")\n    }\n    color = spec;\n  } else if (model === \"RGB\") {\n    if (!RGBregEx.test(spec)) {\n      throw new ParseError(\"Invalid RGB input.\")\n    }\n    spec.split(\",\").map(e => { color += toHex(Number(e.trim())); });\n  } else {\n    if (!rgbRegEx.test(spec)) {\n      throw new ParseError(\"Invalid rbg input.\")\n    }\n    spec.split(\",\").map(e => {\n      const num = Number(e.trim());\n      if (num > 1) { throw new ParseError(\"Color rgb input must be < 1.\") }\n      color += toHex(Number((num * 255).toFixed(0)));\n    });\n  }\n  if (color.charAt(0) !== \"#\") { color = \"#\" + color; }\n  return color\n};\n\nconst validateColor = (color, macros, token) => {\n  const macroName = `\\\\\\\\color@${color}`; // from \\defineColor.\n  const match = htmlOrNameRegEx.exec(color);\n  if (!match) { throw new ParseError(\"Invalid color: '\" + color + \"'\", token) }\n  // We allow a 6-digit HTML color spec without a leading \"#\".\n  // This follows the xcolor package's HTML color model.\n  // Predefined color names are all missed by this RegEx pattern.\n  if (xcolorHtmlRegEx.test(color)) {\n    return \"#\" + color\n  } else if (color.charAt(0) === \"#\") {\n    return color\n  } else if (macros.has(macroName)) {\n    color = macros.get(macroName).tokens[0].text;\n  } else if (xcolors[color]) {\n    color = xcolors[color];\n  }\n  return color\n};\n\nconst mathmlBuilder$8 = (group, style) => {\n  // In LaTeX, color is not supposed to change the spacing of any node.\n  // So instead of wrapping the group in an <mstyle>, we apply\n  // the color individually to each node and return a document fragment.\n  let expr = buildExpression(group.body, style.withColor(group.color));\n  if (expr.length === 0) {\n    expr.push(new mathMLTree.MathNode(\"mrow\"));\n  }\n  expr = expr.map(e => {\n    e.style.color = group.color;\n    return e\n  });\n  return mathMLTree.newDocumentFragment(expr)\n};\n\ndefineFunction({\n  type: \"color\",\n  names: [\"\\\\textcolor\"],\n  props: {\n    numArgs: 2,\n    numOptionalArgs: 1,\n    allowedInText: true,\n    argTypes: [\"raw\", \"raw\", \"original\"]\n  },\n  handler({ parser, token }, args, optArgs) {\n    const model = optArgs[0] && assertNodeType(optArgs[0], \"raw\").string;\n    let color = \"\";\n    if (model) {\n      const spec = assertNodeType(args[0], \"raw\").string;\n      color = colorFromSpec(model, spec);\n    } else {\n      color = validateColor(assertNodeType(args[0], \"raw\").string, parser.gullet.macros, token);\n    }\n    const body = args[1];\n    return {\n      type: \"color\",\n      mode: parser.mode,\n      color,\n      isTextColor: true,\n      body: ordargument(body)\n    }\n  },\n  mathmlBuilder: mathmlBuilder$8\n});\n\ndefineFunction({\n  type: \"color\",\n  names: [\"\\\\color\"],\n  props: {\n    numArgs: 1,\n    numOptionalArgs: 1,\n    allowedInText: true,\n    argTypes: [\"raw\", \"raw\"]\n  },\n  handler({ parser, breakOnTokenText, token }, args, optArgs) {\n    const model = optArgs[0] && assertNodeType(optArgs[0], \"raw\").string;\n    let color = \"\";\n    if (model) {\n      const spec = assertNodeType(args[0], \"raw\").string;\n      color = colorFromSpec(model, spec);\n    } else {\n      color = validateColor(assertNodeType(args[0], \"raw\").string, parser.gullet.macros, token);\n    }\n\n    // Parse out the implicit body that should be colored.\n    const body = parser.parseExpression(true, breakOnTokenText, true);\n\n    return {\n      type: \"color\",\n      mode: parser.mode,\n      color,\n      isTextColor: false,\n      body\n    }\n  },\n  mathmlBuilder: mathmlBuilder$8\n});\n\ndefineFunction({\n  type: \"color\",\n  names: [\"\\\\definecolor\"],\n  props: {\n    numArgs: 3,\n    allowedInText: true,\n    argTypes: [\"raw\", \"raw\", \"raw\"]\n  },\n  handler({ parser, funcName, token }, args) {\n    const name = assertNodeType(args[0], \"raw\").string;\n    if (!/^[A-Za-z]+$/.test(name)) {\n      throw new ParseError(\"Color name must be latin letters.\", token)\n    }\n    const model = assertNodeType(args[1], \"raw\").string;\n    if (![\"HTML\", \"RGB\", \"rgb\"].includes(model)) {\n      throw new ParseError(\"Color model must be HTML, RGB, or rgb.\", token)\n    }\n    const spec = assertNodeType(args[2], \"raw\").string;\n    const color = colorFromSpec(model, spec);\n    parser.gullet.macros.set(`\\\\\\\\color@${name}`, { tokens: [{ text: color }], numArgs: 0 });\n    return { type: \"internal\", mode: parser.mode }\n  }\n  // No mathmlBuilder. The point of \\definecolor is to set a macro.\n});\n\n// Row breaks within tabular environments, and line breaks at top level\n\n\n// \\DeclareRobustCommand\\\\{...\\@xnewline}\ndefineFunction({\n  type: \"cr\",\n  names: [\"\\\\\\\\\"],\n  props: {\n    numArgs: 0,\n    numOptionalArgs: 0,\n    allowedInText: true\n  },\n\n  handler({ parser }, args, optArgs) {\n    const size = parser.gullet.future().text === \"[\" ? parser.parseSizeGroup(true) : null;\n    const newLine = !parser.settings.displayMode;\n    return {\n      type: \"cr\",\n      mode: parser.mode,\n      newLine,\n      size: size && assertNodeType(size, \"size\").value\n    }\n  },\n\n  // The following builder is called only at the top level,\n  // not within tabular/array environments.\n\n  mathmlBuilder(group, style) {\n    // MathML 3.0 calls for newline to occur in an <mo> or an <mspace>.\n    // Ref: https://www.w3.org/TR/MathML3/chapter3.html#presm.linebreaking\n    const node = new mathMLTree.MathNode(\"mo\");\n    if (group.newLine) {\n      node.setAttribute(\"linebreak\", \"newline\");\n      if (group.size) {\n        const size = calculateSize(group.size, style);\n        node.setAttribute(\"height\", size.number + size.unit);\n      }\n    }\n    return node\n  }\n});\n\nconst globalMap = {\n  \"\\\\global\": \"\\\\global\",\n  \"\\\\long\": \"\\\\\\\\globallong\",\n  \"\\\\\\\\globallong\": \"\\\\\\\\globallong\",\n  \"\\\\def\": \"\\\\gdef\",\n  \"\\\\gdef\": \"\\\\gdef\",\n  \"\\\\edef\": \"\\\\xdef\",\n  \"\\\\xdef\": \"\\\\xdef\",\n  \"\\\\let\": \"\\\\\\\\globallet\",\n  \"\\\\futurelet\": \"\\\\\\\\globalfuture\"\n};\n\nconst checkControlSequence = (tok) => {\n  const name = tok.text;\n  if (/^(?:[\\\\{}$&#^_]|EOF)$/.test(name)) {\n    throw new ParseError(\"Expected a control sequence\", tok);\n  }\n  return name;\n};\n\nconst getRHS = (parser) => {\n  let tok = parser.gullet.popToken();\n  if (tok.text === \"=\") {\n    // consume optional equals\n    tok = parser.gullet.popToken();\n    if (tok.text === \" \") {\n      // consume one optional space\n      tok = parser.gullet.popToken();\n    }\n  }\n  return tok;\n};\n\nconst letCommand = (parser, name, tok, global) => {\n  let macro = parser.gullet.macros.get(tok.text);\n  if (macro == null) {\n    // don't expand it later even if a macro with the same name is defined\n    // e.g., \\let\\foo=\\frac \\def\\frac{\\relax} \\frac12\n    tok.noexpand = true;\n    macro = {\n      tokens: [tok],\n      numArgs: 0,\n      // reproduce the same behavior in expansion\n      unexpandable: !parser.gullet.isExpandable(tok.text)\n    };\n  }\n  parser.gullet.macros.set(name, macro, global);\n};\n\n// <assignment> -> <non-macro assignment>|<macro assignment>\n// <non-macro assignment> -> <simple assignment>|\\global<non-macro assignment>\n// <macro assignment> -> <definition>|<prefix><macro assignment>\n// <prefix> -> \\global|\\long|\\outer\ndefineFunction({\n  type: \"internal\",\n  names: [\n    \"\\\\global\",\n    \"\\\\long\",\n    \"\\\\\\\\globallong\" // can\u2019t be entered directly\n  ],\n  props: {\n    numArgs: 0,\n    allowedInText: true\n  },\n  handler({ parser, funcName }) {\n    parser.consumeSpaces();\n    const token = parser.fetch();\n    if (globalMap[token.text]) {\n      // Temml doesn't have \\par, so ignore \\long\n      if (funcName === \"\\\\global\" || funcName === \"\\\\\\\\globallong\") {\n        token.text = globalMap[token.text];\n      }\n      return assertNodeType(parser.parseFunction(), \"internal\");\n    }\n    throw new ParseError(`Invalid token after macro prefix`, token);\n  }\n});\n\n// Basic support for macro definitions: \\def, \\gdef, \\edef, \\xdef\n// <definition> -> <def><control sequence><definition text>\n// <def> -> \\def|\\gdef|\\edef|\\xdef\n// <definition text> -> <parameter text><left brace><balanced text><right brace>\ndefineFunction({\n  type: \"internal\",\n  names: [\"\\\\def\", \"\\\\gdef\", \"\\\\edef\", \"\\\\xdef\"],\n  props: {\n    numArgs: 0,\n    allowedInText: true,\n    primitive: true\n  },\n  handler({ parser, funcName }) {\n    let tok = parser.gullet.popToken();\n    const name = tok.text;\n    if (/^(?:[\\\\{}$&#^_]|EOF)$/.test(name)) {\n      throw new ParseError(\"Expected a control sequence\", tok);\n    }\n\n    let numArgs = 0;\n    let insert;\n    const delimiters = [[]];\n    // <parameter text> contains no braces\n    while (parser.gullet.future().text !== \"{\") {\n      tok = parser.gullet.popToken();\n      if (tok.text === \"#\") {\n        // If the very last character of the <parameter text> is #, so that\n        // this # is immediately followed by {, TeX will behave as if the {\n        // had been inserted at the right end of both the parameter text\n        // and the replacement text.\n        if (parser.gullet.future().text === \"{\") {\n          insert = parser.gullet.future();\n          delimiters[numArgs].push(\"{\");\n          break;\n        }\n\n        // A parameter, the first appearance of # must be followed by 1,\n        // the next by 2, and so on; up to nine #\u2019s are allowed\n        tok = parser.gullet.popToken();\n        if (!/^[1-9]$/.test(tok.text)) {\n          throw new ParseError(`Invalid argument number \"${tok.text}\"`);\n        }\n        if (parseInt(tok.text) !== numArgs + 1) {\n          throw new ParseError(`Argument number \"${tok.text}\" out of order`);\n        }\n        numArgs++;\n        delimiters.push([]);\n      } else if (tok.text === \"EOF\") {\n        throw new ParseError(\"Expected a macro definition\");\n      } else {\n        delimiters[numArgs].push(tok.text);\n      }\n    }\n    // replacement text, enclosed in '{' and '}' and properly nested\n    let { tokens } = parser.gullet.consumeArg();\n    if (insert) {\n      tokens.unshift(insert);\n    }\n\n    if (funcName === \"\\\\edef\" || funcName === \"\\\\xdef\") {\n      tokens = parser.gullet.expandTokens(tokens);\n      if (tokens.length > parser.gullet.settings.maxExpand) {\n        throw new ParseError(\"Too many expansions in an \" + funcName);\n      }\n      tokens.reverse(); // to fit in with stack order\n    }\n    // Final arg is the expansion of the macro\n    parser.gullet.macros.set(\n      name,\n      { tokens, numArgs, delimiters },\n      funcName === globalMap[funcName]\n    );\n    return { type: \"internal\", mode: parser.mode };\n  }\n});\n\n// <simple assignment> -> <let assignment>\n// <let assignment> -> \\futurelet<control sequence><token><token>\n//     | \\let<control sequence><equals><one optional space><token>\n// <equals> -> <optional spaces>|<optional spaces>=\ndefineFunction({\n  type: \"internal\",\n  names: [\n    \"\\\\let\",\n    \"\\\\\\\\globallet\" // can\u2019t be entered directly\n  ],\n  props: {\n    numArgs: 0,\n    allowedInText: true,\n    primitive: true\n  },\n  handler({ parser, funcName }) {\n    const name = checkControlSequence(parser.gullet.popToken());\n    parser.gullet.consumeSpaces();\n    const tok = getRHS(parser);\n    letCommand(parser, name, tok, funcName === \"\\\\\\\\globallet\");\n    return { type: \"internal\", mode: parser.mode };\n  }\n});\n\n// ref: https://www.tug.org/TUGboat/tb09-3/tb22bechtolsheim.pdf\ndefineFunction({\n  type: \"internal\",\n  names: [\n    \"\\\\futurelet\",\n    \"\\\\\\\\globalfuture\" // can\u2019t be entered directly\n  ],\n  props: {\n    numArgs: 0,\n    allowedInText: true,\n    primitive: true\n  },\n  handler({ parser, funcName }) {\n    const name = checkControlSequence(parser.gullet.popToken());\n    const middle = parser.gullet.popToken();\n    const tok = parser.gullet.popToken();\n    letCommand(parser, name, tok, funcName === \"\\\\\\\\globalfuture\");\n    parser.gullet.pushToken(tok);\n    parser.gullet.pushToken(middle);\n    return { type: \"internal\", mode: parser.mode };\n  }\n});\n\ndefineFunction({\n  type: \"internal\",\n  names: [\"\\\\newcommand\", \"\\\\renewcommand\", \"\\\\providecommand\"],\n  props: {\n    numArgs: 0,\n    allowedInText: true,\n    primitive: true\n  },\n  handler({ parser, funcName }) {\n    let name = \"\";\n    const tok = parser.gullet.popToken();\n    if (tok.text === \"{\") {\n      name = checkControlSequence(parser.gullet.popToken());\n      parser.gullet.popToken();\n    } else {\n      name = checkControlSequence(tok);\n    }\n\n    const exists = parser.gullet.isDefined(name);\n    if (exists && funcName === \"\\\\newcommand\") {\n      throw new ParseError(\n        `\\\\newcommand{${name}} attempting to redefine ${name}; use \\\\renewcommand`\n      );\n    }\n    if (!exists && funcName === \"\\\\renewcommand\") {\n      throw new ParseError(\n        `\\\\renewcommand{${name}} when command ${name} does not yet exist; use \\\\newcommand`\n      );\n    }\n\n    let numArgs = 0;\n    if (parser.gullet.future().text === \"[\") {\n      let tok = parser.gullet.popToken();\n      tok = parser.gullet.popToken();\n      if (!/^[0-9]$/.test(tok.text)) {\n        throw new ParseError(`Invalid number of arguments: \"${tok.text}\"`);\n      }\n      numArgs = parseInt(tok.text);\n      tok = parser.gullet.popToken();\n      if (tok.text !== \"]\") {\n        throw new ParseError(`Invalid argument \"${tok.text}\"`);\n      }\n    }\n\n    // replacement text, enclosed in '{' and '}' and properly nested\n    const { tokens } = parser.gullet.consumeArg();\n\n    if (!(funcName === \"\\\\providecommand\" && parser.gullet.macros.has(name))) {\n      // Ignore \\providecommand\n      parser.gullet.macros.set(\n        name,\n        { tokens, numArgs }\n      );\n    }\n\n    return { type: \"internal\", mode: parser.mode };\n\n  }\n});\n\n// Extra data needed for the delimiter handler down below\nconst delimiterSizes = {\n  \"\\\\bigl\": { mclass: \"mopen\", size: 1 },\n  \"\\\\Bigl\": { mclass: \"mopen\", size: 2 },\n  \"\\\\biggl\": { mclass: \"mopen\", size: 3 },\n  \"\\\\Biggl\": { mclass: \"mopen\", size: 4 },\n  \"\\\\bigr\": { mclass: \"mclose\", size: 1 },\n  \"\\\\Bigr\": { mclass: \"mclose\", size: 2 },\n  \"\\\\biggr\": { mclass: \"mclose\", size: 3 },\n  \"\\\\Biggr\": { mclass: \"mclose\", size: 4 },\n  \"\\\\bigm\": { mclass: \"mrel\", size: 1 },\n  \"\\\\Bigm\": { mclass: \"mrel\", size: 2 },\n  \"\\\\biggm\": { mclass: \"mrel\", size: 3 },\n  \"\\\\Biggm\": { mclass: \"mrel\", size: 4 },\n  \"\\\\big\": { mclass: \"mord\", size: 1 },\n  \"\\\\Big\": { mclass: \"mord\", size: 2 },\n  \"\\\\bigg\": { mclass: \"mord\", size: 3 },\n  \"\\\\Bigg\": { mclass: \"mord\", size: 4 }\n};\n\nconst delimiters = [\n  \"(\",\n  \"\\\\lparen\",\n  \")\",\n  \"\\\\rparen\",\n  \"[\",\n  \"\\\\lbrack\",\n  \"]\",\n  \"\\\\rbrack\",\n  \"\\\\{\",\n  \"\\\\lbrace\",\n  \"\\\\}\",\n  \"\\\\rbrace\",\n  \"\u2987\",\n  \"\\\\llparenthesis\",\n  \"\u2988\",\n  \"\\\\rrparenthesis\",\n  \"\\\\lfloor\",\n  \"\\\\rfloor\",\n  \"\\u230a\",\n  \"\\u230b\",\n  \"\\\\lceil\",\n  \"\\\\rceil\",\n  \"\\u2308\",\n  \"\\u2309\",\n  \"<\",\n  \">\",\n  \"\\\\langle\",\n  \"\\u27e8\",\n  \"\\\\rangle\",\n  \"\\u27e9\",\n  \"\\\\lAngle\",\n  \"\\u27ea\",\n  \"\\\\rAngle\",\n  \"\\u27eb\",\n  \"\\\\llangle\",\n  \"\u2989\",\n  \"\\\\rrangle\",\n  \"\u298A\",\n  \"\\\\lt\",\n  \"\\\\gt\",\n  \"\\\\lvert\",\n  \"\\\\rvert\",\n  \"\\\\lVert\",\n  \"\\\\rVert\",\n  \"\\\\lgroup\",\n  \"\\\\rgroup\",\n  \"\\u27ee\",\n  \"\\u27ef\",\n  \"\\\\lmoustache\",\n  \"\\\\rmoustache\",\n  \"\\u23b0\",\n  \"\\u23b1\",\n  \"\\\\llbracket\",\n  \"\\\\rrbracket\",\n  \"\\u27e6\",\n  \"\\u27e6\",\n  \"\\\\lBrace\",\n  \"\\\\rBrace\",\n  \"\\u2983\",\n  \"\\u2984\",\n  \"/\",\n  \"\\\\backslash\",\n  \"|\",\n  \"\\\\vert\",\n  \"\\\\|\",\n  \"\\\\Vert\",\n  \"\\u2016\",\n  \"\\\\uparrow\",\n  \"\\\\Uparrow\",\n  \"\\\\downarrow\",\n  \"\\\\Downarrow\",\n  \"\\\\updownarrow\",\n  \"\\\\Updownarrow\",\n  \".\"\n];\n\n// Export isDelimiter for benefit of parser.\nconst dels = [\"}\", \"\\\\left\", \"\\\\middle\", \"\\\\right\"];\nconst isDelimiter = str => str.length > 0 &&\n  (delimiters.includes(str) || delimiterSizes[str] || dels.includes(str));\n\n// Metrics of the different sizes. Found by looking at TeX's output of\n// $\\bigl| // \\Bigl| \\biggl| \\Biggl| \\showlists$\n// Used to create stacked delimiters of appropriate sizes in makeSizedDelim.\nconst sizeToMaxHeight = [0, 1.2, 1.8, 2.4, 3.0];\n\n// Delimiter functions\nfunction checkDelimiter(delim, context) {\n  const symDelim = checkSymbolNodeType(delim);\n  if (symDelim && delimiters.includes(symDelim.text)) {\n    // If a character is not in the MathML operator dictionary, it will not stretch.\n    // Replace such characters w/characters that will stretch.\n    if ([\"<\", \"\\\\lt\"].includes(symDelim.text)) { symDelim.text = \"\u27E8\"; }\n    if ([\">\", \"\\\\gt\"].includes(symDelim.text)) { symDelim.text = \"\u27E9\"; }\n    return symDelim;\n  } else if (symDelim) {\n    throw new ParseError(`Invalid delimiter '${symDelim.text}' after '${context.funcName}'`, delim);\n  } else {\n    throw new ParseError(`Invalid delimiter type '${delim.type}'`, delim);\n  }\n}\n\n//                               /         \\\nconst needExplicitStretch = [\"\\u002F\", \"\\u005C\", \"\\\\backslash\", \"\\\\vert\", \"|\"];\n\ndefineFunction({\n  type: \"delimsizing\",\n  names: [\n    \"\\\\bigl\",\n    \"\\\\Bigl\",\n    \"\\\\biggl\",\n    \"\\\\Biggl\",\n    \"\\\\bigr\",\n    \"\\\\Bigr\",\n    \"\\\\biggr\",\n    \"\\\\Biggr\",\n    \"\\\\bigm\",\n    \"\\\\Bigm\",\n    \"\\\\biggm\",\n    \"\\\\Biggm\",\n    \"\\\\big\",\n    \"\\\\Big\",\n    \"\\\\bigg\",\n    \"\\\\Bigg\"\n  ],\n  props: {\n    numArgs: 1,\n    argTypes: [\"primitive\"]\n  },\n  handler: (context, args) => {\n    const delim = checkDelimiter(args[0], context);\n\n    return {\n      type: \"delimsizing\",\n      mode: context.parser.mode,\n      size: delimiterSizes[context.funcName].size,\n      mclass: delimiterSizes[context.funcName].mclass,\n      delim: delim.text\n    };\n  },\n  mathmlBuilder: (group) => {\n    const children = [];\n\n    if (group.delim === \".\") { group.delim = \"\"; }\n    children.push(makeText(group.delim, group.mode));\n\n    const node = new mathMLTree.MathNode(\"mo\", children);\n\n    if (group.mclass === \"mopen\" || group.mclass === \"mclose\") {\n      // Only some of the delimsizing functions act as fences, and they\n      // return \"mopen\" or \"mclose\" mclass.\n      node.setAttribute(\"fence\", \"true\");\n    } else {\n      // Explicitly disable fencing if it's not a fence, to override the\n      // defaults.\n      node.setAttribute(\"fence\", \"false\");\n    }\n    if (needExplicitStretch.includes(group.delim) || group.delim.indexOf(\"arrow\") > -1) {\n      // We have to explicitly set stretchy to true.\n      node.setAttribute(\"stretchy\", \"true\");\n    }\n    node.setAttribute(\"symmetric\", \"true\"); // Needed for tall arrows in Firefox.\n    node.setAttribute(\"minsize\", sizeToMaxHeight[group.size] + \"em\");\n    node.setAttribute(\"maxsize\", sizeToMaxHeight[group.size] + \"em\");\n    return node;\n  }\n});\n\nfunction assertParsed(group) {\n  if (!group.body) {\n    throw new Error(\"Bug: The leftright ParseNode wasn't fully parsed.\");\n  }\n}\n\ndefineFunction({\n  type: \"leftright-right\",\n  names: [\"\\\\right\"],\n  props: {\n    numArgs: 1,\n    argTypes: [\"primitive\"]\n  },\n  handler: (context, args) => {\n    return {\n      type: \"leftright-right\",\n      mode: context.parser.mode,\n      delim: checkDelimiter(args[0], context).text\n    };\n  }\n});\n\ndefineFunction({\n  type: \"leftright\",\n  names: [\"\\\\left\"],\n  props: {\n    numArgs: 1,\n    argTypes: [\"primitive\"]\n  },\n  handler: (context, args) => {\n    const delim = checkDelimiter(args[0], context);\n\n    const parser = context.parser;\n    // Parse out the implicit body\n    ++parser.leftrightDepth;\n    // parseExpression stops before '\\\\right' or `\\\\middle`\n    let body = parser.parseExpression(false, null, true);\n    let nextToken = parser.fetch();\n    while (nextToken.text === \"\\\\middle\") {\n      // `\\middle`, from the \u03B5-TeX package, ends one group and starts another group.\n      // We had to parse this expression with `breakOnMiddle` enabled in order\n      // to get TeX-compliant parsing of \\over.\n      // But we do not want, at this point, to end on \\middle, so continue\n      // to parse until we fetch a `\\right`.\n      parser.consume();\n      const middle = parser.fetch().text;\n      if (!symbols.math[middle]) {\n        throw new ParseError(`Invalid delimiter '${middle}' after '\\\\middle'`);\n      }\n      checkDelimiter({ type: \"atom\", mode: \"math\", text: middle }, { funcName: \"\\\\middle\" });\n      body.push({ type: \"middle\", mode: \"math\", delim: middle });\n      parser.consume();\n      body = body.concat(parser.parseExpression(false, null, true));\n      nextToken = parser.fetch();\n    }\n    --parser.leftrightDepth;\n    // Check the next token\n    parser.expect(\"\\\\right\", false);\n    const right = assertNodeType(parser.parseFunction(), \"leftright-right\");\n    return {\n      type: \"leftright\",\n      mode: parser.mode,\n      body,\n      left: delim.text,\n      right: right.delim\n    };\n  },\n  mathmlBuilder: (group, style) => {\n    assertParsed(group);\n    const inner = buildExpression(group.body, style);\n\n    if (group.left === \".\") { group.left = \"\"; }\n    const leftNode = new mathMLTree.MathNode(\"mo\", [makeText(group.left, group.mode)]);\n    leftNode.setAttribute(\"fence\", \"true\");\n    leftNode.setAttribute(\"form\", \"prefix\");\n    if (group.left === \"/\" || group.left === \"\\u005C\" || group.left.indexOf(\"arrow\") > -1) {\n      leftNode.setAttribute(\"stretchy\", \"true\");\n    }\n    inner.unshift(leftNode);\n\n    if (group.right === \".\") { group.right = \"\"; }\n    const rightNode = new mathMLTree.MathNode(\"mo\", [makeText(group.right, group.mode)]);\n    rightNode.setAttribute(\"fence\", \"true\");\n    rightNode.setAttribute(\"form\", \"postfix\");\n    if (group.right === \"\\u2216\" || group.right.indexOf(\"arrow\") > -1) {\n      rightNode.setAttribute(\"stretchy\", \"true\");\n    }\n    if (group.body.length > 0) {\n      const lastElement = group.body[group.body.length - 1];\n      if (lastElement.type === \"color\" && !lastElement.isTextColor) {\n        // \\color is a switch. If the last element is of type \"color\" then\n        // the user set the \\color switch and left it on.\n        // A \\right delimiter turns the switch off, but the delimiter itself gets the color.\n        rightNode.setAttribute(\"mathcolor\", lastElement.color);\n      }\n    }\n    inner.push(rightNode);\n\n    return makeRow(inner);\n  }\n});\n\ndefineFunction({\n  type: \"middle\",\n  names: [\"\\\\middle\"],\n  props: {\n    numArgs: 1,\n    argTypes: [\"primitive\"]\n  },\n  handler: (context, args) => {\n    const delim = checkDelimiter(args[0], context);\n    if (!context.parser.leftrightDepth) {\n      throw new ParseError(\"\\\\middle without preceding \\\\left\", delim);\n    }\n\n    return {\n      type: \"middle\",\n      mode: context.parser.mode,\n      delim: delim.text\n    };\n  },\n  mathmlBuilder: (group, style) => {\n    const textNode = makeText(group.delim, group.mode);\n    const middleNode = new mathMLTree.MathNode(\"mo\", [textNode]);\n    middleNode.setAttribute(\"fence\", \"true\");\n    if (group.delim.indexOf(\"arrow\") > -1) {\n      middleNode.setAttribute(\"stretchy\", \"true\");\n    }\n    // The next line is not semantically correct, but\n    // Chromium fails to stretch if it is not there.\n    middleNode.setAttribute(\"form\", \"prefix\");\n    // MathML gives 5/18em spacing to each <mo> element.\n    // \\middle should get delimiter spacing instead.\n    middleNode.setAttribute(\"lspace\", \"0.05em\");\n    middleNode.setAttribute(\"rspace\", \"0.05em\");\n    return middleNode;\n  }\n});\n\nconst padding = _ => {\n  const node = new mathMLTree.MathNode(\"mspace\");\n  node.setAttribute(\"width\", \"3pt\");\n  return node\n};\n\nconst mathmlBuilder$7 = (group, style) => {\n  let node;\n  if (group.label.indexOf(\"colorbox\") > -1 || group.label === \"\\\\boxed\") {\n    // MathML core does not support +width attribute in <mpadded>.\n    // Firefox does not reliably add side padding.\n    // Insert <mspace>\n    node = new mathMLTree.MathNode(\"mrow\", [\n      padding(),\n      buildGroup$1(group.body, style),\n      padding()\n    ]);\n  } else {\n    node = new mathMLTree.MathNode(\"menclose\", [buildGroup$1(group.body, style)]);\n  }\n  switch (group.label) {\n    case \"\\\\overline\":\n      node.setAttribute(\"notation\", \"top\"); // for Firefox & WebKit\n      node.classes.push(\"tml-overline\");    // for Chromium\n      break\n    case \"\\\\underline\":\n      node.setAttribute(\"notation\", \"bottom\");\n      node.classes.push(\"tml-underline\");\n      break\n    case \"\\\\cancel\":\n      node.setAttribute(\"notation\", \"updiagonalstrike\");\n      node.children.push(new mathMLTree.MathNode(\"mrow\", [], [\"tml-cancel\", \"upstrike\"]));\n      break\n    case \"\\\\bcancel\":\n      node.setAttribute(\"notation\", \"downdiagonalstrike\");\n      node.children.push(new mathMLTree.MathNode(\"mrow\", [], [\"tml-cancel\", \"downstrike\"]));\n      break\n    case \"\\\\sout\":\n      node.setAttribute(\"notation\", \"horizontalstrike\");\n      node.children.push(new mathMLTree.MathNode(\"mrow\", [], [\"tml-cancel\", \"sout\"]));\n      break\n    case \"\\\\xcancel\":\n      node.setAttribute(\"notation\", \"updiagonalstrike downdiagonalstrike\");\n      node.classes.push(\"tml-xcancel\");\n      break\n    case \"\\\\longdiv\":\n      node.setAttribute(\"notation\", \"longdiv\");\n      node.classes.push(\"longdiv-top\");\n      node.children.push(new mathMLTree.MathNode(\"mrow\", [], [\"longdiv-arc\"]));\n      break\n    case \"\\\\phase\":\n      node.setAttribute(\"notation\", \"phasorangle\");\n      node.classes.push(\"phasor-bottom\");\n      node.children.push(new mathMLTree.MathNode(\"mrow\", [], [\"phasor-angle\"]));\n      break\n    case \"\\\\textcircled\":\n      node.setAttribute(\"notation\", \"circle\");\n      node.classes.push(\"circle-pad\");\n      node.children.push(new mathMLTree.MathNode(\"mrow\", [], [\"textcircle\"]));\n      break\n    case \"\\\\angl\":\n      node.setAttribute(\"notation\", \"actuarial\");\n      node.classes.push(\"actuarial\");\n      break\n    case \"\\\\boxed\":\n      // \\newcommand{\\boxed}[1]{\\fbox{\\m@th$\\displaystyle#1$}} from amsmath.sty\n      node.setAttribute(\"notation\", \"box\");\n      node.classes.push(\"tml-box\");\n      node.setAttribute(\"scriptlevel\", \"0\");\n      node.setAttribute(\"displaystyle\", \"true\");\n      break\n    case \"\\\\fbox\":\n      node.setAttribute(\"notation\", \"box\");\n      node.classes.push(\"tml-fbox\");\n      break\n    case \"\\\\fcolorbox\":\n    case \"\\\\colorbox\": {\n      // <menclose> doesn't have a good notation option for \\colorbox.\n      // So use <mpadded> instead. Set some attributes that come\n      // included with <menclose>.\n      //const fboxsep = 3; // 3 pt from LaTeX source2e\n      //node.setAttribute(\"height\", `+${2 * fboxsep}pt`)\n      //node.setAttribute(\"voffset\", `${fboxsep}pt`)\n      const style = { padding: \"3pt 0 3pt 0\" };\n\n      if (group.label === \"\\\\fcolorbox\") {\n        style.border = \"0.0667em solid \" + String(group.borderColor);\n      }\n      node.style = style;\n      break\n    }\n  }\n  if (group.backgroundColor) {\n    node.setAttribute(\"mathbackground\", group.backgroundColor);\n  }\n  return node;\n};\n\ndefineFunction({\n  type: \"enclose\",\n  names: [\"\\\\colorbox\"],\n  props: {\n    numArgs: 2,\n    numOptionalArgs: 1,\n    allowedInText: true,\n    argTypes: [\"raw\", \"raw\", \"text\"]\n  },\n  handler({ parser, funcName }, args, optArgs) {\n    const model = optArgs[0] && assertNodeType(optArgs[0], \"raw\").string;\n    let color = \"\";\n    if (model) {\n      const spec = assertNodeType(args[0], \"raw\").string;\n      color = colorFromSpec(model, spec);\n    } else {\n      color = validateColor(assertNodeType(args[0], \"raw\").string, parser.gullet.macros);\n    }\n    const body = args[1];\n    return {\n      type: \"enclose\",\n      mode: parser.mode,\n      label: funcName,\n      backgroundColor: color,\n      body\n    };\n  },\n  mathmlBuilder: mathmlBuilder$7\n});\n\ndefineFunction({\n  type: \"enclose\",\n  names: [\"\\\\fcolorbox\"],\n  props: {\n    numArgs: 3,\n    numOptionalArgs: 1,\n    allowedInText: true,\n    argTypes: [\"raw\", \"raw\", \"raw\", \"text\"]\n  },\n  handler({ parser, funcName }, args, optArgs) {\n    const model = optArgs[0] && assertNodeType(optArgs[0], \"raw\").string;\n    let borderColor = \"\";\n    let backgroundColor;\n    if (model) {\n      const borderSpec = assertNodeType(args[0], \"raw\").string;\n      const backgroundSpec = assertNodeType(args[0], \"raw\").string;\n      borderColor = colorFromSpec(model, borderSpec);\n      backgroundColor = colorFromSpec(model, backgroundSpec);\n    } else {\n      borderColor = validateColor(assertNodeType(args[0], \"raw\").string, parser.gullet.macros);\n      backgroundColor = validateColor(assertNodeType(args[1], \"raw\").string, parser.gullet.macros);\n    }\n    const body = args[2];\n    return {\n      type: \"enclose\",\n      mode: parser.mode,\n      label: funcName,\n      backgroundColor,\n      borderColor,\n      body\n    };\n  },\n  mathmlBuilder: mathmlBuilder$7\n});\n\ndefineFunction({\n  type: \"enclose\",\n  names: [\"\\\\fbox\"],\n  props: {\n    numArgs: 1,\n    argTypes: [\"hbox\"],\n    allowedInText: true\n  },\n  handler({ parser }, args) {\n    return {\n      type: \"enclose\",\n      mode: parser.mode,\n      label: \"\\\\fbox\",\n      body: args[0]\n    };\n  }\n});\n\ndefineFunction({\n  type: \"enclose\",\n  names: [\"\\\\angl\", \"\\\\cancel\", \"\\\\bcancel\", \"\\\\xcancel\", \"\\\\sout\", \"\\\\overline\",\n    \"\\\\boxed\", \"\\\\longdiv\", \"\\\\phase\"],\n  props: {\n    numArgs: 1\n  },\n  handler({ parser, funcName }, args) {\n    const body = args[0];\n    return {\n      type: \"enclose\",\n      mode: parser.mode,\n      label: funcName,\n      body\n    };\n  },\n  mathmlBuilder: mathmlBuilder$7\n});\n\ndefineFunction({\n  type: \"enclose\",\n  names: [\"\\\\underline\"],\n  props: {\n    numArgs: 1,\n    allowedInText: true\n  },\n  handler({ parser, funcName }, args) {\n    const body = args[0];\n    return {\n      type: \"enclose\",\n      mode: parser.mode,\n      label: funcName,\n      body\n    };\n  },\n  mathmlBuilder: mathmlBuilder$7\n});\n\n\ndefineFunction({\n  type: \"enclose\",\n  names: [\"\\\\textcircled\"],\n  props: {\n    numArgs: 1,\n    argTypes: [\"text\"],\n    allowedInArgument: true,\n    allowedInText: true\n  },\n  handler({ parser, funcName }, args) {\n    const body = args[0];\n    return {\n      type: \"enclose\",\n      mode: parser.mode,\n      label: funcName,\n      body\n    };\n  },\n  mathmlBuilder: mathmlBuilder$7\n});\n\n// Environment delimiters. HTML/MathML rendering is defined in the corresponding\n// defineEnvironment definitions.\ndefineFunction({\n  type: \"environment\",\n  names: [\"\\\\begin\", \"\\\\end\"],\n  props: {\n    numArgs: 1,\n    argTypes: [\"text\"]\n  },\n  handler({ parser, funcName }, args) {\n    const nameGroup = args[0];\n    if (nameGroup.type !== \"ordgroup\") {\n      throw new ParseError(\"Invalid environment name\", nameGroup);\n    }\n    let envName = \"\";\n    for (let i = 0; i < nameGroup.body.length; ++i) {\n      envName += assertNodeType(nameGroup.body[i], \"textord\").text;\n    }\n\n    if (funcName === \"\\\\begin\") {\n      // begin...end is similar to left...right\n      if (!Object.prototype.hasOwnProperty.call(environments, envName )) {\n        throw new ParseError(\"No such environment: \" + envName, nameGroup);\n      }\n      // Build the environment object. Arguments and other information will\n      // be made available to the begin and end methods using properties.\n      const env = environments[envName];\n      const { args, optArgs } = parser.parseArguments(\"\\\\begin{\" + envName + \"}\", env);\n      const context = {\n        mode: parser.mode,\n        envName,\n        parser\n      };\n      const result = env.handler(context, args, optArgs);\n      parser.expect(\"\\\\end\", false);\n      const endNameToken = parser.nextToken;\n      const end = assertNodeType(parser.parseFunction(), \"environment\");\n      if (end.name !== envName) {\n        throw new ParseError(\n          `Mismatch: \\\\begin{${envName}} matched by \\\\end{${end.name}}`,\n          endNameToken\n        );\n      }\n      return result;\n    }\n\n    return {\n      type: \"environment\",\n      mode: parser.mode,\n      name: envName,\n      nameGroup\n    };\n  }\n});\n\ndefineFunction({\n  type: \"envTag\",\n  names: [\"\\\\env@tag\"],\n  props: {\n    numArgs: 1,\n    argTypes: [\"math\"]\n  },\n  handler({ parser }, args) {\n    return {\n      type: \"envTag\",\n      mode: parser.mode,\n      body: args[0]\n    };\n  },\n  mathmlBuilder(group, style) {\n    return new mathMLTree.MathNode(\"mrow\");\n  }\n});\n\ndefineFunction({\n  type: \"noTag\",\n  names: [\"\\\\env@notag\"],\n  props: {\n    numArgs: 0\n  },\n  handler({ parser }) {\n    return {\n      type: \"noTag\",\n      mode: parser.mode\n    };\n  },\n  mathmlBuilder(group, style) {\n    return new mathMLTree.MathNode(\"mrow\");\n  }\n});\n\nconst isLongVariableName = (group, font) => {\n  if (font !== \"mathrm\" || group.body.type !== \"ordgroup\" || group.body.body.length === 1) {\n    return false\n  }\n  if (group.body.body[0].type !== \"mathord\") { return false }\n  for (let i = 1; i < group.body.body.length; i++) {\n    const parseNodeType = group.body.body[i].type;\n    if (!(parseNodeType ===  \"mathord\" ||\n    (parseNodeType ===  \"textord\" && !isNaN(group.body.body[i].text)))) {\n      return false\n    }\n  }\n  return true\n};\n\nconst mathmlBuilder$6 = (group, style) => {\n  const font = group.font;\n  const newStyle = style.withFont(font);\n  const mathGroup = buildGroup$1(group.body, newStyle);\n\n  if (mathGroup.children.length === 0) { return mathGroup } // empty group, e.g., \\mathrm{}\n  if (font === \"boldsymbol\" && [\"mo\", \"mpadded\", \"mrow\"].includes(mathGroup.type)) {\n    mathGroup.style.fontWeight = \"bold\";\n    return mathGroup\n  }\n  // Check if it is possible to consolidate elements into a single <mi> element.\n  if (isLongVariableName(group, font)) {\n    // This is a \\mathrm{\u2026} group. It gets special treatment because symbolsOrd.js\n    // wraps <mi> elements with <mpadded>s to work around a Firefox bug.\n    const mi = mathGroup.children[0].children[0].children\n      ? mathGroup.children[0].children[0]\n      : mathGroup.children[0];\n    delete mi.attributes.mathvariant;\n    for (let i = 1; i < mathGroup.children.length; i++) {\n      mi.children[0].text += mathGroup.children[i].children[0].children\n        ? mathGroup.children[i].children[0].children[0].text\n        : mathGroup.children[i].children[0].text;\n    }\n    // Wrap in a <mpadded> to prevent the same Firefox bug.\n    const mpadded = new mathMLTree.MathNode(\"mpadded\", [mi]);\n    mpadded.setAttribute(\"lspace\", \"0\");\n    return mpadded\n  }\n  let canConsolidate = mathGroup.children[0].type === \"mo\";\n  for (let i = 1; i < mathGroup.children.length; i++) {\n    if (mathGroup.children[i].type === \"mo\" && font === \"boldsymbol\") {\n      mathGroup.children[i].style.fontWeight = \"bold\";\n    }\n    if (mathGroup.children[i].type !== \"mi\") { canConsolidate = false; }\n    const localVariant = mathGroup.children[i].attributes &&\n      mathGroup.children[i].attributes.mathvariant || \"\";\n    if (localVariant !== \"normal\") { canConsolidate = false; }\n  }\n  if (!canConsolidate) { return mathGroup }\n  // Consolidate the <mi> elements.\n  const mi = mathGroup.children[0];\n  for (let i = 1; i < mathGroup.children.length; i++) {\n    mi.children.push(mathGroup.children[i].children[0]);\n  }\n  if (mi.attributes.mathvariant && mi.attributes.mathvariant === \"normal\") {\n    // Workaround for a Firefox bug that renders spurious space around\n    // a <mi mathvariant=\"normal\">\n    // Ref: https://bugs.webkit.org/show_bug.cgi?id=129097\n    // We insert a text node that contains a zero-width space and wrap in an mrow.\n    // TODO: Get rid of this <mi> workaround when the Firefox bug is fixed.\n    const bogus = new mathMLTree.MathNode(\"mtext\", new mathMLTree.TextNode(\"\\u200b\"));\n    return new mathMLTree.MathNode(\"mrow\", [bogus, mi])\n  }\n  return mi\n};\n\nconst fontAliases = {\n  \"\\\\Bbb\": \"\\\\mathbb\",\n  \"\\\\bold\": \"\\\\mathbf\",\n  \"\\\\frak\": \"\\\\mathfrak\",\n  \"\\\\bm\": \"\\\\boldsymbol\"\n};\n\ndefineFunction({\n  type: \"font\",\n  names: [\n    // styles\n    \"\\\\mathrm\",\n    \"\\\\mathit\",\n    \"\\\\mathbf\",\n    \"\\\\mathnormal\",\n    \"\\\\up@greek\",\n    \"\\\\boldsymbol\",\n\n    // families\n    \"\\\\mathbb\",\n    \"\\\\mathcal\",\n    \"\\\\mathfrak\",\n    \"\\\\mathscr\",\n    \"\\\\mathsf\",\n    \"\\\\mathsfit\",\n    \"\\\\mathtt\",\n\n    // aliases\n    \"\\\\Bbb\",\n    \"\\\\bm\",\n    \"\\\\bold\",\n    \"\\\\frak\"\n  ],\n  props: {\n    numArgs: 1,\n    allowedInArgument: true\n  },\n  handler: ({ parser, funcName }, args) => {\n    const body = normalizeArgument(args[0]);\n    let func = funcName;\n    if (func in fontAliases) {\n      func = fontAliases[func];\n    }\n    return {\n      type: \"font\",\n      mode: parser.mode,\n      font: func.slice(1),\n      body\n    };\n  },\n  mathmlBuilder: mathmlBuilder$6\n});\n\n// Old font changing functions\ndefineFunction({\n  type: \"font\",\n  names: [\"\\\\rm\", \"\\\\sf\", \"\\\\tt\", \"\\\\bf\", \"\\\\it\", \"\\\\cal\"],\n  props: {\n    numArgs: 0,\n    allowedInText: true\n  },\n  handler: ({ parser, funcName, breakOnTokenText }, args) => {\n    const { mode } = parser;\n    const body = parser.parseExpression(true, breakOnTokenText, true);\n    const fontStyle = `math${funcName.slice(1)}`;\n\n    return {\n      type: \"font\",\n      mode: mode,\n      font: fontStyle,\n      body: {\n        type: \"ordgroup\",\n        mode: parser.mode,\n        body\n      }\n    };\n  },\n  mathmlBuilder: mathmlBuilder$6\n});\n\nconst stylArray = [\"display\", \"text\", \"script\", \"scriptscript\"];\nconst scriptLevel = { auto: -1, display: 0, text: 0, script: 1, scriptscript: 2 };\n\nconst mathmlBuilder$5 = (group, style) => {\n  // Track the scriptLevel of the numerator and denominator.\n  // We may need that info for \\mathchoice or for adjusting em dimensions.\n  const childOptions = group.scriptLevel === \"auto\"\n    ? style.incrementLevel()\n    : group.scriptLevel === \"display\"\n    ? style.withLevel(StyleLevel.TEXT)\n    : group.scriptLevel === \"text\"\n    ? style.withLevel(StyleLevel.SCRIPT)\n    : style.withLevel(StyleLevel.SCRIPTSCRIPT);\n\n  // Chromium (wrongly) continues to shrink fractions beyond scriptscriptlevel.\n  // So we check for levels that Chromium shrinks too small.\n  // If necessary, set an explicit fraction depth.\n  const numer = buildGroup$1(group.numer, childOptions);\n  const denom = buildGroup$1(group.denom, childOptions);\n  if (style.level === 3) {\n    numer.style.mathDepth = \"2\";\n    numer.setAttribute(\"scriptlevel\", \"2\");\n    denom.style.mathDepth = \"2\";\n    denom.setAttribute(\"scriptlevel\", \"2\");\n  }\n\n  let node = new mathMLTree.MathNode(\"mfrac\", [numer, denom]);\n\n  if (!group.hasBarLine) {\n    node.setAttribute(\"linethickness\", \"0px\");\n  } else if (group.barSize) {\n    const ruleWidth = calculateSize(group.barSize, style);\n    node.setAttribute(\"linethickness\", ruleWidth.number + ruleWidth.unit);\n  }\n\n  if (group.leftDelim != null || group.rightDelim != null) {\n    const withDelims = [];\n\n    if (group.leftDelim != null) {\n      const leftOp = new mathMLTree.MathNode(\"mo\", [\n        new mathMLTree.TextNode(group.leftDelim.replace(\"\\\\\", \"\"))\n      ]);\n      leftOp.setAttribute(\"fence\", \"true\");\n      withDelims.push(leftOp);\n    }\n\n    withDelims.push(node);\n\n    if (group.rightDelim != null) {\n      const rightOp = new mathMLTree.MathNode(\"mo\", [\n        new mathMLTree.TextNode(group.rightDelim.replace(\"\\\\\", \"\"))\n      ]);\n      rightOp.setAttribute(\"fence\", \"true\");\n      withDelims.push(rightOp);\n    }\n\n    node = makeRow(withDelims);\n  }\n\n  if (group.scriptLevel !== \"auto\") {\n    node = new mathMLTree.MathNode(\"mstyle\", [node]);\n    node.setAttribute(\"displaystyle\", String(group.scriptLevel === \"display\"));\n    node.setAttribute(\"scriptlevel\", scriptLevel[group.scriptLevel]);\n  }\n\n  return node;\n};\n\ndefineFunction({\n  type: \"genfrac\",\n  names: [\n    \"\\\\dfrac\",\n    \"\\\\frac\",\n    \"\\\\tfrac\",\n    \"\\\\dbinom\",\n    \"\\\\binom\",\n    \"\\\\tbinom\",\n    \"\\\\\\\\atopfrac\", // can\u2019t be entered directly\n    \"\\\\\\\\bracefrac\",\n    \"\\\\\\\\brackfrac\" // ditto\n  ],\n  props: {\n    numArgs: 2,\n    allowedInArgument: true\n  },\n  handler: ({ parser, funcName }, args) => {\n    const numer = args[0];\n    const denom = args[1];\n    let hasBarLine = false;\n    let leftDelim = null;\n    let rightDelim = null;\n    let scriptLevel = \"auto\";\n\n    switch (funcName) {\n      case \"\\\\dfrac\":\n      case \"\\\\frac\":\n      case \"\\\\tfrac\":\n        hasBarLine = true;\n        break;\n      case \"\\\\\\\\atopfrac\":\n        hasBarLine = false;\n        break;\n      case \"\\\\dbinom\":\n      case \"\\\\binom\":\n      case \"\\\\tbinom\":\n        leftDelim = \"(\";\n        rightDelim = \")\";\n        break;\n      case \"\\\\\\\\bracefrac\":\n        leftDelim = \"\\\\{\";\n        rightDelim = \"\\\\}\";\n        break;\n      case \"\\\\\\\\brackfrac\":\n        leftDelim = \"[\";\n        rightDelim = \"]\";\n        break;\n      default:\n        throw new Error(\"Unrecognized genfrac command\");\n    }\n\n    switch (funcName) {\n      case \"\\\\dfrac\":\n      case \"\\\\dbinom\":\n        scriptLevel = \"display\";\n        break;\n      case \"\\\\tfrac\":\n      case \"\\\\tbinom\":\n        scriptLevel = \"text\";\n        break;\n    }\n\n    return {\n      type: \"genfrac\",\n      mode: parser.mode,\n      continued: false,\n      numer,\n      denom,\n      hasBarLine,\n      leftDelim,\n      rightDelim,\n      scriptLevel,\n      barSize: null\n    };\n  },\n  mathmlBuilder: mathmlBuilder$5\n});\n\ndefineFunction({\n  type: \"genfrac\",\n  names: [\"\\\\cfrac\"],\n  props: {\n    numArgs: 2\n  },\n  handler: ({ parser, funcName }, args) => {\n    const numer = args[0];\n    const denom = args[1];\n\n    return {\n      type: \"genfrac\",\n      mode: parser.mode,\n      continued: true,\n      numer,\n      denom,\n      hasBarLine: true,\n      leftDelim: null,\n      rightDelim: null,\n      scriptLevel: \"display\",\n      barSize: null\n    };\n  }\n});\n\n// Infix generalized fractions -- these are not rendered directly, but replaced\n// immediately by one of the variants above.\ndefineFunction({\n  type: \"infix\",\n  names: [\"\\\\over\", \"\\\\choose\", \"\\\\atop\", \"\\\\brace\", \"\\\\brack\"],\n  props: {\n    numArgs: 0,\n    infix: true\n  },\n  handler({ parser, funcName, token }) {\n    let replaceWith;\n    switch (funcName) {\n      case \"\\\\over\":\n        replaceWith = \"\\\\frac\";\n        break;\n      case \"\\\\choose\":\n        replaceWith = \"\\\\binom\";\n        break;\n      case \"\\\\atop\":\n        replaceWith = \"\\\\\\\\atopfrac\";\n        break;\n      case \"\\\\brace\":\n        replaceWith = \"\\\\\\\\bracefrac\";\n        break;\n      case \"\\\\brack\":\n        replaceWith = \"\\\\\\\\brackfrac\";\n        break;\n      default:\n        throw new Error(\"Unrecognized infix genfrac command\");\n    }\n    return {\n      type: \"infix\",\n      mode: parser.mode,\n      replaceWith,\n      token\n    };\n  }\n});\n\nconst delimFromValue = function(delimString) {\n  let delim = null;\n  if (delimString.length > 0) {\n    delim = delimString;\n    delim = delim === \".\" ? null : delim;\n  }\n  return delim;\n};\n\ndefineFunction({\n  type: \"genfrac\",\n  names: [\"\\\\genfrac\"],\n  props: {\n    numArgs: 6,\n    allowedInArgument: true,\n    argTypes: [\"math\", \"math\", \"size\", \"text\", \"math\", \"math\"]\n  },\n  handler({ parser }, args) {\n    const numer = args[4];\n    const denom = args[5];\n\n    // Look into the parse nodes to get the desired delimiters.\n    const leftNode = normalizeArgument(args[0]);\n    const leftDelim = leftNode.type === \"atom\" && leftNode.family === \"open\"\n      ? delimFromValue(leftNode.text)\n      : null;\n    const rightNode = normalizeArgument(args[1]);\n    const rightDelim =\n      rightNode.type === \"atom\" && rightNode.family === \"close\"\n        ? delimFromValue(rightNode.text)\n        : null;\n\n    const barNode = assertNodeType(args[2], \"size\");\n    let hasBarLine;\n    let barSize = null;\n    if (barNode.isBlank) {\n      // \\genfrac acts differently than \\above.\n      // \\genfrac treats an empty size group as a signal to use a\n      // standard bar size. \\above would see size = 0 and omit the bar.\n      hasBarLine = true;\n    } else {\n      barSize = barNode.value;\n      hasBarLine = barSize.number > 0;\n    }\n\n    // Find out if we want displaystyle, textstyle, etc.\n    let scriptLevel = \"auto\";\n    let styl = args[3];\n    if (styl.type === \"ordgroup\") {\n      if (styl.body.length > 0) {\n        const textOrd = assertNodeType(styl.body[0], \"textord\");\n        scriptLevel = stylArray[Number(textOrd.text)];\n      }\n    } else {\n      styl = assertNodeType(styl, \"textord\");\n      scriptLevel = stylArray[Number(styl.text)];\n    }\n\n    return {\n      type: \"genfrac\",\n      mode: parser.mode,\n      numer,\n      denom,\n      continued: false,\n      hasBarLine,\n      barSize,\n      leftDelim,\n      rightDelim,\n      scriptLevel\n    };\n  },\n  mathmlBuilder: mathmlBuilder$5\n});\n\n// \\above is an infix fraction that also defines a fraction bar size.\ndefineFunction({\n  type: \"infix\",\n  names: [\"\\\\above\"],\n  props: {\n    numArgs: 1,\n    argTypes: [\"size\"],\n    infix: true\n  },\n  handler({ parser, funcName, token }, args) {\n    return {\n      type: \"infix\",\n      mode: parser.mode,\n      replaceWith: \"\\\\\\\\abovefrac\",\n      barSize: assertNodeType(args[0], \"size\").value,\n      token\n    };\n  }\n});\n\ndefineFunction({\n  type: \"genfrac\",\n  names: [\"\\\\\\\\abovefrac\"],\n  props: {\n    numArgs: 3,\n    argTypes: [\"math\", \"size\", \"math\"]\n  },\n  handler: ({ parser, funcName }, args) => {\n    const numer = args[0];\n    const barSize = assert(assertNodeType(args[1], \"infix\").barSize);\n    const denom = args[2];\n\n    const hasBarLine = barSize.number > 0;\n    return {\n      type: \"genfrac\",\n      mode: parser.mode,\n      numer,\n      denom,\n      continued: false,\n      hasBarLine,\n      barSize,\n      leftDelim: null,\n      rightDelim: null,\n      scriptLevel: \"auto\"\n    };\n  },\n\n  mathmlBuilder: mathmlBuilder$5\n});\n\n// \\hbox is provided for compatibility with LaTeX functions that act on a box.\n// This function by itself doesn't do anything but set scriptlevel to \\textstyle\n// and prevent a soft line break.\n\ndefineFunction({\n  type: \"hbox\",\n  names: [\"\\\\hbox\"],\n  props: {\n    numArgs: 1,\n    argTypes: [\"hbox\"],\n    allowedInArgument: true,\n    allowedInText: false\n  },\n  handler({ parser }, args) {\n    return {\n      type: \"hbox\",\n      mode: parser.mode,\n      body: ordargument(args[0])\n    };\n  },\n  mathmlBuilder(group, style) {\n    const newStyle = style.withLevel(StyleLevel.TEXT);\n    const mrow = buildExpressionRow(group.body, newStyle);\n    return consolidateText(mrow)\n  }\n});\n\nconst mathmlBuilder$4 = (group, style) => {\n  const accentNode = stretchy.mathMLnode(group.label);\n  accentNode.style[\"math-depth\"] = 0;\n  return new mathMLTree.MathNode(group.isOver ? \"mover\" : \"munder\", [\n    buildGroup$1(group.base, style),\n    accentNode\n  ]);\n};\n\n// Horizontal stretchy braces\ndefineFunction({\n  type: \"horizBrace\",\n  names: [\"\\\\overbrace\", \"\\\\underbrace\"],\n  props: {\n    numArgs: 1\n  },\n  handler({ parser, funcName }, args) {\n    return {\n      type: \"horizBrace\",\n      mode: parser.mode,\n      label: funcName,\n      isOver: /^\\\\over/.test(funcName),\n      base: args[0]\n    };\n  },\n  mathmlBuilder: mathmlBuilder$4\n});\n\ndefineFunction({\n  type: \"html\",\n  names: [\"\\\\class\", \"\\\\id\", \"\\\\style\", \"\\\\data\"],\n  props: {\n    numArgs: 2,\n    argTypes: [\"raw\", \"original\"],\n    allowedInText: true\n  },\n  handler: ({ parser, funcName, token }, args) => {\n    const value = assertNodeType(args[0], \"raw\").string;\n    const body = args[1];\n\n    if (parser.settings.strict) {\n      throw new ParseError(`Function \"${funcName}\" is disabled in strict mode`, token)\n    }\n\n    let trustContext;\n    const attributes = {};\n\n    switch (funcName) {\n      case \"\\\\class\":\n        attributes.class = value;\n        trustContext = {\n          command: \"\\\\class\",\n          class: value\n        };\n        break;\n      case \"\\\\id\":\n        attributes.id = value;\n        trustContext = {\n          command: \"\\\\id\",\n          id: value\n        };\n        break;\n      case \"\\\\style\":\n        attributes.style = value;\n        trustContext = {\n          command: \"\\\\style\",\n          style: value\n        };\n        break;\n      case \"\\\\data\": {\n        const data = value.split(\",\");\n        for (let i = 0; i < data.length; i++) {\n          const keyVal = data[i].split(\"=\");\n          if (keyVal.length !== 2) {\n            throw new ParseError(\"Error parsing key-value for \\\\data\");\n          }\n          attributes[\"data-\" + keyVal[0].trim()] = keyVal[1].trim();\n        }\n\n        trustContext = {\n          command: \"\\\\data\",\n          attributes\n        };\n        break;\n      }\n      default:\n        throw new Error(\"Unrecognized html command\");\n    }\n\n    if (!parser.settings.isTrusted(trustContext)) {\n      throw new ParseError(`Function \"${funcName}\" is not trusted`, token)\n    }\n    return {\n      type: \"html\",\n      mode: parser.mode,\n      attributes,\n      body: ordargument(body)\n    };\n  },\n  mathmlBuilder: (group, style) => {\n    const element =  buildExpressionRow(group.body, style);\n\n    const classes = [];\n    if (group.attributes.class) {\n      classes.push(...group.attributes.class.trim().split(/\\s+/));\n    }\n    element.classes = classes;\n\n    for (const attr in group.attributes) {\n      if (attr !== \"class\" && Object.prototype.hasOwnProperty.call(group.attributes, attr)) {\n        element.setAttribute(attr, group.attributes[attr]);\n      }\n    }\n\n    return element;\n  }\n});\n\nconst sizeData = function(str) {\n  if (/^[-+]? *(\\d+(\\.\\d*)?|\\.\\d+)$/.test(str)) {\n    // str is a number with no unit specified.\n    // default unit is bp, per graphix package.\n    return { number: +str, unit: \"bp\" }\n  } else {\n    const match = /([-+]?) *(\\d+(?:\\.\\d*)?|\\.\\d+) *([a-z]{2})/.exec(str);\n    if (!match) {\n      throw new ParseError(\"Invalid size: '\" + str + \"' in \\\\includegraphics\");\n    }\n    const data = {\n      number: +(match[1] + match[2]), // sign + magnitude, cast to number\n      unit: match[3]\n    };\n    if (!validUnit(data)) {\n      throw new ParseError(\"Invalid unit: '\" + data.unit + \"' in \\\\includegraphics.\");\n    }\n    return data\n  }\n};\n\ndefineFunction({\n  type: \"includegraphics\",\n  names: [\"\\\\includegraphics\"],\n  props: {\n    numArgs: 1,\n    numOptionalArgs: 1,\n    argTypes: [\"raw\", \"url\"],\n    allowedInText: false\n  },\n  handler: ({ parser, token }, args, optArgs) => {\n    let width = { number: 0, unit: \"em\" };\n    let height = { number: 0.9, unit: \"em\" };  // sorta character sized.\n    let totalheight = { number: 0, unit: \"em\" };\n    let alt = \"\";\n\n    if (optArgs[0]) {\n      const attributeStr = assertNodeType(optArgs[0], \"raw\").string;\n\n      // Parser.js does not parse key/value pairs. We get a string.\n      const attributes = attributeStr.split(\",\");\n      for (let i = 0; i < attributes.length; i++) {\n        const keyVal = attributes[i].split(\"=\");\n        if (keyVal.length === 2) {\n          const str = keyVal[1].trim();\n          switch (keyVal[0].trim()) {\n            case \"alt\":\n              alt = str;\n              break\n            case \"width\":\n              width = sizeData(str);\n              break\n            case \"height\":\n              height = sizeData(str);\n              break\n            case \"totalheight\":\n              totalheight = sizeData(str);\n              break\n            default:\n              throw new ParseError(\"Invalid key: '\" + keyVal[0] + \"' in \\\\includegraphics.\")\n          }\n        }\n      }\n    }\n\n    const src = assertNodeType(args[0], \"url\").url;\n\n    if (alt === \"\") {\n      // No alt given. Use the file name. Strip away the path.\n      alt = src;\n      alt = alt.replace(/^.*[\\\\/]/, \"\");\n      alt = alt.substring(0, alt.lastIndexOf(\".\"));\n    }\n\n    if (\n      !parser.settings.isTrusted({\n        command: \"\\\\includegraphics\",\n        url: src\n      })\n    ) {\n      throw new ParseError(`Function \"\\\\includegraphics\" is not trusted`, token)\n    }\n\n    return {\n      type: \"includegraphics\",\n      mode: parser.mode,\n      alt: alt,\n      width: width,\n      height: height,\n      totalheight: totalheight,\n      src: src\n    }\n  },\n  mathmlBuilder: (group, style) => {\n    const height = calculateSize(group.height, style);\n    const depth = { number: 0, unit: \"em\" };\n\n    if (group.totalheight.number > 0) {\n      if (group.totalheight.unit === height.unit &&\n        group.totalheight.number > height.number) {\n        depth.number = group.totalheight.number - height.number;\n        depth.unit = height.unit;\n      }\n    }\n\n    let width = 0;\n    if (group.width.number > 0) {\n      width = calculateSize(group.width, style);\n    }\n\n    const graphicStyle = { height: height.number + depth.number + \"em\" };\n    if (width.number > 0) {\n      graphicStyle.width = width.number + width.unit;\n    }\n    if (depth.number > 0) {\n      graphicStyle.verticalAlign = -depth.number + depth.unit;\n    }\n\n    const node = new Img(group.src, group.alt, graphicStyle);\n    node.height = height;\n    node.depth = depth;\n    return new mathMLTree.MathNode(\"mtext\", [node])\n  }\n});\n\n// Horizontal spacing commands\n\n\n// TODO: \\hskip and \\mskip should support plus and minus in lengths\n\ndefineFunction({\n  type: \"kern\",\n  names: [\"\\\\kern\", \"\\\\mkern\", \"\\\\hskip\", \"\\\\mskip\"],\n  props: {\n    numArgs: 1,\n    argTypes: [\"size\"],\n    primitive: true,\n    allowedInText: true\n  },\n  handler({ parser, funcName, token }, args) {\n    const size = assertNodeType(args[0], \"size\");\n    if (parser.settings.strict) {\n      const mathFunction = funcName[1] === \"m\"; // \\mkern, \\mskip\n      const muUnit = size.value.unit === \"mu\";\n      if (mathFunction) {\n        if (!muUnit) {\n          throw new ParseError(`LaTeX's ${funcName} supports only mu units, ` +\n            `not ${size.value.unit} units`, token)\n        }\n        if (parser.mode !== \"math\") {\n          throw new ParseError(`LaTeX's ${funcName} works only in math mode`, token)\n        }\n      } else {\n        // !mathFunction\n        if (muUnit) {\n          throw new ParseError(`LaTeX's ${funcName} doesn't support mu units`, token)\n        }\n      }\n    }\n    return {\n      type: \"kern\",\n      mode: parser.mode,\n      dimension: size.value\n    };\n  },\n  mathmlBuilder(group, style) {\n    const dimension = calculateSize(group.dimension, style);\n    const ch = dimension.number > 0 && dimension.unit === \"em\"\n      ? spaceCharacter(dimension.number)\n      : \"\";\n    if (group.mode === \"text\" && ch.length > 0) {\n      const character = new mathMLTree.TextNode(ch);\n      return new mathMLTree.MathNode(\"mtext\", [character]);\n    } else {\n      if (dimension.number >= 0) {\n        const node = new mathMLTree.MathNode(\"mspace\");\n        node.setAttribute(\"width\", dimension.number + dimension.unit);\n        return node\n      } else {\n        // Don't use <mspace> or <mpadded> because\n        // WebKit recognizes negative left margin only on a <mrow> element\n        const node = new mathMLTree.MathNode(\"mrow\");\n        node.style.marginLeft = dimension.number + dimension.unit;\n        return node\n      }\n    }\n  }\n});\n\nconst spaceCharacter = function(width) {\n  if (width >= 0.05555 && width <= 0.05556) {\n    return \"\\u200a\"; // &VeryThinSpace;\n  } else if (width >= 0.1666 && width <= 0.1667) {\n    return \"\\u2009\"; // &ThinSpace;\n  } else if (width >= 0.2222 && width <= 0.2223) {\n    return \"\\u2005\"; // &MediumSpace;\n  } else if (width >= 0.2777 && width <= 0.2778) {\n    return \"\\u2005\\u200a\"; // &ThickSpace;\n  } else {\n    return \"\";\n  }\n};\n\n// Limit valid characters to a small set, for safety.\nconst invalidIdRegEx = /[^A-Za-z_0-9-]/g;\n\ndefineFunction({\n  type: \"label\",\n  names: [\"\\\\label\"],\n  props: {\n    numArgs: 1,\n    argTypes: [\"raw\"]\n  },\n  handler({ parser }, args) {\n    return {\n      type: \"label\",\n      mode: parser.mode,\n      string: args[0].string.replace(invalidIdRegEx, \"\")\n    };\n  },\n  mathmlBuilder(group, style) {\n    // Return a no-width, no-ink element with an HTML id.\n    const node = new mathMLTree.MathNode(\"mrow\", [], [\"tml-label\"]);\n    if (group.string.length > 0) {\n      node.setLabel(group.string);\n    }\n    return node\n  }\n});\n\n// Horizontal overlap functions\n\nconst textModeLap = [\"\\\\clap\", \"\\\\llap\", \"\\\\rlap\"];\n\ndefineFunction({\n  type: \"lap\",\n  names: [\"\\\\mathllap\", \"\\\\mathrlap\", \"\\\\mathclap\", \"\\\\clap\", \"\\\\llap\", \"\\\\rlap\"],\n  props: {\n    numArgs: 1,\n    allowedInText: true\n  },\n  handler: ({ parser, funcName, token }, args) => {\n    if (textModeLap.includes(funcName)) {\n      if (parser.settings.strict && parser.mode !== \"text\") {\n        throw new ParseError(`{${funcName}} can be used only in text mode.\n Try \\\\math${funcName.slice(1)}`, token)\n      }\n      funcName = funcName.slice(1);\n    } else {\n      funcName = funcName.slice(5);\n    }\n    const body = args[0];\n    return {\n      type: \"lap\",\n      mode: parser.mode,\n      alignment: funcName,\n      body\n    }\n  },\n  mathmlBuilder: (group, style) => {\n    // mathllap, mathrlap, mathclap\n    let strut;\n    if (group.alignment === \"llap\") {\n      // We need an invisible strut with the same depth as the group.\n      // We can't just read the depth, so we use \\vphantom methods.\n      const phantomInner = buildExpression(ordargument(group.body), style);\n      const phantom = new mathMLTree.MathNode(\"mphantom\", phantomInner);\n      strut = new mathMLTree.MathNode(\"mpadded\", [phantom]);\n      strut.setAttribute(\"width\", \"0px\");\n    }\n\n    const inner = buildGroup$1(group.body, style);\n    let node;\n    if (group.alignment === \"llap\") {\n      inner.style.position = \"absolute\";\n      inner.style.right = \"0\";\n      inner.style.bottom = `0`; // If we could have read the ink depth, it would go here.\n      node = new mathMLTree.MathNode(\"mpadded\", [strut, inner]);\n    } else {\n      node = new mathMLTree.MathNode(\"mpadded\", [inner]);\n    }\n\n    if (group.alignment === \"rlap\") {\n      if (group.body.body.length > 0 && group.body.body[0].type === \"genfrac\") {\n        // In Firefox, a <mpadded> squashes the 3/18em padding of a child \\frac. Put it back.\n        node.setAttribute(\"lspace\", \"0.16667em\");\n      }\n    } else {\n      const offset = group.alignment === \"llap\" ? \"-1\" : \"-0.5\";\n      node.setAttribute(\"lspace\", offset + \"width\");\n      if (group.alignment === \"llap\") {\n        node.style.position = \"relative\";\n      } else {\n        node.style.display = \"flex\";\n        node.style.justifyContent = \"center\";\n      }\n    }\n    node.setAttribute(\"width\", \"0px\");\n    return node\n  }\n});\n\n// Switching from text mode back to math mode\ndefineFunction({\n  type: \"ordgroup\",\n  names: [\"\\\\(\", \"$\"],\n  props: {\n    numArgs: 0,\n    allowedInText: true,\n    allowedInMath: false\n  },\n  handler({ funcName, parser }, args) {\n    const outerMode = parser.mode;\n    parser.switchMode(\"math\");\n    const close = funcName === \"\\\\(\" ? \"\\\\)\" : \"$\";\n    const body = parser.parseExpression(false, close);\n    parser.expect(close);\n    parser.switchMode(outerMode);\n    return {\n      type: \"ordgroup\",\n      mode: parser.mode,\n      body\n    };\n  }\n});\n\n// Check for extra closing math delimiters\ndefineFunction({\n  type: \"text\", // Doesn't matter what this is.\n  names: [\"\\\\)\", \"\\\\]\"],\n  props: {\n    numArgs: 0,\n    allowedInText: true,\n    allowedInMath: false\n  },\n  handler(context, token) {\n    throw new ParseError(`Mismatched ${context.funcName}`, token);\n  }\n});\n\nconst chooseStyle = (group, style) => {\n  switch (style.level) {\n    case StyleLevel.DISPLAY:       // 0\n      return group.display;\n    case StyleLevel.TEXT:          // 1\n      return group.text;\n    case StyleLevel.SCRIPT:        // 2\n      return group.script;\n    case StyleLevel.SCRIPTSCRIPT:  // 3\n      return group.scriptscript;\n    default:\n      return group.text;\n  }\n};\n\ndefineFunction({\n  type: \"mathchoice\",\n  names: [\"\\\\mathchoice\"],\n  props: {\n    numArgs: 4,\n    primitive: true\n  },\n  handler: ({ parser }, args) => {\n    return {\n      type: \"mathchoice\",\n      mode: parser.mode,\n      display: ordargument(args[0]),\n      text: ordargument(args[1]),\n      script: ordargument(args[2]),\n      scriptscript: ordargument(args[3])\n    };\n  },\n  mathmlBuilder: (group, style) => {\n    const body = chooseStyle(group, style);\n    return buildExpressionRow(body, style);\n  }\n});\n\nconst textAtomTypes = [\"text\", \"textord\", \"mathord\", \"atom\"];\n\nfunction mathmlBuilder$3(group, style) {\n  let node;\n  const inner = buildExpression(group.body, style);\n\n  if (group.mclass === \"minner\") {\n    node = new mathMLTree.MathNode(\"mpadded\", inner);\n  } else if (group.mclass === \"mord\") {\n    if (group.isCharacterBox || inner[0].type === \"mathord\") {\n      node = inner[0];\n      node.type = \"mi\";\n      if (node.children.length === 1 && node.children[0].text && node.children[0].text === \"\u2207\") {\n        node.setAttribute(\"mathvariant\", \"normal\");\n      }\n    } else {\n      node = new mathMLTree.MathNode(\"mi\", inner);\n    }\n  } else {\n    node = new mathMLTree.MathNode(\"mrow\", inner);\n    if (group.mustPromote) {\n      node = inner[0];\n      node.type = \"mo\";\n      if (group.isCharacterBox && group.body[0].text && /[A-Za-z]/.test(group.body[0].text)) {\n        node.setAttribute(\"mathvariant\", \"italic\");\n      }\n    } else {\n      node = new mathMLTree.MathNode(\"mrow\", inner);\n    }\n\n    // Set spacing based on what is the most likely adjacent atom type.\n    // See TeXbook p170.\n    const doSpacing = style.level < 2; // Operator spacing is zero inside a (sub|super)script.\n    if (node.type === \"mrow\") {\n      if (doSpacing ) {\n        if (group.mclass === \"mbin\") {\n          // medium space\n          node.children.unshift(padding$1(0.2222));\n          node.children.push(padding$1(0.2222));\n        } else if (group.mclass === \"mrel\") {\n          // thickspace\n          node.children.unshift(padding$1(0.2778));\n          node.children.push(padding$1(0.2778));\n        } else if (group.mclass === \"mpunct\") {\n          node.children.push(padding$1(0.1667));\n        } else if (group.mclass === \"minner\") {\n          node.children.unshift(padding$1(0.0556));  // 1 mu is the most likely option\n          node.children.push(padding$1(0.0556));\n        }\n      }\n    } else {\n      if (group.mclass === \"mbin\") {\n        // medium space\n        node.attributes.lspace = (doSpacing ? \"0.2222em\" : \"0\");\n        node.attributes.rspace = (doSpacing ? \"0.2222em\" : \"0\");\n      } else if (group.mclass === \"mrel\") {\n        // thickspace\n        node.attributes.lspace = (doSpacing ? \"0.2778em\" : \"0\");\n        node.attributes.rspace = (doSpacing ? \"0.2778em\" : \"0\");\n      } else if (group.mclass === \"mpunct\") {\n        node.attributes.lspace = \"0em\";\n        node.attributes.rspace = (doSpacing ? \"0.1667em\" : \"0\");\n      } else if (group.mclass === \"mopen\" || group.mclass === \"mclose\") {\n        node.attributes.lspace = \"0em\";\n        node.attributes.rspace = \"0em\";\n      } else if (group.mclass === \"minner\" && doSpacing) {\n        node.attributes.lspace = \"0.0556em\"; // 1 mu is the most likely option\n        node.attributes.width = \"+0.1111em\";\n      }\n    }\n\n    if (!(group.mclass === \"mopen\" || group.mclass === \"mclose\")) {\n      delete node.attributes.stretchy;\n      delete node.attributes.form;\n    }\n  }\n  return node;\n}\n\n// Math class commands except \\mathop\ndefineFunction({\n  type: \"mclass\",\n  names: [\n    \"\\\\mathord\",\n    \"\\\\mathbin\",\n    \"\\\\mathrel\",\n    \"\\\\mathopen\",\n    \"\\\\mathclose\",\n    \"\\\\mathpunct\",\n    \"\\\\mathinner\"\n  ],\n  props: {\n    numArgs: 1,\n    primitive: true\n  },\n  handler({ parser, funcName }, args) {\n    const body = args[0];\n    const isCharacterBox = utils.isCharacterBox(body);\n    // We should not wrap a <mo> around a <mi> or <mord>. That would be invalid MathML.\n    // In that case, we instead promote the text contents of the body to the parent.\n    let mustPromote = true;\n    const mord = { type: \"mathord\", text: \"\", mode: parser.mode };\n    const arr = (body.body) ? body.body : [body];\n    for (const arg of arr) {\n      if (textAtomTypes.includes(arg.type)) {\n        if (symbols[parser.mode][arg.text]) {\n          mord.text += symbols[parser.mode][arg.text].replace;\n        } else if (arg.text) {\n          mord.text += arg.text;\n        } else if (arg.body) {\n          arg.body.map(e => { mord.text += e.text; });\n        }\n      } else {\n        mustPromote = false;\n        break\n      }\n    }\n    if (mustPromote && funcName === \"\\\\mathord\" && mord.type === \"mathord\"\n                    && mord.text.length > 1) {\n      return mord\n    } else {\n      return {\n        type: \"mclass\",\n        mode: parser.mode,\n        mclass: \"m\" + funcName.slice(5),\n        body: ordargument(mustPromote ? mord : body),\n        isCharacterBox,\n        mustPromote\n      };\n    }\n  },\n  mathmlBuilder: mathmlBuilder$3\n});\n\nconst binrelClass = (arg) => {\n  // \\binrel@ spacing varies with (bin|rel|ord) of the atom in the argument.\n  // (by rendering separately and with {}s before and after, and measuring\n  // the change in spacing).  We'll do roughly the same by detecting the\n  // atom type directly.\n  const atom = arg.type === \"ordgroup\" && arg.body.length ? arg.body[0] : arg;\n  if (atom.type === \"atom\" && (atom.family === \"bin\" || atom.family === \"rel\")) {\n    return \"m\" + atom.family;\n  } else {\n    return \"mord\";\n  }\n};\n\n// \\@binrel{x}{y} renders like y but as mbin/mrel/mord if x is mbin/mrel/mord.\n// This is equivalent to \\binrel@{x}\\binrel@@{y} in AMSTeX.\ndefineFunction({\n  type: \"mclass\",\n  names: [\"\\\\@binrel\"],\n  props: {\n    numArgs: 2\n  },\n  handler({ parser }, args) {\n    return {\n      type: \"mclass\",\n      mode: parser.mode,\n      mclass: binrelClass(args[0]),\n      body: ordargument(args[1]),\n      isCharacterBox: utils.isCharacterBox(args[1])\n    };\n  }\n});\n\n// Build a relation or stacked op by placing one symbol on top of another\ndefineFunction({\n  type: \"mclass\",\n  names: [\"\\\\stackrel\", \"\\\\overset\", \"\\\\underset\"],\n  props: {\n    numArgs: 2\n  },\n  handler({ parser, funcName }, args) {\n    const baseArg = args[1];\n    const shiftedArg = args[0];\n\n    const baseOp = {\n      type: \"op\",\n      mode: baseArg.mode,\n      limits: true,\n      alwaysHandleSupSub: true,\n      parentIsSupSub: false,\n      symbol: false,\n      stack: true,\n      suppressBaseShift: funcName !== \"\\\\stackrel\",\n      body: ordargument(baseArg)\n    };\n\n    return {\n      type: \"supsub\",\n      mode: shiftedArg.mode,\n      base: baseOp,\n      sup: funcName === \"\\\\underset\" ? null : shiftedArg,\n      sub: funcName === \"\\\\underset\" ? shiftedArg : null\n    };\n  },\n  mathmlBuilder: mathmlBuilder$3\n});\n\n// Helper function\nconst buildGroup = (el, style, noneNode) => {\n  if (!el) { return noneNode }\n  const node = buildGroup$1(el, style);\n  if (node.type === \"mrow\" && node.children.length === 0) { return noneNode }\n  return node\n};\n\ndefineFunction({\n  type: \"multiscript\",\n  names: [\"\\\\sideset\", \"\\\\pres@cript\"], // See macros.js for \\prescript\n  props: {\n    numArgs: 3\n  },\n  handler({ parser, funcName, token }, args) {\n    if (args[2].body.length === 0) {\n      throw new ParseError(funcName + `cannot parse an empty base.`)\n    }\n    const base = args[2].body[0];\n    if (parser.settings.strict && funcName === \"\\\\sideset\" && !base.symbol) {\n      throw new ParseError(`The base of \\\\sideset must be a big operator. Try \\\\prescript.`)\n    }\n\n    if ((args[0].body.length > 0 && args[0].body[0].type !== \"supsub\") ||\n        (args[1].body.length > 0 && args[1].body[0].type !== \"supsub\")) {\n      throw new ParseError(\"\\\\sideset can parse only subscripts and \" +\n                            \"superscripts in its first two arguments\", token)\n    }\n\n    // The prescripts and postscripts come wrapped in a supsub.\n    const prescripts = args[0].body.length > 0 ? args[0].body[0] : null;\n    const postscripts = args[1].body.length > 0 ? args[1].body[0] : null;\n\n    if (!prescripts && !postscripts) {\n      return base\n    } else if (!prescripts) {\n      // It's not a multi-script. Get a \\textstyle supsub.\n      return {\n        type: \"styling\",\n        mode: parser.mode,\n        scriptLevel: \"text\",\n        body: [{\n          type: \"supsub\",\n          mode: parser.mode,\n          base,\n          sup: postscripts.sup,\n          sub: postscripts.sub\n        }]\n      }\n    } else {\n      return {\n        type: \"multiscript\",\n        mode: parser.mode,\n        isSideset: funcName === \"\\\\sideset\",\n        prescripts,\n        postscripts,\n        base\n      }\n    }\n  },\n  mathmlBuilder(group, style) {\n    const base =  buildGroup$1(group.base, style);\n\n    const prescriptsNode = new mathMLTree.MathNode(\"mprescripts\");\n    const noneNode = new mathMLTree.MathNode(\"none\");\n    let children = [];\n\n    const preSub = buildGroup(group.prescripts.sub, style, noneNode);\n    const preSup = buildGroup(group.prescripts.sup, style, noneNode);\n    if (group.isSideset) {\n      // This seems silly, but LaTeX does this. Firefox ignores it, which does not make me sad.\n      preSub.setAttribute(\"style\", \"text-align: left;\");\n      preSup.setAttribute(\"style\", \"text-align: left;\");\n    }\n\n    if (group.postscripts) {\n      const postSub = buildGroup(group.postscripts.sub, style, noneNode);\n      const postSup = buildGroup(group.postscripts.sup, style, noneNode);\n      children = [base, postSub, postSup, prescriptsNode, preSub, preSup];\n    } else {\n      children = [base, prescriptsNode, preSub, preSup];\n    }\n\n    return new mathMLTree.MathNode(\"mmultiscripts\", children);\n  }\n});\n\ndefineFunction({\n  type: \"not\",\n  names: [\"\\\\not\"],\n  props: {\n    numArgs: 1,\n    primitive: true,\n    allowedInText: false\n  },\n  handler({ parser }, args) {\n    const isCharacterBox = utils.isCharacterBox(args[0]);\n    let body;\n    if (isCharacterBox) {\n      body = ordargument(args[0]);\n      if (body[0].text.charAt(0) === \"\\\\\") {\n        body[0].text = symbols.math[body[0].text].replace;\n      }\n      // \\u0338 is the Unicode Combining Long Solidus Overlay\n      body[0].text = body[0].text.slice(0, 1) + \"\\u0338\" + body[0].text.slice(1);\n    } else {\n      // When the argument is not a character box, TeX does an awkward, poorly placed overlay.\n      // We'll do the same.\n      const notNode = { type: \"textord\", mode: \"math\", text: \"\\u0338\" };\n      const kernNode = { type: \"kern\", mode: \"math\", dimension: { number: -0.6, unit: \"em\" } };\n      body = [notNode, kernNode, args[0]];\n    }\n    return {\n      type: \"not\",\n      mode: parser.mode,\n      body,\n      isCharacterBox\n    };\n  },\n  mathmlBuilder(group, style) {\n    if (group.isCharacterBox) {\n      const inner = buildExpression(group.body, style, true);\n      return inner[0]\n    } else {\n      return buildExpressionRow(group.body, style)\n    }\n  }\n});\n\n// Limits, symbols\n\n// Some helpers\n\nconst ordAtomTypes = [\"textord\", \"mathord\", \"atom\"];\n\n// Most operators have a large successor symbol, but these don't.\nconst noSuccessor = [\"\\\\smallint\"];\n\n// Math operators (e.g. \\sin) need a space between these types and themselves:\nconst ordTypes = [\"textord\", \"mathord\", \"ordgroup\", \"close\", \"leftright\", \"font\"];\n\n// NOTE: Unlike most `builders`s, this one handles not only \"op\", but also\n// \"supsub\" since some of them (like \\int) can affect super/subscripting.\n\nconst setSpacing = node => {\n  // The user wrote a \\mathop{\u2026} function. Change spacing from default to OP spacing.\n  // The most likely spacing for an OP is a thin space per TeXbook p170.\n  node.attributes.lspace = \"0.1667em\";\n  node.attributes.rspace = \"0.1667em\";\n};\n\nconst mathmlBuilder$2 = (group, style) => {\n  let node;\n\n  if (group.symbol) {\n    // This is a symbol. Just add the symbol.\n    node = new MathNode(\"mo\", [makeText(group.name, group.mode)]);\n    if (noSuccessor.includes(group.name)) {\n      node.setAttribute(\"largeop\", \"false\");\n    } else {\n      node.setAttribute(\"movablelimits\", \"false\");\n    }\n    if (group.fromMathOp) { setSpacing(node); }\n  } else if (group.body) {\n    // This is an operator with children. Add them.\n    node = new MathNode(\"mo\", buildExpression(group.body, style));\n    if (group.fromMathOp) { setSpacing(node); }\n  } else {\n    // This is a text operator. Add all of the characters from the operator's name.\n    node = new MathNode(\"mi\", [new TextNode(group.name.slice(1))]);\n\n    if (!group.parentIsSupSub) {\n      // Append an invisible <mo>&ApplyFunction;</mo>.\n      // ref: https://www.w3.org/TR/REC-MathML/chap3_2.html#sec3.2.4\n      const operator = new MathNode(\"mo\", [makeText(\"\\u2061\", \"text\")]);\n      const row = [node, operator];\n      // Set spacing\n      if (group.needsLeadingSpace) {\n        const lead = new MathNode(\"mspace\");\n        lead.setAttribute(\"width\", \"0.1667em\"); // thin space.\n        row.unshift(lead);\n      }\n      if (!group.isFollowedByDelimiter) {\n        const trail = new MathNode(\"mspace\");\n        trail.setAttribute(\"width\", \"0.1667em\"); // thin space.\n        row.push(trail);\n      }\n      node = new MathNode(\"mrow\", row);\n    }\n  }\n\n  return node;\n};\n\nconst singleCharBigOps = {\n  \"\\u220F\": \"\\\\prod\",\n  \"\\u2210\": \"\\\\coprod\",\n  \"\\u2211\": \"\\\\sum\",\n  \"\\u22c0\": \"\\\\bigwedge\",\n  \"\\u22c1\": \"\\\\bigvee\",\n  \"\\u22c2\": \"\\\\bigcap\",\n  \"\\u22c3\": \"\\\\bigcup\",\n  \"\\u2a00\": \"\\\\bigodot\",\n  \"\\u2a01\": \"\\\\bigoplus\",\n  \"\\u2a02\": \"\\\\bigotimes\",\n  \"\\u2a04\": \"\\\\biguplus\",\n  \"\\u2a05\": \"\\\\bigsqcap\",\n  \"\\u2a06\": \"\\\\bigsqcup\",\n  \"\\u2a03\": \"\\\\bigcupdot\",\n  \"\\u2a07\": \"\\\\bigdoublevee\",\n  \"\\u2a08\": \"\\\\bigdoublewedge\",\n  \"\\u2a09\": \"\\\\bigtimes\"\n};\n\ndefineFunction({\n  type: \"op\",\n  names: [\n    \"\\\\coprod\",\n    \"\\\\bigvee\",\n    \"\\\\bigwedge\",\n    \"\\\\biguplus\",\n    \"\\\\bigcupplus\",\n    \"\\\\bigcupdot\",\n    \"\\\\bigcap\",\n    \"\\\\bigcup\",\n    \"\\\\bigdoublevee\",\n    \"\\\\bigdoublewedge\",\n    \"\\\\intop\",\n    \"\\\\prod\",\n    \"\\\\sum\",\n    \"\\\\bigotimes\",\n    \"\\\\bigoplus\",\n    \"\\\\bigodot\",\n    \"\\\\bigsqcap\",\n    \"\\\\bigsqcup\",\n    \"\\\\bigtimes\",\n    \"\\\\smallint\",\n    \"\\u220F\",\n    \"\\u2210\",\n    \"\\u2211\",\n    \"\\u22c0\",\n    \"\\u22c1\",\n    \"\\u22c2\",\n    \"\\u22c3\",\n    \"\\u2a00\",\n    \"\\u2a01\",\n    \"\\u2a02\",\n    \"\\u2a03\",\n    \"\\u2a04\",\n    \"\\u2a05\",\n    \"\\u2a06\",\n    \"\\u2a07\",\n    \"\\u2a08\",\n    \"\\u2a09\"\n  ],\n  props: {\n    numArgs: 0\n  },\n  handler: ({ parser, funcName }, args) => {\n    let fName = funcName;\n    if (fName.length === 1) {\n      fName = singleCharBigOps[fName];\n    }\n    return {\n      type: \"op\",\n      mode: parser.mode,\n      limits: true,\n      parentIsSupSub: false,\n      symbol: true,\n      stack: false, // This is true for \\stackrel{}, not here.\n      name: fName\n    };\n  },\n  mathmlBuilder: mathmlBuilder$2\n});\n\n// Note: calling defineFunction with a type that's already been defined only\n// works because the same mathmlBuilder is being used.\ndefineFunction({\n  type: \"op\",\n  names: [\"\\\\mathop\"],\n  props: {\n    numArgs: 1,\n    primitive: true\n  },\n  handler: ({ parser }, args) => {\n    const body = args[0];\n    // It would be convienient to just wrap a <mo> around the argument.\n    // But if the argument is a <mi> or <mord>, that would be invalid MathML.\n    // In that case, we instead promote the text contents of the body to the parent.\n    const arr = (body.body) ? body.body : [body];\n    const isSymbol = arr.length === 1 && ordAtomTypes.includes(arr[0].type);\n    return {\n      type: \"op\",\n      mode: parser.mode,\n      limits: true,\n      parentIsSupSub: false,\n      symbol: isSymbol,\n      fromMathOp: true,\n      stack: false,\n      name: isSymbol ? arr[0].text : null,\n      body: isSymbol ? null : ordargument(body)\n    };\n  },\n  mathmlBuilder: mathmlBuilder$2\n});\n\n// There are 2 flags for operators; whether they produce limits in\n// displaystyle, and whether they are symbols and should grow in\n// displaystyle. These four groups cover the four possible choices.\n\nconst singleCharIntegrals = {\n  \"\\u222b\": \"\\\\int\",\n  \"\\u222c\": \"\\\\iint\",\n  \"\\u222d\": \"\\\\iiint\",\n  \"\\u222e\": \"\\\\oint\",\n  \"\\u222f\": \"\\\\oiint\",\n  \"\\u2230\": \"\\\\oiiint\",\n  \"\\u2231\": \"\\\\intclockwise\",\n  \"\\u2232\": \"\\\\varointclockwise\",\n  \"\\u2a0c\": \"\\\\iiiint\",\n  \"\\u2a0d\": \"\\\\intbar\",\n  \"\\u2a0e\": \"\\\\intBar\",\n  \"\\u2a0f\": \"\\\\fint\",\n  \"\\u2a12\": \"\\\\rppolint\",\n  \"\\u2a13\": \"\\\\scpolint\",\n  \"\\u2a15\": \"\\\\pointint\",\n  \"\\u2a16\": \"\\\\sqint\",\n  \"\\u2a17\": \"\\\\intlarhk\",\n  \"\\u2a18\": \"\\\\intx\",\n  \"\\u2a19\": \"\\\\intcap\",\n  \"\\u2a1a\": \"\\\\intcup\"\n};\n\n// No limits, not symbols\ndefineFunction({\n  type: \"op\",\n  names: [\n    \"\\\\arcsin\",\n    \"\\\\arccos\",\n    \"\\\\arctan\",\n    \"\\\\arctg\",\n    \"\\\\arcctg\",\n    \"\\\\arg\",\n    \"\\\\ch\",\n    \"\\\\cos\",\n    \"\\\\cosec\",\n    \"\\\\cosh\",\n    \"\\\\cot\",\n    \"\\\\cotg\",\n    \"\\\\coth\",\n    \"\\\\csc\",\n    \"\\\\ctg\",\n    \"\\\\cth\",\n    \"\\\\deg\",\n    \"\\\\dim\",\n    \"\\\\exp\",\n    \"\\\\hom\",\n    \"\\\\ker\",\n    \"\\\\lg\",\n    \"\\\\ln\",\n    \"\\\\log\",\n    \"\\\\sec\",\n    \"\\\\sin\",\n    \"\\\\sinh\",\n    \"\\\\sh\",\n    \"\\\\sgn\",\n    \"\\\\tan\",\n    \"\\\\tanh\",\n    \"\\\\tg\",\n    \"\\\\th\"\n  ],\n  props: {\n    numArgs: 0\n  },\n  handler({ parser, funcName }) {\n    const prevAtomType = parser.prevAtomType;\n    const next = parser.gullet.future().text;\n    return {\n      type: \"op\",\n      mode: parser.mode,\n      limits: false,\n      parentIsSupSub: false,\n      symbol: false,\n      stack: false,\n      isFollowedByDelimiter: isDelimiter(next),\n      needsLeadingSpace: prevAtomType.length > 0 && ordTypes.includes(prevAtomType),\n      name: funcName\n    };\n  },\n  mathmlBuilder: mathmlBuilder$2\n});\n\n// Limits, not symbols\ndefineFunction({\n  type: \"op\",\n  names: [\"\\\\det\", \"\\\\gcd\", \"\\\\inf\", \"\\\\lim\", \"\\\\max\", \"\\\\min\", \"\\\\Pr\", \"\\\\sup\"],\n  props: {\n    numArgs: 0\n  },\n  handler({ parser, funcName }) {\n    const prevAtomType = parser.prevAtomType;\n    const next = parser.gullet.future().text;\n    return {\n      type: \"op\",\n      mode: parser.mode,\n      limits: true,\n      parentIsSupSub: false,\n      symbol: false,\n      stack: false,\n      isFollowedByDelimiter: isDelimiter(next),\n      needsLeadingSpace: prevAtomType.length > 0 && ordTypes.includes(prevAtomType),\n      name: funcName\n    };\n  },\n  mathmlBuilder: mathmlBuilder$2\n});\n\n// No limits, symbols\ndefineFunction({\n  type: \"op\",\n  names: [\n    \"\\\\int\",\n    \"\\\\iint\",\n    \"\\\\iiint\",\n    \"\\\\iiiint\",\n    \"\\\\oint\",\n    \"\\\\oiint\",\n    \"\\\\oiiint\",\n    \"\\\\intclockwise\",\n    \"\\\\varointclockwise\",\n    \"\\\\intbar\",\n    \"\\\\intBar\",\n    \"\\\\fint\",\n    \"\\\\rppolint\",\n    \"\\\\scpolint\",\n    \"\\\\pointint\",\n    \"\\\\sqint\",\n    \"\\\\intlarhk\",\n    \"\\\\intx\",\n    \"\\\\intcap\",\n    \"\\\\intcup\",\n    \"\\u222b\",\n    \"\\u222c\",\n    \"\\u222d\",\n    \"\\u222e\",\n    \"\\u222f\",\n    \"\\u2230\",\n    \"\\u2231\",\n    \"\\u2232\",\n    \"\\u2a0c\",\n    \"\\u2a0d\",\n    \"\\u2a0e\",\n    \"\\u2a0f\",\n    \"\\u2a12\",\n    \"\\u2a13\",\n    \"\\u2a15\",\n    \"\\u2a16\",\n    \"\\u2a17\",\n    \"\\u2a18\",\n    \"\\u2a19\",\n    \"\\u2a1a\"\n  ],\n  props: {\n    numArgs: 0\n  },\n  handler({ parser, funcName }) {\n    let fName = funcName;\n    if (fName.length === 1) {\n      fName = singleCharIntegrals[fName];\n    }\n    return {\n      type: \"op\",\n      mode: parser.mode,\n      limits: false,\n      parentIsSupSub: false,\n      symbol: true,\n      stack: false,\n      name: fName\n    };\n  },\n  mathmlBuilder: mathmlBuilder$2\n});\n\n// NOTE: Unlike most builders, this one handles not only\n// \"operatorname\", but also  \"supsub\" since \\operatorname* can\n// affect super/subscripting.\n\nconst mathmlBuilder$1 = (group, style) => {\n  let expression = buildExpression(group.body, style.withFont(\"mathrm\"));\n\n  // Is expression a string or has it something like a fraction?\n  let isAllString = true; // default\n  for (let i = 0; i < expression.length; i++) {\n    let node = expression[i];\n    if (node instanceof mathMLTree.MathNode) {\n      if ((node.type === \"mrow\" || node.type === \"mpadded\") && node.children.length === 1 &&\n          node.children[0] instanceof mathMLTree.MathNode) {\n        node = node.children[0];\n      }\n      switch (node.type) {\n        case \"mi\":\n        case \"mn\":\n        case \"ms\":\n        case \"mtext\":\n          break; // Do nothing yet.\n        case \"mspace\":\n          {\n            if (node.attributes.width) {\n              const width = node.attributes.width.replace(\"em\", \"\");\n              const ch = spaceCharacter(Number(width));\n              if (ch === \"\") {\n                isAllString = false;\n              } else {\n                expression[i] = new mathMLTree.MathNode(\"mtext\", [new mathMLTree.TextNode(ch)]);\n              }\n            }\n          }\n          break\n        case \"mo\": {\n          const child = node.children[0];\n          if (node.children.length === 1 && child instanceof mathMLTree.TextNode) {\n            child.text = child.text.replace(/\\u2212/, \"-\").replace(/\\u2217/, \"*\");\n          } else {\n            isAllString = false;\n          }\n          break\n        }\n        default:\n          isAllString = false;\n      }\n    } else {\n      isAllString = false;\n    }\n  }\n\n  if (isAllString) {\n    // Write a single TextNode instead of multiple nested tags.\n    const word = expression.map((node) => node.toText()).join(\"\");\n    expression = [new mathMLTree.TextNode(word)];\n  } else if (\n    expression.length === 1\n    && [\"mover\", \"munder\"].includes(expression[0].type) &&\n    (expression[0].children[0].type === \"mi\" || expression[0].children[0].type === \"mtext\")\n  ) {\n    expression[0].children[0].type = \"mi\";\n    if (group.parentIsSupSub) {\n      return new mathMLTree.MathNode(\"mrow\", expression)\n    } else {\n      const operator = new mathMLTree.MathNode(\"mo\", [makeText(\"\\u2061\", \"text\")]);\n      return mathMLTree.newDocumentFragment([expression[0], operator])\n    }\n  }\n\n  let wrapper;\n  if (isAllString) {\n    wrapper = new mathMLTree.MathNode(\"mi\", expression);\n    if (expression[0].text.length === 1) {\n      wrapper.setAttribute(\"mathvariant\", \"normal\");\n    }\n  } else {\n    wrapper = new mathMLTree.MathNode(\"mrow\", expression);\n  }\n\n  if (!group.parentIsSupSub) {\n    // Append an <mo>&ApplyFunction;</mo>.\n    // ref: https://www.w3.org/TR/REC-MathML/chap3_2.html#sec3.2.4\n    const operator = new mathMLTree.MathNode(\"mo\", [makeText(\"\\u2061\", \"text\")]);\n    const fragment = [wrapper, operator];\n    if (group.needsLeadingSpace) {\n      // LaTeX gives operator spacing, but a <mi> gets ord spacing.\n      // So add a leading space.\n      const space = new mathMLTree.MathNode(\"mspace\");\n      space.setAttribute(\"width\", \"0.1667em\"); // thin space.\n      fragment.unshift(space);\n    }\n    if (!group.isFollowedByDelimiter) {\n      const trail = new mathMLTree.MathNode(\"mspace\");\n      trail.setAttribute(\"width\", \"0.1667em\"); // thin space.\n      fragment.push(trail);\n    }\n    return mathMLTree.newDocumentFragment(fragment)\n  }\n\n  return wrapper\n};\n\n// \\operatorname\n// amsopn.dtx: \\mathop{#1\\kern\\z@\\operator@font#3}\\newmcodes@\ndefineFunction({\n  type: \"operatorname\",\n  names: [\"\\\\operatorname@\", \"\\\\operatornamewithlimits\"],\n  props: {\n    numArgs: 1,\n    allowedInArgument: true\n  },\n  handler: ({ parser, funcName }, args) => {\n    const body = args[0];\n    const prevAtomType = parser.prevAtomType;\n    const next = parser.gullet.future().text;\n    return {\n      type: \"operatorname\",\n      mode: parser.mode,\n      body: ordargument(body),\n      alwaysHandleSupSub: (funcName === \"\\\\operatornamewithlimits\"),\n      limits: false,\n      parentIsSupSub: false,\n      isFollowedByDelimiter: isDelimiter(next),\n      needsLeadingSpace: prevAtomType.length > 0 && ordTypes.includes(prevAtomType)\n    };\n  },\n  mathmlBuilder: mathmlBuilder$1\n});\n\ndefineMacro(\"\\\\operatorname\",\n  \"\\\\@ifstar\\\\operatornamewithlimits\\\\operatorname@\");\n\ndefineFunctionBuilders({\n  type: \"ordgroup\",\n  mathmlBuilder(group, style) {\n    return buildExpressionRow(group.body, style, group.semisimple);\n  }\n});\n\ndefineFunction({\n  type: \"phantom\",\n  names: [\"\\\\phantom\"],\n  props: {\n    numArgs: 1,\n    allowedInText: true\n  },\n  handler: ({ parser }, args) => {\n    const body = args[0];\n    return {\n      type: \"phantom\",\n      mode: parser.mode,\n      body: ordargument(body)\n    };\n  },\n  mathmlBuilder: (group, style) => {\n    const inner = buildExpression(group.body, style);\n    return new mathMLTree.MathNode(\"mphantom\", inner);\n  }\n});\n\ndefineFunction({\n  type: \"hphantom\",\n  names: [\"\\\\hphantom\"],\n  props: {\n    numArgs: 1,\n    allowedInText: true\n  },\n  handler: ({ parser }, args) => {\n    const body = args[0];\n    return {\n      type: \"hphantom\",\n      mode: parser.mode,\n      body\n    };\n  },\n  mathmlBuilder: (group, style) => {\n    const inner = buildExpression(ordargument(group.body), style);\n    const phantom = new mathMLTree.MathNode(\"mphantom\", inner);\n    const node = new mathMLTree.MathNode(\"mpadded\", [phantom]);\n    node.setAttribute(\"height\", \"0px\");\n    node.setAttribute(\"depth\", \"0px\");\n    return node;\n  }\n});\n\ndefineFunction({\n  type: \"vphantom\",\n  names: [\"\\\\vphantom\"],\n  props: {\n    numArgs: 1,\n    allowedInText: true\n  },\n  handler: ({ parser }, args) => {\n    const body = args[0];\n    return {\n      type: \"vphantom\",\n      mode: parser.mode,\n      body\n    };\n  },\n  mathmlBuilder: (group, style) => {\n    const inner = buildExpression(ordargument(group.body), style);\n    const phantom = new mathMLTree.MathNode(\"mphantom\", inner);\n    const node = new mathMLTree.MathNode(\"mpadded\", [phantom]);\n    node.setAttribute(\"width\", \"0px\");\n    return node;\n  }\n});\n\n// In LaTeX, \\pmb is a simulation of bold font.\n// The version of \\pmb in ambsy.sty works by typesetting three copies of the argument\n// with small offsets. We use CSS font-weight:bold.\n\ndefineFunction({\n  type: \"pmb\",\n  names: [\"\\\\pmb\"],\n  props: {\n    numArgs: 1,\n    allowedInText: true\n  },\n  handler({ parser }, args) {\n    return {\n      type: \"pmb\",\n      mode: parser.mode,\n      body: ordargument(args[0])\n    }\n  },\n  mathmlBuilder(group, style) {\n    const inner = buildExpression(group.body, style);\n    // Wrap with an <mstyle> element.\n    const node = wrapWithMstyle(inner);\n    node.setAttribute(\"style\", \"font-weight:bold\");\n    return node\n  }\n});\n\n// \\raise, \\lower, and \\raisebox\n\nconst mathmlBuilder = (group, style) => {\n  const newStyle = style.withLevel(StyleLevel.TEXT);\n  const node = new mathMLTree.MathNode(\"mpadded\", [buildGroup$1(group.body, newStyle)]);\n  const dy = calculateSize(group.dy, style);\n  node.setAttribute(\"voffset\", dy.number + dy.unit);\n  // Add padding, which acts to increase height in Chromium.\n  // TODO: Figure out some way to change height in Firefox w/o breaking Chromium.\n  if (dy.number > 0) {\n    node.style.padding = dy.number + dy.unit + \" 0 0 0\";\n  } else {\n    node.style.padding = \"0 0 \" + Math.abs(dy.number) + dy.unit + \" 0\";\n  }\n  return node\n};\n\ndefineFunction({\n  type: \"raise\",\n  names: [\"\\\\raise\", \"\\\\lower\"],\n  props: {\n    numArgs: 2,\n    argTypes: [\"size\", \"primitive\"],\n    primitive: true\n  },\n  handler({ parser, funcName }, args) {\n    const amount = assertNodeType(args[0], \"size\").value;\n    if (funcName === \"\\\\lower\") { amount.number *= -1; }\n    const body = args[1];\n    return {\n      type: \"raise\",\n      mode: parser.mode,\n      dy: amount,\n      body\n    };\n  },\n  mathmlBuilder\n});\n\n\ndefineFunction({\n  type: \"raise\",\n  names: [\"\\\\raisebox\"],\n  props: {\n    numArgs: 2,\n    argTypes: [\"size\", \"hbox\"],\n    allowedInText: true\n  },\n  handler({ parser, funcName }, args) {\n    const amount = assertNodeType(args[0], \"size\").value;\n    const body = args[1];\n    return {\n      type: \"raise\",\n      mode: parser.mode,\n      dy: amount,\n      body\n    };\n  },\n  mathmlBuilder\n});\n\ndefineFunction({\n  type: \"ref\",\n  names: [\"\\\\ref\", \"\\\\eqref\"],\n  props: {\n    numArgs: 1,\n    argTypes: [\"raw\"]\n  },\n  handler({ parser, funcName }, args) {\n    return {\n      type: \"ref\",\n      mode: parser.mode,\n      funcName,\n      string: args[0].string.replace(invalidIdRegEx, \"\")\n    };\n  },\n  mathmlBuilder(group, style) {\n    // Create an empty <a> node. Set a class and an href attribute.\n    // The post-processor will populate with the target's tag or equation number.\n    const classes = group.funcName === \"\\\\ref\" ? [\"tml-ref\"] : [\"tml-ref\", \"tml-eqref\"];\n    return new AnchorNode(\"#\" + group.string, classes, null)\n  }\n});\n\ndefineFunction({\n  type: \"reflect\",\n  names: [\"\\\\reflectbox\"],\n  props: {\n    numArgs: 1,\n    argTypes: [\"hbox\"],\n    allowedInText: true\n  },\n  handler({ parser }, args) {\n    return {\n      type: \"reflect\",\n      mode: parser.mode,\n      body: args[0]\n    };\n  },\n  mathmlBuilder(group, style) {\n    const node = buildGroup$1(group.body, style);\n    node.style.transform = \"scaleX(-1)\";\n    return node\n  }\n});\n\ndefineFunction({\n  type: \"internal\",\n  names: [\"\\\\relax\"],\n  props: {\n    numArgs: 0,\n    allowedInText: true,\n    allowedInArgument: true\n  },\n  handler({ parser }) {\n    return {\n      type: \"internal\",\n      mode: parser.mode\n    };\n  }\n});\n\ndefineFunction({\n  type: \"rule\",\n  names: [\"\\\\rule\"],\n  props: {\n    numArgs: 2,\n    numOptionalArgs: 1,\n    allowedInText: true,\n    allowedInMath: true,\n    argTypes: [\"size\", \"size\", \"size\"]\n  },\n  handler({ parser }, args, optArgs) {\n    const shift = optArgs[0];\n    const width = assertNodeType(args[0], \"size\");\n    const height = assertNodeType(args[1], \"size\");\n    return {\n      type: \"rule\",\n      mode: parser.mode,\n      shift: shift && assertNodeType(shift, \"size\").value,\n      width: width.value,\n      height: height.value\n    };\n  },\n  mathmlBuilder(group, style) {\n    const width = calculateSize(group.width, style);\n    const height = calculateSize(group.height, style);\n    const shift = group.shift\n      ? calculateSize(group.shift, style)\n      : { number: 0, unit: \"em\" };\n    const color = (style.color && style.getColor()) || \"black\";\n\n    const rule = new mathMLTree.MathNode(\"mspace\");\n    if (width.number > 0 && height.number > 0) {\n      rule.setAttribute(\"mathbackground\", color);\n    }\n    rule.setAttribute(\"width\", width.number + width.unit);\n    rule.setAttribute(\"height\", height.number + height.unit);\n    if (shift.number === 0) { return rule }\n\n    const wrapper = new mathMLTree.MathNode(\"mpadded\", [rule]);\n    if (shift.number >= 0) {\n      wrapper.setAttribute(\"height\", \"+\" + shift.number + shift.unit);\n    } else {\n      wrapper.setAttribute(\"height\", shift.number + shift.unit);\n      wrapper.setAttribute(\"depth\", \"+\" + -shift.number + shift.unit);\n    }\n    wrapper.setAttribute(\"voffset\", shift.number + shift.unit);\n    return wrapper;\n  }\n});\n\n// The size mappings are taken from TeX with \\normalsize=10pt.\n// We don't have to track script level. MathML does that.\nconst sizeMap = {\n  \"\\\\tiny\": 0.5,\n  \"\\\\sixptsize\": 0.6,\n  \"\\\\Tiny\": 0.6,\n  \"\\\\scriptsize\": 0.7,\n  \"\\\\footnotesize\": 0.8,\n  \"\\\\small\": 0.9,\n  \"\\\\normalsize\": 1.0,\n  \"\\\\large\": 1.2,\n  \"\\\\Large\": 1.44,\n  \"\\\\LARGE\": 1.728,\n  \"\\\\huge\": 2.074,\n  \"\\\\Huge\": 2.488\n};\n\ndefineFunction({\n  type: \"sizing\",\n  names: [\n    \"\\\\tiny\",\n    \"\\\\sixptsize\",\n    \"\\\\Tiny\",\n    \"\\\\scriptsize\",\n    \"\\\\footnotesize\",\n    \"\\\\small\",\n    \"\\\\normalsize\",\n    \"\\\\large\",\n    \"\\\\Large\",\n    \"\\\\LARGE\",\n    \"\\\\huge\",\n    \"\\\\Huge\"\n  ],\n  props: {\n    numArgs: 0,\n    allowedInText: true\n  },\n  handler: ({ breakOnTokenText, funcName, parser }, args) => {\n    if (parser.settings.strict && parser.mode === \"math\") {\n      // eslint-disable-next-line no-console\n      console.log(`Temml strict-mode warning: Command ${funcName} is invalid in math mode.`);\n    }\n    const body = parser.parseExpression(false, breakOnTokenText, true);\n    return {\n      type: \"sizing\",\n      mode: parser.mode,\n      funcName,\n      body\n    };\n  },\n  mathmlBuilder: (group, style) => {\n    const newStyle = style.withFontSize(sizeMap[group.funcName]);\n    const inner = buildExpression(group.body, newStyle);\n    // Wrap with an <mstyle> element.\n    const node = wrapWithMstyle(inner);\n    const factor = (sizeMap[group.funcName] / style.fontSize).toFixed(4);\n    node.setAttribute(\"mathsize\", factor + \"em\");\n    return node;\n  }\n});\n\n// smash, with optional [tb], as in AMS\n\ndefineFunction({\n  type: \"smash\",\n  names: [\"\\\\smash\"],\n  props: {\n    numArgs: 1,\n    numOptionalArgs: 1,\n    allowedInText: true\n  },\n  handler: ({ parser }, args, optArgs) => {\n    let smashHeight = false;\n    let smashDepth = false;\n    const tbArg = optArgs[0] && assertNodeType(optArgs[0], \"ordgroup\");\n    if (tbArg) {\n      // Optional [tb] argument is engaged.\n      // ref: amsmath: \\renewcommand{\\smash}[1][tb]{%\n      //               def\\mb@t{\\ht}\\def\\mb@b{\\dp}\\def\\mb@tb{\\ht\\z@\\z@\\dp}%\n      let letter = \"\";\n      for (let i = 0; i < tbArg.body.length; ++i) {\n        const node = tbArg.body[i];\n        // TODO: Write an AssertSymbolNode\n        letter = node.text;\n        if (letter === \"t\") {\n          smashHeight = true;\n        } else if (letter === \"b\") {\n          smashDepth = true;\n        } else {\n          smashHeight = false;\n          smashDepth = false;\n          break;\n        }\n      }\n    } else {\n      smashHeight = true;\n      smashDepth = true;\n    }\n\n    const body = args[0];\n    return {\n      type: \"smash\",\n      mode: parser.mode,\n      body,\n      smashHeight,\n      smashDepth\n    };\n  },\n  mathmlBuilder: (group, style) => {\n    const node = new mathMLTree.MathNode(\"mpadded\", [buildGroup$1(group.body, style)]);\n\n    if (group.smashHeight) {\n      node.setAttribute(\"height\", \"0px\");\n    }\n\n    if (group.smashDepth) {\n      node.setAttribute(\"depth\", \"0px\");\n    }\n\n    return node;\n  }\n});\n\ndefineFunction({\n  type: \"sqrt\",\n  names: [\"\\\\sqrt\"],\n  props: {\n    numArgs: 1,\n    numOptionalArgs: 1\n  },\n  handler({ parser }, args, optArgs) {\n    const index = optArgs[0];\n    const body = args[0];\n    return {\n      type: \"sqrt\",\n      mode: parser.mode,\n      body,\n      index\n    };\n  },\n  mathmlBuilder(group, style) {\n    const { body, index } = group;\n    return index\n      ? new mathMLTree.MathNode(\"mroot\", [\n        buildGroup$1(body, style),\n        buildGroup$1(index, style.incrementLevel())\n      ])\n    : new mathMLTree.MathNode(\"msqrt\", [buildGroup$1(body, style)]);\n  }\n});\n\nconst styleMap = {\n  display: 0,\n  text: 1,\n  script: 2,\n  scriptscript: 3\n};\n\nconst styleAttributes = {\n  display: [\"0\", \"true\"],\n  text: [\"0\", \"false\"],\n  script: [\"1\", \"false\"],\n  scriptscript: [\"2\", \"false\"]\n};\n\ndefineFunction({\n  type: \"styling\",\n  names: [\"\\\\displaystyle\", \"\\\\textstyle\", \"\\\\scriptstyle\", \"\\\\scriptscriptstyle\"],\n  props: {\n    numArgs: 0,\n    allowedInText: true,\n    primitive: true\n  },\n  handler({ breakOnTokenText, funcName, parser }, args) {\n    // parse out the implicit body\n    const body = parser.parseExpression(true, breakOnTokenText, true);\n\n    const scriptLevel = funcName.slice(1, funcName.length - 5);\n    return {\n      type: \"styling\",\n      mode: parser.mode,\n      // Figure out what scriptLevel to use by pulling out the scriptLevel from\n      // the function name\n      scriptLevel,\n      body\n    };\n  },\n  mathmlBuilder(group, style) {\n    // Figure out what scriptLevel we're changing to.\n    const newStyle = style.withLevel(styleMap[group.scriptLevel]);\n    // The style argument in the next line does NOT directly set a MathML script level.\n    // It just tracks the style level, in case we need to know it for supsub or mathchoice.\n    const inner = buildExpression(group.body, newStyle);\n    // Wrap with an <mstyle> element.\n    const node = wrapWithMstyle(inner);\n\n    const attr = styleAttributes[group.scriptLevel];\n\n    // Here is where we set the MathML script level.\n    node.setAttribute(\"scriptlevel\", attr[0]);\n    node.setAttribute(\"displaystyle\", attr[1]);\n\n    return node;\n  }\n});\n\n/**\n * Sometimes, groups perform special rules when they have superscripts or\n * subscripts attached to them. This function lets the `supsub` group know that\n * Sometimes, groups perform special rules when they have superscripts or\n * its inner element should handle the superscripts and subscripts instead of\n * handling them itself.\n */\n\n// Helpers\nconst symbolRegEx = /^m(over|under|underover)$/;\n\n// Super scripts and subscripts, whose precise placement can depend on other\n// functions that precede them.\ndefineFunctionBuilders({\n  type: \"supsub\",\n  mathmlBuilder(group, style) {\n    // Is the inner group a relevant horizontal brace?\n    let isBrace = false;\n    let isOver;\n    let isSup;\n    let appendApplyFunction = false;\n    let appendSpace = false;\n    let needsLeadingSpace = false;\n\n    if (group.base && group.base.type === \"horizBrace\") {\n      isSup = !!group.sup;\n      if (isSup === group.base.isOver) {\n        isBrace = true;\n        isOver = group.base.isOver;\n      }\n    }\n\n    if (group.base && !group.base.stack &&\n      (group.base.type === \"op\" || group.base.type === \"operatorname\")) {\n      group.base.parentIsSupSub = true;\n      appendApplyFunction = !group.base.symbol;\n      appendSpace = appendApplyFunction && !group.isFollowedByDelimiter;\n      needsLeadingSpace = group.base.needsLeadingSpace;\n    }\n\n    const children = group.base && group.base.stack\n      ? [buildGroup$1(group.base.body[0], style)]\n      : [buildGroup$1(group.base, style)];\n\n    // Note regarding scriptstyle level.\n    // (Sub|super)scripts should not shrink beyond MathML scriptlevel 2 aka \\scriptscriptstyle\n    // Ref: https://w3c.github.io/mathml-core/#the-displaystyle-and-scriptlevel-attributes\n    // (BTW, MathML scriptlevel 2 is equal to Temml level 3.)\n    // But Chromium continues to shrink the (sub|super)scripts. So we explicitly set scriptlevel 2.\n\n    const childStyle = style.inSubOrSup();\n    if (group.sub) {\n      const sub = buildGroup$1(group.sub, childStyle);\n      if (style.level === 3) { sub.setAttribute(\"scriptlevel\", \"2\"); }\n      children.push(sub);\n    }\n\n    if (group.sup) {\n      const sup = buildGroup$1(group.sup, childStyle);\n      if (style.level === 3) { sup.setAttribute(\"scriptlevel\", \"2\"); }\n      const testNode = sup.type === \"mrow\" ? sup.children[0] : sup;\n      if ((testNode && testNode.type === \"mo\" && testNode.classes.includes(\"tml-prime\"))\n        && group.base && group.base.text && \"fF\".indexOf(group.base.text) > -1) {\n        // Chromium does not address italic correction on prime.  Prevent f\u2032 from overlapping.\n        testNode.classes.push(\"prime-pad\");\n      }\n      children.push(sup);\n    }\n\n    let nodeType;\n    if (isBrace) {\n      nodeType = isOver ? \"mover\" : \"munder\";\n    } else if (!group.sub) {\n      const base = group.base;\n      if (\n        base &&\n        base.type === \"op\" &&\n        base.limits &&\n        (style.level === StyleLevel.DISPLAY || base.alwaysHandleSupSub)\n      ) {\n        nodeType = \"mover\";\n      } else if (\n        base &&\n        base.type === \"operatorname\" &&\n        base.alwaysHandleSupSub &&\n        (base.limits || style.level === StyleLevel.DISPLAY)\n      ) {\n        nodeType = \"mover\";\n      } else {\n        nodeType = \"msup\";\n      }\n    } else if (!group.sup) {\n      const base = group.base;\n      if (\n        base &&\n        base.type === \"op\" &&\n        base.limits &&\n        (style.level === StyleLevel.DISPLAY || base.alwaysHandleSupSub)\n      ) {\n        nodeType = \"munder\";\n      } else if (\n        base &&\n        base.type === \"operatorname\" &&\n        base.alwaysHandleSupSub &&\n        (base.limits || style.level === StyleLevel.DISPLAY)\n      ) {\n        nodeType = \"munder\";\n      } else {\n        nodeType = \"msub\";\n      }\n    } else {\n      const base = group.base;\n      if (base && ((base.type === \"op\" && base.limits) || base.type === \"multiscript\") &&\n        (style.level === StyleLevel.DISPLAY || base.alwaysHandleSupSub)\n      ) {\n        nodeType = \"munderover\";\n      } else if (\n        base &&\n        base.type === \"operatorname\" &&\n        base.alwaysHandleSupSub &&\n        (style.level === StyleLevel.DISPLAY || base.limits)\n      ) {\n        nodeType = \"munderover\";\n      } else {\n        nodeType = \"msubsup\";\n      }\n    }\n\n    let node = new mathMLTree.MathNode(nodeType, children);\n    if (appendApplyFunction) {\n      // Append an <mo>&ApplyFunction;</mo>.\n      // ref: https://www.w3.org/TR/REC-MathML/chap3_2.html#sec3.2.4\n      const operator = new mathMLTree.MathNode(\"mo\", [makeText(\"\\u2061\", \"text\")]);\n      if (needsLeadingSpace) {\n        const space = new mathMLTree.MathNode(\"mspace\");\n        space.setAttribute(\"width\", \"0.1667em\"); // thin space.\n        node = mathMLTree.newDocumentFragment([space, node, operator]);\n      } else {\n        node = mathMLTree.newDocumentFragment([node, operator]);\n      }\n      if (appendSpace) {\n        const space = new mathMLTree.MathNode(\"mspace\");\n        space.setAttribute(\"width\", \"0.1667em\"); // thin space.\n        node.children.push(space);\n      }\n    } else if (symbolRegEx.test(nodeType)) {\n      // Wrap in a <mrow>. Otherwise Firefox stretchy parens will not stretch to include limits.\n      node = new mathMLTree.MathNode(\"mrow\", [node]);\n    }\n\n    return node\n  }\n});\n\n// Operator ParseNodes created in Parser.js from symbol Groups in src/symbols.js.\n\nconst short = [\"\\\\shortmid\", \"\\\\nshortmid\", \"\\\\shortparallel\",\n  \"\\\\nshortparallel\", \"\\\\smallsetminus\"];\n\nconst arrows = [\"\\\\Rsh\", \"\\\\Lsh\", \"\\\\restriction\"];\n\nconst isArrow = str => {\n  if (str.length === 1) {\n    const codePoint = str.codePointAt(0);\n    return (0x218f < codePoint && codePoint < 0x2200)\n  }\n  return str.indexOf(\"arrow\") > -1 || str.indexOf(\"harpoon\") > -1 || arrows.includes(str)\n};\n\ndefineFunctionBuilders({\n  type: \"atom\",\n  mathmlBuilder(group, style) {\n    const node = new mathMLTree.MathNode(\"mo\", [makeText(group.text, group.mode)]);\n    if (group.family === \"punct\") {\n      node.setAttribute(\"separator\", \"true\");\n    } else if (group.family === \"open\" || group.family === \"close\") {\n      // Delims built here should not stretch vertically.\n      // See delimsizing.js for stretchy delims.\n      if (group.family === \"open\") {\n        node.setAttribute(\"form\", \"prefix\");\n        // Set an explicit attribute for stretch. Otherwise Firefox may do it wrong.\n        node.setAttribute(\"stretchy\", \"false\");\n      } else if (group.family === \"close\") {\n        node.setAttribute(\"form\", \"postfix\");\n        node.setAttribute(\"stretchy\", \"false\");\n      }\n    } else if (group.text === \"\\\\mid\") {\n      // Firefox messes up this spacing if at the end of an <mrow>. See it explicitly.\n      node.setAttribute(\"lspace\", \"0.22em\"); // medium space\n      node.setAttribute(\"rspace\", \"0.22em\");\n      node.setAttribute(\"stretchy\", \"false\");\n    } else if (group.family === \"rel\" && isArrow(group.text)) {\n      node.setAttribute(\"stretchy\", \"false\");\n    } else if (short.includes(group.text)) {\n      node.setAttribute(\"mathsize\", \"70%\");\n    } else if (group.text === \":\") {\n      // \":\" is not in the MathML operator dictionary. Give it BIN spacing.\n      node.attributes.lspace = \"0.2222em\";\n      node.attributes.rspace = \"0.2222em\";\n    } else if (group.needsSpacing) {\n      // Fix a MathML bug that occurs when a <mo> is between two <mtext> elements.\n      if (group.family === \"bin\") {\n        return new mathMLTree.MathNode(\"mrow\", [padding$1(0.222), node, padding$1(0.222)])\n      } else {\n        // REL spacing\n        return new mathMLTree.MathNode(\"mrow\", [padding$1(0.2778), node, padding$1(0.2778)])\n      }\n    }\n    return node;\n  }\n});\n\n/**\n * Maps TeX font commands to \"mathvariant\" attribute in buildMathML.js\n */\nconst fontMap = {\n  // styles\n  mathbf: \"bold\",\n  mathrm: \"normal\",\n  textit: \"italic\",\n  mathit: \"italic\",\n  mathnormal: \"italic\",\n\n  // families\n  mathbb: \"double-struck\",\n  mathcal: \"script\",\n  mathfrak: \"fraktur\",\n  mathscr: \"script\",\n  mathsf: \"sans-serif\",\n  mathtt: \"monospace\"\n};\n\n/**\n * Returns the math variant as a string or null if none is required.\n */\nconst getVariant = function(group, style) {\n  // Handle font specifiers as best we can.\n  // Chromium does not support the MathML mathvariant attribute.\n  // So we'll use Unicode replacement characters instead.\n  // But first, determine the math variant.\n\n  // Deal with the \\textit, \\textbf, etc., functions.\n  if (style.fontFamily === \"texttt\") {\n    return \"monospace\"\n  } else if (style.fontFamily === \"textsc\") {\n    return \"normal\"; // handled via character substitution in symbolsOrd.js.\n  } else if (style.fontFamily === \"textsf\") {\n    if (style.fontShape === \"textit\" && style.fontWeight === \"textbf\") {\n      return \"sans-serif-bold-italic\"\n    } else if (style.fontShape === \"textit\") {\n      return \"sans-serif-italic\"\n    } else if (style.fontWeight === \"textbf\") {\n      return \"sans-serif-bold\"\n    } else {\n      return \"sans-serif\"\n    }\n  } else if (style.fontShape === \"textit\" && style.fontWeight === \"textbf\") {\n    return \"bold-italic\"\n  } else if (style.fontShape === \"textit\") {\n    return \"italic\"\n  } else if (style.fontWeight === \"textbf\") {\n    return \"bold\"\n  }\n\n  // Deal with the \\mathit, mathbf, etc, functions.\n  const font = style.font;\n  if (!font || font === \"mathnormal\") {\n    return null\n  }\n\n  const mode = group.mode;\n  switch (font) {\n    case \"mathit\":\n      return \"italic\"\n    case \"mathrm\": {\n      const codePoint = group.text.codePointAt(0);\n      // LaTeX \\mathrm returns italic for Greek characters.\n      return  (0x03ab < codePoint && codePoint < 0x03cf) ? \"italic\" : \"normal\"\n    }\n    case \"greekItalic\":\n      return \"italic\"\n    case \"up@greek\":\n      return \"normal\"\n    case \"boldsymbol\":\n    case \"mathboldsymbol\":\n      return \"bold-italic\"\n    case \"mathbf\":\n      return \"bold\"\n    case \"mathbb\":\n      return \"double-struck\"\n    case \"mathfrak\":\n      return \"fraktur\"\n    case \"mathscr\":\n    case \"mathcal\":\n      return \"script\"\n    case \"mathsf\":\n      return \"sans-serif\"\n    case \"mathsfit\":\n      return \"sans-serif-italic\"\n    case \"mathtt\":\n      return \"monospace\"\n  }\n\n  let text = group.text;\n  if (symbols[mode][text] && symbols[mode][text].replace) {\n    text = symbols[mode][text].replace;\n  }\n\n  return Object.prototype.hasOwnProperty.call(fontMap, font) ? fontMap[font] : null\n};\n\n// Chromium does not support the MathML `mathvariant` attribute.\n// Instead, we replace ASCII characters with Unicode characters that\n// are defined in the font as bold, italic, double-struck, etc.\n// This module identifies those Unicode code points.\n\n// First, a few helpers.\nconst script = Object.freeze({\n  B: 0x20EA, // Offset from ASCII B to Unicode script B\n  E: 0x20EB,\n  F: 0x20EB,\n  H: 0x20C3,\n  I: 0x20C7,\n  L: 0x20C6,\n  M: 0x20E6,\n  R: 0x20C9,\n  e: 0x20CA,\n  g: 0x20A3,\n  o: 0x20C5\n});\n\nconst frak = Object.freeze({\n  C: 0x20EA,\n  H: 0x20C4,\n  I: 0x20C8,\n  R: 0x20CA,\n  Z: 0x20CE\n});\n\nconst bbb = Object.freeze({\n  C: 0x20BF, // blackboard bold\n  H: 0x20C5,\n  N: 0x20C7,\n  P: 0x20C9,\n  Q: 0x20C9,\n  R: 0x20CB,\n  Z: 0x20CA\n});\n\nconst bold = Object.freeze({\n  \"\\u03f5\": 0x1D2E7, // lunate epsilon\n  \"\\u03d1\": 0x1D30C, // vartheta\n  \"\\u03f0\": 0x1D2EE, // varkappa\n  \"\\u03c6\": 0x1D319, // varphi\n  \"\\u03f1\": 0x1D2EF, // varrho\n  \"\\u03d6\": 0x1D30B  // varpi\n});\n\nconst boldItalic = Object.freeze({\n  \"\\u03f5\": 0x1D35B, // lunate epsilon\n  \"\\u03d1\": 0x1D380, // vartheta\n  \"\\u03f0\": 0x1D362, // varkappa\n  \"\\u03c6\": 0x1D38D, // varphi\n  \"\\u03f1\": 0x1D363, // varrho\n  \"\\u03d6\": 0x1D37F  // varpi\n});\n\nconst boldsf = Object.freeze({\n  \"\\u03f5\": 0x1D395, // lunate epsilon\n  \"\\u03d1\": 0x1D3BA, // vartheta\n  \"\\u03f0\": 0x1D39C, // varkappa\n  \"\\u03c6\": 0x1D3C7, // varphi\n  \"\\u03f1\": 0x1D39D, // varrho\n  \"\\u03d6\": 0x1D3B9  // varpi\n});\n\nconst bisf = Object.freeze({\n  \"\\u03f5\": 0x1D3CF, // lunate epsilon\n  \"\\u03d1\": 0x1D3F4, // vartheta\n  \"\\u03f0\": 0x1D3D6, // varkappa\n  \"\\u03c6\": 0x1D401, // varphi\n  \"\\u03f1\": 0x1D3D7, // varrho\n  \"\\u03d6\": 0x1D3F3  // varpi\n});\n\n// Code point offsets below are derived from https://www.unicode.org/charts/PDF/U1D400.pdf\nconst offset = Object.freeze({\n  upperCaseLatin: { // A-Z\n    \"normal\": ch =>                 { return 0 },\n    \"bold\": ch =>                   { return 0x1D3BF },\n    \"italic\": ch =>                 { return 0x1D3F3 },\n    \"bold-italic\": ch =>            { return 0x1D427 },\n    \"script\": ch =>                 { return script[ch] || 0x1D45B },\n    \"script-bold\": ch =>            { return 0x1D48F },\n    \"fraktur\": ch =>                { return frak[ch] || 0x1D4C3 },\n    \"fraktur-bold\": ch =>           { return 0x1D52B },\n    \"double-struck\": ch =>          { return bbb[ch] || 0x1D4F7 },\n    \"sans-serif\": ch =>             { return 0x1D55F },\n    \"sans-serif-bold\": ch =>        { return 0x1D593 },\n    \"sans-serif-italic\": ch =>      { return 0x1D5C7 },\n    \"sans-serif-bold-italic\": ch => { return 0x1D63C },\n    \"monospace\": ch =>              { return 0x1D62F }\n  },\n  lowerCaseLatin: { // a-z\n    \"normal\": ch =>                 { return 0 },\n    \"bold\": ch =>                   { return 0x1D3B9 },\n    \"italic\": ch =>                 { return ch === \"h\" ? 0x20A6 : 0x1D3ED },\n    \"bold-italic\": ch =>            { return 0x1D421 },\n    \"script\": ch =>                 { return script[ch] || 0x1D455 },\n    \"script-bold\": ch =>            { return 0x1D489 },\n    \"fraktur\": ch =>                { return 0x1D4BD },\n    \"fraktur-bold\": ch =>           { return 0x1D525 },\n    \"double-struck\": ch =>          { return 0x1D4F1 },\n    \"sans-serif\": ch =>             { return 0x1D559 },\n    \"sans-serif-bold\": ch =>        { return 0x1D58D },\n    \"sans-serif-italic\": ch =>      { return 0x1D5C1 },\n    \"sans-serif-bold-italic\": ch => { return 0x1D5F5 },\n    \"monospace\": ch =>              { return 0x1D629 }\n  },\n  upperCaseGreek: { // A-\u03A9\n    \"normal\": ch =>                 { return 0 },\n    \"bold\": ch =>                   { return 0x1D317 },\n    \"italic\": ch =>                 { return 0x1D351 },\n    // \\boldsymbol actually returns upright bold for upperCaseGreek\n    \"bold-italic\": ch =>            { return 0x1D317 },\n    \"script\": ch =>                 { return 0 },\n    \"script-bold\": ch =>            { return 0 },\n    \"fraktur\": ch =>                { return 0 },\n    \"fraktur-bold\": ch =>           { return 0 },\n    \"double-struck\": ch =>          { return 0 },\n    // Unicode has no code points for regular-weight san-serif Greek. Use bold.\n    \"sans-serif\": ch =>             { return 0x1D3C5 },\n    \"sans-serif-bold\": ch =>        { return 0x1D3C5 },\n    \"sans-serif-italic\": ch =>      { return 0 },\n    \"sans-serif-bold-italic\": ch => { return 0x1D3FF },\n    \"monospace\": ch =>              { return 0 }\n  },\n  lowerCaseGreek: { // \u03B1-\u03C9\n    \"normal\": ch =>                 { return 0 },\n    \"bold\": ch =>                   { return 0x1D311 },\n    \"italic\": ch =>                 { return 0x1D34B },\n    \"bold-italic\": ch =>            { return ch === \"\\u03d5\" ? 0x1D37E : 0x1D385 },\n    \"script\": ch =>                 { return 0 },\n    \"script-bold\": ch =>            { return 0 },\n    \"fraktur\": ch =>                { return 0 },\n    \"fraktur-bold\": ch =>           { return 0 },\n    \"double-struck\": ch =>          { return 0 },\n    // Unicode has no code points for regular-weight san-serif Greek. Use bold.\n    \"sans-serif\": ch =>             { return 0x1D3BF },\n    \"sans-serif-bold\": ch =>        { return 0x1D3BF },\n    \"sans-serif-italic\": ch =>      { return 0 },\n    \"sans-serif-bold-italic\": ch => { return 0x1D3F9 },\n    \"monospace\": ch =>              { return 0 }\n  },\n  varGreek: { // \\varGamma, etc\n    \"normal\": ch =>                 { return 0 },\n    \"bold\": ch =>                   { return  bold[ch] || -51 },\n    \"italic\": ch =>                 { return 0 },\n    \"bold-italic\": ch =>            { return boldItalic[ch] || 0x3A },\n    \"script\": ch =>                 { return 0 },\n    \"script-bold\": ch =>            { return 0 },\n    \"fraktur\": ch =>                { return 0 },\n    \"fraktur-bold\": ch =>           { return 0 },\n    \"double-struck\": ch =>          { return 0 },\n    \"sans-serif\": ch =>             { return boldsf[ch] || 0x74 },\n    \"sans-serif-bold\": ch =>        { return boldsf[ch] || 0x74 },\n    \"sans-serif-italic\": ch =>      { return 0 },\n    \"sans-serif-bold-italic\": ch => { return bisf[ch] || 0xAE },\n    \"monospace\": ch =>              { return 0 }\n  },\n  numeral: { // 0-9\n    \"normal\": ch =>                 { return 0 },\n    \"bold\": ch =>                   { return 0x1D79E },\n    \"italic\": ch =>                 { return 0 },\n    \"bold-italic\": ch =>            { return 0 },\n    \"script\": ch =>                 { return 0 },\n    \"script-bold\": ch =>            { return 0 },\n    \"fraktur\": ch =>                { return 0 },\n    \"fraktur-bold\": ch =>           { return 0 },\n    \"double-struck\": ch =>          { return 0x1D7A8 },\n    \"sans-serif\": ch =>             { return 0x1D7B2 },\n    \"sans-serif-bold\": ch =>        { return 0x1D7BC },\n    \"sans-serif-italic\": ch =>      { return 0 },\n    \"sans-serif-bold-italic\": ch => { return 0 },\n    \"monospace\": ch =>              { return 0x1D7C6 }\n  }\n});\n\nconst variantChar = (ch, variant) => {\n  const codePoint = ch.codePointAt(0);\n  const block = 0x40 < codePoint && codePoint < 0x5b\n    ? \"upperCaseLatin\"\n    : 0x60 < codePoint && codePoint < 0x7b\n    ? \"lowerCaseLatin\"\n    : (0x390  < codePoint && codePoint < 0x3AA)\n    ? \"upperCaseGreek\"\n    : 0x3B0 < codePoint && codePoint < 0x3CA || ch === \"\\u03d5\"\n    ? \"lowerCaseGreek\"\n    : 0x1D6E1 < codePoint && codePoint < 0x1D6FC  || bold[ch]\n    ? \"varGreek\"\n    : (0x2F < codePoint && codePoint <  0x3A)\n    ? \"numeral\"\n    : \"other\";\n  return block === \"other\"\n    ? ch\n    : String.fromCodePoint(codePoint + offset[block][variant](ch))\n};\n\nconst smallCaps = Object.freeze({\n  a: \"\u1D00\",\n  b: \"\u0299\",\n  c: \"\u1D04\",\n  d: \"\u1D05\",\n  e: \"\u1D07\",\n  f: \"\uA730\",\n  g: \"\u0262\",\n  h: \"\u029C\",\n  i: \"\u026A\",\n  j: \"\u1D0A\",\n  k: \"\u1D0B\",\n  l: \"\u029F\",\n  m: \"\u1D0D\",\n  n: \"\u0274\",\n  o: \"\u1D0F\",\n  p: \"\u1D18\",\n  q: \"\u01EB\",\n  r: \"\u0280\",\n  s: \"s\",\n  t: \"\u1D1B\",\n  u: \"\u1D1C\",\n  v: \"\u1D20\",\n  w: \"\u1D21\",\n  x: \"x\",\n  y: \"\u028F\",\n  z: \"\u1D22\"\n});\n\n// \"mathord\" and \"textord\" ParseNodes created in Parser.js from symbol Groups in\n// src/symbols.js.\n\nconst numberRegEx = /^\\d(?:[\\d,.]*\\d)?$/;\nconst latinRegEx = /[A-Ba-z]/;\nconst primes = new Set([\"\\\\prime\", \"\\\\dprime\", \"\\\\trprime\", \"\\\\qprime\",\n  \"\\\\backprime\", \"\\\\backdprime\", \"\\\\backtrprime\"]);\n\nconst italicNumber = (text, variant, tag) => {\n  const mn = new mathMLTree.MathNode(tag, [text]);\n  const wrapper = new mathMLTree.MathNode(\"mstyle\", [mn]);\n  wrapper.style[\"font-style\"] = \"italic\";\n  wrapper.style[\"font-family\"] = \"Cambria, 'Times New Roman', serif\";\n  if (variant === \"bold-italic\") { wrapper.style[\"font-weight\"] = \"bold\"; }\n  return wrapper\n};\n\ndefineFunctionBuilders({\n  type: \"mathord\",\n  mathmlBuilder(group, style) {\n    const text = makeText(group.text, group.mode, style);\n    const codePoint = text.text.codePointAt(0);\n    // Test for upper-case Greek\n    const defaultVariant = (0x0390 < codePoint && codePoint < 0x03aa) ? \"normal\" : \"italic\";\n    const variant = getVariant(group, style) || defaultVariant;\n    if (variant === \"script\") {\n      text.text = variantChar(text.text, variant);\n      return new mathMLTree.MathNode(\"mi\", [text], [style.font])\n    } else if (variant !== \"italic\") {\n      text.text = variantChar(text.text, variant);\n    }\n    let node = new mathMLTree.MathNode(\"mi\", [text]);\n    // TODO: Handle U+1D49C - U+1D4CF per https://www.unicode.org/charts/PDF/U1D400.pdf\n    if (variant === \"normal\") {\n      node.setAttribute(\"mathvariant\", \"normal\");\n      if (text.text.length === 1) {\n        // A Firefox bug will apply spacing here, but there should be none. Fix it.\n        node = new mathMLTree.MathNode(\"mpadded\", [node]);\n        node.setAttribute(\"lspace\", \"0\");\n      }\n    }\n    return node\n  }\n});\n\ndefineFunctionBuilders({\n  type: \"textord\",\n  mathmlBuilder(group, style) {\n    let ch = group.text;\n    const codePoint = ch.codePointAt(0);\n    if (style.fontFamily === \"textsc\") {\n      // Convert small latin letters to small caps.\n      if (96 < codePoint && codePoint < 123) {\n        ch = smallCaps[ch];\n      }\n    }\n    const text = makeText(ch, group.mode, style);\n    const variant = getVariant(group, style) || \"normal\";\n\n    let node;\n    if (numberRegEx.test(group.text)) {\n      const tag = group.mode === \"text\" ? \"mtext\" : \"mn\";\n      if (variant === \"italic\" || variant === \"bold-italic\") {\n        return italicNumber(text, variant, tag)\n      } else {\n        if (variant !== \"normal\") {\n          text.text = text.text.split(\"\").map(c => variantChar(c, variant)).join(\"\");\n        }\n        node = new mathMLTree.MathNode(tag, [text]);\n      }\n    } else if (group.mode === \"text\") {\n      if (variant !== \"normal\") {\n        text.text = variantChar(text.text, variant);\n      }\n      node = new mathMLTree.MathNode(\"mtext\", [text]);\n    } else if (primes.has(group.text)) {\n      node = new mathMLTree.MathNode(\"mo\", [text]);\n      // TODO: If/when Chromium uses ssty variant for prime, remove the next line.\n      node.classes.push(\"tml-prime\");\n    } else {\n      const origText = text.text;\n      if (variant !== \"italic\") {\n        text.text = variantChar(text.text, variant);\n      }\n      node = new mathMLTree.MathNode(\"mi\", [text]);\n      if (text.text === origText && latinRegEx.test(origText)) {\n        node.setAttribute(\"mathvariant\", \"italic\");\n      }\n    }\n    return node\n  }\n});\n\n// A map of CSS-based spacing functions to their CSS class.\nconst cssSpace = {\n  \"\\\\nobreak\": \"nobreak\",\n  \"\\\\allowbreak\": \"allowbreak\"\n};\n\n// A lookup table to determine whether a spacing function/symbol should be\n// treated like a regular space character.  If a symbol or command is a key\n// in this table, then it should be a regular space character.  Furthermore,\n// the associated value may have a `className` specifying an extra CSS class\n// to add to the created `span`.\nconst regularSpace = {\n  \" \": {},\n  \"\\\\ \": {},\n  \"~\": {\n    className: \"nobreak\"\n  },\n  \"\\\\space\": {},\n  \"\\\\nobreakspace\": {\n    className: \"nobreak\"\n  }\n};\n\n// ParseNode<\"spacing\"> created in Parser.js from the \"spacing\" symbol Groups in\n// src/symbols.js.\ndefineFunctionBuilders({\n  type: \"spacing\",\n  mathmlBuilder(group, style) {\n    let node;\n\n    if (Object.prototype.hasOwnProperty.call(regularSpace, group.text)) {\n      // Firefox does not render a space in a <mtext> </mtext>. So write a no-break space.\n      // TODO: If Firefox fixes that bug, uncomment the next line and write ch into the node.\n      //const ch = (regularSpace[group.text].className === \"nobreak\") ? \"\\u00a0\" : \" \"\n      node = new mathMLTree.MathNode(\"mtext\", [new mathMLTree.TextNode(\"\\u00a0\")]);\n    } else if (Object.prototype.hasOwnProperty.call(cssSpace, group.text)) {\n      // MathML 3.0 calls for nobreak to occur in an <mo>, not an <mtext>\n      // Ref: https://www.w3.org/Math/draft-spec/mathml.html#chapter3_presm.lbattrs\n      node = new mathMLTree.MathNode(\"mo\");\n      if (group.text === \"\\\\nobreak\") {\n        node.setAttribute(\"linebreak\", \"nobreak\");\n      }\n    } else {\n      throw new ParseError(`Unknown type of space \"${group.text}\"`)\n    }\n\n    return node\n  }\n});\n\ndefineFunctionBuilders({\n  type: \"tag\"\n});\n\n// For a \\tag, the work usually done in a mathmlBuilder is instead done in buildMathML.js.\n// That way, a \\tag can be pulled out of the parse tree and wrapped around the outer node.\n\n// Non-mathy text, possibly in a font\nconst textFontFamilies = {\n  \"\\\\text\": undefined,\n  \"\\\\textrm\": \"textrm\",\n  \"\\\\textsf\": \"textsf\",\n  \"\\\\texttt\": \"texttt\",\n  \"\\\\textnormal\": \"textrm\",\n  \"\\\\textsc\": \"textsc\"      // small caps\n};\n\nconst textFontWeights = {\n  \"\\\\textbf\": \"textbf\",\n  \"\\\\textmd\": \"textmd\"\n};\n\nconst textFontShapes = {\n  \"\\\\textit\": \"textit\",\n  \"\\\\textup\": \"textup\"\n};\n\nconst styleWithFont = (group, style) => {\n  const font = group.font;\n  // Checks if the argument is a font family or a font style.\n  if (!font) {\n    return style;\n  } else if (textFontFamilies[font]) {\n    return style.withTextFontFamily(textFontFamilies[font]);\n  } else if (textFontWeights[font]) {\n    return style.withTextFontWeight(textFontWeights[font]);\n  } else if (font === \"\\\\emph\") {\n    return style.fontShape === \"textit\"\n      ? style.withTextFontShape(\"textup\")\n      : style.withTextFontShape(\"textit\")\n  }\n  return style.withTextFontShape(textFontShapes[font])\n};\n\ndefineFunction({\n  type: \"text\",\n  names: [\n    // Font families\n    \"\\\\text\",\n    \"\\\\textrm\",\n    \"\\\\textsf\",\n    \"\\\\texttt\",\n    \"\\\\textnormal\",\n    \"\\\\textsc\",\n    // Font weights\n    \"\\\\textbf\",\n    \"\\\\textmd\",\n    // Font Shapes\n    \"\\\\textit\",\n    \"\\\\textup\",\n    \"\\\\emph\"\n  ],\n  props: {\n    numArgs: 1,\n    argTypes: [\"text\"],\n    allowedInArgument: true,\n    allowedInText: true\n  },\n  handler({ parser, funcName }, args) {\n    const body = args[0];\n    return {\n      type: \"text\",\n      mode: parser.mode,\n      body: ordargument(body),\n      font: funcName\n    };\n  },\n  mathmlBuilder(group, style) {\n    const newStyle = styleWithFont(group, style);\n    const mrow = buildExpressionRow(group.body, newStyle);\n    return consolidateText(mrow)\n  }\n});\n\n// \\vcenter:  Vertically center the argument group on the math axis.\n\ndefineFunction({\n  type: \"vcenter\",\n  names: [\"\\\\vcenter\"],\n  props: {\n    numArgs: 1,\n    argTypes: [\"original\"],\n    allowedInText: false\n  },\n  handler({ parser }, args) {\n    return {\n      type: \"vcenter\",\n      mode: parser.mode,\n      body: args[0]\n    };\n  },\n  mathmlBuilder(group, style) {\n    // Use a math table to create vertically centered content.\n    const mtd = new mathMLTree.MathNode(\"mtd\", [buildGroup$1(group.body, style)]);\n    mtd.style.padding = \"0\";\n    const mtr = new mathMLTree.MathNode(\"mtr\", [mtd]);\n    return new mathMLTree.MathNode(\"mtable\", [mtr])\n  }\n});\n\ndefineFunction({\n  type: \"verb\",\n  names: [\"\\\\verb\"],\n  props: {\n    numArgs: 0,\n    allowedInText: true\n  },\n  handler(context, args, optArgs) {\n    // \\verb and \\verb* are dealt with directly in Parser.js.\n    // If we end up here, it's because of a failure to match the two delimiters\n    // in the regex in Lexer.js.  LaTeX raises the following error when \\verb is\n    // terminated by end of line (or file).\n    throw new ParseError(\"\\\\verb ended by end of line instead of matching delimiter\");\n  },\n  mathmlBuilder(group, style) {\n    const text = new mathMLTree.TextNode(makeVerb(group));\n    const node = new mathMLTree.MathNode(\"mtext\", [text]);\n    node.setAttribute(\"mathvariant\", \"monospace\");\n    return node;\n  }\n});\n\n/**\n * Converts verb group into body string.\n *\n * \\verb* replaces each space with an open box \\u2423\n * \\verb replaces each space with a no-break space \\xA0\n */\nconst makeVerb = (group) => group.body.replace(/ /g, group.star ? \"\\u2423\" : \"\\xA0\");\n\n/** Include this to ensure that all functions are defined. */\n\nconst functions = _functions;\n\n/**\n * The Lexer class handles tokenizing the input in various ways. Since our\n * parser expects us to be able to backtrack, the lexer allows lexing from any\n * given starting point.\n *\n * Its main exposed function is the `lex` function, which takes a position to\n * lex from and a type of token to lex. It defers to the appropriate `_innerLex`\n * function.\n *\n * The various `_innerLex` functions perform the actual lexing of different\n * kinds.\n */\n\n\n/* The following tokenRegex\n * - matches typical whitespace (but not NBSP etc.) using its first two groups\n * - does not match any control character \\x00-\\x1f except whitespace\n * - does not match a bare backslash\n * - matches any ASCII character except those just mentioned\n * - does not match the BMP private use area \\uE000-\\uF8FF\n * - does not match bare surrogate code units\n * - matches any BMP character except for those just described\n * - matches any valid Unicode surrogate pair\n * - mathches numerals\n * - matches a backslash followed by one or more whitespace characters\n * - matches a backslash followed by one or more letters then whitespace\n * - matches a backslash followed by any BMP character\n * Capturing groups:\n *   [1] regular whitespace\n *   [2] backslash followed by whitespace\n *   [3] anything else, which may include:\n *     [4] left character of \\verb*\n *     [5] left character of \\verb\n *     [6] backslash followed by word, excluding any trailing whitespace\n * Just because the Lexer matches something doesn't mean it's valid input:\n * If there is no matching function or symbol definition, the Parser will\n * still reject the input.\n */\nconst spaceRegexString = \"[ \\r\\n\\t]\";\nconst controlWordRegexString = \"\\\\\\\\[a-zA-Z@]+\";\nconst controlSymbolRegexString = \"\\\\\\\\[^\\uD800-\\uDFFF]\";\nconst controlWordWhitespaceRegexString = `(${controlWordRegexString})${spaceRegexString}*`;\nconst controlSpaceRegexString = \"\\\\\\\\(\\n|[ \\r\\t]+\\n?)[ \\r\\t]*\";\nconst combiningDiacriticalMarkString = \"[\\u0300-\\u036f]\";\nconst combiningDiacriticalMarksEndRegex = new RegExp(`${combiningDiacriticalMarkString}+$`);\nconst tokenRegexString =\n  `(${spaceRegexString}+)|` + // whitespace\n  `${controlSpaceRegexString}|` +  // whitespace\n  \"([!-\\\\[\\\\]-\\u2027\\u202A-\\uD7FF\\uF900-\\uFFFF]\" + // single codepoint\n  `${combiningDiacriticalMarkString}*` + // ...plus accents\n  \"|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]\" + // surrogate pair\n  `${combiningDiacriticalMarkString}*` + // ...plus accents\n  \"|\\\\\\\\verb\\\\*([^]).*?\\\\4\" + // \\verb*\n  \"|\\\\\\\\verb([^*a-zA-Z]).*?\\\\5\" + // \\verb unstarred\n  `|${controlWordWhitespaceRegexString}` + // \\macroName + spaces\n  `|${controlSymbolRegexString})`; // \\\\, \\', etc.\n\n/** Main Lexer class */\nclass Lexer {\n  constructor(input, settings) {\n    // Separate accents from characters\n    this.input = input;\n    this.settings = settings;\n    this.tokenRegex = new RegExp(tokenRegexString, 'g');\n    // Category codes. The lexer only supports comment characters (14) for now.\n    // MacroExpander additionally distinguishes active (13).\n    this.catcodes = {\n      \"%\": 14, // comment character\n      \"~\": 13  // active character\n    };\n  }\n\n  setCatcode(char, code) {\n    this.catcodes[char] = code;\n  }\n\n  /**\n   * This function lexes a single token.\n   */\n  lex() {\n    const input = this.input;\n    const pos = this.tokenRegex.lastIndex;\n    if (pos === input.length) {\n      return new Token(\"EOF\", new SourceLocation(this, pos, pos));\n    }\n    const match = this.tokenRegex.exec(input);\n    if (match === null || match.index !== pos) {\n      throw new ParseError(\n        `Unexpected character: '${input[pos]}'`,\n        new Token(input[pos], new SourceLocation(this, pos, pos + 1))\n      );\n    }\n    const text = match[6] || match[3] || (match[2] ? \"\\\\ \" : \" \");\n\n    if (this.catcodes[text] === 14) {\n      // comment character\n      const nlIndex = input.indexOf(\"\\n\", this.tokenRegex.lastIndex);\n      if (nlIndex === -1) {\n        this.tokenRegex.lastIndex = input.length; // EOF\n        if (this.settings.strict) {\n          throw new ParseError(\"% comment has no terminating newline; LaTeX would \" +\n              \"fail because of commenting the end of math mode\")\n        }\n      } else {\n        this.tokenRegex.lastIndex = nlIndex + 1;\n      }\n      return this.lex();\n    }\n\n    return new Token(text, new SourceLocation(this, pos, this.tokenRegex.lastIndex));\n  }\n}\n\n/**\n * A `Namespace` refers to a space of nameable things like macros or lengths,\n * which can be `set` either globally or local to a nested group, using an\n * undo stack similar to how TeX implements this functionality.\n * Performance-wise, `get` and local `set` take constant time, while global\n * `set` takes time proportional to the depth of group nesting.\n */\n\n\nclass Namespace {\n  /**\n   * Both arguments are optional.  The first argument is an object of\n   * built-in mappings which never change.  The second argument is an object\n   * of initial (global-level) mappings, which will constantly change\n   * according to any global/top-level `set`s done.\n   */\n  constructor(builtins = {}, globalMacros = {}) {\n    this.current = globalMacros;\n    this.builtins = builtins;\n    this.undefStack = [];\n  }\n\n  /**\n   * Start a new nested group, affecting future local `set`s.\n   */\n  beginGroup() {\n    this.undefStack.push({});\n  }\n\n  /**\n   * End current nested group, restoring values before the group began.\n   */\n  endGroup() {\n    if (this.undefStack.length === 0) {\n      throw new ParseError(\n        \"Unbalanced namespace destruction: attempt \" +\n          \"to pop global namespace; please report this as a bug\"\n      );\n    }\n    const undefs = this.undefStack.pop();\n    for (const undef in undefs) {\n      if (Object.prototype.hasOwnProperty.call(undefs, undef )) {\n        if (undefs[undef] === undefined) {\n          delete this.current[undef];\n        } else {\n          this.current[undef] = undefs[undef];\n        }\n      }\n    }\n  }\n\n  /**\n   * Detect whether `name` has a definition.  Equivalent to\n   * `get(name) != null`.\n   */\n  has(name) {\n    return Object.prototype.hasOwnProperty.call(this.current, name ) ||\n    Object.prototype.hasOwnProperty.call(this.builtins, name );\n  }\n\n  /**\n   * Get the current value of a name, or `undefined` if there is no value.\n   *\n   * Note: Do not use `if (namespace.get(...))` to detect whether a macro\n   * is defined, as the definition may be the empty string which evaluates\n   * to `false` in JavaScript.  Use `if (namespace.get(...) != null)` or\n   * `if (namespace.has(...))`.\n   */\n  get(name) {\n    if (Object.prototype.hasOwnProperty.call(this.current, name )) {\n      return this.current[name];\n    } else {\n      return this.builtins[name];\n    }\n  }\n\n  /**\n   * Set the current value of a name, and optionally set it globally too.\n   * Local set() sets the current value and (when appropriate) adds an undo\n   * operation to the undo stack.  Global set() may change the undo\n   * operation at every level, so takes time linear in their number.\n   */\n  set(name, value, global = false) {\n    if (global) {\n      // Global set is equivalent to setting in all groups.  Simulate this\n      // by destroying any undos currently scheduled for this name,\n      // and adding an undo with the *new* value (in case it later gets\n      // locally reset within this environment).\n      for (let i = 0; i < this.undefStack.length; i++) {\n        delete this.undefStack[i][name];\n      }\n      if (this.undefStack.length > 0) {\n        this.undefStack[this.undefStack.length - 1][name] = value;\n      }\n    } else {\n      // Undo this set at end of this group (possibly to `undefined`),\n      // unless an undo is already in place, in which case that older\n      // value is the correct one.\n      const top = this.undefStack[this.undefStack.length - 1];\n      if (top && !Object.prototype.hasOwnProperty.call(top, name )) {\n        top[name] = this.current[name];\n      }\n    }\n    this.current[name] = value;\n  }\n}\n\n/**\n * This file contains the \u201Cgullet\u201D where macros are expanded\n * until only non-macro tokens remain.\n */\n\n\n// List of commands that act like macros but aren't defined as a macro,\n// function, or symbol.  Used in `isDefined`.\nconst implicitCommands = {\n  \"^\": true, // Parser.js\n  _: true, // Parser.js\n  \"\\\\limits\": true, // Parser.js\n  \"\\\\nolimits\": true // Parser.js\n};\n\nclass MacroExpander {\n  constructor(input, settings, mode) {\n    this.settings = settings;\n    this.expansionCount = 0;\n    this.feed(input);\n    // Make new global namespace\n    this.macros = new Namespace(macros, settings.macros);\n    this.mode = mode;\n    this.stack = []; // contains tokens in REVERSE order\n  }\n\n  /**\n   * Feed a new input string to the same MacroExpander\n   * (with existing macros etc.).\n   */\n  feed(input) {\n    this.lexer = new Lexer(input, this.settings);\n  }\n\n  /**\n   * Switches between \"text\" and \"math\" modes.\n   */\n  switchMode(newMode) {\n    this.mode = newMode;\n  }\n\n  /**\n   * Start a new group nesting within all namespaces.\n   */\n  beginGroup() {\n    this.macros.beginGroup();\n  }\n\n  /**\n   * End current group nesting within all namespaces.\n   */\n  endGroup() {\n    this.macros.endGroup();\n  }\n\n  /**\n   * Returns the topmost token on the stack, without expanding it.\n   * Similar in behavior to TeX's `\\futurelet`.\n   */\n  future() {\n    if (this.stack.length === 0) {\n      this.pushToken(this.lexer.lex());\n    }\n    return this.stack[this.stack.length - 1]\n  }\n\n  /**\n   * Remove and return the next unexpanded token.\n   */\n  popToken() {\n    this.future(); // ensure non-empty stack\n    return this.stack.pop();\n  }\n\n  /**\n   * Add a given token to the token stack.  In particular, this get be used\n   * to put back a token returned from one of the other methods.\n   */\n  pushToken(token) {\n    this.stack.push(token);\n  }\n\n  /**\n   * Append an array of tokens to the token stack.\n   */\n  pushTokens(tokens) {\n    this.stack.push(...tokens);\n  }\n\n  /**\n   * Find an macro argument without expanding tokens and append the array of\n   * tokens to the token stack. Uses Token as a container for the result.\n   */\n  scanArgument(isOptional) {\n    let start;\n    let end;\n    let tokens;\n    if (isOptional) {\n      this.consumeSpaces(); // \\@ifnextchar gobbles any space following it\n      if (this.future().text !== \"[\") {\n        return null;\n      }\n      start = this.popToken(); // don't include [ in tokens\n      ({ tokens, end } = this.consumeArg([\"]\"]));\n    } else {\n      ({ tokens, start, end } = this.consumeArg());\n    }\n\n    // indicate the end of an argument\n    this.pushToken(new Token(\"EOF\", end.loc));\n\n    this.pushTokens(tokens);\n    return start.range(end, \"\");\n  }\n\n  /**\n   * Consume all following space tokens, without expansion.\n   */\n  consumeSpaces() {\n    for (;;) {\n      const token = this.future();\n      if (token.text === \" \") {\n        this.stack.pop();\n      } else {\n        break;\n      }\n    }\n  }\n\n  /**\n   * Consume an argument from the token stream, and return the resulting array\n   * of tokens and start/end token.\n   */\n  consumeArg(delims) {\n    // The argument for a delimited parameter is the shortest (possibly\n    // empty) sequence of tokens with properly nested {...} groups that is\n    // followed ... by this particular list of non-parameter tokens.\n    // The argument for an undelimited parameter is the next nonblank\n    // token, unless that token is \u2018{\u2019, when the argument will be the\n    // entire {...} group that follows.\n    const tokens = [];\n    const isDelimited = delims && delims.length > 0;\n    if (!isDelimited) {\n      // Ignore spaces between arguments.  As the TeXbook says:\n      // \"After you have said \u2018\\def\\row#1#2{...}\u2019, you are allowed to\n      //  put spaces between the arguments (e.g., \u2018\\row x n\u2019), because\n      //  TeX doesn\u2019t use single spaces as undelimited arguments.\"\n      this.consumeSpaces();\n    }\n    const start = this.future();\n    let tok;\n    let depth = 0;\n    let match = 0;\n    do {\n      tok = this.popToken();\n      tokens.push(tok);\n      if (tok.text === \"{\") {\n        ++depth;\n      } else if (tok.text === \"}\") {\n        --depth;\n        if (depth === -1) {\n          throw new ParseError(\"Extra }\", tok);\n        }\n      } else if (tok.text === \"EOF\") {\n        throw new ParseError(\n          \"Unexpected end of input in a macro argument\" +\n            \", expected '\" +\n            (delims && isDelimited ? delims[match] : \"}\") +\n            \"'\",\n          tok\n        );\n      }\n      if (delims && isDelimited) {\n        if ((depth === 0 || (depth === 1 && delims[match] === \"{\")) && tok.text === delims[match]) {\n          ++match;\n          if (match === delims.length) {\n            // don't include delims in tokens\n            tokens.splice(-match, match);\n            break;\n          }\n        } else {\n          match = 0;\n        }\n      }\n    } while (depth !== 0 || isDelimited);\n    // If the argument found ... has the form \u2018{<nested tokens>}\u2019,\n    // ... the outermost braces enclosing the argument are removed\n    if (start.text === \"{\" && tokens[tokens.length - 1].text === \"}\") {\n      tokens.pop();\n      tokens.shift();\n    }\n    tokens.reverse(); // to fit in with stack order\n    return { tokens, start, end: tok };\n  }\n\n  /**\n   * Consume the specified number of (delimited) arguments from the token\n   * stream and return the resulting array of arguments.\n   */\n  consumeArgs(numArgs, delimiters) {\n    if (delimiters) {\n      if (delimiters.length !== numArgs + 1) {\n        throw new ParseError(\"The length of delimiters doesn't match the number of args!\");\n      }\n      const delims = delimiters[0];\n      for (let i = 0; i < delims.length; i++) {\n        const tok = this.popToken();\n        if (delims[i] !== tok.text) {\n          throw new ParseError(\"Use of the macro doesn't match its definition\", tok);\n        }\n      }\n    }\n\n    const args = [];\n    for (let i = 0; i < numArgs; i++) {\n      args.push(this.consumeArg(delimiters && delimiters[i + 1]).tokens);\n    }\n    return args;\n  }\n\n  /**\n   * Expand the next token only once if possible.\n   *\n   * If the token is expanded, the resulting tokens will be pushed onto\n   * the stack in reverse order, and the number of such tokens will be\n   * returned.  This number might be zero or positive.\n   *\n   * If not, the return value is `false`, and the next token remains at the\n   * top of the stack.\n   *\n   * In either case, the next token will be on the top of the stack,\n   * or the stack will be empty (in case of empty expansion\n   * and no other tokens).\n   *\n   * Used to implement `expandAfterFuture` and `expandNextToken`.\n   *\n   * If expandableOnly, only expandable tokens are expanded and\n   * an undefined control sequence results in an error.\n   */\n  expandOnce(expandableOnly) {\n    const topToken = this.popToken();\n    const name = topToken.text;\n    const expansion = !topToken.noexpand ? this._getExpansion(name) : null;\n    if (expansion == null || (expandableOnly && expansion.unexpandable)) {\n      if (expandableOnly && expansion == null && name[0] === \"\\\\\" && !this.isDefined(name)) {\n        throw new ParseError(\"Undefined control sequence: \" + name);\n      }\n      this.pushToken(topToken);\n      return false;\n    }\n    this.expansionCount++;\n    if (this.expansionCount > this.settings.maxExpand) {\n      throw new ParseError(\n        \"Too many expansions: infinite loop or \" + \"need to increase maxExpand setting\"\n      );\n    }\n    let tokens = expansion.tokens;\n    const args = this.consumeArgs(expansion.numArgs, expansion.delimiters);\n    if (expansion.numArgs) {\n      // paste arguments in place of the placeholders\n      tokens = tokens.slice(); // make a shallow copy\n      for (let i = tokens.length - 1; i >= 0; --i) {\n        let tok = tokens[i];\n        if (tok.text === \"#\") {\n          if (i === 0) {\n            throw new ParseError(\"Incomplete placeholder at end of macro body\", tok);\n          }\n          tok = tokens[--i]; // next token on stack\n          if (tok.text === \"#\") {\n            // ## \u2192 #\n            tokens.splice(i + 1, 1); // drop first #\n          } else if (/^[1-9]$/.test(tok.text)) {\n            // replace the placeholder with the indicated argument\n            tokens.splice(i, 2, ...args[+tok.text - 1]);\n          } else {\n            throw new ParseError(\"Not a valid argument number\", tok);\n          }\n        }\n      }\n    }\n    // Concatenate expansion onto top of stack.\n    this.pushTokens(tokens);\n    return tokens.length;\n  }\n\n  /**\n   * Expand the next token only once (if possible), and return the resulting\n   * top token on the stack (without removing anything from the stack).\n   * Similar in behavior to TeX's `\\expandafter\\futurelet`.\n   * Equivalent to expandOnce() followed by future().\n   */\n  expandAfterFuture() {\n    this.expandOnce();\n    return this.future();\n  }\n\n  /**\n   * Recursively expand first token, then return first non-expandable token.\n   */\n  expandNextToken() {\n    for (;;) {\n      if (this.expandOnce() === false) { // fully expanded\n        const token = this.stack.pop();\n        // The token after \\noexpand is interpreted as if its meaning were \u2018\\relax\u2019\n        if (token.treatAsRelax) {\n          token.text = \"\\\\relax\";\n        }\n        return token\n      }\n    }\n\n    // This pathway is impossible.\n    throw new Error(); // eslint-disable-line no-unreachable\n  }\n\n  /**\n   * Fully expand the given macro name and return the resulting list of\n   * tokens, or return `undefined` if no such macro is defined.\n   */\n  expandMacro(name) {\n    return this.macros.has(name) ? this.expandTokens([new Token(name)]) : undefined;\n  }\n\n  /**\n   * Fully expand the given token stream and return the resulting list of\n   * tokens.  Note that the input tokens are in reverse order, but the\n   * output tokens are in forward order.\n   */\n  expandTokens(tokens) {\n    const output = [];\n    const oldStackLength = this.stack.length;\n    this.pushTokens(tokens);\n    while (this.stack.length > oldStackLength) {\n      // Expand only expandable tokens\n      if (this.expandOnce(true) === false) {  // fully expanded\n        const token = this.stack.pop();\n        if (token.treatAsRelax) {\n          // the expansion of \\noexpand is the token itself\n          token.noexpand = false;\n          token.treatAsRelax = false;\n        }\n        output.push(token);\n      }\n    }\n    return output;\n  }\n\n  /**\n   * Fully expand the given macro name and return the result as a string,\n   * or return `undefined` if no such macro is defined.\n   */\n  expandMacroAsText(name) {\n    const tokens = this.expandMacro(name);\n    if (tokens) {\n      return tokens.map((token) => token.text).join(\"\");\n    } else {\n      return tokens;\n    }\n  }\n\n  /**\n   * Returns the expanded macro as a reversed array of tokens and a macro\n   * argument count.  Or returns `null` if no such macro.\n   */\n  _getExpansion(name) {\n    const definition = this.macros.get(name);\n    if (definition == null) {\n      // mainly checking for undefined here\n      return definition;\n    }\n    // If a single character has an associated catcode other than 13\n    // (active character), then don't expand it.\n    if (name.length === 1) {\n      const catcode = this.lexer.catcodes[name];\n      if (catcode != null && catcode !== 13) {\n        return\n      }\n    }\n    const expansion = typeof definition === \"function\" ? definition(this) : definition;\n    if (typeof expansion === \"string\") {\n      let numArgs = 0;\n      if (expansion.indexOf(\"#\") !== -1) {\n        const stripped = expansion.replace(/##/g, \"\");\n        while (stripped.indexOf(\"#\" + (numArgs + 1)) !== -1) {\n          ++numArgs;\n        }\n      }\n      const bodyLexer = new Lexer(expansion, this.settings);\n      const tokens = [];\n      let tok = bodyLexer.lex();\n      while (tok.text !== \"EOF\") {\n        tokens.push(tok);\n        tok = bodyLexer.lex();\n      }\n      tokens.reverse(); // to fit in with stack using push and pop\n      const expanded = { tokens, numArgs };\n      return expanded;\n    }\n\n    return expansion;\n  }\n\n  /**\n   * Determine whether a command is currently \"defined\" (has some\n   * functionality), meaning that it's a macro (in the current group),\n   * a function, a symbol, or one of the special commands listed in\n   * `implicitCommands`.\n   */\n  isDefined(name) {\n    return (\n      this.macros.has(name) ||\n      Object.prototype.hasOwnProperty.call(functions, name ) ||\n      Object.prototype.hasOwnProperty.call(symbols.math, name ) ||\n      Object.prototype.hasOwnProperty.call(symbols.text, name ) ||\n      Object.prototype.hasOwnProperty.call(implicitCommands, name )\n    );\n  }\n\n  /**\n   * Determine whether a command is expandable.\n   */\n  isExpandable(name) {\n    const macro = this.macros.get(name);\n    return macro != null\n      ? typeof macro === \"string\" || typeof macro === \"function\" || !macro.unexpandable\n      : Object.prototype.hasOwnProperty.call(functions, name ) && !functions[name].primitive;\n  }\n}\n\n// Helpers for Parser.js handling of Unicode (sub|super)script characters.\n\nconst unicodeSubRegEx = /^[\u208A\u208B\u208C\u208D\u208E\u2080\u2081\u2082\u2083\u2084\u2085\u2086\u2087\u2088\u2089\u2090\u2091\u2095\u1D62\u2C7C\u2096\u2097\u2098\u2099\u2092\u209A\u1D63\u209B\u209C\u1D64\u1D65\u2093\u1D66\u1D67\u1D68\u1D69\u1D6A]/;\n\nconst uSubsAndSups = Object.freeze({\n  '\u208A': '+',\n  '\u208B': '-',\n  '\u208C': '=',\n  '\u208D': '(',\n  '\u208E': ')',\n  '\u2080': '0',\n  '\u2081': '1',\n  '\u2082': '2',\n  '\u2083': '3',\n  '\u2084': '4',\n  '\u2085': '5',\n  '\u2086': '6',\n  '\u2087': '7',\n  '\u2088': '8',\n  '\u2089': '9',\n  '\\u2090': 'a',\n  '\\u2091': 'e',\n  '\\u2095': 'h',\n  '\\u1D62': 'i',\n  '\\u2C7C': 'j',\n  '\\u2096': 'k',\n  '\\u2097': 'l',\n  '\\u2098': 'm',\n  '\\u2099': 'n',\n  '\\u2092': 'o',\n  '\\u209A': 'p',\n  '\\u1D63': 'r',\n  '\\u209B': 's',\n  '\\u209C': 't',\n  '\\u1D64': 'u',\n  '\\u1D65': 'v',\n  '\\u2093': 'x',\n  '\\u1D66': '\u03B2',\n  '\\u1D67': '\u03B3',\n  '\\u1D68': '\u03C1',\n  '\\u1D69': '\\u03d5',\n  '\\u1D6A': '\u03C7',\n  '\u207A': '+',\n  '\u207B': '-',\n  '\u207C': '=',\n  '\u207D': '(',\n  '\u207E': ')',\n  '\u2070': '0',\n  '\u00B9': '1',\n  '\u00B2': '2',\n  '\u00B3': '3',\n  '\u2074': '4',\n  '\u2075': '5',\n  '\u2076': '6',\n  '\u2077': '7',\n  '\u2078': '8',\n  '\u2079': '9',\n  '\\u1D2C': 'A',\n  '\\u1D2E': 'B',\n  '\\u1D30': 'D',\n  '\\u1D31': 'E',\n  '\\u1D33': 'G',\n  '\\u1D34': 'H',\n  '\\u1D35': 'I',\n  '\\u1D36': 'J',\n  '\\u1D37': 'K',\n  '\\u1D38': 'L',\n  '\\u1D39': 'M',\n  '\\u1D3A': 'N',\n  '\\u1D3C': 'O',\n  '\\u1D3E': 'P',\n  '\\u1D3F': 'R',\n  '\\u1D40': 'T',\n  '\\u1D41': 'U',\n  '\\u2C7D': 'V',\n  '\\u1D42': 'W',\n  '\\u1D43': 'a',\n  '\\u1D47': 'b',\n  '\\u1D9C': 'c',\n  '\\u1D48': 'd',\n  '\\u1D49': 'e',\n  '\\u1DA0': 'f',\n  '\\u1D4D': 'g',\n  '\\u02B0': 'h',\n  '\\u2071': 'i',\n  '\\u02B2': 'j',\n  '\\u1D4F': 'k',\n  '\\u02E1': 'l',\n  '\\u1D50': 'm',\n  '\\u207F': 'n',\n  '\\u1D52': 'o',\n  '\\u1D56': 'p',\n  '\\u02B3': 'r',\n  '\\u02E2': 's',\n  '\\u1D57': 't',\n  '\\u1D58': 'u',\n  '\\u1D5B': 'v',\n  '\\u02B7': 'w',\n  '\\u02E3': 'x',\n  '\\u02B8': 'y',\n  '\\u1DBB': 'z',\n  '\\u1D5D': '\u03B2',\n  '\\u1D5E': '\u03B3',\n  '\\u1D5F': '\u03B4',\n  '\\u1D60': '\\u03d5',\n  '\\u1D61': '\u03C7',\n  '\\u1DBF': '\u03B8'\n});\n\n// Used for Unicode input of calligraphic and script letters\nconst asciiFromScript = Object.freeze({\n  \"\\ud835\\udc9c\": \"A\",\n  \"\\u212c\": \"B\",\n  \"\\ud835\\udc9e\": \"C\",\n  \"\\ud835\\udc9f\": \"D\",\n  \"\\u2130\": \"E\",\n  \"\\u2131\": \"F\",\n  \"\\ud835\\udca2\": \"G\",\n  \"\\u210B\": \"H\",\n  \"\\u2110\": \"I\",\n  \"\\ud835\\udca5\": \"J\",\n  \"\\ud835\\udca6\": \"K\",\n  \"\\u2112\": \"L\",\n  \"\\u2133\": \"M\",\n  \"\\ud835\\udca9\": \"N\",\n  \"\\ud835\\udcaa\": \"O\",\n  \"\\ud835\\udcab\": \"P\",\n  \"\\ud835\\udcac\": \"Q\",\n  \"\\u211B\": \"R\",\n  \"\\ud835\\udcae\": \"S\",\n  \"\\ud835\\udcaf\": \"T\",\n  \"\\ud835\\udcb0\": \"U\",\n  \"\\ud835\\udcb1\": \"V\",\n  \"\\ud835\\udcb2\": \"W\",\n  \"\\ud835\\udcb3\": \"X\",\n  \"\\ud835\\udcb4\": \"Y\",\n  \"\\ud835\\udcb5\": \"Z\"\n});\n\n// Mapping of Unicode accent characters to their LaTeX equivalent in text and\n// math mode (when they exist).\nvar unicodeAccents = {\n  \"\\u0301\": { text: \"\\\\'\", math: \"\\\\acute\" },\n  \"\\u0300\": { text: \"\\\\`\", math: \"\\\\grave\" },\n  \"\\u0308\": { text: '\\\\\"', math: \"\\\\ddot\" },\n  \"\\u0303\": { text: \"\\\\~\", math: \"\\\\tilde\" },\n  \"\\u0304\": { text: \"\\\\=\", math: \"\\\\bar\" },\n  \"\\u0306\": { text: \"\\\\u\", math: \"\\\\breve\" },\n  \"\\u030c\": { text: \"\\\\v\", math: \"\\\\check\" },\n  \"\\u0302\": { text: \"\\\\^\", math: \"\\\\hat\" },\n  \"\\u0307\": { text: \"\\\\.\", math: \"\\\\dot\" },\n  \"\\u030a\": { text: \"\\\\r\", math: \"\\\\mathring\" },\n  \"\\u030b\": { text: \"\\\\H\" },\n  '\\u0327': { text: '\\\\c' }\n};\n\nvar unicodeSymbols = {\n  \"\u00E1\": \"a\u0301\",\n  \"\u00E0\": \"a\u0300\",\n  \"\u00E4\": \"a\u0308\",\n  \"\u01DF\": \"a\u0308\u0304\",\n  \"\u00E3\": \"a\u0303\",\n  \"\u0101\": \"a\u0304\",\n  \"\u0103\": \"a\u0306\",\n  \"\u1EAF\": \"a\u0306\u0301\",\n  \"\u1EB1\": \"a\u0306\u0300\",\n  \"\u1EB5\": \"a\u0306\u0303\",\n  \"\u01CE\": \"a\u030C\",\n  \"\u00E2\": \"a\u0302\",\n  \"\u1EA5\": \"a\u0302\u0301\",\n  \"\u1EA7\": \"a\u0302\u0300\",\n  \"\u1EAB\": \"a\u0302\u0303\",\n  \"\u0227\": \"a\u0307\",\n  \"\u01E1\": \"a\u0307\u0304\",\n  \"\u00E5\": \"a\u030A\",\n  \"\u01FB\": \"a\u030A\u0301\",\n  \"\u1E03\": \"b\u0307\",\n  \"\u0107\": \"c\u0301\",\n  \"\u010D\": \"c\u030C\",\n  \"\u0109\": \"c\u0302\",\n  \"\u010B\": \"c\u0307\",\n  \"\u010F\": \"d\u030C\",\n  \"\u1E0B\": \"d\u0307\",\n  \"\u00E9\": \"e\u0301\",\n  \"\u00E8\": \"e\u0300\",\n  \"\u00EB\": \"e\u0308\",\n  \"\u1EBD\": \"e\u0303\",\n  \"\u0113\": \"e\u0304\",\n  \"\u1E17\": \"e\u0304\u0301\",\n  \"\u1E15\": \"e\u0304\u0300\",\n  \"\u0115\": \"e\u0306\",\n  \"\u011B\": \"e\u030C\",\n  \"\u00EA\": \"e\u0302\",\n  \"\u1EBF\": \"e\u0302\u0301\",\n  \"\u1EC1\": \"e\u0302\u0300\",\n  \"\u1EC5\": \"e\u0302\u0303\",\n  \"\u0117\": \"e\u0307\",\n  \"\u1E1F\": \"f\u0307\",\n  \"\u01F5\": \"g\u0301\",\n  \"\u1E21\": \"g\u0304\",\n  \"\u011F\": \"g\u0306\",\n  \"\u01E7\": \"g\u030C\",\n  \"\u011D\": \"g\u0302\",\n  \"\u0121\": \"g\u0307\",\n  \"\u1E27\": \"h\u0308\",\n  \"\u021F\": \"h\u030C\",\n  \"\u0125\": \"h\u0302\",\n  \"\u1E23\": \"h\u0307\",\n  \"\u00ED\": \"i\u0301\",\n  \"\u00EC\": \"i\u0300\",\n  \"\u00EF\": \"i\u0308\",\n  \"\u1E2F\": \"i\u0308\u0301\",\n  \"\u0129\": \"i\u0303\",\n  \"\u012B\": \"i\u0304\",\n  \"\u012D\": \"i\u0306\",\n  \"\u01D0\": \"i\u030C\",\n  \"\u00EE\": \"i\u0302\",\n  \"\u01F0\": \"j\u030C\",\n  \"\u0135\": \"j\u0302\",\n  \"\u1E31\": \"k\u0301\",\n  \"\u01E9\": \"k\u030C\",\n  \"\u013A\": \"l\u0301\",\n  \"\u013E\": \"l\u030C\",\n  \"\u1E3F\": \"m\u0301\",\n  \"\u1E41\": \"m\u0307\",\n  \"\u0144\": \"n\u0301\",\n  \"\u01F9\": \"n\u0300\",\n  \"\u00F1\": \"n\u0303\",\n  \"\u0148\": \"n\u030C\",\n  \"\u1E45\": \"n\u0307\",\n  \"\u00F3\": \"o\u0301\",\n  \"\u00F2\": \"o\u0300\",\n  \"\u00F6\": \"o\u0308\",\n  \"\u022B\": \"o\u0308\u0304\",\n  \"\u00F5\": \"o\u0303\",\n  \"\u1E4D\": \"o\u0303\u0301\",\n  \"\u1E4F\": \"o\u0303\u0308\",\n  \"\u022D\": \"o\u0303\u0304\",\n  \"\u014D\": \"o\u0304\",\n  \"\u1E53\": \"o\u0304\u0301\",\n  \"\u1E51\": \"o\u0304\u0300\",\n  \"\u014F\": \"o\u0306\",\n  \"\u01D2\": \"o\u030C\",\n  \"\u00F4\": \"o\u0302\",\n  \"\u1ED1\": \"o\u0302\u0301\",\n  \"\u1ED3\": \"o\u0302\u0300\",\n  \"\u1ED7\": \"o\u0302\u0303\",\n  \"\u022F\": \"o\u0307\",\n  \"\u0231\": \"o\u0307\u0304\",\n  \"\u0151\": \"o\u030B\",\n  \"\u1E55\": \"p\u0301\",\n  \"\u1E57\": \"p\u0307\",\n  \"\u0155\": \"r\u0301\",\n  \"\u0159\": \"r\u030C\",\n  \"\u1E59\": \"r\u0307\",\n  \"\u015B\": \"s\u0301\",\n  \"\u1E65\": \"s\u0301\u0307\",\n  \"\u0161\": \"s\u030C\",\n  \"\u1E67\": \"s\u030C\u0307\",\n  \"\u015D\": \"s\u0302\",\n  \"\u1E61\": \"s\u0307\",\n  \"\u1E97\": \"t\u0308\",\n  \"\u0165\": \"t\u030C\",\n  \"\u1E6B\": \"t\u0307\",\n  \"\u00FA\": \"u\u0301\",\n  \"\u00F9\": \"u\u0300\",\n  \"\u00FC\": \"u\u0308\",\n  \"\u01D8\": \"u\u0308\u0301\",\n  \"\u01DC\": \"u\u0308\u0300\",\n  \"\u01D6\": \"u\u0308\u0304\",\n  \"\u01DA\": \"u\u0308\u030C\",\n  \"\u0169\": \"u\u0303\",\n  \"\u1E79\": \"u\u0303\u0301\",\n  \"\u016B\": \"u\u0304\",\n  \"\u1E7B\": \"u\u0304\u0308\",\n  \"\u016D\": \"u\u0306\",\n  \"\u01D4\": \"u\u030C\",\n  \"\u00FB\": \"u\u0302\",\n  \"\u016F\": \"u\u030A\",\n  \"\u0171\": \"u\u030B\",\n  \"\u1E7D\": \"v\u0303\",\n  \"\u1E83\": \"w\u0301\",\n  \"\u1E81\": \"w\u0300\",\n  \"\u1E85\": \"w\u0308\",\n  \"\u0175\": \"w\u0302\",\n  \"\u1E87\": \"w\u0307\",\n  \"\u1E98\": \"w\u030A\",\n  \"\u1E8D\": \"x\u0308\",\n  \"\u1E8B\": \"x\u0307\",\n  \"\u00FD\": \"y\u0301\",\n  \"\u1EF3\": \"y\u0300\",\n  \"\u00FF\": \"y\u0308\",\n  \"\u1EF9\": \"y\u0303\",\n  \"\u0233\": \"y\u0304\",\n  \"\u0177\": \"y\u0302\",\n  \"\u1E8F\": \"y\u0307\",\n  \"\u1E99\": \"y\u030A\",\n  \"\u017A\": \"z\u0301\",\n  \"\u017E\": \"z\u030C\",\n  \"\u1E91\": \"z\u0302\",\n  \"\u017C\": \"z\u0307\",\n  \"\u00C1\": \"A\u0301\",\n  \"\u00C0\": \"A\u0300\",\n  \"\u00C4\": \"A\u0308\",\n  \"\u01DE\": \"A\u0308\u0304\",\n  \"\u00C3\": \"A\u0303\",\n  \"\u0100\": \"A\u0304\",\n  \"\u0102\": \"A\u0306\",\n  \"\u1EAE\": \"A\u0306\u0301\",\n  \"\u1EB0\": \"A\u0306\u0300\",\n  \"\u1EB4\": \"A\u0306\u0303\",\n  \"\u01CD\": \"A\u030C\",\n  \"\u00C2\": \"A\u0302\",\n  \"\u1EA4\": \"A\u0302\u0301\",\n  \"\u1EA6\": \"A\u0302\u0300\",\n  \"\u1EAA\": \"A\u0302\u0303\",\n  \"\u0226\": \"A\u0307\",\n  \"\u01E0\": \"A\u0307\u0304\",\n  \"\u00C5\": \"A\u030A\",\n  \"\u01FA\": \"A\u030A\u0301\",\n  \"\u1E02\": \"B\u0307\",\n  \"\u0106\": \"C\u0301\",\n  \"\u010C\": \"C\u030C\",\n  \"\u0108\": \"C\u0302\",\n  \"\u010A\": \"C\u0307\",\n  \"\u010E\": \"D\u030C\",\n  \"\u1E0A\": \"D\u0307\",\n  \"\u00C9\": \"E\u0301\",\n  \"\u00C8\": \"E\u0300\",\n  \"\u00CB\": \"E\u0308\",\n  \"\u1EBC\": \"E\u0303\",\n  \"\u0112\": \"E\u0304\",\n  \"\u1E16\": \"E\u0304\u0301\",\n  \"\u1E14\": \"E\u0304\u0300\",\n  \"\u0114\": \"E\u0306\",\n  \"\u011A\": \"E\u030C\",\n  \"\u00CA\": \"E\u0302\",\n  \"\u1EBE\": \"E\u0302\u0301\",\n  \"\u1EC0\": \"E\u0302\u0300\",\n  \"\u1EC4\": \"E\u0302\u0303\",\n  \"\u0116\": \"E\u0307\",\n  \"\u1E1E\": \"F\u0307\",\n  \"\u01F4\": \"G\u0301\",\n  \"\u1E20\": \"G\u0304\",\n  \"\u011E\": \"G\u0306\",\n  \"\u01E6\": \"G\u030C\",\n  \"\u011C\": \"G\u0302\",\n  \"\u0120\": \"G\u0307\",\n  \"\u1E26\": \"H\u0308\",\n  \"\u021E\": \"H\u030C\",\n  \"\u0124\": \"H\u0302\",\n  \"\u1E22\": \"H\u0307\",\n  \"\u00CD\": \"I\u0301\",\n  \"\u00CC\": \"I\u0300\",\n  \"\u00CF\": \"I\u0308\",\n  \"\u1E2E\": \"I\u0308\u0301\",\n  \"\u0128\": \"I\u0303\",\n  \"\u012A\": \"I\u0304\",\n  \"\u012C\": \"I\u0306\",\n  \"\u01CF\": \"I\u030C\",\n  \"\u00CE\": \"I\u0302\",\n  \"\u0130\": \"I\u0307\",\n  \"\u0134\": \"J\u0302\",\n  \"\u1E30\": \"K\u0301\",\n  \"\u01E8\": \"K\u030C\",\n  \"\u0139\": \"L\u0301\",\n  \"\u013D\": \"L\u030C\",\n  \"\u1E3E\": \"M\u0301\",\n  \"\u1E40\": \"M\u0307\",\n  \"\u0143\": \"N\u0301\",\n  \"\u01F8\": \"N\u0300\",\n  \"\u00D1\": \"N\u0303\",\n  \"\u0147\": \"N\u030C\",\n  \"\u1E44\": \"N\u0307\",\n  \"\u00D3\": \"O\u0301\",\n  \"\u00D2\": \"O\u0300\",\n  \"\u00D6\": \"O\u0308\",\n  \"\u022A\": \"O\u0308\u0304\",\n  \"\u00D5\": \"O\u0303\",\n  \"\u1E4C\": \"O\u0303\u0301\",\n  \"\u1E4E\": \"O\u0303\u0308\",\n  \"\u022C\": \"O\u0303\u0304\",\n  \"\u014C\": \"O\u0304\",\n  \"\u1E52\": \"O\u0304\u0301\",\n  \"\u1E50\": \"O\u0304\u0300\",\n  \"\u014E\": \"O\u0306\",\n  \"\u01D1\": \"O\u030C\",\n  \"\u00D4\": \"O\u0302\",\n  \"\u1ED0\": \"O\u0302\u0301\",\n  \"\u1ED2\": \"O\u0302\u0300\",\n  \"\u1ED6\": \"O\u0302\u0303\",\n  \"\u022E\": \"O\u0307\",\n  \"\u0230\": \"O\u0307\u0304\",\n  \"\u0150\": \"O\u030B\",\n  \"\u1E54\": \"P\u0301\",\n  \"\u1E56\": \"P\u0307\",\n  \"\u0154\": \"R\u0301\",\n  \"\u0158\": \"R\u030C\",\n  \"\u1E58\": \"R\u0307\",\n  \"\u015A\": \"S\u0301\",\n  \"\u1E64\": \"S\u0301\u0307\",\n  \"\u0160\": \"S\u030C\",\n  \"\u1E66\": \"S\u030C\u0307\",\n  \"\u015C\": \"S\u0302\",\n  \"\u1E60\": \"S\u0307\",\n  \"\u0164\": \"T\u030C\",\n  \"\u1E6A\": \"T\u0307\",\n  \"\u00DA\": \"U\u0301\",\n  \"\u00D9\": \"U\u0300\",\n  \"\u00DC\": \"U\u0308\",\n  \"\u01D7\": \"U\u0308\u0301\",\n  \"\u01DB\": \"U\u0308\u0300\",\n  \"\u01D5\": \"U\u0308\u0304\",\n  \"\u01D9\": \"U\u0308\u030C\",\n  \"\u0168\": \"U\u0303\",\n  \"\u1E78\": \"U\u0303\u0301\",\n  \"\u016A\": \"U\u0304\",\n  \"\u1E7A\": \"U\u0304\u0308\",\n  \"\u016C\": \"U\u0306\",\n  \"\u01D3\": \"U\u030C\",\n  \"\u00DB\": \"U\u0302\",\n  \"\u016E\": \"U\u030A\",\n  \"\u0170\": \"U\u030B\",\n  \"\u1E7C\": \"V\u0303\",\n  \"\u1E82\": \"W\u0301\",\n  \"\u1E80\": \"W\u0300\",\n  \"\u1E84\": \"W\u0308\",\n  \"\u0174\": \"W\u0302\",\n  \"\u1E86\": \"W\u0307\",\n  \"\u1E8C\": \"X\u0308\",\n  \"\u1E8A\": \"X\u0307\",\n  \"\u00DD\": \"Y\u0301\",\n  \"\u1EF2\": \"Y\u0300\",\n  \"\u0178\": \"Y\u0308\",\n  \"\u1EF8\": \"Y\u0303\",\n  \"\u0232\": \"Y\u0304\",\n  \"\u0176\": \"Y\u0302\",\n  \"\u1E8E\": \"Y\u0307\",\n  \"\u0179\": \"Z\u0301\",\n  \"\u017D\": \"Z\u030C\",\n  \"\u1E90\": \"Z\u0302\",\n  \"\u017B\": \"Z\u0307\",\n  \"\u03AC\": \"\u03B1\u0301\",\n  \"\u1F70\": \"\u03B1\u0300\",\n  \"\u1FB1\": \"\u03B1\u0304\",\n  \"\u1FB0\": \"\u03B1\u0306\",\n  \"\u03AD\": \"\u03B5\u0301\",\n  \"\u1F72\": \"\u03B5\u0300\",\n  \"\u03AE\": \"\u03B7\u0301\",\n  \"\u1F74\": \"\u03B7\u0300\",\n  \"\u03AF\": \"\u03B9\u0301\",\n  \"\u1F76\": \"\u03B9\u0300\",\n  \"\u03CA\": \"\u03B9\u0308\",\n  \"\u0390\": \"\u03B9\u0308\u0301\",\n  \"\u1FD2\": \"\u03B9\u0308\u0300\",\n  \"\u1FD1\": \"\u03B9\u0304\",\n  \"\u1FD0\": \"\u03B9\u0306\",\n  \"\u03CC\": \"\u03BF\u0301\",\n  \"\u1F78\": \"\u03BF\u0300\",\n  \"\u03CD\": \"\u03C5\u0301\",\n  \"\u1F7A\": \"\u03C5\u0300\",\n  \"\u03CB\": \"\u03C5\u0308\",\n  \"\u03B0\": \"\u03C5\u0308\u0301\",\n  \"\u1FE2\": \"\u03C5\u0308\u0300\",\n  \"\u1FE1\": \"\u03C5\u0304\",\n  \"\u1FE0\": \"\u03C5\u0306\",\n  \"\u03CE\": \"\u03C9\u0301\",\n  \"\u1F7C\": \"\u03C9\u0300\",\n  \"\u038E\": \"\u03A5\u0301\",\n  \"\u1FEA\": \"\u03A5\u0300\",\n  \"\u03AB\": \"\u03A5\u0308\",\n  \"\u1FE9\": \"\u03A5\u0304\",\n  \"\u1FE8\": \"\u03A5\u0306\",\n  \"\u038F\": \"\u03A9\u0301\",\n  \"\u1FFA\": \"\u03A9\u0300\"\n};\n\n/* eslint no-constant-condition:0 */\n\nconst binLeftCancellers = [\"bin\", \"op\", \"open\", \"punct\", \"rel\"];\nconst sizeRegEx = /([-+]?) *(\\d+(?:\\.\\d*)?|\\.\\d+) *([a-z]{2})/;\nconst textRegEx = /^ *\\\\text/;\n\n/**\n * This file contains the parser used to parse out a TeX expression from the\n * input. Since TeX isn't context-free, standard parsers don't work particularly\n * well.\n *\n * The strategy of this parser is as such:\n *\n * The main functions (the `.parse...` ones) take a position in the current\n * parse string to parse tokens from. The lexer (found in Lexer.js, stored at\n * this.gullet.lexer) also supports pulling out tokens at arbitrary places. When\n * individual tokens are needed at a position, the lexer is called to pull out a\n * token, which is then used.\n *\n * The parser has a property called \"mode\" indicating the mode that\n * the parser is currently in. Currently it has to be one of \"math\" or\n * \"text\", which denotes whether the current environment is a math-y\n * one or a text-y one (e.g. inside \\text). Currently, this serves to\n * limit the functions which can be used in text mode.\n *\n * The main functions then return an object which contains the useful data that\n * was parsed at its given point, and a new position at the end of the parsed\n * data. The main functions can call each other and continue the parsing by\n * using the returned position as a new starting point.\n *\n * There are also extra `.handle...` functions, which pull out some reused\n * functionality into self-contained functions.\n *\n * The functions return ParseNodes.\n */\n\nclass Parser {\n  constructor(input, settings, isPreamble = false) {\n    // Start in math mode\n    this.mode = \"math\";\n    // Create a new macro expander (gullet) and (indirectly via that) also a\n    // new lexer (mouth) for this parser (stomach, in the language of TeX)\n    this.gullet = new MacroExpander(input, settings, this.mode);\n    // Store the settings for use in parsing\n    this.settings = settings;\n    // Are we defining a preamble?\n    this.isPreamble = isPreamble;\n    // Count leftright depth (for \\middle errors)\n    this.leftrightDepth = 0;\n    this.prevAtomType = \"\";\n  }\n\n  /**\n   * Checks a result to make sure it has the right type, and throws an\n   * appropriate error otherwise.\n   */\n  expect(text, consume = true) {\n    if (this.fetch().text !== text) {\n      throw new ParseError(`Expected '${text}', got '${this.fetch().text}'`, this.fetch());\n    }\n    if (consume) {\n      this.consume();\n    }\n  }\n\n  /**\n   * Discards the current lookahead token, considering it consumed.\n   */\n  consume() {\n    this.nextToken = null;\n  }\n\n  /**\n   * Return the current lookahead token, or if there isn't one (at the\n   * beginning, or if the previous lookahead token was consume()d),\n   * fetch the next token as the new lookahead token and return it.\n   */\n  fetch() {\n    if (this.nextToken == null) {\n      this.nextToken = this.gullet.expandNextToken();\n    }\n    return this.nextToken;\n  }\n\n  /**\n   * Switches between \"text\" and \"math\" modes.\n   */\n  switchMode(newMode) {\n    this.mode = newMode;\n    this.gullet.switchMode(newMode);\n  }\n\n  /**\n   * Main parsing function, which parses an entire input.\n   */\n  parse() {\n    // Create a group namespace for every $...$, $$...$$, \\[...\\].)\n    // A \\def is then valid only within that pair of delimiters.\n    this.gullet.beginGroup();\n\n    if (this.settings.colorIsTextColor) {\n      // Use old \\color behavior (same as LaTeX's \\textcolor) if requested.\n      // We do this within the group for the math expression, so it doesn't\n      // pollute settings.macros.\n      this.gullet.macros.set(\"\\\\color\", \"\\\\textcolor\");\n    }\n\n    // Try to parse the input\n    const parse = this.parseExpression(false);\n\n    // If we succeeded, make sure there's an EOF at the end\n    this.expect(\"EOF\");\n\n    if (this.isPreamble) {\n      const macros = Object.create(null);\n      Object.entries(this.gullet.macros.current).forEach(([key, value]) => {\n        macros[key] = value;\n      });\n      this.gullet.endGroup();\n      return macros\n    }\n\n    // The only local macro that we want to save is from \\tag.\n    const tag = this.gullet.macros.get(\"\\\\df@tag\");\n\n    // End the group namespace for the expression\n    this.gullet.endGroup();\n\n    if (tag) { this.gullet.macros.current[\"\\\\df@tag\"] = tag; }\n\n    return parse;\n  }\n\n  static get endOfExpression() {\n    return [\"}\", \"\\\\endgroup\", \"\\\\end\", \"\\\\right\", \"\\\\endtoggle\", \"&\"];\n  }\n\n  /**\n   * Fully parse a separate sequence of tokens as a separate job.\n   * Tokens should be specified in reverse order, as in a MacroDefinition.\n   */\n  subparse(tokens) {\n    // Save the next token from the current job.\n    const oldToken = this.nextToken;\n    this.consume();\n\n    // Run the new job, terminating it with an excess '}'\n    this.gullet.pushToken(new Token(\"}\"));\n    this.gullet.pushTokens(tokens);\n    const parse = this.parseExpression(false);\n    this.expect(\"}\");\n\n    // Restore the next token from the current job.\n    this.nextToken = oldToken;\n\n    return parse;\n  }\n\n/**\n   * Parses an \"expression\", which is a list of atoms.\n   *\n   * `breakOnInfix`: Should the parsing stop when we hit infix nodes? This\n   *                 happens when functions have higher precedence han infix\n   *                 nodes in implicit parses.\n   *\n   * `breakOnTokenText`: The text of the token that the expression should end\n   *                     with, or `null` if something else should end the\n   *                     expression.\n   *\n   * `breakOnMiddle`: \\color, \\over, and old styling functions work on an implicit group.\n   *                  These groups end just before the usual tokens, but they also\n   *                  end just before `\\middle`.\n   */\n  parseExpression(breakOnInfix, breakOnTokenText, breakOnMiddle) {\n    const body = [];\n    this.prevAtomType = \"\";\n    // Keep adding atoms to the body until we can't parse any more atoms (either\n    // we reached the end, a }, or a \\right)\n    while (true) {\n      // Ignore spaces in math mode\n      if (this.mode === \"math\") {\n        this.consumeSpaces();\n      }\n      const lex = this.fetch();\n      if (Parser.endOfExpression.indexOf(lex.text) !== -1) {\n        break;\n      }\n      if (breakOnTokenText && lex.text === breakOnTokenText) {\n        break;\n      }\n      if (breakOnMiddle && lex.text === \"\\\\middle\") {\n        break\n      }\n      if (breakOnInfix && functions[lex.text] && functions[lex.text].infix) {\n        break;\n      }\n      const atom = this.parseAtom(breakOnTokenText);\n      if (!atom) {\n        break;\n      } else if (atom.type === \"internal\") {\n        // Internal nodes do not appear in parse tree\n        continue;\n      }\n      body.push(atom);\n      // Keep a record of the atom type, so that op.js can set correct spacing.\n      this.prevAtomType = atom.type === \"atom\" ? atom.family : atom.type;\n    }\n    if (this.mode === \"text\") {\n      this.formLigatures(body);\n    }\n    return this.handleInfixNodes(body);\n  }\n\n  /**\n   * Rewrites infix operators such as \\over with corresponding commands such\n   * as \\frac.\n   *\n   * There can only be one infix operator per group.  If there's more than one\n   * then the expression is ambiguous.  This can be resolved by adding {}.\n   */\n  handleInfixNodes(body) {\n    let overIndex = -1;\n    let funcName;\n\n    for (let i = 0; i < body.length; i++) {\n      if (body[i].type === \"infix\") {\n        if (overIndex !== -1) {\n          throw new ParseError(\"only one infix operator per group\", body[i].token);\n        }\n        overIndex = i;\n        funcName = body[i].replaceWith;\n      }\n    }\n\n    if (overIndex !== -1 && funcName) {\n      let numerNode;\n      let denomNode;\n\n      const numerBody = body.slice(0, overIndex);\n      const denomBody = body.slice(overIndex + 1);\n\n      if (numerBody.length === 1 && numerBody[0].type === \"ordgroup\") {\n        numerNode = numerBody[0];\n      } else {\n        numerNode = { type: \"ordgroup\", mode: this.mode, body: numerBody };\n      }\n\n      if (denomBody.length === 1 && denomBody[0].type === \"ordgroup\") {\n        denomNode = denomBody[0];\n      } else {\n        denomNode = { type: \"ordgroup\", mode: this.mode, body: denomBody };\n      }\n\n      let node;\n      if (funcName === \"\\\\\\\\abovefrac\") {\n        node = this.callFunction(funcName, [numerNode, body[overIndex], denomNode], []);\n      } else {\n        node = this.callFunction(funcName, [numerNode, denomNode], []);\n      }\n      return [node];\n    } else {\n      return body;\n    }\n  }\n\n  /**\n   * Handle a subscript or superscript with nice errors.\n   */\n  handleSupSubscript(\n    name // For error reporting.\n  ) {\n    const symbolToken = this.fetch();\n    const symbol = symbolToken.text;\n    this.consume();\n    this.consumeSpaces(); // ignore spaces before sup/subscript argument\n    // Skip over allowed internal nodes such as \\relax\n    let group;\n    do {\n      group = this.parseGroup(name);\n    } while (group.type && group.type === \"internal\")\n\n    if (!group) {\n      throw new ParseError(\"Expected group after '\" + symbol + \"'\", symbolToken);\n    }\n\n    return group;\n  }\n\n  /**\n   * Converts the textual input of an unsupported command into a text node\n   * contained within a color node whose color is determined by errorColor\n   */\n  formatUnsupportedCmd(text) {\n    const textordArray = [];\n\n    for (let i = 0; i < text.length; i++) {\n      textordArray.push({ type: \"textord\", mode: \"text\", text: text[i] });\n    }\n\n    const textNode = {\n      type: \"text\",\n      mode: this.mode,\n      body: textordArray\n    };\n\n    const colorNode = {\n      type: \"color\",\n      mode: this.mode,\n      color: this.settings.errorColor,\n      body: [textNode]\n    };\n\n    return colorNode;\n  }\n\n  /**\n   * Parses a group with optional super/subscripts.\n   */\n  parseAtom(breakOnTokenText) {\n    // The body of an atom is an implicit group, so that things like\n    // \\left(x\\right)^2 work correctly.\n    const base = this.parseGroup(\"atom\", breakOnTokenText);\n\n    // Internal nodes (e.g. \\relax) cannot support super/subscripts.\n    // Instead we will pick up super/subscripts with blank base next round.\n    if (base && base.type === \"internal\") {\n      return base\n    }\n\n    // In text mode, we don't have superscripts or subscripts\n    if (this.mode === \"text\") {\n      return base\n    }\n\n    // Note that base may be empty (i.e. null) at this point.\n\n    let superscript;\n    let subscript;\n    while (true) {\n      // Guaranteed in math mode, so eat any spaces first.\n      this.consumeSpaces();\n\n      // Lex the first token\n      const lex = this.fetch();\n\n      if (lex.text === \"\\\\limits\" || lex.text === \"\\\\nolimits\") {\n        // We got a limit control\n        if (base && base.type === \"op\") {\n          const limits = lex.text === \"\\\\limits\";\n          base.limits = limits;\n          base.alwaysHandleSupSub = true;\n        } else if (base && base.type === \"operatorname\") {\n          if (base.alwaysHandleSupSub) {\n            base.limits = lex.text === \"\\\\limits\";\n          }\n        } else {\n          throw new ParseError(\"Limit controls must follow a math operator\", lex);\n        }\n        this.consume();\n      } else if (lex.text === \"^\") {\n        // We got a superscript start\n        if (superscript) {\n          throw new ParseError(\"Double superscript\", lex);\n        }\n        superscript = this.handleSupSubscript(\"superscript\");\n      } else if (lex.text === \"_\") {\n        // We got a subscript start\n        if (subscript) {\n          throw new ParseError(\"Double subscript\", lex);\n        }\n        subscript = this.handleSupSubscript(\"subscript\");\n      } else if (lex.text === \"'\") {\n        // We got a prime\n        if (superscript) {\n          throw new ParseError(\"Double superscript\", lex);\n        }\n        const prime = { type: \"textord\", mode: this.mode, text: \"\\\\prime\" };\n\n        // Many primes can be grouped together, so we handle this here\n        const primes = [prime];\n        this.consume();\n        // Keep lexing tokens until we get something that's not a prime\n        while (this.fetch().text === \"'\") {\n          // For each one, add another prime to the list\n          primes.push(prime);\n          this.consume();\n        }\n        // If there's a superscript following the primes, combine that\n        // superscript in with the primes.\n        if (this.fetch().text === \"^\") {\n          primes.push(this.handleSupSubscript(\"superscript\"));\n        }\n        // Put everything into an ordgroup as the superscript\n        superscript = { type: \"ordgroup\", mode: this.mode, body: primes };\n      } else if (uSubsAndSups[lex.text]) {\n        // A Unicode subscript or superscript character.\n        // We treat these similarly to the unicode-math package.\n        // So we render a string of Unicode (sub|super)scripts the\n        // same as a (sub|super)script of regular characters.\n        const isSub = unicodeSubRegEx.test(lex.text);\n        const subsupTokens = [];\n        subsupTokens.push(new Token(uSubsAndSups[lex.text]));\n        this.consume();\n        // Continue fetching tokens to fill out the group.\n        while (true) {\n          const token = this.fetch().text;\n          if (!(uSubsAndSups[token])) { break }\n          if (unicodeSubRegEx.test(token) !== isSub) { break }\n          subsupTokens.unshift(new Token(uSubsAndSups[token]));\n          this.consume();\n        }\n        // Now create a (sub|super)script.\n        const body = this.subparse(subsupTokens);\n        if (isSub) {\n          subscript = { type: \"ordgroup\", mode: \"math\", body };\n        } else {\n          superscript = { type: \"ordgroup\", mode: \"math\", body };\n        }\n      } else {\n        // If it wasn't ^, _, a Unicode (sub|super)script, or ', stop parsing super/subscripts\n        break;\n      }\n    }\n\n    if (superscript || subscript) {\n      if (base && base.type === \"multiscript\" && !base.postscripts) {\n        // base is the result of a \\prescript function.\n        // Write the sub- & superscripts into the multiscript element.\n        base.postscripts = { sup: superscript, sub: subscript };\n        return base\n      } else {\n        // We got either a superscript or subscript, create a supsub\n        const isFollowedByDelimiter = (!base || base.type !== \"op\" && base.type !== \"operatorname\")\n          ? undefined\n          : isDelimiter(this.nextToken.text);\n        return {\n          type: \"supsub\",\n          mode: this.mode,\n          base: base,\n          sup: superscript,\n          sub: subscript,\n          isFollowedByDelimiter\n        }\n      }\n    } else {\n      // Otherwise return the original body\n      return base;\n    }\n  }\n\n  /**\n   * Parses an entire function, including its base and all of its arguments.\n   */\n  parseFunction(\n    breakOnTokenText,\n    name // For determining its context\n  ) {\n    const token = this.fetch();\n    const func = token.text;\n    const funcData = functions[func];\n    if (!funcData) {\n      return null;\n    }\n    this.consume(); // consume command token\n\n    if (name && name !== \"atom\" && !funcData.allowedInArgument) {\n      throw new ParseError(\n        \"Got function '\" + func + \"' with no arguments\" + (name ? \" as \" + name : \"\"),\n        token\n      );\n    } else if (this.mode === \"text\" && !funcData.allowedInText) {\n      throw new ParseError(\"Can't use function '\" + func + \"' in text mode\", token);\n    } else if (this.mode === \"math\" && funcData.allowedInMath === false) {\n      throw new ParseError(\"Can't use function '\" + func + \"' in math mode\", token);\n    }\n\n    const prevAtomType = this.prevAtomType;\n    const { args, optArgs } = this.parseArguments(func, funcData);\n    this.prevAtomType = prevAtomType;\n    return this.callFunction(func, args, optArgs, token, breakOnTokenText);\n  }\n\n  /**\n   * Call a function handler with a suitable context and arguments.\n   */\n  callFunction(name, args, optArgs, token, breakOnTokenText) {\n    const context = {\n      funcName: name,\n      parser: this,\n      token,\n      breakOnTokenText\n    };\n    const func = functions[name];\n    if (func && func.handler) {\n      return func.handler(context, args, optArgs);\n    } else {\n      throw new ParseError(`No function handler for ${name}`);\n    }\n  }\n\n  /**\n   * Parses the arguments of a function or environment\n   */\n  parseArguments(\n    func, // Should look like \"\\name\" or \"\\begin{name}\".\n    funcData\n  ) {\n    const totalArgs = funcData.numArgs + funcData.numOptionalArgs;\n    if (totalArgs === 0) {\n      return { args: [], optArgs: [] };\n    }\n\n    const args = [];\n    const optArgs = [];\n\n    for (let i = 0; i < totalArgs; i++) {\n      let argType = funcData.argTypes && funcData.argTypes[i];\n      const isOptional = i < funcData.numOptionalArgs;\n\n      if (\n        (funcData.primitive && argType == null) ||\n        // \\sqrt expands into primitive if optional argument doesn't exist\n        (funcData.type === \"sqrt\" && i === 1 && optArgs[0] == null)\n      ) {\n        argType = \"primitive\";\n      }\n\n      const arg = this.parseGroupOfType(`argument to '${func}'`, argType, isOptional);\n      if (isOptional) {\n        optArgs.push(arg);\n      } else if (arg != null) {\n        args.push(arg);\n      } else {\n        // should be unreachable\n        throw new ParseError(\"Null argument, please report this as a bug\");\n      }\n    }\n\n    return { args, optArgs };\n  }\n\n  /**\n   * Parses a group when the mode is changing.\n   */\n  parseGroupOfType(name, type, optional) {\n    switch (type) {\n      case \"size\":\n        return this.parseSizeGroup(optional);\n      case \"url\":\n        return this.parseUrlGroup(optional);\n      case \"math\":\n      case \"text\":\n        return this.parseArgumentGroup(optional, type);\n      case \"hbox\": {\n        // hbox argument type wraps the argument in the equivalent of\n        // \\hbox, which is like \\text but switching to \\textstyle size.\n        const group = this.parseArgumentGroup(optional, \"text\");\n        return group != null\n          ? {\n            type: \"styling\",\n            mode: group.mode,\n            body: [group],\n            scriptLevel: \"text\" // simulate \\textstyle\n          }\n          : null;\n      }\n      case \"raw\": {\n        const token = this.parseStringGroup(\"raw\", optional);\n        return token != null\n          ? {\n            type: \"raw\",\n            mode: \"text\",\n            string: token.text\n          }\n          : null;\n      }\n      case \"primitive\": {\n        if (optional) {\n          throw new ParseError(\"A primitive argument cannot be optional\");\n        }\n        const group = this.parseGroup(name);\n        if (group == null) {\n          throw new ParseError(\"Expected group as \" + name, this.fetch());\n        }\n        return group;\n      }\n      case \"original\":\n      case null:\n      case undefined:\n        return this.parseArgumentGroup(optional);\n      default:\n        throw new ParseError(\"Unknown group type as \" + name, this.fetch());\n    }\n  }\n\n  /**\n   * Discard any space tokens, fetching the next non-space token.\n   */\n  consumeSpaces() {\n    while (true) {\n      const ch = this.fetch().text;\n      // \\ufe0e is the Unicode variation selector to supress emoji. Ignore it.\n      if (ch === \" \" || ch === \"\\u00a0\" || ch === \"\\ufe0e\") {\n        this.consume();\n      } else {\n        break\n      }\n    }\n  }\n\n  /**\n   * Parses a group, essentially returning the string formed by the\n   * brace-enclosed tokens plus some position information.\n   */\n  parseStringGroup(\n    modeName, // Used to describe the mode in error messages.\n    optional\n  ) {\n    const argToken = this.gullet.scanArgument(optional);\n    if (argToken == null) {\n      return null;\n    }\n    let str = \"\";\n    let nextToken;\n    while ((nextToken = this.fetch()).text !== \"EOF\") {\n      str += nextToken.text;\n      this.consume();\n    }\n    this.consume(); // consume the end of the argument\n    argToken.text = str;\n    return argToken;\n  }\n\n  /**\n   * Parses a regex-delimited group: the largest sequence of tokens\n   * whose concatenated strings match `regex`. Returns the string\n   * formed by the tokens plus some position information.\n   */\n  parseRegexGroup(\n    regex,\n    modeName // Used to describe the mode in error messages.\n  ) {\n    const firstToken = this.fetch();\n    let lastToken = firstToken;\n    let str = \"\";\n    let nextToken;\n    while ((nextToken = this.fetch()).text !== \"EOF\" && regex.test(str + nextToken.text)) {\n      lastToken = nextToken;\n      str += lastToken.text;\n      this.consume();\n    }\n    if (str === \"\") {\n      throw new ParseError(\"Invalid \" + modeName + \": '\" + firstToken.text + \"'\", firstToken);\n    }\n    return firstToken.range(lastToken, str);\n  }\n\n  /**\n   * Parses a size specification, consisting of magnitude and unit.\n   */\n  parseSizeGroup(optional) {\n    let res;\n    let isBlank = false;\n    // don't expand before parseStringGroup\n    this.gullet.consumeSpaces();\n    if (!optional && this.gullet.future().text !== \"{\") {\n      res = this.parseRegexGroup(/^[-+]? *(?:$|\\d+|\\d+\\.\\d*|\\.\\d*) *[a-z]{0,2} *$/, \"size\");\n    } else {\n      res = this.parseStringGroup(\"size\", optional);\n    }\n    if (!res) {\n      return null;\n    }\n    if (!optional && res.text.length === 0) {\n      // Because we've tested for what is !optional, this block won't\n      // affect \\kern, \\hspace, etc. It will capture the mandatory arguments\n      // to \\genfrac and \\above.\n      res.text = \"0pt\"; // Enable \\above{}\n      isBlank = true; // This is here specifically for \\genfrac\n    }\n    const match = sizeRegEx.exec(res.text);\n    if (!match) {\n      throw new ParseError(\"Invalid size: '\" + res.text + \"'\", res);\n    }\n    const data = {\n      number: +(match[1] + match[2]), // sign + magnitude, cast to number\n      unit: match[3]\n    };\n    if (!validUnit(data)) {\n      throw new ParseError(\"Invalid unit: '\" + data.unit + \"'\", res);\n    }\n    return {\n      type: \"size\",\n      mode: this.mode,\n      value: data,\n      isBlank\n    };\n  }\n\n  /**\n   * Parses an URL, checking escaped letters and allowed protocols,\n   * and setting the catcode of % as an active character (as in \\hyperref).\n   */\n  parseUrlGroup(optional) {\n    this.gullet.lexer.setCatcode(\"%\", 13); // active character\n    this.gullet.lexer.setCatcode(\"~\", 12); // other character\n    const res = this.parseStringGroup(\"url\", optional);\n    this.gullet.lexer.setCatcode(\"%\", 14); // comment character\n    this.gullet.lexer.setCatcode(\"~\", 13); // active character\n    if (res == null) {\n      return null;\n    }\n    // hyperref package allows backslashes alone in href, but doesn't\n    // generate valid links in such cases; we interpret this as\n    // \"undefined\" behaviour, and keep them as-is. Some browser will\n    // replace backslashes with forward slashes.\n    let url = res.text.replace(/\\\\([#$%&~_^{}])/g, \"$1\");\n    url = res.text.replace(/{\\u2044}/g, \"/\");\n    return {\n      type: \"url\",\n      mode: this.mode,\n      url\n    };\n  }\n\n  /**\n   * Parses an argument with the mode specified.\n   */\n  parseArgumentGroup(optional, mode) {\n    const argToken = this.gullet.scanArgument(optional);\n    if (argToken == null) {\n      return null;\n    }\n    const outerMode = this.mode;\n    if (mode) {\n      // Switch to specified mode\n      this.switchMode(mode);\n    }\n\n    this.gullet.beginGroup();\n    const expression = this.parseExpression(false, \"EOF\");\n    // TODO: find an alternative way to denote the end\n    this.expect(\"EOF\"); // expect the end of the argument\n    this.gullet.endGroup();\n    const result = {\n      type: \"ordgroup\",\n      mode: this.mode,\n      loc: argToken.loc,\n      body: expression\n    };\n\n    if (mode) {\n      // Switch mode back\n      this.switchMode(outerMode);\n    }\n    return result;\n  }\n\n  /**\n   * Parses an ordinary group, which is either a single nucleus (like \"x\")\n   * or an expression in braces (like \"{x+y}\") or an implicit group, a group\n   * that starts at the current position, and ends right before a higher explicit\n   * group ends, or at EOF.\n   */\n  parseGroup(\n    name, // For error reporting.\n    breakOnTokenText\n  ) {\n    const firstToken = this.fetch();\n    const text = firstToken.text;\n\n    let result;\n    // Try to parse an open brace or \\begingroup\n    if (text === \"{\" || text === \"\\\\begingroup\" || text === \"\\\\toggle\") {\n      this.consume();\n      const groupEnd = text === \"{\"\n        ? \"}\"\n        : text === \"\\\\begingroup\"\n        ? \"\\\\endgroup\"\n        : \"\\\\endtoggle\";\n\n      this.gullet.beginGroup();\n      // If we get a brace, parse an expression\n      const expression = this.parseExpression(false, groupEnd);\n      const lastToken = this.fetch();\n      this.expect(groupEnd); // Check that we got a matching closing brace\n      this.gullet.endGroup();\n      result = {\n        type: (lastToken.text === \"\\\\endtoggle\" ? \"toggle\" : \"ordgroup\"),\n        mode: this.mode,\n        loc: SourceLocation.range(firstToken, lastToken),\n        body: expression,\n        // A group formed by \\begingroup...\\endgroup is a semi-simple group\n        // which doesn't affect spacing in math mode, i.e., is transparent.\n        // https://tex.stackexchange.com/questions/1930/\n        semisimple: text === \"\\\\begingroup\" || undefined\n      };\n    } else {\n      // If there exists a function with this name, parse the function.\n      // Otherwise, just return a nucleus\n      result = this.parseFunction(breakOnTokenText, name) || this.parseSymbol();\n      if (result == null && text[0] === \"\\\\\" &&\n          !Object.prototype.hasOwnProperty.call(implicitCommands, text )) {\n        result = this.formatUnsupportedCmd(text);\n        this.consume();\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Form ligature-like combinations of characters for text mode.\n   * This includes inputs like \"--\", \"---\", \"``\" and \"''\".\n   * The result will simply replace multiple textord nodes with a single\n   * character in each value by a single textord node having multiple\n   * characters in its value.  The representation is still ASCII source.\n   * The group will be modified in place.\n   */\n  formLigatures(group) {\n    let n = group.length - 1;\n    for (let i = 0; i < n; ++i) {\n      const a = group[i];\n      const v = a.text;\n      if (v === \"-\" && group[i + 1].text === \"-\") {\n        if (i + 1 < n && group[i + 2].text === \"-\") {\n          group.splice(i, 3, {\n            type: \"textord\",\n            mode: \"text\",\n            loc: SourceLocation.range(a, group[i + 2]),\n            text: \"---\"\n          });\n          n -= 2;\n        } else {\n          group.splice(i, 2, {\n            type: \"textord\",\n            mode: \"text\",\n            loc: SourceLocation.range(a, group[i + 1]),\n            text: \"--\"\n          });\n          n -= 1;\n        }\n      }\n      if ((v === \"'\" || v === \"`\") && group[i + 1].text === v) {\n        group.splice(i, 2, {\n          type: \"textord\",\n          mode: \"text\",\n          loc: SourceLocation.range(a, group[i + 1]),\n          text: v + v\n        });\n        n -= 1;\n      }\n    }\n  }\n\n  /**\n   * Parse a single symbol out of the string. Here, we handle single character\n   * symbols and special functions like \\verb.\n   */\n  parseSymbol() {\n    const nucleus = this.fetch();\n    let text = nucleus.text;\n\n    if (/^\\\\verb[^a-zA-Z]/.test(text)) {\n      this.consume();\n      let arg = text.slice(5);\n      const star = arg.charAt(0) === \"*\";\n      if (star) {\n        arg = arg.slice(1);\n      }\n      // Lexer's tokenRegex is constructed to always have matching\n      // first/last characters.\n      if (arg.length < 2 || arg.charAt(0) !== arg.slice(-1)) {\n        throw new ParseError(`\\\\verb assertion failed --\n                    please report what input caused this bug`);\n      }\n      arg = arg.slice(1, -1); // remove first and last char\n      return {\n        type: \"verb\",\n        mode: \"text\",\n        body: arg,\n        star\n      };\n    }\n    // At this point, we should have a symbol, possibly with accents.\n    // First expand any accented base symbol according to unicodeSymbols.\n    if (Object.prototype.hasOwnProperty.call(unicodeSymbols, text[0]) &&\n      this.mode === \"math\" && !symbols[this.mode][text[0]]) {\n      // This behavior is not strict (XeTeX-compatible) in math mode.\n      if (this.settings.strict && this.mode === \"math\") {\n        throw new ParseError(`Accented Unicode text character \"${text[0]}\" used in ` + `math mode`,\n          nucleus\n        );\n      }\n      text = unicodeSymbols[text[0]] + text.slice(1);\n    }\n    // Strip off any combining characters\n    const match = this.mode === \"math\"\n      ? combiningDiacriticalMarksEndRegex.exec(text)\n      : null;\n    if (match) {\n      text = text.substring(0, match.index);\n      if (text === \"i\") {\n        text = \"\\u0131\"; // dotless i, in math and text mode\n      } else if (text === \"j\") {\n        text = \"\\u0237\"; // dotless j, in math and text mode\n      }\n    }\n    // Recognize base symbol\n    let symbol;\n    if (symbols[this.mode][text]) {\n      let group = symbols[this.mode][text].group;\n      if (group === \"bin\" && binLeftCancellers.includes(this.prevAtomType)) {\n        // Change from a binary operator to a unary (prefix) operator\n        group = \"open\";\n      }\n      const loc = SourceLocation.range(nucleus);\n      let s;\n      if (Object.prototype.hasOwnProperty.call(ATOMS, group )) {\n        const family = group;\n        s = {\n          type: \"atom\",\n          mode: this.mode,\n          family,\n          loc,\n          text\n        };\n        if ((family === \"rel\" || family === \"bin\") && this.prevAtomType === \"text\") {\n          if (textRegEx.test(loc.lexer.input.slice(loc.end))) {\n            s.needsSpacing = true;  // Fix a MathML bug.\n          }\n        }\n      } else {\n        if (asciiFromScript[text]) {\n          // Unicode 14 disambiguates chancery from roundhand.\n          // See https://www.unicode.org/charts/PDF/U1D400.pdf\n          this.consume();\n          const nextCode = this.fetch().text.charCodeAt(0);\n          // mathcal is Temml default. Use mathscript if called for.\n          const font = nextCode === 0xfe01 ? \"mathscr\" : \"mathcal\";\n          if (nextCode === 0xfe00 || nextCode === 0xfe01) { this.consume(); }\n          return {\n            type: \"font\",\n            mode: \"math\",\n            font,\n            body: { type: \"mathord\", mode: \"math\", loc, text: asciiFromScript[text] }\n          }\n        }\n        // Default ord character. No disambiguation necessary.\n        s = {\n          type: group,\n          mode: this.mode,\n          loc,\n          text\n        };\n      }\n      symbol = s;\n    } else if (text.charCodeAt(0) >= 0x80 || combiningDiacriticalMarksEndRegex.exec(text)) {\n      // no symbol for e.g. ^\n      if (this.settings.strict && this.mode === \"math\") {\n        throw new ParseError(`Unicode text character \"${text[0]}\" used in math mode`, nucleus)\n      }\n      // All nonmathematical Unicode characters are rendered as if they\n      // are in text mode (wrapped in \\text) because that's what it\n      // takes to render them in LaTeX.\n      symbol = {\n        type: \"textord\",\n        mode: \"text\",\n        loc: SourceLocation.range(nucleus),\n        text\n      };\n    } else {\n      return null; // EOF, ^, _, {, }, etc.\n    }\n    this.consume();\n    // Transform combining characters into accents\n    if (match) {\n      for (let i = 0; i < match[0].length; i++) {\n        const accent = match[0][i];\n        if (!unicodeAccents[accent]) {\n          throw new ParseError(`Unknown accent ' ${accent}'`, nucleus);\n        }\n        const command = unicodeAccents[accent][this.mode] ||\n                        unicodeAccents[accent].text;\n        if (!command) {\n          throw new ParseError(`Accent ${accent} unsupported in ${this.mode} mode`, nucleus);\n        }\n        symbol = {\n          type: \"accent\",\n          mode: this.mode,\n          loc: SourceLocation.range(nucleus),\n          label: command,\n          isStretchy: false,\n          base: symbol\n        };\n      }\n    }\n    return symbol;\n  }\n}\n\n/**\n * Parses an expression using a Parser, then returns the parsed result.\n */\nconst parseTree = function(toParse, settings) {\n  if (!(typeof toParse === \"string\" || toParse instanceof String)) {\n    throw new TypeError(\"Temml can only parse string typed expression\")\n  }\n  const parser = new Parser(toParse, settings);\n  // Blank out any \\df@tag to avoid spurious \"Duplicate \\tag\" errors\n  delete parser.gullet.macros.current[\"\\\\df@tag\"];\n\n  let tree = parser.parse();\n\n  // LaTeX ignores a \\tag placed outside an AMS environment.\n  if (!(tree.length > 0 &&  tree[0].type && tree[0].type === \"array\" && tree[0].addEqnNum)) {\n    // If the input used \\tag, it will set the \\df@tag macro to the tag.\n    // In this case, we separately parse the tag and wrap the tree.\n    if (parser.gullet.macros.get(\"\\\\df@tag\")) {\n      if (!settings.displayMode) {\n        throw new ParseError(\"\\\\tag works only in display mode\")\n      }\n      parser.gullet.feed(\"\\\\df@tag\");\n      tree = [\n        {\n          type: \"tag\",\n          mode: \"text\",\n          body: tree,\n          tag: parser.parse()\n        }\n      ];\n    }\n  }\n\n  return tree\n};\n\n/**\n * This file contains information about the style that the mathmlBuilder carries\n * around with it. Data is held in an `Style` object, and when\n * recursing, a new `Style` object can be created with the `.with*` functions.\n */\n\nconst subOrSupLevel = [2, 2, 3, 3];\n\n/**\n * This is the main Style class. It contains the current style.level, color, and font.\n *\n * Style objects should not be modified. To create a new Style with\n * different properties, call a `.with*` method.\n */\nclass Style {\n  constructor(data) {\n    // Style.level can be 0 | 1 | 2 | 3, which correspond to\n    //       displaystyle, textstyle, scriptstyle, and scriptscriptstyle.\n    // style.level usually does not directly set MathML's script level. MathML does that itself.\n    // However, Chromium does not stop shrinking after scriptscriptstyle, so we do explicitly\n    // set a scriptlevel attribute in those conditions.\n    // We also use style.level to track math style so that we can get the correct\n    // scriptlevel when needed in supsub.js, mathchoice.js, or for dimensions in em.\n    this.level = data.level;\n    this.color = data.color;  // string | void\n    // A font family applies to a group of fonts (i.e. SansSerif), while a font\n    // represents a specific font (i.e. SansSerif Bold).\n    // See: https://tex.stackexchange.com/questions/22350/difference-between-textrm-and-mathrm\n    this.font = data.font || \"\";                // string\n    this.fontFamily = data.fontFamily || \"\";    // string\n    this.fontSize = data.fontSize || 1.0;       // number\n    this.fontWeight = data.fontWeight || \"\";\n    this.fontShape = data.fontShape || \"\";\n    this.maxSize = data.maxSize;                // [number, number]\n  }\n\n  /**\n   * Returns a new style object with the same properties as \"this\".  Properties\n   * from \"extension\" will be copied to the new style object.\n   */\n  extend(extension) {\n    const data = {\n      level: this.level,\n      color: this.color,\n      font: this.font,\n      fontFamily: this.fontFamily,\n      fontSize: this.fontSize,\n      fontWeight: this.fontWeight,\n      fontShape: this.fontShape,\n      maxSize: this.maxSize\n    };\n\n    for (const key in extension) {\n      if (Object.prototype.hasOwnProperty.call(extension, key)) {\n        data[key] = extension[key];\n      }\n    }\n\n    return new Style(data);\n  }\n\n  withLevel(n) {\n    return this.extend({\n      level: n\n    });\n  }\n\n  incrementLevel() {\n    return this.extend({\n      level: Math.min(this.level + 1, 3)\n    });\n  }\n\n  inSubOrSup() {\n    return this.extend({\n      level: subOrSupLevel[this.level]\n    })\n  }\n\n  /**\n   * Create a new style object with the given color.\n   */\n  withColor(color) {\n    return this.extend({\n      color: color\n    });\n  }\n\n  /**\n   * Creates a new style object with the given math font or old text font.\n   * @type {[type]}\n   */\n  withFont(font) {\n    return this.extend({\n      font\n    });\n  }\n\n  /**\n   * Create a new style objects with the given fontFamily.\n   */\n  withTextFontFamily(fontFamily) {\n    return this.extend({\n      fontFamily,\n      font: \"\"\n    });\n  }\n\n  /**\n   * Creates a new style object with the given font size\n   */\n  withFontSize(num) {\n    return this.extend({\n      fontSize: num\n    });\n  }\n\n  /**\n   * Creates a new style object with the given font weight\n   */\n  withTextFontWeight(fontWeight) {\n    return this.extend({\n      fontWeight,\n      font: \"\"\n    });\n  }\n\n  /**\n   * Creates a new style object with the given font weight\n   */\n  withTextFontShape(fontShape) {\n    return this.extend({\n      fontShape,\n      font: \"\"\n    });\n  }\n\n  /**\n   * Gets the CSS color of the current style object\n   */\n  getColor() {\n    return this.color;\n  }\n}\n\n/* Temml Post Process\n * Populate the text contents of each \\ref & \\eqref\n *\n * As with other Temml code, this file is released under terms of the MIT license.\n * https://mit-license.org/\n */\n\nconst version = \"0.11.07\";\n\nfunction postProcess(block) {\n  const labelMap = {};\n  let i = 0;\n\n  // Get a collection of the parents of each \\tag & auto-numbered equation\n  const amsEqns = document.getElementsByClassName('tml-eqn');\n  for (let parent of amsEqns) {\n    // AMS automatically numbered equation.\n    // Assign an id.\n    i += 1;\n    parent.setAttribute(\"id\", \"tml-eqn-\" + String(i));\n    // No need to write a number into the text content of the element.\n    // A CSS counter has done that even if this postProcess() function is not used.\n\n    // Find any \\label that refers to an AMS automatic eqn number.\n    while (true) {\n      if (parent.tagName === \"mtable\") { break }\n      const labels = parent.getElementsByClassName(\"tml-label\");\n      if (labels.length > 0) {\n        const id = parent.attributes.id.value;\n        labelMap[id] = String(i);\n        break\n      } else {\n        parent = parent.parentElement;\n      }\n    }\n  }\n\n  // Find \\labels associated with \\tag\n  const taggedEqns = document.getElementsByClassName('tml-tageqn');\n  for (const parent of taggedEqns) {\n    const labels = parent.getElementsByClassName(\"tml-label\");\n    if (labels.length > 0) {\n      const tags = parent.getElementsByClassName(\"tml-tag\");\n      if (tags.length > 0) {\n        const id = parent.attributes.id.value;\n        labelMap[id] = tags[0].textContent;\n      }\n    }\n  }\n\n  // Populate \\ref & \\eqref text content\n  const refs = block.getElementsByClassName(\"tml-ref\");\n  [...refs].forEach(ref => {\n    const attr = ref.getAttribute(\"href\");\n    let str = labelMap[attr.slice(1)];\n    if (ref.className.indexOf(\"tml-eqref\") === -1) {\n      // \\ref. Omit parens.\n      str = str.replace(/^\\(/, \"\");\n      str = str.replace(/\\)$/, \"\");\n    } else {\n      // \\eqref. Include parens\n      if (str.charAt(0) !== \"(\") { str = \"(\" + str; }\n      if (str.slice(-1) !== \")\") { str =  str + \")\"; }\n    }\n    const mtext = document.createElementNS(\"http://www.w3.org/1998/Math/MathML\", \"mtext\");\n    mtext.appendChild(document.createTextNode(str));\n    const math =  document.createElementNS(\"http://www.w3.org/1998/Math/MathML\", \"math\");\n    math.appendChild(mtext);\n    ref.textContent = '';\n    ref.appendChild(math);\n  });\n}\n\nconst findEndOfMath = function(delimiter, text, startIndex) {\n  // Adapted from\n  // https://github.com/Khan/perseus/blob/master/src/perseus-markdown.jsx\n  let index = startIndex;\n  let braceLevel = 0;\n\n  const delimLength = delimiter.length;\n\n  while (index < text.length) {\n    const character = text[index];\n\n    if (braceLevel <= 0 && text.slice(index, index + delimLength) === delimiter) {\n      return index;\n    } else if (character === \"\\\\\") {\n      index++;\n    } else if (character === \"{\") {\n      braceLevel++;\n    } else if (character === \"}\") {\n      braceLevel--;\n    }\n\n    index++;\n  }\n\n  return -1;\n};\n\nconst escapeRegex = function(string) {\n  return string.replace(/[-/\\\\^$*+?.()|[\\]{}]/g, \"\\\\$&\");\n};\n\nconst amsRegex = /^\\\\(?:begin|(?:eq)?ref){/;\n\nconst splitAtDelimiters = function(text, delimiters) {\n  let index;\n  const data = [];\n\n  const regexLeft = new RegExp(\n    \"(\" + delimiters.map((x) => escapeRegex(x.left)).join(\"|\") + \")\"\n  );\n\n  while (true) {\n    index = text.search(regexLeft);\n    if (index === -1) {\n      break;\n    }\n    if (index > 0) {\n      data.push({\n        type: \"text\",\n        data: text.slice(0, index)\n      });\n      text = text.slice(index); // now text starts with delimiter\n    }\n    // ... so this always succeeds:\n    const i = delimiters.findIndex((delim) => text.startsWith(delim.left));\n    index = findEndOfMath(delimiters[i].right, text, delimiters[i].left.length);\n    if (index === -1) {\n      break;\n    }\n    const rawData = text.slice(0, index + delimiters[i].right.length);\n    const math = amsRegex.test(rawData)\n      ? rawData\n      : text.slice(delimiters[i].left.length, index);\n    data.push({\n      type: \"math\",\n      data: math,\n      rawData,\n      display: delimiters[i].display\n    });\n    text = text.slice(index + delimiters[i].right.length);\n  }\n\n  if (text !== \"\") {\n    data.push({\n      type: \"text\",\n      data: text\n    });\n  }\n\n  return data;\n};\n\nconst defaultDelimiters = [\n  { left: \"$$\", right: \"$$\", display: true },\n  { left: \"\\\\(\", right: \"\\\\)\", display: false },\n  // LaTeX uses $\u2026$, but it ruins the display of normal `$` in text:\n  // {left: \"$\", right: \"$\", display: false},\n  // $ must come after $$\n\n  // Render AMS environments even if outside $$\u2026$$ delimiters.\n  { left: \"\\\\begin{equation}\", right: \"\\\\end{equation}\", display: true },\n  { left: \"\\\\begin{equation*}\", right: \"\\\\end{equation*}\", display: true },\n  { left: \"\\\\begin{align}\", right: \"\\\\end{align}\", display: true },\n  { left: \"\\\\begin{align*}\", right: \"\\\\end{align*}\", display: true },\n  { left: \"\\\\begin{alignat}\", right: \"\\\\end{alignat}\", display: true },\n  { left: \"\\\\begin{alignat*}\", right: \"\\\\end{alignat*}\", display: true },\n  { left: \"\\\\begin{gather}\", right: \"\\\\end{gather}\", display: true },\n  { left: \"\\\\begin{gather*}\", right: \"\\\\end{gather*}\", display: true },\n  { left: \"\\\\begin{CD}\", right: \"\\\\end{CD}\", display: true },\n  // Ditto \\ref & \\eqref\n  { left: \"\\\\ref{\", right: \"}\", display: false },\n  { left: \"\\\\eqref{\", right: \"}\", display: false },\n\n  { left: \"\\\\[\", right: \"\\\\]\", display: true }\n];\n\nconst firstDraftDelimiters = {\n  \"$\": [\n         { left: \"$$\", right: \"$$\", display: true },\n         { left: \"$`\", right: \"`$\", display: false },\n         { left: \"$\", right: \"$\", display: false }\n  ],\n  \"(\": [\n    { left: \"\\\\[\", right: \"\\\\]\", display: true },\n    { left: \"\\\\(\", right: \"\\\\)\", display: false }\n  ]\n};\n\nconst amsDelimiters = [\n  { left: \"\\\\begin{equation}\", right: \"\\\\end{equation}\", display: true },\n  { left: \"\\\\begin{equation*}\", right: \"\\\\end{equation*}\", display: true },\n  { left: \"\\\\begin{align}\", right: \"\\\\end{align}\", display: true },\n  { left: \"\\\\begin{align*}\", right: \"\\\\end{align*}\", display: true },\n  { left: \"\\\\begin{alignat}\", right: \"\\\\end{alignat}\", display: true },\n  { left: \"\\\\begin{alignat*}\", right: \"\\\\end{alignat*}\", display: true },\n  { left: \"\\\\begin{gather}\", right: \"\\\\end{gather}\", display: true },\n  { left: \"\\\\begin{gather*}\", right: \"\\\\end{gather*}\", display: true },\n  { left: \"\\\\begin{CD}\", right: \"\\\\end{CD}\", display: true },\n  { left: \"\\\\ref{\", right: \"}\", display: false },\n  { left: \"\\\\eqref{\", right: \"}\", display: false }\n];\n\nconst delimitersFromKey = key => {\n  if (key === \"$\" || key === \"(\") {\n    return firstDraftDelimiters[key];\n  } else if (key === \"$+\" || key === \"(+\") {\n    const firstDraft = firstDraftDelimiters[key.slice(0, 1)];\n    return firstDraft.concat(amsDelimiters)\n  } else if (key === \"ams\") {\n    return amsDelimiters\n  } else if (key === \"all\") {\n    return (firstDraftDelimiters[\"(\"]).concat(firstDraftDelimiters[\"$\"]).concat(amsDelimiters)\n  } else {\n    return defaultDelimiters\n  }\n};\n\n/* Note: optionsCopy is mutated by this method. If it is ever exposed in the\n * API, we should copy it before mutating.\n */\nconst renderMathInText = function(text, optionsCopy) {\n  const data = splitAtDelimiters(text, optionsCopy.delimiters);\n  if (data.length === 1 && data[0].type === \"text\") {\n    // There is no formula in the text.\n    // Let's return null which means there is no need to replace\n    // the current text node with a new one.\n    return null;\n  }\n\n  const fragment = document.createDocumentFragment();\n\n  for (let i = 0; i < data.length; i++) {\n    if (data[i].type === \"text\") {\n      fragment.appendChild(document.createTextNode(data[i].data));\n    } else {\n      const span = document.createElement(\"span\");\n      let math = data[i].data;\n      // Override any display mode defined in the settings with that\n      // defined by the text itself\n      optionsCopy.displayMode = data[i].display;\n      try {\n        if (optionsCopy.preProcess) {\n          math = optionsCopy.preProcess(math);\n        }\n        // Importing render() from temml.js would be a circular dependency.\n        // So call the global version.\n        // eslint-disable-next-line no-undef\n        temml.render(math, span, optionsCopy);\n      } catch (e) {\n        if (!(e instanceof ParseError)) {\n          throw e;\n        }\n        optionsCopy.errorCallback(\n          \"Temml auto-render: Failed to parse `\" + data[i].data + \"` with \",\n          e\n        );\n        fragment.appendChild(document.createTextNode(data[i].rawData));\n        continue;\n      }\n      fragment.appendChild(span);\n    }\n  }\n\n  return fragment;\n};\n\nconst renderElem = function(elem, optionsCopy) {\n  for (let i = 0; i < elem.childNodes.length; i++) {\n    const childNode = elem.childNodes[i];\n    if (childNode.nodeType === 3) {\n      // Text node\n      const frag = renderMathInText(childNode.textContent, optionsCopy);\n      if (frag) {\n        i += frag.childNodes.length - 1;\n        elem.replaceChild(frag, childNode);\n      }\n    } else if (childNode.nodeType === 1) {\n      // Element node\n      const className = \" \" + childNode.className + \" \";\n      const shouldRender =\n        optionsCopy.ignoredTags.indexOf(childNode.nodeName.toLowerCase()) === -1 &&\n        optionsCopy.ignoredClasses.every((x) => className.indexOf(\" \" + x + \" \") === -1);\n\n      if (shouldRender) {\n        renderElem(childNode, optionsCopy);\n      }\n    }\n    // Otherwise, it's something else, and ignore it.\n  }\n};\n\nconst renderMathInElement = function(elem, options) {\n  if (!elem) {\n    throw new Error(\"No element provided to render\");\n  }\n\n  const optionsCopy = {};\n\n  // Object.assign(optionsCopy, option)\n  for (const option in options) {\n    if (Object.prototype.hasOwnProperty.call(options, option)) {\n      optionsCopy[option] = options[option];\n    }\n  }\n\n  if (optionsCopy.fences) {\n    optionsCopy.delimiters = delimitersFromKey(optionsCopy.fences);\n  } else {\n    optionsCopy.delimiters = optionsCopy.delimiters || defaultDelimiters;\n  }\n  optionsCopy.ignoredTags = optionsCopy.ignoredTags || [\n    \"script\",\n    \"noscript\",\n    \"style\",\n    \"textarea\",\n    \"pre\",\n    \"code\",\n    \"option\"\n  ];\n  optionsCopy.ignoredClasses = optionsCopy.ignoredClasses || [];\n  // eslint-disable-next-line no-console\n  optionsCopy.errorCallback = optionsCopy.errorCallback || console.error;\n\n  // Enable sharing of global macros defined via `\\gdef` between different\n  // math elements within a single call to `renderMathInElement`.\n  optionsCopy.macros = optionsCopy.macros || {};\n\n  renderElem(elem, optionsCopy);\n  postProcess(elem);\n};\n\n/* eslint no-console:0 */\n/**\n * This is the main entry point for Temml. Here, we expose functions for\n * rendering expressions either to DOM nodes or to markup strings.\n *\n * We also expose the ParseError class to check if errors thrown from Temml are\n * errors in the expression, or errors in javascript handling.\n */\n\n\n/**\n * @type {import('./temml').render}\n * Parse and build an expression, and place that expression in the DOM node\n * given.\n */\nlet render = function(expression, baseNode, options = {}) {\n  baseNode.textContent = \"\";\n  const alreadyInMathElement = baseNode.tagName.toLowerCase() === \"math\";\n  if (alreadyInMathElement) { options.wrap = \"none\"; }\n  const math = renderToMathMLTree(expression, options);\n  if (alreadyInMathElement) {\n    // The <math> element already exists. Populate it.\n    baseNode.textContent = \"\";\n    math.children.forEach(e => { baseNode.appendChild(e.toNode()); });\n  } else if (math.children.length > 1) {\n    baseNode.textContent = \"\";\n    math.children.forEach(e => { baseNode.appendChild(e.toNode()); });\n  } else {\n    baseNode.appendChild(math.toNode());\n  }\n};\n\n// Temml's styles don't work properly in quirks mode. Print out an error, and\n// disable rendering.\nif (typeof document !== \"undefined\") {\n  if (document.compatMode !== \"CSS1Compat\") {\n    typeof console !== \"undefined\" &&\n      console.warn(\n        \"Warning: Temml doesn't work in quirks mode. Make sure your \" +\n          \"website has a suitable doctype.\"\n      );\n\n    render = function() {\n      throw new ParseError(\"Temml doesn't work in quirks mode.\");\n    };\n  }\n}\n\n/**\n * @type {import('./temml').renderToString}\n * Parse and build an expression, and return the markup for that.\n */\nconst renderToString = function(expression, options) {\n  const markup = renderToMathMLTree(expression, options).toMarkup();\n  return markup;\n};\n\n/**\n * @type {import('./temml').generateParseTree}\n * Parse an expression and return the parse tree.\n */\nconst generateParseTree = function(expression, options) {\n  const settings = new Settings(options);\n  return parseTree(expression, settings);\n};\n\n/**\n * @type {import('./temml').definePreamble}\n * Take an expression which contains a preamble.\n * Parse it and return the macros.\n */\nconst definePreamble = function(expression, options) {\n  const settings = new Settings(options);\n  settings.macros = {};\n  if (!(typeof expression === \"string\" || expression instanceof String)) {\n    throw new TypeError(\"Temml can only parse string typed expression\")\n  }\n  const parser = new Parser(expression, settings, true);\n  // Blank out any \\df@tag to avoid spurious \"Duplicate \\tag\" errors\n  delete parser.gullet.macros.current[\"\\\\df@tag\"];\n  const macros = parser.parse();\n  return macros\n};\n\n/**\n * If the given error is a Temml ParseError,\n * renders the invalid LaTeX as a span with hover title giving the Temml\n * error message.  Otherwise, simply throws the error.\n */\nconst renderError = function(error, expression, options) {\n  if (options.throwOnError || !(error instanceof ParseError)) {\n    throw error;\n  }\n  const node = new Span([\"temml-error\"], [new TextNode$1(expression + \"\\n\\n\" + error.toString())]);\n  node.style.color = options.errorColor;\n  node.style.whiteSpace = \"pre-line\";\n  return node;\n};\n\n/**\n * @type {import('./temml').renderToMathMLTree}\n * Generates and returns the Temml build tree. This is used for advanced\n * use cases (like rendering to custom output).\n */\nconst renderToMathMLTree = function(expression, options) {\n  const settings = new Settings(options);\n  try {\n    const tree = parseTree(expression, settings);\n    const style = new Style({\n      level: settings.displayMode ? StyleLevel.DISPLAY : StyleLevel.TEXT,\n      maxSize: settings.maxSize\n    });\n    return buildMathML(tree, expression, style, settings);\n  } catch (error) {\n    return renderError(error, expression, settings);\n  }\n};\n\n/** @type {import('./temml').default} */\nvar temml$1 = {\n  /**\n   * Current Temml version\n   */\n  version: version,\n  /**\n   * Renders the given LaTeX into MathML, and adds\n   * it as a child to the specified DOM node.\n   */\n  render,\n  /**\n   * Renders the given LaTeX into MathML string,\n   * for sending to the client.\n   */\n  renderToString,\n  /**\n   * Finds all the math delimiters in a given element of a running HTML document\n   * and converts the contents of each instance into a <math> element.\n   */\n  renderMathInElement,\n  /**\n   * Post-process an entire HTML block.\n   * Writes AMS auto-numbers and implements \\ref{}.\n   * Typcally called once, after a loop has rendered many individual spans.\n   */\n  postProcess,\n  /**\n   * Temml error, usually during parsing.\n   */\n  ParseError,\n  /**\n   * Creates a set of macros with document-wide scope.\n   */\n  definePreamble,\n  /**\n   * Parses the given LaTeX into Temml's internal parse tree structure,\n   * without rendering to HTML or MathML.\n   *\n   * NOTE: This method is not currently recommended for public use.\n   * The internal tree representation is unstable and is very likely\n   * to change. Use at your own risk.\n   */\n  __parse: generateParseTree,\n  /**\n   * Renders the given LaTeX into a MathML internal DOM tree\n   * representation, without flattening that representation to a string.\n   *\n   * NOTE: This method is not currently recommended for public use.\n   * The internal tree representation is unstable and is very likely\n   * to change. Use at your own risk.\n   */\n  __renderToMathMLTree: renderToMathMLTree,\n  /**\n   * adds a new symbol to builtin symbols table\n   */\n  __defineSymbol: defineSymbol,\n  /**\n   * adds a new macro to builtin macro list\n   */\n  __defineMacro: defineMacro\n};\n\nexport { temml$1 as default };\n", "//! use only TS types\nimport * as vscode from \"vscode\";\n\n//\nimport { replaceSelectionWith, getSelection } from '../imports/utils.ts';\nimport vscodePromise from '../imports/api.ts';\n\n//\nimport temml from \"temml\";\nimport { MathMLToLaTeX } from 'mathml-to-latex';\nimport { escapeML, stripMathDelimiters } from \"../imports/str.ts\";\n\n//\nexport const convertToMathML = async (mathML: string): Promise<string> =>{\n    const original = escapeML(mathML);\n    if (!(mathML?.trim()?.startsWith?.(\"<\") && mathML?.trim()?.endsWith?.(\">\"))) {\n        try { mathML = escapeML(temml?.renderToString?.(stripMathDelimiters(mathML) || mathML, {\n            throwOnError: true,\n            strict: false,\n            xml: true\n        }) || \"\") || mathML; } catch (e) { mathML = \"\"; console.warn(e); }\n        mathML ||= original;\n    }\n    return (mathML?.normalize?.()?.trim?.() || mathML?.trim?.() || mathML);\n};\n\n//\nexport const getAsMathML = async (): Promise<string> =>{\n    const vscodeAPI = await vscodePromise;\n    return convertToMathML(await vscodeAPI?.env?.clipboard?.readText?.() || \"\") || \"\";\n};\n\n//\nexport const convertToLaTeX = (LaTeX: string): string =>{\n    const original = escapeML(LaTeX);\n    try { LaTeX = MathMLToLaTeX.convert(LaTeX); } catch (e) { LaTeX = \"\"; console.warn(e); }\n    LaTeX ||= original;\n    return (LaTeX?.normalize?.()?.trim?.() || LaTeX?.trim?.() || LaTeX);\n};\n\n//\nexport const getAsLaTeX = async (): Promise<string> =>{\n    const vscodeAPI = await vscodePromise;\n    return convertToLaTeX(await vscodeAPI?.env?.clipboard?.readText?.() || \"\") || \"\";\n};\n\n// This method is called when your extension is activated\n// Your extension is activated the very first time the command is executed\nexport async function mathml(context: vscode.ExtensionContext) {\n    const vscodeAPI = await vscodePromise;\n\n    // Use the console to output diagnostic information (console.log) and errors (console.error)\n    // This line of code will only be executed once when your extension is activated\n    console.log('Math Utils in testing');\n\n    //\n    const convertAsTeX = vscodeAPI?.commands?.registerCommand?.('vext.mtl.convert', async () => {\n        let LaTeX = convertToLaTeX(await getSelection());\n        if (LaTeX) { await replaceSelectionWith(`\\$${LaTeX}\\$`); }\n    });\n\n    //\n    const pasteAsTeX = vscodeAPI?.commands?.registerCommand?.('vext.mtl.paste', async () => {\n        const LaTeX = await getAsLaTeX();\n        if (LaTeX) { await replaceSelectionWith(`\\$${LaTeX}\\$`); }\n    });\n\n    //\n    const convertAsMML = vscodeAPI?.commands?.registerCommand?.('vext.ltm.convert', async () => {\n        let mathML = await convertToMathML(await getSelection());\n        if (mathML) { await replaceSelectionWith(`${mathML}`); }\n    });\n\n    //\n    const pasteAsMML = vscodeAPI?.commands?.registerCommand?.('vext.ltm.paste', async () => {\n        const mathML = await getAsMathML();\n        if (mathML) { await replaceSelectionWith(`${mathML}`); }\n    });\n\n    //\n    const copyAsTeX = vscodeAPI?.commands?.registerCommand?.('vext.mtl.copy', async () => {\n        let LaTeX = convertToLaTeX(await getSelection());\n        if (LaTeX) {\n            vscodeAPI?.env?.clipboard?.writeText?.(`\\$${LaTeX}\\$`);\n            vscodeAPI?.window?.showInformationMessage?.('Copied as LaTeX!');\n        }\n    });\n\n    //\n    const copyAsMML = vscodeAPI?.commands?.registerCommand?.('vext.ltm.copy', async () => {\n        let mathML = await convertToMathML(await getSelection());\n        if (mathML) {\n            vscodeAPI?.env?.clipboard?.writeText?.(mathML);\n            vscodeAPI?.window?.showInformationMessage?.('Copied as MathML!');\n        }\n    });\n\n    //\n    context.subscriptions.push(...[convertAsTeX, pasteAsTeX, convertAsMML, pasteAsMML, copyAsTeX, copyAsMML]?.filter?.((v: any)=>v) as any);\n}\n\n// This method is called when your extension is deactivated\nexport function deactivate() {}\n", "//\r\nexport const dummy = (unsafe: string)=>{\r\n    return unsafe?.trim()?.replace?.(/&amp;/g, '&')\r\n    ?.replace?.(/&lt;/g, '<')\r\n    ?.replace?.(/&gt;/g, '>')\r\n    ?.replace?.(/&quot;/g, '\"')\r\n    ?.replace?.(/&nbsp;/g, \" \")\r\n    ?.replace?.(/&#39;/g, \"'\") || unsafe;\r\n};\r\n\r\n//\r\nexport const weak_dummy = (unsafe: string)=>{\r\n    return unsafe?.trim()?.replace?.(/&amp;/g, '&')\r\n    ?.replace?.(/&nbsp;/g, \" \")\r\n    ?.replace?.(/&quot;/g, '\"')\r\n    ?.replace?.(/&#39;/g, \"'\") || unsafe;\r\n};\r\n\r\n//\r\nexport const tryXML = (unsafe: string): string => {\r\n    return dummy(unsafe) || unsafe;\r\n};\r\n\r\n//\r\nexport const stripMathDelimiters = (input: string): string => {\r\n    return input?.trim?.()?.replace?.(/^\\${1,2}([\\s\\S]*)\\${1,2}$/, '$1')?.trim?.();\r\n};\r\n\r\n//\r\nexport const escapeML = (unsafe: string): string => {\r\n    if (/&amp;|&quot;|&#39;|&lt;|&gt;|&nbsp;/.test((unsafe = stripMathDelimiters(unsafe) || unsafe)?.trim?.())) {\r\n        if (unsafe?.trim()?.startsWith?.(\"&lt;\") && unsafe?.trim()?.endsWith?.(\"&gt;\")) {\r\n            return tryXML(unsafe) || dummy(unsafe) || unsafe;\r\n        }\r\n        if (!(unsafe?.trim()?.startsWith?.(\"<\") && unsafe?.trim()?.endsWith?.(\">\"))) {\r\n            return dummy(unsafe) || unsafe;\r\n        }\r\n    }\r\n    return weak_dummy(unsafe) || unsafe;\r\n};\r\n", "//! use only TS types\nimport * as vscode from \"vscode\";\n\n//\nimport vscodePromise from '../imports/api.ts';\n\n//\nimport TurndownService from 'turndown';\nimport { marked } from 'marked';\nimport { replaceSelectionWith, getSelection } from '../imports/utils.ts';\nimport { escapeML } from \"../imports/str.ts\";\nimport markedKatex from \"marked-katex-extension\";\n\n//! unused\n//import mk from \"@vscode/markdown-it-katex\";\n\n//\nconst turndownService = new TurndownService();\n\n//\ntry {\n    marked?.use?.(markedKatex?.({\n        throwOnError: false,\n        nonStandard: true\n    }));\n} catch(e) {\n    console.warn(e);\n}\n\n//\nexport const convertToHtml = async (input: string): Promise<string> => {\n    const original = escapeML(input);\n    // \u0415\u0441\u043B\u0438 \u0443\u0436\u0435 HTML, \u043D\u0435 \u043A\u043E\u043D\u0432\u0435\u0440\u0442\u0438\u0440\u0443\u0435\u043C\n    if (input?.trim()?.startsWith?.(\"<\") && input?.trim()?.endsWith?.(\">\")) {\n        return input;\n    }\n    try {\n        // marked \u0441\u0438\u043D\u0445\u0440\u043E\u043D\u043D\u044B\u0439, \u043D\u043E \u043E\u0441\u0442\u0430\u0432\u0438\u043C async \u0434\u043B\u044F \u0441\u043E\u0432\u043C\u0435\u0441\u0442\u0438\u043C\u043E\u0441\u0442\u0438\n        input = escapeML(await marked.parse(input) || \"\") || input;\n    } catch (e) {\n        input = \"\";\n        console.warn(e);\n    }\n    input ||= original;\n    return (input?.normalize?.()?.trim?.() || input?.trim?.() || input);\n};\n\n//\nexport const getAsHtml = async (): Promise<string> => {\n    const vscodeAPI = await vscodePromise;\n    return convertToHtml(await vscodeAPI?.env?.clipboard?.readText?.() || \"\") || \"\";\n};\n\n//\nexport const convertToMarkdown = (input: string): string => {\n    const original = escapeML(input);\n    try {\n        input = turndownService.turndown(input);\n    } catch (e) {\n        input = \"\";\n        console.warn(e);\n    }\n    input ||= original;\n    return (input?.normalize?.()?.trim?.() || input?.trim?.() || input);\n};\n\n//\nexport const getAsMarkdown = async (): Promise<string> => {\n    const vscodeAPI = await vscodePromise;\n    return convertToMarkdown(await vscodeAPI?.env?.clipboard?.readText?.() || \"\") || \"\";\n};\n\n//\nexport async function markdown(context: vscode.ExtensionContext) {\n    const vscodeAPI = await vscodePromise;\n    console.log('HTML/Markdown Utils in testing');\n\n    const convertAsMarkdown = vscodeAPI?.commands?.registerCommand?.('vext.htd.convert', async () => {\n        let md = convertToMarkdown(await getSelection());\n        if (md) { await replaceSelectionWith(md); }\n    });\n\n    const pasteAsMarkdown = vscodeAPI?.commands?.registerCommand?.('vext.htd.paste', async () => {\n        const md = await getAsMarkdown();\n        if (md) { await replaceSelectionWith(md); }\n    });\n\n    const copyAsMarkdown = vscodeAPI?.commands?.registerCommand?.('vext.htd.copy', async () => {\n        let md = convertToMarkdown(await getSelection());\n        if (md) {\n            vscodeAPI?.env?.clipboard?.writeText?.(md);\n            vscodeAPI?.window?.showInformationMessage?.('Copied as Markdown!');\n        }\n    });\n\n    const copyAsHtml = vscodeAPI?.commands?.registerCommand?.('vext.dth.copy', async () => {\n        let html = await convertToHtml(await getSelection());\n        if (html) {\n            vscodeAPI?.env?.clipboard?.writeText?.(html);\n            vscodeAPI?.window?.showInformationMessage?.('Copied as HTML!');\n        }\n    });\n\n    const convertAsHtml = vscodeAPI?.commands?.registerCommand?.('vext.dth.convert', async () => {\n        let html = await convertToHtml(await getSelection());\n        if (html) { await replaceSelectionWith(html); }\n    });\n\n    const pasteAsHtml = vscodeAPI?.commands?.registerCommand?.('vext.dth.paste', async () => {\n        const html = await getAsHtml();\n        if (html) { await replaceSelectionWith(html); }\n    });\n\n    context.subscriptions.push(...[convertAsMarkdown, pasteAsMarkdown, convertAsHtml, pasteAsHtml, copyAsMarkdown, copyAsHtml]?.filter?.((v: any)=>v) as any);\n}\n\n// This method is called when your extension is deactivated\nexport function deactivate() {}\n", "import type { MarkedOptions } from './MarkedOptions.ts';\n\n/**\n * Gets the original marked default options.\n */\nexport function _getDefaults(): MarkedOptions {\n  return {\n    async: false,\n    breaks: false,\n    extensions: null,\n    gfm: true,\n    hooks: null,\n    pedantic: false,\n    renderer: null,\n    silent: false,\n    tokenizer: null,\n    walkTokens: null,\n  };\n}\n\nexport let _defaults = _getDefaults();\n\nexport function changeDefaults(newDefaults: MarkedOptions) {\n  _defaults = newDefaults;\n}\n", "const noopTest = { exec: () => null } as unknown as RegExp;\n\nfunction edit(regex: string | RegExp, opt = '') {\n  let source = typeof regex === 'string' ? regex : regex.source;\n  const obj = {\n    replace: (name: string | RegExp, val: string | RegExp) => {\n      let valSource = typeof val === 'string' ? val : val.source;\n      valSource = valSource.replace(other.caret, '$1');\n      source = source.replace(name, valSource);\n      return obj;\n    },\n    getRegex: () => {\n      return new RegExp(source, opt);\n    },\n  };\n  return obj;\n}\n\nexport const other = {\n  codeRemoveIndent: /^(?: {1,4}| {0,3}\\t)/gm,\n  outputLinkReplace: /\\\\([\\[\\]])/g,\n  indentCodeCompensation: /^(\\s+)(?:```)/,\n  beginningSpace: /^\\s+/,\n  endingHash: /#$/,\n  startingSpaceChar: /^ /,\n  endingSpaceChar: / $/,\n  nonSpaceChar: /[^ ]/,\n  newLineCharGlobal: /\\n/g,\n  tabCharGlobal: /\\t/g,\n  multipleSpaceGlobal: /\\s+/g,\n  blankLine: /^[ \\t]*$/,\n  doubleBlankLine: /\\n[ \\t]*\\n[ \\t]*$/,\n  blockquoteStart: /^ {0,3}>/,\n  blockquoteSetextReplace: /\\n {0,3}((?:=+|-+) *)(?=\\n|$)/g,\n  blockquoteSetextReplace2: /^ {0,3}>[ \\t]?/gm,\n  listReplaceTabs: /^\\t+/,\n  listReplaceNesting: /^ {1,4}(?=( {4})*[^ ])/g,\n  listIsTask: /^\\[[ xX]\\] /,\n  listReplaceTask: /^\\[[ xX]\\] +/,\n  anyLine: /\\n.*\\n/,\n  hrefBrackets: /^<(.*)>$/,\n  tableDelimiter: /[:|]/,\n  tableAlignChars: /^\\||\\| *$/g,\n  tableRowBlankLine: /\\n[ \\t]*$/,\n  tableAlignRight: /^ *-+: *$/,\n  tableAlignCenter: /^ *:-+: *$/,\n  tableAlignLeft: /^ *:-+ *$/,\n  startATag: /^<a /i,\n  endATag: /^<\\/a>/i,\n  startPreScriptTag: /^<(pre|code|kbd|script)(\\s|>)/i,\n  endPreScriptTag: /^<\\/(pre|code|kbd|script)(\\s|>)/i,\n  startAngleBracket: /^</,\n  endAngleBracket: />$/,\n  pedanticHrefTitle: /^([^'\"]*[^\\s])\\s+(['\"])(.*)\\2/,\n  unicodeAlphaNumeric: /[\\p{L}\\p{N}]/u,\n  escapeTest: /[&<>\"']/,\n  escapeReplace: /[&<>\"']/g,\n  escapeTestNoEncode: /[<>\"']|&(?!(#\\d{1,7}|#[Xx][a-fA-F0-9]{1,6}|\\w+);)/,\n  escapeReplaceNoEncode: /[<>\"']|&(?!(#\\d{1,7}|#[Xx][a-fA-F0-9]{1,6}|\\w+);)/g,\n  unescapeTest: /&(#(?:\\d+)|(?:#x[0-9A-Fa-f]+)|(?:\\w+));?/ig,\n  caret: /(^|[^\\[])\\^/g,\n  percentDecode: /%25/g,\n  findPipe: /\\|/g,\n  splitPipe: / \\|/,\n  slashPipe: /\\\\\\|/g,\n  carriageReturn: /\\r\\n|\\r/g,\n  spaceLine: /^ +$/gm,\n  notSpaceStart: /^\\S*/,\n  endingNewline: /\\n$/,\n  listItemRegex: (bull: string) => new RegExp(`^( {0,3}${bull})((?:[\\t ][^\\\\n]*)?(?:\\\\n|$))`),\n  nextBulletRegex: (indent: number) => new RegExp(`^ {0,${Math.min(3, indent - 1)}}(?:[*+-]|\\\\d{1,9}[.)])((?:[ \\t][^\\\\n]*)?(?:\\\\n|$))`),\n  hrRegex: (indent: number) => new RegExp(`^ {0,${Math.min(3, indent - 1)}}((?:- *){3,}|(?:_ *){3,}|(?:\\\\* *){3,})(?:\\\\n+|$)`),\n  fencesBeginRegex: (indent: number) => new RegExp(`^ {0,${Math.min(3, indent - 1)}}(?:\\`\\`\\`|~~~)`),\n  headingBeginRegex: (indent: number) => new RegExp(`^ {0,${Math.min(3, indent - 1)}}#`),\n  htmlBeginRegex: (indent: number) => new RegExp(`^ {0,${Math.min(3, indent - 1)}}<(?:[a-z].*>|!--)`, 'i'),\n};\n\n/**\n * Block-Level Grammar\n */\n\nconst newline = /^(?:[ \\t]*(?:\\n|$))+/;\nconst blockCode = /^((?: {4}| {0,3}\\t)[^\\n]+(?:\\n(?:[ \\t]*(?:\\n|$))*)?)+/;\nconst fences = /^ {0,3}(`{3,}(?=[^`\\n]*(?:\\n|$))|~{3,})([^\\n]*)(?:\\n|$)(?:|([\\s\\S]*?)(?:\\n|$))(?: {0,3}\\1[~`]* *(?=\\n|$)|$)/;\nconst hr = /^ {0,3}((?:-[\\t ]*){3,}|(?:_[ \\t]*){3,}|(?:\\*[ \\t]*){3,})(?:\\n+|$)/;\nconst heading = /^ {0,3}(#{1,6})(?=\\s|$)(.*)(?:\\n+|$)/;\nconst bullet = /(?:[*+-]|\\d{1,9}[.)])/;\nconst lheadingCore = /^(?!bull |blockCode|fences|blockquote|heading|html|table)((?:.|\\n(?!\\s*?\\n|bull |blockCode|fences|blockquote|heading|html|table))+?)\\n {0,3}(=+|-+) *(?:\\n+|$)/;\nconst lheading = edit(lheadingCore)\n  .replace(/bull/g, bullet) // lists can interrupt\n  .replace(/blockCode/g, /(?: {4}| {0,3}\\t)/) // indented code blocks can interrupt\n  .replace(/fences/g, / {0,3}(?:`{3,}|~{3,})/) // fenced code blocks can interrupt\n  .replace(/blockquote/g, / {0,3}>/) // blockquote can interrupt\n  .replace(/heading/g, / {0,3}#{1,6}/) // ATX heading can interrupt\n  .replace(/html/g, / {0,3}<[^\\n>]+>\\n/) // block html can interrupt\n  .replace(/\\|table/g, '') // table not in commonmark\n  .getRegex();\nconst lheadingGfm = edit(lheadingCore)\n  .replace(/bull/g, bullet) // lists can interrupt\n  .replace(/blockCode/g, /(?: {4}| {0,3}\\t)/) // indented code blocks can interrupt\n  .replace(/fences/g, / {0,3}(?:`{3,}|~{3,})/) // fenced code blocks can interrupt\n  .replace(/blockquote/g, / {0,3}>/) // blockquote can interrupt\n  .replace(/heading/g, / {0,3}#{1,6}/) // ATX heading can interrupt\n  .replace(/html/g, / {0,3}<[^\\n>]+>\\n/) // block html can interrupt\n  .replace(/table/g, / {0,3}\\|?(?:[:\\- ]*\\|)+[\\:\\- ]*\\n/) // table can interrupt\n  .getRegex();\nconst _paragraph = /^([^\\n]+(?:\\n(?!hr|heading|lheading|blockquote|fences|list|html|table| +\\n)[^\\n]+)*)/;\nconst blockText = /^[^\\n]+/;\nconst _blockLabel = /(?!\\s*\\])(?:\\\\.|[^\\[\\]\\\\])+/;\nconst def = edit(/^ {0,3}\\[(label)\\]: *(?:\\n[ \\t]*)?([^<\\s][^\\s]*|<.*?>)(?:(?: +(?:\\n[ \\t]*)?| *\\n[ \\t]*)(title))? *(?:\\n+|$)/)\n  .replace('label', _blockLabel)\n  .replace('title', /(?:\"(?:\\\\\"?|[^\"\\\\])*\"|'[^'\\n]*(?:\\n[^'\\n]+)*\\n?'|\\([^()]*\\))/)\n  .getRegex();\n\nconst list = edit(/^( {0,3}bull)([ \\t][^\\n]+?)?(?:\\n|$)/)\n  .replace(/bull/g, bullet)\n  .getRegex();\n\nconst _tag = 'address|article|aside|base|basefont|blockquote|body|caption'\n  + '|center|col|colgroup|dd|details|dialog|dir|div|dl|dt|fieldset|figcaption'\n  + '|figure|footer|form|frame|frameset|h[1-6]|head|header|hr|html|iframe'\n  + '|legend|li|link|main|menu|menuitem|meta|nav|noframes|ol|optgroup|option'\n  + '|p|param|search|section|summary|table|tbody|td|tfoot|th|thead|title'\n  + '|tr|track|ul';\nconst _comment = /<!--(?:-?>|[\\s\\S]*?(?:-->|$))/;\nconst html = edit(\n  '^ {0,3}(?:' // optional indentation\n+ '<(script|pre|style|textarea)[\\\\s>][\\\\s\\\\S]*?(?:</\\\\1>[^\\\\n]*\\\\n+|$)' // (1)\n+ '|comment[^\\\\n]*(\\\\n+|$)' // (2)\n+ '|<\\\\?[\\\\s\\\\S]*?(?:\\\\?>\\\\n*|$)' // (3)\n+ '|<![A-Z][\\\\s\\\\S]*?(?:>\\\\n*|$)' // (4)\n+ '|<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?(?:\\\\]\\\\]>\\\\n*|$)' // (5)\n+ '|</?(tag)(?: +|\\\\n|/?>)[\\\\s\\\\S]*?(?:(?:\\\\n[ \\t]*)+\\\\n|$)' // (6)\n+ '|<(?!script|pre|style|textarea)([a-z][\\\\w-]*)(?:attribute)*? */?>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:(?:\\\\n[ \\t]*)+\\\\n|$)' // (7) open tag\n+ '|</(?!script|pre|style|textarea)[a-z][\\\\w-]*\\\\s*>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:(?:\\\\n[ \\t]*)+\\\\n|$)' // (7) closing tag\n+ ')', 'i')\n  .replace('comment', _comment)\n  .replace('tag', _tag)\n  .replace('attribute', / +[a-zA-Z:_][\\w.:-]*(?: *= *\"[^\"\\n]*\"| *= *'[^'\\n]*'| *= *[^\\s\"'=<>`]+)?/)\n  .getRegex();\n\nconst paragraph = edit(_paragraph)\n  .replace('hr', hr)\n  .replace('heading', ' {0,3}#{1,6}(?:\\\\s|$)')\n  .replace('|lheading', '') // setext headings don't interrupt commonmark paragraphs\n  .replace('|table', '')\n  .replace('blockquote', ' {0,3}>')\n  .replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n')\n  .replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)')\n  .replace('tag', _tag) // pars can be interrupted by type (6) html blocks\n  .getRegex();\n\nconst blockquote = edit(/^( {0,3}> ?(paragraph|[^\\n]*)(?:\\n|$))+/)\n  .replace('paragraph', paragraph)\n  .getRegex();\n\n/**\n * Normal Block Grammar\n */\n\nconst blockNormal = {\n  blockquote,\n  code: blockCode,\n  def,\n  fences,\n  heading,\n  hr,\n  html,\n  lheading,\n  list,\n  newline,\n  paragraph,\n  table: noopTest,\n  text: blockText,\n};\n\ntype BlockKeys = keyof typeof blockNormal;\n\n/**\n * GFM Block Grammar\n */\n\nconst gfmTable = edit(\n  '^ *([^\\\\n ].*)\\\\n' // Header\n+ ' {0,3}((?:\\\\| *)?:?-+:? *(?:\\\\| *:?-+:? *)*(?:\\\\| *)?)' // Align\n+ '(?:\\\\n((?:(?! *\\\\n|hr|heading|blockquote|code|fences|list|html).*(?:\\\\n|$))*)\\\\n*|$)') // Cells\n  .replace('hr', hr)\n  .replace('heading', ' {0,3}#{1,6}(?:\\\\s|$)')\n  .replace('blockquote', ' {0,3}>')\n  .replace('code', '(?: {4}| {0,3}\\t)[^\\\\n]')\n  .replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n')\n  .replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)')\n  .replace('tag', _tag) // tables can be interrupted by type (6) html blocks\n  .getRegex();\n\nconst blockGfm: Record<BlockKeys, RegExp> = {\n  ...blockNormal,\n  lheading: lheadingGfm,\n  table: gfmTable,\n  paragraph: edit(_paragraph)\n    .replace('hr', hr)\n    .replace('heading', ' {0,3}#{1,6}(?:\\\\s|$)')\n    .replace('|lheading', '') // setext headings don't interrupt commonmark paragraphs\n    .replace('table', gfmTable) // interrupt paragraphs with table\n    .replace('blockquote', ' {0,3}>')\n    .replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n')\n    .replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n    .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)')\n    .replace('tag', _tag) // pars can be interrupted by type (6) html blocks\n    .getRegex(),\n};\n\n/**\n * Pedantic grammar (original John Gruber's loose markdown specification)\n */\n\nconst blockPedantic: Record<BlockKeys, RegExp> = {\n  ...blockNormal,\n  html: edit(\n    '^ *(?:comment *(?:\\\\n|\\\\s*$)'\n    + '|<(tag)[\\\\s\\\\S]+?</\\\\1> *(?:\\\\n{2,}|\\\\s*$)' // closed tag\n    + '|<tag(?:\"[^\"]*\"|\\'[^\\']*\\'|\\\\s[^\\'\"/>\\\\s]*)*?/?> *(?:\\\\n{2,}|\\\\s*$))')\n    .replace('comment', _comment)\n    .replace(/tag/g, '(?!(?:'\n      + 'a|em|strong|small|s|cite|q|dfn|abbr|data|time|code|var|samp|kbd|sub'\n      + '|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo|span|br|wbr|ins|del|img)'\n      + '\\\\b)\\\\w+(?!:|[^\\\\w\\\\s@]*@)\\\\b')\n    .getRegex(),\n  def: /^ *\\[([^\\]]+)\\]: *<?([^\\s>]+)>?(?: +([\"(][^\\n]+[\")]))? *(?:\\n+|$)/,\n  heading: /^(#{1,6})(.*)(?:\\n+|$)/,\n  fences: noopTest, // fences not supported\n  lheading: /^(.+?)\\n {0,3}(=+|-+) *(?:\\n+|$)/,\n  paragraph: edit(_paragraph)\n    .replace('hr', hr)\n    .replace('heading', ' *#{1,6} *[^\\n]')\n    .replace('lheading', lheading)\n    .replace('|table', '')\n    .replace('blockquote', ' {0,3}>')\n    .replace('|fences', '')\n    .replace('|list', '')\n    .replace('|html', '')\n    .replace('|tag', '')\n    .getRegex(),\n};\n\n/**\n * Inline-Level Grammar\n */\n\nconst escape = /^\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/;\nconst inlineCode = /^(`+)([^`]|[^`][\\s\\S]*?[^`])\\1(?!`)/;\nconst br = /^( {2,}|\\\\)\\n(?!\\s*$)/;\nconst inlineText = /^(`+|[^`])(?:(?= {2,}\\n)|[\\s\\S]*?(?:(?=[\\\\<!\\[`*_]|\\b_|$)|[^ ](?= {2,}\\n)))/;\n\n// list of unicode punctuation marks, plus any missing characters from CommonMark spec\nconst _punctuation = /[\\p{P}\\p{S}]/u;\nconst _punctuationOrSpace = /[\\s\\p{P}\\p{S}]/u;\nconst _notPunctuationOrSpace = /[^\\s\\p{P}\\p{S}]/u;\nconst punctuation = edit(/^((?![*_])punctSpace)/, 'u')\n  .replace(/punctSpace/g, _punctuationOrSpace).getRegex();\n\n// GFM allows ~ inside strong and em for strikethrough\nconst _punctuationGfmStrongEm = /(?!~)[\\p{P}\\p{S}]/u;\nconst _punctuationOrSpaceGfmStrongEm = /(?!~)[\\s\\p{P}\\p{S}]/u;\nconst _notPunctuationOrSpaceGfmStrongEm = /(?:[^\\s\\p{P}\\p{S}]|~)/u;\n\n// sequences em should skip over [title](link), `code`, <html>\nconst blockSkip = /\\[[^[\\]]*?\\]\\((?:\\\\.|[^\\\\\\(\\)]|\\((?:\\\\.|[^\\\\\\(\\)])*\\))*\\)|`[^`]*?`|<[^<>]*?>/g;\n\nconst emStrongLDelimCore = /^(?:\\*+(?:((?!\\*)punct)|[^\\s*]))|^_+(?:((?!_)punct)|([^\\s_]))/;\n\nconst emStrongLDelim = edit(emStrongLDelimCore, 'u')\n  .replace(/punct/g, _punctuation)\n  .getRegex();\n\nconst emStrongLDelimGfm = edit(emStrongLDelimCore, 'u')\n  .replace(/punct/g, _punctuationGfmStrongEm)\n  .getRegex();\n\nconst emStrongRDelimAstCore =\n  '^[^_*]*?__[^_*]*?\\\\*[^_*]*?(?=__)' // Skip orphan inside strong\n+ '|[^*]+(?=[^*])' // Consume to delim\n+ '|(?!\\\\*)punct(\\\\*+)(?=[\\\\s]|$)' // (1) #*** can only be a Right Delimiter\n+ '|notPunctSpace(\\\\*+)(?!\\\\*)(?=punctSpace|$)' // (2) a***#, a*** can only be a Right Delimiter\n+ '|(?!\\\\*)punctSpace(\\\\*+)(?=notPunctSpace)' // (3) #***a, ***a can only be Left Delimiter\n+ '|[\\\\s](\\\\*+)(?!\\\\*)(?=punct)' // (4) ***# can only be Left Delimiter\n+ '|(?!\\\\*)punct(\\\\*+)(?!\\\\*)(?=punct)' // (5) #***# can be either Left or Right Delimiter\n+ '|notPunctSpace(\\\\*+)(?=notPunctSpace)'; // (6) a***a can be either Left or Right Delimiter\n\nconst emStrongRDelimAst = edit(emStrongRDelimAstCore, 'gu')\n  .replace(/notPunctSpace/g, _notPunctuationOrSpace)\n  .replace(/punctSpace/g, _punctuationOrSpace)\n  .replace(/punct/g, _punctuation)\n  .getRegex();\n\nconst emStrongRDelimAstGfm = edit(emStrongRDelimAstCore, 'gu')\n  .replace(/notPunctSpace/g, _notPunctuationOrSpaceGfmStrongEm)\n  .replace(/punctSpace/g, _punctuationOrSpaceGfmStrongEm)\n  .replace(/punct/g, _punctuationGfmStrongEm)\n  .getRegex();\n\n// (6) Not allowed for _\nconst emStrongRDelimUnd = edit(\n  '^[^_*]*?\\\\*\\\\*[^_*]*?_[^_*]*?(?=\\\\*\\\\*)' // Skip orphan inside strong\n+ '|[^_]+(?=[^_])' // Consume to delim\n+ '|(?!_)punct(_+)(?=[\\\\s]|$)' // (1) #___ can only be a Right Delimiter\n+ '|notPunctSpace(_+)(?!_)(?=punctSpace|$)' // (2) a___#, a___ can only be a Right Delimiter\n+ '|(?!_)punctSpace(_+)(?=notPunctSpace)' // (3) #___a, ___a can only be Left Delimiter\n+ '|[\\\\s](_+)(?!_)(?=punct)' // (4) ___# can only be Left Delimiter\n+ '|(?!_)punct(_+)(?!_)(?=punct)', 'gu') // (5) #___# can be either Left or Right Delimiter\n  .replace(/notPunctSpace/g, _notPunctuationOrSpace)\n  .replace(/punctSpace/g, _punctuationOrSpace)\n  .replace(/punct/g, _punctuation)\n  .getRegex();\n\nconst anyPunctuation = edit(/\\\\(punct)/, 'gu')\n  .replace(/punct/g, _punctuation)\n  .getRegex();\n\nconst autolink = edit(/^<(scheme:[^\\s\\x00-\\x1f<>]*|email)>/)\n  .replace('scheme', /[a-zA-Z][a-zA-Z0-9+.-]{1,31}/)\n  .replace('email', /[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+(@)[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+(?![-_])/)\n  .getRegex();\n\nconst _inlineComment = edit(_comment).replace('(?:-->|$)', '-->').getRegex();\nconst tag = edit(\n  '^comment'\n    + '|^</[a-zA-Z][\\\\w:-]*\\\\s*>' // self-closing tag\n    + '|^<[a-zA-Z][\\\\w-]*(?:attribute)*?\\\\s*/?>' // open tag\n    + '|^<\\\\?[\\\\s\\\\S]*?\\\\?>' // processing instruction, e.g. <?php ?>\n    + '|^<![a-zA-Z]+\\\\s[\\\\s\\\\S]*?>' // declaration, e.g. <!DOCTYPE html>\n    + '|^<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>') // CDATA section\n  .replace('comment', _inlineComment)\n  .replace('attribute', /\\s+[a-zA-Z:_][\\w.:-]*(?:\\s*=\\s*\"[^\"]*\"|\\s*=\\s*'[^']*'|\\s*=\\s*[^\\s\"'=<>`]+)?/)\n  .getRegex();\n\nconst _inlineLabel = /(?:\\[(?:\\\\.|[^\\[\\]\\\\])*\\]|\\\\.|`[^`]*`|[^\\[\\]\\\\`])*?/;\n\nconst link = edit(/^!?\\[(label)\\]\\(\\s*(href)(?:(?:[ \\t]*(?:\\n[ \\t]*)?)(title))?\\s*\\)/)\n  .replace('label', _inlineLabel)\n  .replace('href', /<(?:\\\\.|[^\\n<>\\\\])+>|[^ \\t\\n\\x00-\\x1f]*/)\n  .replace('title', /\"(?:\\\\\"?|[^\"\\\\])*\"|'(?:\\\\'?|[^'\\\\])*'|\\((?:\\\\\\)?|[^)\\\\])*\\)/)\n  .getRegex();\n\nconst reflink = edit(/^!?\\[(label)\\]\\[(ref)\\]/)\n  .replace('label', _inlineLabel)\n  .replace('ref', _blockLabel)\n  .getRegex();\n\nconst nolink = edit(/^!?\\[(ref)\\](?:\\[\\])?/)\n  .replace('ref', _blockLabel)\n  .getRegex();\n\nconst reflinkSearch = edit('reflink|nolink(?!\\\\()', 'g')\n  .replace('reflink', reflink)\n  .replace('nolink', nolink)\n  .getRegex();\n\n/**\n * Normal Inline Grammar\n */\n\nconst inlineNormal = {\n  _backpedal: noopTest, // only used for GFM url\n  anyPunctuation,\n  autolink,\n  blockSkip,\n  br,\n  code: inlineCode,\n  del: noopTest,\n  emStrongLDelim,\n  emStrongRDelimAst,\n  emStrongRDelimUnd,\n  escape,\n  link,\n  nolink,\n  punctuation,\n  reflink,\n  reflinkSearch,\n  tag,\n  text: inlineText,\n  url: noopTest,\n};\n\ntype InlineKeys = keyof typeof inlineNormal;\n\n/**\n * Pedantic Inline Grammar\n */\n\nconst inlinePedantic: Record<InlineKeys, RegExp> = {\n  ...inlineNormal,\n  link: edit(/^!?\\[(label)\\]\\((.*?)\\)/)\n    .replace('label', _inlineLabel)\n    .getRegex(),\n  reflink: edit(/^!?\\[(label)\\]\\s*\\[([^\\]]*)\\]/)\n    .replace('label', _inlineLabel)\n    .getRegex(),\n};\n\n/**\n * GFM Inline Grammar\n */\n\nconst inlineGfm: Record<InlineKeys, RegExp> = {\n  ...inlineNormal,\n  emStrongRDelimAst: emStrongRDelimAstGfm,\n  emStrongLDelim: emStrongLDelimGfm,\n  url: edit(/^((?:ftp|https?):\\/\\/|www\\.)(?:[a-zA-Z0-9\\-]+\\.?)+[^\\s<]*|^email/, 'i')\n    .replace('email', /[A-Za-z0-9._+-]+(@)[a-zA-Z0-9-_]+(?:\\.[a-zA-Z0-9-_]*[a-zA-Z0-9])+(?![-_])/)\n    .getRegex(),\n  _backpedal: /(?:[^?!.,:;*_'\"~()&]+|\\([^)]*\\)|&(?![a-zA-Z0-9]+;$)|[?!.,:;*_'\"~)]+(?!$))+/,\n  del: /^(~~?)(?=[^\\s~])((?:\\\\.|[^\\\\])*?(?:\\\\.|[^\\s~\\\\]))\\1(?=[^~]|$)/,\n  text: /^([`~]+|[^`~])(?:(?= {2,}\\n)|(?=[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@)|[\\s\\S]*?(?:(?=[\\\\<!\\[`*~_]|\\b_|https?:\\/\\/|ftp:\\/\\/|www\\.|$)|[^ ](?= {2,}\\n)|[^a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-](?=[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@)))/,\n};\n\n/**\n * GFM + Line Breaks Inline Grammar\n */\n\nconst inlineBreaks: Record<InlineKeys, RegExp> = {\n  ...inlineGfm,\n  br: edit(br).replace('{2,}', '*').getRegex(),\n  text: edit(inlineGfm.text)\n    .replace('\\\\b_', '\\\\b_| {2,}\\\\n')\n    .replace(/\\{2,\\}/g, '*')\n    .getRegex(),\n};\n\n/**\n * exports\n */\n\nexport const block = {\n  normal: blockNormal,\n  gfm: blockGfm,\n  pedantic: blockPedantic,\n};\n\nexport const inline = {\n  normal: inlineNormal,\n  gfm: inlineGfm,\n  breaks: inlineBreaks,\n  pedantic: inlinePedantic,\n};\n\nexport interface Rules {\n  other: typeof other\n  block: Record<BlockKeys, RegExp>\n  inline: Record<InlineKeys, RegExp>\n}\n", "import { other } from './rules.ts';\n\n/**\n * Helpers\n */\nconst escapeReplacements: { [index: string]: string } = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  \"'\": '&#39;',\n};\nconst getEscapeReplacement = (ch: string) => escapeReplacements[ch];\n\nexport function escape(html: string, encode?: boolean) {\n  if (encode) {\n    if (other.escapeTest.test(html)) {\n      return html.replace(other.escapeReplace, getEscapeReplacement);\n    }\n  } else {\n    if (other.escapeTestNoEncode.test(html)) {\n      return html.replace(other.escapeReplaceNoEncode, getEscapeReplacement);\n    }\n  }\n\n  return html;\n}\n\nexport function unescape(html: string) {\n  // explicitly match decimal, hex, and named HTML entities\n  return html.replace(other.unescapeTest, (_, n) => {\n    n = n.toLowerCase();\n    if (n === 'colon') return ':';\n    if (n.charAt(0) === '#') {\n      return n.charAt(1) === 'x'\n        ? String.fromCharCode(parseInt(n.substring(2), 16))\n        : String.fromCharCode(+n.substring(1));\n    }\n    return '';\n  });\n}\n\nexport function cleanUrl(href: string) {\n  try {\n    href = encodeURI(href).replace(other.percentDecode, '%');\n  } catch {\n    return null;\n  }\n  return href;\n}\n\nexport function splitCells(tableRow: string, count?: number) {\n  // ensure that every cell-delimiting pipe has a space\n  // before it to distinguish it from an escaped pipe\n  const row = tableRow.replace(other.findPipe, (match, offset, str) => {\n      let escaped = false;\n      let curr = offset;\n      while (--curr >= 0 && str[curr] === '\\\\') escaped = !escaped;\n      if (escaped) {\n        // odd number of slashes means | is escaped\n        // so we leave it alone\n        return '|';\n      } else {\n        // add space before unescaped |\n        return ' |';\n      }\n    }),\n    cells = row.split(other.splitPipe);\n  let i = 0;\n\n  // First/last cell in a row cannot be empty if it has no leading/trailing pipe\n  if (!cells[0].trim()) {\n    cells.shift();\n  }\n  if (cells.length > 0 && !cells.at(-1)?.trim()) {\n    cells.pop();\n  }\n\n  if (count) {\n    if (cells.length > count) {\n      cells.splice(count);\n    } else {\n      while (cells.length < count) cells.push('');\n    }\n  }\n\n  for (; i < cells.length; i++) {\n    // leading or trailing whitespace is ignored per the gfm spec\n    cells[i] = cells[i].trim().replace(other.slashPipe, '|');\n  }\n  return cells;\n}\n\n/**\n * Remove trailing 'c's. Equivalent to str.replace(/c*$/, '').\n * /c*$/ is vulnerable to REDOS.\n *\n * @param str\n * @param c\n * @param invert Remove suffix of non-c chars instead. Default falsey.\n */\nexport function rtrim(str: string, c: string, invert?: boolean) {\n  const l = str.length;\n  if (l === 0) {\n    return '';\n  }\n\n  // Length of suffix matching the invert condition.\n  let suffLen = 0;\n\n  // Step left until we fail to match the invert condition.\n  while (suffLen < l) {\n    const currChar = str.charAt(l - suffLen - 1);\n    if (currChar === c && !invert) {\n      suffLen++;\n    } else if (currChar !== c && invert) {\n      suffLen++;\n    } else {\n      break;\n    }\n  }\n\n  return str.slice(0, l - suffLen);\n}\n\nexport function findClosingBracket(str: string, b: string) {\n  if (str.indexOf(b[1]) === -1) {\n    return -1;\n  }\n\n  let level = 0;\n  for (let i = 0; i < str.length; i++) {\n    if (str[i] === '\\\\') {\n      i++;\n    } else if (str[i] === b[0]) {\n      level++;\n    } else if (str[i] === b[1]) {\n      level--;\n      if (level < 0) {\n        return i;\n      }\n    }\n  }\n  if (level > 0) {\n    return -2;\n  }\n\n  return -1;\n}\n", "import { _defaults } from './defaults.ts';\nimport {\n  rtrim,\n  splitCells,\n  findClosingBracket,\n} from './helpers.ts';\nimport type { Rules } from './rules.ts';\nimport type { _Lexer } from './Lexer.ts';\nimport type { Links, Tokens, Token } from './Tokens.ts';\nimport type { MarkedOptions } from './MarkedOptions.ts';\n\nfunction outputLink(cap: string[], link: Pick<Tokens.Link, 'href' | 'title'>, raw: string, lexer: _Lexer, rules: Rules): Tokens.Link | Tokens.Image {\n  const href = link.href;\n  const title = link.title || null;\n  const text = cap[1].replace(rules.other.outputLinkReplace, '$1');\n\n  lexer.state.inLink = true;\n  const token: Tokens.Link | Tokens.Image = {\n    type: cap[0].charAt(0) === '!' ? 'image' : 'link',\n    raw,\n    href,\n    title,\n    text,\n    tokens: lexer.inlineTokens(text),\n  };\n  lexer.state.inLink = false;\n  return token;\n}\n\nfunction indentCodeCompensation(raw: string, text: string, rules: Rules) {\n  const matchIndentToCode = raw.match(rules.other.indentCodeCompensation);\n\n  if (matchIndentToCode === null) {\n    return text;\n  }\n\n  const indentToCode = matchIndentToCode[1];\n\n  return text\n    .split('\\n')\n    .map(node => {\n      const matchIndentInNode = node.match(rules.other.beginningSpace);\n      if (matchIndentInNode === null) {\n        return node;\n      }\n\n      const [indentInNode] = matchIndentInNode;\n\n      if (indentInNode.length >= indentToCode.length) {\n        return node.slice(indentToCode.length);\n      }\n\n      return node;\n    })\n    .join('\\n');\n}\n\n/**\n * Tokenizer\n */\nexport class _Tokenizer {\n  options: MarkedOptions;\n  rules!: Rules; // set by the lexer\n  lexer!: _Lexer; // set by the lexer\n\n  constructor(options?: MarkedOptions) {\n    this.options = options || _defaults;\n  }\n\n  space(src: string): Tokens.Space | undefined {\n    const cap = this.rules.block.newline.exec(src);\n    if (cap && cap[0].length > 0) {\n      return {\n        type: 'space',\n        raw: cap[0],\n      };\n    }\n  }\n\n  code(src: string): Tokens.Code | undefined {\n    const cap = this.rules.block.code.exec(src);\n    if (cap) {\n      const text = cap[0].replace(this.rules.other.codeRemoveIndent, '');\n      return {\n        type: 'code',\n        raw: cap[0],\n        codeBlockStyle: 'indented',\n        text: !this.options.pedantic\n          ? rtrim(text, '\\n')\n          : text,\n      };\n    }\n  }\n\n  fences(src: string): Tokens.Code | undefined {\n    const cap = this.rules.block.fences.exec(src);\n    if (cap) {\n      const raw = cap[0];\n      const text = indentCodeCompensation(raw, cap[3] || '', this.rules);\n\n      return {\n        type: 'code',\n        raw,\n        lang: cap[2] ? cap[2].trim().replace(this.rules.inline.anyPunctuation, '$1') : cap[2],\n        text,\n      };\n    }\n  }\n\n  heading(src: string): Tokens.Heading | undefined {\n    const cap = this.rules.block.heading.exec(src);\n    if (cap) {\n      let text = cap[2].trim();\n\n      // remove trailing #s\n      if (this.rules.other.endingHash.test(text)) {\n        const trimmed = rtrim(text, '#');\n        if (this.options.pedantic) {\n          text = trimmed.trim();\n        } else if (!trimmed || this.rules.other.endingSpaceChar.test(trimmed)) {\n          // CommonMark requires space before trailing #s\n          text = trimmed.trim();\n        }\n      }\n\n      return {\n        type: 'heading',\n        raw: cap[0],\n        depth: cap[1].length,\n        text,\n        tokens: this.lexer.inline(text),\n      };\n    }\n  }\n\n  hr(src: string): Tokens.Hr | undefined {\n    const cap = this.rules.block.hr.exec(src);\n    if (cap) {\n      return {\n        type: 'hr',\n        raw: rtrim(cap[0], '\\n'),\n      };\n    }\n  }\n\n  blockquote(src: string): Tokens.Blockquote | undefined {\n    const cap = this.rules.block.blockquote.exec(src);\n    if (cap) {\n      let lines = rtrim(cap[0], '\\n').split('\\n');\n      let raw = '';\n      let text = '';\n      const tokens: Token[] = [];\n\n      while (lines.length > 0) {\n        let inBlockquote = false;\n        const currentLines = [];\n\n        let i;\n        for (i = 0; i < lines.length; i++) {\n          // get lines up to a continuation\n          if (this.rules.other.blockquoteStart.test(lines[i])) {\n            currentLines.push(lines[i]);\n            inBlockquote = true;\n          } else if (!inBlockquote) {\n            currentLines.push(lines[i]);\n          } else {\n            break;\n          }\n        }\n        lines = lines.slice(i);\n\n        const currentRaw = currentLines.join('\\n');\n        const currentText = currentRaw\n          // precede setext continuation with 4 spaces so it isn't a setext\n          .replace(this.rules.other.blockquoteSetextReplace, '\\n    $1')\n          .replace(this.rules.other.blockquoteSetextReplace2, '');\n        raw = raw ? `${raw}\\n${currentRaw}` : currentRaw;\n        text = text ? `${text}\\n${currentText}` : currentText;\n\n        // parse blockquote lines as top level tokens\n        // merge paragraphs if this is a continuation\n        const top = this.lexer.state.top;\n        this.lexer.state.top = true;\n        this.lexer.blockTokens(currentText, tokens, true);\n        this.lexer.state.top = top;\n\n        // if there is no continuation then we are done\n        if (lines.length === 0) {\n          break;\n        }\n\n        const lastToken = tokens.at(-1);\n\n        if (lastToken?.type === 'code') {\n          // blockquote continuation cannot be preceded by a code block\n          break;\n        } else if (lastToken?.type === 'blockquote') {\n          // include continuation in nested blockquote\n          const oldToken = lastToken as Tokens.Blockquote;\n          const newText = oldToken.raw + '\\n' + lines.join('\\n');\n          const newToken = this.blockquote(newText)!;\n          tokens[tokens.length - 1] = newToken;\n\n          raw = raw.substring(0, raw.length - oldToken.raw.length) + newToken.raw;\n          text = text.substring(0, text.length - oldToken.text.length) + newToken.text;\n          break;\n        } else if (lastToken?.type === 'list') {\n          // include continuation in nested list\n          const oldToken = lastToken as Tokens.List;\n          const newText = oldToken.raw + '\\n' + lines.join('\\n');\n          const newToken = this.list(newText)!;\n          tokens[tokens.length - 1] = newToken;\n\n          raw = raw.substring(0, raw.length - lastToken.raw.length) + newToken.raw;\n          text = text.substring(0, text.length - oldToken.raw.length) + newToken.raw;\n          lines = newText.substring(tokens.at(-1)!.raw.length).split('\\n');\n          continue;\n        }\n      }\n\n      return {\n        type: 'blockquote',\n        raw,\n        tokens,\n        text,\n      };\n    }\n  }\n\n  list(src: string): Tokens.List | undefined {\n    let cap = this.rules.block.list.exec(src);\n    if (cap) {\n      let bull = cap[1].trim();\n      const isordered = bull.length > 1;\n\n      const list: Tokens.List = {\n        type: 'list',\n        raw: '',\n        ordered: isordered,\n        start: isordered ? +bull.slice(0, -1) : '',\n        loose: false,\n        items: [],\n      };\n\n      bull = isordered ? `\\\\d{1,9}\\\\${bull.slice(-1)}` : `\\\\${bull}`;\n\n      if (this.options.pedantic) {\n        bull = isordered ? bull : '[*+-]';\n      }\n\n      // Get next list item\n      const itemRegex = this.rules.other.listItemRegex(bull);\n      let endsWithBlankLine = false;\n      // Check if current bullet point can start a new List Item\n      while (src) {\n        let endEarly = false;\n        let raw = '';\n        let itemContents = '';\n        if (!(cap = itemRegex.exec(src))) {\n          break;\n        }\n\n        if (this.rules.block.hr.test(src)) { // End list if bullet was actually HR (possibly move into itemRegex?)\n          break;\n        }\n\n        raw = cap[0];\n        src = src.substring(raw.length);\n\n        let line = cap[2].split('\\n', 1)[0].replace(this.rules.other.listReplaceTabs, (t: string) => ' '.repeat(3 * t.length));\n        let nextLine = src.split('\\n', 1)[0];\n        let blankLine = !line.trim();\n\n        let indent = 0;\n        if (this.options.pedantic) {\n          indent = 2;\n          itemContents = line.trimStart();\n        } else if (blankLine) {\n          indent = cap[1].length + 1;\n        } else {\n          indent = cap[2].search(this.rules.other.nonSpaceChar); // Find first non-space char\n          indent = indent > 4 ? 1 : indent; // Treat indented code blocks (> 4 spaces) as having only 1 indent\n          itemContents = line.slice(indent);\n          indent += cap[1].length;\n        }\n\n        if (blankLine && this.rules.other.blankLine.test(nextLine)) { // Items begin with at most one blank line\n          raw += nextLine + '\\n';\n          src = src.substring(nextLine.length + 1);\n          endEarly = true;\n        }\n\n        if (!endEarly) {\n          const nextBulletRegex = this.rules.other.nextBulletRegex(indent);\n          const hrRegex = this.rules.other.hrRegex(indent);\n          const fencesBeginRegex = this.rules.other.fencesBeginRegex(indent);\n          const headingBeginRegex = this.rules.other.headingBeginRegex(indent);\n          const htmlBeginRegex = this.rules.other.htmlBeginRegex(indent);\n\n          // Check if following lines should be included in List Item\n          while (src) {\n            const rawLine = src.split('\\n', 1)[0];\n            let nextLineWithoutTabs;\n            nextLine = rawLine;\n\n            // Re-align to follow commonmark nesting rules\n            if (this.options.pedantic) {\n              nextLine = nextLine.replace(this.rules.other.listReplaceNesting, '  ');\n              nextLineWithoutTabs = nextLine;\n            } else {\n              nextLineWithoutTabs = nextLine.replace(this.rules.other.tabCharGlobal, '    ');\n            }\n\n            // End list item if found code fences\n            if (fencesBeginRegex.test(nextLine)) {\n              break;\n            }\n\n            // End list item if found start of new heading\n            if (headingBeginRegex.test(nextLine)) {\n              break;\n            }\n\n            // End list item if found start of html block\n            if (htmlBeginRegex.test(nextLine)) {\n              break;\n            }\n\n            // End list item if found start of new bullet\n            if (nextBulletRegex.test(nextLine)) {\n              break;\n            }\n\n            // Horizontal rule found\n            if (hrRegex.test(nextLine)) {\n              break;\n            }\n\n            if (nextLineWithoutTabs.search(this.rules.other.nonSpaceChar) >= indent || !nextLine.trim()) { // Dedent if possible\n              itemContents += '\\n' + nextLineWithoutTabs.slice(indent);\n            } else {\n              // not enough indentation\n              if (blankLine) {\n                break;\n              }\n\n              // paragraph continuation unless last line was a different block level element\n              if (line.replace(this.rules.other.tabCharGlobal, '    ').search(this.rules.other.nonSpaceChar) >= 4) { // indented code block\n                break;\n              }\n              if (fencesBeginRegex.test(line)) {\n                break;\n              }\n              if (headingBeginRegex.test(line)) {\n                break;\n              }\n              if (hrRegex.test(line)) {\n                break;\n              }\n\n              itemContents += '\\n' + nextLine;\n            }\n\n            if (!blankLine && !nextLine.trim()) { // Check if current line is blank\n              blankLine = true;\n            }\n\n            raw += rawLine + '\\n';\n            src = src.substring(rawLine.length + 1);\n            line = nextLineWithoutTabs.slice(indent);\n          }\n        }\n\n        if (!list.loose) {\n          // If the previous item ended with a blank line, the list is loose\n          if (endsWithBlankLine) {\n            list.loose = true;\n          } else if (this.rules.other.doubleBlankLine.test(raw)) {\n            endsWithBlankLine = true;\n          }\n        }\n\n        let istask: RegExpExecArray | null = null;\n        let ischecked: boolean | undefined;\n        // Check for task list items\n        if (this.options.gfm) {\n          istask = this.rules.other.listIsTask.exec(itemContents);\n          if (istask) {\n            ischecked = istask[0] !== '[ ] ';\n            itemContents = itemContents.replace(this.rules.other.listReplaceTask, '');\n          }\n        }\n\n        list.items.push({\n          type: 'list_item',\n          raw,\n          task: !!istask,\n          checked: ischecked,\n          loose: false,\n          text: itemContents,\n          tokens: [],\n        });\n\n        list.raw += raw;\n      }\n\n      // Do not consume newlines at end of final item. Alternatively, make itemRegex *start* with any newlines to simplify/speed up endsWithBlankLine logic\n      const lastItem = list.items.at(-1);\n      if (lastItem) {\n        lastItem.raw = lastItem.raw.trimEnd();\n        lastItem.text = lastItem.text.trimEnd();\n      } else {\n        // not a list since there were no items\n        return;\n      }\n      list.raw = list.raw.trimEnd();\n\n      // Item child tokens handled here at end because we needed to have the final item to trim it first\n      for (let i = 0; i < list.items.length; i++) {\n        this.lexer.state.top = false;\n        list.items[i].tokens = this.lexer.blockTokens(list.items[i].text, []);\n\n        if (!list.loose) {\n          // Check if list should be loose\n          const spacers = list.items[i].tokens.filter(t => t.type === 'space');\n          const hasMultipleLineBreaks = spacers.length > 0 && spacers.some(t => this.rules.other.anyLine.test(t.raw));\n\n          list.loose = hasMultipleLineBreaks;\n        }\n      }\n\n      // Set all items to loose if list is loose\n      if (list.loose) {\n        for (let i = 0; i < list.items.length; i++) {\n          list.items[i].loose = true;\n        }\n      }\n\n      return list;\n    }\n  }\n\n  html(src: string): Tokens.HTML | undefined {\n    const cap = this.rules.block.html.exec(src);\n    if (cap) {\n      const token: Tokens.HTML = {\n        type: 'html',\n        block: true,\n        raw: cap[0],\n        pre: cap[1] === 'pre' || cap[1] === 'script' || cap[1] === 'style',\n        text: cap[0],\n      };\n      return token;\n    }\n  }\n\n  def(src: string): Tokens.Def | undefined {\n    const cap = this.rules.block.def.exec(src);\n    if (cap) {\n      const tag = cap[1].toLowerCase().replace(this.rules.other.multipleSpaceGlobal, ' ');\n      const href = cap[2] ? cap[2].replace(this.rules.other.hrefBrackets, '$1').replace(this.rules.inline.anyPunctuation, '$1') : '';\n      const title = cap[3] ? cap[3].substring(1, cap[3].length - 1).replace(this.rules.inline.anyPunctuation, '$1') : cap[3];\n      return {\n        type: 'def',\n        tag,\n        raw: cap[0],\n        href,\n        title,\n      };\n    }\n  }\n\n  table(src: string): Tokens.Table | undefined {\n    const cap = this.rules.block.table.exec(src);\n    if (!cap) {\n      return;\n    }\n\n    if (!this.rules.other.tableDelimiter.test(cap[2])) {\n      // delimiter row must have a pipe (|) or colon (:) otherwise it is a setext heading\n      return;\n    }\n\n    const headers = splitCells(cap[1]);\n    const aligns = cap[2].replace(this.rules.other.tableAlignChars, '').split('|');\n    const rows = cap[3]?.trim() ? cap[3].replace(this.rules.other.tableRowBlankLine, '').split('\\n') : [];\n\n    const item: Tokens.Table = {\n      type: 'table',\n      raw: cap[0],\n      header: [],\n      align: [],\n      rows: [],\n    };\n\n    if (headers.length !== aligns.length) {\n      // header and align columns must be equal, rows can be different.\n      return;\n    }\n\n    for (const align of aligns) {\n      if (this.rules.other.tableAlignRight.test(align)) {\n        item.align.push('right');\n      } else if (this.rules.other.tableAlignCenter.test(align)) {\n        item.align.push('center');\n      } else if (this.rules.other.tableAlignLeft.test(align)) {\n        item.align.push('left');\n      } else {\n        item.align.push(null);\n      }\n    }\n\n    for (let i = 0; i < headers.length; i++) {\n      item.header.push({\n        text: headers[i],\n        tokens: this.lexer.inline(headers[i]),\n        header: true,\n        align: item.align[i],\n      });\n    }\n\n    for (const row of rows) {\n      item.rows.push(splitCells(row, item.header.length).map((cell, i) => {\n        return {\n          text: cell,\n          tokens: this.lexer.inline(cell),\n          header: false,\n          align: item.align[i],\n        };\n      }));\n    }\n\n    return item;\n  }\n\n  lheading(src: string): Tokens.Heading | undefined {\n    const cap = this.rules.block.lheading.exec(src);\n    if (cap) {\n      return {\n        type: 'heading',\n        raw: cap[0],\n        depth: cap[2].charAt(0) === '=' ? 1 : 2,\n        text: cap[1],\n        tokens: this.lexer.inline(cap[1]),\n      };\n    }\n  }\n\n  paragraph(src: string): Tokens.Paragraph | undefined {\n    const cap = this.rules.block.paragraph.exec(src);\n    if (cap) {\n      const text = cap[1].charAt(cap[1].length - 1) === '\\n'\n        ? cap[1].slice(0, -1)\n        : cap[1];\n      return {\n        type: 'paragraph',\n        raw: cap[0],\n        text,\n        tokens: this.lexer.inline(text),\n      };\n    }\n  }\n\n  text(src: string): Tokens.Text | undefined {\n    const cap = this.rules.block.text.exec(src);\n    if (cap) {\n      return {\n        type: 'text',\n        raw: cap[0],\n        text: cap[0],\n        tokens: this.lexer.inline(cap[0]),\n      };\n    }\n  }\n\n  escape(src: string): Tokens.Escape | undefined {\n    const cap = this.rules.inline.escape.exec(src);\n    if (cap) {\n      return {\n        type: 'escape',\n        raw: cap[0],\n        text: cap[1],\n      };\n    }\n  }\n\n  tag(src: string): Tokens.Tag | undefined {\n    const cap = this.rules.inline.tag.exec(src);\n    if (cap) {\n      if (!this.lexer.state.inLink && this.rules.other.startATag.test(cap[0])) {\n        this.lexer.state.inLink = true;\n      } else if (this.lexer.state.inLink && this.rules.other.endATag.test(cap[0])) {\n        this.lexer.state.inLink = false;\n      }\n      if (!this.lexer.state.inRawBlock && this.rules.other.startPreScriptTag.test(cap[0])) {\n        this.lexer.state.inRawBlock = true;\n      } else if (this.lexer.state.inRawBlock && this.rules.other.endPreScriptTag.test(cap[0])) {\n        this.lexer.state.inRawBlock = false;\n      }\n\n      return {\n        type: 'html',\n        raw: cap[0],\n        inLink: this.lexer.state.inLink,\n        inRawBlock: this.lexer.state.inRawBlock,\n        block: false,\n        text: cap[0],\n      };\n    }\n  }\n\n  link(src: string): Tokens.Link | Tokens.Image | undefined {\n    const cap = this.rules.inline.link.exec(src);\n    if (cap) {\n      const trimmedUrl = cap[2].trim();\n      if (!this.options.pedantic && this.rules.other.startAngleBracket.test(trimmedUrl)) {\n        // commonmark requires matching angle brackets\n        if (!(this.rules.other.endAngleBracket.test(trimmedUrl))) {\n          return;\n        }\n\n        // ending angle bracket cannot be escaped\n        const rtrimSlash = rtrim(trimmedUrl.slice(0, -1), '\\\\');\n        if ((trimmedUrl.length - rtrimSlash.length) % 2 === 0) {\n          return;\n        }\n      } else {\n        // find closing parenthesis\n        const lastParenIndex = findClosingBracket(cap[2], '()');\n        if (lastParenIndex === -2) {\n          // more open parens than closed\n          return;\n        }\n\n        if (lastParenIndex > -1) {\n          const start = cap[0].indexOf('!') === 0 ? 5 : 4;\n          const linkLen = start + cap[1].length + lastParenIndex;\n          cap[2] = cap[2].substring(0, lastParenIndex);\n          cap[0] = cap[0].substring(0, linkLen).trim();\n          cap[3] = '';\n        }\n      }\n      let href = cap[2];\n      let title = '';\n      if (this.options.pedantic) {\n        // split pedantic href and title\n        const link = this.rules.other.pedanticHrefTitle.exec(href);\n\n        if (link) {\n          href = link[1];\n          title = link[3];\n        }\n      } else {\n        title = cap[3] ? cap[3].slice(1, -1) : '';\n      }\n\n      href = href.trim();\n      if (this.rules.other.startAngleBracket.test(href)) {\n        if (this.options.pedantic && !(this.rules.other.endAngleBracket.test(trimmedUrl))) {\n          // pedantic allows starting angle bracket without ending angle bracket\n          href = href.slice(1);\n        } else {\n          href = href.slice(1, -1);\n        }\n      }\n      return outputLink(cap, {\n        href: href ? href.replace(this.rules.inline.anyPunctuation, '$1') : href,\n        title: title ? title.replace(this.rules.inline.anyPunctuation, '$1') : title,\n      }, cap[0], this.lexer, this.rules);\n    }\n  }\n\n  reflink(src: string, links: Links): Tokens.Link | Tokens.Image | Tokens.Text | undefined {\n    let cap;\n    if ((cap = this.rules.inline.reflink.exec(src))\n      || (cap = this.rules.inline.nolink.exec(src))) {\n      const linkString = (cap[2] || cap[1]).replace(this.rules.other.multipleSpaceGlobal, ' ');\n      const link = links[linkString.toLowerCase()];\n      if (!link) {\n        const text = cap[0].charAt(0);\n        return {\n          type: 'text',\n          raw: text,\n          text,\n        };\n      }\n      return outputLink(cap, link, cap[0], this.lexer, this.rules);\n    }\n  }\n\n  emStrong(src: string, maskedSrc: string, prevChar = ''): Tokens.Em | Tokens.Strong | undefined {\n    let match = this.rules.inline.emStrongLDelim.exec(src);\n    if (!match) return;\n\n    // _ can't be between two alphanumerics. \\p{L}\\p{N} includes non-english alphabet/numbers as well\n    if (match[3] && prevChar.match(this.rules.other.unicodeAlphaNumeric)) return;\n\n    const nextChar = match[1] || match[2] || '';\n\n    if (!nextChar || !prevChar || this.rules.inline.punctuation.exec(prevChar)) {\n      // unicode Regex counts emoji as 1 char; spread into array for proper count (used multiple times below)\n      const lLength = [...match[0]].length - 1;\n      let rDelim, rLength, delimTotal = lLength, midDelimTotal = 0;\n\n      const endReg = match[0][0] === '*' ? this.rules.inline.emStrongRDelimAst : this.rules.inline.emStrongRDelimUnd;\n      endReg.lastIndex = 0;\n\n      // Clip maskedSrc to same section of string as src (move to lexer?)\n      maskedSrc = maskedSrc.slice(-1 * src.length + lLength);\n\n      while ((match = endReg.exec(maskedSrc)) != null) {\n        rDelim = match[1] || match[2] || match[3] || match[4] || match[5] || match[6];\n\n        if (!rDelim) continue; // skip single * in __abc*abc__\n\n        rLength = [...rDelim].length;\n\n        if (match[3] || match[4]) { // found another Left Delim\n          delimTotal += rLength;\n          continue;\n        } else if (match[5] || match[6]) { // either Left or Right Delim\n          if (lLength % 3 && !((lLength + rLength) % 3)) {\n            midDelimTotal += rLength;\n            continue; // CommonMark Emphasis Rules 9-10\n          }\n        }\n\n        delimTotal -= rLength;\n\n        if (delimTotal > 0) continue; // Haven't found enough closing delimiters\n\n        // Remove extra characters. *a*** -> *a*\n        rLength = Math.min(rLength, rLength + delimTotal + midDelimTotal);\n        // char length can be >1 for unicode characters;\n        const lastCharLength = [...match[0]][0].length;\n        const raw = src.slice(0, lLength + match.index + lastCharLength + rLength);\n\n        // Create `em` if smallest delimiter has odd char count. *a***\n        if (Math.min(lLength, rLength) % 2) {\n          const text = raw.slice(1, -1);\n          return {\n            type: 'em',\n            raw,\n            text,\n            tokens: this.lexer.inlineTokens(text),\n          };\n        }\n\n        // Create 'strong' if smallest delimiter has even char count. **a***\n        const text = raw.slice(2, -2);\n        return {\n          type: 'strong',\n          raw,\n          text,\n          tokens: this.lexer.inlineTokens(text),\n        };\n      }\n    }\n  }\n\n  codespan(src: string): Tokens.Codespan | undefined {\n    const cap = this.rules.inline.code.exec(src);\n    if (cap) {\n      let text = cap[2].replace(this.rules.other.newLineCharGlobal, ' ');\n      const hasNonSpaceChars = this.rules.other.nonSpaceChar.test(text);\n      const hasSpaceCharsOnBothEnds = this.rules.other.startingSpaceChar.test(text) && this.rules.other.endingSpaceChar.test(text);\n      if (hasNonSpaceChars && hasSpaceCharsOnBothEnds) {\n        text = text.substring(1, text.length - 1);\n      }\n      return {\n        type: 'codespan',\n        raw: cap[0],\n        text,\n      };\n    }\n  }\n\n  br(src: string): Tokens.Br | undefined {\n    const cap = this.rules.inline.br.exec(src);\n    if (cap) {\n      return {\n        type: 'br',\n        raw: cap[0],\n      };\n    }\n  }\n\n  del(src: string): Tokens.Del | undefined {\n    const cap = this.rules.inline.del.exec(src);\n    if (cap) {\n      return {\n        type: 'del',\n        raw: cap[0],\n        text: cap[2],\n        tokens: this.lexer.inlineTokens(cap[2]),\n      };\n    }\n  }\n\n  autolink(src: string): Tokens.Link | undefined {\n    const cap = this.rules.inline.autolink.exec(src);\n    if (cap) {\n      let text, href;\n      if (cap[2] === '@') {\n        text = cap[1];\n        href = 'mailto:' + text;\n      } else {\n        text = cap[1];\n        href = text;\n      }\n\n      return {\n        type: 'link',\n        raw: cap[0],\n        text,\n        href,\n        tokens: [\n          {\n            type: 'text',\n            raw: text,\n            text,\n          },\n        ],\n      };\n    }\n  }\n\n  url(src: string): Tokens.Link | undefined {\n    let cap;\n    if (cap = this.rules.inline.url.exec(src)) {\n      let text, href;\n      if (cap[2] === '@') {\n        text = cap[0];\n        href = 'mailto:' + text;\n      } else {\n        // do extended autolink path validation\n        let prevCapZero;\n        do {\n          prevCapZero = cap[0];\n          cap[0] = this.rules.inline._backpedal.exec(cap[0])?.[0] ?? '';\n        } while (prevCapZero !== cap[0]);\n        text = cap[0];\n        if (cap[1] === 'www.') {\n          href = 'http://' + cap[0];\n        } else {\n          href = cap[0];\n        }\n      }\n      return {\n        type: 'link',\n        raw: cap[0],\n        text,\n        href,\n        tokens: [\n          {\n            type: 'text',\n            raw: text,\n            text,\n          },\n        ],\n      };\n    }\n  }\n\n  inlineText(src: string): Tokens.Text | undefined {\n    const cap = this.rules.inline.text.exec(src);\n    if (cap) {\n      const escaped = this.lexer.state.inRawBlock;\n      return {\n        type: 'text',\n        raw: cap[0],\n        text: cap[0],\n        escaped,\n      };\n    }\n  }\n}\n", "import { _Tokenizer } from './Tokenizer.ts';\nimport { _defaults } from './defaults.ts';\nimport { other, block, inline } from './rules.ts';\nimport type { Token, TokensList, Tokens } from './Tokens.ts';\nimport type { MarkedOptions } from './MarkedOptions.ts';\n\n/**\n * Block Lexer\n */\nexport class _Lexer {\n  tokens: TokensList;\n  options: MarkedOptions;\n  state: {\n    inLink: boolean;\n    inRawBlock: boolean;\n    top: boolean;\n  };\n\n  private tokenizer: _Tokenizer;\n  private inlineQueue: { src: string, tokens: Token[] }[];\n\n  constructor(options?: MarkedOptions) {\n    // TokenList cannot be created in one go\n    this.tokens = [] as unknown as TokensList;\n    this.tokens.links = Object.create(null);\n    this.options = options || _defaults;\n    this.options.tokenizer = this.options.tokenizer || new _Tokenizer();\n    this.tokenizer = this.options.tokenizer;\n    this.tokenizer.options = this.options;\n    this.tokenizer.lexer = this;\n    this.inlineQueue = [];\n    this.state = {\n      inLink: false,\n      inRawBlock: false,\n      top: true,\n    };\n\n    const rules = {\n      other,\n      block: block.normal,\n      inline: inline.normal,\n    };\n\n    if (this.options.pedantic) {\n      rules.block = block.pedantic;\n      rules.inline = inline.pedantic;\n    } else if (this.options.gfm) {\n      rules.block = block.gfm;\n      if (this.options.breaks) {\n        rules.inline = inline.breaks;\n      } else {\n        rules.inline = inline.gfm;\n      }\n    }\n    this.tokenizer.rules = rules;\n  }\n\n  /**\n   * Expose Rules\n   */\n  static get rules() {\n    return {\n      block,\n      inline,\n    };\n  }\n\n  /**\n   * Static Lex Method\n   */\n  static lex(src: string, options?: MarkedOptions) {\n    const lexer = new _Lexer(options);\n    return lexer.lex(src);\n  }\n\n  /**\n   * Static Lex Inline Method\n   */\n  static lexInline(src: string, options?: MarkedOptions) {\n    const lexer = new _Lexer(options);\n    return lexer.inlineTokens(src);\n  }\n\n  /**\n   * Preprocessing\n   */\n  lex(src: string) {\n    src = src.replace(other.carriageReturn, '\\n');\n\n    this.blockTokens(src, this.tokens);\n\n    for (let i = 0; i < this.inlineQueue.length; i++) {\n      const next = this.inlineQueue[i];\n      this.inlineTokens(next.src, next.tokens);\n    }\n    this.inlineQueue = [];\n\n    return this.tokens;\n  }\n\n  /**\n   * Lexing\n   */\n  blockTokens(src: string, tokens?: Token[], lastParagraphClipped?: boolean): Token[];\n  blockTokens(src: string, tokens?: TokensList, lastParagraphClipped?: boolean): TokensList;\n  blockTokens(src: string, tokens: Token[] = [], lastParagraphClipped = false) {\n    if (this.options.pedantic) {\n      src = src.replace(other.tabCharGlobal, '    ').replace(other.spaceLine, '');\n    }\n\n    while (src) {\n      let token: Tokens.Generic | undefined;\n\n      if (this.options.extensions?.block?.some((extTokenizer) => {\n        if (token = extTokenizer.call({ lexer: this }, src, tokens)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          return true;\n        }\n        return false;\n      })) {\n        continue;\n      }\n\n      // newline\n      if (token = this.tokenizer.space(src)) {\n        src = src.substring(token.raw.length);\n        const lastToken = tokens.at(-1);\n        if (token.raw.length === 1 && lastToken !== undefined) {\n          // if there's a single \\n as a spacer, it's terminating the last line,\n          // so move it there so that we don't get unnecessary paragraph tags\n          lastToken.raw += '\\n';\n        } else {\n          tokens.push(token);\n        }\n        continue;\n      }\n\n      // code\n      if (token = this.tokenizer.code(src)) {\n        src = src.substring(token.raw.length);\n        const lastToken = tokens.at(-1);\n        // An indented code block cannot interrupt a paragraph.\n        if (lastToken?.type === 'paragraph' || lastToken?.type === 'text') {\n          lastToken.raw += '\\n' + token.raw;\n          lastToken.text += '\\n' + token.text;\n          this.inlineQueue.at(-1)!.src = lastToken.text;\n        } else {\n          tokens.push(token);\n        }\n        continue;\n      }\n\n      // fences\n      if (token = this.tokenizer.fences(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // heading\n      if (token = this.tokenizer.heading(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // hr\n      if (token = this.tokenizer.hr(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // blockquote\n      if (token = this.tokenizer.blockquote(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // list\n      if (token = this.tokenizer.list(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // html\n      if (token = this.tokenizer.html(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // def\n      if (token = this.tokenizer.def(src)) {\n        src = src.substring(token.raw.length);\n        const lastToken = tokens.at(-1);\n        if (lastToken?.type === 'paragraph' || lastToken?.type === 'text') {\n          lastToken.raw += '\\n' + token.raw;\n          lastToken.text += '\\n' + token.raw;\n          this.inlineQueue.at(-1)!.src = lastToken.text;\n        } else if (!this.tokens.links[token.tag]) {\n          this.tokens.links[token.tag] = {\n            href: token.href,\n            title: token.title,\n          };\n        }\n        continue;\n      }\n\n      // table (gfm)\n      if (token = this.tokenizer.table(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // lheading\n      if (token = this.tokenizer.lheading(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // top-level paragraph\n      // prevent paragraph consuming extensions by clipping 'src' to extension start\n      let cutSrc = src;\n      if (this.options.extensions?.startBlock) {\n        let startIndex = Infinity;\n        const tempSrc = src.slice(1);\n        let tempStart;\n        this.options.extensions.startBlock.forEach((getStartIndex) => {\n          tempStart = getStartIndex.call({ lexer: this }, tempSrc);\n          if (typeof tempStart === 'number' && tempStart >= 0) {\n            startIndex = Math.min(startIndex, tempStart);\n          }\n        });\n        if (startIndex < Infinity && startIndex >= 0) {\n          cutSrc = src.substring(0, startIndex + 1);\n        }\n      }\n      if (this.state.top && (token = this.tokenizer.paragraph(cutSrc))) {\n        const lastToken = tokens.at(-1);\n        if (lastParagraphClipped && lastToken?.type === 'paragraph') {\n          lastToken.raw += '\\n' + token.raw;\n          lastToken.text += '\\n' + token.text;\n          this.inlineQueue.pop();\n          this.inlineQueue.at(-1)!.src = lastToken.text;\n        } else {\n          tokens.push(token);\n        }\n        lastParagraphClipped = cutSrc.length !== src.length;\n        src = src.substring(token.raw.length);\n        continue;\n      }\n\n      // text\n      if (token = this.tokenizer.text(src)) {\n        src = src.substring(token.raw.length);\n        const lastToken = tokens.at(-1);\n        if (lastToken?.type === 'text') {\n          lastToken.raw += '\\n' + token.raw;\n          lastToken.text += '\\n' + token.text;\n          this.inlineQueue.pop();\n          this.inlineQueue.at(-1)!.src = lastToken.text;\n        } else {\n          tokens.push(token);\n        }\n        continue;\n      }\n\n      if (src) {\n        const errMsg = 'Infinite loop on byte: ' + src.charCodeAt(0);\n        if (this.options.silent) {\n          console.error(errMsg);\n          break;\n        } else {\n          throw new Error(errMsg);\n        }\n      }\n    }\n\n    this.state.top = true;\n    return tokens;\n  }\n\n  inline(src: string, tokens: Token[] = []) {\n    this.inlineQueue.push({ src, tokens });\n    return tokens;\n  }\n\n  /**\n   * Lexing/Compiling\n   */\n  inlineTokens(src: string, tokens: Token[] = []): Token[] {\n    // String with links masked to avoid interference with em and strong\n    let maskedSrc = src;\n    let match: RegExpExecArray | null = null;\n\n    // Mask out reflinks\n    if (this.tokens.links) {\n      const links = Object.keys(this.tokens.links);\n      if (links.length > 0) {\n        while ((match = this.tokenizer.rules.inline.reflinkSearch.exec(maskedSrc)) != null) {\n          if (links.includes(match[0].slice(match[0].lastIndexOf('[') + 1, -1))) {\n            maskedSrc = maskedSrc.slice(0, match.index)\n              + '[' + 'a'.repeat(match[0].length - 2) + ']'\n              + maskedSrc.slice(this.tokenizer.rules.inline.reflinkSearch.lastIndex);\n          }\n        }\n      }\n    }\n\n    // Mask out escaped characters\n    while ((match = this.tokenizer.rules.inline.anyPunctuation.exec(maskedSrc)) != null) {\n      maskedSrc = maskedSrc.slice(0, match.index) + '++' + maskedSrc.slice(this.tokenizer.rules.inline.anyPunctuation.lastIndex);\n    }\n\n    // Mask out other blocks\n    while ((match = this.tokenizer.rules.inline.blockSkip.exec(maskedSrc)) != null) {\n      maskedSrc = maskedSrc.slice(0, match.index) + '[' + 'a'.repeat(match[0].length - 2) + ']' + maskedSrc.slice(this.tokenizer.rules.inline.blockSkip.lastIndex);\n    }\n\n    let keepPrevChar = false;\n    let prevChar = '';\n    while (src) {\n      if (!keepPrevChar) {\n        prevChar = '';\n      }\n      keepPrevChar = false;\n\n      let token: Tokens.Generic | undefined;\n\n      // extensions\n      if (this.options.extensions?.inline?.some((extTokenizer) => {\n        if (token = extTokenizer.call({ lexer: this }, src, tokens)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          return true;\n        }\n        return false;\n      })) {\n        continue;\n      }\n\n      // escape\n      if (token = this.tokenizer.escape(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // tag\n      if (token = this.tokenizer.tag(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // link\n      if (token = this.tokenizer.link(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // reflink, nolink\n      if (token = this.tokenizer.reflink(src, this.tokens.links)) {\n        src = src.substring(token.raw.length);\n        const lastToken = tokens.at(-1);\n        if (token.type === 'text' && lastToken?.type === 'text') {\n          lastToken.raw += token.raw;\n          lastToken.text += token.text;\n        } else {\n          tokens.push(token);\n        }\n        continue;\n      }\n\n      // em & strong\n      if (token = this.tokenizer.emStrong(src, maskedSrc, prevChar)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // code\n      if (token = this.tokenizer.codespan(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // br\n      if (token = this.tokenizer.br(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // del (gfm)\n      if (token = this.tokenizer.del(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // autolink\n      if (token = this.tokenizer.autolink(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // url (gfm)\n      if (!this.state.inLink && (token = this.tokenizer.url(src))) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // text\n      // prevent inlineText consuming extensions by clipping 'src' to extension start\n      let cutSrc = src;\n      if (this.options.extensions?.startInline) {\n        let startIndex = Infinity;\n        const tempSrc = src.slice(1);\n        let tempStart;\n        this.options.extensions.startInline.forEach((getStartIndex) => {\n          tempStart = getStartIndex.call({ lexer: this }, tempSrc);\n          if (typeof tempStart === 'number' && tempStart >= 0) {\n            startIndex = Math.min(startIndex, tempStart);\n          }\n        });\n        if (startIndex < Infinity && startIndex >= 0) {\n          cutSrc = src.substring(0, startIndex + 1);\n        }\n      }\n      if (token = this.tokenizer.inlineText(cutSrc)) {\n        src = src.substring(token.raw.length);\n        if (token.raw.slice(-1) !== '_') { // Track prevChar before string of ____ started\n          prevChar = token.raw.slice(-1);\n        }\n        keepPrevChar = true;\n        const lastToken = tokens.at(-1);\n        if (lastToken?.type === 'text') {\n          lastToken.raw += token.raw;\n          lastToken.text += token.text;\n        } else {\n          tokens.push(token);\n        }\n        continue;\n      }\n\n      if (src) {\n        const errMsg = 'Infinite loop on byte: ' + src.charCodeAt(0);\n        if (this.options.silent) {\n          console.error(errMsg);\n          break;\n        } else {\n          throw new Error(errMsg);\n        }\n      }\n    }\n\n    return tokens;\n  }\n}\n", "import { _defaults } from './defaults.ts';\nimport {\n  cleanUrl,\n  escape,\n} from './helpers.ts';\nimport { other } from './rules.ts';\nimport type { MarkedOptions } from './MarkedOptions.ts';\nimport type { Tokens } from './Tokens.ts';\nimport type { _Parser } from './Parser.ts';\n\n/**\n * Renderer\n */\nexport class _Renderer {\n  options: MarkedOptions;\n  parser!: _Parser; // set by the parser\n  constructor(options?: MarkedOptions) {\n    this.options = options || _defaults;\n  }\n\n  space(token: Tokens.Space): string {\n    return '';\n  }\n\n  code({ text, lang, escaped }: Tokens.Code): string {\n    const langString = (lang || '').match(other.notSpaceStart)?.[0];\n\n    const code = text.replace(other.endingNewline, '') + '\\n';\n\n    if (!langString) {\n      return '<pre><code>'\n        + (escaped ? code : escape(code, true))\n        + '</code></pre>\\n';\n    }\n\n    return '<pre><code class=\"language-'\n      + escape(langString)\n      + '\">'\n      + (escaped ? code : escape(code, true))\n      + '</code></pre>\\n';\n  }\n\n  blockquote({ tokens }: Tokens.Blockquote): string {\n    const body = this.parser.parse(tokens);\n    return `<blockquote>\\n${body}</blockquote>\\n`;\n  }\n\n  html({ text }: Tokens.HTML | Tokens.Tag) : string {\n    return text;\n  }\n\n  heading({ tokens, depth }: Tokens.Heading): string {\n    return `<h${depth}>${this.parser.parseInline(tokens)}</h${depth}>\\n`;\n  }\n\n  hr(token: Tokens.Hr): string {\n    return '<hr>\\n';\n  }\n\n  list(token: Tokens.List): string {\n    const ordered = token.ordered;\n    const start = token.start;\n\n    let body = '';\n    for (let j = 0; j < token.items.length; j++) {\n      const item = token.items[j];\n      body += this.listitem(item);\n    }\n\n    const type = ordered ? 'ol' : 'ul';\n    const startAttr = (ordered && start !== 1) ? (' start=\"' + start + '\"') : '';\n    return '<' + type + startAttr + '>\\n' + body + '</' + type + '>\\n';\n  }\n\n  listitem(item: Tokens.ListItem): string {\n    let itemBody = '';\n    if (item.task) {\n      const checkbox = this.checkbox({ checked: !!item.checked });\n      if (item.loose) {\n        if (item.tokens[0]?.type === 'paragraph') {\n          item.tokens[0].text = checkbox + ' ' + item.tokens[0].text;\n          if (item.tokens[0].tokens && item.tokens[0].tokens.length > 0 && item.tokens[0].tokens[0].type === 'text') {\n            item.tokens[0].tokens[0].text = checkbox + ' ' + escape(item.tokens[0].tokens[0].text);\n            item.tokens[0].tokens[0].escaped = true;\n          }\n        } else {\n          item.tokens.unshift({\n            type: 'text',\n            raw: checkbox + ' ',\n            text: checkbox + ' ',\n            escaped: true,\n          });\n        }\n      } else {\n        itemBody += checkbox + ' ';\n      }\n    }\n\n    itemBody += this.parser.parse(item.tokens, !!item.loose);\n\n    return `<li>${itemBody}</li>\\n`;\n  }\n\n  checkbox({ checked }: Tokens.Checkbox): string {\n    return '<input '\n      + (checked ? 'checked=\"\" ' : '')\n      + 'disabled=\"\" type=\"checkbox\">';\n  }\n\n  paragraph({ tokens }: Tokens.Paragraph): string {\n    return `<p>${this.parser.parseInline(tokens)}</p>\\n`;\n  }\n\n  table(token: Tokens.Table): string {\n    let header = '';\n\n    // header\n    let cell = '';\n    for (let j = 0; j < token.header.length; j++) {\n      cell += this.tablecell(token.header[j]);\n    }\n    header += this.tablerow({ text: cell });\n\n    let body = '';\n    for (let j = 0; j < token.rows.length; j++) {\n      const row = token.rows[j];\n\n      cell = '';\n      for (let k = 0; k < row.length; k++) {\n        cell += this.tablecell(row[k]);\n      }\n\n      body += this.tablerow({ text: cell });\n    }\n    if (body) body = `<tbody>${body}</tbody>`;\n\n    return '<table>\\n'\n      + '<thead>\\n'\n      + header\n      + '</thead>\\n'\n      + body\n      + '</table>\\n';\n  }\n\n  tablerow({ text }: Tokens.TableRow): string {\n    return `<tr>\\n${text}</tr>\\n`;\n  }\n\n  tablecell(token: Tokens.TableCell): string {\n    const content = this.parser.parseInline(token.tokens);\n    const type = token.header ? 'th' : 'td';\n    const tag = token.align\n      ? `<${type} align=\"${token.align}\">`\n      : `<${type}>`;\n    return tag + content + `</${type}>\\n`;\n  }\n\n  /**\n   * span level renderer\n   */\n  strong({ tokens }: Tokens.Strong): string {\n    return `<strong>${this.parser.parseInline(tokens)}</strong>`;\n  }\n\n  em({ tokens }: Tokens.Em): string {\n    return `<em>${this.parser.parseInline(tokens)}</em>`;\n  }\n\n  codespan({ text }: Tokens.Codespan): string {\n    return `<code>${escape(text, true)}</code>`;\n  }\n\n  br(token: Tokens.Br): string {\n    return '<br>';\n  }\n\n  del({ tokens }: Tokens.Del): string {\n    return `<del>${this.parser.parseInline(tokens)}</del>`;\n  }\n\n  link({ href, title, tokens }: Tokens.Link): string {\n    const text = this.parser.parseInline(tokens);\n    const cleanHref = cleanUrl(href);\n    if (cleanHref === null) {\n      return text;\n    }\n    href = cleanHref;\n    let out = '<a href=\"' + href + '\"';\n    if (title) {\n      out += ' title=\"' + (escape(title)) + '\"';\n    }\n    out += '>' + text + '</a>';\n    return out;\n  }\n\n  image({ href, title, text, tokens }: Tokens.Image): string {\n    if (tokens) {\n      text = this.parser.parseInline(tokens, this.parser.textRenderer);\n    }\n    const cleanHref = cleanUrl(href);\n    if (cleanHref === null) {\n      return escape(text);\n    }\n    href = cleanHref;\n\n    let out = `<img src=\"${href}\" alt=\"${text}\"`;\n    if (title) {\n      out += ` title=\"${escape(title)}\"`;\n    }\n    out += '>';\n    return out;\n  }\n\n  text(token: Tokens.Text | Tokens.Escape) : string {\n    return 'tokens' in token && token.tokens\n      ? this.parser.parseInline(token.tokens)\n      : ('escaped' in token && token.escaped ? token.text : escape(token.text));\n  }\n}\n", "import type { Tokens } from './Tokens.ts';\n\n/**\n * TextRenderer\n * returns only the textual part of the token\n */\nexport class _TextRenderer {\n  // no need for block level renderers\n  strong({ text }: Tokens.Strong) {\n    return text;\n  }\n\n  em({ text }: Tokens.Em) {\n    return text;\n  }\n\n  codespan({ text }: Tokens.Codespan) {\n    return text;\n  }\n\n  del({ text }: Tokens.Del) {\n    return text;\n  }\n\n  html({ text }: Tokens.HTML | Tokens.Tag) {\n    return text;\n  }\n\n  text({ text }: Tokens.Text | Tokens.Escape | Tokens.Tag) {\n    return text;\n  }\n\n  link({ text }: Tokens.Link) {\n    return '' + text;\n  }\n\n  image({ text }: Tokens.Image) {\n    return '' + text;\n  }\n\n  br() {\n    return '';\n  }\n}\n", "import { _Renderer } from './Renderer.ts';\nimport { _TextRenderer } from './TextRenderer.ts';\nimport { _defaults } from './defaults.ts';\nimport type { MarkedToken, Token, Tokens } from './Tokens.ts';\nimport type { MarkedOptions } from './MarkedOptions.ts';\n\n/**\n * Parsing & Compiling\n */\nexport class _Parser {\n  options: MarkedOptions;\n  renderer: _Renderer;\n  textRenderer: _TextRenderer;\n  constructor(options?: MarkedOptions) {\n    this.options = options || _defaults;\n    this.options.renderer = this.options.renderer || new _Renderer();\n    this.renderer = this.options.renderer;\n    this.renderer.options = this.options;\n    this.renderer.parser = this;\n    this.textRenderer = new _TextRenderer();\n  }\n\n  /**\n   * Static Parse Method\n   */\n  static parse(tokens: Token[], options?: MarkedOptions) {\n    const parser = new _Parser(options);\n    return parser.parse(tokens);\n  }\n\n  /**\n   * Static Parse Inline Method\n   */\n  static parseInline(tokens: Token[], options?: MarkedOptions) {\n    const parser = new _Parser(options);\n    return parser.parseInline(tokens);\n  }\n\n  /**\n   * Parse Loop\n   */\n  parse(tokens: Token[], top = true): string {\n    let out = '';\n\n    for (let i = 0; i < tokens.length; i++) {\n      const anyToken = tokens[i];\n\n      // Run any renderer extensions\n      if (this.options.extensions?.renderers?.[anyToken.type]) {\n        const genericToken = anyToken as Tokens.Generic;\n        const ret = this.options.extensions.renderers[genericToken.type].call({ parser: this }, genericToken);\n        if (ret !== false || !['space', 'hr', 'heading', 'code', 'table', 'blockquote', 'list', 'html', 'paragraph', 'text'].includes(genericToken.type)) {\n          out += ret || '';\n          continue;\n        }\n      }\n\n      const token = anyToken as MarkedToken;\n\n      switch (token.type) {\n        case 'space': {\n          out += this.renderer.space(token);\n          continue;\n        }\n        case 'hr': {\n          out += this.renderer.hr(token);\n          continue;\n        }\n        case 'heading': {\n          out += this.renderer.heading(token);\n          continue;\n        }\n        case 'code': {\n          out += this.renderer.code(token);\n          continue;\n        }\n        case 'table': {\n          out += this.renderer.table(token);\n          continue;\n        }\n        case 'blockquote': {\n          out += this.renderer.blockquote(token);\n          continue;\n        }\n        case 'list': {\n          out += this.renderer.list(token);\n          continue;\n        }\n        case 'html': {\n          out += this.renderer.html(token);\n          continue;\n        }\n        case 'paragraph': {\n          out += this.renderer.paragraph(token);\n          continue;\n        }\n        case 'text': {\n          let textToken = token;\n          let body = this.renderer.text(textToken);\n          while (i + 1 < tokens.length && tokens[i + 1].type === 'text') {\n            textToken = tokens[++i] as Tokens.Text;\n            body += '\\n' + this.renderer.text(textToken);\n          }\n          if (top) {\n            out += this.renderer.paragraph({\n              type: 'paragraph',\n              raw: body,\n              text: body,\n              tokens: [{ type: 'text', raw: body, text: body, escaped: true }],\n            });\n          } else {\n            out += body;\n          }\n          continue;\n        }\n\n        default: {\n          const errMsg = 'Token with \"' + token.type + '\" type was not found.';\n          if (this.options.silent) {\n            console.error(errMsg);\n            return '';\n          } else {\n            throw new Error(errMsg);\n          }\n        }\n      }\n    }\n\n    return out;\n  }\n\n  /**\n   * Parse Inline Tokens\n   */\n  parseInline(tokens: Token[], renderer: _Renderer | _TextRenderer = this.renderer): string {\n    let out = '';\n\n    for (let i = 0; i < tokens.length; i++) {\n      const anyToken = tokens[i];\n\n      // Run any renderer extensions\n      if (this.options.extensions?.renderers?.[anyToken.type]) {\n        const ret = this.options.extensions.renderers[anyToken.type].call({ parser: this }, anyToken);\n        if (ret !== false || !['escape', 'html', 'link', 'image', 'strong', 'em', 'codespan', 'br', 'del', 'text'].includes(anyToken.type)) {\n          out += ret || '';\n          continue;\n        }\n      }\n\n      const token = anyToken as MarkedToken;\n\n      switch (token.type) {\n        case 'escape': {\n          out += renderer.text(token);\n          break;\n        }\n        case 'html': {\n          out += renderer.html(token);\n          break;\n        }\n        case 'link': {\n          out += renderer.link(token);\n          break;\n        }\n        case 'image': {\n          out += renderer.image(token);\n          break;\n        }\n        case 'strong': {\n          out += renderer.strong(token);\n          break;\n        }\n        case 'em': {\n          out += renderer.em(token);\n          break;\n        }\n        case 'codespan': {\n          out += renderer.codespan(token);\n          break;\n        }\n        case 'br': {\n          out += renderer.br(token);\n          break;\n        }\n        case 'del': {\n          out += renderer.del(token);\n          break;\n        }\n        case 'text': {\n          out += renderer.text(token);\n          break;\n        }\n        default: {\n          const errMsg = 'Token with \"' + token.type + '\" type was not found.';\n          if (this.options.silent) {\n            console.error(errMsg);\n            return '';\n          } else {\n            throw new Error(errMsg);\n          }\n        }\n      }\n    }\n    return out;\n  }\n}\n", "import { _defaults } from './defaults.ts';\nimport { _Lexer } from './Lexer.ts';\nimport { _Parser } from './Parser.ts';\nimport type { MarkedOptions } from './MarkedOptions.ts';\nimport type { Token, TokensList } from './Tokens.ts';\n\nexport class _Hooks {\n  options: MarkedOptions;\n  block?: boolean;\n\n  constructor(options?: MarkedOptions) {\n    this.options = options || _defaults;\n  }\n\n  static passThroughHooks = new Set([\n    'preprocess',\n    'postprocess',\n    'processAllTokens',\n  ]);\n\n  /**\n   * Process markdown before marked\n   */\n  preprocess(markdown: string) {\n    return markdown;\n  }\n\n  /**\n   * Process HTML after marked is finished\n   */\n  postprocess(html: string) {\n    return html;\n  }\n\n  /**\n   * Process all tokens before walk tokens\n   */\n  processAllTokens(tokens: Token[] | TokensList) {\n    return tokens;\n  }\n\n  /**\n   * Provide function to tokenize markdown\n   */\n  provideLexer() {\n    return this.block ? _Lexer.lex : _Lexer.lexInline;\n  }\n\n  /**\n   * Provide function to parse tokens\n   */\n  provideParser() {\n    return this.block ? _Parser.parse : _Parser.parseInline;\n  }\n}\n", "import { _getDefaults } from './defaults.ts';\nimport { _Lexer } from './Lexer.ts';\nimport { _Parser } from './Parser.ts';\nimport { _Hooks } from './Hooks.ts';\nimport { _Renderer } from './Renderer.ts';\nimport { _Tokenizer } from './Tokenizer.ts';\nimport { _TextRenderer } from './TextRenderer.ts';\nimport { escape } from './helpers.ts';\nimport type { MarkedExtension, MarkedOptions } from './MarkedOptions.ts';\nimport type { Token, Tokens, TokensList } from './Tokens.ts';\n\nexport type MaybePromise = void | Promise<void>;\n\ntype UnknownFunction = (...args: unknown[]) => unknown;\ntype GenericRendererFunction = (...args: unknown[]) => string | false;\n\nexport class Marked {\n  defaults = _getDefaults();\n  options = this.setOptions;\n\n  parse = this.parseMarkdown(true);\n  parseInline = this.parseMarkdown(false);\n\n  Parser = _Parser;\n  Renderer = _Renderer;\n  TextRenderer = _TextRenderer;\n  Lexer = _Lexer;\n  Tokenizer = _Tokenizer;\n  Hooks = _Hooks;\n\n  constructor(...args: MarkedExtension[]) {\n    this.use(...args);\n  }\n\n  /**\n   * Run callback for every token\n   */\n  walkTokens(tokens: Token[] | TokensList, callback: (token: Token) => MaybePromise | MaybePromise[]) {\n    let values: MaybePromise[] = [];\n    for (const token of tokens) {\n      values = values.concat(callback.call(this, token));\n      switch (token.type) {\n        case 'table': {\n          const tableToken = token as Tokens.Table;\n          for (const cell of tableToken.header) {\n            values = values.concat(this.walkTokens(cell.tokens, callback));\n          }\n          for (const row of tableToken.rows) {\n            for (const cell of row) {\n              values = values.concat(this.walkTokens(cell.tokens, callback));\n            }\n          }\n          break;\n        }\n        case 'list': {\n          const listToken = token as Tokens.List;\n          values = values.concat(this.walkTokens(listToken.items, callback));\n          break;\n        }\n        default: {\n          const genericToken = token as Tokens.Generic;\n          if (this.defaults.extensions?.childTokens?.[genericToken.type]) {\n            this.defaults.extensions.childTokens[genericToken.type].forEach((childTokens) => {\n              const tokens = genericToken[childTokens].flat(Infinity) as Token[] | TokensList;\n              values = values.concat(this.walkTokens(tokens, callback));\n            });\n          } else if (genericToken.tokens) {\n            values = values.concat(this.walkTokens(genericToken.tokens, callback));\n          }\n        }\n      }\n    }\n    return values;\n  }\n\n  use(...args: MarkedExtension[]) {\n    const extensions: MarkedOptions['extensions'] = this.defaults.extensions || { renderers: {}, childTokens: {} };\n\n    args.forEach((pack) => {\n      // copy options to new object\n      const opts = { ...pack } as MarkedOptions;\n\n      // set async to true if it was set to true before\n      opts.async = this.defaults.async || opts.async || false;\n\n      // ==-- Parse \"addon\" extensions --== //\n      if (pack.extensions) {\n        pack.extensions.forEach((ext) => {\n          if (!ext.name) {\n            throw new Error('extension name required');\n          }\n          if ('renderer' in ext) { // Renderer extensions\n            const prevRenderer = extensions.renderers[ext.name];\n            if (prevRenderer) {\n              // Replace extension with func to run new extension but fall back if false\n              extensions.renderers[ext.name] = function(...args) {\n                let ret = ext.renderer.apply(this, args);\n                if (ret === false) {\n                  ret = prevRenderer.apply(this, args);\n                }\n                return ret;\n              };\n            } else {\n              extensions.renderers[ext.name] = ext.renderer;\n            }\n          }\n          if ('tokenizer' in ext) { // Tokenizer Extensions\n            if (!ext.level || (ext.level !== 'block' && ext.level !== 'inline')) {\n              throw new Error(\"extension level must be 'block' or 'inline'\");\n            }\n            const extLevel = extensions[ext.level];\n            if (extLevel) {\n              extLevel.unshift(ext.tokenizer);\n            } else {\n              extensions[ext.level] = [ext.tokenizer];\n            }\n            if (ext.start) { // Function to check for start of token\n              if (ext.level === 'block') {\n                if (extensions.startBlock) {\n                  extensions.startBlock.push(ext.start);\n                } else {\n                  extensions.startBlock = [ext.start];\n                }\n              } else if (ext.level === 'inline') {\n                if (extensions.startInline) {\n                  extensions.startInline.push(ext.start);\n                } else {\n                  extensions.startInline = [ext.start];\n                }\n              }\n            }\n          }\n          if ('childTokens' in ext && ext.childTokens) { // Child tokens to be visited by walkTokens\n            extensions.childTokens[ext.name] = ext.childTokens;\n          }\n        });\n        opts.extensions = extensions;\n      }\n\n      // ==-- Parse \"overwrite\" extensions --== //\n      if (pack.renderer) {\n        const renderer = this.defaults.renderer || new _Renderer(this.defaults);\n        for (const prop in pack.renderer) {\n          if (!(prop in renderer)) {\n            throw new Error(`renderer '${prop}' does not exist`);\n          }\n          if (['options', 'parser'].includes(prop)) {\n            // ignore options property\n            continue;\n          }\n          const rendererProp = prop as Exclude<keyof _Renderer, 'options' | 'parser'>;\n          const rendererFunc = pack.renderer[rendererProp] as GenericRendererFunction;\n          const prevRenderer = renderer[rendererProp] as GenericRendererFunction;\n          // Replace renderer with func to run extension, but fall back if false\n          renderer[rendererProp] = (...args: unknown[]) => {\n            let ret = rendererFunc.apply(renderer, args);\n            if (ret === false) {\n              ret = prevRenderer.apply(renderer, args);\n            }\n            return ret || '';\n          };\n        }\n        opts.renderer = renderer;\n      }\n      if (pack.tokenizer) {\n        const tokenizer = this.defaults.tokenizer || new _Tokenizer(this.defaults);\n        for (const prop in pack.tokenizer) {\n          if (!(prop in tokenizer)) {\n            throw new Error(`tokenizer '${prop}' does not exist`);\n          }\n          if (['options', 'rules', 'lexer'].includes(prop)) {\n            // ignore options, rules, and lexer properties\n            continue;\n          }\n          const tokenizerProp = prop as Exclude<keyof _Tokenizer, 'options' | 'rules' | 'lexer'>;\n          const tokenizerFunc = pack.tokenizer[tokenizerProp] as UnknownFunction;\n          const prevTokenizer = tokenizer[tokenizerProp] as UnknownFunction;\n          // Replace tokenizer with func to run extension, but fall back if false\n          // @ts-expect-error cannot type tokenizer function dynamically\n          tokenizer[tokenizerProp] = (...args: unknown[]) => {\n            let ret = tokenizerFunc.apply(tokenizer, args);\n            if (ret === false) {\n              ret = prevTokenizer.apply(tokenizer, args);\n            }\n            return ret;\n          };\n        }\n        opts.tokenizer = tokenizer;\n      }\n\n      // ==-- Parse Hooks extensions --== //\n      if (pack.hooks) {\n        const hooks = this.defaults.hooks || new _Hooks();\n        for (const prop in pack.hooks) {\n          if (!(prop in hooks)) {\n            throw new Error(`hook '${prop}' does not exist`);\n          }\n          if (['options', 'block'].includes(prop)) {\n            // ignore options and block properties\n            continue;\n          }\n          const hooksProp = prop as Exclude<keyof _Hooks, 'options' | 'block'>;\n          const hooksFunc = pack.hooks[hooksProp] as UnknownFunction;\n          const prevHook = hooks[hooksProp] as UnknownFunction;\n          if (_Hooks.passThroughHooks.has(prop)) {\n            // @ts-expect-error cannot type hook function dynamically\n            hooks[hooksProp] = (arg: unknown) => {\n              if (this.defaults.async) {\n                return Promise.resolve(hooksFunc.call(hooks, arg)).then(ret => {\n                  return prevHook.call(hooks, ret);\n                });\n              }\n\n              const ret = hooksFunc.call(hooks, arg);\n              return prevHook.call(hooks, ret);\n            };\n          } else {\n            // @ts-expect-error cannot type hook function dynamically\n            hooks[hooksProp] = (...args: unknown[]) => {\n              let ret = hooksFunc.apply(hooks, args);\n              if (ret === false) {\n                ret = prevHook.apply(hooks, args);\n              }\n              return ret;\n            };\n          }\n        }\n        opts.hooks = hooks;\n      }\n\n      // ==-- Parse WalkTokens extensions --== //\n      if (pack.walkTokens) {\n        const walkTokens = this.defaults.walkTokens;\n        const packWalktokens = pack.walkTokens;\n        opts.walkTokens = function(token) {\n          let values: MaybePromise[] = [];\n          values.push(packWalktokens.call(this, token));\n          if (walkTokens) {\n            values = values.concat(walkTokens.call(this, token));\n          }\n          return values;\n        };\n      }\n\n      this.defaults = { ...this.defaults, ...opts };\n    });\n\n    return this;\n  }\n\n  setOptions(opt: MarkedOptions) {\n    this.defaults = { ...this.defaults, ...opt };\n    return this;\n  }\n\n  lexer(src: string, options?: MarkedOptions) {\n    return _Lexer.lex(src, options ?? this.defaults);\n  }\n\n  parser(tokens: Token[], options?: MarkedOptions) {\n    return _Parser.parse(tokens, options ?? this.defaults);\n  }\n\n  private parseMarkdown(blockType: boolean) {\n    type overloadedParse = {\n      (src: string, options: MarkedOptions & { async: true }): Promise<string>;\n      (src: string, options: MarkedOptions & { async: false }): string;\n      (src: string, options?: MarkedOptions | null): string | Promise<string>;\n    };\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const parse: overloadedParse = (src: string, options?: MarkedOptions | null): any => {\n      const origOpt = { ...options };\n      const opt = { ...this.defaults, ...origOpt };\n\n      const throwError = this.onError(!!opt.silent, !!opt.async);\n\n      // throw error if an extension set async to true but parse was called with async: false\n      if (this.defaults.async === true && origOpt.async === false) {\n        return throwError(new Error('marked(): The async option was set to true by an extension. Remove async: false from the parse options object to return a Promise.'));\n      }\n\n      // throw error in case of non string input\n      if (typeof src === 'undefined' || src === null) {\n        return throwError(new Error('marked(): input parameter is undefined or null'));\n      }\n      if (typeof src !== 'string') {\n        return throwError(new Error('marked(): input parameter is of type '\n          + Object.prototype.toString.call(src) + ', string expected'));\n      }\n\n      if (opt.hooks) {\n        opt.hooks.options = opt;\n        opt.hooks.block = blockType;\n      }\n\n      const lexer = opt.hooks ? opt.hooks.provideLexer() : (blockType ? _Lexer.lex : _Lexer.lexInline);\n      const parser = opt.hooks ? opt.hooks.provideParser() : (blockType ? _Parser.parse : _Parser.parseInline);\n\n      if (opt.async) {\n        return Promise.resolve(opt.hooks ? opt.hooks.preprocess(src) : src)\n          .then(src => lexer(src, opt))\n          .then(tokens => opt.hooks ? opt.hooks.processAllTokens(tokens) : tokens)\n          .then(tokens => opt.walkTokens ? Promise.all(this.walkTokens(tokens, opt.walkTokens)).then(() => tokens) : tokens)\n          .then(tokens => parser(tokens, opt))\n          .then(html => opt.hooks ? opt.hooks.postprocess(html) : html)\n          .catch(throwError);\n      }\n\n      try {\n        if (opt.hooks) {\n          src = opt.hooks.preprocess(src) as string;\n        }\n        let tokens = lexer(src, opt);\n        if (opt.hooks) {\n          tokens = opt.hooks.processAllTokens(tokens);\n        }\n        if (opt.walkTokens) {\n          this.walkTokens(tokens, opt.walkTokens);\n        }\n        let html = parser(tokens, opt);\n        if (opt.hooks) {\n          html = opt.hooks.postprocess(html) as string;\n        }\n        return html;\n      } catch (e) {\n        return throwError(e as Error);\n      }\n    };\n\n    return parse;\n  }\n\n  private onError(silent: boolean, async: boolean) {\n    return (e: Error): string | Promise<string> => {\n      e.message += '\\nPlease report this to https://github.com/markedjs/marked.';\n\n      if (silent) {\n        const msg = '<p>An error occurred:</p><pre>'\n          + escape(e.message + '', true)\n          + '</pre>';\n        if (async) {\n          return Promise.resolve(msg);\n        }\n        return msg;\n      }\n\n      if (async) {\n        return Promise.reject(e);\n      }\n      throw e;\n    };\n  }\n}\n", "import { _Lexer } from './Lexer.ts';\nimport { _Parser } from './Parser.ts';\nimport { _Tokenizer } from './Tokenizer.ts';\nimport { _Renderer } from './Renderer.ts';\nimport { _TextRenderer } from './TextRenderer.ts';\nimport { _Hooks } from './Hooks.ts';\nimport { Marked } from './Instance.ts';\nimport {\n  _getDefaults,\n  changeDefaults,\n  _defaults,\n} from './defaults.ts';\nimport type { MarkedExtension, MarkedOptions } from './MarkedOptions.ts';\nimport type { Token, TokensList } from './Tokens.ts';\nimport type { MaybePromise } from './Instance.ts';\n\nconst markedInstance = new Marked();\n\n/**\n * Compiles markdown to HTML asynchronously.\n *\n * @param src String of markdown source to be compiled\n * @param options Hash of options, having async: true\n * @return Promise of string of compiled HTML\n */\nexport function marked(src: string, options: MarkedOptions & { async: true }): Promise<string>;\n\n/**\n * Compiles markdown to HTML.\n *\n * @param src String of markdown source to be compiled\n * @param options Optional hash of options\n * @return String of compiled HTML. Will be a Promise of string if async is set to true by any extensions.\n */\nexport function marked(src: string, options: MarkedOptions & { async: false }): string;\nexport function marked(src: string, options: MarkedOptions & { async: true }): Promise<string>;\nexport function marked(src: string, options?: MarkedOptions | null): string | Promise<string>;\nexport function marked(src: string, opt?: MarkedOptions | null): string | Promise<string> {\n  return markedInstance.parse(src, opt);\n}\n\n/**\n * Sets the default options.\n *\n * @param options Hash of options\n */\nmarked.options =\nmarked.setOptions = function(options: MarkedOptions) {\n  markedInstance.setOptions(options);\n  marked.defaults = markedInstance.defaults;\n  changeDefaults(marked.defaults);\n  return marked;\n};\n\n/**\n * Gets the original marked default options.\n */\nmarked.getDefaults = _getDefaults;\n\nmarked.defaults = _defaults;\n\n/**\n * Use Extension\n */\n\nmarked.use = function(...args: MarkedExtension[]) {\n  markedInstance.use(...args);\n  marked.defaults = markedInstance.defaults;\n  changeDefaults(marked.defaults);\n  return marked;\n};\n\n/**\n * Run callback for every token\n */\n\nmarked.walkTokens = function(tokens: Token[] | TokensList, callback: (token: Token) => MaybePromise | MaybePromise[]) {\n  return markedInstance.walkTokens(tokens, callback);\n};\n\n/**\n * Compiles markdown to HTML without enclosing `p` tag.\n *\n * @param src String of markdown source to be compiled\n * @param options Hash of options\n * @return String of compiled HTML\n */\nmarked.parseInline = markedInstance.parseInline;\n\n/**\n * Expose\n */\nmarked.Parser = _Parser;\nmarked.parser = _Parser.parse;\nmarked.Renderer = _Renderer;\nmarked.TextRenderer = _TextRenderer;\nmarked.Lexer = _Lexer;\nmarked.lexer = _Lexer.lex;\nmarked.Tokenizer = _Tokenizer;\nmarked.Hooks = _Hooks;\nmarked.parse = marked;\n\nexport const options = marked.options;\nexport const setOptions = marked.setOptions;\nexport const use = marked.use;\nexport const walkTokens = marked.walkTokens;\nexport const parseInline = marked.parseInline;\nexport const parse = marked;\nexport const parser = _Parser.parse;\nexport const lexer = _Lexer.lex;\nexport { _defaults as defaults, _getDefaults as getDefaults } from './defaults.ts';\nexport { _Lexer as Lexer } from './Lexer.ts';\nexport { _Parser as Parser } from './Parser.ts';\nexport { _Tokenizer as Tokenizer } from './Tokenizer.ts';\nexport { _Renderer as Renderer } from './Renderer.ts';\nexport { _TextRenderer as TextRenderer } from './TextRenderer.ts';\nexport { _Hooks as Hooks } from './Hooks.ts';\nexport { Marked } from './Instance.ts';\nexport type * from './MarkedOptions.ts';\nexport type * from './Tokens.ts';\n", "/**\n * Lexing or parsing positional information for error reporting.\n * This object is immutable.\n */\nclass SourceLocation {\n  // The + prefix indicates that these fields aren't writeable\n  // Lexer holding the input string.\n  // Start offset, zero-based inclusive.\n  // End offset, zero-based exclusive.\n  constructor(lexer, start, end) {\n    this.lexer = void 0;\n    this.start = void 0;\n    this.end = void 0;\n    this.lexer = lexer;\n    this.start = start;\n    this.end = end;\n  }\n  /**\n   * Merges two `SourceLocation`s from location providers, given they are\n   * provided in order of appearance.\n   * - Returns the first one's location if only the first is provided.\n   * - Returns a merged range of the first and the last if both are provided\n   *   and their lexers match.\n   * - Otherwise, returns null.\n   */\n\n\n  static range(first, second) {\n    if (!second) {\n      return first && first.loc;\n    } else if (!first || !first.loc || !second.loc || first.loc.lexer !== second.loc.lexer) {\n      return null;\n    } else {\n      return new SourceLocation(first.loc.lexer, first.loc.start, second.loc.end);\n    }\n  }\n\n}\n\n/**\n * Interface required to break circular dependency between Token, Lexer, and\n * ParseError.\n */\n\n/**\n * The resulting token returned from `lex`.\n *\n * It consists of the token text plus some position information.\n * The position information is essentially a range in an input string,\n * but instead of referencing the bare input string, we refer to the lexer.\n * That way it is possible to attach extra metadata to the input string,\n * like for example a file name or similar.\n *\n * The position information is optional, so it is OK to construct synthetic\n * tokens if appropriate. Not providing available position information may\n * lead to degraded error reporting, though.\n */\nclass Token {\n  // don't expand the token\n  // used in \\noexpand\n  constructor(text, // the text of this token\n  loc) {\n    this.text = void 0;\n    this.loc = void 0;\n    this.noexpand = void 0;\n    this.treatAsRelax = void 0;\n    this.text = text;\n    this.loc = loc;\n  }\n  /**\n   * Given a pair of tokens (this and endToken), compute a `Token` encompassing\n   * the whole input range enclosed by these two.\n   */\n\n\n  range(endToken, // last token of the range, inclusive\n  text // the text of the newly constructed token\n  ) {\n    return new Token(text, SourceLocation.range(this, endToken));\n  }\n\n}\n\n/**\n * This is the ParseError class, which is the main error thrown by KaTeX\n * functions when something has gone wrong. This is used to distinguish internal\n * errors from errors in the expression that the user provided.\n *\n * If possible, a caller should provide a Token or ParseNode with information\n * about where in the source string the problem occurred.\n */\nclass ParseError {\n  // Error start position based on passed-in Token or ParseNode.\n  // Length of affected text based on passed-in Token or ParseNode.\n  // The underlying error message without any context added.\n  constructor(message, // The error message\n  token // An object providing position information\n  ) {\n    this.name = void 0;\n    this.position = void 0;\n    this.length = void 0;\n    this.rawMessage = void 0;\n    var error = \"KaTeX parse error: \" + message;\n    var start;\n    var end;\n    var loc = token && token.loc;\n\n    if (loc && loc.start <= loc.end) {\n      // If we have the input and a position, make the error a bit fancier\n      // Get the input\n      var input = loc.lexer.input; // Prepend some information\n\n      start = loc.start;\n      end = loc.end;\n\n      if (start === input.length) {\n        error += \" at end of input: \";\n      } else {\n        error += \" at position \" + (start + 1) + \": \";\n      } // Underline token in question using combining underscores\n\n\n      var underlined = input.slice(start, end).replace(/[^]/g, \"$&\\u0332\"); // Extract some context from the input and add it to the error\n\n      var left;\n\n      if (start > 15) {\n        left = \"\u2026\" + input.slice(start - 15, start);\n      } else {\n        left = input.slice(0, start);\n      }\n\n      var right;\n\n      if (end + 15 < input.length) {\n        right = input.slice(end, end + 15) + \"\u2026\";\n      } else {\n        right = input.slice(end);\n      }\n\n      error += left + underlined + right;\n    } // Some hackery to make ParseError a prototype of Error\n    // See http://stackoverflow.com/a/8460753\n    // $FlowFixMe\n\n\n    var self = new Error(error);\n    self.name = \"ParseError\"; // $FlowFixMe\n\n    self.__proto__ = ParseError.prototype;\n    self.position = start;\n\n    if (start != null && end != null) {\n      self.length = end - start;\n    }\n\n    self.rawMessage = message;\n    return self;\n  }\n\n} // $FlowFixMe More hackery\n\n\nParseError.prototype.__proto__ = Error.prototype;\n\n/**\n * This file contains a list of utility functions which are useful in other\n * files.\n */\n\n/**\n * Return whether an element is contained in a list\n */\nvar contains = function contains(list, elem) {\n  return list.indexOf(elem) !== -1;\n};\n/**\n * Provide a default value if a setting is undefined\n * NOTE: Couldn't use `T` as the output type due to facebook/flow#5022.\n */\n\n\nvar deflt = function deflt(setting, defaultIfUndefined) {\n  return setting === undefined ? defaultIfUndefined : setting;\n}; // hyphenate and escape adapted from Facebook's React under Apache 2 license\n\n\nvar uppercase = /([A-Z])/g;\n\nvar hyphenate = function hyphenate(str) {\n  return str.replace(uppercase, \"-$1\").toLowerCase();\n};\n\nvar ESCAPE_LOOKUP = {\n  \"&\": \"&amp;\",\n  \">\": \"&gt;\",\n  \"<\": \"&lt;\",\n  \"\\\"\": \"&quot;\",\n  \"'\": \"&#x27;\"\n};\nvar ESCAPE_REGEX = /[&><\"']/g;\n/**\n * Escapes text to prevent scripting attacks.\n */\n\nfunction escape(text) {\n  return String(text).replace(ESCAPE_REGEX, match => ESCAPE_LOOKUP[match]);\n}\n/**\n * Sometimes we want to pull out the innermost element of a group. In most\n * cases, this will just be the group itself, but when ordgroups and colors have\n * a single element, we want to pull that out.\n */\n\n\nvar getBaseElem = function getBaseElem(group) {\n  if (group.type === \"ordgroup\") {\n    if (group.body.length === 1) {\n      return getBaseElem(group.body[0]);\n    } else {\n      return group;\n    }\n  } else if (group.type === \"color\") {\n    if (group.body.length === 1) {\n      return getBaseElem(group.body[0]);\n    } else {\n      return group;\n    }\n  } else if (group.type === \"font\") {\n    return getBaseElem(group.body);\n  } else {\n    return group;\n  }\n};\n/**\n * TeXbook algorithms often reference \"character boxes\", which are simply groups\n * with a single character in them. To decide if something is a character box,\n * we find its innermost group, and see if it is a single character.\n */\n\n\nvar isCharacterBox = function isCharacterBox(group) {\n  var baseElem = getBaseElem(group); // These are all they types of groups which hold single characters\n\n  return baseElem.type === \"mathord\" || baseElem.type === \"textord\" || baseElem.type === \"atom\";\n};\n\nvar assert = function assert(value) {\n  if (!value) {\n    throw new Error('Expected non-null, but got ' + String(value));\n  }\n\n  return value;\n};\n/**\n * Return the protocol of a URL, or \"_relative\" if the URL does not specify a\n * protocol (and thus is relative), or `null` if URL has invalid protocol\n * (so should be outright rejected).\n */\n\nvar protocolFromUrl = function protocolFromUrl(url) {\n  // Check for possible leading protocol.\n  // https://url.spec.whatwg.org/#url-parsing strips leading whitespace\n  // (U+20) or C0 control (U+00-U+1F) characters.\n  // eslint-disable-next-line no-control-regex\n  var protocol = /^[\\x00-\\x20]*([^\\\\/#?]*?)(:|&#0*58|&#x0*3a|&colon)/i.exec(url);\n\n  if (!protocol) {\n    return \"_relative\";\n  } // Reject weird colons\n\n\n  if (protocol[2] !== \":\") {\n    return null;\n  } // Reject invalid characters in scheme according to\n  // https://datatracker.ietf.org/doc/html/rfc3986#section-3.1\n\n\n  if (!/^[a-zA-Z][a-zA-Z0-9+\\-.]*$/.test(protocol[1])) {\n    return null;\n  } // Lowercase the protocol\n\n\n  return protocol[1].toLowerCase();\n};\nvar utils = {\n  contains,\n  deflt,\n  escape,\n  hyphenate,\n  getBaseElem,\n  isCharacterBox,\n  protocolFromUrl\n};\n\n/* eslint no-console:0 */\n// TODO: automatically generate documentation\n// TODO: check all properties on Settings exist\n// TODO: check the type of a property on Settings matches\nvar SETTINGS_SCHEMA = {\n  displayMode: {\n    type: \"boolean\",\n    description: \"Render math in display mode, which puts the math in \" + \"display style (so \\\\int and \\\\sum are large, for example), and \" + \"centers the math on the page on its own line.\",\n    cli: \"-d, --display-mode\"\n  },\n  output: {\n    type: {\n      enum: [\"htmlAndMathml\", \"html\", \"mathml\"]\n    },\n    description: \"Determines the markup language of the output.\",\n    cli: \"-F, --format <type>\"\n  },\n  leqno: {\n    type: \"boolean\",\n    description: \"Render display math in leqno style (left-justified tags).\"\n  },\n  fleqn: {\n    type: \"boolean\",\n    description: \"Render display math flush left.\"\n  },\n  throwOnError: {\n    type: \"boolean\",\n    default: true,\n    cli: \"-t, --no-throw-on-error\",\n    cliDescription: \"Render errors (in the color given by --error-color) ins\" + \"tead of throwing a ParseError exception when encountering an error.\"\n  },\n  errorColor: {\n    type: \"string\",\n    default: \"#cc0000\",\n    cli: \"-c, --error-color <color>\",\n    cliDescription: \"A color string given in the format 'rgb' or 'rrggbb' \" + \"(no #). This option determines the color of errors rendered by the \" + \"-t option.\",\n    cliProcessor: color => \"#\" + color\n  },\n  macros: {\n    type: \"object\",\n    cli: \"-m, --macro <def>\",\n    cliDescription: \"Define custom macro of the form '\\\\foo:expansion' (use \" + \"multiple -m arguments for multiple macros).\",\n    cliDefault: [],\n    cliProcessor: (def, defs) => {\n      defs.push(def);\n      return defs;\n    }\n  },\n  minRuleThickness: {\n    type: \"number\",\n    description: \"Specifies a minimum thickness, in ems, for fraction lines,\" + \" `\\\\sqrt` top lines, `{array}` vertical lines, `\\\\hline`, \" + \"`\\\\hdashline`, `\\\\underline`, `\\\\overline`, and the borders of \" + \"`\\\\fbox`, `\\\\boxed`, and `\\\\fcolorbox`.\",\n    processor: t => Math.max(0, t),\n    cli: \"--min-rule-thickness <size>\",\n    cliProcessor: parseFloat\n  },\n  colorIsTextColor: {\n    type: \"boolean\",\n    description: \"Makes \\\\color behave like LaTeX's 2-argument \\\\textcolor, \" + \"instead of LaTeX's one-argument \\\\color mode change.\",\n    cli: \"-b, --color-is-text-color\"\n  },\n  strict: {\n    type: [{\n      enum: [\"warn\", \"ignore\", \"error\"]\n    }, \"boolean\", \"function\"],\n    description: \"Turn on strict / LaTeX faithfulness mode, which throws an \" + \"error if the input uses features that are not supported by LaTeX.\",\n    cli: \"-S, --strict\",\n    cliDefault: false\n  },\n  trust: {\n    type: [\"boolean\", \"function\"],\n    description: \"Trust the input, enabling all HTML features such as \\\\url.\",\n    cli: \"-T, --trust\"\n  },\n  maxSize: {\n    type: \"number\",\n    default: Infinity,\n    description: \"If non-zero, all user-specified sizes, e.g. in \" + \"\\\\rule{500em}{500em}, will be capped to maxSize ems. Otherwise, \" + \"elements and spaces can be arbitrarily large\",\n    processor: s => Math.max(0, s),\n    cli: \"-s, --max-size <n>\",\n    cliProcessor: parseInt\n  },\n  maxExpand: {\n    type: \"number\",\n    default: 1000,\n    description: \"Limit the number of macro expansions to the specified \" + \"number, to prevent e.g. infinite macro loops. If set to Infinity, \" + \"the macro expander will try to fully expand as in LaTeX.\",\n    processor: n => Math.max(0, n),\n    cli: \"-e, --max-expand <n>\",\n    cliProcessor: n => n === \"Infinity\" ? Infinity : parseInt(n)\n  },\n  globalGroup: {\n    type: \"boolean\",\n    cli: false\n  }\n};\n\nfunction getDefaultValue(schema) {\n  if (schema.default) {\n    return schema.default;\n  }\n\n  var type = schema.type;\n  var defaultType = Array.isArray(type) ? type[0] : type;\n\n  if (typeof defaultType !== 'string') {\n    return defaultType.enum[0];\n  }\n\n  switch (defaultType) {\n    case 'boolean':\n      return false;\n\n    case 'string':\n      return '';\n\n    case 'number':\n      return 0;\n\n    case 'object':\n      return {};\n  }\n}\n/**\n * The main Settings object\n *\n * The current options stored are:\n *  - displayMode: Whether the expression should be typeset as inline math\n *                 (false, the default), meaning that the math starts in\n *                 \\textstyle and is placed in an inline-block); or as display\n *                 math (true), meaning that the math starts in \\displaystyle\n *                 and is placed in a block with vertical margin.\n */\n\n\nclass Settings {\n  constructor(options) {\n    this.displayMode = void 0;\n    this.output = void 0;\n    this.leqno = void 0;\n    this.fleqn = void 0;\n    this.throwOnError = void 0;\n    this.errorColor = void 0;\n    this.macros = void 0;\n    this.minRuleThickness = void 0;\n    this.colorIsTextColor = void 0;\n    this.strict = void 0;\n    this.trust = void 0;\n    this.maxSize = void 0;\n    this.maxExpand = void 0;\n    this.globalGroup = void 0;\n    // allow null options\n    options = options || {};\n\n    for (var prop in SETTINGS_SCHEMA) {\n      if (SETTINGS_SCHEMA.hasOwnProperty(prop)) {\n        // $FlowFixMe\n        var schema = SETTINGS_SCHEMA[prop]; // TODO: validate options\n        // $FlowFixMe\n\n        this[prop] = options[prop] !== undefined ? schema.processor ? schema.processor(options[prop]) : options[prop] : getDefaultValue(schema);\n      }\n    }\n  }\n  /**\n   * Report nonstrict (non-LaTeX-compatible) input.\n   * Can safely not be called if `this.strict` is false in JavaScript.\n   */\n\n\n  reportNonstrict(errorCode, errorMsg, token) {\n    var strict = this.strict;\n\n    if (typeof strict === \"function\") {\n      // Allow return value of strict function to be boolean or string\n      // (or null/undefined, meaning no further processing).\n      strict = strict(errorCode, errorMsg, token);\n    }\n\n    if (!strict || strict === \"ignore\") {\n      return;\n    } else if (strict === true || strict === \"error\") {\n      throw new ParseError(\"LaTeX-incompatible input and strict mode is set to 'error': \" + (errorMsg + \" [\" + errorCode + \"]\"), token);\n    } else if (strict === \"warn\") {\n      typeof console !== \"undefined\" && console.warn(\"LaTeX-incompatible input and strict mode is set to 'warn': \" + (errorMsg + \" [\" + errorCode + \"]\"));\n    } else {\n      // won't happen in type-safe code\n      typeof console !== \"undefined\" && console.warn(\"LaTeX-incompatible input and strict mode is set to \" + (\"unrecognized '\" + strict + \"': \" + errorMsg + \" [\" + errorCode + \"]\"));\n    }\n  }\n  /**\n   * Check whether to apply strict (LaTeX-adhering) behavior for unusual\n   * input (like `\\\\`).  Unlike `nonstrict`, will not throw an error;\n   * instead, \"error\" translates to a return value of `true`, while \"ignore\"\n   * translates to a return value of `false`.  May still print a warning:\n   * \"warn\" prints a warning and returns `false`.\n   * This is for the second category of `errorCode`s listed in the README.\n   */\n\n\n  useStrictBehavior(errorCode, errorMsg, token) {\n    var strict = this.strict;\n\n    if (typeof strict === \"function\") {\n      // Allow return value of strict function to be boolean or string\n      // (or null/undefined, meaning no further processing).\n      // But catch any exceptions thrown by function, treating them\n      // like \"error\".\n      try {\n        strict = strict(errorCode, errorMsg, token);\n      } catch (error) {\n        strict = \"error\";\n      }\n    }\n\n    if (!strict || strict === \"ignore\") {\n      return false;\n    } else if (strict === true || strict === \"error\") {\n      return true;\n    } else if (strict === \"warn\") {\n      typeof console !== \"undefined\" && console.warn(\"LaTeX-incompatible input and strict mode is set to 'warn': \" + (errorMsg + \" [\" + errorCode + \"]\"));\n      return false;\n    } else {\n      // won't happen in type-safe code\n      typeof console !== \"undefined\" && console.warn(\"LaTeX-incompatible input and strict mode is set to \" + (\"unrecognized '\" + strict + \"': \" + errorMsg + \" [\" + errorCode + \"]\"));\n      return false;\n    }\n  }\n  /**\n   * Check whether to test potentially dangerous input, and return\n   * `true` (trusted) or `false` (untrusted).  The sole argument `context`\n   * should be an object with `command` field specifying the relevant LaTeX\n   * command (as a string starting with `\\`), and any other arguments, etc.\n   * If `context` has a `url` field, a `protocol` field will automatically\n   * get added by this function (changing the specified object).\n   */\n\n\n  isTrusted(context) {\n    if (context.url && !context.protocol) {\n      var protocol = utils.protocolFromUrl(context.url);\n\n      if (protocol == null) {\n        return false;\n      }\n\n      context.protocol = protocol;\n    }\n\n    var trust = typeof this.trust === \"function\" ? this.trust(context) : this.trust;\n    return Boolean(trust);\n  }\n\n}\n\n/**\n * This file contains information and classes for the various kinds of styles\n * used in TeX. It provides a generic `Style` class, which holds information\n * about a specific style. It then provides instances of all the different kinds\n * of styles possible, and provides functions to move between them and get\n * information about them.\n */\n\n/**\n * The main style class. Contains a unique id for the style, a size (which is\n * the same for cramped and uncramped version of a style), and a cramped flag.\n */\nclass Style {\n  constructor(id, size, cramped) {\n    this.id = void 0;\n    this.size = void 0;\n    this.cramped = void 0;\n    this.id = id;\n    this.size = size;\n    this.cramped = cramped;\n  }\n  /**\n   * Get the style of a superscript given a base in the current style.\n   */\n\n\n  sup() {\n    return styles[sup[this.id]];\n  }\n  /**\n   * Get the style of a subscript given a base in the current style.\n   */\n\n\n  sub() {\n    return styles[sub[this.id]];\n  }\n  /**\n   * Get the style of a fraction numerator given the fraction in the current\n   * style.\n   */\n\n\n  fracNum() {\n    return styles[fracNum[this.id]];\n  }\n  /**\n   * Get the style of a fraction denominator given the fraction in the current\n   * style.\n   */\n\n\n  fracDen() {\n    return styles[fracDen[this.id]];\n  }\n  /**\n   * Get the cramped version of a style (in particular, cramping a cramped style\n   * doesn't change the style).\n   */\n\n\n  cramp() {\n    return styles[cramp[this.id]];\n  }\n  /**\n   * Get a text or display version of this style.\n   */\n\n\n  text() {\n    return styles[text$1[this.id]];\n  }\n  /**\n   * Return true if this style is tightly spaced (scriptstyle/scriptscriptstyle)\n   */\n\n\n  isTight() {\n    return this.size >= 2;\n  }\n\n} // Export an interface for type checking, but don't expose the implementation.\n// This way, no more styles can be generated.\n\n\n// IDs of the different styles\nvar D = 0;\nvar Dc = 1;\nvar T = 2;\nvar Tc = 3;\nvar S = 4;\nvar Sc = 5;\nvar SS = 6;\nvar SSc = 7; // Instances of the different styles\n\nvar styles = [new Style(D, 0, false), new Style(Dc, 0, true), new Style(T, 1, false), new Style(Tc, 1, true), new Style(S, 2, false), new Style(Sc, 2, true), new Style(SS, 3, false), new Style(SSc, 3, true)]; // Lookup tables for switching from one style to another\n\nvar sup = [S, Sc, S, Sc, SS, SSc, SS, SSc];\nvar sub = [Sc, Sc, Sc, Sc, SSc, SSc, SSc, SSc];\nvar fracNum = [T, Tc, S, Sc, SS, SSc, SS, SSc];\nvar fracDen = [Tc, Tc, Sc, Sc, SSc, SSc, SSc, SSc];\nvar cramp = [Dc, Dc, Tc, Tc, Sc, Sc, SSc, SSc];\nvar text$1 = [D, Dc, T, Tc, T, Tc, T, Tc]; // We only export some of the styles.\n\nvar Style$1 = {\n  DISPLAY: styles[D],\n  TEXT: styles[T],\n  SCRIPT: styles[S],\n  SCRIPTSCRIPT: styles[SS]\n};\n\n/*\n * This file defines the Unicode scripts and script families that we\n * support. To add new scripts or families, just add a new entry to the\n * scriptData array below. Adding scripts to the scriptData array allows\n * characters from that script to appear in \\text{} environments.\n */\n\n/**\n * Each script or script family has a name and an array of blocks.\n * Each block is an array of two numbers which specify the start and\n * end points (inclusive) of a block of Unicode codepoints.\n */\n\n/**\n * Unicode block data for the families of scripts we support in \\text{}.\n * Scripts only need to appear here if they do not have font metrics.\n */\nvar scriptData = [{\n  // Latin characters beyond the Latin-1 characters we have metrics for.\n  // Needed for Czech, Hungarian and Turkish text, for example.\n  name: 'latin',\n  blocks: [[0x0100, 0x024f], // Latin Extended-A and Latin Extended-B\n  [0x0300, 0x036f] // Combining Diacritical marks\n  ]\n}, {\n  // The Cyrillic script used by Russian and related languages.\n  // A Cyrillic subset used to be supported as explicitly defined\n  // symbols in symbols.js\n  name: 'cyrillic',\n  blocks: [[0x0400, 0x04ff]]\n}, {\n  // Armenian\n  name: 'armenian',\n  blocks: [[0x0530, 0x058F]]\n}, {\n  // The Brahmic scripts of South and Southeast Asia\n  // Devanagari (0900\u2013097F)\n  // Bengali (0980\u201309FF)\n  // Gurmukhi (0A00\u20130A7F)\n  // Gujarati (0A80\u20130AFF)\n  // Oriya (0B00\u20130B7F)\n  // Tamil (0B80\u20130BFF)\n  // Telugu (0C00\u20130C7F)\n  // Kannada (0C80\u20130CFF)\n  // Malayalam (0D00\u20130D7F)\n  // Sinhala (0D80\u20130DFF)\n  // Thai (0E00\u20130E7F)\n  // Lao (0E80\u20130EFF)\n  // Tibetan (0F00\u20130FFF)\n  // Myanmar (1000\u2013109F)\n  name: 'brahmic',\n  blocks: [[0x0900, 0x109F]]\n}, {\n  name: 'georgian',\n  blocks: [[0x10A0, 0x10ff]]\n}, {\n  // Chinese and Japanese.\n  // The \"k\" in cjk is for Korean, but we've separated Korean out\n  name: \"cjk\",\n  blocks: [[0x3000, 0x30FF], // CJK symbols and punctuation, Hiragana, Katakana\n  [0x4E00, 0x9FAF], // CJK ideograms\n  [0xFF00, 0xFF60] // Fullwidth punctuation\n  // TODO: add halfwidth Katakana and Romanji glyphs\n  ]\n}, {\n  // Korean\n  name: 'hangul',\n  blocks: [[0xAC00, 0xD7AF]]\n}];\n/**\n * Given a codepoint, return the name of the script or script family\n * it is from, or null if it is not part of a known block\n */\n\nfunction scriptFromCodepoint(codepoint) {\n  for (var i = 0; i < scriptData.length; i++) {\n    var script = scriptData[i];\n\n    for (var _i = 0; _i < script.blocks.length; _i++) {\n      var block = script.blocks[_i];\n\n      if (codepoint >= block[0] && codepoint <= block[1]) {\n        return script.name;\n      }\n    }\n  }\n\n  return null;\n}\n/**\n * A flattened version of all the supported blocks in a single array.\n * This is an optimization to make supportedCodepoint() fast.\n */\n\nvar allBlocks = [];\nscriptData.forEach(s => s.blocks.forEach(b => allBlocks.push(...b)));\n/**\n * Given a codepoint, return true if it falls within one of the\n * scripts or script families defined above and false otherwise.\n *\n * Micro benchmarks shows that this is faster than\n * /[\\u3000-\\u30FF\\u4E00-\\u9FAF\\uFF00-\\uFF60\\uAC00-\\uD7AF\\u0900-\\u109F]/.test()\n * in Firefox, Chrome and Node.\n */\n\nfunction supportedCodepoint(codepoint) {\n  for (var i = 0; i < allBlocks.length; i += 2) {\n    if (codepoint >= allBlocks[i] && codepoint <= allBlocks[i + 1]) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\n/**\n * This file provides support to domTree.js and delimiter.js.\n * It's a storehouse of path geometry for SVG images.\n */\n// In all paths below, the viewBox-to-em scale is 1000:1.\nvar hLinePad = 80; // padding above a sqrt vinculum. Prevents image cropping.\n// The vinculum of a \\sqrt can be made thicker by a KaTeX rendering option.\n// Think of variable extraVinculum as two detours in the SVG path.\n// The detour begins at the lower left of the area labeled extraVinculum below.\n// The detour proceeds one extraVinculum distance up and slightly to the right,\n// displacing the radiused corner between surd and vinculum. The radius is\n// traversed as usual, then the detour resumes. It goes right, to the end of\n// the very long vinculum, then down one extraVinculum distance,\n// after which it resumes regular path geometry for the radical.\n\n/*                                                  vinculum\n                                                   /\n         /\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2190extraVinculum\n        / \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u21900.04em (40 unit) std vinculum thickness\n       / /\n      / /\n     / /\\\n    / / surd\n*/\n\nvar sqrtMain = function sqrtMain(extraVinculum, hLinePad) {\n  // sqrtMain path geometry is from glyph U221A in the font KaTeX Main\n  return \"M95,\" + (622 + extraVinculum + hLinePad) + \"\\nc-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14\\nc0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54\\nc44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10\\ns173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429\\nc69,-144,104.5,-217.7,106.5,-221\\nl\" + extraVinculum / 2.075 + \" -\" + extraVinculum + \"\\nc5.3,-9.3,12,-14,20,-14\\nH400000v\" + (40 + extraVinculum) + \"H845.2724\\ns-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7\\nc-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47z\\nM\" + (834 + extraVinculum) + \" \" + hLinePad + \"h400000v\" + (40 + extraVinculum) + \"h-400000z\";\n};\n\nvar sqrtSize1 = function sqrtSize1(extraVinculum, hLinePad) {\n  // size1 is from glyph U221A in the font KaTeX_Size1-Regular\n  return \"M263,\" + (601 + extraVinculum + hLinePad) + \"c0.7,0,18,39.7,52,119\\nc34,79.3,68.167,158.7,102.5,238c34.3,79.3,51.8,119.3,52.5,120\\nc340,-704.7,510.7,-1060.3,512,-1067\\nl\" + extraVinculum / 2.084 + \" -\" + extraVinculum + \"\\nc4.7,-7.3,11,-11,19,-11\\nH40000v\" + (40 + extraVinculum) + \"H1012.3\\ns-271.3,567,-271.3,567c-38.7,80.7,-84,175,-136,283c-52,108,-89.167,185.3,-111.5,232\\nc-22.3,46.7,-33.8,70.3,-34.5,71c-4.7,4.7,-12.3,7,-23,7s-12,-1,-12,-1\\ns-109,-253,-109,-253c-72.7,-168,-109.3,-252,-110,-252c-10.7,8,-22,16.7,-34,26\\nc-22,17.3,-33.3,26,-34,26s-26,-26,-26,-26s76,-59,76,-59s76,-60,76,-60z\\nM\" + (1001 + extraVinculum) + \" \" + hLinePad + \"h400000v\" + (40 + extraVinculum) + \"h-400000z\";\n};\n\nvar sqrtSize2 = function sqrtSize2(extraVinculum, hLinePad) {\n  // size2 is from glyph U221A in the font KaTeX_Size2-Regular\n  return \"M983 \" + (10 + extraVinculum + hLinePad) + \"\\nl\" + extraVinculum / 3.13 + \" -\" + extraVinculum + \"\\nc4,-6.7,10,-10,18,-10 H400000v\" + (40 + extraVinculum) + \"\\nH1013.1s-83.4,268,-264.1,840c-180.7,572,-277,876.3,-289,913c-4.7,4.7,-12.7,7,-24,7\\ns-12,0,-12,0c-1.3,-3.3,-3.7,-11.7,-7,-25c-35.3,-125.3,-106.7,-373.3,-214,-744\\nc-10,12,-21,25,-33,39s-32,39,-32,39c-6,-5.3,-15,-14,-27,-26s25,-30,25,-30\\nc26.7,-32.7,52,-63,76,-91s52,-60,52,-60s208,722,208,722\\nc56,-175.3,126.3,-397.3,211,-666c84.7,-268.7,153.8,-488.2,207.5,-658.5\\nc53.7,-170.3,84.5,-266.8,92.5,-289.5z\\nM\" + (1001 + extraVinculum) + \" \" + hLinePad + \"h400000v\" + (40 + extraVinculum) + \"h-400000z\";\n};\n\nvar sqrtSize3 = function sqrtSize3(extraVinculum, hLinePad) {\n  // size3 is from glyph U221A in the font KaTeX_Size3-Regular\n  return \"M424,\" + (2398 + extraVinculum + hLinePad) + \"\\nc-1.3,-0.7,-38.5,-172,-111.5,-514c-73,-342,-109.8,-513.3,-110.5,-514\\nc0,-2,-10.7,14.3,-32,49c-4.7,7.3,-9.8,15.7,-15.5,25c-5.7,9.3,-9.8,16,-12.5,20\\ns-5,7,-5,7c-4,-3.3,-8.3,-7.7,-13,-13s-13,-13,-13,-13s76,-122,76,-122s77,-121,77,-121\\ns209,968,209,968c0,-2,84.7,-361.7,254,-1079c169.3,-717.3,254.7,-1077.7,256,-1081\\nl\" + extraVinculum / 4.223 + \" -\" + extraVinculum + \"c4,-6.7,10,-10,18,-10 H400000\\nv\" + (40 + extraVinculum) + \"H1014.6\\ns-87.3,378.7,-272.6,1166c-185.3,787.3,-279.3,1182.3,-282,1185\\nc-2,6,-10,9,-24,9\\nc-8,0,-12,-0.7,-12,-2z M\" + (1001 + extraVinculum) + \" \" + hLinePad + \"\\nh400000v\" + (40 + extraVinculum) + \"h-400000z\";\n};\n\nvar sqrtSize4 = function sqrtSize4(extraVinculum, hLinePad) {\n  // size4 is from glyph U221A in the font KaTeX_Size4-Regular\n  return \"M473,\" + (2713 + extraVinculum + hLinePad) + \"\\nc339.3,-1799.3,509.3,-2700,510,-2702 l\" + extraVinculum / 5.298 + \" -\" + extraVinculum + \"\\nc3.3,-7.3,9.3,-11,18,-11 H400000v\" + (40 + extraVinculum) + \"H1017.7\\ns-90.5,478,-276.2,1466c-185.7,988,-279.5,1483,-281.5,1485c-2,6,-10,9,-24,9\\nc-8,0,-12,-0.7,-12,-2c0,-1.3,-5.3,-32,-16,-92c-50.7,-293.3,-119.7,-693.3,-207,-1200\\nc0,-1.3,-5.3,8.7,-16,30c-10.7,21.3,-21.3,42.7,-32,64s-16,33,-16,33s-26,-26,-26,-26\\ns76,-153,76,-153s77,-151,77,-151c0.7,0.7,35.7,202,105,604c67.3,400.7,102,602.7,104,\\n606zM\" + (1001 + extraVinculum) + \" \" + hLinePad + \"h400000v\" + (40 + extraVinculum) + \"H1017.7z\";\n};\n\nvar phasePath = function phasePath(y) {\n  var x = y / 2; // x coordinate at top of angle\n\n  return \"M400000 \" + y + \" H0 L\" + x + \" 0 l65 45 L145 \" + (y - 80) + \" H400000z\";\n};\n\nvar sqrtTall = function sqrtTall(extraVinculum, hLinePad, viewBoxHeight) {\n  // sqrtTall is from glyph U23B7 in the font KaTeX_Size4-Regular\n  // One path edge has a variable length. It runs vertically from the vinculum\n  // to a point near (14 units) the bottom of the surd. The vinculum\n  // is normally 40 units thick. So the length of the line in question is:\n  var vertSegment = viewBoxHeight - 54 - hLinePad - extraVinculum;\n  return \"M702 \" + (extraVinculum + hLinePad) + \"H400000\" + (40 + extraVinculum) + \"\\nH742v\" + vertSegment + \"l-4 4-4 4c-.667.7 -2 1.5-4 2.5s-4.167 1.833-6.5 2.5-5.5 1-9.5 1\\nh-12l-28-84c-16.667-52-96.667 -294.333-240-727l-212 -643 -85 170\\nc-4-3.333-8.333-7.667-13 -13l-13-13l77-155 77-156c66 199.333 139 419.667\\n219 661 l218 661zM702 \" + hLinePad + \"H400000v\" + (40 + extraVinculum) + \"H742z\";\n};\n\nvar sqrtPath = function sqrtPath(size, extraVinculum, viewBoxHeight) {\n  extraVinculum = 1000 * extraVinculum; // Convert from document ems to viewBox.\n\n  var path = \"\";\n\n  switch (size) {\n    case \"sqrtMain\":\n      path = sqrtMain(extraVinculum, hLinePad);\n      break;\n\n    case \"sqrtSize1\":\n      path = sqrtSize1(extraVinculum, hLinePad);\n      break;\n\n    case \"sqrtSize2\":\n      path = sqrtSize2(extraVinculum, hLinePad);\n      break;\n\n    case \"sqrtSize3\":\n      path = sqrtSize3(extraVinculum, hLinePad);\n      break;\n\n    case \"sqrtSize4\":\n      path = sqrtSize4(extraVinculum, hLinePad);\n      break;\n\n    case \"sqrtTall\":\n      path = sqrtTall(extraVinculum, hLinePad, viewBoxHeight);\n  }\n\n  return path;\n};\nvar innerPath = function innerPath(name, height) {\n  // The inner part of stretchy tall delimiters\n  switch (name) {\n    case \"\\u239c\":\n      return \"M291 0 H417 V\" + height + \" H291z M291 0 H417 V\" + height + \" H291z\";\n\n    case \"\\u2223\":\n      return \"M145 0 H188 V\" + height + \" H145z M145 0 H188 V\" + height + \" H145z\";\n\n    case \"\\u2225\":\n      return \"M145 0 H188 V\" + height + \" H145z M145 0 H188 V\" + height + \" H145z\" + (\"M367 0 H410 V\" + height + \" H367z M367 0 H410 V\" + height + \" H367z\");\n\n    case \"\\u239f\":\n      return \"M457 0 H583 V\" + height + \" H457z M457 0 H583 V\" + height + \" H457z\";\n\n    case \"\\u23a2\":\n      return \"M319 0 H403 V\" + height + \" H319z M319 0 H403 V\" + height + \" H319z\";\n\n    case \"\\u23a5\":\n      return \"M263 0 H347 V\" + height + \" H263z M263 0 H347 V\" + height + \" H263z\";\n\n    case \"\\u23aa\":\n      return \"M384 0 H504 V\" + height + \" H384z M384 0 H504 V\" + height + \" H384z\";\n\n    case \"\\u23d0\":\n      return \"M312 0 H355 V\" + height + \" H312z M312 0 H355 V\" + height + \" H312z\";\n\n    case \"\\u2016\":\n      return \"M257 0 H300 V\" + height + \" H257z M257 0 H300 V\" + height + \" H257z\" + (\"M478 0 H521 V\" + height + \" H478z M478 0 H521 V\" + height + \" H478z\");\n\n    default:\n      return \"\";\n  }\n};\nvar path = {\n  // The doubleleftarrow geometry is from glyph U+21D0 in the font KaTeX Main\n  doubleleftarrow: \"M262 157\\nl10-10c34-36 62.7-77 86-123 3.3-8 5-13.3 5-16 0-5.3-6.7-8-20-8-7.3\\n 0-12.2.5-14.5 1.5-2.3 1-4.8 4.5-7.5 10.5-49.3 97.3-121.7 169.3-217 216-28\\n 14-57.3 25-88 33-6.7 2-11 3.8-13 5.5-2 1.7-3 4.2-3 7.5s1 5.8 3 7.5\\nc2 1.7 6.3 3.5 13 5.5 68 17.3 128.2 47.8 180.5 91.5 52.3 43.7 93.8 96.2 124.5\\n 157.5 9.3 8 15.3 12.3 18 13h6c12-.7 18-4 18-10 0-2-1.7-7-5-15-23.3-46-52-87\\n-86-123l-10-10h399738v-40H218c328 0 0 0 0 0l-10-8c-26.7-20-65.7-43-117-69 2.7\\n-2 6-3.7 10-5 36.7-16 72.3-37.3 107-64l10-8h399782v-40z\\nm8 0v40h399730v-40zm0 194v40h399730v-40z\",\n  // doublerightarrow is from glyph U+21D2 in font KaTeX Main\n  doublerightarrow: \"M399738 392l\\n-10 10c-34 36-62.7 77-86 123-3.3 8-5 13.3-5 16 0 5.3 6.7 8 20 8 7.3 0 12.2-.5\\n 14.5-1.5 2.3-1 4.8-4.5 7.5-10.5 49.3-97.3 121.7-169.3 217-216 28-14 57.3-25 88\\n-33 6.7-2 11-3.8 13-5.5 2-1.7 3-4.2 3-7.5s-1-5.8-3-7.5c-2-1.7-6.3-3.5-13-5.5-68\\n-17.3-128.2-47.8-180.5-91.5-52.3-43.7-93.8-96.2-124.5-157.5-9.3-8-15.3-12.3-18\\n-13h-6c-12 .7-18 4-18 10 0 2 1.7 7 5 15 23.3 46 52 87 86 123l10 10H0v40h399782\\nc-328 0 0 0 0 0l10 8c26.7 20 65.7 43 117 69-2.7 2-6 3.7-10 5-36.7 16-72.3 37.3\\n-107 64l-10 8H0v40zM0 157v40h399730v-40zm0 194v40h399730v-40z\",\n  // leftarrow is from glyph U+2190 in font KaTeX Main\n  leftarrow: \"M400000 241H110l3-3c68.7-52.7 113.7-120\\n 135-202 4-14.7 6-23 6-25 0-7.3-7-11-21-11-8 0-13.2.8-15.5 2.5-2.3 1.7-4.2 5.8\\n-5.5 12.5-1.3 4.7-2.7 10.3-4 17-12 48.7-34.8 92-68.5 130S65.3 228.3 18 247\\nc-10 4-16 7.7-18 11 0 8.7 6 14.3 18 17 47.3 18.7 87.8 47 121.5 85S196 441.3 208\\n 490c.7 2 1.3 5 2 9s1.2 6.7 1.5 8c.3 1.3 1 3.3 2 6s2.2 4.5 3.5 5.5c1.3 1 3.3\\n 1.8 6 2.5s6 1 10 1c14 0 21-3.7 21-11 0-2-2-10.3-6-25-20-79.3-65-146.7-135-202\\n l-3-3h399890zM100 241v40h399900v-40z\",\n  // overbrace is from glyphs U+23A9/23A8/23A7 in font KaTeX_Size4-Regular\n  leftbrace: \"M6 548l-6-6v-35l6-11c56-104 135.3-181.3 238-232 57.3-28.7 117\\n-45 179-50h399577v120H403c-43.3 7-81 15-113 26-100.7 33-179.7 91-237 174-2.7\\n 5-6 9-10 13-.7 1-7.3 1-20 1H6z\",\n  leftbraceunder: \"M0 6l6-6h17c12.688 0 19.313.3 20 1 4 4 7.313 8.3 10 13\\n 35.313 51.3 80.813 93.8 136.5 127.5 55.688 33.7 117.188 55.8 184.5 66.5.688\\n 0 2 .3 4 1 18.688 2.7 76 4.3 172 5h399450v120H429l-6-1c-124.688-8-235-61.7\\n-331-161C60.687 138.7 32.312 99.3 7 54L0 41V6z\",\n  // overgroup is from the MnSymbol package (public domain)\n  leftgroup: \"M400000 80\\nH435C64 80 168.3 229.4 21 260c-5.9 1.2-18 0-18 0-2 0-3-1-3-3v-38C76 61 257 0\\n 435 0h399565z\",\n  leftgroupunder: \"M400000 262\\nH435C64 262 168.3 112.6 21 82c-5.9-1.2-18 0-18 0-2 0-3 1-3 3v38c76 158 257 219\\n 435 219h399565z\",\n  // Harpoons are from glyph U+21BD in font KaTeX Main\n  leftharpoon: \"M0 267c.7 5.3 3 10 7 14h399993v-40H93c3.3\\n-3.3 10.2-9.5 20.5-18.5s17.8-15.8 22.5-20.5c50.7-52 88-110.3 112-175 4-11.3 5\\n-18.3 3-21-1.3-4-7.3-6-18-6-8 0-13 .7-15 2s-4.7 6.7-8 16c-42 98.7-107.3 174.7\\n-196 228-6.7 4.7-10.7 8-12 10-1.3 2-2 5.7-2 11zm100-26v40h399900v-40z\",\n  leftharpoonplus: \"M0 267c.7 5.3 3 10 7 14h399993v-40H93c3.3-3.3 10.2-9.5\\n 20.5-18.5s17.8-15.8 22.5-20.5c50.7-52 88-110.3 112-175 4-11.3 5-18.3 3-21-1.3\\n-4-7.3-6-18-6-8 0-13 .7-15 2s-4.7 6.7-8 16c-42 98.7-107.3 174.7-196 228-6.7 4.7\\n-10.7 8-12 10-1.3 2-2 5.7-2 11zm100-26v40h399900v-40zM0 435v40h400000v-40z\\nm0 0v40h400000v-40z\",\n  leftharpoondown: \"M7 241c-4 4-6.333 8.667-7 14 0 5.333.667 9 2 11s5.333\\n 5.333 12 10c90.667 54 156 130 196 228 3.333 10.667 6.333 16.333 9 17 2 .667 5\\n 1 9 1h5c10.667 0 16.667-2 18-6 2-2.667 1-9.667-3-21-32-87.333-82.667-157.667\\n-152-211l-3-3h399907v-40zM93 281 H400000 v-40L7 241z\",\n  leftharpoondownplus: \"M7 435c-4 4-6.3 8.7-7 14 0 5.3.7 9 2 11s5.3 5.3 12\\n 10c90.7 54 156 130 196 228 3.3 10.7 6.3 16.3 9 17 2 .7 5 1 9 1h5c10.7 0 16.7\\n-2 18-6 2-2.7 1-9.7-3-21-32-87.3-82.7-157.7-152-211l-3-3h399907v-40H7zm93 0\\nv40h399900v-40zM0 241v40h399900v-40zm0 0v40h399900v-40z\",\n  // hook is from glyph U+21A9 in font KaTeX Main\n  lefthook: \"M400000 281 H103s-33-11.2-61-33.5S0 197.3 0 164s14.2-61.2 42.5\\n-83.5C70.8 58.2 104 47 142 47 c16.7 0 25 6.7 25 20 0 12-8.7 18.7-26 20-40 3.3\\n-68.7 15.7-86 37-10 12-15 25.3-15 40 0 22.7 9.8 40.7 29.5 54 19.7 13.3 43.5 21\\n 71.5 23h399859zM103 281v-40h399897v40z\",\n  leftlinesegment: \"M40 281 V428 H0 V94 H40 V241 H400000 v40z\\nM40 281 V428 H0 V94 H40 V241 H400000 v40z\",\n  leftmapsto: \"M40 281 V448H0V74H40V241H400000v40z\\nM40 281 V448H0V74H40V241H400000v40z\",\n  // tofrom is from glyph U+21C4 in font KaTeX AMS Regular\n  leftToFrom: \"M0 147h400000v40H0zm0 214c68 40 115.7 95.7 143 167h22c15.3 0 23\\n-.3 23-1 0-1.3-5.3-13.7-16-37-18-35.3-41.3-69-70-101l-7-8h399905v-40H95l7-8\\nc28.7-32 52-65.7 70-101 10.7-23.3 16-35.7 16-37 0-.7-7.7-1-23-1h-22C115.7 265.3\\n 68 321 0 361zm0-174v-40h399900v40zm100 154v40h399900v-40z\",\n  longequal: \"M0 50 h400000 v40H0z m0 194h40000v40H0z\\nM0 50 h400000 v40H0z m0 194h40000v40H0z\",\n  midbrace: \"M200428 334\\nc-100.7-8.3-195.3-44-280-108-55.3-42-101.7-93-139-153l-9-14c-2.7 4-5.7 8.7-9 14\\n-53.3 86.7-123.7 153-211 199-66.7 36-137.3 56.3-212 62H0V214h199568c178.3-11.7\\n 311.7-78.3 403-201 6-8 9.7-12 11-12 .7-.7 6.7-1 18-1s17.3.3 18 1c1.3 0 5 4 11\\n 12 44.7 59.3 101.3 106.3 170 141s145.3 54.3 229 60h199572v120z\",\n  midbraceunder: \"M199572 214\\nc100.7 8.3 195.3 44 280 108 55.3 42 101.7 93 139 153l9 14c2.7-4 5.7-8.7 9-14\\n 53.3-86.7 123.7-153 211-199 66.7-36 137.3-56.3 212-62h199568v120H200432c-178.3\\n 11.7-311.7 78.3-403 201-6 8-9.7 12-11 12-.7.7-6.7 1-18 1s-17.3-.3-18-1c-1.3 0\\n-5-4-11-12-44.7-59.3-101.3-106.3-170-141s-145.3-54.3-229-60H0V214z\",\n  oiintSize1: \"M512.6 71.6c272.6 0 320.3 106.8 320.3 178.2 0 70.8-47.7 177.6\\n-320.3 177.6S193.1 320.6 193.1 249.8c0-71.4 46.9-178.2 319.5-178.2z\\nm368.1 178.2c0-86.4-60.9-215.4-368.1-215.4-306.4 0-367.3 129-367.3 215.4 0 85.8\\n60.9 214.8 367.3 214.8 307.2 0 368.1-129 368.1-214.8z\",\n  oiintSize2: \"M757.8 100.1c384.7 0 451.1 137.6 451.1 230 0 91.3-66.4 228.8\\n-451.1 228.8-386.3 0-452.7-137.5-452.7-228.8 0-92.4 66.4-230 452.7-230z\\nm502.4 230c0-111.2-82.4-277.2-502.4-277.2s-504 166-504 277.2\\nc0 110 84 276 504 276s502.4-166 502.4-276z\",\n  oiiintSize1: \"M681.4 71.6c408.9 0 480.5 106.8 480.5 178.2 0 70.8-71.6 177.6\\n-480.5 177.6S202.1 320.6 202.1 249.8c0-71.4 70.5-178.2 479.3-178.2z\\nm525.8 178.2c0-86.4-86.8-215.4-525.7-215.4-437.9 0-524.7 129-524.7 215.4 0\\n85.8 86.8 214.8 524.7 214.8 438.9 0 525.7-129 525.7-214.8z\",\n  oiiintSize2: \"M1021.2 53c603.6 0 707.8 165.8 707.8 277.2 0 110-104.2 275.8\\n-707.8 275.8-606 0-710.2-165.8-710.2-275.8C311 218.8 415.2 53 1021.2 53z\\nm770.4 277.1c0-131.2-126.4-327.6-770.5-327.6S248.4 198.9 248.4 330.1\\nc0 130 128.8 326.4 772.7 326.4s770.5-196.4 770.5-326.4z\",\n  rightarrow: \"M0 241v40h399891c-47.3 35.3-84 78-110 128\\n-16.7 32-27.7 63.7-33 95 0 1.3-.2 2.7-.5 4-.3 1.3-.5 2.3-.5 3 0 7.3 6.7 11 20\\n 11 8 0 13.2-.8 15.5-2.5 2.3-1.7 4.2-5.5 5.5-11.5 2-13.3 5.7-27 11-41 14.7-44.7\\n 39-84.5 73-119.5s73.7-60.2 119-75.5c6-2 9-5.7 9-11s-3-9-9-11c-45.3-15.3-85\\n-40.5-119-75.5s-58.3-74.8-73-119.5c-4.7-14-8.3-27.3-11-40-1.3-6.7-3.2-10.8-5.5\\n-12.5-2.3-1.7-7.5-2.5-15.5-2.5-14 0-21 3.7-21 11 0 2 2 10.3 6 25 20.7 83.3 67\\n 151.7 139 205zm0 0v40h399900v-40z\",\n  rightbrace: \"M400000 542l\\n-6 6h-17c-12.7 0-19.3-.3-20-1-4-4-7.3-8.3-10-13-35.3-51.3-80.8-93.8-136.5-127.5\\ns-117.2-55.8-184.5-66.5c-.7 0-2-.3-4-1-18.7-2.7-76-4.3-172-5H0V214h399571l6 1\\nc124.7 8 235 61.7 331 161 31.3 33.3 59.7 72.7 85 118l7 13v35z\",\n  rightbraceunder: \"M399994 0l6 6v35l-6 11c-56 104-135.3 181.3-238 232-57.3\\n 28.7-117 45-179 50H-300V214h399897c43.3-7 81-15 113-26 100.7-33 179.7-91 237\\n-174 2.7-5 6-9 10-13 .7-1 7.3-1 20-1h17z\",\n  rightgroup: \"M0 80h399565c371 0 266.7 149.4 414 180 5.9 1.2 18 0 18 0 2 0\\n 3-1 3-3v-38c-76-158-257-219-435-219H0z\",\n  rightgroupunder: \"M0 262h399565c371 0 266.7-149.4 414-180 5.9-1.2 18 0 18\\n 0 2 0 3 1 3 3v38c-76 158-257 219-435 219H0z\",\n  rightharpoon: \"M0 241v40h399993c4.7-4.7 7-9.3 7-14 0-9.3\\n-3.7-15.3-11-18-92.7-56.7-159-133.7-199-231-3.3-9.3-6-14.7-8-16-2-1.3-7-2-15-2\\n-10.7 0-16.7 2-18 6-2 2.7-1 9.7 3 21 15.3 42 36.7 81.8 64 119.5 27.3 37.7 58\\n 69.2 92 94.5zm0 0v40h399900v-40z\",\n  rightharpoonplus: \"M0 241v40h399993c4.7-4.7 7-9.3 7-14 0-9.3-3.7-15.3-11\\n-18-92.7-56.7-159-133.7-199-231-3.3-9.3-6-14.7-8-16-2-1.3-7-2-15-2-10.7 0-16.7\\n 2-18 6-2 2.7-1 9.7 3 21 15.3 42 36.7 81.8 64 119.5 27.3 37.7 58 69.2 92 94.5z\\nm0 0v40h399900v-40z m100 194v40h399900v-40zm0 0v40h399900v-40z\",\n  rightharpoondown: \"M399747 511c0 7.3 6.7 11 20 11 8 0 13-.8 15-2.5s4.7-6.8\\n 8-15.5c40-94 99.3-166.3 178-217 13.3-8 20.3-12.3 21-13 5.3-3.3 8.5-5.8 9.5\\n-7.5 1-1.7 1.5-5.2 1.5-10.5s-2.3-10.3-7-15H0v40h399908c-34 25.3-64.7 57-92 95\\n-27.3 38-48.7 77.7-64 119-3.3 8.7-5 14-5 16zM0 241v40h399900v-40z\",\n  rightharpoondownplus: \"M399747 705c0 7.3 6.7 11 20 11 8 0 13-.8\\n 15-2.5s4.7-6.8 8-15.5c40-94 99.3-166.3 178-217 13.3-8 20.3-12.3 21-13 5.3-3.3\\n 8.5-5.8 9.5-7.5 1-1.7 1.5-5.2 1.5-10.5s-2.3-10.3-7-15H0v40h399908c-34 25.3\\n-64.7 57-92 95-27.3 38-48.7 77.7-64 119-3.3 8.7-5 14-5 16zM0 435v40h399900v-40z\\nm0-194v40h400000v-40zm0 0v40h400000v-40z\",\n  righthook: \"M399859 241c-764 0 0 0 0 0 40-3.3 68.7-15.7 86-37 10-12 15-25.3\\n 15-40 0-22.7-9.8-40.7-29.5-54-19.7-13.3-43.5-21-71.5-23-17.3-1.3-26-8-26-20 0\\n-13.3 8.7-20 26-20 38 0 71 11.2 99 33.5 0 0 7 5.6 21 16.7 14 11.2 21 33.5 21\\n 66.8s-14 61.2-42 83.5c-28 22.3-61 33.5-99 33.5L0 241z M0 281v-40h399859v40z\",\n  rightlinesegment: \"M399960 241 V94 h40 V428 h-40 V281 H0 v-40z\\nM399960 241 V94 h40 V428 h-40 V281 H0 v-40z\",\n  rightToFrom: \"M400000 167c-70.7-42-118-97.7-142-167h-23c-15.3 0-23 .3-23\\n 1 0 1.3 5.3 13.7 16 37 18 35.3 41.3 69 70 101l7 8H0v40h399905l-7 8c-28.7 32\\n-52 65.7-70 101-10.7 23.3-16 35.7-16 37 0 .7 7.7 1 23 1h23c24-69.3 71.3-125 142\\n-167z M100 147v40h399900v-40zM0 341v40h399900v-40z\",\n  // twoheadleftarrow is from glyph U+219E in font KaTeX AMS Regular\n  twoheadleftarrow: \"M0 167c68 40\\n 115.7 95.7 143 167h22c15.3 0 23-.3 23-1 0-1.3-5.3-13.7-16-37-18-35.3-41.3-69\\n-70-101l-7-8h125l9 7c50.7 39.3 85 86 103 140h46c0-4.7-6.3-18.7-19-42-18-35.3\\n-40-67.3-66-96l-9-9h399716v-40H284l9-9c26-28.7 48-60.7 66-96 12.7-23.333 19\\n-37.333 19-42h-46c-18 54-52.3 100.7-103 140l-9 7H95l7-8c28.7-32 52-65.7 70-101\\n 10.7-23.333 16-35.7 16-37 0-.7-7.7-1-23-1h-22C115.7 71.3 68 127 0 167z\",\n  twoheadrightarrow: \"M400000 167\\nc-68-40-115.7-95.7-143-167h-22c-15.3 0-23 .3-23 1 0 1.3 5.3 13.7 16 37 18 35.3\\n 41.3 69 70 101l7 8h-125l-9-7c-50.7-39.3-85-86-103-140h-46c0 4.7 6.3 18.7 19 42\\n 18 35.3 40 67.3 66 96l9 9H0v40h399716l-9 9c-26 28.7-48 60.7-66 96-12.7 23.333\\n-19 37.333-19 42h46c18-54 52.3-100.7 103-140l9-7h125l-7 8c-28.7 32-52 65.7-70\\n 101-10.7 23.333-16 35.7-16 37 0 .7 7.7 1 23 1h22c27.3-71.3 75-127 143-167z\",\n  // tilde1 is a modified version of a glyph from the MnSymbol package\n  tilde1: \"M200 55.538c-77 0-168 73.953-177 73.953-3 0-7\\n-2.175-9-5.437L2 97c-1-2-2-4-2-6 0-4 2-7 5-9l20-12C116 12 171 0 207 0c86 0\\n 114 68 191 68 78 0 168-68 177-68 4 0 7 2 9 5l12 19c1 2.175 2 4.35 2 6.525 0\\n 4.35-2 7.613-5 9.788l-19 13.05c-92 63.077-116.937 75.308-183 76.128\\n-68.267.847-113-73.952-191-73.952z\",\n  // ditto tilde2, tilde3, & tilde4\n  tilde2: \"M344 55.266c-142 0-300.638 81.316-311.5 86.418\\n-8.01 3.762-22.5 10.91-23.5 5.562L1 120c-1-2-1-3-1-4 0-5 3-9 8-10l18.4-9C160.9\\n 31.9 283 0 358 0c148 0 188 122 331 122s314-97 326-97c4 0 8 2 10 7l7 21.114\\nc1 2.14 1 3.21 1 4.28 0 5.347-3 9.626-7 10.696l-22.3 12.622C852.6 158.372 751\\n 181.476 676 181.476c-149 0-189-126.21-332-126.21z\",\n  tilde3: \"M786 59C457 59 32 175.242 13 175.242c-6 0-10-3.457\\n-11-10.37L.15 138c-1-7 3-12 10-13l19.2-6.4C378.4 40.7 634.3 0 804.3 0c337 0\\n 411.8 157 746.8 157 328 0 754-112 773-112 5 0 10 3 11 9l1 14.075c1 8.066-.697\\n 16.595-6.697 17.492l-21.052 7.31c-367.9 98.146-609.15 122.696-778.15 122.696\\n -338 0-409-156.573-744-156.573z\",\n  tilde4: \"M786 58C457 58 32 177.487 13 177.487c-6 0-10-3.345\\n-11-10.035L.15 143c-1-7 3-12 10-13l22-6.7C381.2 35 637.15 0 807.15 0c337 0 409\\n 177 744 177 328 0 754-127 773-127 5 0 10 3 11 9l1 14.794c1 7.805-3 13.38-9\\n 14.495l-20.7 5.574c-366.85 99.79-607.3 139.372-776.3 139.372-338 0-409\\n -175.236-744-175.236z\",\n  // vec is from glyph U+20D7 in font KaTeX Main\n  vec: \"M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\\nc-16-25.333-24-45-24-59z\",\n  // widehat1 is a modified version of a glyph from the MnSymbol package\n  widehat1: \"M529 0h5l519 115c5 1 9 5 9 10 0 1-1 2-1 3l-4 22\\nc-1 5-5 9-11 9h-2L532 67 19 159h-2c-5 0-9-4-11-9l-5-22c-1-6 2-12 8-13z\",\n  // ditto widehat2, widehat3, & widehat4\n  widehat2: \"M1181 0h2l1171 176c6 0 10 5 10 11l-2 23c-1 6-5 10\\n-11 10h-1L1182 67 15 220h-1c-6 0-10-4-11-10l-2-23c-1-6 4-11 10-11z\",\n  widehat3: \"M1181 0h2l1171 236c6 0 10 5 10 11l-2 23c-1 6-5 10\\n-11 10h-1L1182 67 15 280h-1c-6 0-10-4-11-10l-2-23c-1-6 4-11 10-11z\",\n  widehat4: \"M1181 0h2l1171 296c6 0 10 5 10 11l-2 23c-1 6-5 10\\n-11 10h-1L1182 67 15 340h-1c-6 0-10-4-11-10l-2-23c-1-6 4-11 10-11z\",\n  // widecheck paths are all inverted versions of widehat\n  widecheck1: \"M529,159h5l519,-115c5,-1,9,-5,9,-10c0,-1,-1,-2,-1,-3l-4,-22c-1,\\n-5,-5,-9,-11,-9h-2l-512,92l-513,-92h-2c-5,0,-9,4,-11,9l-5,22c-1,6,2,12,8,13z\",\n  widecheck2: \"M1181,220h2l1171,-176c6,0,10,-5,10,-11l-2,-23c-1,-6,-5,-10,\\n-11,-10h-1l-1168,153l-1167,-153h-1c-6,0,-10,4,-11,10l-2,23c-1,6,4,11,10,11z\",\n  widecheck3: \"M1181,280h2l1171,-236c6,0,10,-5,10,-11l-2,-23c-1,-6,-5,-10,\\n-11,-10h-1l-1168,213l-1167,-213h-1c-6,0,-10,4,-11,10l-2,23c-1,6,4,11,10,11z\",\n  widecheck4: \"M1181,340h2l1171,-296c6,0,10,-5,10,-11l-2,-23c-1,-6,-5,-10,\\n-11,-10h-1l-1168,273l-1167,-273h-1c-6,0,-10,4,-11,10l-2,23c-1,6,4,11,10,11z\",\n  // The next ten paths support reaction arrows from the mhchem package.\n  // Arrows for \\ce{<-->} are offset from xAxis by 0.22ex, per mhchem in LaTeX\n  // baraboveleftarrow is mostly from glyph U+2190 in font KaTeX Main\n  baraboveleftarrow: \"M400000 620h-399890l3 -3c68.7 -52.7 113.7 -120 135 -202\\nc4 -14.7 6 -23 6 -25c0 -7.3 -7 -11 -21 -11c-8 0 -13.2 0.8 -15.5 2.5\\nc-2.3 1.7 -4.2 5.8 -5.5 12.5c-1.3 4.7 -2.7 10.3 -4 17c-12 48.7 -34.8 92 -68.5 130\\ns-74.2 66.3 -121.5 85c-10 4 -16 7.7 -18 11c0 8.7 6 14.3 18 17c47.3 18.7 87.8 47\\n121.5 85s56.5 81.3 68.5 130c0.7 2 1.3 5 2 9s1.2 6.7 1.5 8c0.3 1.3 1 3.3 2 6\\ns2.2 4.5 3.5 5.5c1.3 1 3.3 1.8 6 2.5s6 1 10 1c14 0 21 -3.7 21 -11\\nc0 -2 -2 -10.3 -6 -25c-20 -79.3 -65 -146.7 -135 -202l-3 -3h399890z\\nM100 620v40h399900v-40z M0 241v40h399900v-40zM0 241v40h399900v-40z\",\n  // rightarrowabovebar is mostly from glyph U+2192, KaTeX Main\n  rightarrowabovebar: \"M0 241v40h399891c-47.3 35.3-84 78-110 128-16.7 32\\n-27.7 63.7-33 95 0 1.3-.2 2.7-.5 4-.3 1.3-.5 2.3-.5 3 0 7.3 6.7 11 20 11 8 0\\n13.2-.8 15.5-2.5 2.3-1.7 4.2-5.5 5.5-11.5 2-13.3 5.7-27 11-41 14.7-44.7 39\\n-84.5 73-119.5s73.7-60.2 119-75.5c6-2 9-5.7 9-11s-3-9-9-11c-45.3-15.3-85-40.5\\n-119-75.5s-58.3-74.8-73-119.5c-4.7-14-8.3-27.3-11-40-1.3-6.7-3.2-10.8-5.5\\n-12.5-2.3-1.7-7.5-2.5-15.5-2.5-14 0-21 3.7-21 11 0 2 2 10.3 6 25 20.7 83.3 67\\n151.7 139 205zm96 379h399894v40H0zm0 0h399904v40H0z\",\n  // The short left harpoon has 0.5em (i.e. 500 units) kern on the left end.\n  // Ref from mhchem.sty: \\rlap{\\raisebox{-.22ex}{$\\kern0.5em\n  baraboveshortleftharpoon: \"M507,435c-4,4,-6.3,8.7,-7,14c0,5.3,0.7,9,2,11\\nc1.3,2,5.3,5.3,12,10c90.7,54,156,130,196,228c3.3,10.7,6.3,16.3,9,17\\nc2,0.7,5,1,9,1c0,0,5,0,5,0c10.7,0,16.7,-2,18,-6c2,-2.7,1,-9.7,-3,-21\\nc-32,-87.3,-82.7,-157.7,-152,-211c0,0,-3,-3,-3,-3l399351,0l0,-40\\nc-398570,0,-399437,0,-399437,0z M593 435 v40 H399500 v-40z\\nM0 281 v-40 H399908 v40z M0 281 v-40 H399908 v40z\",\n  rightharpoonaboveshortbar: \"M0,241 l0,40c399126,0,399993,0,399993,0\\nc4.7,-4.7,7,-9.3,7,-14c0,-9.3,-3.7,-15.3,-11,-18c-92.7,-56.7,-159,-133.7,-199,\\n-231c-3.3,-9.3,-6,-14.7,-8,-16c-2,-1.3,-7,-2,-15,-2c-10.7,0,-16.7,2,-18,6\\nc-2,2.7,-1,9.7,3,21c15.3,42,36.7,81.8,64,119.5c27.3,37.7,58,69.2,92,94.5z\\nM0 241 v40 H399908 v-40z M0 475 v-40 H399500 v40z M0 475 v-40 H399500 v40z\",\n  shortbaraboveleftharpoon: \"M7,435c-4,4,-6.3,8.7,-7,14c0,5.3,0.7,9,2,11\\nc1.3,2,5.3,5.3,12,10c90.7,54,156,130,196,228c3.3,10.7,6.3,16.3,9,17c2,0.7,5,1,9,\\n1c0,0,5,0,5,0c10.7,0,16.7,-2,18,-6c2,-2.7,1,-9.7,-3,-21c-32,-87.3,-82.7,-157.7,\\n-152,-211c0,0,-3,-3,-3,-3l399907,0l0,-40c-399126,0,-399993,0,-399993,0z\\nM93 435 v40 H400000 v-40z M500 241 v40 H400000 v-40z M500 241 v40 H400000 v-40z\",\n  shortrightharpoonabovebar: \"M53,241l0,40c398570,0,399437,0,399437,0\\nc4.7,-4.7,7,-9.3,7,-14c0,-9.3,-3.7,-15.3,-11,-18c-92.7,-56.7,-159,-133.7,-199,\\n-231c-3.3,-9.3,-6,-14.7,-8,-16c-2,-1.3,-7,-2,-15,-2c-10.7,0,-16.7,2,-18,6\\nc-2,2.7,-1,9.7,3,21c15.3,42,36.7,81.8,64,119.5c27.3,37.7,58,69.2,92,94.5z\\nM500 241 v40 H399408 v-40z M500 435 v40 H400000 v-40z\"\n};\nvar tallDelim = function tallDelim(label, midHeight) {\n  switch (label) {\n    case \"lbrack\":\n      return \"M403 1759 V84 H666 V0 H319 V1759 v\" + midHeight + \" v1759 h347 v-84\\nH403z M403 1759 V0 H319 V1759 v\" + midHeight + \" v1759 h84z\";\n\n    case \"rbrack\":\n      return \"M347 1759 V0 H0 V84 H263 V1759 v\" + midHeight + \" v1759 H0 v84 H347z\\nM347 1759 V0 H263 V1759 v\" + midHeight + \" v1759 h84z\";\n\n    case \"vert\":\n      return \"M145 15 v585 v\" + midHeight + \" v585 c2.667,10,9.667,15,21,15\\nc10,0,16.667,-5,20,-15 v-585 v\" + -midHeight + \" v-585 c-2.667,-10,-9.667,-15,-21,-15\\nc-10,0,-16.667,5,-20,15z M188 15 H145 v585 v\" + midHeight + \" v585 h43z\";\n\n    case \"doublevert\":\n      return \"M145 15 v585 v\" + midHeight + \" v585 c2.667,10,9.667,15,21,15\\nc10,0,16.667,-5,20,-15 v-585 v\" + -midHeight + \" v-585 c-2.667,-10,-9.667,-15,-21,-15\\nc-10,0,-16.667,5,-20,15z M188 15 H145 v585 v\" + midHeight + \" v585 h43z\\nM367 15 v585 v\" + midHeight + \" v585 c2.667,10,9.667,15,21,15\\nc10,0,16.667,-5,20,-15 v-585 v\" + -midHeight + \" v-585 c-2.667,-10,-9.667,-15,-21,-15\\nc-10,0,-16.667,5,-20,15z M410 15 H367 v585 v\" + midHeight + \" v585 h43z\";\n\n    case \"lfloor\":\n      return \"M319 602 V0 H403 V602 v\" + midHeight + \" v1715 h263 v84 H319z\\nMM319 602 V0 H403 V602 v\" + midHeight + \" v1715 H319z\";\n\n    case \"rfloor\":\n      return \"M319 602 V0 H403 V602 v\" + midHeight + \" v1799 H0 v-84 H319z\\nMM319 602 V0 H403 V602 v\" + midHeight + \" v1715 H319z\";\n\n    case \"lceil\":\n      return \"M403 1759 V84 H666 V0 H319 V1759 v\" + midHeight + \" v602 h84z\\nM403 1759 V0 H319 V1759 v\" + midHeight + \" v602 h84z\";\n\n    case \"rceil\":\n      return \"M347 1759 V0 H0 V84 H263 V1759 v\" + midHeight + \" v602 h84z\\nM347 1759 V0 h-84 V1759 v\" + midHeight + \" v602 h84z\";\n\n    case \"lparen\":\n      return \"M863,9c0,-2,-2,-5,-6,-9c0,0,-17,0,-17,0c-12.7,0,-19.3,0.3,-20,1\\nc-5.3,5.3,-10.3,11,-15,17c-242.7,294.7,-395.3,682,-458,1162c-21.3,163.3,-33.3,349,\\n-36,557 l0,\" + (midHeight + 84) + \"c0.2,6,0,26,0,60c2,159.3,10,310.7,24,454c53.3,528,210,\\n949.7,470,1265c4.7,6,9.7,11.7,15,17c0.7,0.7,7,1,19,1c0,0,18,0,18,0c4,-4,6,-7,6,-9\\nc0,-2.7,-3.3,-8.7,-10,-18c-135.3,-192.7,-235.5,-414.3,-300.5,-665c-65,-250.7,-102.5,\\n-544.7,-112.5,-882c-2,-104,-3,-167,-3,-189\\nl0,-\" + (midHeight + 92) + \"c0,-162.7,5.7,-314,17,-454c20.7,-272,63.7,-513,129,-723c65.3,\\n-210,155.3,-396.3,270,-559c6.7,-9.3,10,-15.3,10,-18z\";\n\n    case \"rparen\":\n      return \"M76,0c-16.7,0,-25,3,-25,9c0,2,2,6.3,6,13c21.3,28.7,42.3,60.3,\\n63,95c96.7,156.7,172.8,332.5,228.5,527.5c55.7,195,92.8,416.5,111.5,664.5\\nc11.3,139.3,17,290.7,17,454c0,28,1.7,43,3.3,45l0,\" + (midHeight + 9) + \"\\nc-3,4,-3.3,16.7,-3.3,38c0,162,-5.7,313.7,-17,455c-18.7,248,-55.8,469.3,-111.5,664\\nc-55.7,194.7,-131.8,370.3,-228.5,527c-20.7,34.7,-41.7,66.3,-63,95c-2,3.3,-4,7,-6,11\\nc0,7.3,5.7,11,17,11c0,0,11,0,11,0c9.3,0,14.3,-0.3,15,-1c5.3,-5.3,10.3,-11,15,-17\\nc242.7,-294.7,395.3,-681.7,458,-1161c21.3,-164.7,33.3,-350.7,36,-558\\nl0,-\" + (midHeight + 144) + \"c-2,-159.3,-10,-310.7,-24,-454c-53.3,-528,-210,-949.7,\\n-470,-1265c-4.7,-6,-9.7,-11.7,-15,-17c-0.7,-0.7,-6.7,-1,-18,-1z\";\n\n    default:\n      // We should not ever get here.\n      throw new Error(\"Unknown stretchy delimiter.\");\n  }\n};\n\n/**\n * This node represents a document fragment, which contains elements, but when\n * placed into the DOM doesn't have any representation itself. It only contains\n * children and doesn't have any DOM node properties.\n */\nclass DocumentFragment {\n  // HtmlDomNode\n  // Never used; needed for satisfying interface.\n  constructor(children) {\n    this.children = void 0;\n    this.classes = void 0;\n    this.height = void 0;\n    this.depth = void 0;\n    this.maxFontSize = void 0;\n    this.style = void 0;\n    this.children = children;\n    this.classes = [];\n    this.height = 0;\n    this.depth = 0;\n    this.maxFontSize = 0;\n    this.style = {};\n  }\n\n  hasClass(className) {\n    return utils.contains(this.classes, className);\n  }\n  /** Convert the fragment into a node. */\n\n\n  toNode() {\n    var frag = document.createDocumentFragment();\n\n    for (var i = 0; i < this.children.length; i++) {\n      frag.appendChild(this.children[i].toNode());\n    }\n\n    return frag;\n  }\n  /** Convert the fragment into HTML markup. */\n\n\n  toMarkup() {\n    var markup = \"\"; // Simply concatenate the markup for the children together.\n\n    for (var i = 0; i < this.children.length; i++) {\n      markup += this.children[i].toMarkup();\n    }\n\n    return markup;\n  }\n  /**\n   * Converts the math node into a string, similar to innerText. Applies to\n   * MathDomNode's only.\n   */\n\n\n  toText() {\n    // To avoid this, we would subclass documentFragment separately for\n    // MathML, but polyfills for subclassing is expensive per PR 1469.\n    // $FlowFixMe: Only works for ChildType = MathDomNode.\n    var toText = child => child.toText();\n\n    return this.children.map(toText).join(\"\");\n  }\n\n}\n\n// This file is GENERATED by buildMetrics.sh. DO NOT MODIFY.\nvar fontMetricsData = {\n  \"AMS-Regular\": {\n    \"32\": [0, 0, 0, 0, 0.25],\n    \"65\": [0, 0.68889, 0, 0, 0.72222],\n    \"66\": [0, 0.68889, 0, 0, 0.66667],\n    \"67\": [0, 0.68889, 0, 0, 0.72222],\n    \"68\": [0, 0.68889, 0, 0, 0.72222],\n    \"69\": [0, 0.68889, 0, 0, 0.66667],\n    \"70\": [0, 0.68889, 0, 0, 0.61111],\n    \"71\": [0, 0.68889, 0, 0, 0.77778],\n    \"72\": [0, 0.68889, 0, 0, 0.77778],\n    \"73\": [0, 0.68889, 0, 0, 0.38889],\n    \"74\": [0.16667, 0.68889, 0, 0, 0.5],\n    \"75\": [0, 0.68889, 0, 0, 0.77778],\n    \"76\": [0, 0.68889, 0, 0, 0.66667],\n    \"77\": [0, 0.68889, 0, 0, 0.94445],\n    \"78\": [0, 0.68889, 0, 0, 0.72222],\n    \"79\": [0.16667, 0.68889, 0, 0, 0.77778],\n    \"80\": [0, 0.68889, 0, 0, 0.61111],\n    \"81\": [0.16667, 0.68889, 0, 0, 0.77778],\n    \"82\": [0, 0.68889, 0, 0, 0.72222],\n    \"83\": [0, 0.68889, 0, 0, 0.55556],\n    \"84\": [0, 0.68889, 0, 0, 0.66667],\n    \"85\": [0, 0.68889, 0, 0, 0.72222],\n    \"86\": [0, 0.68889, 0, 0, 0.72222],\n    \"87\": [0, 0.68889, 0, 0, 1.0],\n    \"88\": [0, 0.68889, 0, 0, 0.72222],\n    \"89\": [0, 0.68889, 0, 0, 0.72222],\n    \"90\": [0, 0.68889, 0, 0, 0.66667],\n    \"107\": [0, 0.68889, 0, 0, 0.55556],\n    \"160\": [0, 0, 0, 0, 0.25],\n    \"165\": [0, 0.675, 0.025, 0, 0.75],\n    \"174\": [0.15559, 0.69224, 0, 0, 0.94666],\n    \"240\": [0, 0.68889, 0, 0, 0.55556],\n    \"295\": [0, 0.68889, 0, 0, 0.54028],\n    \"710\": [0, 0.825, 0, 0, 2.33334],\n    \"732\": [0, 0.9, 0, 0, 2.33334],\n    \"770\": [0, 0.825, 0, 0, 2.33334],\n    \"771\": [0, 0.9, 0, 0, 2.33334],\n    \"989\": [0.08167, 0.58167, 0, 0, 0.77778],\n    \"1008\": [0, 0.43056, 0.04028, 0, 0.66667],\n    \"8245\": [0, 0.54986, 0, 0, 0.275],\n    \"8463\": [0, 0.68889, 0, 0, 0.54028],\n    \"8487\": [0, 0.68889, 0, 0, 0.72222],\n    \"8498\": [0, 0.68889, 0, 0, 0.55556],\n    \"8502\": [0, 0.68889, 0, 0, 0.66667],\n    \"8503\": [0, 0.68889, 0, 0, 0.44445],\n    \"8504\": [0, 0.68889, 0, 0, 0.66667],\n    \"8513\": [0, 0.68889, 0, 0, 0.63889],\n    \"8592\": [-0.03598, 0.46402, 0, 0, 0.5],\n    \"8594\": [-0.03598, 0.46402, 0, 0, 0.5],\n    \"8602\": [-0.13313, 0.36687, 0, 0, 1.0],\n    \"8603\": [-0.13313, 0.36687, 0, 0, 1.0],\n    \"8606\": [0.01354, 0.52239, 0, 0, 1.0],\n    \"8608\": [0.01354, 0.52239, 0, 0, 1.0],\n    \"8610\": [0.01354, 0.52239, 0, 0, 1.11111],\n    \"8611\": [0.01354, 0.52239, 0, 0, 1.11111],\n    \"8619\": [0, 0.54986, 0, 0, 1.0],\n    \"8620\": [0, 0.54986, 0, 0, 1.0],\n    \"8621\": [-0.13313, 0.37788, 0, 0, 1.38889],\n    \"8622\": [-0.13313, 0.36687, 0, 0, 1.0],\n    \"8624\": [0, 0.69224, 0, 0, 0.5],\n    \"8625\": [0, 0.69224, 0, 0, 0.5],\n    \"8630\": [0, 0.43056, 0, 0, 1.0],\n    \"8631\": [0, 0.43056, 0, 0, 1.0],\n    \"8634\": [0.08198, 0.58198, 0, 0, 0.77778],\n    \"8635\": [0.08198, 0.58198, 0, 0, 0.77778],\n    \"8638\": [0.19444, 0.69224, 0, 0, 0.41667],\n    \"8639\": [0.19444, 0.69224, 0, 0, 0.41667],\n    \"8642\": [0.19444, 0.69224, 0, 0, 0.41667],\n    \"8643\": [0.19444, 0.69224, 0, 0, 0.41667],\n    \"8644\": [0.1808, 0.675, 0, 0, 1.0],\n    \"8646\": [0.1808, 0.675, 0, 0, 1.0],\n    \"8647\": [0.1808, 0.675, 0, 0, 1.0],\n    \"8648\": [0.19444, 0.69224, 0, 0, 0.83334],\n    \"8649\": [0.1808, 0.675, 0, 0, 1.0],\n    \"8650\": [0.19444, 0.69224, 0, 0, 0.83334],\n    \"8651\": [0.01354, 0.52239, 0, 0, 1.0],\n    \"8652\": [0.01354, 0.52239, 0, 0, 1.0],\n    \"8653\": [-0.13313, 0.36687, 0, 0, 1.0],\n    \"8654\": [-0.13313, 0.36687, 0, 0, 1.0],\n    \"8655\": [-0.13313, 0.36687, 0, 0, 1.0],\n    \"8666\": [0.13667, 0.63667, 0, 0, 1.0],\n    \"8667\": [0.13667, 0.63667, 0, 0, 1.0],\n    \"8669\": [-0.13313, 0.37788, 0, 0, 1.0],\n    \"8672\": [-0.064, 0.437, 0, 0, 1.334],\n    \"8674\": [-0.064, 0.437, 0, 0, 1.334],\n    \"8705\": [0, 0.825, 0, 0, 0.5],\n    \"8708\": [0, 0.68889, 0, 0, 0.55556],\n    \"8709\": [0.08167, 0.58167, 0, 0, 0.77778],\n    \"8717\": [0, 0.43056, 0, 0, 0.42917],\n    \"8722\": [-0.03598, 0.46402, 0, 0, 0.5],\n    \"8724\": [0.08198, 0.69224, 0, 0, 0.77778],\n    \"8726\": [0.08167, 0.58167, 0, 0, 0.77778],\n    \"8733\": [0, 0.69224, 0, 0, 0.77778],\n    \"8736\": [0, 0.69224, 0, 0, 0.72222],\n    \"8737\": [0, 0.69224, 0, 0, 0.72222],\n    \"8738\": [0.03517, 0.52239, 0, 0, 0.72222],\n    \"8739\": [0.08167, 0.58167, 0, 0, 0.22222],\n    \"8740\": [0.25142, 0.74111, 0, 0, 0.27778],\n    \"8741\": [0.08167, 0.58167, 0, 0, 0.38889],\n    \"8742\": [0.25142, 0.74111, 0, 0, 0.5],\n    \"8756\": [0, 0.69224, 0, 0, 0.66667],\n    \"8757\": [0, 0.69224, 0, 0, 0.66667],\n    \"8764\": [-0.13313, 0.36687, 0, 0, 0.77778],\n    \"8765\": [-0.13313, 0.37788, 0, 0, 0.77778],\n    \"8769\": [-0.13313, 0.36687, 0, 0, 0.77778],\n    \"8770\": [-0.03625, 0.46375, 0, 0, 0.77778],\n    \"8774\": [0.30274, 0.79383, 0, 0, 0.77778],\n    \"8776\": [-0.01688, 0.48312, 0, 0, 0.77778],\n    \"8778\": [0.08167, 0.58167, 0, 0, 0.77778],\n    \"8782\": [0.06062, 0.54986, 0, 0, 0.77778],\n    \"8783\": [0.06062, 0.54986, 0, 0, 0.77778],\n    \"8785\": [0.08198, 0.58198, 0, 0, 0.77778],\n    \"8786\": [0.08198, 0.58198, 0, 0, 0.77778],\n    \"8787\": [0.08198, 0.58198, 0, 0, 0.77778],\n    \"8790\": [0, 0.69224, 0, 0, 0.77778],\n    \"8791\": [0.22958, 0.72958, 0, 0, 0.77778],\n    \"8796\": [0.08198, 0.91667, 0, 0, 0.77778],\n    \"8806\": [0.25583, 0.75583, 0, 0, 0.77778],\n    \"8807\": [0.25583, 0.75583, 0, 0, 0.77778],\n    \"8808\": [0.25142, 0.75726, 0, 0, 0.77778],\n    \"8809\": [0.25142, 0.75726, 0, 0, 0.77778],\n    \"8812\": [0.25583, 0.75583, 0, 0, 0.5],\n    \"8814\": [0.20576, 0.70576, 0, 0, 0.77778],\n    \"8815\": [0.20576, 0.70576, 0, 0, 0.77778],\n    \"8816\": [0.30274, 0.79383, 0, 0, 0.77778],\n    \"8817\": [0.30274, 0.79383, 0, 0, 0.77778],\n    \"8818\": [0.22958, 0.72958, 0, 0, 0.77778],\n    \"8819\": [0.22958, 0.72958, 0, 0, 0.77778],\n    \"8822\": [0.1808, 0.675, 0, 0, 0.77778],\n    \"8823\": [0.1808, 0.675, 0, 0, 0.77778],\n    \"8828\": [0.13667, 0.63667, 0, 0, 0.77778],\n    \"8829\": [0.13667, 0.63667, 0, 0, 0.77778],\n    \"8830\": [0.22958, 0.72958, 0, 0, 0.77778],\n    \"8831\": [0.22958, 0.72958, 0, 0, 0.77778],\n    \"8832\": [0.20576, 0.70576, 0, 0, 0.77778],\n    \"8833\": [0.20576, 0.70576, 0, 0, 0.77778],\n    \"8840\": [0.30274, 0.79383, 0, 0, 0.77778],\n    \"8841\": [0.30274, 0.79383, 0, 0, 0.77778],\n    \"8842\": [0.13597, 0.63597, 0, 0, 0.77778],\n    \"8843\": [0.13597, 0.63597, 0, 0, 0.77778],\n    \"8847\": [0.03517, 0.54986, 0, 0, 0.77778],\n    \"8848\": [0.03517, 0.54986, 0, 0, 0.77778],\n    \"8858\": [0.08198, 0.58198, 0, 0, 0.77778],\n    \"8859\": [0.08198, 0.58198, 0, 0, 0.77778],\n    \"8861\": [0.08198, 0.58198, 0, 0, 0.77778],\n    \"8862\": [0, 0.675, 0, 0, 0.77778],\n    \"8863\": [0, 0.675, 0, 0, 0.77778],\n    \"8864\": [0, 0.675, 0, 0, 0.77778],\n    \"8865\": [0, 0.675, 0, 0, 0.77778],\n    \"8872\": [0, 0.69224, 0, 0, 0.61111],\n    \"8873\": [0, 0.69224, 0, 0, 0.72222],\n    \"8874\": [0, 0.69224, 0, 0, 0.88889],\n    \"8876\": [0, 0.68889, 0, 0, 0.61111],\n    \"8877\": [0, 0.68889, 0, 0, 0.61111],\n    \"8878\": [0, 0.68889, 0, 0, 0.72222],\n    \"8879\": [0, 0.68889, 0, 0, 0.72222],\n    \"8882\": [0.03517, 0.54986, 0, 0, 0.77778],\n    \"8883\": [0.03517, 0.54986, 0, 0, 0.77778],\n    \"8884\": [0.13667, 0.63667, 0, 0, 0.77778],\n    \"8885\": [0.13667, 0.63667, 0, 0, 0.77778],\n    \"8888\": [0, 0.54986, 0, 0, 1.11111],\n    \"8890\": [0.19444, 0.43056, 0, 0, 0.55556],\n    \"8891\": [0.19444, 0.69224, 0, 0, 0.61111],\n    \"8892\": [0.19444, 0.69224, 0, 0, 0.61111],\n    \"8901\": [0, 0.54986, 0, 0, 0.27778],\n    \"8903\": [0.08167, 0.58167, 0, 0, 0.77778],\n    \"8905\": [0.08167, 0.58167, 0, 0, 0.77778],\n    \"8906\": [0.08167, 0.58167, 0, 0, 0.77778],\n    \"8907\": [0, 0.69224, 0, 0, 0.77778],\n    \"8908\": [0, 0.69224, 0, 0, 0.77778],\n    \"8909\": [-0.03598, 0.46402, 0, 0, 0.77778],\n    \"8910\": [0, 0.54986, 0, 0, 0.76042],\n    \"8911\": [0, 0.54986, 0, 0, 0.76042],\n    \"8912\": [0.03517, 0.54986, 0, 0, 0.77778],\n    \"8913\": [0.03517, 0.54986, 0, 0, 0.77778],\n    \"8914\": [0, 0.54986, 0, 0, 0.66667],\n    \"8915\": [0, 0.54986, 0, 0, 0.66667],\n    \"8916\": [0, 0.69224, 0, 0, 0.66667],\n    \"8918\": [0.0391, 0.5391, 0, 0, 0.77778],\n    \"8919\": [0.0391, 0.5391, 0, 0, 0.77778],\n    \"8920\": [0.03517, 0.54986, 0, 0, 1.33334],\n    \"8921\": [0.03517, 0.54986, 0, 0, 1.33334],\n    \"8922\": [0.38569, 0.88569, 0, 0, 0.77778],\n    \"8923\": [0.38569, 0.88569, 0, 0, 0.77778],\n    \"8926\": [0.13667, 0.63667, 0, 0, 0.77778],\n    \"8927\": [0.13667, 0.63667, 0, 0, 0.77778],\n    \"8928\": [0.30274, 0.79383, 0, 0, 0.77778],\n    \"8929\": [0.30274, 0.79383, 0, 0, 0.77778],\n    \"8934\": [0.23222, 0.74111, 0, 0, 0.77778],\n    \"8935\": [0.23222, 0.74111, 0, 0, 0.77778],\n    \"8936\": [0.23222, 0.74111, 0, 0, 0.77778],\n    \"8937\": [0.23222, 0.74111, 0, 0, 0.77778],\n    \"8938\": [0.20576, 0.70576, 0, 0, 0.77778],\n    \"8939\": [0.20576, 0.70576, 0, 0, 0.77778],\n    \"8940\": [0.30274, 0.79383, 0, 0, 0.77778],\n    \"8941\": [0.30274, 0.79383, 0, 0, 0.77778],\n    \"8994\": [0.19444, 0.69224, 0, 0, 0.77778],\n    \"8995\": [0.19444, 0.69224, 0, 0, 0.77778],\n    \"9416\": [0.15559, 0.69224, 0, 0, 0.90222],\n    \"9484\": [0, 0.69224, 0, 0, 0.5],\n    \"9488\": [0, 0.69224, 0, 0, 0.5],\n    \"9492\": [0, 0.37788, 0, 0, 0.5],\n    \"9496\": [0, 0.37788, 0, 0, 0.5],\n    \"9585\": [0.19444, 0.68889, 0, 0, 0.88889],\n    \"9586\": [0.19444, 0.74111, 0, 0, 0.88889],\n    \"9632\": [0, 0.675, 0, 0, 0.77778],\n    \"9633\": [0, 0.675, 0, 0, 0.77778],\n    \"9650\": [0, 0.54986, 0, 0, 0.72222],\n    \"9651\": [0, 0.54986, 0, 0, 0.72222],\n    \"9654\": [0.03517, 0.54986, 0, 0, 0.77778],\n    \"9660\": [0, 0.54986, 0, 0, 0.72222],\n    \"9661\": [0, 0.54986, 0, 0, 0.72222],\n    \"9664\": [0.03517, 0.54986, 0, 0, 0.77778],\n    \"9674\": [0.11111, 0.69224, 0, 0, 0.66667],\n    \"9733\": [0.19444, 0.69224, 0, 0, 0.94445],\n    \"10003\": [0, 0.69224, 0, 0, 0.83334],\n    \"10016\": [0, 0.69224, 0, 0, 0.83334],\n    \"10731\": [0.11111, 0.69224, 0, 0, 0.66667],\n    \"10846\": [0.19444, 0.75583, 0, 0, 0.61111],\n    \"10877\": [0.13667, 0.63667, 0, 0, 0.77778],\n    \"10878\": [0.13667, 0.63667, 0, 0, 0.77778],\n    \"10885\": [0.25583, 0.75583, 0, 0, 0.77778],\n    \"10886\": [0.25583, 0.75583, 0, 0, 0.77778],\n    \"10887\": [0.13597, 0.63597, 0, 0, 0.77778],\n    \"10888\": [0.13597, 0.63597, 0, 0, 0.77778],\n    \"10889\": [0.26167, 0.75726, 0, 0, 0.77778],\n    \"10890\": [0.26167, 0.75726, 0, 0, 0.77778],\n    \"10891\": [0.48256, 0.98256, 0, 0, 0.77778],\n    \"10892\": [0.48256, 0.98256, 0, 0, 0.77778],\n    \"10901\": [0.13667, 0.63667, 0, 0, 0.77778],\n    \"10902\": [0.13667, 0.63667, 0, 0, 0.77778],\n    \"10933\": [0.25142, 0.75726, 0, 0, 0.77778],\n    \"10934\": [0.25142, 0.75726, 0, 0, 0.77778],\n    \"10935\": [0.26167, 0.75726, 0, 0, 0.77778],\n    \"10936\": [0.26167, 0.75726, 0, 0, 0.77778],\n    \"10937\": [0.26167, 0.75726, 0, 0, 0.77778],\n    \"10938\": [0.26167, 0.75726, 0, 0, 0.77778],\n    \"10949\": [0.25583, 0.75583, 0, 0, 0.77778],\n    \"10950\": [0.25583, 0.75583, 0, 0, 0.77778],\n    \"10955\": [0.28481, 0.79383, 0, 0, 0.77778],\n    \"10956\": [0.28481, 0.79383, 0, 0, 0.77778],\n    \"57350\": [0.08167, 0.58167, 0, 0, 0.22222],\n    \"57351\": [0.08167, 0.58167, 0, 0, 0.38889],\n    \"57352\": [0.08167, 0.58167, 0, 0, 0.77778],\n    \"57353\": [0, 0.43056, 0.04028, 0, 0.66667],\n    \"57356\": [0.25142, 0.75726, 0, 0, 0.77778],\n    \"57357\": [0.25142, 0.75726, 0, 0, 0.77778],\n    \"57358\": [0.41951, 0.91951, 0, 0, 0.77778],\n    \"57359\": [0.30274, 0.79383, 0, 0, 0.77778],\n    \"57360\": [0.30274, 0.79383, 0, 0, 0.77778],\n    \"57361\": [0.41951, 0.91951, 0, 0, 0.77778],\n    \"57366\": [0.25142, 0.75726, 0, 0, 0.77778],\n    \"57367\": [0.25142, 0.75726, 0, 0, 0.77778],\n    \"57368\": [0.25142, 0.75726, 0, 0, 0.77778],\n    \"57369\": [0.25142, 0.75726, 0, 0, 0.77778],\n    \"57370\": [0.13597, 0.63597, 0, 0, 0.77778],\n    \"57371\": [0.13597, 0.63597, 0, 0, 0.77778]\n  },\n  \"Caligraphic-Regular\": {\n    \"32\": [0, 0, 0, 0, 0.25],\n    \"65\": [0, 0.68333, 0, 0.19445, 0.79847],\n    \"66\": [0, 0.68333, 0.03041, 0.13889, 0.65681],\n    \"67\": [0, 0.68333, 0.05834, 0.13889, 0.52653],\n    \"68\": [0, 0.68333, 0.02778, 0.08334, 0.77139],\n    \"69\": [0, 0.68333, 0.08944, 0.11111, 0.52778],\n    \"70\": [0, 0.68333, 0.09931, 0.11111, 0.71875],\n    \"71\": [0.09722, 0.68333, 0.0593, 0.11111, 0.59487],\n    \"72\": [0, 0.68333, 0.00965, 0.11111, 0.84452],\n    \"73\": [0, 0.68333, 0.07382, 0, 0.54452],\n    \"74\": [0.09722, 0.68333, 0.18472, 0.16667, 0.67778],\n    \"75\": [0, 0.68333, 0.01445, 0.05556, 0.76195],\n    \"76\": [0, 0.68333, 0, 0.13889, 0.68972],\n    \"77\": [0, 0.68333, 0, 0.13889, 1.2009],\n    \"78\": [0, 0.68333, 0.14736, 0.08334, 0.82049],\n    \"79\": [0, 0.68333, 0.02778, 0.11111, 0.79611],\n    \"80\": [0, 0.68333, 0.08222, 0.08334, 0.69556],\n    \"81\": [0.09722, 0.68333, 0, 0.11111, 0.81667],\n    \"82\": [0, 0.68333, 0, 0.08334, 0.8475],\n    \"83\": [0, 0.68333, 0.075, 0.13889, 0.60556],\n    \"84\": [0, 0.68333, 0.25417, 0, 0.54464],\n    \"85\": [0, 0.68333, 0.09931, 0.08334, 0.62583],\n    \"86\": [0, 0.68333, 0.08222, 0, 0.61278],\n    \"87\": [0, 0.68333, 0.08222, 0.08334, 0.98778],\n    \"88\": [0, 0.68333, 0.14643, 0.13889, 0.7133],\n    \"89\": [0.09722, 0.68333, 0.08222, 0.08334, 0.66834],\n    \"90\": [0, 0.68333, 0.07944, 0.13889, 0.72473],\n    \"160\": [0, 0, 0, 0, 0.25]\n  },\n  \"Fraktur-Regular\": {\n    \"32\": [0, 0, 0, 0, 0.25],\n    \"33\": [0, 0.69141, 0, 0, 0.29574],\n    \"34\": [0, 0.69141, 0, 0, 0.21471],\n    \"38\": [0, 0.69141, 0, 0, 0.73786],\n    \"39\": [0, 0.69141, 0, 0, 0.21201],\n    \"40\": [0.24982, 0.74947, 0, 0, 0.38865],\n    \"41\": [0.24982, 0.74947, 0, 0, 0.38865],\n    \"42\": [0, 0.62119, 0, 0, 0.27764],\n    \"43\": [0.08319, 0.58283, 0, 0, 0.75623],\n    \"44\": [0, 0.10803, 0, 0, 0.27764],\n    \"45\": [0.08319, 0.58283, 0, 0, 0.75623],\n    \"46\": [0, 0.10803, 0, 0, 0.27764],\n    \"47\": [0.24982, 0.74947, 0, 0, 0.50181],\n    \"48\": [0, 0.47534, 0, 0, 0.50181],\n    \"49\": [0, 0.47534, 0, 0, 0.50181],\n    \"50\": [0, 0.47534, 0, 0, 0.50181],\n    \"51\": [0.18906, 0.47534, 0, 0, 0.50181],\n    \"52\": [0.18906, 0.47534, 0, 0, 0.50181],\n    \"53\": [0.18906, 0.47534, 0, 0, 0.50181],\n    \"54\": [0, 0.69141, 0, 0, 0.50181],\n    \"55\": [0.18906, 0.47534, 0, 0, 0.50181],\n    \"56\": [0, 0.69141, 0, 0, 0.50181],\n    \"57\": [0.18906, 0.47534, 0, 0, 0.50181],\n    \"58\": [0, 0.47534, 0, 0, 0.21606],\n    \"59\": [0.12604, 0.47534, 0, 0, 0.21606],\n    \"61\": [-0.13099, 0.36866, 0, 0, 0.75623],\n    \"63\": [0, 0.69141, 0, 0, 0.36245],\n    \"65\": [0, 0.69141, 0, 0, 0.7176],\n    \"66\": [0, 0.69141, 0, 0, 0.88397],\n    \"67\": [0, 0.69141, 0, 0, 0.61254],\n    \"68\": [0, 0.69141, 0, 0, 0.83158],\n    \"69\": [0, 0.69141, 0, 0, 0.66278],\n    \"70\": [0.12604, 0.69141, 0, 0, 0.61119],\n    \"71\": [0, 0.69141, 0, 0, 0.78539],\n    \"72\": [0.06302, 0.69141, 0, 0, 0.7203],\n    \"73\": [0, 0.69141, 0, 0, 0.55448],\n    \"74\": [0.12604, 0.69141, 0, 0, 0.55231],\n    \"75\": [0, 0.69141, 0, 0, 0.66845],\n    \"76\": [0, 0.69141, 0, 0, 0.66602],\n    \"77\": [0, 0.69141, 0, 0, 1.04953],\n    \"78\": [0, 0.69141, 0, 0, 0.83212],\n    \"79\": [0, 0.69141, 0, 0, 0.82699],\n    \"80\": [0.18906, 0.69141, 0, 0, 0.82753],\n    \"81\": [0.03781, 0.69141, 0, 0, 0.82699],\n    \"82\": [0, 0.69141, 0, 0, 0.82807],\n    \"83\": [0, 0.69141, 0, 0, 0.82861],\n    \"84\": [0, 0.69141, 0, 0, 0.66899],\n    \"85\": [0, 0.69141, 0, 0, 0.64576],\n    \"86\": [0, 0.69141, 0, 0, 0.83131],\n    \"87\": [0, 0.69141, 0, 0, 1.04602],\n    \"88\": [0, 0.69141, 0, 0, 0.71922],\n    \"89\": [0.18906, 0.69141, 0, 0, 0.83293],\n    \"90\": [0.12604, 0.69141, 0, 0, 0.60201],\n    \"91\": [0.24982, 0.74947, 0, 0, 0.27764],\n    \"93\": [0.24982, 0.74947, 0, 0, 0.27764],\n    \"94\": [0, 0.69141, 0, 0, 0.49965],\n    \"97\": [0, 0.47534, 0, 0, 0.50046],\n    \"98\": [0, 0.69141, 0, 0, 0.51315],\n    \"99\": [0, 0.47534, 0, 0, 0.38946],\n    \"100\": [0, 0.62119, 0, 0, 0.49857],\n    \"101\": [0, 0.47534, 0, 0, 0.40053],\n    \"102\": [0.18906, 0.69141, 0, 0, 0.32626],\n    \"103\": [0.18906, 0.47534, 0, 0, 0.5037],\n    \"104\": [0.18906, 0.69141, 0, 0, 0.52126],\n    \"105\": [0, 0.69141, 0, 0, 0.27899],\n    \"106\": [0, 0.69141, 0, 0, 0.28088],\n    \"107\": [0, 0.69141, 0, 0, 0.38946],\n    \"108\": [0, 0.69141, 0, 0, 0.27953],\n    \"109\": [0, 0.47534, 0, 0, 0.76676],\n    \"110\": [0, 0.47534, 0, 0, 0.52666],\n    \"111\": [0, 0.47534, 0, 0, 0.48885],\n    \"112\": [0.18906, 0.52396, 0, 0, 0.50046],\n    \"113\": [0.18906, 0.47534, 0, 0, 0.48912],\n    \"114\": [0, 0.47534, 0, 0, 0.38919],\n    \"115\": [0, 0.47534, 0, 0, 0.44266],\n    \"116\": [0, 0.62119, 0, 0, 0.33301],\n    \"117\": [0, 0.47534, 0, 0, 0.5172],\n    \"118\": [0, 0.52396, 0, 0, 0.5118],\n    \"119\": [0, 0.52396, 0, 0, 0.77351],\n    \"120\": [0.18906, 0.47534, 0, 0, 0.38865],\n    \"121\": [0.18906, 0.47534, 0, 0, 0.49884],\n    \"122\": [0.18906, 0.47534, 0, 0, 0.39054],\n    \"160\": [0, 0, 0, 0, 0.25],\n    \"8216\": [0, 0.69141, 0, 0, 0.21471],\n    \"8217\": [0, 0.69141, 0, 0, 0.21471],\n    \"58112\": [0, 0.62119, 0, 0, 0.49749],\n    \"58113\": [0, 0.62119, 0, 0, 0.4983],\n    \"58114\": [0.18906, 0.69141, 0, 0, 0.33328],\n    \"58115\": [0.18906, 0.69141, 0, 0, 0.32923],\n    \"58116\": [0.18906, 0.47534, 0, 0, 0.50343],\n    \"58117\": [0, 0.69141, 0, 0, 0.33301],\n    \"58118\": [0, 0.62119, 0, 0, 0.33409],\n    \"58119\": [0, 0.47534, 0, 0, 0.50073]\n  },\n  \"Main-Bold\": {\n    \"32\": [0, 0, 0, 0, 0.25],\n    \"33\": [0, 0.69444, 0, 0, 0.35],\n    \"34\": [0, 0.69444, 0, 0, 0.60278],\n    \"35\": [0.19444, 0.69444, 0, 0, 0.95833],\n    \"36\": [0.05556, 0.75, 0, 0, 0.575],\n    \"37\": [0.05556, 0.75, 0, 0, 0.95833],\n    \"38\": [0, 0.69444, 0, 0, 0.89444],\n    \"39\": [0, 0.69444, 0, 0, 0.31944],\n    \"40\": [0.25, 0.75, 0, 0, 0.44722],\n    \"41\": [0.25, 0.75, 0, 0, 0.44722],\n    \"42\": [0, 0.75, 0, 0, 0.575],\n    \"43\": [0.13333, 0.63333, 0, 0, 0.89444],\n    \"44\": [0.19444, 0.15556, 0, 0, 0.31944],\n    \"45\": [0, 0.44444, 0, 0, 0.38333],\n    \"46\": [0, 0.15556, 0, 0, 0.31944],\n    \"47\": [0.25, 0.75, 0, 0, 0.575],\n    \"48\": [0, 0.64444, 0, 0, 0.575],\n    \"49\": [0, 0.64444, 0, 0, 0.575],\n    \"50\": [0, 0.64444, 0, 0, 0.575],\n    \"51\": [0, 0.64444, 0, 0, 0.575],\n    \"52\": [0, 0.64444, 0, 0, 0.575],\n    \"53\": [0, 0.64444, 0, 0, 0.575],\n    \"54\": [0, 0.64444, 0, 0, 0.575],\n    \"55\": [0, 0.64444, 0, 0, 0.575],\n    \"56\": [0, 0.64444, 0, 0, 0.575],\n    \"57\": [0, 0.64444, 0, 0, 0.575],\n    \"58\": [0, 0.44444, 0, 0, 0.31944],\n    \"59\": [0.19444, 0.44444, 0, 0, 0.31944],\n    \"60\": [0.08556, 0.58556, 0, 0, 0.89444],\n    \"61\": [-0.10889, 0.39111, 0, 0, 0.89444],\n    \"62\": [0.08556, 0.58556, 0, 0, 0.89444],\n    \"63\": [0, 0.69444, 0, 0, 0.54305],\n    \"64\": [0, 0.69444, 0, 0, 0.89444],\n    \"65\": [0, 0.68611, 0, 0, 0.86944],\n    \"66\": [0, 0.68611, 0, 0, 0.81805],\n    \"67\": [0, 0.68611, 0, 0, 0.83055],\n    \"68\": [0, 0.68611, 0, 0, 0.88194],\n    \"69\": [0, 0.68611, 0, 0, 0.75555],\n    \"70\": [0, 0.68611, 0, 0, 0.72361],\n    \"71\": [0, 0.68611, 0, 0, 0.90416],\n    \"72\": [0, 0.68611, 0, 0, 0.9],\n    \"73\": [0, 0.68611, 0, 0, 0.43611],\n    \"74\": [0, 0.68611, 0, 0, 0.59444],\n    \"75\": [0, 0.68611, 0, 0, 0.90138],\n    \"76\": [0, 0.68611, 0, 0, 0.69166],\n    \"77\": [0, 0.68611, 0, 0, 1.09166],\n    \"78\": [0, 0.68611, 0, 0, 0.9],\n    \"79\": [0, 0.68611, 0, 0, 0.86388],\n    \"80\": [0, 0.68611, 0, 0, 0.78611],\n    \"81\": [0.19444, 0.68611, 0, 0, 0.86388],\n    \"82\": [0, 0.68611, 0, 0, 0.8625],\n    \"83\": [0, 0.68611, 0, 0, 0.63889],\n    \"84\": [0, 0.68611, 0, 0, 0.8],\n    \"85\": [0, 0.68611, 0, 0, 0.88472],\n    \"86\": [0, 0.68611, 0.01597, 0, 0.86944],\n    \"87\": [0, 0.68611, 0.01597, 0, 1.18888],\n    \"88\": [0, 0.68611, 0, 0, 0.86944],\n    \"89\": [0, 0.68611, 0.02875, 0, 0.86944],\n    \"90\": [0, 0.68611, 0, 0, 0.70277],\n    \"91\": [0.25, 0.75, 0, 0, 0.31944],\n    \"92\": [0.25, 0.75, 0, 0, 0.575],\n    \"93\": [0.25, 0.75, 0, 0, 0.31944],\n    \"94\": [0, 0.69444, 0, 0, 0.575],\n    \"95\": [0.31, 0.13444, 0.03194, 0, 0.575],\n    \"97\": [0, 0.44444, 0, 0, 0.55902],\n    \"98\": [0, 0.69444, 0, 0, 0.63889],\n    \"99\": [0, 0.44444, 0, 0, 0.51111],\n    \"100\": [0, 0.69444, 0, 0, 0.63889],\n    \"101\": [0, 0.44444, 0, 0, 0.52708],\n    \"102\": [0, 0.69444, 0.10903, 0, 0.35139],\n    \"103\": [0.19444, 0.44444, 0.01597, 0, 0.575],\n    \"104\": [0, 0.69444, 0, 0, 0.63889],\n    \"105\": [0, 0.69444, 0, 0, 0.31944],\n    \"106\": [0.19444, 0.69444, 0, 0, 0.35139],\n    \"107\": [0, 0.69444, 0, 0, 0.60694],\n    \"108\": [0, 0.69444, 0, 0, 0.31944],\n    \"109\": [0, 0.44444, 0, 0, 0.95833],\n    \"110\": [0, 0.44444, 0, 0, 0.63889],\n    \"111\": [0, 0.44444, 0, 0, 0.575],\n    \"112\": [0.19444, 0.44444, 0, 0, 0.63889],\n    \"113\": [0.19444, 0.44444, 0, 0, 0.60694],\n    \"114\": [0, 0.44444, 0, 0, 0.47361],\n    \"115\": [0, 0.44444, 0, 0, 0.45361],\n    \"116\": [0, 0.63492, 0, 0, 0.44722],\n    \"117\": [0, 0.44444, 0, 0, 0.63889],\n    \"118\": [0, 0.44444, 0.01597, 0, 0.60694],\n    \"119\": [0, 0.44444, 0.01597, 0, 0.83055],\n    \"120\": [0, 0.44444, 0, 0, 0.60694],\n    \"121\": [0.19444, 0.44444, 0.01597, 0, 0.60694],\n    \"122\": [0, 0.44444, 0, 0, 0.51111],\n    \"123\": [0.25, 0.75, 0, 0, 0.575],\n    \"124\": [0.25, 0.75, 0, 0, 0.31944],\n    \"125\": [0.25, 0.75, 0, 0, 0.575],\n    \"126\": [0.35, 0.34444, 0, 0, 0.575],\n    \"160\": [0, 0, 0, 0, 0.25],\n    \"163\": [0, 0.69444, 0, 0, 0.86853],\n    \"168\": [0, 0.69444, 0, 0, 0.575],\n    \"172\": [0, 0.44444, 0, 0, 0.76666],\n    \"176\": [0, 0.69444, 0, 0, 0.86944],\n    \"177\": [0.13333, 0.63333, 0, 0, 0.89444],\n    \"184\": [0.17014, 0, 0, 0, 0.51111],\n    \"198\": [0, 0.68611, 0, 0, 1.04166],\n    \"215\": [0.13333, 0.63333, 0, 0, 0.89444],\n    \"216\": [0.04861, 0.73472, 0, 0, 0.89444],\n    \"223\": [0, 0.69444, 0, 0, 0.59722],\n    \"230\": [0, 0.44444, 0, 0, 0.83055],\n    \"247\": [0.13333, 0.63333, 0, 0, 0.89444],\n    \"248\": [0.09722, 0.54167, 0, 0, 0.575],\n    \"305\": [0, 0.44444, 0, 0, 0.31944],\n    \"338\": [0, 0.68611, 0, 0, 1.16944],\n    \"339\": [0, 0.44444, 0, 0, 0.89444],\n    \"567\": [0.19444, 0.44444, 0, 0, 0.35139],\n    \"710\": [0, 0.69444, 0, 0, 0.575],\n    \"711\": [0, 0.63194, 0, 0, 0.575],\n    \"713\": [0, 0.59611, 0, 0, 0.575],\n    \"714\": [0, 0.69444, 0, 0, 0.575],\n    \"715\": [0, 0.69444, 0, 0, 0.575],\n    \"728\": [0, 0.69444, 0, 0, 0.575],\n    \"729\": [0, 0.69444, 0, 0, 0.31944],\n    \"730\": [0, 0.69444, 0, 0, 0.86944],\n    \"732\": [0, 0.69444, 0, 0, 0.575],\n    \"733\": [0, 0.69444, 0, 0, 0.575],\n    \"915\": [0, 0.68611, 0, 0, 0.69166],\n    \"916\": [0, 0.68611, 0, 0, 0.95833],\n    \"920\": [0, 0.68611, 0, 0, 0.89444],\n    \"923\": [0, 0.68611, 0, 0, 0.80555],\n    \"926\": [0, 0.68611, 0, 0, 0.76666],\n    \"928\": [0, 0.68611, 0, 0, 0.9],\n    \"931\": [0, 0.68611, 0, 0, 0.83055],\n    \"933\": [0, 0.68611, 0, 0, 0.89444],\n    \"934\": [0, 0.68611, 0, 0, 0.83055],\n    \"936\": [0, 0.68611, 0, 0, 0.89444],\n    \"937\": [0, 0.68611, 0, 0, 0.83055],\n    \"8211\": [0, 0.44444, 0.03194, 0, 0.575],\n    \"8212\": [0, 0.44444, 0.03194, 0, 1.14999],\n    \"8216\": [0, 0.69444, 0, 0, 0.31944],\n    \"8217\": [0, 0.69444, 0, 0, 0.31944],\n    \"8220\": [0, 0.69444, 0, 0, 0.60278],\n    \"8221\": [0, 0.69444, 0, 0, 0.60278],\n    \"8224\": [0.19444, 0.69444, 0, 0, 0.51111],\n    \"8225\": [0.19444, 0.69444, 0, 0, 0.51111],\n    \"8242\": [0, 0.55556, 0, 0, 0.34444],\n    \"8407\": [0, 0.72444, 0.15486, 0, 0.575],\n    \"8463\": [0, 0.69444, 0, 0, 0.66759],\n    \"8465\": [0, 0.69444, 0, 0, 0.83055],\n    \"8467\": [0, 0.69444, 0, 0, 0.47361],\n    \"8472\": [0.19444, 0.44444, 0, 0, 0.74027],\n    \"8476\": [0, 0.69444, 0, 0, 0.83055],\n    \"8501\": [0, 0.69444, 0, 0, 0.70277],\n    \"8592\": [-0.10889, 0.39111, 0, 0, 1.14999],\n    \"8593\": [0.19444, 0.69444, 0, 0, 0.575],\n    \"8594\": [-0.10889, 0.39111, 0, 0, 1.14999],\n    \"8595\": [0.19444, 0.69444, 0, 0, 0.575],\n    \"8596\": [-0.10889, 0.39111, 0, 0, 1.14999],\n    \"8597\": [0.25, 0.75, 0, 0, 0.575],\n    \"8598\": [0.19444, 0.69444, 0, 0, 1.14999],\n    \"8599\": [0.19444, 0.69444, 0, 0, 1.14999],\n    \"8600\": [0.19444, 0.69444, 0, 0, 1.14999],\n    \"8601\": [0.19444, 0.69444, 0, 0, 1.14999],\n    \"8636\": [-0.10889, 0.39111, 0, 0, 1.14999],\n    \"8637\": [-0.10889, 0.39111, 0, 0, 1.14999],\n    \"8640\": [-0.10889, 0.39111, 0, 0, 1.14999],\n    \"8641\": [-0.10889, 0.39111, 0, 0, 1.14999],\n    \"8656\": [-0.10889, 0.39111, 0, 0, 1.14999],\n    \"8657\": [0.19444, 0.69444, 0, 0, 0.70277],\n    \"8658\": [-0.10889, 0.39111, 0, 0, 1.14999],\n    \"8659\": [0.19444, 0.69444, 0, 0, 0.70277],\n    \"8660\": [-0.10889, 0.39111, 0, 0, 1.14999],\n    \"8661\": [0.25, 0.75, 0, 0, 0.70277],\n    \"8704\": [0, 0.69444, 0, 0, 0.63889],\n    \"8706\": [0, 0.69444, 0.06389, 0, 0.62847],\n    \"8707\": [0, 0.69444, 0, 0, 0.63889],\n    \"8709\": [0.05556, 0.75, 0, 0, 0.575],\n    \"8711\": [0, 0.68611, 0, 0, 0.95833],\n    \"8712\": [0.08556, 0.58556, 0, 0, 0.76666],\n    \"8715\": [0.08556, 0.58556, 0, 0, 0.76666],\n    \"8722\": [0.13333, 0.63333, 0, 0, 0.89444],\n    \"8723\": [0.13333, 0.63333, 0, 0, 0.89444],\n    \"8725\": [0.25, 0.75, 0, 0, 0.575],\n    \"8726\": [0.25, 0.75, 0, 0, 0.575],\n    \"8727\": [-0.02778, 0.47222, 0, 0, 0.575],\n    \"8728\": [-0.02639, 0.47361, 0, 0, 0.575],\n    \"8729\": [-0.02639, 0.47361, 0, 0, 0.575],\n    \"8730\": [0.18, 0.82, 0, 0, 0.95833],\n    \"8733\": [0, 0.44444, 0, 0, 0.89444],\n    \"8734\": [0, 0.44444, 0, 0, 1.14999],\n    \"8736\": [0, 0.69224, 0, 0, 0.72222],\n    \"8739\": [0.25, 0.75, 0, 0, 0.31944],\n    \"8741\": [0.25, 0.75, 0, 0, 0.575],\n    \"8743\": [0, 0.55556, 0, 0, 0.76666],\n    \"8744\": [0, 0.55556, 0, 0, 0.76666],\n    \"8745\": [0, 0.55556, 0, 0, 0.76666],\n    \"8746\": [0, 0.55556, 0, 0, 0.76666],\n    \"8747\": [0.19444, 0.69444, 0.12778, 0, 0.56875],\n    \"8764\": [-0.10889, 0.39111, 0, 0, 0.89444],\n    \"8768\": [0.19444, 0.69444, 0, 0, 0.31944],\n    \"8771\": [0.00222, 0.50222, 0, 0, 0.89444],\n    \"8773\": [0.027, 0.638, 0, 0, 0.894],\n    \"8776\": [0.02444, 0.52444, 0, 0, 0.89444],\n    \"8781\": [0.00222, 0.50222, 0, 0, 0.89444],\n    \"8801\": [0.00222, 0.50222, 0, 0, 0.89444],\n    \"8804\": [0.19667, 0.69667, 0, 0, 0.89444],\n    \"8805\": [0.19667, 0.69667, 0, 0, 0.89444],\n    \"8810\": [0.08556, 0.58556, 0, 0, 1.14999],\n    \"8811\": [0.08556, 0.58556, 0, 0, 1.14999],\n    \"8826\": [0.08556, 0.58556, 0, 0, 0.89444],\n    \"8827\": [0.08556, 0.58556, 0, 0, 0.89444],\n    \"8834\": [0.08556, 0.58556, 0, 0, 0.89444],\n    \"8835\": [0.08556, 0.58556, 0, 0, 0.89444],\n    \"8838\": [0.19667, 0.69667, 0, 0, 0.89444],\n    \"8839\": [0.19667, 0.69667, 0, 0, 0.89444],\n    \"8846\": [0, 0.55556, 0, 0, 0.76666],\n    \"8849\": [0.19667, 0.69667, 0, 0, 0.89444],\n    \"8850\": [0.19667, 0.69667, 0, 0, 0.89444],\n    \"8851\": [0, 0.55556, 0, 0, 0.76666],\n    \"8852\": [0, 0.55556, 0, 0, 0.76666],\n    \"8853\": [0.13333, 0.63333, 0, 0, 0.89444],\n    \"8854\": [0.13333, 0.63333, 0, 0, 0.89444],\n    \"8855\": [0.13333, 0.63333, 0, 0, 0.89444],\n    \"8856\": [0.13333, 0.63333, 0, 0, 0.89444],\n    \"8857\": [0.13333, 0.63333, 0, 0, 0.89444],\n    \"8866\": [0, 0.69444, 0, 0, 0.70277],\n    \"8867\": [0, 0.69444, 0, 0, 0.70277],\n    \"8868\": [0, 0.69444, 0, 0, 0.89444],\n    \"8869\": [0, 0.69444, 0, 0, 0.89444],\n    \"8900\": [-0.02639, 0.47361, 0, 0, 0.575],\n    \"8901\": [-0.02639, 0.47361, 0, 0, 0.31944],\n    \"8902\": [-0.02778, 0.47222, 0, 0, 0.575],\n    \"8968\": [0.25, 0.75, 0, 0, 0.51111],\n    \"8969\": [0.25, 0.75, 0, 0, 0.51111],\n    \"8970\": [0.25, 0.75, 0, 0, 0.51111],\n    \"8971\": [0.25, 0.75, 0, 0, 0.51111],\n    \"8994\": [-0.13889, 0.36111, 0, 0, 1.14999],\n    \"8995\": [-0.13889, 0.36111, 0, 0, 1.14999],\n    \"9651\": [0.19444, 0.69444, 0, 0, 1.02222],\n    \"9657\": [-0.02778, 0.47222, 0, 0, 0.575],\n    \"9661\": [0.19444, 0.69444, 0, 0, 1.02222],\n    \"9667\": [-0.02778, 0.47222, 0, 0, 0.575],\n    \"9711\": [0.19444, 0.69444, 0, 0, 1.14999],\n    \"9824\": [0.12963, 0.69444, 0, 0, 0.89444],\n    \"9825\": [0.12963, 0.69444, 0, 0, 0.89444],\n    \"9826\": [0.12963, 0.69444, 0, 0, 0.89444],\n    \"9827\": [0.12963, 0.69444, 0, 0, 0.89444],\n    \"9837\": [0, 0.75, 0, 0, 0.44722],\n    \"9838\": [0.19444, 0.69444, 0, 0, 0.44722],\n    \"9839\": [0.19444, 0.69444, 0, 0, 0.44722],\n    \"10216\": [0.25, 0.75, 0, 0, 0.44722],\n    \"10217\": [0.25, 0.75, 0, 0, 0.44722],\n    \"10815\": [0, 0.68611, 0, 0, 0.9],\n    \"10927\": [0.19667, 0.69667, 0, 0, 0.89444],\n    \"10928\": [0.19667, 0.69667, 0, 0, 0.89444],\n    \"57376\": [0.19444, 0.69444, 0, 0, 0]\n  },\n  \"Main-BoldItalic\": {\n    \"32\": [0, 0, 0, 0, 0.25],\n    \"33\": [0, 0.69444, 0.11417, 0, 0.38611],\n    \"34\": [0, 0.69444, 0.07939, 0, 0.62055],\n    \"35\": [0.19444, 0.69444, 0.06833, 0, 0.94444],\n    \"37\": [0.05556, 0.75, 0.12861, 0, 0.94444],\n    \"38\": [0, 0.69444, 0.08528, 0, 0.88555],\n    \"39\": [0, 0.69444, 0.12945, 0, 0.35555],\n    \"40\": [0.25, 0.75, 0.15806, 0, 0.47333],\n    \"41\": [0.25, 0.75, 0.03306, 0, 0.47333],\n    \"42\": [0, 0.75, 0.14333, 0, 0.59111],\n    \"43\": [0.10333, 0.60333, 0.03306, 0, 0.88555],\n    \"44\": [0.19444, 0.14722, 0, 0, 0.35555],\n    \"45\": [0, 0.44444, 0.02611, 0, 0.41444],\n    \"46\": [0, 0.14722, 0, 0, 0.35555],\n    \"47\": [0.25, 0.75, 0.15806, 0, 0.59111],\n    \"48\": [0, 0.64444, 0.13167, 0, 0.59111],\n    \"49\": [0, 0.64444, 0.13167, 0, 0.59111],\n    \"50\": [0, 0.64444, 0.13167, 0, 0.59111],\n    \"51\": [0, 0.64444, 0.13167, 0, 0.59111],\n    \"52\": [0.19444, 0.64444, 0.13167, 0, 0.59111],\n    \"53\": [0, 0.64444, 0.13167, 0, 0.59111],\n    \"54\": [0, 0.64444, 0.13167, 0, 0.59111],\n    \"55\": [0.19444, 0.64444, 0.13167, 0, 0.59111],\n    \"56\": [0, 0.64444, 0.13167, 0, 0.59111],\n    \"57\": [0, 0.64444, 0.13167, 0, 0.59111],\n    \"58\": [0, 0.44444, 0.06695, 0, 0.35555],\n    \"59\": [0.19444, 0.44444, 0.06695, 0, 0.35555],\n    \"61\": [-0.10889, 0.39111, 0.06833, 0, 0.88555],\n    \"63\": [0, 0.69444, 0.11472, 0, 0.59111],\n    \"64\": [0, 0.69444, 0.09208, 0, 0.88555],\n    \"65\": [0, 0.68611, 0, 0, 0.86555],\n    \"66\": [0, 0.68611, 0.0992, 0, 0.81666],\n    \"67\": [0, 0.68611, 0.14208, 0, 0.82666],\n    \"68\": [0, 0.68611, 0.09062, 0, 0.87555],\n    \"69\": [0, 0.68611, 0.11431, 0, 0.75666],\n    \"70\": [0, 0.68611, 0.12903, 0, 0.72722],\n    \"71\": [0, 0.68611, 0.07347, 0, 0.89527],\n    \"72\": [0, 0.68611, 0.17208, 0, 0.8961],\n    \"73\": [0, 0.68611, 0.15681, 0, 0.47166],\n    \"74\": [0, 0.68611, 0.145, 0, 0.61055],\n    \"75\": [0, 0.68611, 0.14208, 0, 0.89499],\n    \"76\": [0, 0.68611, 0, 0, 0.69777],\n    \"77\": [0, 0.68611, 0.17208, 0, 1.07277],\n    \"78\": [0, 0.68611, 0.17208, 0, 0.8961],\n    \"79\": [0, 0.68611, 0.09062, 0, 0.85499],\n    \"80\": [0, 0.68611, 0.0992, 0, 0.78721],\n    \"81\": [0.19444, 0.68611, 0.09062, 0, 0.85499],\n    \"82\": [0, 0.68611, 0.02559, 0, 0.85944],\n    \"83\": [0, 0.68611, 0.11264, 0, 0.64999],\n    \"84\": [0, 0.68611, 0.12903, 0, 0.7961],\n    \"85\": [0, 0.68611, 0.17208, 0, 0.88083],\n    \"86\": [0, 0.68611, 0.18625, 0, 0.86555],\n    \"87\": [0, 0.68611, 0.18625, 0, 1.15999],\n    \"88\": [0, 0.68611, 0.15681, 0, 0.86555],\n    \"89\": [0, 0.68611, 0.19803, 0, 0.86555],\n    \"90\": [0, 0.68611, 0.14208, 0, 0.70888],\n    \"91\": [0.25, 0.75, 0.1875, 0, 0.35611],\n    \"93\": [0.25, 0.75, 0.09972, 0, 0.35611],\n    \"94\": [0, 0.69444, 0.06709, 0, 0.59111],\n    \"95\": [0.31, 0.13444, 0.09811, 0, 0.59111],\n    \"97\": [0, 0.44444, 0.09426, 0, 0.59111],\n    \"98\": [0, 0.69444, 0.07861, 0, 0.53222],\n    \"99\": [0, 0.44444, 0.05222, 0, 0.53222],\n    \"100\": [0, 0.69444, 0.10861, 0, 0.59111],\n    \"101\": [0, 0.44444, 0.085, 0, 0.53222],\n    \"102\": [0.19444, 0.69444, 0.21778, 0, 0.4],\n    \"103\": [0.19444, 0.44444, 0.105, 0, 0.53222],\n    \"104\": [0, 0.69444, 0.09426, 0, 0.59111],\n    \"105\": [0, 0.69326, 0.11387, 0, 0.35555],\n    \"106\": [0.19444, 0.69326, 0.1672, 0, 0.35555],\n    \"107\": [0, 0.69444, 0.11111, 0, 0.53222],\n    \"108\": [0, 0.69444, 0.10861, 0, 0.29666],\n    \"109\": [0, 0.44444, 0.09426, 0, 0.94444],\n    \"110\": [0, 0.44444, 0.09426, 0, 0.64999],\n    \"111\": [0, 0.44444, 0.07861, 0, 0.59111],\n    \"112\": [0.19444, 0.44444, 0.07861, 0, 0.59111],\n    \"113\": [0.19444, 0.44444, 0.105, 0, 0.53222],\n    \"114\": [0, 0.44444, 0.11111, 0, 0.50167],\n    \"115\": [0, 0.44444, 0.08167, 0, 0.48694],\n    \"116\": [0, 0.63492, 0.09639, 0, 0.385],\n    \"117\": [0, 0.44444, 0.09426, 0, 0.62055],\n    \"118\": [0, 0.44444, 0.11111, 0, 0.53222],\n    \"119\": [0, 0.44444, 0.11111, 0, 0.76777],\n    \"120\": [0, 0.44444, 0.12583, 0, 0.56055],\n    \"121\": [0.19444, 0.44444, 0.105, 0, 0.56166],\n    \"122\": [0, 0.44444, 0.13889, 0, 0.49055],\n    \"126\": [0.35, 0.34444, 0.11472, 0, 0.59111],\n    \"160\": [0, 0, 0, 0, 0.25],\n    \"168\": [0, 0.69444, 0.11473, 0, 0.59111],\n    \"176\": [0, 0.69444, 0, 0, 0.94888],\n    \"184\": [0.17014, 0, 0, 0, 0.53222],\n    \"198\": [0, 0.68611, 0.11431, 0, 1.02277],\n    \"216\": [0.04861, 0.73472, 0.09062, 0, 0.88555],\n    \"223\": [0.19444, 0.69444, 0.09736, 0, 0.665],\n    \"230\": [0, 0.44444, 0.085, 0, 0.82666],\n    \"248\": [0.09722, 0.54167, 0.09458, 0, 0.59111],\n    \"305\": [0, 0.44444, 0.09426, 0, 0.35555],\n    \"338\": [0, 0.68611, 0.11431, 0, 1.14054],\n    \"339\": [0, 0.44444, 0.085, 0, 0.82666],\n    \"567\": [0.19444, 0.44444, 0.04611, 0, 0.385],\n    \"710\": [0, 0.69444, 0.06709, 0, 0.59111],\n    \"711\": [0, 0.63194, 0.08271, 0, 0.59111],\n    \"713\": [0, 0.59444, 0.10444, 0, 0.59111],\n    \"714\": [0, 0.69444, 0.08528, 0, 0.59111],\n    \"715\": [0, 0.69444, 0, 0, 0.59111],\n    \"728\": [0, 0.69444, 0.10333, 0, 0.59111],\n    \"729\": [0, 0.69444, 0.12945, 0, 0.35555],\n    \"730\": [0, 0.69444, 0, 0, 0.94888],\n    \"732\": [0, 0.69444, 0.11472, 0, 0.59111],\n    \"733\": [0, 0.69444, 0.11472, 0, 0.59111],\n    \"915\": [0, 0.68611, 0.12903, 0, 0.69777],\n    \"916\": [0, 0.68611, 0, 0, 0.94444],\n    \"920\": [0, 0.68611, 0.09062, 0, 0.88555],\n    \"923\": [0, 0.68611, 0, 0, 0.80666],\n    \"926\": [0, 0.68611, 0.15092, 0, 0.76777],\n    \"928\": [0, 0.68611, 0.17208, 0, 0.8961],\n    \"931\": [0, 0.68611, 0.11431, 0, 0.82666],\n    \"933\": [0, 0.68611, 0.10778, 0, 0.88555],\n    \"934\": [0, 0.68611, 0.05632, 0, 0.82666],\n    \"936\": [0, 0.68611, 0.10778, 0, 0.88555],\n    \"937\": [0, 0.68611, 0.0992, 0, 0.82666],\n    \"8211\": [0, 0.44444, 0.09811, 0, 0.59111],\n    \"8212\": [0, 0.44444, 0.09811, 0, 1.18221],\n    \"8216\": [0, 0.69444, 0.12945, 0, 0.35555],\n    \"8217\": [0, 0.69444, 0.12945, 0, 0.35555],\n    \"8220\": [0, 0.69444, 0.16772, 0, 0.62055],\n    \"8221\": [0, 0.69444, 0.07939, 0, 0.62055]\n  },\n  \"Main-Italic\": {\n    \"32\": [0, 0, 0, 0, 0.25],\n    \"33\": [0, 0.69444, 0.12417, 0, 0.30667],\n    \"34\": [0, 0.69444, 0.06961, 0, 0.51444],\n    \"35\": [0.19444, 0.69444, 0.06616, 0, 0.81777],\n    \"37\": [0.05556, 0.75, 0.13639, 0, 0.81777],\n    \"38\": [0, 0.69444, 0.09694, 0, 0.76666],\n    \"39\": [0, 0.69444, 0.12417, 0, 0.30667],\n    \"40\": [0.25, 0.75, 0.16194, 0, 0.40889],\n    \"41\": [0.25, 0.75, 0.03694, 0, 0.40889],\n    \"42\": [0, 0.75, 0.14917, 0, 0.51111],\n    \"43\": [0.05667, 0.56167, 0.03694, 0, 0.76666],\n    \"44\": [0.19444, 0.10556, 0, 0, 0.30667],\n    \"45\": [0, 0.43056, 0.02826, 0, 0.35778],\n    \"46\": [0, 0.10556, 0, 0, 0.30667],\n    \"47\": [0.25, 0.75, 0.16194, 0, 0.51111],\n    \"48\": [0, 0.64444, 0.13556, 0, 0.51111],\n    \"49\": [0, 0.64444, 0.13556, 0, 0.51111],\n    \"50\": [0, 0.64444, 0.13556, 0, 0.51111],\n    \"51\": [0, 0.64444, 0.13556, 0, 0.51111],\n    \"52\": [0.19444, 0.64444, 0.13556, 0, 0.51111],\n    \"53\": [0, 0.64444, 0.13556, 0, 0.51111],\n    \"54\": [0, 0.64444, 0.13556, 0, 0.51111],\n    \"55\": [0.19444, 0.64444, 0.13556, 0, 0.51111],\n    \"56\": [0, 0.64444, 0.13556, 0, 0.51111],\n    \"57\": [0, 0.64444, 0.13556, 0, 0.51111],\n    \"58\": [0, 0.43056, 0.0582, 0, 0.30667],\n    \"59\": [0.19444, 0.43056, 0.0582, 0, 0.30667],\n    \"61\": [-0.13313, 0.36687, 0.06616, 0, 0.76666],\n    \"63\": [0, 0.69444, 0.1225, 0, 0.51111],\n    \"64\": [0, 0.69444, 0.09597, 0, 0.76666],\n    \"65\": [0, 0.68333, 0, 0, 0.74333],\n    \"66\": [0, 0.68333, 0.10257, 0, 0.70389],\n    \"67\": [0, 0.68333, 0.14528, 0, 0.71555],\n    \"68\": [0, 0.68333, 0.09403, 0, 0.755],\n    \"69\": [0, 0.68333, 0.12028, 0, 0.67833],\n    \"70\": [0, 0.68333, 0.13305, 0, 0.65277],\n    \"71\": [0, 0.68333, 0.08722, 0, 0.77361],\n    \"72\": [0, 0.68333, 0.16389, 0, 0.74333],\n    \"73\": [0, 0.68333, 0.15806, 0, 0.38555],\n    \"74\": [0, 0.68333, 0.14028, 0, 0.525],\n    \"75\": [0, 0.68333, 0.14528, 0, 0.76888],\n    \"76\": [0, 0.68333, 0, 0, 0.62722],\n    \"77\": [0, 0.68333, 0.16389, 0, 0.89666],\n    \"78\": [0, 0.68333, 0.16389, 0, 0.74333],\n    \"79\": [0, 0.68333, 0.09403, 0, 0.76666],\n    \"80\": [0, 0.68333, 0.10257, 0, 0.67833],\n    \"81\": [0.19444, 0.68333, 0.09403, 0, 0.76666],\n    \"82\": [0, 0.68333, 0.03868, 0, 0.72944],\n    \"83\": [0, 0.68333, 0.11972, 0, 0.56222],\n    \"84\": [0, 0.68333, 0.13305, 0, 0.71555],\n    \"85\": [0, 0.68333, 0.16389, 0, 0.74333],\n    \"86\": [0, 0.68333, 0.18361, 0, 0.74333],\n    \"87\": [0, 0.68333, 0.18361, 0, 0.99888],\n    \"88\": [0, 0.68333, 0.15806, 0, 0.74333],\n    \"89\": [0, 0.68333, 0.19383, 0, 0.74333],\n    \"90\": [0, 0.68333, 0.14528, 0, 0.61333],\n    \"91\": [0.25, 0.75, 0.1875, 0, 0.30667],\n    \"93\": [0.25, 0.75, 0.10528, 0, 0.30667],\n    \"94\": [0, 0.69444, 0.06646, 0, 0.51111],\n    \"95\": [0.31, 0.12056, 0.09208, 0, 0.51111],\n    \"97\": [0, 0.43056, 0.07671, 0, 0.51111],\n    \"98\": [0, 0.69444, 0.06312, 0, 0.46],\n    \"99\": [0, 0.43056, 0.05653, 0, 0.46],\n    \"100\": [0, 0.69444, 0.10333, 0, 0.51111],\n    \"101\": [0, 0.43056, 0.07514, 0, 0.46],\n    \"102\": [0.19444, 0.69444, 0.21194, 0, 0.30667],\n    \"103\": [0.19444, 0.43056, 0.08847, 0, 0.46],\n    \"104\": [0, 0.69444, 0.07671, 0, 0.51111],\n    \"105\": [0, 0.65536, 0.1019, 0, 0.30667],\n    \"106\": [0.19444, 0.65536, 0.14467, 0, 0.30667],\n    \"107\": [0, 0.69444, 0.10764, 0, 0.46],\n    \"108\": [0, 0.69444, 0.10333, 0, 0.25555],\n    \"109\": [0, 0.43056, 0.07671, 0, 0.81777],\n    \"110\": [0, 0.43056, 0.07671, 0, 0.56222],\n    \"111\": [0, 0.43056, 0.06312, 0, 0.51111],\n    \"112\": [0.19444, 0.43056, 0.06312, 0, 0.51111],\n    \"113\": [0.19444, 0.43056, 0.08847, 0, 0.46],\n    \"114\": [0, 0.43056, 0.10764, 0, 0.42166],\n    \"115\": [0, 0.43056, 0.08208, 0, 0.40889],\n    \"116\": [0, 0.61508, 0.09486, 0, 0.33222],\n    \"117\": [0, 0.43056, 0.07671, 0, 0.53666],\n    \"118\": [0, 0.43056, 0.10764, 0, 0.46],\n    \"119\": [0, 0.43056, 0.10764, 0, 0.66444],\n    \"120\": [0, 0.43056, 0.12042, 0, 0.46389],\n    \"121\": [0.19444, 0.43056, 0.08847, 0, 0.48555],\n    \"122\": [0, 0.43056, 0.12292, 0, 0.40889],\n    \"126\": [0.35, 0.31786, 0.11585, 0, 0.51111],\n    \"160\": [0, 0, 0, 0, 0.25],\n    \"168\": [0, 0.66786, 0.10474, 0, 0.51111],\n    \"176\": [0, 0.69444, 0, 0, 0.83129],\n    \"184\": [0.17014, 0, 0, 0, 0.46],\n    \"198\": [0, 0.68333, 0.12028, 0, 0.88277],\n    \"216\": [0.04861, 0.73194, 0.09403, 0, 0.76666],\n    \"223\": [0.19444, 0.69444, 0.10514, 0, 0.53666],\n    \"230\": [0, 0.43056, 0.07514, 0, 0.71555],\n    \"248\": [0.09722, 0.52778, 0.09194, 0, 0.51111],\n    \"338\": [0, 0.68333, 0.12028, 0, 0.98499],\n    \"339\": [0, 0.43056, 0.07514, 0, 0.71555],\n    \"710\": [0, 0.69444, 0.06646, 0, 0.51111],\n    \"711\": [0, 0.62847, 0.08295, 0, 0.51111],\n    \"713\": [0, 0.56167, 0.10333, 0, 0.51111],\n    \"714\": [0, 0.69444, 0.09694, 0, 0.51111],\n    \"715\": [0, 0.69444, 0, 0, 0.51111],\n    \"728\": [0, 0.69444, 0.10806, 0, 0.51111],\n    \"729\": [0, 0.66786, 0.11752, 0, 0.30667],\n    \"730\": [0, 0.69444, 0, 0, 0.83129],\n    \"732\": [0, 0.66786, 0.11585, 0, 0.51111],\n    \"733\": [0, 0.69444, 0.1225, 0, 0.51111],\n    \"915\": [0, 0.68333, 0.13305, 0, 0.62722],\n    \"916\": [0, 0.68333, 0, 0, 0.81777],\n    \"920\": [0, 0.68333, 0.09403, 0, 0.76666],\n    \"923\": [0, 0.68333, 0, 0, 0.69222],\n    \"926\": [0, 0.68333, 0.15294, 0, 0.66444],\n    \"928\": [0, 0.68333, 0.16389, 0, 0.74333],\n    \"931\": [0, 0.68333, 0.12028, 0, 0.71555],\n    \"933\": [0, 0.68333, 0.11111, 0, 0.76666],\n    \"934\": [0, 0.68333, 0.05986, 0, 0.71555],\n    \"936\": [0, 0.68333, 0.11111, 0, 0.76666],\n    \"937\": [0, 0.68333, 0.10257, 0, 0.71555],\n    \"8211\": [0, 0.43056, 0.09208, 0, 0.51111],\n    \"8212\": [0, 0.43056, 0.09208, 0, 1.02222],\n    \"8216\": [0, 0.69444, 0.12417, 0, 0.30667],\n    \"8217\": [0, 0.69444, 0.12417, 0, 0.30667],\n    \"8220\": [0, 0.69444, 0.1685, 0, 0.51444],\n    \"8221\": [0, 0.69444, 0.06961, 0, 0.51444],\n    \"8463\": [0, 0.68889, 0, 0, 0.54028]\n  },\n  \"Main-Regular\": {\n    \"32\": [0, 0, 0, 0, 0.25],\n    \"33\": [0, 0.69444, 0, 0, 0.27778],\n    \"34\": [0, 0.69444, 0, 0, 0.5],\n    \"35\": [0.19444, 0.69444, 0, 0, 0.83334],\n    \"36\": [0.05556, 0.75, 0, 0, 0.5],\n    \"37\": [0.05556, 0.75, 0, 0, 0.83334],\n    \"38\": [0, 0.69444, 0, 0, 0.77778],\n    \"39\": [0, 0.69444, 0, 0, 0.27778],\n    \"40\": [0.25, 0.75, 0, 0, 0.38889],\n    \"41\": [0.25, 0.75, 0, 0, 0.38889],\n    \"42\": [0, 0.75, 0, 0, 0.5],\n    \"43\": [0.08333, 0.58333, 0, 0, 0.77778],\n    \"44\": [0.19444, 0.10556, 0, 0, 0.27778],\n    \"45\": [0, 0.43056, 0, 0, 0.33333],\n    \"46\": [0, 0.10556, 0, 0, 0.27778],\n    \"47\": [0.25, 0.75, 0, 0, 0.5],\n    \"48\": [0, 0.64444, 0, 0, 0.5],\n    \"49\": [0, 0.64444, 0, 0, 0.5],\n    \"50\": [0, 0.64444, 0, 0, 0.5],\n    \"51\": [0, 0.64444, 0, 0, 0.5],\n    \"52\": [0, 0.64444, 0, 0, 0.5],\n    \"53\": [0, 0.64444, 0, 0, 0.5],\n    \"54\": [0, 0.64444, 0, 0, 0.5],\n    \"55\": [0, 0.64444, 0, 0, 0.5],\n    \"56\": [0, 0.64444, 0, 0, 0.5],\n    \"57\": [0, 0.64444, 0, 0, 0.5],\n    \"58\": [0, 0.43056, 0, 0, 0.27778],\n    \"59\": [0.19444, 0.43056, 0, 0, 0.27778],\n    \"60\": [0.0391, 0.5391, 0, 0, 0.77778],\n    \"61\": [-0.13313, 0.36687, 0, 0, 0.77778],\n    \"62\": [0.0391, 0.5391, 0, 0, 0.77778],\n    \"63\": [0, 0.69444, 0, 0, 0.47222],\n    \"64\": [0, 0.69444, 0, 0, 0.77778],\n    \"65\": [0, 0.68333, 0, 0, 0.75],\n    \"66\": [0, 0.68333, 0, 0, 0.70834],\n    \"67\": [0, 0.68333, 0, 0, 0.72222],\n    \"68\": [0, 0.68333, 0, 0, 0.76389],\n    \"69\": [0, 0.68333, 0, 0, 0.68056],\n    \"70\": [0, 0.68333, 0, 0, 0.65278],\n    \"71\": [0, 0.68333, 0, 0, 0.78472],\n    \"72\": [0, 0.68333, 0, 0, 0.75],\n    \"73\": [0, 0.68333, 0, 0, 0.36111],\n    \"74\": [0, 0.68333, 0, 0, 0.51389],\n    \"75\": [0, 0.68333, 0, 0, 0.77778],\n    \"76\": [0, 0.68333, 0, 0, 0.625],\n    \"77\": [0, 0.68333, 0, 0, 0.91667],\n    \"78\": [0, 0.68333, 0, 0, 0.75],\n    \"79\": [0, 0.68333, 0, 0, 0.77778],\n    \"80\": [0, 0.68333, 0, 0, 0.68056],\n    \"81\": [0.19444, 0.68333, 0, 0, 0.77778],\n    \"82\": [0, 0.68333, 0, 0, 0.73611],\n    \"83\": [0, 0.68333, 0, 0, 0.55556],\n    \"84\": [0, 0.68333, 0, 0, 0.72222],\n    \"85\": [0, 0.68333, 0, 0, 0.75],\n    \"86\": [0, 0.68333, 0.01389, 0, 0.75],\n    \"87\": [0, 0.68333, 0.01389, 0, 1.02778],\n    \"88\": [0, 0.68333, 0, 0, 0.75],\n    \"89\": [0, 0.68333, 0.025, 0, 0.75],\n    \"90\": [0, 0.68333, 0, 0, 0.61111],\n    \"91\": [0.25, 0.75, 0, 0, 0.27778],\n    \"92\": [0.25, 0.75, 0, 0, 0.5],\n    \"93\": [0.25, 0.75, 0, 0, 0.27778],\n    \"94\": [0, 0.69444, 0, 0, 0.5],\n    \"95\": [0.31, 0.12056, 0.02778, 0, 0.5],\n    \"97\": [0, 0.43056, 0, 0, 0.5],\n    \"98\": [0, 0.69444, 0, 0, 0.55556],\n    \"99\": [0, 0.43056, 0, 0, 0.44445],\n    \"100\": [0, 0.69444, 0, 0, 0.55556],\n    \"101\": [0, 0.43056, 0, 0, 0.44445],\n    \"102\": [0, 0.69444, 0.07778, 0, 0.30556],\n    \"103\": [0.19444, 0.43056, 0.01389, 0, 0.5],\n    \"104\": [0, 0.69444, 0, 0, 0.55556],\n    \"105\": [0, 0.66786, 0, 0, 0.27778],\n    \"106\": [0.19444, 0.66786, 0, 0, 0.30556],\n    \"107\": [0, 0.69444, 0, 0, 0.52778],\n    \"108\": [0, 0.69444, 0, 0, 0.27778],\n    \"109\": [0, 0.43056, 0, 0, 0.83334],\n    \"110\": [0, 0.43056, 0, 0, 0.55556],\n    \"111\": [0, 0.43056, 0, 0, 0.5],\n    \"112\": [0.19444, 0.43056, 0, 0, 0.55556],\n    \"113\": [0.19444, 0.43056, 0, 0, 0.52778],\n    \"114\": [0, 0.43056, 0, 0, 0.39167],\n    \"115\": [0, 0.43056, 0, 0, 0.39445],\n    \"116\": [0, 0.61508, 0, 0, 0.38889],\n    \"117\": [0, 0.43056, 0, 0, 0.55556],\n    \"118\": [0, 0.43056, 0.01389, 0, 0.52778],\n    \"119\": [0, 0.43056, 0.01389, 0, 0.72222],\n    \"120\": [0, 0.43056, 0, 0, 0.52778],\n    \"121\": [0.19444, 0.43056, 0.01389, 0, 0.52778],\n    \"122\": [0, 0.43056, 0, 0, 0.44445],\n    \"123\": [0.25, 0.75, 0, 0, 0.5],\n    \"124\": [0.25, 0.75, 0, 0, 0.27778],\n    \"125\": [0.25, 0.75, 0, 0, 0.5],\n    \"126\": [0.35, 0.31786, 0, 0, 0.5],\n    \"160\": [0, 0, 0, 0, 0.25],\n    \"163\": [0, 0.69444, 0, 0, 0.76909],\n    \"167\": [0.19444, 0.69444, 0, 0, 0.44445],\n    \"168\": [0, 0.66786, 0, 0, 0.5],\n    \"172\": [0, 0.43056, 0, 0, 0.66667],\n    \"176\": [0, 0.69444, 0, 0, 0.75],\n    \"177\": [0.08333, 0.58333, 0, 0, 0.77778],\n    \"182\": [0.19444, 0.69444, 0, 0, 0.61111],\n    \"184\": [0.17014, 0, 0, 0, 0.44445],\n    \"198\": [0, 0.68333, 0, 0, 0.90278],\n    \"215\": [0.08333, 0.58333, 0, 0, 0.77778],\n    \"216\": [0.04861, 0.73194, 0, 0, 0.77778],\n    \"223\": [0, 0.69444, 0, 0, 0.5],\n    \"230\": [0, 0.43056, 0, 0, 0.72222],\n    \"247\": [0.08333, 0.58333, 0, 0, 0.77778],\n    \"248\": [0.09722, 0.52778, 0, 0, 0.5],\n    \"305\": [0, 0.43056, 0, 0, 0.27778],\n    \"338\": [0, 0.68333, 0, 0, 1.01389],\n    \"339\": [0, 0.43056, 0, 0, 0.77778],\n    \"567\": [0.19444, 0.43056, 0, 0, 0.30556],\n    \"710\": [0, 0.69444, 0, 0, 0.5],\n    \"711\": [0, 0.62847, 0, 0, 0.5],\n    \"713\": [0, 0.56778, 0, 0, 0.5],\n    \"714\": [0, 0.69444, 0, 0, 0.5],\n    \"715\": [0, 0.69444, 0, 0, 0.5],\n    \"728\": [0, 0.69444, 0, 0, 0.5],\n    \"729\": [0, 0.66786, 0, 0, 0.27778],\n    \"730\": [0, 0.69444, 0, 0, 0.75],\n    \"732\": [0, 0.66786, 0, 0, 0.5],\n    \"733\": [0, 0.69444, 0, 0, 0.5],\n    \"915\": [0, 0.68333, 0, 0, 0.625],\n    \"916\": [0, 0.68333, 0, 0, 0.83334],\n    \"920\": [0, 0.68333, 0, 0, 0.77778],\n    \"923\": [0, 0.68333, 0, 0, 0.69445],\n    \"926\": [0, 0.68333, 0, 0, 0.66667],\n    \"928\": [0, 0.68333, 0, 0, 0.75],\n    \"931\": [0, 0.68333, 0, 0, 0.72222],\n    \"933\": [0, 0.68333, 0, 0, 0.77778],\n    \"934\": [0, 0.68333, 0, 0, 0.72222],\n    \"936\": [0, 0.68333, 0, 0, 0.77778],\n    \"937\": [0, 0.68333, 0, 0, 0.72222],\n    \"8211\": [0, 0.43056, 0.02778, 0, 0.5],\n    \"8212\": [0, 0.43056, 0.02778, 0, 1.0],\n    \"8216\": [0, 0.69444, 0, 0, 0.27778],\n    \"8217\": [0, 0.69444, 0, 0, 0.27778],\n    \"8220\": [0, 0.69444, 0, 0, 0.5],\n    \"8221\": [0, 0.69444, 0, 0, 0.5],\n    \"8224\": [0.19444, 0.69444, 0, 0, 0.44445],\n    \"8225\": [0.19444, 0.69444, 0, 0, 0.44445],\n    \"8230\": [0, 0.123, 0, 0, 1.172],\n    \"8242\": [0, 0.55556, 0, 0, 0.275],\n    \"8407\": [0, 0.71444, 0.15382, 0, 0.5],\n    \"8463\": [0, 0.68889, 0, 0, 0.54028],\n    \"8465\": [0, 0.69444, 0, 0, 0.72222],\n    \"8467\": [0, 0.69444, 0, 0.11111, 0.41667],\n    \"8472\": [0.19444, 0.43056, 0, 0.11111, 0.63646],\n    \"8476\": [0, 0.69444, 0, 0, 0.72222],\n    \"8501\": [0, 0.69444, 0, 0, 0.61111],\n    \"8592\": [-0.13313, 0.36687, 0, 0, 1.0],\n    \"8593\": [0.19444, 0.69444, 0, 0, 0.5],\n    \"8594\": [-0.13313, 0.36687, 0, 0, 1.0],\n    \"8595\": [0.19444, 0.69444, 0, 0, 0.5],\n    \"8596\": [-0.13313, 0.36687, 0, 0, 1.0],\n    \"8597\": [0.25, 0.75, 0, 0, 0.5],\n    \"8598\": [0.19444, 0.69444, 0, 0, 1.0],\n    \"8599\": [0.19444, 0.69444, 0, 0, 1.0],\n    \"8600\": [0.19444, 0.69444, 0, 0, 1.0],\n    \"8601\": [0.19444, 0.69444, 0, 0, 1.0],\n    \"8614\": [0.011, 0.511, 0, 0, 1.0],\n    \"8617\": [0.011, 0.511, 0, 0, 1.126],\n    \"8618\": [0.011, 0.511, 0, 0, 1.126],\n    \"8636\": [-0.13313, 0.36687, 0, 0, 1.0],\n    \"8637\": [-0.13313, 0.36687, 0, 0, 1.0],\n    \"8640\": [-0.13313, 0.36687, 0, 0, 1.0],\n    \"8641\": [-0.13313, 0.36687, 0, 0, 1.0],\n    \"8652\": [0.011, 0.671, 0, 0, 1.0],\n    \"8656\": [-0.13313, 0.36687, 0, 0, 1.0],\n    \"8657\": [0.19444, 0.69444, 0, 0, 0.61111],\n    \"8658\": [-0.13313, 0.36687, 0, 0, 1.0],\n    \"8659\": [0.19444, 0.69444, 0, 0, 0.61111],\n    \"8660\": [-0.13313, 0.36687, 0, 0, 1.0],\n    \"8661\": [0.25, 0.75, 0, 0, 0.61111],\n    \"8704\": [0, 0.69444, 0, 0, 0.55556],\n    \"8706\": [0, 0.69444, 0.05556, 0.08334, 0.5309],\n    \"8707\": [0, 0.69444, 0, 0, 0.55556],\n    \"8709\": [0.05556, 0.75, 0, 0, 0.5],\n    \"8711\": [0, 0.68333, 0, 0, 0.83334],\n    \"8712\": [0.0391, 0.5391, 0, 0, 0.66667],\n    \"8715\": [0.0391, 0.5391, 0, 0, 0.66667],\n    \"8722\": [0.08333, 0.58333, 0, 0, 0.77778],\n    \"8723\": [0.08333, 0.58333, 0, 0, 0.77778],\n    \"8725\": [0.25, 0.75, 0, 0, 0.5],\n    \"8726\": [0.25, 0.75, 0, 0, 0.5],\n    \"8727\": [-0.03472, 0.46528, 0, 0, 0.5],\n    \"8728\": [-0.05555, 0.44445, 0, 0, 0.5],\n    \"8729\": [-0.05555, 0.44445, 0, 0, 0.5],\n    \"8730\": [0.2, 0.8, 0, 0, 0.83334],\n    \"8733\": [0, 0.43056, 0, 0, 0.77778],\n    \"8734\": [0, 0.43056, 0, 0, 1.0],\n    \"8736\": [0, 0.69224, 0, 0, 0.72222],\n    \"8739\": [0.25, 0.75, 0, 0, 0.27778],\n    \"8741\": [0.25, 0.75, 0, 0, 0.5],\n    \"8743\": [0, 0.55556, 0, 0, 0.66667],\n    \"8744\": [0, 0.55556, 0, 0, 0.66667],\n    \"8745\": [0, 0.55556, 0, 0, 0.66667],\n    \"8746\": [0, 0.55556, 0, 0, 0.66667],\n    \"8747\": [0.19444, 0.69444, 0.11111, 0, 0.41667],\n    \"8764\": [-0.13313, 0.36687, 0, 0, 0.77778],\n    \"8768\": [0.19444, 0.69444, 0, 0, 0.27778],\n    \"8771\": [-0.03625, 0.46375, 0, 0, 0.77778],\n    \"8773\": [-0.022, 0.589, 0, 0, 0.778],\n    \"8776\": [-0.01688, 0.48312, 0, 0, 0.77778],\n    \"8781\": [-0.03625, 0.46375, 0, 0, 0.77778],\n    \"8784\": [-0.133, 0.673, 0, 0, 0.778],\n    \"8801\": [-0.03625, 0.46375, 0, 0, 0.77778],\n    \"8804\": [0.13597, 0.63597, 0, 0, 0.77778],\n    \"8805\": [0.13597, 0.63597, 0, 0, 0.77778],\n    \"8810\": [0.0391, 0.5391, 0, 0, 1.0],\n    \"8811\": [0.0391, 0.5391, 0, 0, 1.0],\n    \"8826\": [0.0391, 0.5391, 0, 0, 0.77778],\n    \"8827\": [0.0391, 0.5391, 0, 0, 0.77778],\n    \"8834\": [0.0391, 0.5391, 0, 0, 0.77778],\n    \"8835\": [0.0391, 0.5391, 0, 0, 0.77778],\n    \"8838\": [0.13597, 0.63597, 0, 0, 0.77778],\n    \"8839\": [0.13597, 0.63597, 0, 0, 0.77778],\n    \"8846\": [0, 0.55556, 0, 0, 0.66667],\n    \"8849\": [0.13597, 0.63597, 0, 0, 0.77778],\n    \"8850\": [0.13597, 0.63597, 0, 0, 0.77778],\n    \"8851\": [0, 0.55556, 0, 0, 0.66667],\n    \"8852\": [0, 0.55556, 0, 0, 0.66667],\n    \"8853\": [0.08333, 0.58333, 0, 0, 0.77778],\n    \"8854\": [0.08333, 0.58333, 0, 0, 0.77778],\n    \"8855\": [0.08333, 0.58333, 0, 0, 0.77778],\n    \"8856\": [0.08333, 0.58333, 0, 0, 0.77778],\n    \"8857\": [0.08333, 0.58333, 0, 0, 0.77778],\n    \"8866\": [0, 0.69444, 0, 0, 0.61111],\n    \"8867\": [0, 0.69444, 0, 0, 0.61111],\n    \"8868\": [0, 0.69444, 0, 0, 0.77778],\n    \"8869\": [0, 0.69444, 0, 0, 0.77778],\n    \"8872\": [0.249, 0.75, 0, 0, 0.867],\n    \"8900\": [-0.05555, 0.44445, 0, 0, 0.5],\n    \"8901\": [-0.05555, 0.44445, 0, 0, 0.27778],\n    \"8902\": [-0.03472, 0.46528, 0, 0, 0.5],\n    \"8904\": [0.005, 0.505, 0, 0, 0.9],\n    \"8942\": [0.03, 0.903, 0, 0, 0.278],\n    \"8943\": [-0.19, 0.313, 0, 0, 1.172],\n    \"8945\": [-0.1, 0.823, 0, 0, 1.282],\n    \"8968\": [0.25, 0.75, 0, 0, 0.44445],\n    \"8969\": [0.25, 0.75, 0, 0, 0.44445],\n    \"8970\": [0.25, 0.75, 0, 0, 0.44445],\n    \"8971\": [0.25, 0.75, 0, 0, 0.44445],\n    \"8994\": [-0.14236, 0.35764, 0, 0, 1.0],\n    \"8995\": [-0.14236, 0.35764, 0, 0, 1.0],\n    \"9136\": [0.244, 0.744, 0, 0, 0.412],\n    \"9137\": [0.244, 0.745, 0, 0, 0.412],\n    \"9651\": [0.19444, 0.69444, 0, 0, 0.88889],\n    \"9657\": [-0.03472, 0.46528, 0, 0, 0.5],\n    \"9661\": [0.19444, 0.69444, 0, 0, 0.88889],\n    \"9667\": [-0.03472, 0.46528, 0, 0, 0.5],\n    \"9711\": [0.19444, 0.69444, 0, 0, 1.0],\n    \"9824\": [0.12963, 0.69444, 0, 0, 0.77778],\n    \"9825\": [0.12963, 0.69444, 0, 0, 0.77778],\n    \"9826\": [0.12963, 0.69444, 0, 0, 0.77778],\n    \"9827\": [0.12963, 0.69444, 0, 0, 0.77778],\n    \"9837\": [0, 0.75, 0, 0, 0.38889],\n    \"9838\": [0.19444, 0.69444, 0, 0, 0.38889],\n    \"9839\": [0.19444, 0.69444, 0, 0, 0.38889],\n    \"10216\": [0.25, 0.75, 0, 0, 0.38889],\n    \"10217\": [0.25, 0.75, 0, 0, 0.38889],\n    \"10222\": [0.244, 0.744, 0, 0, 0.412],\n    \"10223\": [0.244, 0.745, 0, 0, 0.412],\n    \"10229\": [0.011, 0.511, 0, 0, 1.609],\n    \"10230\": [0.011, 0.511, 0, 0, 1.638],\n    \"10231\": [0.011, 0.511, 0, 0, 1.859],\n    \"10232\": [0.024, 0.525, 0, 0, 1.609],\n    \"10233\": [0.024, 0.525, 0, 0, 1.638],\n    \"10234\": [0.024, 0.525, 0, 0, 1.858],\n    \"10236\": [0.011, 0.511, 0, 0, 1.638],\n    \"10815\": [0, 0.68333, 0, 0, 0.75],\n    \"10927\": [0.13597, 0.63597, 0, 0, 0.77778],\n    \"10928\": [0.13597, 0.63597, 0, 0, 0.77778],\n    \"57376\": [0.19444, 0.69444, 0, 0, 0]\n  },\n  \"Math-BoldItalic\": {\n    \"32\": [0, 0, 0, 0, 0.25],\n    \"48\": [0, 0.44444, 0, 0, 0.575],\n    \"49\": [0, 0.44444, 0, 0, 0.575],\n    \"50\": [0, 0.44444, 0, 0, 0.575],\n    \"51\": [0.19444, 0.44444, 0, 0, 0.575],\n    \"52\": [0.19444, 0.44444, 0, 0, 0.575],\n    \"53\": [0.19444, 0.44444, 0, 0, 0.575],\n    \"54\": [0, 0.64444, 0, 0, 0.575],\n    \"55\": [0.19444, 0.44444, 0, 0, 0.575],\n    \"56\": [0, 0.64444, 0, 0, 0.575],\n    \"57\": [0.19444, 0.44444, 0, 0, 0.575],\n    \"65\": [0, 0.68611, 0, 0, 0.86944],\n    \"66\": [0, 0.68611, 0.04835, 0, 0.8664],\n    \"67\": [0, 0.68611, 0.06979, 0, 0.81694],\n    \"68\": [0, 0.68611, 0.03194, 0, 0.93812],\n    \"69\": [0, 0.68611, 0.05451, 0, 0.81007],\n    \"70\": [0, 0.68611, 0.15972, 0, 0.68889],\n    \"71\": [0, 0.68611, 0, 0, 0.88673],\n    \"72\": [0, 0.68611, 0.08229, 0, 0.98229],\n    \"73\": [0, 0.68611, 0.07778, 0, 0.51111],\n    \"74\": [0, 0.68611, 0.10069, 0, 0.63125],\n    \"75\": [0, 0.68611, 0.06979, 0, 0.97118],\n    \"76\": [0, 0.68611, 0, 0, 0.75555],\n    \"77\": [0, 0.68611, 0.11424, 0, 1.14201],\n    \"78\": [0, 0.68611, 0.11424, 0, 0.95034],\n    \"79\": [0, 0.68611, 0.03194, 0, 0.83666],\n    \"80\": [0, 0.68611, 0.15972, 0, 0.72309],\n    \"81\": [0.19444, 0.68611, 0, 0, 0.86861],\n    \"82\": [0, 0.68611, 0.00421, 0, 0.87235],\n    \"83\": [0, 0.68611, 0.05382, 0, 0.69271],\n    \"84\": [0, 0.68611, 0.15972, 0, 0.63663],\n    \"85\": [0, 0.68611, 0.11424, 0, 0.80027],\n    \"86\": [0, 0.68611, 0.25555, 0, 0.67778],\n    \"87\": [0, 0.68611, 0.15972, 0, 1.09305],\n    \"88\": [0, 0.68611, 0.07778, 0, 0.94722],\n    \"89\": [0, 0.68611, 0.25555, 0, 0.67458],\n    \"90\": [0, 0.68611, 0.06979, 0, 0.77257],\n    \"97\": [0, 0.44444, 0, 0, 0.63287],\n    \"98\": [0, 0.69444, 0, 0, 0.52083],\n    \"99\": [0, 0.44444, 0, 0, 0.51342],\n    \"100\": [0, 0.69444, 0, 0, 0.60972],\n    \"101\": [0, 0.44444, 0, 0, 0.55361],\n    \"102\": [0.19444, 0.69444, 0.11042, 0, 0.56806],\n    \"103\": [0.19444, 0.44444, 0.03704, 0, 0.5449],\n    \"104\": [0, 0.69444, 0, 0, 0.66759],\n    \"105\": [0, 0.69326, 0, 0, 0.4048],\n    \"106\": [0.19444, 0.69326, 0.0622, 0, 0.47083],\n    \"107\": [0, 0.69444, 0.01852, 0, 0.6037],\n    \"108\": [0, 0.69444, 0.0088, 0, 0.34815],\n    \"109\": [0, 0.44444, 0, 0, 1.0324],\n    \"110\": [0, 0.44444, 0, 0, 0.71296],\n    \"111\": [0, 0.44444, 0, 0, 0.58472],\n    \"112\": [0.19444, 0.44444, 0, 0, 0.60092],\n    \"113\": [0.19444, 0.44444, 0.03704, 0, 0.54213],\n    \"114\": [0, 0.44444, 0.03194, 0, 0.5287],\n    \"115\": [0, 0.44444, 0, 0, 0.53125],\n    \"116\": [0, 0.63492, 0, 0, 0.41528],\n    \"117\": [0, 0.44444, 0, 0, 0.68102],\n    \"118\": [0, 0.44444, 0.03704, 0, 0.56666],\n    \"119\": [0, 0.44444, 0.02778, 0, 0.83148],\n    \"120\": [0, 0.44444, 0, 0, 0.65903],\n    \"121\": [0.19444, 0.44444, 0.03704, 0, 0.59028],\n    \"122\": [0, 0.44444, 0.04213, 0, 0.55509],\n    \"160\": [0, 0, 0, 0, 0.25],\n    \"915\": [0, 0.68611, 0.15972, 0, 0.65694],\n    \"916\": [0, 0.68611, 0, 0, 0.95833],\n    \"920\": [0, 0.68611, 0.03194, 0, 0.86722],\n    \"923\": [0, 0.68611, 0, 0, 0.80555],\n    \"926\": [0, 0.68611, 0.07458, 0, 0.84125],\n    \"928\": [0, 0.68611, 0.08229, 0, 0.98229],\n    \"931\": [0, 0.68611, 0.05451, 0, 0.88507],\n    \"933\": [0, 0.68611, 0.15972, 0, 0.67083],\n    \"934\": [0, 0.68611, 0, 0, 0.76666],\n    \"936\": [0, 0.68611, 0.11653, 0, 0.71402],\n    \"937\": [0, 0.68611, 0.04835, 0, 0.8789],\n    \"945\": [0, 0.44444, 0, 0, 0.76064],\n    \"946\": [0.19444, 0.69444, 0.03403, 0, 0.65972],\n    \"947\": [0.19444, 0.44444, 0.06389, 0, 0.59003],\n    \"948\": [0, 0.69444, 0.03819, 0, 0.52222],\n    \"949\": [0, 0.44444, 0, 0, 0.52882],\n    \"950\": [0.19444, 0.69444, 0.06215, 0, 0.50833],\n    \"951\": [0.19444, 0.44444, 0.03704, 0, 0.6],\n    \"952\": [0, 0.69444, 0.03194, 0, 0.5618],\n    \"953\": [0, 0.44444, 0, 0, 0.41204],\n    \"954\": [0, 0.44444, 0, 0, 0.66759],\n    \"955\": [0, 0.69444, 0, 0, 0.67083],\n    \"956\": [0.19444, 0.44444, 0, 0, 0.70787],\n    \"957\": [0, 0.44444, 0.06898, 0, 0.57685],\n    \"958\": [0.19444, 0.69444, 0.03021, 0, 0.50833],\n    \"959\": [0, 0.44444, 0, 0, 0.58472],\n    \"960\": [0, 0.44444, 0.03704, 0, 0.68241],\n    \"961\": [0.19444, 0.44444, 0, 0, 0.6118],\n    \"962\": [0.09722, 0.44444, 0.07917, 0, 0.42361],\n    \"963\": [0, 0.44444, 0.03704, 0, 0.68588],\n    \"964\": [0, 0.44444, 0.13472, 0, 0.52083],\n    \"965\": [0, 0.44444, 0.03704, 0, 0.63055],\n    \"966\": [0.19444, 0.44444, 0, 0, 0.74722],\n    \"967\": [0.19444, 0.44444, 0, 0, 0.71805],\n    \"968\": [0.19444, 0.69444, 0.03704, 0, 0.75833],\n    \"969\": [0, 0.44444, 0.03704, 0, 0.71782],\n    \"977\": [0, 0.69444, 0, 0, 0.69155],\n    \"981\": [0.19444, 0.69444, 0, 0, 0.7125],\n    \"982\": [0, 0.44444, 0.03194, 0, 0.975],\n    \"1009\": [0.19444, 0.44444, 0, 0, 0.6118],\n    \"1013\": [0, 0.44444, 0, 0, 0.48333],\n    \"57649\": [0, 0.44444, 0, 0, 0.39352],\n    \"57911\": [0.19444, 0.44444, 0, 0, 0.43889]\n  },\n  \"Math-Italic\": {\n    \"32\": [0, 0, 0, 0, 0.25],\n    \"48\": [0, 0.43056, 0, 0, 0.5],\n    \"49\": [0, 0.43056, 0, 0, 0.5],\n    \"50\": [0, 0.43056, 0, 0, 0.5],\n    \"51\": [0.19444, 0.43056, 0, 0, 0.5],\n    \"52\": [0.19444, 0.43056, 0, 0, 0.5],\n    \"53\": [0.19444, 0.43056, 0, 0, 0.5],\n    \"54\": [0, 0.64444, 0, 0, 0.5],\n    \"55\": [0.19444, 0.43056, 0, 0, 0.5],\n    \"56\": [0, 0.64444, 0, 0, 0.5],\n    \"57\": [0.19444, 0.43056, 0, 0, 0.5],\n    \"65\": [0, 0.68333, 0, 0.13889, 0.75],\n    \"66\": [0, 0.68333, 0.05017, 0.08334, 0.75851],\n    \"67\": [0, 0.68333, 0.07153, 0.08334, 0.71472],\n    \"68\": [0, 0.68333, 0.02778, 0.05556, 0.82792],\n    \"69\": [0, 0.68333, 0.05764, 0.08334, 0.7382],\n    \"70\": [0, 0.68333, 0.13889, 0.08334, 0.64306],\n    \"71\": [0, 0.68333, 0, 0.08334, 0.78625],\n    \"72\": [0, 0.68333, 0.08125, 0.05556, 0.83125],\n    \"73\": [0, 0.68333, 0.07847, 0.11111, 0.43958],\n    \"74\": [0, 0.68333, 0.09618, 0.16667, 0.55451],\n    \"75\": [0, 0.68333, 0.07153, 0.05556, 0.84931],\n    \"76\": [0, 0.68333, 0, 0.02778, 0.68056],\n    \"77\": [0, 0.68333, 0.10903, 0.08334, 0.97014],\n    \"78\": [0, 0.68333, 0.10903, 0.08334, 0.80347],\n    \"79\": [0, 0.68333, 0.02778, 0.08334, 0.76278],\n    \"80\": [0, 0.68333, 0.13889, 0.08334, 0.64201],\n    \"81\": [0.19444, 0.68333, 0, 0.08334, 0.79056],\n    \"82\": [0, 0.68333, 0.00773, 0.08334, 0.75929],\n    \"83\": [0, 0.68333, 0.05764, 0.08334, 0.6132],\n    \"84\": [0, 0.68333, 0.13889, 0.08334, 0.58438],\n    \"85\": [0, 0.68333, 0.10903, 0.02778, 0.68278],\n    \"86\": [0, 0.68333, 0.22222, 0, 0.58333],\n    \"87\": [0, 0.68333, 0.13889, 0, 0.94445],\n    \"88\": [0, 0.68333, 0.07847, 0.08334, 0.82847],\n    \"89\": [0, 0.68333, 0.22222, 0, 0.58056],\n    \"90\": [0, 0.68333, 0.07153, 0.08334, 0.68264],\n    \"97\": [0, 0.43056, 0, 0, 0.52859],\n    \"98\": [0, 0.69444, 0, 0, 0.42917],\n    \"99\": [0, 0.43056, 0, 0.05556, 0.43276],\n    \"100\": [0, 0.69444, 0, 0.16667, 0.52049],\n    \"101\": [0, 0.43056, 0, 0.05556, 0.46563],\n    \"102\": [0.19444, 0.69444, 0.10764, 0.16667, 0.48959],\n    \"103\": [0.19444, 0.43056, 0.03588, 0.02778, 0.47697],\n    \"104\": [0, 0.69444, 0, 0, 0.57616],\n    \"105\": [0, 0.65952, 0, 0, 0.34451],\n    \"106\": [0.19444, 0.65952, 0.05724, 0, 0.41181],\n    \"107\": [0, 0.69444, 0.03148, 0, 0.5206],\n    \"108\": [0, 0.69444, 0.01968, 0.08334, 0.29838],\n    \"109\": [0, 0.43056, 0, 0, 0.87801],\n    \"110\": [0, 0.43056, 0, 0, 0.60023],\n    \"111\": [0, 0.43056, 0, 0.05556, 0.48472],\n    \"112\": [0.19444, 0.43056, 0, 0.08334, 0.50313],\n    \"113\": [0.19444, 0.43056, 0.03588, 0.08334, 0.44641],\n    \"114\": [0, 0.43056, 0.02778, 0.05556, 0.45116],\n    \"115\": [0, 0.43056, 0, 0.05556, 0.46875],\n    \"116\": [0, 0.61508, 0, 0.08334, 0.36111],\n    \"117\": [0, 0.43056, 0, 0.02778, 0.57246],\n    \"118\": [0, 0.43056, 0.03588, 0.02778, 0.48472],\n    \"119\": [0, 0.43056, 0.02691, 0.08334, 0.71592],\n    \"120\": [0, 0.43056, 0, 0.02778, 0.57153],\n    \"121\": [0.19444, 0.43056, 0.03588, 0.05556, 0.49028],\n    \"122\": [0, 0.43056, 0.04398, 0.05556, 0.46505],\n    \"160\": [0, 0, 0, 0, 0.25],\n    \"915\": [0, 0.68333, 0.13889, 0.08334, 0.61528],\n    \"916\": [0, 0.68333, 0, 0.16667, 0.83334],\n    \"920\": [0, 0.68333, 0.02778, 0.08334, 0.76278],\n    \"923\": [0, 0.68333, 0, 0.16667, 0.69445],\n    \"926\": [0, 0.68333, 0.07569, 0.08334, 0.74236],\n    \"928\": [0, 0.68333, 0.08125, 0.05556, 0.83125],\n    \"931\": [0, 0.68333, 0.05764, 0.08334, 0.77986],\n    \"933\": [0, 0.68333, 0.13889, 0.05556, 0.58333],\n    \"934\": [0, 0.68333, 0, 0.08334, 0.66667],\n    \"936\": [0, 0.68333, 0.11, 0.05556, 0.61222],\n    \"937\": [0, 0.68333, 0.05017, 0.08334, 0.7724],\n    \"945\": [0, 0.43056, 0.0037, 0.02778, 0.6397],\n    \"946\": [0.19444, 0.69444, 0.05278, 0.08334, 0.56563],\n    \"947\": [0.19444, 0.43056, 0.05556, 0, 0.51773],\n    \"948\": [0, 0.69444, 0.03785, 0.05556, 0.44444],\n    \"949\": [0, 0.43056, 0, 0.08334, 0.46632],\n    \"950\": [0.19444, 0.69444, 0.07378, 0.08334, 0.4375],\n    \"951\": [0.19444, 0.43056, 0.03588, 0.05556, 0.49653],\n    \"952\": [0, 0.69444, 0.02778, 0.08334, 0.46944],\n    \"953\": [0, 0.43056, 0, 0.05556, 0.35394],\n    \"954\": [0, 0.43056, 0, 0, 0.57616],\n    \"955\": [0, 0.69444, 0, 0, 0.58334],\n    \"956\": [0.19444, 0.43056, 0, 0.02778, 0.60255],\n    \"957\": [0, 0.43056, 0.06366, 0.02778, 0.49398],\n    \"958\": [0.19444, 0.69444, 0.04601, 0.11111, 0.4375],\n    \"959\": [0, 0.43056, 0, 0.05556, 0.48472],\n    \"960\": [0, 0.43056, 0.03588, 0, 0.57003],\n    \"961\": [0.19444, 0.43056, 0, 0.08334, 0.51702],\n    \"962\": [0.09722, 0.43056, 0.07986, 0.08334, 0.36285],\n    \"963\": [0, 0.43056, 0.03588, 0, 0.57141],\n    \"964\": [0, 0.43056, 0.1132, 0.02778, 0.43715],\n    \"965\": [0, 0.43056, 0.03588, 0.02778, 0.54028],\n    \"966\": [0.19444, 0.43056, 0, 0.08334, 0.65417],\n    \"967\": [0.19444, 0.43056, 0, 0.05556, 0.62569],\n    \"968\": [0.19444, 0.69444, 0.03588, 0.11111, 0.65139],\n    \"969\": [0, 0.43056, 0.03588, 0, 0.62245],\n    \"977\": [0, 0.69444, 0, 0.08334, 0.59144],\n    \"981\": [0.19444, 0.69444, 0, 0.08334, 0.59583],\n    \"982\": [0, 0.43056, 0.02778, 0, 0.82813],\n    \"1009\": [0.19444, 0.43056, 0, 0.08334, 0.51702],\n    \"1013\": [0, 0.43056, 0, 0.05556, 0.4059],\n    \"57649\": [0, 0.43056, 0, 0.02778, 0.32246],\n    \"57911\": [0.19444, 0.43056, 0, 0.08334, 0.38403]\n  },\n  \"SansSerif-Bold\": {\n    \"32\": [0, 0, 0, 0, 0.25],\n    \"33\": [0, 0.69444, 0, 0, 0.36667],\n    \"34\": [0, 0.69444, 0, 0, 0.55834],\n    \"35\": [0.19444, 0.69444, 0, 0, 0.91667],\n    \"36\": [0.05556, 0.75, 0, 0, 0.55],\n    \"37\": [0.05556, 0.75, 0, 0, 1.02912],\n    \"38\": [0, 0.69444, 0, 0, 0.83056],\n    \"39\": [0, 0.69444, 0, 0, 0.30556],\n    \"40\": [0.25, 0.75, 0, 0, 0.42778],\n    \"41\": [0.25, 0.75, 0, 0, 0.42778],\n    \"42\": [0, 0.75, 0, 0, 0.55],\n    \"43\": [0.11667, 0.61667, 0, 0, 0.85556],\n    \"44\": [0.10556, 0.13056, 0, 0, 0.30556],\n    \"45\": [0, 0.45833, 0, 0, 0.36667],\n    \"46\": [0, 0.13056, 0, 0, 0.30556],\n    \"47\": [0.25, 0.75, 0, 0, 0.55],\n    \"48\": [0, 0.69444, 0, 0, 0.55],\n    \"49\": [0, 0.69444, 0, 0, 0.55],\n    \"50\": [0, 0.69444, 0, 0, 0.55],\n    \"51\": [0, 0.69444, 0, 0, 0.55],\n    \"52\": [0, 0.69444, 0, 0, 0.55],\n    \"53\": [0, 0.69444, 0, 0, 0.55],\n    \"54\": [0, 0.69444, 0, 0, 0.55],\n    \"55\": [0, 0.69444, 0, 0, 0.55],\n    \"56\": [0, 0.69444, 0, 0, 0.55],\n    \"57\": [0, 0.69444, 0, 0, 0.55],\n    \"58\": [0, 0.45833, 0, 0, 0.30556],\n    \"59\": [0.10556, 0.45833, 0, 0, 0.30556],\n    \"61\": [-0.09375, 0.40625, 0, 0, 0.85556],\n    \"63\": [0, 0.69444, 0, 0, 0.51945],\n    \"64\": [0, 0.69444, 0, 0, 0.73334],\n    \"65\": [0, 0.69444, 0, 0, 0.73334],\n    \"66\": [0, 0.69444, 0, 0, 0.73334],\n    \"67\": [0, 0.69444, 0, 0, 0.70278],\n    \"68\": [0, 0.69444, 0, 0, 0.79445],\n    \"69\": [0, 0.69444, 0, 0, 0.64167],\n    \"70\": [0, 0.69444, 0, 0, 0.61111],\n    \"71\": [0, 0.69444, 0, 0, 0.73334],\n    \"72\": [0, 0.69444, 0, 0, 0.79445],\n    \"73\": [0, 0.69444, 0, 0, 0.33056],\n    \"74\": [0, 0.69444, 0, 0, 0.51945],\n    \"75\": [0, 0.69444, 0, 0, 0.76389],\n    \"76\": [0, 0.69444, 0, 0, 0.58056],\n    \"77\": [0, 0.69444, 0, 0, 0.97778],\n    \"78\": [0, 0.69444, 0, 0, 0.79445],\n    \"79\": [0, 0.69444, 0, 0, 0.79445],\n    \"80\": [0, 0.69444, 0, 0, 0.70278],\n    \"81\": [0.10556, 0.69444, 0, 0, 0.79445],\n    \"82\": [0, 0.69444, 0, 0, 0.70278],\n    \"83\": [0, 0.69444, 0, 0, 0.61111],\n    \"84\": [0, 0.69444, 0, 0, 0.73334],\n    \"85\": [0, 0.69444, 0, 0, 0.76389],\n    \"86\": [0, 0.69444, 0.01528, 0, 0.73334],\n    \"87\": [0, 0.69444, 0.01528, 0, 1.03889],\n    \"88\": [0, 0.69444, 0, 0, 0.73334],\n    \"89\": [0, 0.69444, 0.0275, 0, 0.73334],\n    \"90\": [0, 0.69444, 0, 0, 0.67223],\n    \"91\": [0.25, 0.75, 0, 0, 0.34306],\n    \"93\": [0.25, 0.75, 0, 0, 0.34306],\n    \"94\": [0, 0.69444, 0, 0, 0.55],\n    \"95\": [0.35, 0.10833, 0.03056, 0, 0.55],\n    \"97\": [0, 0.45833, 0, 0, 0.525],\n    \"98\": [0, 0.69444, 0, 0, 0.56111],\n    \"99\": [0, 0.45833, 0, 0, 0.48889],\n    \"100\": [0, 0.69444, 0, 0, 0.56111],\n    \"101\": [0, 0.45833, 0, 0, 0.51111],\n    \"102\": [0, 0.69444, 0.07639, 0, 0.33611],\n    \"103\": [0.19444, 0.45833, 0.01528, 0, 0.55],\n    \"104\": [0, 0.69444, 0, 0, 0.56111],\n    \"105\": [0, 0.69444, 0, 0, 0.25556],\n    \"106\": [0.19444, 0.69444, 0, 0, 0.28611],\n    \"107\": [0, 0.69444, 0, 0, 0.53056],\n    \"108\": [0, 0.69444, 0, 0, 0.25556],\n    \"109\": [0, 0.45833, 0, 0, 0.86667],\n    \"110\": [0, 0.45833, 0, 0, 0.56111],\n    \"111\": [0, 0.45833, 0, 0, 0.55],\n    \"112\": [0.19444, 0.45833, 0, 0, 0.56111],\n    \"113\": [0.19444, 0.45833, 0, 0, 0.56111],\n    \"114\": [0, 0.45833, 0.01528, 0, 0.37222],\n    \"115\": [0, 0.45833, 0, 0, 0.42167],\n    \"116\": [0, 0.58929, 0, 0, 0.40417],\n    \"117\": [0, 0.45833, 0, 0, 0.56111],\n    \"118\": [0, 0.45833, 0.01528, 0, 0.5],\n    \"119\": [0, 0.45833, 0.01528, 0, 0.74445],\n    \"120\": [0, 0.45833, 0, 0, 0.5],\n    \"121\": [0.19444, 0.45833, 0.01528, 0, 0.5],\n    \"122\": [0, 0.45833, 0, 0, 0.47639],\n    \"126\": [0.35, 0.34444, 0, 0, 0.55],\n    \"160\": [0, 0, 0, 0, 0.25],\n    \"168\": [0, 0.69444, 0, 0, 0.55],\n    \"176\": [0, 0.69444, 0, 0, 0.73334],\n    \"180\": [0, 0.69444, 0, 0, 0.55],\n    \"184\": [0.17014, 0, 0, 0, 0.48889],\n    \"305\": [0, 0.45833, 0, 0, 0.25556],\n    \"567\": [0.19444, 0.45833, 0, 0, 0.28611],\n    \"710\": [0, 0.69444, 0, 0, 0.55],\n    \"711\": [0, 0.63542, 0, 0, 0.55],\n    \"713\": [0, 0.63778, 0, 0, 0.55],\n    \"728\": [0, 0.69444, 0, 0, 0.55],\n    \"729\": [0, 0.69444, 0, 0, 0.30556],\n    \"730\": [0, 0.69444, 0, 0, 0.73334],\n    \"732\": [0, 0.69444, 0, 0, 0.55],\n    \"733\": [0, 0.69444, 0, 0, 0.55],\n    \"915\": [0, 0.69444, 0, 0, 0.58056],\n    \"916\": [0, 0.69444, 0, 0, 0.91667],\n    \"920\": [0, 0.69444, 0, 0, 0.85556],\n    \"923\": [0, 0.69444, 0, 0, 0.67223],\n    \"926\": [0, 0.69444, 0, 0, 0.73334],\n    \"928\": [0, 0.69444, 0, 0, 0.79445],\n    \"931\": [0, 0.69444, 0, 0, 0.79445],\n    \"933\": [0, 0.69444, 0, 0, 0.85556],\n    \"934\": [0, 0.69444, 0, 0, 0.79445],\n    \"936\": [0, 0.69444, 0, 0, 0.85556],\n    \"937\": [0, 0.69444, 0, 0, 0.79445],\n    \"8211\": [0, 0.45833, 0.03056, 0, 0.55],\n    \"8212\": [0, 0.45833, 0.03056, 0, 1.10001],\n    \"8216\": [0, 0.69444, 0, 0, 0.30556],\n    \"8217\": [0, 0.69444, 0, 0, 0.30556],\n    \"8220\": [0, 0.69444, 0, 0, 0.55834],\n    \"8221\": [0, 0.69444, 0, 0, 0.55834]\n  },\n  \"SansSerif-Italic\": {\n    \"32\": [0, 0, 0, 0, 0.25],\n    \"33\": [0, 0.69444, 0.05733, 0, 0.31945],\n    \"34\": [0, 0.69444, 0.00316, 0, 0.5],\n    \"35\": [0.19444, 0.69444, 0.05087, 0, 0.83334],\n    \"36\": [0.05556, 0.75, 0.11156, 0, 0.5],\n    \"37\": [0.05556, 0.75, 0.03126, 0, 0.83334],\n    \"38\": [0, 0.69444, 0.03058, 0, 0.75834],\n    \"39\": [0, 0.69444, 0.07816, 0, 0.27778],\n    \"40\": [0.25, 0.75, 0.13164, 0, 0.38889],\n    \"41\": [0.25, 0.75, 0.02536, 0, 0.38889],\n    \"42\": [0, 0.75, 0.11775, 0, 0.5],\n    \"43\": [0.08333, 0.58333, 0.02536, 0, 0.77778],\n    \"44\": [0.125, 0.08333, 0, 0, 0.27778],\n    \"45\": [0, 0.44444, 0.01946, 0, 0.33333],\n    \"46\": [0, 0.08333, 0, 0, 0.27778],\n    \"47\": [0.25, 0.75, 0.13164, 0, 0.5],\n    \"48\": [0, 0.65556, 0.11156, 0, 0.5],\n    \"49\": [0, 0.65556, 0.11156, 0, 0.5],\n    \"50\": [0, 0.65556, 0.11156, 0, 0.5],\n    \"51\": [0, 0.65556, 0.11156, 0, 0.5],\n    \"52\": [0, 0.65556, 0.11156, 0, 0.5],\n    \"53\": [0, 0.65556, 0.11156, 0, 0.5],\n    \"54\": [0, 0.65556, 0.11156, 0, 0.5],\n    \"55\": [0, 0.65556, 0.11156, 0, 0.5],\n    \"56\": [0, 0.65556, 0.11156, 0, 0.5],\n    \"57\": [0, 0.65556, 0.11156, 0, 0.5],\n    \"58\": [0, 0.44444, 0.02502, 0, 0.27778],\n    \"59\": [0.125, 0.44444, 0.02502, 0, 0.27778],\n    \"61\": [-0.13, 0.37, 0.05087, 0, 0.77778],\n    \"63\": [0, 0.69444, 0.11809, 0, 0.47222],\n    \"64\": [0, 0.69444, 0.07555, 0, 0.66667],\n    \"65\": [0, 0.69444, 0, 0, 0.66667],\n    \"66\": [0, 0.69444, 0.08293, 0, 0.66667],\n    \"67\": [0, 0.69444, 0.11983, 0, 0.63889],\n    \"68\": [0, 0.69444, 0.07555, 0, 0.72223],\n    \"69\": [0, 0.69444, 0.11983, 0, 0.59722],\n    \"70\": [0, 0.69444, 0.13372, 0, 0.56945],\n    \"71\": [0, 0.69444, 0.11983, 0, 0.66667],\n    \"72\": [0, 0.69444, 0.08094, 0, 0.70834],\n    \"73\": [0, 0.69444, 0.13372, 0, 0.27778],\n    \"74\": [0, 0.69444, 0.08094, 0, 0.47222],\n    \"75\": [0, 0.69444, 0.11983, 0, 0.69445],\n    \"76\": [0, 0.69444, 0, 0, 0.54167],\n    \"77\": [0, 0.69444, 0.08094, 0, 0.875],\n    \"78\": [0, 0.69444, 0.08094, 0, 0.70834],\n    \"79\": [0, 0.69444, 0.07555, 0, 0.73611],\n    \"80\": [0, 0.69444, 0.08293, 0, 0.63889],\n    \"81\": [0.125, 0.69444, 0.07555, 0, 0.73611],\n    \"82\": [0, 0.69444, 0.08293, 0, 0.64584],\n    \"83\": [0, 0.69444, 0.09205, 0, 0.55556],\n    \"84\": [0, 0.69444, 0.13372, 0, 0.68056],\n    \"85\": [0, 0.69444, 0.08094, 0, 0.6875],\n    \"86\": [0, 0.69444, 0.1615, 0, 0.66667],\n    \"87\": [0, 0.69444, 0.1615, 0, 0.94445],\n    \"88\": [0, 0.69444, 0.13372, 0, 0.66667],\n    \"89\": [0, 0.69444, 0.17261, 0, 0.66667],\n    \"90\": [0, 0.69444, 0.11983, 0, 0.61111],\n    \"91\": [0.25, 0.75, 0.15942, 0, 0.28889],\n    \"93\": [0.25, 0.75, 0.08719, 0, 0.28889],\n    \"94\": [0, 0.69444, 0.0799, 0, 0.5],\n    \"95\": [0.35, 0.09444, 0.08616, 0, 0.5],\n    \"97\": [0, 0.44444, 0.00981, 0, 0.48056],\n    \"98\": [0, 0.69444, 0.03057, 0, 0.51667],\n    \"99\": [0, 0.44444, 0.08336, 0, 0.44445],\n    \"100\": [0, 0.69444, 0.09483, 0, 0.51667],\n    \"101\": [0, 0.44444, 0.06778, 0, 0.44445],\n    \"102\": [0, 0.69444, 0.21705, 0, 0.30556],\n    \"103\": [0.19444, 0.44444, 0.10836, 0, 0.5],\n    \"104\": [0, 0.69444, 0.01778, 0, 0.51667],\n    \"105\": [0, 0.67937, 0.09718, 0, 0.23889],\n    \"106\": [0.19444, 0.67937, 0.09162, 0, 0.26667],\n    \"107\": [0, 0.69444, 0.08336, 0, 0.48889],\n    \"108\": [0, 0.69444, 0.09483, 0, 0.23889],\n    \"109\": [0, 0.44444, 0.01778, 0, 0.79445],\n    \"110\": [0, 0.44444, 0.01778, 0, 0.51667],\n    \"111\": [0, 0.44444, 0.06613, 0, 0.5],\n    \"112\": [0.19444, 0.44444, 0.0389, 0, 0.51667],\n    \"113\": [0.19444, 0.44444, 0.04169, 0, 0.51667],\n    \"114\": [0, 0.44444, 0.10836, 0, 0.34167],\n    \"115\": [0, 0.44444, 0.0778, 0, 0.38333],\n    \"116\": [0, 0.57143, 0.07225, 0, 0.36111],\n    \"117\": [0, 0.44444, 0.04169, 0, 0.51667],\n    \"118\": [0, 0.44444, 0.10836, 0, 0.46111],\n    \"119\": [0, 0.44444, 0.10836, 0, 0.68334],\n    \"120\": [0, 0.44444, 0.09169, 0, 0.46111],\n    \"121\": [0.19444, 0.44444, 0.10836, 0, 0.46111],\n    \"122\": [0, 0.44444, 0.08752, 0, 0.43472],\n    \"126\": [0.35, 0.32659, 0.08826, 0, 0.5],\n    \"160\": [0, 0, 0, 0, 0.25],\n    \"168\": [0, 0.67937, 0.06385, 0, 0.5],\n    \"176\": [0, 0.69444, 0, 0, 0.73752],\n    \"184\": [0.17014, 0, 0, 0, 0.44445],\n    \"305\": [0, 0.44444, 0.04169, 0, 0.23889],\n    \"567\": [0.19444, 0.44444, 0.04169, 0, 0.26667],\n    \"710\": [0, 0.69444, 0.0799, 0, 0.5],\n    \"711\": [0, 0.63194, 0.08432, 0, 0.5],\n    \"713\": [0, 0.60889, 0.08776, 0, 0.5],\n    \"714\": [0, 0.69444, 0.09205, 0, 0.5],\n    \"715\": [0, 0.69444, 0, 0, 0.5],\n    \"728\": [0, 0.69444, 0.09483, 0, 0.5],\n    \"729\": [0, 0.67937, 0.07774, 0, 0.27778],\n    \"730\": [0, 0.69444, 0, 0, 0.73752],\n    \"732\": [0, 0.67659, 0.08826, 0, 0.5],\n    \"733\": [0, 0.69444, 0.09205, 0, 0.5],\n    \"915\": [0, 0.69444, 0.13372, 0, 0.54167],\n    \"916\": [0, 0.69444, 0, 0, 0.83334],\n    \"920\": [0, 0.69444, 0.07555, 0, 0.77778],\n    \"923\": [0, 0.69444, 0, 0, 0.61111],\n    \"926\": [0, 0.69444, 0.12816, 0, 0.66667],\n    \"928\": [0, 0.69444, 0.08094, 0, 0.70834],\n    \"931\": [0, 0.69444, 0.11983, 0, 0.72222],\n    \"933\": [0, 0.69444, 0.09031, 0, 0.77778],\n    \"934\": [0, 0.69444, 0.04603, 0, 0.72222],\n    \"936\": [0, 0.69444, 0.09031, 0, 0.77778],\n    \"937\": [0, 0.69444, 0.08293, 0, 0.72222],\n    \"8211\": [0, 0.44444, 0.08616, 0, 0.5],\n    \"8212\": [0, 0.44444, 0.08616, 0, 1.0],\n    \"8216\": [0, 0.69444, 0.07816, 0, 0.27778],\n    \"8217\": [0, 0.69444, 0.07816, 0, 0.27778],\n    \"8220\": [0, 0.69444, 0.14205, 0, 0.5],\n    \"8221\": [0, 0.69444, 0.00316, 0, 0.5]\n  },\n  \"SansSerif-Regular\": {\n    \"32\": [0, 0, 0, 0, 0.25],\n    \"33\": [0, 0.69444, 0, 0, 0.31945],\n    \"34\": [0, 0.69444, 0, 0, 0.5],\n    \"35\": [0.19444, 0.69444, 0, 0, 0.83334],\n    \"36\": [0.05556, 0.75, 0, 0, 0.5],\n    \"37\": [0.05556, 0.75, 0, 0, 0.83334],\n    \"38\": [0, 0.69444, 0, 0, 0.75834],\n    \"39\": [0, 0.69444, 0, 0, 0.27778],\n    \"40\": [0.25, 0.75, 0, 0, 0.38889],\n    \"41\": [0.25, 0.75, 0, 0, 0.38889],\n    \"42\": [0, 0.75, 0, 0, 0.5],\n    \"43\": [0.08333, 0.58333, 0, 0, 0.77778],\n    \"44\": [0.125, 0.08333, 0, 0, 0.27778],\n    \"45\": [0, 0.44444, 0, 0, 0.33333],\n    \"46\": [0, 0.08333, 0, 0, 0.27778],\n    \"47\": [0.25, 0.75, 0, 0, 0.5],\n    \"48\": [0, 0.65556, 0, 0, 0.5],\n    \"49\": [0, 0.65556, 0, 0, 0.5],\n    \"50\": [0, 0.65556, 0, 0, 0.5],\n    \"51\": [0, 0.65556, 0, 0, 0.5],\n    \"52\": [0, 0.65556, 0, 0, 0.5],\n    \"53\": [0, 0.65556, 0, 0, 0.5],\n    \"54\": [0, 0.65556, 0, 0, 0.5],\n    \"55\": [0, 0.65556, 0, 0, 0.5],\n    \"56\": [0, 0.65556, 0, 0, 0.5],\n    \"57\": [0, 0.65556, 0, 0, 0.5],\n    \"58\": [0, 0.44444, 0, 0, 0.27778],\n    \"59\": [0.125, 0.44444, 0, 0, 0.27778],\n    \"61\": [-0.13, 0.37, 0, 0, 0.77778],\n    \"63\": [0, 0.69444, 0, 0, 0.47222],\n    \"64\": [0, 0.69444, 0, 0, 0.66667],\n    \"65\": [0, 0.69444, 0, 0, 0.66667],\n    \"66\": [0, 0.69444, 0, 0, 0.66667],\n    \"67\": [0, 0.69444, 0, 0, 0.63889],\n    \"68\": [0, 0.69444, 0, 0, 0.72223],\n    \"69\": [0, 0.69444, 0, 0, 0.59722],\n    \"70\": [0, 0.69444, 0, 0, 0.56945],\n    \"71\": [0, 0.69444, 0, 0, 0.66667],\n    \"72\": [0, 0.69444, 0, 0, 0.70834],\n    \"73\": [0, 0.69444, 0, 0, 0.27778],\n    \"74\": [0, 0.69444, 0, 0, 0.47222],\n    \"75\": [0, 0.69444, 0, 0, 0.69445],\n    \"76\": [0, 0.69444, 0, 0, 0.54167],\n    \"77\": [0, 0.69444, 0, 0, 0.875],\n    \"78\": [0, 0.69444, 0, 0, 0.70834],\n    \"79\": [0, 0.69444, 0, 0, 0.73611],\n    \"80\": [0, 0.69444, 0, 0, 0.63889],\n    \"81\": [0.125, 0.69444, 0, 0, 0.73611],\n    \"82\": [0, 0.69444, 0, 0, 0.64584],\n    \"83\": [0, 0.69444, 0, 0, 0.55556],\n    \"84\": [0, 0.69444, 0, 0, 0.68056],\n    \"85\": [0, 0.69444, 0, 0, 0.6875],\n    \"86\": [0, 0.69444, 0.01389, 0, 0.66667],\n    \"87\": [0, 0.69444, 0.01389, 0, 0.94445],\n    \"88\": [0, 0.69444, 0, 0, 0.66667],\n    \"89\": [0, 0.69444, 0.025, 0, 0.66667],\n    \"90\": [0, 0.69444, 0, 0, 0.61111],\n    \"91\": [0.25, 0.75, 0, 0, 0.28889],\n    \"93\": [0.25, 0.75, 0, 0, 0.28889],\n    \"94\": [0, 0.69444, 0, 0, 0.5],\n    \"95\": [0.35, 0.09444, 0.02778, 0, 0.5],\n    \"97\": [0, 0.44444, 0, 0, 0.48056],\n    \"98\": [0, 0.69444, 0, 0, 0.51667],\n    \"99\": [0, 0.44444, 0, 0, 0.44445],\n    \"100\": [0, 0.69444, 0, 0, 0.51667],\n    \"101\": [0, 0.44444, 0, 0, 0.44445],\n    \"102\": [0, 0.69444, 0.06944, 0, 0.30556],\n    \"103\": [0.19444, 0.44444, 0.01389, 0, 0.5],\n    \"104\": [0, 0.69444, 0, 0, 0.51667],\n    \"105\": [0, 0.67937, 0, 0, 0.23889],\n    \"106\": [0.19444, 0.67937, 0, 0, 0.26667],\n    \"107\": [0, 0.69444, 0, 0, 0.48889],\n    \"108\": [0, 0.69444, 0, 0, 0.23889],\n    \"109\": [0, 0.44444, 0, 0, 0.79445],\n    \"110\": [0, 0.44444, 0, 0, 0.51667],\n    \"111\": [0, 0.44444, 0, 0, 0.5],\n    \"112\": [0.19444, 0.44444, 0, 0, 0.51667],\n    \"113\": [0.19444, 0.44444, 0, 0, 0.51667],\n    \"114\": [0, 0.44444, 0.01389, 0, 0.34167],\n    \"115\": [0, 0.44444, 0, 0, 0.38333],\n    \"116\": [0, 0.57143, 0, 0, 0.36111],\n    \"117\": [0, 0.44444, 0, 0, 0.51667],\n    \"118\": [0, 0.44444, 0.01389, 0, 0.46111],\n    \"119\": [0, 0.44444, 0.01389, 0, 0.68334],\n    \"120\": [0, 0.44444, 0, 0, 0.46111],\n    \"121\": [0.19444, 0.44444, 0.01389, 0, 0.46111],\n    \"122\": [0, 0.44444, 0, 0, 0.43472],\n    \"126\": [0.35, 0.32659, 0, 0, 0.5],\n    \"160\": [0, 0, 0, 0, 0.25],\n    \"168\": [0, 0.67937, 0, 0, 0.5],\n    \"176\": [0, 0.69444, 0, 0, 0.66667],\n    \"184\": [0.17014, 0, 0, 0, 0.44445],\n    \"305\": [0, 0.44444, 0, 0, 0.23889],\n    \"567\": [0.19444, 0.44444, 0, 0, 0.26667],\n    \"710\": [0, 0.69444, 0, 0, 0.5],\n    \"711\": [0, 0.63194, 0, 0, 0.5],\n    \"713\": [0, 0.60889, 0, 0, 0.5],\n    \"714\": [0, 0.69444, 0, 0, 0.5],\n    \"715\": [0, 0.69444, 0, 0, 0.5],\n    \"728\": [0, 0.69444, 0, 0, 0.5],\n    \"729\": [0, 0.67937, 0, 0, 0.27778],\n    \"730\": [0, 0.69444, 0, 0, 0.66667],\n    \"732\": [0, 0.67659, 0, 0, 0.5],\n    \"733\": [0, 0.69444, 0, 0, 0.5],\n    \"915\": [0, 0.69444, 0, 0, 0.54167],\n    \"916\": [0, 0.69444, 0, 0, 0.83334],\n    \"920\": [0, 0.69444, 0, 0, 0.77778],\n    \"923\": [0, 0.69444, 0, 0, 0.61111],\n    \"926\": [0, 0.69444, 0, 0, 0.66667],\n    \"928\": [0, 0.69444, 0, 0, 0.70834],\n    \"931\": [0, 0.69444, 0, 0, 0.72222],\n    \"933\": [0, 0.69444, 0, 0, 0.77778],\n    \"934\": [0, 0.69444, 0, 0, 0.72222],\n    \"936\": [0, 0.69444, 0, 0, 0.77778],\n    \"937\": [0, 0.69444, 0, 0, 0.72222],\n    \"8211\": [0, 0.44444, 0.02778, 0, 0.5],\n    \"8212\": [0, 0.44444, 0.02778, 0, 1.0],\n    \"8216\": [0, 0.69444, 0, 0, 0.27778],\n    \"8217\": [0, 0.69444, 0, 0, 0.27778],\n    \"8220\": [0, 0.69444, 0, 0, 0.5],\n    \"8221\": [0, 0.69444, 0, 0, 0.5]\n  },\n  \"Script-Regular\": {\n    \"32\": [0, 0, 0, 0, 0.25],\n    \"65\": [0, 0.7, 0.22925, 0, 0.80253],\n    \"66\": [0, 0.7, 0.04087, 0, 0.90757],\n    \"67\": [0, 0.7, 0.1689, 0, 0.66619],\n    \"68\": [0, 0.7, 0.09371, 0, 0.77443],\n    \"69\": [0, 0.7, 0.18583, 0, 0.56162],\n    \"70\": [0, 0.7, 0.13634, 0, 0.89544],\n    \"71\": [0, 0.7, 0.17322, 0, 0.60961],\n    \"72\": [0, 0.7, 0.29694, 0, 0.96919],\n    \"73\": [0, 0.7, 0.19189, 0, 0.80907],\n    \"74\": [0.27778, 0.7, 0.19189, 0, 1.05159],\n    \"75\": [0, 0.7, 0.31259, 0, 0.91364],\n    \"76\": [0, 0.7, 0.19189, 0, 0.87373],\n    \"77\": [0, 0.7, 0.15981, 0, 1.08031],\n    \"78\": [0, 0.7, 0.3525, 0, 0.9015],\n    \"79\": [0, 0.7, 0.08078, 0, 0.73787],\n    \"80\": [0, 0.7, 0.08078, 0, 1.01262],\n    \"81\": [0, 0.7, 0.03305, 0, 0.88282],\n    \"82\": [0, 0.7, 0.06259, 0, 0.85],\n    \"83\": [0, 0.7, 0.19189, 0, 0.86767],\n    \"84\": [0, 0.7, 0.29087, 0, 0.74697],\n    \"85\": [0, 0.7, 0.25815, 0, 0.79996],\n    \"86\": [0, 0.7, 0.27523, 0, 0.62204],\n    \"87\": [0, 0.7, 0.27523, 0, 0.80532],\n    \"88\": [0, 0.7, 0.26006, 0, 0.94445],\n    \"89\": [0, 0.7, 0.2939, 0, 0.70961],\n    \"90\": [0, 0.7, 0.24037, 0, 0.8212],\n    \"160\": [0, 0, 0, 0, 0.25]\n  },\n  \"Size1-Regular\": {\n    \"32\": [0, 0, 0, 0, 0.25],\n    \"40\": [0.35001, 0.85, 0, 0, 0.45834],\n    \"41\": [0.35001, 0.85, 0, 0, 0.45834],\n    \"47\": [0.35001, 0.85, 0, 0, 0.57778],\n    \"91\": [0.35001, 0.85, 0, 0, 0.41667],\n    \"92\": [0.35001, 0.85, 0, 0, 0.57778],\n    \"93\": [0.35001, 0.85, 0, 0, 0.41667],\n    \"123\": [0.35001, 0.85, 0, 0, 0.58334],\n    \"125\": [0.35001, 0.85, 0, 0, 0.58334],\n    \"160\": [0, 0, 0, 0, 0.25],\n    \"710\": [0, 0.72222, 0, 0, 0.55556],\n    \"732\": [0, 0.72222, 0, 0, 0.55556],\n    \"770\": [0, 0.72222, 0, 0, 0.55556],\n    \"771\": [0, 0.72222, 0, 0, 0.55556],\n    \"8214\": [-0.00099, 0.601, 0, 0, 0.77778],\n    \"8593\": [1e-05, 0.6, 0, 0, 0.66667],\n    \"8595\": [1e-05, 0.6, 0, 0, 0.66667],\n    \"8657\": [1e-05, 0.6, 0, 0, 0.77778],\n    \"8659\": [1e-05, 0.6, 0, 0, 0.77778],\n    \"8719\": [0.25001, 0.75, 0, 0, 0.94445],\n    \"8720\": [0.25001, 0.75, 0, 0, 0.94445],\n    \"8721\": [0.25001, 0.75, 0, 0, 1.05556],\n    \"8730\": [0.35001, 0.85, 0, 0, 1.0],\n    \"8739\": [-0.00599, 0.606, 0, 0, 0.33333],\n    \"8741\": [-0.00599, 0.606, 0, 0, 0.55556],\n    \"8747\": [0.30612, 0.805, 0.19445, 0, 0.47222],\n    \"8748\": [0.306, 0.805, 0.19445, 0, 0.47222],\n    \"8749\": [0.306, 0.805, 0.19445, 0, 0.47222],\n    \"8750\": [0.30612, 0.805, 0.19445, 0, 0.47222],\n    \"8896\": [0.25001, 0.75, 0, 0, 0.83334],\n    \"8897\": [0.25001, 0.75, 0, 0, 0.83334],\n    \"8898\": [0.25001, 0.75, 0, 0, 0.83334],\n    \"8899\": [0.25001, 0.75, 0, 0, 0.83334],\n    \"8968\": [0.35001, 0.85, 0, 0, 0.47222],\n    \"8969\": [0.35001, 0.85, 0, 0, 0.47222],\n    \"8970\": [0.35001, 0.85, 0, 0, 0.47222],\n    \"8971\": [0.35001, 0.85, 0, 0, 0.47222],\n    \"9168\": [-0.00099, 0.601, 0, 0, 0.66667],\n    \"10216\": [0.35001, 0.85, 0, 0, 0.47222],\n    \"10217\": [0.35001, 0.85, 0, 0, 0.47222],\n    \"10752\": [0.25001, 0.75, 0, 0, 1.11111],\n    \"10753\": [0.25001, 0.75, 0, 0, 1.11111],\n    \"10754\": [0.25001, 0.75, 0, 0, 1.11111],\n    \"10756\": [0.25001, 0.75, 0, 0, 0.83334],\n    \"10758\": [0.25001, 0.75, 0, 0, 0.83334]\n  },\n  \"Size2-Regular\": {\n    \"32\": [0, 0, 0, 0, 0.25],\n    \"40\": [0.65002, 1.15, 0, 0, 0.59722],\n    \"41\": [0.65002, 1.15, 0, 0, 0.59722],\n    \"47\": [0.65002, 1.15, 0, 0, 0.81111],\n    \"91\": [0.65002, 1.15, 0, 0, 0.47222],\n    \"92\": [0.65002, 1.15, 0, 0, 0.81111],\n    \"93\": [0.65002, 1.15, 0, 0, 0.47222],\n    \"123\": [0.65002, 1.15, 0, 0, 0.66667],\n    \"125\": [0.65002, 1.15, 0, 0, 0.66667],\n    \"160\": [0, 0, 0, 0, 0.25],\n    \"710\": [0, 0.75, 0, 0, 1.0],\n    \"732\": [0, 0.75, 0, 0, 1.0],\n    \"770\": [0, 0.75, 0, 0, 1.0],\n    \"771\": [0, 0.75, 0, 0, 1.0],\n    \"8719\": [0.55001, 1.05, 0, 0, 1.27778],\n    \"8720\": [0.55001, 1.05, 0, 0, 1.27778],\n    \"8721\": [0.55001, 1.05, 0, 0, 1.44445],\n    \"8730\": [0.65002, 1.15, 0, 0, 1.0],\n    \"8747\": [0.86225, 1.36, 0.44445, 0, 0.55556],\n    \"8748\": [0.862, 1.36, 0.44445, 0, 0.55556],\n    \"8749\": [0.862, 1.36, 0.44445, 0, 0.55556],\n    \"8750\": [0.86225, 1.36, 0.44445, 0, 0.55556],\n    \"8896\": [0.55001, 1.05, 0, 0, 1.11111],\n    \"8897\": [0.55001, 1.05, 0, 0, 1.11111],\n    \"8898\": [0.55001, 1.05, 0, 0, 1.11111],\n    \"8899\": [0.55001, 1.05, 0, 0, 1.11111],\n    \"8968\": [0.65002, 1.15, 0, 0, 0.52778],\n    \"8969\": [0.65002, 1.15, 0, 0, 0.52778],\n    \"8970\": [0.65002, 1.15, 0, 0, 0.52778],\n    \"8971\": [0.65002, 1.15, 0, 0, 0.52778],\n    \"10216\": [0.65002, 1.15, 0, 0, 0.61111],\n    \"10217\": [0.65002, 1.15, 0, 0, 0.61111],\n    \"10752\": [0.55001, 1.05, 0, 0, 1.51112],\n    \"10753\": [0.55001, 1.05, 0, 0, 1.51112],\n    \"10754\": [0.55001, 1.05, 0, 0, 1.51112],\n    \"10756\": [0.55001, 1.05, 0, 0, 1.11111],\n    \"10758\": [0.55001, 1.05, 0, 0, 1.11111]\n  },\n  \"Size3-Regular\": {\n    \"32\": [0, 0, 0, 0, 0.25],\n    \"40\": [0.95003, 1.45, 0, 0, 0.73611],\n    \"41\": [0.95003, 1.45, 0, 0, 0.73611],\n    \"47\": [0.95003, 1.45, 0, 0, 1.04445],\n    \"91\": [0.95003, 1.45, 0, 0, 0.52778],\n    \"92\": [0.95003, 1.45, 0, 0, 1.04445],\n    \"93\": [0.95003, 1.45, 0, 0, 0.52778],\n    \"123\": [0.95003, 1.45, 0, 0, 0.75],\n    \"125\": [0.95003, 1.45, 0, 0, 0.75],\n    \"160\": [0, 0, 0, 0, 0.25],\n    \"710\": [0, 0.75, 0, 0, 1.44445],\n    \"732\": [0, 0.75, 0, 0, 1.44445],\n    \"770\": [0, 0.75, 0, 0, 1.44445],\n    \"771\": [0, 0.75, 0, 0, 1.44445],\n    \"8730\": [0.95003, 1.45, 0, 0, 1.0],\n    \"8968\": [0.95003, 1.45, 0, 0, 0.58334],\n    \"8969\": [0.95003, 1.45, 0, 0, 0.58334],\n    \"8970\": [0.95003, 1.45, 0, 0, 0.58334],\n    \"8971\": [0.95003, 1.45, 0, 0, 0.58334],\n    \"10216\": [0.95003, 1.45, 0, 0, 0.75],\n    \"10217\": [0.95003, 1.45, 0, 0, 0.75]\n  },\n  \"Size4-Regular\": {\n    \"32\": [0, 0, 0, 0, 0.25],\n    \"40\": [1.25003, 1.75, 0, 0, 0.79167],\n    \"41\": [1.25003, 1.75, 0, 0, 0.79167],\n    \"47\": [1.25003, 1.75, 0, 0, 1.27778],\n    \"91\": [1.25003, 1.75, 0, 0, 0.58334],\n    \"92\": [1.25003, 1.75, 0, 0, 1.27778],\n    \"93\": [1.25003, 1.75, 0, 0, 0.58334],\n    \"123\": [1.25003, 1.75, 0, 0, 0.80556],\n    \"125\": [1.25003, 1.75, 0, 0, 0.80556],\n    \"160\": [0, 0, 0, 0, 0.25],\n    \"710\": [0, 0.825, 0, 0, 1.8889],\n    \"732\": [0, 0.825, 0, 0, 1.8889],\n    \"770\": [0, 0.825, 0, 0, 1.8889],\n    \"771\": [0, 0.825, 0, 0, 1.8889],\n    \"8730\": [1.25003, 1.75, 0, 0, 1.0],\n    \"8968\": [1.25003, 1.75, 0, 0, 0.63889],\n    \"8969\": [1.25003, 1.75, 0, 0, 0.63889],\n    \"8970\": [1.25003, 1.75, 0, 0, 0.63889],\n    \"8971\": [1.25003, 1.75, 0, 0, 0.63889],\n    \"9115\": [0.64502, 1.155, 0, 0, 0.875],\n    \"9116\": [1e-05, 0.6, 0, 0, 0.875],\n    \"9117\": [0.64502, 1.155, 0, 0, 0.875],\n    \"9118\": [0.64502, 1.155, 0, 0, 0.875],\n    \"9119\": [1e-05, 0.6, 0, 0, 0.875],\n    \"9120\": [0.64502, 1.155, 0, 0, 0.875],\n    \"9121\": [0.64502, 1.155, 0, 0, 0.66667],\n    \"9122\": [-0.00099, 0.601, 0, 0, 0.66667],\n    \"9123\": [0.64502, 1.155, 0, 0, 0.66667],\n    \"9124\": [0.64502, 1.155, 0, 0, 0.66667],\n    \"9125\": [-0.00099, 0.601, 0, 0, 0.66667],\n    \"9126\": [0.64502, 1.155, 0, 0, 0.66667],\n    \"9127\": [1e-05, 0.9, 0, 0, 0.88889],\n    \"9128\": [0.65002, 1.15, 0, 0, 0.88889],\n    \"9129\": [0.90001, 0, 0, 0, 0.88889],\n    \"9130\": [0, 0.3, 0, 0, 0.88889],\n    \"9131\": [1e-05, 0.9, 0, 0, 0.88889],\n    \"9132\": [0.65002, 1.15, 0, 0, 0.88889],\n    \"9133\": [0.90001, 0, 0, 0, 0.88889],\n    \"9143\": [0.88502, 0.915, 0, 0, 1.05556],\n    \"10216\": [1.25003, 1.75, 0, 0, 0.80556],\n    \"10217\": [1.25003, 1.75, 0, 0, 0.80556],\n    \"57344\": [-0.00499, 0.605, 0, 0, 1.05556],\n    \"57345\": [-0.00499, 0.605, 0, 0, 1.05556],\n    \"57680\": [0, 0.12, 0, 0, 0.45],\n    \"57681\": [0, 0.12, 0, 0, 0.45],\n    \"57682\": [0, 0.12, 0, 0, 0.45],\n    \"57683\": [0, 0.12, 0, 0, 0.45]\n  },\n  \"Typewriter-Regular\": {\n    \"32\": [0, 0, 0, 0, 0.525],\n    \"33\": [0, 0.61111, 0, 0, 0.525],\n    \"34\": [0, 0.61111, 0, 0, 0.525],\n    \"35\": [0, 0.61111, 0, 0, 0.525],\n    \"36\": [0.08333, 0.69444, 0, 0, 0.525],\n    \"37\": [0.08333, 0.69444, 0, 0, 0.525],\n    \"38\": [0, 0.61111, 0, 0, 0.525],\n    \"39\": [0, 0.61111, 0, 0, 0.525],\n    \"40\": [0.08333, 0.69444, 0, 0, 0.525],\n    \"41\": [0.08333, 0.69444, 0, 0, 0.525],\n    \"42\": [0, 0.52083, 0, 0, 0.525],\n    \"43\": [-0.08056, 0.53055, 0, 0, 0.525],\n    \"44\": [0.13889, 0.125, 0, 0, 0.525],\n    \"45\": [-0.08056, 0.53055, 0, 0, 0.525],\n    \"46\": [0, 0.125, 0, 0, 0.525],\n    \"47\": [0.08333, 0.69444, 0, 0, 0.525],\n    \"48\": [0, 0.61111, 0, 0, 0.525],\n    \"49\": [0, 0.61111, 0, 0, 0.525],\n    \"50\": [0, 0.61111, 0, 0, 0.525],\n    \"51\": [0, 0.61111, 0, 0, 0.525],\n    \"52\": [0, 0.61111, 0, 0, 0.525],\n    \"53\": [0, 0.61111, 0, 0, 0.525],\n    \"54\": [0, 0.61111, 0, 0, 0.525],\n    \"55\": [0, 0.61111, 0, 0, 0.525],\n    \"56\": [0, 0.61111, 0, 0, 0.525],\n    \"57\": [0, 0.61111, 0, 0, 0.525],\n    \"58\": [0, 0.43056, 0, 0, 0.525],\n    \"59\": [0.13889, 0.43056, 0, 0, 0.525],\n    \"60\": [-0.05556, 0.55556, 0, 0, 0.525],\n    \"61\": [-0.19549, 0.41562, 0, 0, 0.525],\n    \"62\": [-0.05556, 0.55556, 0, 0, 0.525],\n    \"63\": [0, 0.61111, 0, 0, 0.525],\n    \"64\": [0, 0.61111, 0, 0, 0.525],\n    \"65\": [0, 0.61111, 0, 0, 0.525],\n    \"66\": [0, 0.61111, 0, 0, 0.525],\n    \"67\": [0, 0.61111, 0, 0, 0.525],\n    \"68\": [0, 0.61111, 0, 0, 0.525],\n    \"69\": [0, 0.61111, 0, 0, 0.525],\n    \"70\": [0, 0.61111, 0, 0, 0.525],\n    \"71\": [0, 0.61111, 0, 0, 0.525],\n    \"72\": [0, 0.61111, 0, 0, 0.525],\n    \"73\": [0, 0.61111, 0, 0, 0.525],\n    \"74\": [0, 0.61111, 0, 0, 0.525],\n    \"75\": [0, 0.61111, 0, 0, 0.525],\n    \"76\": [0, 0.61111, 0, 0, 0.525],\n    \"77\": [0, 0.61111, 0, 0, 0.525],\n    \"78\": [0, 0.61111, 0, 0, 0.525],\n    \"79\": [0, 0.61111, 0, 0, 0.525],\n    \"80\": [0, 0.61111, 0, 0, 0.525],\n    \"81\": [0.13889, 0.61111, 0, 0, 0.525],\n    \"82\": [0, 0.61111, 0, 0, 0.525],\n    \"83\": [0, 0.61111, 0, 0, 0.525],\n    \"84\": [0, 0.61111, 0, 0, 0.525],\n    \"85\": [0, 0.61111, 0, 0, 0.525],\n    \"86\": [0, 0.61111, 0, 0, 0.525],\n    \"87\": [0, 0.61111, 0, 0, 0.525],\n    \"88\": [0, 0.61111, 0, 0, 0.525],\n    \"89\": [0, 0.61111, 0, 0, 0.525],\n    \"90\": [0, 0.61111, 0, 0, 0.525],\n    \"91\": [0.08333, 0.69444, 0, 0, 0.525],\n    \"92\": [0.08333, 0.69444, 0, 0, 0.525],\n    \"93\": [0.08333, 0.69444, 0, 0, 0.525],\n    \"94\": [0, 0.61111, 0, 0, 0.525],\n    \"95\": [0.09514, 0, 0, 0, 0.525],\n    \"96\": [0, 0.61111, 0, 0, 0.525],\n    \"97\": [0, 0.43056, 0, 0, 0.525],\n    \"98\": [0, 0.61111, 0, 0, 0.525],\n    \"99\": [0, 0.43056, 0, 0, 0.525],\n    \"100\": [0, 0.61111, 0, 0, 0.525],\n    \"101\": [0, 0.43056, 0, 0, 0.525],\n    \"102\": [0, 0.61111, 0, 0, 0.525],\n    \"103\": [0.22222, 0.43056, 0, 0, 0.525],\n    \"104\": [0, 0.61111, 0, 0, 0.525],\n    \"105\": [0, 0.61111, 0, 0, 0.525],\n    \"106\": [0.22222, 0.61111, 0, 0, 0.525],\n    \"107\": [0, 0.61111, 0, 0, 0.525],\n    \"108\": [0, 0.61111, 0, 0, 0.525],\n    \"109\": [0, 0.43056, 0, 0, 0.525],\n    \"110\": [0, 0.43056, 0, 0, 0.525],\n    \"111\": [0, 0.43056, 0, 0, 0.525],\n    \"112\": [0.22222, 0.43056, 0, 0, 0.525],\n    \"113\": [0.22222, 0.43056, 0, 0, 0.525],\n    \"114\": [0, 0.43056, 0, 0, 0.525],\n    \"115\": [0, 0.43056, 0, 0, 0.525],\n    \"116\": [0, 0.55358, 0, 0, 0.525],\n    \"117\": [0, 0.43056, 0, 0, 0.525],\n    \"118\": [0, 0.43056, 0, 0, 0.525],\n    \"119\": [0, 0.43056, 0, 0, 0.525],\n    \"120\": [0, 0.43056, 0, 0, 0.525],\n    \"121\": [0.22222, 0.43056, 0, 0, 0.525],\n    \"122\": [0, 0.43056, 0, 0, 0.525],\n    \"123\": [0.08333, 0.69444, 0, 0, 0.525],\n    \"124\": [0.08333, 0.69444, 0, 0, 0.525],\n    \"125\": [0.08333, 0.69444, 0, 0, 0.525],\n    \"126\": [0, 0.61111, 0, 0, 0.525],\n    \"127\": [0, 0.61111, 0, 0, 0.525],\n    \"160\": [0, 0, 0, 0, 0.525],\n    \"176\": [0, 0.61111, 0, 0, 0.525],\n    \"184\": [0.19445, 0, 0, 0, 0.525],\n    \"305\": [0, 0.43056, 0, 0, 0.525],\n    \"567\": [0.22222, 0.43056, 0, 0, 0.525],\n    \"711\": [0, 0.56597, 0, 0, 0.525],\n    \"713\": [0, 0.56555, 0, 0, 0.525],\n    \"714\": [0, 0.61111, 0, 0, 0.525],\n    \"715\": [0, 0.61111, 0, 0, 0.525],\n    \"728\": [0, 0.61111, 0, 0, 0.525],\n    \"730\": [0, 0.61111, 0, 0, 0.525],\n    \"770\": [0, 0.61111, 0, 0, 0.525],\n    \"771\": [0, 0.61111, 0, 0, 0.525],\n    \"776\": [0, 0.61111, 0, 0, 0.525],\n    \"915\": [0, 0.61111, 0, 0, 0.525],\n    \"916\": [0, 0.61111, 0, 0, 0.525],\n    \"920\": [0, 0.61111, 0, 0, 0.525],\n    \"923\": [0, 0.61111, 0, 0, 0.525],\n    \"926\": [0, 0.61111, 0, 0, 0.525],\n    \"928\": [0, 0.61111, 0, 0, 0.525],\n    \"931\": [0, 0.61111, 0, 0, 0.525],\n    \"933\": [0, 0.61111, 0, 0, 0.525],\n    \"934\": [0, 0.61111, 0, 0, 0.525],\n    \"936\": [0, 0.61111, 0, 0, 0.525],\n    \"937\": [0, 0.61111, 0, 0, 0.525],\n    \"8216\": [0, 0.61111, 0, 0, 0.525],\n    \"8217\": [0, 0.61111, 0, 0, 0.525],\n    \"8242\": [0, 0.61111, 0, 0, 0.525],\n    \"9251\": [0.11111, 0.21944, 0, 0, 0.525]\n  }\n};\n\n/**\n * This file contains metrics regarding fonts and individual symbols. The sigma\n * and xi variables, as well as the metricMap map contain data extracted from\n * TeX, TeX font metrics, and the TTF files. These data are then exposed via the\n * `metrics` variable and the getCharacterMetrics function.\n */\n// In TeX, there are actually three sets of dimensions, one for each of\n// textstyle (size index 5 and higher: >=9pt), scriptstyle (size index 3 and 4:\n// 7-8pt), and scriptscriptstyle (size index 1 and 2: 5-6pt).  These are\n// provided in the arrays below, in that order.\n//\n// The font metrics are stored in fonts cmsy10, cmsy7, and cmsy5 respectively.\n// This was determined by running the following script:\n//\n//     latex -interaction=nonstopmode \\\n//     '\\documentclass{article}\\usepackage{amsmath}\\begin{document}' \\\n//     '$a$ \\expandafter\\show\\the\\textfont2' \\\n//     '\\expandafter\\show\\the\\scriptfont2' \\\n//     '\\expandafter\\show\\the\\scriptscriptfont2' \\\n//     '\\stop'\n//\n// The metrics themselves were retrieved using the following commands:\n//\n//     tftopl cmsy10\n//     tftopl cmsy7\n//     tftopl cmsy5\n//\n// The output of each of these commands is quite lengthy.  The only part we\n// care about is the FONTDIMEN section. Each value is measured in EMs.\nvar sigmasAndXis = {\n  slant: [0.250, 0.250, 0.250],\n  // sigma1\n  space: [0.000, 0.000, 0.000],\n  // sigma2\n  stretch: [0.000, 0.000, 0.000],\n  // sigma3\n  shrink: [0.000, 0.000, 0.000],\n  // sigma4\n  xHeight: [0.431, 0.431, 0.431],\n  // sigma5\n  quad: [1.000, 1.171, 1.472],\n  // sigma6\n  extraSpace: [0.000, 0.000, 0.000],\n  // sigma7\n  num1: [0.677, 0.732, 0.925],\n  // sigma8\n  num2: [0.394, 0.384, 0.387],\n  // sigma9\n  num3: [0.444, 0.471, 0.504],\n  // sigma10\n  denom1: [0.686, 0.752, 1.025],\n  // sigma11\n  denom2: [0.345, 0.344, 0.532],\n  // sigma12\n  sup1: [0.413, 0.503, 0.504],\n  // sigma13\n  sup2: [0.363, 0.431, 0.404],\n  // sigma14\n  sup3: [0.289, 0.286, 0.294],\n  // sigma15\n  sub1: [0.150, 0.143, 0.200],\n  // sigma16\n  sub2: [0.247, 0.286, 0.400],\n  // sigma17\n  supDrop: [0.386, 0.353, 0.494],\n  // sigma18\n  subDrop: [0.050, 0.071, 0.100],\n  // sigma19\n  delim1: [2.390, 1.700, 1.980],\n  // sigma20\n  delim2: [1.010, 1.157, 1.420],\n  // sigma21\n  axisHeight: [0.250, 0.250, 0.250],\n  // sigma22\n  // These font metrics are extracted from TeX by using tftopl on cmex10.tfm;\n  // they correspond to the font parameters of the extension fonts (family 3).\n  // See the TeXbook, page 441. In AMSTeX, the extension fonts scale; to\n  // match cmex7, we'd use cmex7.tfm values for script and scriptscript\n  // values.\n  defaultRuleThickness: [0.04, 0.049, 0.049],\n  // xi8; cmex7: 0.049\n  bigOpSpacing1: [0.111, 0.111, 0.111],\n  // xi9\n  bigOpSpacing2: [0.166, 0.166, 0.166],\n  // xi10\n  bigOpSpacing3: [0.2, 0.2, 0.2],\n  // xi11\n  bigOpSpacing4: [0.6, 0.611, 0.611],\n  // xi12; cmex7: 0.611\n  bigOpSpacing5: [0.1, 0.143, 0.143],\n  // xi13; cmex7: 0.143\n  // The \\sqrt rule width is taken from the height of the surd character.\n  // Since we use the same font at all sizes, this thickness doesn't scale.\n  sqrtRuleThickness: [0.04, 0.04, 0.04],\n  // This value determines how large a pt is, for metrics which are defined\n  // in terms of pts.\n  // This value is also used in katex.scss; if you change it make sure the\n  // values match.\n  ptPerEm: [10.0, 10.0, 10.0],\n  // The space between adjacent `|` columns in an array definition. From\n  // `\\showthe\\doublerulesep` in LaTeX. Equals 2.0 / ptPerEm.\n  doubleRuleSep: [0.2, 0.2, 0.2],\n  // The width of separator lines in {array} environments. From\n  // `\\showthe\\arrayrulewidth` in LaTeX. Equals 0.4 / ptPerEm.\n  arrayRuleWidth: [0.04, 0.04, 0.04],\n  // Two values from LaTeX source2e:\n  fboxsep: [0.3, 0.3, 0.3],\n  //        3 pt / ptPerEm\n  fboxrule: [0.04, 0.04, 0.04] // 0.4 pt / ptPerEm\n\n}; // This map contains a mapping from font name and character code to character\n// should have Latin-1 and Cyrillic characters, but may not depending on the\n// operating system.  The metrics do not account for extra height from the\n// accents.  In the case of Cyrillic characters which have both ascenders and\n// descenders we prefer approximations with ascenders, primarily to prevent\n// the fraction bar or root line from intersecting the glyph.\n// TODO(kevinb) allow union of multiple glyph metrics for better accuracy.\n\nvar extraCharacterMap = {\n  // Latin-1\n  '\u00C5': 'A',\n  '\u00D0': 'D',\n  '\u00DE': 'o',\n  '\u00E5': 'a',\n  '\u00F0': 'd',\n  '\u00FE': 'o',\n  // Cyrillic\n  '\u0410': 'A',\n  '\u0411': 'B',\n  '\u0412': 'B',\n  '\u0413': 'F',\n  '\u0414': 'A',\n  '\u0415': 'E',\n  '\u0416': 'K',\n  '\u0417': '3',\n  '\u0418': 'N',\n  '\u0419': 'N',\n  '\u041A': 'K',\n  '\u041B': 'N',\n  '\u041C': 'M',\n  '\u041D': 'H',\n  '\u041E': 'O',\n  '\u041F': 'N',\n  '\u0420': 'P',\n  '\u0421': 'C',\n  '\u0422': 'T',\n  '\u0423': 'y',\n  '\u0424': 'O',\n  '\u0425': 'X',\n  '\u0426': 'U',\n  '\u0427': 'h',\n  '\u0428': 'W',\n  '\u0429': 'W',\n  '\u042A': 'B',\n  '\u042B': 'X',\n  '\u042C': 'B',\n  '\u042D': '3',\n  '\u042E': 'X',\n  '\u042F': 'R',\n  '\u0430': 'a',\n  '\u0431': 'b',\n  '\u0432': 'a',\n  '\u0433': 'r',\n  '\u0434': 'y',\n  '\u0435': 'e',\n  '\u0436': 'm',\n  '\u0437': 'e',\n  '\u0438': 'n',\n  '\u0439': 'n',\n  '\u043A': 'n',\n  '\u043B': 'n',\n  '\u043C': 'm',\n  '\u043D': 'n',\n  '\u043E': 'o',\n  '\u043F': 'n',\n  '\u0440': 'p',\n  '\u0441': 'c',\n  '\u0442': 'o',\n  '\u0443': 'y',\n  '\u0444': 'b',\n  '\u0445': 'x',\n  '\u0446': 'n',\n  '\u0447': 'n',\n  '\u0448': 'w',\n  '\u0449': 'w',\n  '\u044A': 'a',\n  '\u044B': 'm',\n  '\u044C': 'a',\n  '\u044D': 'e',\n  '\u044E': 'm',\n  '\u044F': 'r'\n};\n\n/**\n * This function adds new font metrics to default metricMap\n * It can also override existing metrics\n */\nfunction setFontMetrics(fontName, metrics) {\n  fontMetricsData[fontName] = metrics;\n}\n/**\n * This function is a convenience function for looking up information in the\n * metricMap table. It takes a character as a string, and a font.\n *\n * Note: the `width` property may be undefined if fontMetricsData.js wasn't\n * built using `Make extended_metrics`.\n */\n\nfunction getCharacterMetrics(character, font, mode) {\n  if (!fontMetricsData[font]) {\n    throw new Error(\"Font metrics not found for font: \" + font + \".\");\n  }\n\n  var ch = character.charCodeAt(0);\n  var metrics = fontMetricsData[font][ch];\n\n  if (!metrics && character[0] in extraCharacterMap) {\n    ch = extraCharacterMap[character[0]].charCodeAt(0);\n    metrics = fontMetricsData[font][ch];\n  }\n\n  if (!metrics && mode === 'text') {\n    // We don't typically have font metrics for Asian scripts.\n    // But since we support them in text mode, we need to return\n    // some sort of metrics.\n    // So if the character is in a script we support but we\n    // don't have metrics for it, just use the metrics for\n    // the Latin capital letter M. This is close enough because\n    // we (currently) only care about the height of the glyph\n    // not its width.\n    if (supportedCodepoint(ch)) {\n      metrics = fontMetricsData[font][77]; // 77 is the charcode for 'M'\n    }\n  }\n\n  if (metrics) {\n    return {\n      depth: metrics[0],\n      height: metrics[1],\n      italic: metrics[2],\n      skew: metrics[3],\n      width: metrics[4]\n    };\n  }\n}\nvar fontMetricsBySizeIndex = {};\n/**\n * Get the font metrics for a given size.\n */\n\nfunction getGlobalMetrics(size) {\n  var sizeIndex;\n\n  if (size >= 5) {\n    sizeIndex = 0;\n  } else if (size >= 3) {\n    sizeIndex = 1;\n  } else {\n    sizeIndex = 2;\n  }\n\n  if (!fontMetricsBySizeIndex[sizeIndex]) {\n    var metrics = fontMetricsBySizeIndex[sizeIndex] = {\n      cssEmPerMu: sigmasAndXis.quad[sizeIndex] / 18\n    };\n\n    for (var key in sigmasAndXis) {\n      if (sigmasAndXis.hasOwnProperty(key)) {\n        metrics[key] = sigmasAndXis[key][sizeIndex];\n      }\n    }\n  }\n\n  return fontMetricsBySizeIndex[sizeIndex];\n}\n\n/**\n * This file contains information about the options that the Parser carries\n * around with it while parsing. Data is held in an `Options` object, and when\n * recursing, a new `Options` object can be created with the `.with*` and\n * `.reset` functions.\n */\nvar sizeStyleMap = [// Each element contains [textsize, scriptsize, scriptscriptsize].\n// The size mappings are taken from TeX with \\normalsize=10pt.\n[1, 1, 1], // size1: [5, 5, 5]              \\tiny\n[2, 1, 1], // size2: [6, 5, 5]\n[3, 1, 1], // size3: [7, 5, 5]              \\scriptsize\n[4, 2, 1], // size4: [8, 6, 5]              \\footnotesize\n[5, 2, 1], // size5: [9, 6, 5]              \\small\n[6, 3, 1], // size6: [10, 7, 5]             \\normalsize\n[7, 4, 2], // size7: [12, 8, 6]             \\large\n[8, 6, 3], // size8: [14.4, 10, 7]          \\Large\n[9, 7, 6], // size9: [17.28, 12, 10]        \\LARGE\n[10, 8, 7], // size10: [20.74, 14.4, 12]     \\huge\n[11, 10, 9] // size11: [24.88, 20.74, 17.28] \\HUGE\n];\nvar sizeMultipliers = [// fontMetrics.js:getGlobalMetrics also uses size indexes, so if\n// you change size indexes, change that function.\n0.5, 0.6, 0.7, 0.8, 0.9, 1.0, 1.2, 1.44, 1.728, 2.074, 2.488];\n\nvar sizeAtStyle = function sizeAtStyle(size, style) {\n  return style.size < 2 ? size : sizeStyleMap[size - 1][style.size - 1];\n}; // In these types, \"\" (empty string) means \"no change\".\n\n\n/**\n * This is the main options class. It contains the current style, size, color,\n * and font.\n *\n * Options objects should not be modified. To create a new Options with\n * different properties, call a `.having*` method.\n */\nclass Options {\n  // A font family applies to a group of fonts (i.e. SansSerif), while a font\n  // represents a specific font (i.e. SansSerif Bold).\n  // See: https://tex.stackexchange.com/questions/22350/difference-between-textrm-and-mathrm\n\n  /**\n   * The base size index.\n   */\n  constructor(data) {\n    this.style = void 0;\n    this.color = void 0;\n    this.size = void 0;\n    this.textSize = void 0;\n    this.phantom = void 0;\n    this.font = void 0;\n    this.fontFamily = void 0;\n    this.fontWeight = void 0;\n    this.fontShape = void 0;\n    this.sizeMultiplier = void 0;\n    this.maxSize = void 0;\n    this.minRuleThickness = void 0;\n    this._fontMetrics = void 0;\n    this.style = data.style;\n    this.color = data.color;\n    this.size = data.size || Options.BASESIZE;\n    this.textSize = data.textSize || this.size;\n    this.phantom = !!data.phantom;\n    this.font = data.font || \"\";\n    this.fontFamily = data.fontFamily || \"\";\n    this.fontWeight = data.fontWeight || '';\n    this.fontShape = data.fontShape || '';\n    this.sizeMultiplier = sizeMultipliers[this.size - 1];\n    this.maxSize = data.maxSize;\n    this.minRuleThickness = data.minRuleThickness;\n    this._fontMetrics = undefined;\n  }\n  /**\n   * Returns a new options object with the same properties as \"this\".  Properties\n   * from \"extension\" will be copied to the new options object.\n   */\n\n\n  extend(extension) {\n    var data = {\n      style: this.style,\n      size: this.size,\n      textSize: this.textSize,\n      color: this.color,\n      phantom: this.phantom,\n      font: this.font,\n      fontFamily: this.fontFamily,\n      fontWeight: this.fontWeight,\n      fontShape: this.fontShape,\n      maxSize: this.maxSize,\n      minRuleThickness: this.minRuleThickness\n    };\n\n    for (var key in extension) {\n      if (extension.hasOwnProperty(key)) {\n        data[key] = extension[key];\n      }\n    }\n\n    return new Options(data);\n  }\n  /**\n   * Return an options object with the given style. If `this.style === style`,\n   * returns `this`.\n   */\n\n\n  havingStyle(style) {\n    if (this.style === style) {\n      return this;\n    } else {\n      return this.extend({\n        style: style,\n        size: sizeAtStyle(this.textSize, style)\n      });\n    }\n  }\n  /**\n   * Return an options object with a cramped version of the current style. If\n   * the current style is cramped, returns `this`.\n   */\n\n\n  havingCrampedStyle() {\n    return this.havingStyle(this.style.cramp());\n  }\n  /**\n   * Return an options object with the given size and in at least `\\textstyle`.\n   * Returns `this` if appropriate.\n   */\n\n\n  havingSize(size) {\n    if (this.size === size && this.textSize === size) {\n      return this;\n    } else {\n      return this.extend({\n        style: this.style.text(),\n        size: size,\n        textSize: size,\n        sizeMultiplier: sizeMultipliers[size - 1]\n      });\n    }\n  }\n  /**\n   * Like `this.havingSize(BASESIZE).havingStyle(style)`. If `style` is omitted,\n   * changes to at least `\\textstyle`.\n   */\n\n\n  havingBaseStyle(style) {\n    style = style || this.style.text();\n    var wantSize = sizeAtStyle(Options.BASESIZE, style);\n\n    if (this.size === wantSize && this.textSize === Options.BASESIZE && this.style === style) {\n      return this;\n    } else {\n      return this.extend({\n        style: style,\n        size: wantSize\n      });\n    }\n  }\n  /**\n   * Remove the effect of sizing changes such as \\Huge.\n   * Keep the effect of the current style, such as \\scriptstyle.\n   */\n\n\n  havingBaseSizing() {\n    var size;\n\n    switch (this.style.id) {\n      case 4:\n      case 5:\n        size = 3; // normalsize in scriptstyle\n\n        break;\n\n      case 6:\n      case 7:\n        size = 1; // normalsize in scriptscriptstyle\n\n        break;\n\n      default:\n        size = 6;\n      // normalsize in textstyle or displaystyle\n    }\n\n    return this.extend({\n      style: this.style.text(),\n      size: size\n    });\n  }\n  /**\n   * Create a new options object with the given color.\n   */\n\n\n  withColor(color) {\n    return this.extend({\n      color: color\n    });\n  }\n  /**\n   * Create a new options object with \"phantom\" set to true.\n   */\n\n\n  withPhantom() {\n    return this.extend({\n      phantom: true\n    });\n  }\n  /**\n   * Creates a new options object with the given math font or old text font.\n   * @type {[type]}\n   */\n\n\n  withFont(font) {\n    return this.extend({\n      font\n    });\n  }\n  /**\n   * Create a new options objects with the given fontFamily.\n   */\n\n\n  withTextFontFamily(fontFamily) {\n    return this.extend({\n      fontFamily,\n      font: \"\"\n    });\n  }\n  /**\n   * Creates a new options object with the given font weight\n   */\n\n\n  withTextFontWeight(fontWeight) {\n    return this.extend({\n      fontWeight,\n      font: \"\"\n    });\n  }\n  /**\n   * Creates a new options object with the given font weight\n   */\n\n\n  withTextFontShape(fontShape) {\n    return this.extend({\n      fontShape,\n      font: \"\"\n    });\n  }\n  /**\n   * Return the CSS sizing classes required to switch from enclosing options\n   * `oldOptions` to `this`. Returns an array of classes.\n   */\n\n\n  sizingClasses(oldOptions) {\n    if (oldOptions.size !== this.size) {\n      return [\"sizing\", \"reset-size\" + oldOptions.size, \"size\" + this.size];\n    } else {\n      return [];\n    }\n  }\n  /**\n   * Return the CSS sizing classes required to switch to the base size. Like\n   * `this.havingSize(BASESIZE).sizingClasses(this)`.\n   */\n\n\n  baseSizingClasses() {\n    if (this.size !== Options.BASESIZE) {\n      return [\"sizing\", \"reset-size\" + this.size, \"size\" + Options.BASESIZE];\n    } else {\n      return [];\n    }\n  }\n  /**\n   * Return the font metrics for this size.\n   */\n\n\n  fontMetrics() {\n    if (!this._fontMetrics) {\n      this._fontMetrics = getGlobalMetrics(this.size);\n    }\n\n    return this._fontMetrics;\n  }\n  /**\n   * Gets the CSS color of the current options object\n   */\n\n\n  getColor() {\n    if (this.phantom) {\n      return \"transparent\";\n    } else {\n      return this.color;\n    }\n  }\n\n}\n\nOptions.BASESIZE = 6;\n\n/**\n * This file does conversion between units.  In particular, it provides\n * calculateSize to convert other units into ems.\n */\n// Thus, multiplying a length by this number converts the length from units\n// into pts.  Dividing the result by ptPerEm gives the number of ems\n// *assuming* a font size of ptPerEm (normal size, normal style).\n\nvar ptPerUnit = {\n  // https://en.wikibooks.org/wiki/LaTeX/Lengths and\n  // https://tex.stackexchange.com/a/8263\n  \"pt\": 1,\n  // TeX point\n  \"mm\": 7227 / 2540,\n  // millimeter\n  \"cm\": 7227 / 254,\n  // centimeter\n  \"in\": 72.27,\n  // inch\n  \"bp\": 803 / 800,\n  // big (PostScript) points\n  \"pc\": 12,\n  // pica\n  \"dd\": 1238 / 1157,\n  // didot\n  \"cc\": 14856 / 1157,\n  // cicero (12 didot)\n  \"nd\": 685 / 642,\n  // new didot\n  \"nc\": 1370 / 107,\n  // new cicero (12 new didot)\n  \"sp\": 1 / 65536,\n  // scaled point (TeX's internal smallest unit)\n  // https://tex.stackexchange.com/a/41371\n  \"px\": 803 / 800 // \\pdfpxdimen defaults to 1 bp in pdfTeX and LuaTeX\n\n}; // Dictionary of relative units, for fast validity testing.\n\nvar relativeUnit = {\n  \"ex\": true,\n  \"em\": true,\n  \"mu\": true\n};\n\n/**\n * Determine whether the specified unit (either a string defining the unit\n * or a \"size\" parse node containing a unit field) is valid.\n */\nvar validUnit = function validUnit(unit) {\n  if (typeof unit !== \"string\") {\n    unit = unit.unit;\n  }\n\n  return unit in ptPerUnit || unit in relativeUnit || unit === \"ex\";\n};\n/*\n * Convert a \"size\" parse node (with numeric \"number\" and string \"unit\" fields,\n * as parsed by functions.js argType \"size\") into a CSS em value for the\n * current style/scale.  `options` gives the current options.\n */\n\nvar calculateSize = function calculateSize(sizeValue, options) {\n  var scale;\n\n  if (sizeValue.unit in ptPerUnit) {\n    // Absolute units\n    scale = ptPerUnit[sizeValue.unit] // Convert unit to pt\n    / options.fontMetrics().ptPerEm // Convert pt to CSS em\n    / options.sizeMultiplier; // Unscale to make absolute units\n  } else if (sizeValue.unit === \"mu\") {\n    // `mu` units scale with scriptstyle/scriptscriptstyle.\n    scale = options.fontMetrics().cssEmPerMu;\n  } else {\n    // Other relative units always refer to the *textstyle* font\n    // in the current size.\n    var unitOptions;\n\n    if (options.style.isTight()) {\n      // isTight() means current style is script/scriptscript.\n      unitOptions = options.havingStyle(options.style.text());\n    } else {\n      unitOptions = options;\n    } // TODO: In TeX these units are relative to the quad of the current\n    // *text* font, e.g. cmr10. KaTeX instead uses values from the\n    // comparably-sized *Computer Modern symbol* font. At 10pt, these\n    // match. At 7pt and 5pt, they differ: cmr7=1.138894, cmsy7=1.170641;\n    // cmr5=1.361133, cmsy5=1.472241. Consider $\\scriptsize a\\kern1emb$.\n    // TeX \\showlists shows a kern of 1.13889 * fontsize;\n    // KaTeX shows a kern of 1.171 * fontsize.\n\n\n    if (sizeValue.unit === \"ex\") {\n      scale = unitOptions.fontMetrics().xHeight;\n    } else if (sizeValue.unit === \"em\") {\n      scale = unitOptions.fontMetrics().quad;\n    } else {\n      throw new ParseError(\"Invalid unit: '\" + sizeValue.unit + \"'\");\n    }\n\n    if (unitOptions !== options) {\n      scale *= unitOptions.sizeMultiplier / options.sizeMultiplier;\n    }\n  }\n\n  return Math.min(sizeValue.number * scale, options.maxSize);\n};\n/**\n * Round `n` to 4 decimal places, or to the nearest 1/10,000th em. See\n * https://github.com/KaTeX/KaTeX/pull/2460.\n */\n\nvar makeEm = function makeEm(n) {\n  return +n.toFixed(4) + \"em\";\n};\n\n/**\n * These objects store the data about the DOM nodes we create, as well as some\n * extra data. They can then be transformed into real DOM nodes with the\n * `toNode` function or HTML markup using `toMarkup`. They are useful for both\n * storing extra properties on the nodes, as well as providing a way to easily\n * work with the DOM.\n *\n * Similar functions for working with MathML nodes exist in mathMLTree.js.\n *\n * TODO: refactor `span` and `anchor` into common superclass when\n * target environments support class inheritance\n */\n\n/**\n * Create an HTML className based on a list of classes. In addition to joining\n * with spaces, we also remove empty classes.\n */\nvar createClass = function createClass(classes) {\n  return classes.filter(cls => cls).join(\" \");\n};\n\nvar initNode = function initNode(classes, options, style) {\n  this.classes = classes || [];\n  this.attributes = {};\n  this.height = 0;\n  this.depth = 0;\n  this.maxFontSize = 0;\n  this.style = style || {};\n\n  if (options) {\n    if (options.style.isTight()) {\n      this.classes.push(\"mtight\");\n    }\n\n    var color = options.getColor();\n\n    if (color) {\n      this.style.color = color;\n    }\n  }\n};\n/**\n * Convert into an HTML node\n */\n\n\nvar toNode = function toNode(tagName) {\n  var node = document.createElement(tagName); // Apply the class\n\n  node.className = createClass(this.classes); // Apply inline styles\n\n  for (var style in this.style) {\n    if (this.style.hasOwnProperty(style)) {\n      // $FlowFixMe Flow doesn't seem to understand span.style's type.\n      node.style[style] = this.style[style];\n    }\n  } // Apply attributes\n\n\n  for (var attr in this.attributes) {\n    if (this.attributes.hasOwnProperty(attr)) {\n      node.setAttribute(attr, this.attributes[attr]);\n    }\n  } // Append the children, also as HTML nodes\n\n\n  for (var i = 0; i < this.children.length; i++) {\n    node.appendChild(this.children[i].toNode());\n  }\n\n  return node;\n};\n/**\n * https://w3c.github.io/html-reference/syntax.html#syntax-attributes\n *\n * > Attribute Names must consist of one or more characters\n * other than the space characters, U+0000 NULL,\n * '\"', \"'\", \">\", \"/\", \"=\", the control characters,\n * and any characters that are not defined by Unicode.\n */\n\n\nvar invalidAttributeNameRegex = /[\\s\"'>/=\\x00-\\x1f]/;\n/**\n * Convert into an HTML markup string\n */\n\nvar toMarkup = function toMarkup(tagName) {\n  var markup = \"<\" + tagName; // Add the class\n\n  if (this.classes.length) {\n    markup += \" class=\\\"\" + utils.escape(createClass(this.classes)) + \"\\\"\";\n  }\n\n  var styles = \"\"; // Add the styles, after hyphenation\n\n  for (var style in this.style) {\n    if (this.style.hasOwnProperty(style)) {\n      styles += utils.hyphenate(style) + \":\" + this.style[style] + \";\";\n    }\n  }\n\n  if (styles) {\n    markup += \" style=\\\"\" + utils.escape(styles) + \"\\\"\";\n  } // Add the attributes\n\n\n  for (var attr in this.attributes) {\n    if (this.attributes.hasOwnProperty(attr)) {\n      if (invalidAttributeNameRegex.test(attr)) {\n        throw new ParseError(\"Invalid attribute name '\" + attr + \"'\");\n      }\n\n      markup += \" \" + attr + \"=\\\"\" + utils.escape(this.attributes[attr]) + \"\\\"\";\n    }\n  }\n\n  markup += \">\"; // Add the markup of the children, also as markup\n\n  for (var i = 0; i < this.children.length; i++) {\n    markup += this.children[i].toMarkup();\n  }\n\n  markup += \"</\" + tagName + \">\";\n  return markup;\n}; // Making the type below exact with all optional fields doesn't work due to\n// - https://github.com/facebook/flow/issues/4582\n// - https://github.com/facebook/flow/issues/5688\n// However, since *all* fields are optional, $Shape<> works as suggested in 5688\n// above.\n// This type does not include all CSS properties. Additional properties should\n// be added as needed.\n\n\n/**\n * This node represents a span node, with a className, a list of children, and\n * an inline style. It also contains information about its height, depth, and\n * maxFontSize.\n *\n * Represents two types with different uses: SvgSpan to wrap an SVG and DomSpan\n * otherwise. This typesafety is important when HTML builders access a span's\n * children.\n */\nclass Span {\n  constructor(classes, children, options, style) {\n    this.children = void 0;\n    this.attributes = void 0;\n    this.classes = void 0;\n    this.height = void 0;\n    this.depth = void 0;\n    this.width = void 0;\n    this.maxFontSize = void 0;\n    this.style = void 0;\n    initNode.call(this, classes, options, style);\n    this.children = children || [];\n  }\n  /**\n   * Sets an arbitrary attribute on the span. Warning: use this wisely. Not\n   * all browsers support attributes the same, and having too many custom\n   * attributes is probably bad.\n   */\n\n\n  setAttribute(attribute, value) {\n    this.attributes[attribute] = value;\n  }\n\n  hasClass(className) {\n    return utils.contains(this.classes, className);\n  }\n\n  toNode() {\n    return toNode.call(this, \"span\");\n  }\n\n  toMarkup() {\n    return toMarkup.call(this, \"span\");\n  }\n\n}\n/**\n * This node represents an anchor (<a>) element with a hyperlink.  See `span`\n * for further details.\n */\n\nclass Anchor {\n  constructor(href, classes, children, options) {\n    this.children = void 0;\n    this.attributes = void 0;\n    this.classes = void 0;\n    this.height = void 0;\n    this.depth = void 0;\n    this.maxFontSize = void 0;\n    this.style = void 0;\n    initNode.call(this, classes, options);\n    this.children = children || [];\n    this.setAttribute('href', href);\n  }\n\n  setAttribute(attribute, value) {\n    this.attributes[attribute] = value;\n  }\n\n  hasClass(className) {\n    return utils.contains(this.classes, className);\n  }\n\n  toNode() {\n    return toNode.call(this, \"a\");\n  }\n\n  toMarkup() {\n    return toMarkup.call(this, \"a\");\n  }\n\n}\n/**\n * This node represents an image embed (<img>) element.\n */\n\nclass Img {\n  constructor(src, alt, style) {\n    this.src = void 0;\n    this.alt = void 0;\n    this.classes = void 0;\n    this.height = void 0;\n    this.depth = void 0;\n    this.maxFontSize = void 0;\n    this.style = void 0;\n    this.alt = alt;\n    this.src = src;\n    this.classes = [\"mord\"];\n    this.style = style;\n  }\n\n  hasClass(className) {\n    return utils.contains(this.classes, className);\n  }\n\n  toNode() {\n    var node = document.createElement(\"img\");\n    node.src = this.src;\n    node.alt = this.alt;\n    node.className = \"mord\"; // Apply inline styles\n\n    for (var style in this.style) {\n      if (this.style.hasOwnProperty(style)) {\n        // $FlowFixMe\n        node.style[style] = this.style[style];\n      }\n    }\n\n    return node;\n  }\n\n  toMarkup() {\n    var markup = \"<img src=\\\"\" + utils.escape(this.src) + \"\\\"\" + (\" alt=\\\"\" + utils.escape(this.alt) + \"\\\"\"); // Add the styles, after hyphenation\n\n    var styles = \"\";\n\n    for (var style in this.style) {\n      if (this.style.hasOwnProperty(style)) {\n        styles += utils.hyphenate(style) + \":\" + this.style[style] + \";\";\n      }\n    }\n\n    if (styles) {\n      markup += \" style=\\\"\" + utils.escape(styles) + \"\\\"\";\n    }\n\n    markup += \"'/>\";\n    return markup;\n  }\n\n}\nvar iCombinations = {\n  '\u00EE': '\\u0131\\u0302',\n  '\u00EF': '\\u0131\\u0308',\n  '\u00ED': '\\u0131\\u0301',\n  // '\u012B': '\\u0131\\u0304', // enable when we add Extended Latin\n  '\u00EC': '\\u0131\\u0300'\n};\n/**\n * A symbol node contains information about a single symbol. It either renders\n * to a single text node, or a span with a single text node in it, depending on\n * whether it has CSS classes, styles, or needs italic correction.\n */\n\nclass SymbolNode {\n  constructor(text, height, depth, italic, skew, width, classes, style) {\n    this.text = void 0;\n    this.height = void 0;\n    this.depth = void 0;\n    this.italic = void 0;\n    this.skew = void 0;\n    this.width = void 0;\n    this.maxFontSize = void 0;\n    this.classes = void 0;\n    this.style = void 0;\n    this.text = text;\n    this.height = height || 0;\n    this.depth = depth || 0;\n    this.italic = italic || 0;\n    this.skew = skew || 0;\n    this.width = width || 0;\n    this.classes = classes || [];\n    this.style = style || {};\n    this.maxFontSize = 0; // Mark text from non-Latin scripts with specific classes so that we\n    // can specify which fonts to use.  This allows us to render these\n    // characters with a serif font in situations where the browser would\n    // either default to a sans serif or render a placeholder character.\n    // We use CSS class names like cjk_fallback, hangul_fallback and\n    // brahmic_fallback. See ./unicodeScripts.js for the set of possible\n    // script names\n\n    var script = scriptFromCodepoint(this.text.charCodeAt(0));\n\n    if (script) {\n      this.classes.push(script + \"_fallback\");\n    }\n\n    if (/[\u00EE\u00EF\u00ED\u00EC]/.test(this.text)) {\n      // add \u012B when we add Extended Latin\n      this.text = iCombinations[this.text];\n    }\n  }\n\n  hasClass(className) {\n    return utils.contains(this.classes, className);\n  }\n  /**\n   * Creates a text node or span from a symbol node. Note that a span is only\n   * created if it is needed.\n   */\n\n\n  toNode() {\n    var node = document.createTextNode(this.text);\n    var span = null;\n\n    if (this.italic > 0) {\n      span = document.createElement(\"span\");\n      span.style.marginRight = makeEm(this.italic);\n    }\n\n    if (this.classes.length > 0) {\n      span = span || document.createElement(\"span\");\n      span.className = createClass(this.classes);\n    }\n\n    for (var style in this.style) {\n      if (this.style.hasOwnProperty(style)) {\n        span = span || document.createElement(\"span\"); // $FlowFixMe Flow doesn't seem to understand span.style's type.\n\n        span.style[style] = this.style[style];\n      }\n    }\n\n    if (span) {\n      span.appendChild(node);\n      return span;\n    } else {\n      return node;\n    }\n  }\n  /**\n   * Creates markup for a symbol node.\n   */\n\n\n  toMarkup() {\n    // TODO(alpert): More duplication than I'd like from\n    // span.prototype.toMarkup and symbolNode.prototype.toNode...\n    var needsSpan = false;\n    var markup = \"<span\";\n\n    if (this.classes.length) {\n      needsSpan = true;\n      markup += \" class=\\\"\";\n      markup += utils.escape(createClass(this.classes));\n      markup += \"\\\"\";\n    }\n\n    var styles = \"\";\n\n    if (this.italic > 0) {\n      styles += \"margin-right:\" + this.italic + \"em;\";\n    }\n\n    for (var style in this.style) {\n      if (this.style.hasOwnProperty(style)) {\n        styles += utils.hyphenate(style) + \":\" + this.style[style] + \";\";\n      }\n    }\n\n    if (styles) {\n      needsSpan = true;\n      markup += \" style=\\\"\" + utils.escape(styles) + \"\\\"\";\n    }\n\n    var escaped = utils.escape(this.text);\n\n    if (needsSpan) {\n      markup += \">\";\n      markup += escaped;\n      markup += \"</span>\";\n      return markup;\n    } else {\n      return escaped;\n    }\n  }\n\n}\n/**\n * SVG nodes are used to render stretchy wide elements.\n */\n\nclass SvgNode {\n  constructor(children, attributes) {\n    this.children = void 0;\n    this.attributes = void 0;\n    this.children = children || [];\n    this.attributes = attributes || {};\n  }\n\n  toNode() {\n    var svgNS = \"http://www.w3.org/2000/svg\";\n    var node = document.createElementNS(svgNS, \"svg\"); // Apply attributes\n\n    for (var attr in this.attributes) {\n      if (Object.prototype.hasOwnProperty.call(this.attributes, attr)) {\n        node.setAttribute(attr, this.attributes[attr]);\n      }\n    }\n\n    for (var i = 0; i < this.children.length; i++) {\n      node.appendChild(this.children[i].toNode());\n    }\n\n    return node;\n  }\n\n  toMarkup() {\n    var markup = \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\"\"; // Apply attributes\n\n    for (var attr in this.attributes) {\n      if (Object.prototype.hasOwnProperty.call(this.attributes, attr)) {\n        markup += \" \" + attr + \"=\\\"\" + utils.escape(this.attributes[attr]) + \"\\\"\";\n      }\n    }\n\n    markup += \">\";\n\n    for (var i = 0; i < this.children.length; i++) {\n      markup += this.children[i].toMarkup();\n    }\n\n    markup += \"</svg>\";\n    return markup;\n  }\n\n}\nclass PathNode {\n  constructor(pathName, alternate) {\n    this.pathName = void 0;\n    this.alternate = void 0;\n    this.pathName = pathName;\n    this.alternate = alternate; // Used only for \\sqrt, \\phase, & tall delims\n  }\n\n  toNode() {\n    var svgNS = \"http://www.w3.org/2000/svg\";\n    var node = document.createElementNS(svgNS, \"path\");\n\n    if (this.alternate) {\n      node.setAttribute(\"d\", this.alternate);\n    } else {\n      node.setAttribute(\"d\", path[this.pathName]);\n    }\n\n    return node;\n  }\n\n  toMarkup() {\n    if (this.alternate) {\n      return \"<path d=\\\"\" + utils.escape(this.alternate) + \"\\\"/>\";\n    } else {\n      return \"<path d=\\\"\" + utils.escape(path[this.pathName]) + \"\\\"/>\";\n    }\n  }\n\n}\nclass LineNode {\n  constructor(attributes) {\n    this.attributes = void 0;\n    this.attributes = attributes || {};\n  }\n\n  toNode() {\n    var svgNS = \"http://www.w3.org/2000/svg\";\n    var node = document.createElementNS(svgNS, \"line\"); // Apply attributes\n\n    for (var attr in this.attributes) {\n      if (Object.prototype.hasOwnProperty.call(this.attributes, attr)) {\n        node.setAttribute(attr, this.attributes[attr]);\n      }\n    }\n\n    return node;\n  }\n\n  toMarkup() {\n    var markup = \"<line\";\n\n    for (var attr in this.attributes) {\n      if (Object.prototype.hasOwnProperty.call(this.attributes, attr)) {\n        markup += \" \" + attr + \"=\\\"\" + utils.escape(this.attributes[attr]) + \"\\\"\";\n      }\n    }\n\n    markup += \"/>\";\n    return markup;\n  }\n\n}\nfunction assertSymbolDomNode(group) {\n  if (group instanceof SymbolNode) {\n    return group;\n  } else {\n    throw new Error(\"Expected symbolNode but got \" + String(group) + \".\");\n  }\n}\nfunction assertSpan(group) {\n  if (group instanceof Span) {\n    return group;\n  } else {\n    throw new Error(\"Expected span<HtmlDomNode> but got \" + String(group) + \".\");\n  }\n}\n\n/**\n * This file holds a list of all no-argument functions and single-character\n * symbols (like 'a' or ';').\n *\n * For each of the symbols, there are three properties they can have:\n * - font (required): the font to be used for this symbol. Either \"main\" (the\n     normal font), or \"ams\" (the ams fonts).\n * - group (required): the ParseNode group type the symbol should have (i.e.\n     \"textord\", \"mathord\", etc).\n     See https://github.com/KaTeX/KaTeX/wiki/Examining-TeX#group-types\n * - replace: the character that this symbol or function should be\n *   replaced with (i.e. \"\\phi\" has a replace value of \"\\u03d5\", the phi\n *   character in the main font).\n *\n * The outermost map in the table indicates what mode the symbols should be\n * accepted in (e.g. \"math\" or \"text\").\n */\n// Some of these have a \"-token\" suffix since these are also used as `ParseNode`\n// types for raw text tokens, and we want to avoid conflicts with higher-level\n// `ParseNode` types. These `ParseNode`s are constructed within `Parser` by\n// looking up the `symbols` map.\nvar ATOMS = {\n  \"bin\": 1,\n  \"close\": 1,\n  \"inner\": 1,\n  \"open\": 1,\n  \"punct\": 1,\n  \"rel\": 1\n};\nvar NON_ATOMS = {\n  \"accent-token\": 1,\n  \"mathord\": 1,\n  \"op-token\": 1,\n  \"spacing\": 1,\n  \"textord\": 1\n};\nvar symbols = {\n  \"math\": {},\n  \"text\": {}\n};\n/** `acceptUnicodeChar = true` is only applicable if `replace` is set. */\n\nfunction defineSymbol(mode, font, group, replace, name, acceptUnicodeChar) {\n  symbols[mode][name] = {\n    font,\n    group,\n    replace\n  };\n\n  if (acceptUnicodeChar && replace) {\n    symbols[mode][replace] = symbols[mode][name];\n  }\n} // Some abbreviations for commonly used strings.\n// This helps minify the code, and also spotting typos using jshint.\n// modes:\n\nvar math = \"math\";\nvar text = \"text\"; // fonts:\n\nvar main = \"main\";\nvar ams = \"ams\"; // groups:\n\nvar accent = \"accent-token\";\nvar bin = \"bin\";\nvar close = \"close\";\nvar inner = \"inner\";\nvar mathord = \"mathord\";\nvar op = \"op-token\";\nvar open = \"open\";\nvar punct = \"punct\";\nvar rel = \"rel\";\nvar spacing = \"spacing\";\nvar textord = \"textord\"; // Now comes the symbol table\n// Relation Symbols\n\ndefineSymbol(math, main, rel, \"\\u2261\", \"\\\\equiv\", true);\ndefineSymbol(math, main, rel, \"\\u227a\", \"\\\\prec\", true);\ndefineSymbol(math, main, rel, \"\\u227b\", \"\\\\succ\", true);\ndefineSymbol(math, main, rel, \"\\u223c\", \"\\\\sim\", true);\ndefineSymbol(math, main, rel, \"\\u22a5\", \"\\\\perp\");\ndefineSymbol(math, main, rel, \"\\u2aaf\", \"\\\\preceq\", true);\ndefineSymbol(math, main, rel, \"\\u2ab0\", \"\\\\succeq\", true);\ndefineSymbol(math, main, rel, \"\\u2243\", \"\\\\simeq\", true);\ndefineSymbol(math, main, rel, \"\\u2223\", \"\\\\mid\", true);\ndefineSymbol(math, main, rel, \"\\u226a\", \"\\\\ll\", true);\ndefineSymbol(math, main, rel, \"\\u226b\", \"\\\\gg\", true);\ndefineSymbol(math, main, rel, \"\\u224d\", \"\\\\asymp\", true);\ndefineSymbol(math, main, rel, \"\\u2225\", \"\\\\parallel\");\ndefineSymbol(math, main, rel, \"\\u22c8\", \"\\\\bowtie\", true);\ndefineSymbol(math, main, rel, \"\\u2323\", \"\\\\smile\", true);\ndefineSymbol(math, main, rel, \"\\u2291\", \"\\\\sqsubseteq\", true);\ndefineSymbol(math, main, rel, \"\\u2292\", \"\\\\sqsupseteq\", true);\ndefineSymbol(math, main, rel, \"\\u2250\", \"\\\\doteq\", true);\ndefineSymbol(math, main, rel, \"\\u2322\", \"\\\\frown\", true);\ndefineSymbol(math, main, rel, \"\\u220b\", \"\\\\ni\", true);\ndefineSymbol(math, main, rel, \"\\u221d\", \"\\\\propto\", true);\ndefineSymbol(math, main, rel, \"\\u22a2\", \"\\\\vdash\", true);\ndefineSymbol(math, main, rel, \"\\u22a3\", \"\\\\dashv\", true);\ndefineSymbol(math, main, rel, \"\\u220b\", \"\\\\owns\"); // Punctuation\n\ndefineSymbol(math, main, punct, \"\\u002e\", \"\\\\ldotp\");\ndefineSymbol(math, main, punct, \"\\u22c5\", \"\\\\cdotp\"); // Misc Symbols\n\ndefineSymbol(math, main, textord, \"\\u0023\", \"\\\\#\");\ndefineSymbol(text, main, textord, \"\\u0023\", \"\\\\#\");\ndefineSymbol(math, main, textord, \"\\u0026\", \"\\\\&\");\ndefineSymbol(text, main, textord, \"\\u0026\", \"\\\\&\");\ndefineSymbol(math, main, textord, \"\\u2135\", \"\\\\aleph\", true);\ndefineSymbol(math, main, textord, \"\\u2200\", \"\\\\forall\", true);\ndefineSymbol(math, main, textord, \"\\u210f\", \"\\\\hbar\", true);\ndefineSymbol(math, main, textord, \"\\u2203\", \"\\\\exists\", true);\ndefineSymbol(math, main, textord, \"\\u2207\", \"\\\\nabla\", true);\ndefineSymbol(math, main, textord, \"\\u266d\", \"\\\\flat\", true);\ndefineSymbol(math, main, textord, \"\\u2113\", \"\\\\ell\", true);\ndefineSymbol(math, main, textord, \"\\u266e\", \"\\\\natural\", true);\ndefineSymbol(math, main, textord, \"\\u2663\", \"\\\\clubsuit\", true);\ndefineSymbol(math, main, textord, \"\\u2118\", \"\\\\wp\", true);\ndefineSymbol(math, main, textord, \"\\u266f\", \"\\\\sharp\", true);\ndefineSymbol(math, main, textord, \"\\u2662\", \"\\\\diamondsuit\", true);\ndefineSymbol(math, main, textord, \"\\u211c\", \"\\\\Re\", true);\ndefineSymbol(math, main, textord, \"\\u2661\", \"\\\\heartsuit\", true);\ndefineSymbol(math, main, textord, \"\\u2111\", \"\\\\Im\", true);\ndefineSymbol(math, main, textord, \"\\u2660\", \"\\\\spadesuit\", true);\ndefineSymbol(math, main, textord, \"\\u00a7\", \"\\\\S\", true);\ndefineSymbol(text, main, textord, \"\\u00a7\", \"\\\\S\");\ndefineSymbol(math, main, textord, \"\\u00b6\", \"\\\\P\", true);\ndefineSymbol(text, main, textord, \"\\u00b6\", \"\\\\P\"); // Math and Text\n\ndefineSymbol(math, main, textord, \"\\u2020\", \"\\\\dag\");\ndefineSymbol(text, main, textord, \"\\u2020\", \"\\\\dag\");\ndefineSymbol(text, main, textord, \"\\u2020\", \"\\\\textdagger\");\ndefineSymbol(math, main, textord, \"\\u2021\", \"\\\\ddag\");\ndefineSymbol(text, main, textord, \"\\u2021\", \"\\\\ddag\");\ndefineSymbol(text, main, textord, \"\\u2021\", \"\\\\textdaggerdbl\"); // Large Delimiters\n\ndefineSymbol(math, main, close, \"\\u23b1\", \"\\\\rmoustache\", true);\ndefineSymbol(math, main, open, \"\\u23b0\", \"\\\\lmoustache\", true);\ndefineSymbol(math, main, close, \"\\u27ef\", \"\\\\rgroup\", true);\ndefineSymbol(math, main, open, \"\\u27ee\", \"\\\\lgroup\", true); // Binary Operators\n\ndefineSymbol(math, main, bin, \"\\u2213\", \"\\\\mp\", true);\ndefineSymbol(math, main, bin, \"\\u2296\", \"\\\\ominus\", true);\ndefineSymbol(math, main, bin, \"\\u228e\", \"\\\\uplus\", true);\ndefineSymbol(math, main, bin, \"\\u2293\", \"\\\\sqcap\", true);\ndefineSymbol(math, main, bin, \"\\u2217\", \"\\\\ast\");\ndefineSymbol(math, main, bin, \"\\u2294\", \"\\\\sqcup\", true);\ndefineSymbol(math, main, bin, \"\\u25ef\", \"\\\\bigcirc\", true);\ndefineSymbol(math, main, bin, \"\\u2219\", \"\\\\bullet\", true);\ndefineSymbol(math, main, bin, \"\\u2021\", \"\\\\ddagger\");\ndefineSymbol(math, main, bin, \"\\u2240\", \"\\\\wr\", true);\ndefineSymbol(math, main, bin, \"\\u2a3f\", \"\\\\amalg\");\ndefineSymbol(math, main, bin, \"\\u0026\", \"\\\\And\"); // from amsmath\n// Arrow Symbols\n\ndefineSymbol(math, main, rel, \"\\u27f5\", \"\\\\longleftarrow\", true);\ndefineSymbol(math, main, rel, \"\\u21d0\", \"\\\\Leftarrow\", true);\ndefineSymbol(math, main, rel, \"\\u27f8\", \"\\\\Longleftarrow\", true);\ndefineSymbol(math, main, rel, \"\\u27f6\", \"\\\\longrightarrow\", true);\ndefineSymbol(math, main, rel, \"\\u21d2\", \"\\\\Rightarrow\", true);\ndefineSymbol(math, main, rel, \"\\u27f9\", \"\\\\Longrightarrow\", true);\ndefineSymbol(math, main, rel, \"\\u2194\", \"\\\\leftrightarrow\", true);\ndefineSymbol(math, main, rel, \"\\u27f7\", \"\\\\longleftrightarrow\", true);\ndefineSymbol(math, main, rel, \"\\u21d4\", \"\\\\Leftrightarrow\", true);\ndefineSymbol(math, main, rel, \"\\u27fa\", \"\\\\Longleftrightarrow\", true);\ndefineSymbol(math, main, rel, \"\\u21a6\", \"\\\\mapsto\", true);\ndefineSymbol(math, main, rel, \"\\u27fc\", \"\\\\longmapsto\", true);\ndefineSymbol(math, main, rel, \"\\u2197\", \"\\\\nearrow\", true);\ndefineSymbol(math, main, rel, \"\\u21a9\", \"\\\\hookleftarrow\", true);\ndefineSymbol(math, main, rel, \"\\u21aa\", \"\\\\hookrightarrow\", true);\ndefineSymbol(math, main, rel, \"\\u2198\", \"\\\\searrow\", true);\ndefineSymbol(math, main, rel, \"\\u21bc\", \"\\\\leftharpoonup\", true);\ndefineSymbol(math, main, rel, \"\\u21c0\", \"\\\\rightharpoonup\", true);\ndefineSymbol(math, main, rel, \"\\u2199\", \"\\\\swarrow\", true);\ndefineSymbol(math, main, rel, \"\\u21bd\", \"\\\\leftharpoondown\", true);\ndefineSymbol(math, main, rel, \"\\u21c1\", \"\\\\rightharpoondown\", true);\ndefineSymbol(math, main, rel, \"\\u2196\", \"\\\\nwarrow\", true);\ndefineSymbol(math, main, rel, \"\\u21cc\", \"\\\\rightleftharpoons\", true); // AMS Negated Binary Relations\n\ndefineSymbol(math, ams, rel, \"\\u226e\", \"\\\\nless\", true); // Symbol names preceded by \"@\" each have a corresponding macro.\n\ndefineSymbol(math, ams, rel, \"\\ue010\", \"\\\\@nleqslant\");\ndefineSymbol(math, ams, rel, \"\\ue011\", \"\\\\@nleqq\");\ndefineSymbol(math, ams, rel, \"\\u2a87\", \"\\\\lneq\", true);\ndefineSymbol(math, ams, rel, \"\\u2268\", \"\\\\lneqq\", true);\ndefineSymbol(math, ams, rel, \"\\ue00c\", \"\\\\@lvertneqq\");\ndefineSymbol(math, ams, rel, \"\\u22e6\", \"\\\\lnsim\", true);\ndefineSymbol(math, ams, rel, \"\\u2a89\", \"\\\\lnapprox\", true);\ndefineSymbol(math, ams, rel, \"\\u2280\", \"\\\\nprec\", true); // unicode-math maps \\u22e0 to \\npreccurlyeq. We'll use the AMS synonym.\n\ndefineSymbol(math, ams, rel, \"\\u22e0\", \"\\\\npreceq\", true);\ndefineSymbol(math, ams, rel, \"\\u22e8\", \"\\\\precnsim\", true);\ndefineSymbol(math, ams, rel, \"\\u2ab9\", \"\\\\precnapprox\", true);\ndefineSymbol(math, ams, rel, \"\\u2241\", \"\\\\nsim\", true);\ndefineSymbol(math, ams, rel, \"\\ue006\", \"\\\\@nshortmid\");\ndefineSymbol(math, ams, rel, \"\\u2224\", \"\\\\nmid\", true);\ndefineSymbol(math, ams, rel, \"\\u22ac\", \"\\\\nvdash\", true);\ndefineSymbol(math, ams, rel, \"\\u22ad\", \"\\\\nvDash\", true);\ndefineSymbol(math, ams, rel, \"\\u22ea\", \"\\\\ntriangleleft\");\ndefineSymbol(math, ams, rel, \"\\u22ec\", \"\\\\ntrianglelefteq\", true);\ndefineSymbol(math, ams, rel, \"\\u228a\", \"\\\\subsetneq\", true);\ndefineSymbol(math, ams, rel, \"\\ue01a\", \"\\\\@varsubsetneq\");\ndefineSymbol(math, ams, rel, \"\\u2acb\", \"\\\\subsetneqq\", true);\ndefineSymbol(math, ams, rel, \"\\ue017\", \"\\\\@varsubsetneqq\");\ndefineSymbol(math, ams, rel, \"\\u226f\", \"\\\\ngtr\", true);\ndefineSymbol(math, ams, rel, \"\\ue00f\", \"\\\\@ngeqslant\");\ndefineSymbol(math, ams, rel, \"\\ue00e\", \"\\\\@ngeqq\");\ndefineSymbol(math, ams, rel, \"\\u2a88\", \"\\\\gneq\", true);\ndefineSymbol(math, ams, rel, \"\\u2269\", \"\\\\gneqq\", true);\ndefineSymbol(math, ams, rel, \"\\ue00d\", \"\\\\@gvertneqq\");\ndefineSymbol(math, ams, rel, \"\\u22e7\", \"\\\\gnsim\", true);\ndefineSymbol(math, ams, rel, \"\\u2a8a\", \"\\\\gnapprox\", true);\ndefineSymbol(math, ams, rel, \"\\u2281\", \"\\\\nsucc\", true); // unicode-math maps \\u22e1 to \\nsucccurlyeq. We'll use the AMS synonym.\n\ndefineSymbol(math, ams, rel, \"\\u22e1\", \"\\\\nsucceq\", true);\ndefineSymbol(math, ams, rel, \"\\u22e9\", \"\\\\succnsim\", true);\ndefineSymbol(math, ams, rel, \"\\u2aba\", \"\\\\succnapprox\", true); // unicode-math maps \\u2246 to \\simneqq. We'll use the AMS synonym.\n\ndefineSymbol(math, ams, rel, \"\\u2246\", \"\\\\ncong\", true);\ndefineSymbol(math, ams, rel, \"\\ue007\", \"\\\\@nshortparallel\");\ndefineSymbol(math, ams, rel, \"\\u2226\", \"\\\\nparallel\", true);\ndefineSymbol(math, ams, rel, \"\\u22af\", \"\\\\nVDash\", true);\ndefineSymbol(math, ams, rel, \"\\u22eb\", \"\\\\ntriangleright\");\ndefineSymbol(math, ams, rel, \"\\u22ed\", \"\\\\ntrianglerighteq\", true);\ndefineSymbol(math, ams, rel, \"\\ue018\", \"\\\\@nsupseteqq\");\ndefineSymbol(math, ams, rel, \"\\u228b\", \"\\\\supsetneq\", true);\ndefineSymbol(math, ams, rel, \"\\ue01b\", \"\\\\@varsupsetneq\");\ndefineSymbol(math, ams, rel, \"\\u2acc\", \"\\\\supsetneqq\", true);\ndefineSymbol(math, ams, rel, \"\\ue019\", \"\\\\@varsupsetneqq\");\ndefineSymbol(math, ams, rel, \"\\u22ae\", \"\\\\nVdash\", true);\ndefineSymbol(math, ams, rel, \"\\u2ab5\", \"\\\\precneqq\", true);\ndefineSymbol(math, ams, rel, \"\\u2ab6\", \"\\\\succneqq\", true);\ndefineSymbol(math, ams, rel, \"\\ue016\", \"\\\\@nsubseteqq\");\ndefineSymbol(math, ams, bin, \"\\u22b4\", \"\\\\unlhd\");\ndefineSymbol(math, ams, bin, \"\\u22b5\", \"\\\\unrhd\"); // AMS Negated Arrows\n\ndefineSymbol(math, ams, rel, \"\\u219a\", \"\\\\nleftarrow\", true);\ndefineSymbol(math, ams, rel, \"\\u219b\", \"\\\\nrightarrow\", true);\ndefineSymbol(math, ams, rel, \"\\u21cd\", \"\\\\nLeftarrow\", true);\ndefineSymbol(math, ams, rel, \"\\u21cf\", \"\\\\nRightarrow\", true);\ndefineSymbol(math, ams, rel, \"\\u21ae\", \"\\\\nleftrightarrow\", true);\ndefineSymbol(math, ams, rel, \"\\u21ce\", \"\\\\nLeftrightarrow\", true); // AMS Misc\n\ndefineSymbol(math, ams, rel, \"\\u25b3\", \"\\\\vartriangle\");\ndefineSymbol(math, ams, textord, \"\\u210f\", \"\\\\hslash\");\ndefineSymbol(math, ams, textord, \"\\u25bd\", \"\\\\triangledown\");\ndefineSymbol(math, ams, textord, \"\\u25ca\", \"\\\\lozenge\");\ndefineSymbol(math, ams, textord, \"\\u24c8\", \"\\\\circledS\");\ndefineSymbol(math, ams, textord, \"\\u00ae\", \"\\\\circledR\");\ndefineSymbol(text, ams, textord, \"\\u00ae\", \"\\\\circledR\");\ndefineSymbol(math, ams, textord, \"\\u2221\", \"\\\\measuredangle\", true);\ndefineSymbol(math, ams, textord, \"\\u2204\", \"\\\\nexists\");\ndefineSymbol(math, ams, textord, \"\\u2127\", \"\\\\mho\");\ndefineSymbol(math, ams, textord, \"\\u2132\", \"\\\\Finv\", true);\ndefineSymbol(math, ams, textord, \"\\u2141\", \"\\\\Game\", true);\ndefineSymbol(math, ams, textord, \"\\u2035\", \"\\\\backprime\");\ndefineSymbol(math, ams, textord, \"\\u25b2\", \"\\\\blacktriangle\");\ndefineSymbol(math, ams, textord, \"\\u25bc\", \"\\\\blacktriangledown\");\ndefineSymbol(math, ams, textord, \"\\u25a0\", \"\\\\blacksquare\");\ndefineSymbol(math, ams, textord, \"\\u29eb\", \"\\\\blacklozenge\");\ndefineSymbol(math, ams, textord, \"\\u2605\", \"\\\\bigstar\");\ndefineSymbol(math, ams, textord, \"\\u2222\", \"\\\\sphericalangle\", true);\ndefineSymbol(math, ams, textord, \"\\u2201\", \"\\\\complement\", true); // unicode-math maps U+F0 to \\matheth. We map to AMS function \\eth\n\ndefineSymbol(math, ams, textord, \"\\u00f0\", \"\\\\eth\", true);\ndefineSymbol(text, main, textord, \"\\u00f0\", \"\\u00f0\");\ndefineSymbol(math, ams, textord, \"\\u2571\", \"\\\\diagup\");\ndefineSymbol(math, ams, textord, \"\\u2572\", \"\\\\diagdown\");\ndefineSymbol(math, ams, textord, \"\\u25a1\", \"\\\\square\");\ndefineSymbol(math, ams, textord, \"\\u25a1\", \"\\\\Box\");\ndefineSymbol(math, ams, textord, \"\\u25ca\", \"\\\\Diamond\"); // unicode-math maps U+A5 to \\mathyen. We map to AMS function \\yen\n\ndefineSymbol(math, ams, textord, \"\\u00a5\", \"\\\\yen\", true);\ndefineSymbol(text, ams, textord, \"\\u00a5\", \"\\\\yen\", true);\ndefineSymbol(math, ams, textord, \"\\u2713\", \"\\\\checkmark\", true);\ndefineSymbol(text, ams, textord, \"\\u2713\", \"\\\\checkmark\"); // AMS Hebrew\n\ndefineSymbol(math, ams, textord, \"\\u2136\", \"\\\\beth\", true);\ndefineSymbol(math, ams, textord, \"\\u2138\", \"\\\\daleth\", true);\ndefineSymbol(math, ams, textord, \"\\u2137\", \"\\\\gimel\", true); // AMS Greek\n\ndefineSymbol(math, ams, textord, \"\\u03dd\", \"\\\\digamma\", true);\ndefineSymbol(math, ams, textord, \"\\u03f0\", \"\\\\varkappa\"); // AMS Delimiters\n\ndefineSymbol(math, ams, open, \"\\u250c\", \"\\\\@ulcorner\", true);\ndefineSymbol(math, ams, close, \"\\u2510\", \"\\\\@urcorner\", true);\ndefineSymbol(math, ams, open, \"\\u2514\", \"\\\\@llcorner\", true);\ndefineSymbol(math, ams, close, \"\\u2518\", \"\\\\@lrcorner\", true); // AMS Binary Relations\n\ndefineSymbol(math, ams, rel, \"\\u2266\", \"\\\\leqq\", true);\ndefineSymbol(math, ams, rel, \"\\u2a7d\", \"\\\\leqslant\", true);\ndefineSymbol(math, ams, rel, \"\\u2a95\", \"\\\\eqslantless\", true);\ndefineSymbol(math, ams, rel, \"\\u2272\", \"\\\\lesssim\", true);\ndefineSymbol(math, ams, rel, \"\\u2a85\", \"\\\\lessapprox\", true);\ndefineSymbol(math, ams, rel, \"\\u224a\", \"\\\\approxeq\", true);\ndefineSymbol(math, ams, bin, \"\\u22d6\", \"\\\\lessdot\");\ndefineSymbol(math, ams, rel, \"\\u22d8\", \"\\\\lll\", true);\ndefineSymbol(math, ams, rel, \"\\u2276\", \"\\\\lessgtr\", true);\ndefineSymbol(math, ams, rel, \"\\u22da\", \"\\\\lesseqgtr\", true);\ndefineSymbol(math, ams, rel, \"\\u2a8b\", \"\\\\lesseqqgtr\", true);\ndefineSymbol(math, ams, rel, \"\\u2251\", \"\\\\doteqdot\");\ndefineSymbol(math, ams, rel, \"\\u2253\", \"\\\\risingdotseq\", true);\ndefineSymbol(math, ams, rel, \"\\u2252\", \"\\\\fallingdotseq\", true);\ndefineSymbol(math, ams, rel, \"\\u223d\", \"\\\\backsim\", true);\ndefineSymbol(math, ams, rel, \"\\u22cd\", \"\\\\backsimeq\", true);\ndefineSymbol(math, ams, rel, \"\\u2ac5\", \"\\\\subseteqq\", true);\ndefineSymbol(math, ams, rel, \"\\u22d0\", \"\\\\Subset\", true);\ndefineSymbol(math, ams, rel, \"\\u228f\", \"\\\\sqsubset\", true);\ndefineSymbol(math, ams, rel, \"\\u227c\", \"\\\\preccurlyeq\", true);\ndefineSymbol(math, ams, rel, \"\\u22de\", \"\\\\curlyeqprec\", true);\ndefineSymbol(math, ams, rel, \"\\u227e\", \"\\\\precsim\", true);\ndefineSymbol(math, ams, rel, \"\\u2ab7\", \"\\\\precapprox\", true);\ndefineSymbol(math, ams, rel, \"\\u22b2\", \"\\\\vartriangleleft\");\ndefineSymbol(math, ams, rel, \"\\u22b4\", \"\\\\trianglelefteq\");\ndefineSymbol(math, ams, rel, \"\\u22a8\", \"\\\\vDash\", true);\ndefineSymbol(math, ams, rel, \"\\u22aa\", \"\\\\Vvdash\", true);\ndefineSymbol(math, ams, rel, \"\\u2323\", \"\\\\smallsmile\");\ndefineSymbol(math, ams, rel, \"\\u2322\", \"\\\\smallfrown\");\ndefineSymbol(math, ams, rel, \"\\u224f\", \"\\\\bumpeq\", true);\ndefineSymbol(math, ams, rel, \"\\u224e\", \"\\\\Bumpeq\", true);\ndefineSymbol(math, ams, rel, \"\\u2267\", \"\\\\geqq\", true);\ndefineSymbol(math, ams, rel, \"\\u2a7e\", \"\\\\geqslant\", true);\ndefineSymbol(math, ams, rel, \"\\u2a96\", \"\\\\eqslantgtr\", true);\ndefineSymbol(math, ams, rel, \"\\u2273\", \"\\\\gtrsim\", true);\ndefineSymbol(math, ams, rel, \"\\u2a86\", \"\\\\gtrapprox\", true);\ndefineSymbol(math, ams, bin, \"\\u22d7\", \"\\\\gtrdot\");\ndefineSymbol(math, ams, rel, \"\\u22d9\", \"\\\\ggg\", true);\ndefineSymbol(math, ams, rel, \"\\u2277\", \"\\\\gtrless\", true);\ndefineSymbol(math, ams, rel, \"\\u22db\", \"\\\\gtreqless\", true);\ndefineSymbol(math, ams, rel, \"\\u2a8c\", \"\\\\gtreqqless\", true);\ndefineSymbol(math, ams, rel, \"\\u2256\", \"\\\\eqcirc\", true);\ndefineSymbol(math, ams, rel, \"\\u2257\", \"\\\\circeq\", true);\ndefineSymbol(math, ams, rel, \"\\u225c\", \"\\\\triangleq\", true);\ndefineSymbol(math, ams, rel, \"\\u223c\", \"\\\\thicksim\");\ndefineSymbol(math, ams, rel, \"\\u2248\", \"\\\\thickapprox\");\ndefineSymbol(math, ams, rel, \"\\u2ac6\", \"\\\\supseteqq\", true);\ndefineSymbol(math, ams, rel, \"\\u22d1\", \"\\\\Supset\", true);\ndefineSymbol(math, ams, rel, \"\\u2290\", \"\\\\sqsupset\", true);\ndefineSymbol(math, ams, rel, \"\\u227d\", \"\\\\succcurlyeq\", true);\ndefineSymbol(math, ams, rel, \"\\u22df\", \"\\\\curlyeqsucc\", true);\ndefineSymbol(math, ams, rel, \"\\u227f\", \"\\\\succsim\", true);\ndefineSymbol(math, ams, rel, \"\\u2ab8\", \"\\\\succapprox\", true);\ndefineSymbol(math, ams, rel, \"\\u22b3\", \"\\\\vartriangleright\");\ndefineSymbol(math, ams, rel, \"\\u22b5\", \"\\\\trianglerighteq\");\ndefineSymbol(math, ams, rel, \"\\u22a9\", \"\\\\Vdash\", true);\ndefineSymbol(math, ams, rel, \"\\u2223\", \"\\\\shortmid\");\ndefineSymbol(math, ams, rel, \"\\u2225\", \"\\\\shortparallel\");\ndefineSymbol(math, ams, rel, \"\\u226c\", \"\\\\between\", true);\ndefineSymbol(math, ams, rel, \"\\u22d4\", \"\\\\pitchfork\", true);\ndefineSymbol(math, ams, rel, \"\\u221d\", \"\\\\varpropto\");\ndefineSymbol(math, ams, rel, \"\\u25c0\", \"\\\\blacktriangleleft\"); // unicode-math says that \\therefore is a mathord atom.\n// We kept the amssymb atom type, which is rel.\n\ndefineSymbol(math, ams, rel, \"\\u2234\", \"\\\\therefore\", true);\ndefineSymbol(math, ams, rel, \"\\u220d\", \"\\\\backepsilon\");\ndefineSymbol(math, ams, rel, \"\\u25b6\", \"\\\\blacktriangleright\"); // unicode-math says that \\because is a mathord atom.\n// We kept the amssymb atom type, which is rel.\n\ndefineSymbol(math, ams, rel, \"\\u2235\", \"\\\\because\", true);\ndefineSymbol(math, ams, rel, \"\\u22d8\", \"\\\\llless\");\ndefineSymbol(math, ams, rel, \"\\u22d9\", \"\\\\gggtr\");\ndefineSymbol(math, ams, bin, \"\\u22b2\", \"\\\\lhd\");\ndefineSymbol(math, ams, bin, \"\\u22b3\", \"\\\\rhd\");\ndefineSymbol(math, ams, rel, \"\\u2242\", \"\\\\eqsim\", true);\ndefineSymbol(math, main, rel, \"\\u22c8\", \"\\\\Join\");\ndefineSymbol(math, ams, rel, \"\\u2251\", \"\\\\Doteq\", true); // AMS Binary Operators\n\ndefineSymbol(math, ams, bin, \"\\u2214\", \"\\\\dotplus\", true);\ndefineSymbol(math, ams, bin, \"\\u2216\", \"\\\\smallsetminus\");\ndefineSymbol(math, ams, bin, \"\\u22d2\", \"\\\\Cap\", true);\ndefineSymbol(math, ams, bin, \"\\u22d3\", \"\\\\Cup\", true);\ndefineSymbol(math, ams, bin, \"\\u2a5e\", \"\\\\doublebarwedge\", true);\ndefineSymbol(math, ams, bin, \"\\u229f\", \"\\\\boxminus\", true);\ndefineSymbol(math, ams, bin, \"\\u229e\", \"\\\\boxplus\", true);\ndefineSymbol(math, ams, bin, \"\\u22c7\", \"\\\\divideontimes\", true);\ndefineSymbol(math, ams, bin, \"\\u22c9\", \"\\\\ltimes\", true);\ndefineSymbol(math, ams, bin, \"\\u22ca\", \"\\\\rtimes\", true);\ndefineSymbol(math, ams, bin, \"\\u22cb\", \"\\\\leftthreetimes\", true);\ndefineSymbol(math, ams, bin, \"\\u22cc\", \"\\\\rightthreetimes\", true);\ndefineSymbol(math, ams, bin, \"\\u22cf\", \"\\\\curlywedge\", true);\ndefineSymbol(math, ams, bin, \"\\u22ce\", \"\\\\curlyvee\", true);\ndefineSymbol(math, ams, bin, \"\\u229d\", \"\\\\circleddash\", true);\ndefineSymbol(math, ams, bin, \"\\u229b\", \"\\\\circledast\", true);\ndefineSymbol(math, ams, bin, \"\\u22c5\", \"\\\\centerdot\");\ndefineSymbol(math, ams, bin, \"\\u22ba\", \"\\\\intercal\", true);\ndefineSymbol(math, ams, bin, \"\\u22d2\", \"\\\\doublecap\");\ndefineSymbol(math, ams, bin, \"\\u22d3\", \"\\\\doublecup\");\ndefineSymbol(math, ams, bin, \"\\u22a0\", \"\\\\boxtimes\", true); // AMS Arrows\n// Note: unicode-math maps \\u21e2 to their own function \\rightdasharrow.\n// We'll map it to AMS function \\dashrightarrow. It produces the same atom.\n\ndefineSymbol(math, ams, rel, \"\\u21e2\", \"\\\\dashrightarrow\", true); // unicode-math maps \\u21e0 to \\leftdasharrow. We'll use the AMS synonym.\n\ndefineSymbol(math, ams, rel, \"\\u21e0\", \"\\\\dashleftarrow\", true);\ndefineSymbol(math, ams, rel, \"\\u21c7\", \"\\\\leftleftarrows\", true);\ndefineSymbol(math, ams, rel, \"\\u21c6\", \"\\\\leftrightarrows\", true);\ndefineSymbol(math, ams, rel, \"\\u21da\", \"\\\\Lleftarrow\", true);\ndefineSymbol(math, ams, rel, \"\\u219e\", \"\\\\twoheadleftarrow\", true);\ndefineSymbol(math, ams, rel, \"\\u21a2\", \"\\\\leftarrowtail\", true);\ndefineSymbol(math, ams, rel, \"\\u21ab\", \"\\\\looparrowleft\", true);\ndefineSymbol(math, ams, rel, \"\\u21cb\", \"\\\\leftrightharpoons\", true);\ndefineSymbol(math, ams, rel, \"\\u21b6\", \"\\\\curvearrowleft\", true); // unicode-math maps \\u21ba to \\acwopencirclearrow. We'll use the AMS synonym.\n\ndefineSymbol(math, ams, rel, \"\\u21ba\", \"\\\\circlearrowleft\", true);\ndefineSymbol(math, ams, rel, \"\\u21b0\", \"\\\\Lsh\", true);\ndefineSymbol(math, ams, rel, \"\\u21c8\", \"\\\\upuparrows\", true);\ndefineSymbol(math, ams, rel, \"\\u21bf\", \"\\\\upharpoonleft\", true);\ndefineSymbol(math, ams, rel, \"\\u21c3\", \"\\\\downharpoonleft\", true);\ndefineSymbol(math, main, rel, \"\\u22b6\", \"\\\\origof\", true); // not in font\n\ndefineSymbol(math, main, rel, \"\\u22b7\", \"\\\\imageof\", true); // not in font\n\ndefineSymbol(math, ams, rel, \"\\u22b8\", \"\\\\multimap\", true);\ndefineSymbol(math, ams, rel, \"\\u21ad\", \"\\\\leftrightsquigarrow\", true);\ndefineSymbol(math, ams, rel, \"\\u21c9\", \"\\\\rightrightarrows\", true);\ndefineSymbol(math, ams, rel, \"\\u21c4\", \"\\\\rightleftarrows\", true);\ndefineSymbol(math, ams, rel, \"\\u21a0\", \"\\\\twoheadrightarrow\", true);\ndefineSymbol(math, ams, rel, \"\\u21a3\", \"\\\\rightarrowtail\", true);\ndefineSymbol(math, ams, rel, \"\\u21ac\", \"\\\\looparrowright\", true);\ndefineSymbol(math, ams, rel, \"\\u21b7\", \"\\\\curvearrowright\", true); // unicode-math maps \\u21bb to \\cwopencirclearrow. We'll use the AMS synonym.\n\ndefineSymbol(math, ams, rel, \"\\u21bb\", \"\\\\circlearrowright\", true);\ndefineSymbol(math, ams, rel, \"\\u21b1\", \"\\\\Rsh\", true);\ndefineSymbol(math, ams, rel, \"\\u21ca\", \"\\\\downdownarrows\", true);\ndefineSymbol(math, ams, rel, \"\\u21be\", \"\\\\upharpoonright\", true);\ndefineSymbol(math, ams, rel, \"\\u21c2\", \"\\\\downharpoonright\", true);\ndefineSymbol(math, ams, rel, \"\\u21dd\", \"\\\\rightsquigarrow\", true);\ndefineSymbol(math, ams, rel, \"\\u21dd\", \"\\\\leadsto\");\ndefineSymbol(math, ams, rel, \"\\u21db\", \"\\\\Rrightarrow\", true);\ndefineSymbol(math, ams, rel, \"\\u21be\", \"\\\\restriction\");\ndefineSymbol(math, main, textord, \"\\u2018\", \"`\");\ndefineSymbol(math, main, textord, \"$\", \"\\\\$\");\ndefineSymbol(text, main, textord, \"$\", \"\\\\$\");\ndefineSymbol(text, main, textord, \"$\", \"\\\\textdollar\");\ndefineSymbol(math, main, textord, \"%\", \"\\\\%\");\ndefineSymbol(text, main, textord, \"%\", \"\\\\%\");\ndefineSymbol(math, main, textord, \"_\", \"\\\\_\");\ndefineSymbol(text, main, textord, \"_\", \"\\\\_\");\ndefineSymbol(text, main, textord, \"_\", \"\\\\textunderscore\");\ndefineSymbol(math, main, textord, \"\\u2220\", \"\\\\angle\", true);\ndefineSymbol(math, main, textord, \"\\u221e\", \"\\\\infty\", true);\ndefineSymbol(math, main, textord, \"\\u2032\", \"\\\\prime\");\ndefineSymbol(math, main, textord, \"\\u25b3\", \"\\\\triangle\");\ndefineSymbol(math, main, textord, \"\\u0393\", \"\\\\Gamma\", true);\ndefineSymbol(math, main, textord, \"\\u0394\", \"\\\\Delta\", true);\ndefineSymbol(math, main, textord, \"\\u0398\", \"\\\\Theta\", true);\ndefineSymbol(math, main, textord, \"\\u039b\", \"\\\\Lambda\", true);\ndefineSymbol(math, main, textord, \"\\u039e\", \"\\\\Xi\", true);\ndefineSymbol(math, main, textord, \"\\u03a0\", \"\\\\Pi\", true);\ndefineSymbol(math, main, textord, \"\\u03a3\", \"\\\\Sigma\", true);\ndefineSymbol(math, main, textord, \"\\u03a5\", \"\\\\Upsilon\", true);\ndefineSymbol(math, main, textord, \"\\u03a6\", \"\\\\Phi\", true);\ndefineSymbol(math, main, textord, \"\\u03a8\", \"\\\\Psi\", true);\ndefineSymbol(math, main, textord, \"\\u03a9\", \"\\\\Omega\", true);\ndefineSymbol(math, main, textord, \"A\", \"\\u0391\");\ndefineSymbol(math, main, textord, \"B\", \"\\u0392\");\ndefineSymbol(math, main, textord, \"E\", \"\\u0395\");\ndefineSymbol(math, main, textord, \"Z\", \"\\u0396\");\ndefineSymbol(math, main, textord, \"H\", \"\\u0397\");\ndefineSymbol(math, main, textord, \"I\", \"\\u0399\");\ndefineSymbol(math, main, textord, \"K\", \"\\u039A\");\ndefineSymbol(math, main, textord, \"M\", \"\\u039C\");\ndefineSymbol(math, main, textord, \"N\", \"\\u039D\");\ndefineSymbol(math, main, textord, \"O\", \"\\u039F\");\ndefineSymbol(math, main, textord, \"P\", \"\\u03A1\");\ndefineSymbol(math, main, textord, \"T\", \"\\u03A4\");\ndefineSymbol(math, main, textord, \"X\", \"\\u03A7\");\ndefineSymbol(math, main, textord, \"\\u00ac\", \"\\\\neg\", true);\ndefineSymbol(math, main, textord, \"\\u00ac\", \"\\\\lnot\");\ndefineSymbol(math, main, textord, \"\\u22a4\", \"\\\\top\");\ndefineSymbol(math, main, textord, \"\\u22a5\", \"\\\\bot\");\ndefineSymbol(math, main, textord, \"\\u2205\", \"\\\\emptyset\");\ndefineSymbol(math, ams, textord, \"\\u2205\", \"\\\\varnothing\");\ndefineSymbol(math, main, mathord, \"\\u03b1\", \"\\\\alpha\", true);\ndefineSymbol(math, main, mathord, \"\\u03b2\", \"\\\\beta\", true);\ndefineSymbol(math, main, mathord, \"\\u03b3\", \"\\\\gamma\", true);\ndefineSymbol(math, main, mathord, \"\\u03b4\", \"\\\\delta\", true);\ndefineSymbol(math, main, mathord, \"\\u03f5\", \"\\\\epsilon\", true);\ndefineSymbol(math, main, mathord, \"\\u03b6\", \"\\\\zeta\", true);\ndefineSymbol(math, main, mathord, \"\\u03b7\", \"\\\\eta\", true);\ndefineSymbol(math, main, mathord, \"\\u03b8\", \"\\\\theta\", true);\ndefineSymbol(math, main, mathord, \"\\u03b9\", \"\\\\iota\", true);\ndefineSymbol(math, main, mathord, \"\\u03ba\", \"\\\\kappa\", true);\ndefineSymbol(math, main, mathord, \"\\u03bb\", \"\\\\lambda\", true);\ndefineSymbol(math, main, mathord, \"\\u03bc\", \"\\\\mu\", true);\ndefineSymbol(math, main, mathord, \"\\u03bd\", \"\\\\nu\", true);\ndefineSymbol(math, main, mathord, \"\\u03be\", \"\\\\xi\", true);\ndefineSymbol(math, main, mathord, \"\\u03bf\", \"\\\\omicron\", true);\ndefineSymbol(math, main, mathord, \"\\u03c0\", \"\\\\pi\", true);\ndefineSymbol(math, main, mathord, \"\\u03c1\", \"\\\\rho\", true);\ndefineSymbol(math, main, mathord, \"\\u03c3\", \"\\\\sigma\", true);\ndefineSymbol(math, main, mathord, \"\\u03c4\", \"\\\\tau\", true);\ndefineSymbol(math, main, mathord, \"\\u03c5\", \"\\\\upsilon\", true);\ndefineSymbol(math, main, mathord, \"\\u03d5\", \"\\\\phi\", true);\ndefineSymbol(math, main, mathord, \"\\u03c7\", \"\\\\chi\", true);\ndefineSymbol(math, main, mathord, \"\\u03c8\", \"\\\\psi\", true);\ndefineSymbol(math, main, mathord, \"\\u03c9\", \"\\\\omega\", true);\ndefineSymbol(math, main, mathord, \"\\u03b5\", \"\\\\varepsilon\", true);\ndefineSymbol(math, main, mathord, \"\\u03d1\", \"\\\\vartheta\", true);\ndefineSymbol(math, main, mathord, \"\\u03d6\", \"\\\\varpi\", true);\ndefineSymbol(math, main, mathord, \"\\u03f1\", \"\\\\varrho\", true);\ndefineSymbol(math, main, mathord, \"\\u03c2\", \"\\\\varsigma\", true);\ndefineSymbol(math, main, mathord, \"\\u03c6\", \"\\\\varphi\", true);\ndefineSymbol(math, main, bin, \"\\u2217\", \"*\", true);\ndefineSymbol(math, main, bin, \"+\", \"+\");\ndefineSymbol(math, main, bin, \"\\u2212\", \"-\", true);\ndefineSymbol(math, main, bin, \"\\u22c5\", \"\\\\cdot\", true);\ndefineSymbol(math, main, bin, \"\\u2218\", \"\\\\circ\", true);\ndefineSymbol(math, main, bin, \"\\u00f7\", \"\\\\div\", true);\ndefineSymbol(math, main, bin, \"\\u00b1\", \"\\\\pm\", true);\ndefineSymbol(math, main, bin, \"\\u00d7\", \"\\\\times\", true);\ndefineSymbol(math, main, bin, \"\\u2229\", \"\\\\cap\", true);\ndefineSymbol(math, main, bin, \"\\u222a\", \"\\\\cup\", true);\ndefineSymbol(math, main, bin, \"\\u2216\", \"\\\\setminus\", true);\ndefineSymbol(math, main, bin, \"\\u2227\", \"\\\\land\");\ndefineSymbol(math, main, bin, \"\\u2228\", \"\\\\lor\");\ndefineSymbol(math, main, bin, \"\\u2227\", \"\\\\wedge\", true);\ndefineSymbol(math, main, bin, \"\\u2228\", \"\\\\vee\", true);\ndefineSymbol(math, main, textord, \"\\u221a\", \"\\\\surd\");\ndefineSymbol(math, main, open, \"\\u27e8\", \"\\\\langle\", true);\ndefineSymbol(math, main, open, \"\\u2223\", \"\\\\lvert\");\ndefineSymbol(math, main, open, \"\\u2225\", \"\\\\lVert\");\ndefineSymbol(math, main, close, \"?\", \"?\");\ndefineSymbol(math, main, close, \"!\", \"!\");\ndefineSymbol(math, main, close, \"\\u27e9\", \"\\\\rangle\", true);\ndefineSymbol(math, main, close, \"\\u2223\", \"\\\\rvert\");\ndefineSymbol(math, main, close, \"\\u2225\", \"\\\\rVert\");\ndefineSymbol(math, main, rel, \"=\", \"=\");\ndefineSymbol(math, main, rel, \":\", \":\");\ndefineSymbol(math, main, rel, \"\\u2248\", \"\\\\approx\", true);\ndefineSymbol(math, main, rel, \"\\u2245\", \"\\\\cong\", true);\ndefineSymbol(math, main, rel, \"\\u2265\", \"\\\\ge\");\ndefineSymbol(math, main, rel, \"\\u2265\", \"\\\\geq\", true);\ndefineSymbol(math, main, rel, \"\\u2190\", \"\\\\gets\");\ndefineSymbol(math, main, rel, \">\", \"\\\\gt\", true);\ndefineSymbol(math, main, rel, \"\\u2208\", \"\\\\in\", true);\ndefineSymbol(math, main, rel, \"\\ue020\", \"\\\\@not\");\ndefineSymbol(math, main, rel, \"\\u2282\", \"\\\\subset\", true);\ndefineSymbol(math, main, rel, \"\\u2283\", \"\\\\supset\", true);\ndefineSymbol(math, main, rel, \"\\u2286\", \"\\\\subseteq\", true);\ndefineSymbol(math, main, rel, \"\\u2287\", \"\\\\supseteq\", true);\ndefineSymbol(math, ams, rel, \"\\u2288\", \"\\\\nsubseteq\", true);\ndefineSymbol(math, ams, rel, \"\\u2289\", \"\\\\nsupseteq\", true);\ndefineSymbol(math, main, rel, \"\\u22a8\", \"\\\\models\");\ndefineSymbol(math, main, rel, \"\\u2190\", \"\\\\leftarrow\", true);\ndefineSymbol(math, main, rel, \"\\u2264\", \"\\\\le\");\ndefineSymbol(math, main, rel, \"\\u2264\", \"\\\\leq\", true);\ndefineSymbol(math, main, rel, \"<\", \"\\\\lt\", true);\ndefineSymbol(math, main, rel, \"\\u2192\", \"\\\\rightarrow\", true);\ndefineSymbol(math, main, rel, \"\\u2192\", \"\\\\to\");\ndefineSymbol(math, ams, rel, \"\\u2271\", \"\\\\ngeq\", true);\ndefineSymbol(math, ams, rel, \"\\u2270\", \"\\\\nleq\", true);\ndefineSymbol(math, main, spacing, \"\\u00a0\", \"\\\\ \");\ndefineSymbol(math, main, spacing, \"\\u00a0\", \"\\\\space\"); // Ref: LaTeX Source 2e: \\DeclareRobustCommand{\\nobreakspace}{%\n\ndefineSymbol(math, main, spacing, \"\\u00a0\", \"\\\\nobreakspace\");\ndefineSymbol(text, main, spacing, \"\\u00a0\", \"\\\\ \");\ndefineSymbol(text, main, spacing, \"\\u00a0\", \" \");\ndefineSymbol(text, main, spacing, \"\\u00a0\", \"\\\\space\");\ndefineSymbol(text, main, spacing, \"\\u00a0\", \"\\\\nobreakspace\");\ndefineSymbol(math, main, spacing, null, \"\\\\nobreak\");\ndefineSymbol(math, main, spacing, null, \"\\\\allowbreak\");\ndefineSymbol(math, main, punct, \",\", \",\");\ndefineSymbol(math, main, punct, \";\", \";\");\ndefineSymbol(math, ams, bin, \"\\u22bc\", \"\\\\barwedge\", true);\ndefineSymbol(math, ams, bin, \"\\u22bb\", \"\\\\veebar\", true);\ndefineSymbol(math, main, bin, \"\\u2299\", \"\\\\odot\", true);\ndefineSymbol(math, main, bin, \"\\u2295\", \"\\\\oplus\", true);\ndefineSymbol(math, main, bin, \"\\u2297\", \"\\\\otimes\", true);\ndefineSymbol(math, main, textord, \"\\u2202\", \"\\\\partial\", true);\ndefineSymbol(math, main, bin, \"\\u2298\", \"\\\\oslash\", true);\ndefineSymbol(math, ams, bin, \"\\u229a\", \"\\\\circledcirc\", true);\ndefineSymbol(math, ams, bin, \"\\u22a1\", \"\\\\boxdot\", true);\ndefineSymbol(math, main, bin, \"\\u25b3\", \"\\\\bigtriangleup\");\ndefineSymbol(math, main, bin, \"\\u25bd\", \"\\\\bigtriangledown\");\ndefineSymbol(math, main, bin, \"\\u2020\", \"\\\\dagger\");\ndefineSymbol(math, main, bin, \"\\u22c4\", \"\\\\diamond\");\ndefineSymbol(math, main, bin, \"\\u22c6\", \"\\\\star\");\ndefineSymbol(math, main, bin, \"\\u25c3\", \"\\\\triangleleft\");\ndefineSymbol(math, main, bin, \"\\u25b9\", \"\\\\triangleright\");\ndefineSymbol(math, main, open, \"{\", \"\\\\{\");\ndefineSymbol(text, main, textord, \"{\", \"\\\\{\");\ndefineSymbol(text, main, textord, \"{\", \"\\\\textbraceleft\");\ndefineSymbol(math, main, close, \"}\", \"\\\\}\");\ndefineSymbol(text, main, textord, \"}\", \"\\\\}\");\ndefineSymbol(text, main, textord, \"}\", \"\\\\textbraceright\");\ndefineSymbol(math, main, open, \"{\", \"\\\\lbrace\");\ndefineSymbol(math, main, close, \"}\", \"\\\\rbrace\");\ndefineSymbol(math, main, open, \"[\", \"\\\\lbrack\", true);\ndefineSymbol(text, main, textord, \"[\", \"\\\\lbrack\", true);\ndefineSymbol(math, main, close, \"]\", \"\\\\rbrack\", true);\ndefineSymbol(text, main, textord, \"]\", \"\\\\rbrack\", true);\ndefineSymbol(math, main, open, \"(\", \"\\\\lparen\", true);\ndefineSymbol(math, main, close, \")\", \"\\\\rparen\", true);\ndefineSymbol(text, main, textord, \"<\", \"\\\\textless\", true); // in T1 fontenc\n\ndefineSymbol(text, main, textord, \">\", \"\\\\textgreater\", true); // in T1 fontenc\n\ndefineSymbol(math, main, open, \"\\u230a\", \"\\\\lfloor\", true);\ndefineSymbol(math, main, close, \"\\u230b\", \"\\\\rfloor\", true);\ndefineSymbol(math, main, open, \"\\u2308\", \"\\\\lceil\", true);\ndefineSymbol(math, main, close, \"\\u2309\", \"\\\\rceil\", true);\ndefineSymbol(math, main, textord, \"\\\\\", \"\\\\backslash\");\ndefineSymbol(math, main, textord, \"\\u2223\", \"|\");\ndefineSymbol(math, main, textord, \"\\u2223\", \"\\\\vert\");\ndefineSymbol(text, main, textord, \"|\", \"\\\\textbar\", true); // in T1 fontenc\n\ndefineSymbol(math, main, textord, \"\\u2225\", \"\\\\|\");\ndefineSymbol(math, main, textord, \"\\u2225\", \"\\\\Vert\");\ndefineSymbol(text, main, textord, \"\\u2225\", \"\\\\textbardbl\");\ndefineSymbol(text, main, textord, \"~\", \"\\\\textasciitilde\");\ndefineSymbol(text, main, textord, \"\\\\\", \"\\\\textbackslash\");\ndefineSymbol(text, main, textord, \"^\", \"\\\\textasciicircum\");\ndefineSymbol(math, main, rel, \"\\u2191\", \"\\\\uparrow\", true);\ndefineSymbol(math, main, rel, \"\\u21d1\", \"\\\\Uparrow\", true);\ndefineSymbol(math, main, rel, \"\\u2193\", \"\\\\downarrow\", true);\ndefineSymbol(math, main, rel, \"\\u21d3\", \"\\\\Downarrow\", true);\ndefineSymbol(math, main, rel, \"\\u2195\", \"\\\\updownarrow\", true);\ndefineSymbol(math, main, rel, \"\\u21d5\", \"\\\\Updownarrow\", true);\ndefineSymbol(math, main, op, \"\\u2210\", \"\\\\coprod\");\ndefineSymbol(math, main, op, \"\\u22c1\", \"\\\\bigvee\");\ndefineSymbol(math, main, op, \"\\u22c0\", \"\\\\bigwedge\");\ndefineSymbol(math, main, op, \"\\u2a04\", \"\\\\biguplus\");\ndefineSymbol(math, main, op, \"\\u22c2\", \"\\\\bigcap\");\ndefineSymbol(math, main, op, \"\\u22c3\", \"\\\\bigcup\");\ndefineSymbol(math, main, op, \"\\u222b\", \"\\\\int\");\ndefineSymbol(math, main, op, \"\\u222b\", \"\\\\intop\");\ndefineSymbol(math, main, op, \"\\u222c\", \"\\\\iint\");\ndefineSymbol(math, main, op, \"\\u222d\", \"\\\\iiint\");\ndefineSymbol(math, main, op, \"\\u220f\", \"\\\\prod\");\ndefineSymbol(math, main, op, \"\\u2211\", \"\\\\sum\");\ndefineSymbol(math, main, op, \"\\u2a02\", \"\\\\bigotimes\");\ndefineSymbol(math, main, op, \"\\u2a01\", \"\\\\bigoplus\");\ndefineSymbol(math, main, op, \"\\u2a00\", \"\\\\bigodot\");\ndefineSymbol(math, main, op, \"\\u222e\", \"\\\\oint\");\ndefineSymbol(math, main, op, \"\\u222f\", \"\\\\oiint\");\ndefineSymbol(math, main, op, \"\\u2230\", \"\\\\oiiint\");\ndefineSymbol(math, main, op, \"\\u2a06\", \"\\\\bigsqcup\");\ndefineSymbol(math, main, op, \"\\u222b\", \"\\\\smallint\");\ndefineSymbol(text, main, inner, \"\\u2026\", \"\\\\textellipsis\");\ndefineSymbol(math, main, inner, \"\\u2026\", \"\\\\mathellipsis\");\ndefineSymbol(text, main, inner, \"\\u2026\", \"\\\\ldots\", true);\ndefineSymbol(math, main, inner, \"\\u2026\", \"\\\\ldots\", true);\ndefineSymbol(math, main, inner, \"\\u22ef\", \"\\\\@cdots\", true);\ndefineSymbol(math, main, inner, \"\\u22f1\", \"\\\\ddots\", true); // \\vdots is a macro that uses one of these two symbols (with made-up names):\n\ndefineSymbol(math, main, textord, \"\\u22ee\", \"\\\\varvdots\");\ndefineSymbol(text, main, textord, \"\\u22ee\", \"\\\\varvdots\");\ndefineSymbol(math, main, accent, \"\\u02ca\", \"\\\\acute\");\ndefineSymbol(math, main, accent, \"\\u02cb\", \"\\\\grave\");\ndefineSymbol(math, main, accent, \"\\u00a8\", \"\\\\ddot\");\ndefineSymbol(math, main, accent, \"\\u007e\", \"\\\\tilde\");\ndefineSymbol(math, main, accent, \"\\u02c9\", \"\\\\bar\");\ndefineSymbol(math, main, accent, \"\\u02d8\", \"\\\\breve\");\ndefineSymbol(math, main, accent, \"\\u02c7\", \"\\\\check\");\ndefineSymbol(math, main, accent, \"\\u005e\", \"\\\\hat\");\ndefineSymbol(math, main, accent, \"\\u20d7\", \"\\\\vec\");\ndefineSymbol(math, main, accent, \"\\u02d9\", \"\\\\dot\");\ndefineSymbol(math, main, accent, \"\\u02da\", \"\\\\mathring\"); // \\imath and \\jmath should be invariant to \\mathrm, \\mathbf, etc., so use PUA\n\ndefineSymbol(math, main, mathord, \"\\ue131\", \"\\\\@imath\");\ndefineSymbol(math, main, mathord, \"\\ue237\", \"\\\\@jmath\");\ndefineSymbol(math, main, textord, \"\\u0131\", \"\\u0131\");\ndefineSymbol(math, main, textord, \"\\u0237\", \"\\u0237\");\ndefineSymbol(text, main, textord, \"\\u0131\", \"\\\\i\", true);\ndefineSymbol(text, main, textord, \"\\u0237\", \"\\\\j\", true);\ndefineSymbol(text, main, textord, \"\\u00df\", \"\\\\ss\", true);\ndefineSymbol(text, main, textord, \"\\u00e6\", \"\\\\ae\", true);\ndefineSymbol(text, main, textord, \"\\u0153\", \"\\\\oe\", true);\ndefineSymbol(text, main, textord, \"\\u00f8\", \"\\\\o\", true);\ndefineSymbol(text, main, textord, \"\\u00c6\", \"\\\\AE\", true);\ndefineSymbol(text, main, textord, \"\\u0152\", \"\\\\OE\", true);\ndefineSymbol(text, main, textord, \"\\u00d8\", \"\\\\O\", true);\ndefineSymbol(text, main, accent, \"\\u02ca\", \"\\\\'\"); // acute\n\ndefineSymbol(text, main, accent, \"\\u02cb\", \"\\\\`\"); // grave\n\ndefineSymbol(text, main, accent, \"\\u02c6\", \"\\\\^\"); // circumflex\n\ndefineSymbol(text, main, accent, \"\\u02dc\", \"\\\\~\"); // tilde\n\ndefineSymbol(text, main, accent, \"\\u02c9\", \"\\\\=\"); // macron\n\ndefineSymbol(text, main, accent, \"\\u02d8\", \"\\\\u\"); // breve\n\ndefineSymbol(text, main, accent, \"\\u02d9\", \"\\\\.\"); // dot above\n\ndefineSymbol(text, main, accent, \"\\u00b8\", \"\\\\c\"); // cedilla\n\ndefineSymbol(text, main, accent, \"\\u02da\", \"\\\\r\"); // ring above\n\ndefineSymbol(text, main, accent, \"\\u02c7\", \"\\\\v\"); // caron\n\ndefineSymbol(text, main, accent, \"\\u00a8\", '\\\\\"'); // diaeresis\n\ndefineSymbol(text, main, accent, \"\\u02dd\", \"\\\\H\"); // double acute\n\ndefineSymbol(text, main, accent, \"\\u25ef\", \"\\\\textcircled\"); // \\bigcirc glyph\n// These ligatures are detected and created in Parser.js's `formLigatures`.\n\nvar ligatures = {\n  \"--\": true,\n  \"---\": true,\n  \"``\": true,\n  \"''\": true\n};\ndefineSymbol(text, main, textord, \"\\u2013\", \"--\", true);\ndefineSymbol(text, main, textord, \"\\u2013\", \"\\\\textendash\");\ndefineSymbol(text, main, textord, \"\\u2014\", \"---\", true);\ndefineSymbol(text, main, textord, \"\\u2014\", \"\\\\textemdash\");\ndefineSymbol(text, main, textord, \"\\u2018\", \"`\", true);\ndefineSymbol(text, main, textord, \"\\u2018\", \"\\\\textquoteleft\");\ndefineSymbol(text, main, textord, \"\\u2019\", \"'\", true);\ndefineSymbol(text, main, textord, \"\\u2019\", \"\\\\textquoteright\");\ndefineSymbol(text, main, textord, \"\\u201c\", \"``\", true);\ndefineSymbol(text, main, textord, \"\\u201c\", \"\\\\textquotedblleft\");\ndefineSymbol(text, main, textord, \"\\u201d\", \"''\", true);\ndefineSymbol(text, main, textord, \"\\u201d\", \"\\\\textquotedblright\"); //  \\degree from gensymb package\n\ndefineSymbol(math, main, textord, \"\\u00b0\", \"\\\\degree\", true);\ndefineSymbol(text, main, textord, \"\\u00b0\", \"\\\\degree\"); // \\textdegree from inputenc package\n\ndefineSymbol(text, main, textord, \"\\u00b0\", \"\\\\textdegree\", true); // TODO: In LaTeX, \\pounds can generate a different character in text and math\n// mode, but among our fonts, only Main-Regular defines this character \"163\".\n\ndefineSymbol(math, main, textord, \"\\u00a3\", \"\\\\pounds\");\ndefineSymbol(math, main, textord, \"\\u00a3\", \"\\\\mathsterling\", true);\ndefineSymbol(text, main, textord, \"\\u00a3\", \"\\\\pounds\");\ndefineSymbol(text, main, textord, \"\\u00a3\", \"\\\\textsterling\", true);\ndefineSymbol(math, ams, textord, \"\\u2720\", \"\\\\maltese\");\ndefineSymbol(text, ams, textord, \"\\u2720\", \"\\\\maltese\"); // There are lots of symbols which are the same, so we add them in afterwards.\n// All of these are textords in math mode\n\nvar mathTextSymbols = \"0123456789/@.\\\"\";\n\nfor (var i = 0; i < mathTextSymbols.length; i++) {\n  var ch = mathTextSymbols.charAt(i);\n  defineSymbol(math, main, textord, ch, ch);\n} // All of these are textords in text mode\n\n\nvar textSymbols = \"0123456789!@*()-=+\\\";:?/.,\";\n\nfor (var _i = 0; _i < textSymbols.length; _i++) {\n  var _ch = textSymbols.charAt(_i);\n\n  defineSymbol(text, main, textord, _ch, _ch);\n} // All of these are textords in text mode, and mathords in math mode\n\n\nvar letters = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\";\n\nfor (var _i2 = 0; _i2 < letters.length; _i2++) {\n  var _ch2 = letters.charAt(_i2);\n\n  defineSymbol(math, main, mathord, _ch2, _ch2);\n  defineSymbol(text, main, textord, _ch2, _ch2);\n} // Blackboard bold and script letters in Unicode range\n\n\ndefineSymbol(math, ams, textord, \"C\", \"\\u2102\"); // blackboard bold\n\ndefineSymbol(text, ams, textord, \"C\", \"\\u2102\");\ndefineSymbol(math, ams, textord, \"H\", \"\\u210D\");\ndefineSymbol(text, ams, textord, \"H\", \"\\u210D\");\ndefineSymbol(math, ams, textord, \"N\", \"\\u2115\");\ndefineSymbol(text, ams, textord, \"N\", \"\\u2115\");\ndefineSymbol(math, ams, textord, \"P\", \"\\u2119\");\ndefineSymbol(text, ams, textord, \"P\", \"\\u2119\");\ndefineSymbol(math, ams, textord, \"Q\", \"\\u211A\");\ndefineSymbol(text, ams, textord, \"Q\", \"\\u211A\");\ndefineSymbol(math, ams, textord, \"R\", \"\\u211D\");\ndefineSymbol(text, ams, textord, \"R\", \"\\u211D\");\ndefineSymbol(math, ams, textord, \"Z\", \"\\u2124\");\ndefineSymbol(text, ams, textord, \"Z\", \"\\u2124\");\ndefineSymbol(math, main, mathord, \"h\", \"\\u210E\"); // italic h, Planck constant\n\ndefineSymbol(text, main, mathord, \"h\", \"\\u210E\"); // The next loop loads wide (surrogate pair) characters.\n// We support some letters in the Unicode range U+1D400 to U+1D7FF,\n// Mathematical Alphanumeric Symbols.\n// Some editors do not deal well with wide characters. So don't write the\n// string into this file. Instead, create the string from the surrogate pair.\n\nvar wideChar = \"\";\n\nfor (var _i3 = 0; _i3 < letters.length; _i3++) {\n  var _ch3 = letters.charAt(_i3); // The hex numbers in the next line are a surrogate pair.\n  // 0xD835 is the high surrogate for all letters in the range we support.\n  // 0xDC00 is the low surrogate for bold A.\n\n\n  wideChar = String.fromCharCode(0xD835, 0xDC00 + _i3); // A-Z a-z bold\n\n  defineSymbol(math, main, mathord, _ch3, wideChar);\n  defineSymbol(text, main, textord, _ch3, wideChar);\n  wideChar = String.fromCharCode(0xD835, 0xDC34 + _i3); // A-Z a-z italic\n\n  defineSymbol(math, main, mathord, _ch3, wideChar);\n  defineSymbol(text, main, textord, _ch3, wideChar);\n  wideChar = String.fromCharCode(0xD835, 0xDC68 + _i3); // A-Z a-z bold italic\n\n  defineSymbol(math, main, mathord, _ch3, wideChar);\n  defineSymbol(text, main, textord, _ch3, wideChar);\n  wideChar = String.fromCharCode(0xD835, 0xDD04 + _i3); // A-Z a-z Fraktur\n\n  defineSymbol(math, main, mathord, _ch3, wideChar);\n  defineSymbol(text, main, textord, _ch3, wideChar);\n  wideChar = String.fromCharCode(0xD835, 0xDD6C + _i3); // A-Z a-z bold Fraktur\n\n  defineSymbol(math, main, mathord, _ch3, wideChar);\n  defineSymbol(text, main, textord, _ch3, wideChar);\n  wideChar = String.fromCharCode(0xD835, 0xDDA0 + _i3); // A-Z a-z sans-serif\n\n  defineSymbol(math, main, mathord, _ch3, wideChar);\n  defineSymbol(text, main, textord, _ch3, wideChar);\n  wideChar = String.fromCharCode(0xD835, 0xDDD4 + _i3); // A-Z a-z sans bold\n\n  defineSymbol(math, main, mathord, _ch3, wideChar);\n  defineSymbol(text, main, textord, _ch3, wideChar);\n  wideChar = String.fromCharCode(0xD835, 0xDE08 + _i3); // A-Z a-z sans italic\n\n  defineSymbol(math, main, mathord, _ch3, wideChar);\n  defineSymbol(text, main, textord, _ch3, wideChar);\n  wideChar = String.fromCharCode(0xD835, 0xDE70 + _i3); // A-Z a-z monospace\n\n  defineSymbol(math, main, mathord, _ch3, wideChar);\n  defineSymbol(text, main, textord, _ch3, wideChar);\n\n  if (_i3 < 26) {\n    // KaTeX fonts have only capital letters for blackboard bold and script.\n    // See exception for k below.\n    wideChar = String.fromCharCode(0xD835, 0xDD38 + _i3); // A-Z double struck\n\n    defineSymbol(math, main, mathord, _ch3, wideChar);\n    defineSymbol(text, main, textord, _ch3, wideChar);\n    wideChar = String.fromCharCode(0xD835, 0xDC9C + _i3); // A-Z script\n\n    defineSymbol(math, main, mathord, _ch3, wideChar);\n    defineSymbol(text, main, textord, _ch3, wideChar);\n  } // TODO: Add bold script when it is supported by a KaTeX font.\n\n} // \"k\" is the only double struck lower case letter in the KaTeX fonts.\n\n\nwideChar = String.fromCharCode(0xD835, 0xDD5C); // k double struck\n\ndefineSymbol(math, main, mathord, \"k\", wideChar);\ndefineSymbol(text, main, textord, \"k\", wideChar); // Next, some wide character numerals\n\nfor (var _i4 = 0; _i4 < 10; _i4++) {\n  var _ch4 = _i4.toString();\n\n  wideChar = String.fromCharCode(0xD835, 0xDFCE + _i4); // 0-9 bold\n\n  defineSymbol(math, main, mathord, _ch4, wideChar);\n  defineSymbol(text, main, textord, _ch4, wideChar);\n  wideChar = String.fromCharCode(0xD835, 0xDFE2 + _i4); // 0-9 sans serif\n\n  defineSymbol(math, main, mathord, _ch4, wideChar);\n  defineSymbol(text, main, textord, _ch4, wideChar);\n  wideChar = String.fromCharCode(0xD835, 0xDFEC + _i4); // 0-9 bold sans\n\n  defineSymbol(math, main, mathord, _ch4, wideChar);\n  defineSymbol(text, main, textord, _ch4, wideChar);\n  wideChar = String.fromCharCode(0xD835, 0xDFF6 + _i4); // 0-9 monospace\n\n  defineSymbol(math, main, mathord, _ch4, wideChar);\n  defineSymbol(text, main, textord, _ch4, wideChar);\n} // We add these Latin-1 letters as symbols for backwards-compatibility,\n// but they are not actually in the font, nor are they supported by the\n// Unicode accent mechanism, so they fall back to Times font and look ugly.\n// TODO(edemaine): Fix this.\n\n\nvar extraLatin = \"\\u00d0\\u00de\\u00fe\";\n\nfor (var _i5 = 0; _i5 < extraLatin.length; _i5++) {\n  var _ch5 = extraLatin.charAt(_i5);\n\n  defineSymbol(math, main, mathord, _ch5, _ch5);\n  defineSymbol(text, main, textord, _ch5, _ch5);\n}\n\n/**\n * This file provides support for Unicode range U+1D400 to U+1D7FF,\n * Mathematical Alphanumeric Symbols.\n *\n * Function wideCharacterFont takes a wide character as input and returns\n * the font information necessary to render it properly.\n */\n/**\n * Data below is from https://www.unicode.org/charts/PDF/U1D400.pdf\n * That document sorts characters into groups by font type, say bold or italic.\n *\n * In the arrays below, each subarray consists three elements:\n *      * The CSS class of that group when in math mode.\n *      * The CSS class of that group when in text mode.\n *      * The font name, so that KaTeX can get font metrics.\n */\n\nvar wideLatinLetterData = [[\"mathbf\", \"textbf\", \"Main-Bold\"], // A-Z bold upright\n[\"mathbf\", \"textbf\", \"Main-Bold\"], // a-z bold upright\n[\"mathnormal\", \"textit\", \"Math-Italic\"], // A-Z italic\n[\"mathnormal\", \"textit\", \"Math-Italic\"], // a-z italic\n[\"boldsymbol\", \"boldsymbol\", \"Main-BoldItalic\"], // A-Z bold italic\n[\"boldsymbol\", \"boldsymbol\", \"Main-BoldItalic\"], // a-z bold italic\n// Map fancy A-Z letters to script, not calligraphic.\n// This aligns with unicode-math and math fonts (except Cambria Math).\n[\"mathscr\", \"textscr\", \"Script-Regular\"], // A-Z script\n[\"\", \"\", \"\"], // a-z script.  No font\n[\"\", \"\", \"\"], // A-Z bold script. No font\n[\"\", \"\", \"\"], // a-z bold script. No font\n[\"mathfrak\", \"textfrak\", \"Fraktur-Regular\"], // A-Z Fraktur\n[\"mathfrak\", \"textfrak\", \"Fraktur-Regular\"], // a-z Fraktur\n[\"mathbb\", \"textbb\", \"AMS-Regular\"], // A-Z double-struck\n[\"mathbb\", \"textbb\", \"AMS-Regular\"], // k double-struck\n// Note that we are using a bold font, but font metrics for regular Fraktur.\n[\"mathboldfrak\", \"textboldfrak\", \"Fraktur-Regular\"], // A-Z bold Fraktur\n[\"mathboldfrak\", \"textboldfrak\", \"Fraktur-Regular\"], // a-z bold Fraktur\n[\"mathsf\", \"textsf\", \"SansSerif-Regular\"], // A-Z sans-serif\n[\"mathsf\", \"textsf\", \"SansSerif-Regular\"], // a-z sans-serif\n[\"mathboldsf\", \"textboldsf\", \"SansSerif-Bold\"], // A-Z bold sans-serif\n[\"mathboldsf\", \"textboldsf\", \"SansSerif-Bold\"], // a-z bold sans-serif\n[\"mathitsf\", \"textitsf\", \"SansSerif-Italic\"], // A-Z italic sans-serif\n[\"mathitsf\", \"textitsf\", \"SansSerif-Italic\"], // a-z italic sans-serif\n[\"\", \"\", \"\"], // A-Z bold italic sans. No font\n[\"\", \"\", \"\"], // a-z bold italic sans. No font\n[\"mathtt\", \"texttt\", \"Typewriter-Regular\"], // A-Z monospace\n[\"mathtt\", \"texttt\", \"Typewriter-Regular\"] // a-z monospace\n];\nvar wideNumeralData = [[\"mathbf\", \"textbf\", \"Main-Bold\"], // 0-9 bold\n[\"\", \"\", \"\"], // 0-9 double-struck. No KaTeX font.\n[\"mathsf\", \"textsf\", \"SansSerif-Regular\"], // 0-9 sans-serif\n[\"mathboldsf\", \"textboldsf\", \"SansSerif-Bold\"], // 0-9 bold sans-serif\n[\"mathtt\", \"texttt\", \"Typewriter-Regular\"] // 0-9 monospace\n];\nvar wideCharacterFont = function wideCharacterFont(wideChar, mode) {\n  // IE doesn't support codePointAt(). So work with the surrogate pair.\n  var H = wideChar.charCodeAt(0); // high surrogate\n\n  var L = wideChar.charCodeAt(1); // low surrogate\n\n  var codePoint = (H - 0xD800) * 0x400 + (L - 0xDC00) + 0x10000;\n  var j = mode === \"math\" ? 0 : 1; // column index for CSS class.\n\n  if (0x1D400 <= codePoint && codePoint < 0x1D6A4) {\n    // wideLatinLetterData contains exactly 26 chars on each row.\n    // So we can calculate the relevant row. No traverse necessary.\n    var i = Math.floor((codePoint - 0x1D400) / 26);\n    return [wideLatinLetterData[i][2], wideLatinLetterData[i][j]];\n  } else if (0x1D7CE <= codePoint && codePoint <= 0x1D7FF) {\n    // Numerals, ten per row.\n    var _i = Math.floor((codePoint - 0x1D7CE) / 10);\n\n    return [wideNumeralData[_i][2], wideNumeralData[_i][j]];\n  } else if (codePoint === 0x1D6A5 || codePoint === 0x1D6A6) {\n    // dotless i or j\n    return [wideLatinLetterData[0][2], wideLatinLetterData[0][j]];\n  } else if (0x1D6A6 < codePoint && codePoint < 0x1D7CE) {\n    // Greek letters. Not supported, yet.\n    return [\"\", \"\"];\n  } else {\n    // We don't support any wide characters outside 1D400\u20131D7FF.\n    throw new ParseError(\"Unsupported character: \" + wideChar);\n  }\n};\n\n/* eslint no-console:0 */\n\n/**\n * Looks up the given symbol in fontMetrics, after applying any symbol\n * replacements defined in symbol.js\n */\nvar lookupSymbol = function lookupSymbol(value, // TODO(#963): Use a union type for this.\nfontName, mode) {\n  // Replace the value with its replaced value from symbol.js\n  if (symbols[mode][value] && symbols[mode][value].replace) {\n    value = symbols[mode][value].replace;\n  }\n\n  return {\n    value: value,\n    metrics: getCharacterMetrics(value, fontName, mode)\n  };\n};\n/**\n * Makes a symbolNode after translation via the list of symbols in symbols.js.\n * Correctly pulls out metrics for the character, and optionally takes a list of\n * classes to be attached to the node.\n *\n * TODO: make argument order closer to makeSpan\n * TODO: add a separate argument for math class (e.g. `mop`, `mbin`), which\n * should if present come first in `classes`.\n * TODO(#953): Make `options` mandatory and always pass it in.\n */\n\n\nvar makeSymbol = function makeSymbol(value, fontName, mode, options, classes) {\n  var lookup = lookupSymbol(value, fontName, mode);\n  var metrics = lookup.metrics;\n  value = lookup.value;\n  var symbolNode;\n\n  if (metrics) {\n    var italic = metrics.italic;\n\n    if (mode === \"text\" || options && options.font === \"mathit\") {\n      italic = 0;\n    }\n\n    symbolNode = new SymbolNode(value, metrics.height, metrics.depth, italic, metrics.skew, metrics.width, classes);\n  } else {\n    // TODO(emily): Figure out a good way to only print this in development\n    typeof console !== \"undefined\" && console.warn(\"No character metrics \" + (\"for '\" + value + \"' in style '\" + fontName + \"' and mode '\" + mode + \"'\"));\n    symbolNode = new SymbolNode(value, 0, 0, 0, 0, 0, classes);\n  }\n\n  if (options) {\n    symbolNode.maxFontSize = options.sizeMultiplier;\n\n    if (options.style.isTight()) {\n      symbolNode.classes.push(\"mtight\");\n    }\n\n    var color = options.getColor();\n\n    if (color) {\n      symbolNode.style.color = color;\n    }\n  }\n\n  return symbolNode;\n};\n/**\n * Makes a symbol in Main-Regular or AMS-Regular.\n * Used for rel, bin, open, close, inner, and punct.\n */\n\n\nvar mathsym = function mathsym(value, mode, options, classes) {\n  if (classes === void 0) {\n    classes = [];\n  }\n\n  // Decide what font to render the symbol in by its entry in the symbols\n  // table.\n  // Have a special case for when the value = \\ because the \\ is used as a\n  // textord in unsupported command errors but cannot be parsed as a regular\n  // text ordinal and is therefore not present as a symbol in the symbols\n  // table for text, as well as a special case for boldsymbol because it\n  // can be used for bold + and -\n  if (options.font === \"boldsymbol\" && lookupSymbol(value, \"Main-Bold\", mode).metrics) {\n    return makeSymbol(value, \"Main-Bold\", mode, options, classes.concat([\"mathbf\"]));\n  } else if (value === \"\\\\\" || symbols[mode][value].font === \"main\") {\n    return makeSymbol(value, \"Main-Regular\", mode, options, classes);\n  } else {\n    return makeSymbol(value, \"AMS-Regular\", mode, options, classes.concat([\"amsrm\"]));\n  }\n};\n/**\n * Determines which of the two font names (Main-Bold and Math-BoldItalic) and\n * corresponding style tags (mathbf or boldsymbol) to use for font \"boldsymbol\",\n * depending on the symbol.  Use this function instead of fontMap for font\n * \"boldsymbol\".\n */\n\n\nvar boldsymbol = function boldsymbol(value, mode, options, classes, type) {\n  if (type !== \"textord\" && lookupSymbol(value, \"Math-BoldItalic\", mode).metrics) {\n    return {\n      fontName: \"Math-BoldItalic\",\n      fontClass: \"boldsymbol\"\n    };\n  } else {\n    // Some glyphs do not exist in Math-BoldItalic so we need to use\n    // Main-Bold instead.\n    return {\n      fontName: \"Main-Bold\",\n      fontClass: \"mathbf\"\n    };\n  }\n};\n/**\n * Makes either a mathord or textord in the correct font and color.\n */\n\n\nvar makeOrd = function makeOrd(group, options, type) {\n  var mode = group.mode;\n  var text = group.text;\n  var classes = [\"mord\"]; // Math mode or Old font (i.e. \\rm)\n\n  var isFont = mode === \"math\" || mode === \"text\" && options.font;\n  var fontOrFamily = isFont ? options.font : options.fontFamily;\n  var wideFontName = \"\";\n  var wideFontClass = \"\";\n\n  if (text.charCodeAt(0) === 0xD835) {\n    [wideFontName, wideFontClass] = wideCharacterFont(text, mode);\n  }\n\n  if (wideFontName.length > 0) {\n    // surrogate pairs get special treatment\n    return makeSymbol(text, wideFontName, mode, options, classes.concat(wideFontClass));\n  } else if (fontOrFamily) {\n    var fontName;\n    var fontClasses;\n\n    if (fontOrFamily === \"boldsymbol\") {\n      var fontData = boldsymbol(text, mode, options, classes, type);\n      fontName = fontData.fontName;\n      fontClasses = [fontData.fontClass];\n    } else if (isFont) {\n      fontName = fontMap[fontOrFamily].fontName;\n      fontClasses = [fontOrFamily];\n    } else {\n      fontName = retrieveTextFontName(fontOrFamily, options.fontWeight, options.fontShape);\n      fontClasses = [fontOrFamily, options.fontWeight, options.fontShape];\n    }\n\n    if (lookupSymbol(text, fontName, mode).metrics) {\n      return makeSymbol(text, fontName, mode, options, classes.concat(fontClasses));\n    } else if (ligatures.hasOwnProperty(text) && fontName.slice(0, 10) === \"Typewriter\") {\n      // Deconstruct ligatures in monospace fonts (\\texttt, \\tt).\n      var parts = [];\n\n      for (var i = 0; i < text.length; i++) {\n        parts.push(makeSymbol(text[i], fontName, mode, options, classes.concat(fontClasses)));\n      }\n\n      return makeFragment(parts);\n    }\n  } // Makes a symbol in the default font for mathords and textords.\n\n\n  if (type === \"mathord\") {\n    return makeSymbol(text, \"Math-Italic\", mode, options, classes.concat([\"mathnormal\"]));\n  } else if (type === \"textord\") {\n    var font = symbols[mode][text] && symbols[mode][text].font;\n\n    if (font === \"ams\") {\n      var _fontName = retrieveTextFontName(\"amsrm\", options.fontWeight, options.fontShape);\n\n      return makeSymbol(text, _fontName, mode, options, classes.concat(\"amsrm\", options.fontWeight, options.fontShape));\n    } else if (font === \"main\" || !font) {\n      var _fontName2 = retrieveTextFontName(\"textrm\", options.fontWeight, options.fontShape);\n\n      return makeSymbol(text, _fontName2, mode, options, classes.concat(options.fontWeight, options.fontShape));\n    } else {\n      // fonts added by plugins\n      var _fontName3 = retrieveTextFontName(font, options.fontWeight, options.fontShape); // We add font name as a css class\n\n\n      return makeSymbol(text, _fontName3, mode, options, classes.concat(_fontName3, options.fontWeight, options.fontShape));\n    }\n  } else {\n    throw new Error(\"unexpected type: \" + type + \" in makeOrd\");\n  }\n};\n/**\n * Returns true if subsequent symbolNodes have the same classes, skew, maxFont,\n * and styles.\n */\n\n\nvar canCombine = (prev, next) => {\n  if (createClass(prev.classes) !== createClass(next.classes) || prev.skew !== next.skew || prev.maxFontSize !== next.maxFontSize) {\n    return false;\n  } // If prev and next both are just \"mbin\"s or \"mord\"s we don't combine them\n  // so that the proper spacing can be preserved.\n\n\n  if (prev.classes.length === 1) {\n    var cls = prev.classes[0];\n\n    if (cls === \"mbin\" || cls === \"mord\") {\n      return false;\n    }\n  }\n\n  for (var style in prev.style) {\n    if (prev.style.hasOwnProperty(style) && prev.style[style] !== next.style[style]) {\n      return false;\n    }\n  }\n\n  for (var _style in next.style) {\n    if (next.style.hasOwnProperty(_style) && prev.style[_style] !== next.style[_style]) {\n      return false;\n    }\n  }\n\n  return true;\n};\n/**\n * Combine consecutive domTree.symbolNodes into a single symbolNode.\n * Note: this function mutates the argument.\n */\n\n\nvar tryCombineChars = chars => {\n  for (var i = 0; i < chars.length - 1; i++) {\n    var prev = chars[i];\n    var next = chars[i + 1];\n\n    if (prev instanceof SymbolNode && next instanceof SymbolNode && canCombine(prev, next)) {\n      prev.text += next.text;\n      prev.height = Math.max(prev.height, next.height);\n      prev.depth = Math.max(prev.depth, next.depth); // Use the last character's italic correction since we use\n      // it to add padding to the right of the span created from\n      // the combined characters.\n\n      prev.italic = next.italic;\n      chars.splice(i + 1, 1);\n      i--;\n    }\n  }\n\n  return chars;\n};\n/**\n * Calculate the height, depth, and maxFontSize of an element based on its\n * children.\n */\n\n\nvar sizeElementFromChildren = function sizeElementFromChildren(elem) {\n  var height = 0;\n  var depth = 0;\n  var maxFontSize = 0;\n\n  for (var i = 0; i < elem.children.length; i++) {\n    var child = elem.children[i];\n\n    if (child.height > height) {\n      height = child.height;\n    }\n\n    if (child.depth > depth) {\n      depth = child.depth;\n    }\n\n    if (child.maxFontSize > maxFontSize) {\n      maxFontSize = child.maxFontSize;\n    }\n  }\n\n  elem.height = height;\n  elem.depth = depth;\n  elem.maxFontSize = maxFontSize;\n};\n/**\n * Makes a span with the given list of classes, list of children, and options.\n *\n * TODO(#953): Ensure that `options` is always provided (currently some call\n * sites don't pass it) and make the type below mandatory.\n * TODO: add a separate argument for math class (e.g. `mop`, `mbin`), which\n * should if present come first in `classes`.\n */\n\n\nvar makeSpan$2 = function makeSpan(classes, children, options, style) {\n  var span = new Span(classes, children, options, style);\n  sizeElementFromChildren(span);\n  return span;\n}; // SVG one is simpler -- doesn't require height, depth, max-font setting.\n// This is also a separate method for typesafety.\n\n\nvar makeSvgSpan = (classes, children, options, style) => new Span(classes, children, options, style);\n\nvar makeLineSpan = function makeLineSpan(className, options, thickness) {\n  var line = makeSpan$2([className], [], options);\n  line.height = Math.max(thickness || options.fontMetrics().defaultRuleThickness, options.minRuleThickness);\n  line.style.borderBottomWidth = makeEm(line.height);\n  line.maxFontSize = 1.0;\n  return line;\n};\n/**\n * Makes an anchor with the given href, list of classes, list of children,\n * and options.\n */\n\n\nvar makeAnchor = function makeAnchor(href, classes, children, options) {\n  var anchor = new Anchor(href, classes, children, options);\n  sizeElementFromChildren(anchor);\n  return anchor;\n};\n/**\n * Makes a document fragment with the given list of children.\n */\n\n\nvar makeFragment = function makeFragment(children) {\n  var fragment = new DocumentFragment(children);\n  sizeElementFromChildren(fragment);\n  return fragment;\n};\n/**\n * Wraps group in a span if it's a document fragment, allowing to apply classes\n * and styles\n */\n\n\nvar wrapFragment = function wrapFragment(group, options) {\n  if (group instanceof DocumentFragment) {\n    return makeSpan$2([], [group], options);\n  }\n\n  return group;\n}; // These are exact object types to catch typos in the names of the optional fields.\n\n\n// Computes the updated `children` list and the overall depth.\n//\n// This helper function for makeVList makes it easier to enforce type safety by\n// allowing early exits (returns) in the logic.\nvar getVListChildrenAndDepth = function getVListChildrenAndDepth(params) {\n  if (params.positionType === \"individualShift\") {\n    var oldChildren = params.children;\n    var children = [oldChildren[0]]; // Add in kerns to the list of params.children to get each element to be\n    // shifted to the correct specified shift\n\n    var _depth = -oldChildren[0].shift - oldChildren[0].elem.depth;\n\n    var currPos = _depth;\n\n    for (var i = 1; i < oldChildren.length; i++) {\n      var diff = -oldChildren[i].shift - currPos - oldChildren[i].elem.depth;\n      var size = diff - (oldChildren[i - 1].elem.height + oldChildren[i - 1].elem.depth);\n      currPos = currPos + diff;\n      children.push({\n        type: \"kern\",\n        size\n      });\n      children.push(oldChildren[i]);\n    }\n\n    return {\n      children,\n      depth: _depth\n    };\n  }\n\n  var depth;\n\n  if (params.positionType === \"top\") {\n    // We always start at the bottom, so calculate the bottom by adding up\n    // all the sizes\n    var bottom = params.positionData;\n\n    for (var _i = 0; _i < params.children.length; _i++) {\n      var child = params.children[_i];\n      bottom -= child.type === \"kern\" ? child.size : child.elem.height + child.elem.depth;\n    }\n\n    depth = bottom;\n  } else if (params.positionType === \"bottom\") {\n    depth = -params.positionData;\n  } else {\n    var firstChild = params.children[0];\n\n    if (firstChild.type !== \"elem\") {\n      throw new Error('First child must have type \"elem\".');\n    }\n\n    if (params.positionType === \"shift\") {\n      depth = -firstChild.elem.depth - params.positionData;\n    } else if (params.positionType === \"firstBaseline\") {\n      depth = -firstChild.elem.depth;\n    } else {\n      throw new Error(\"Invalid positionType \" + params.positionType + \".\");\n    }\n  }\n\n  return {\n    children: params.children,\n    depth\n  };\n};\n/**\n * Makes a vertical list by stacking elements and kerns on top of each other.\n * Allows for many different ways of specifying the positioning method.\n *\n * See VListParam documentation above.\n */\n\n\nvar makeVList = function makeVList(params, options) {\n  var {\n    children,\n    depth\n  } = getVListChildrenAndDepth(params); // Create a strut that is taller than any list item. The strut is added to\n  // each item, where it will determine the item's baseline. Since it has\n  // `overflow:hidden`, the strut's top edge will sit on the item's line box's\n  // top edge and the strut's bottom edge will sit on the item's baseline,\n  // with no additional line-height spacing. This allows the item baseline to\n  // be positioned precisely without worrying about font ascent and\n  // line-height.\n\n  var pstrutSize = 0;\n\n  for (var i = 0; i < children.length; i++) {\n    var child = children[i];\n\n    if (child.type === \"elem\") {\n      var elem = child.elem;\n      pstrutSize = Math.max(pstrutSize, elem.maxFontSize, elem.height);\n    }\n  }\n\n  pstrutSize += 2;\n  var pstrut = makeSpan$2([\"pstrut\"], []);\n  pstrut.style.height = makeEm(pstrutSize); // Create a new list of actual children at the correct offsets\n\n  var realChildren = [];\n  var minPos = depth;\n  var maxPos = depth;\n  var currPos = depth;\n\n  for (var _i2 = 0; _i2 < children.length; _i2++) {\n    var _child = children[_i2];\n\n    if (_child.type === \"kern\") {\n      currPos += _child.size;\n    } else {\n      var _elem = _child.elem;\n      var classes = _child.wrapperClasses || [];\n      var style = _child.wrapperStyle || {};\n      var childWrap = makeSpan$2(classes, [pstrut, _elem], undefined, style);\n      childWrap.style.top = makeEm(-pstrutSize - currPos - _elem.depth);\n\n      if (_child.marginLeft) {\n        childWrap.style.marginLeft = _child.marginLeft;\n      }\n\n      if (_child.marginRight) {\n        childWrap.style.marginRight = _child.marginRight;\n      }\n\n      realChildren.push(childWrap);\n      currPos += _elem.height + _elem.depth;\n    }\n\n    minPos = Math.min(minPos, currPos);\n    maxPos = Math.max(maxPos, currPos);\n  } // The vlist contents go in a table-cell with `vertical-align:bottom`.\n  // This cell's bottom edge will determine the containing table's baseline\n  // without overly expanding the containing line-box.\n\n\n  var vlist = makeSpan$2([\"vlist\"], realChildren);\n  vlist.style.height = makeEm(maxPos); // A second row is used if necessary to represent the vlist's depth.\n\n  var rows;\n\n  if (minPos < 0) {\n    // We will define depth in an empty span with display: table-cell.\n    // It should render with the height that we define. But Chrome, in\n    // contenteditable mode only, treats that span as if it contains some\n    // text content. And that min-height over-rides our desired height.\n    // So we put another empty span inside the depth strut span.\n    var emptySpan = makeSpan$2([], []);\n    var depthStrut = makeSpan$2([\"vlist\"], [emptySpan]);\n    depthStrut.style.height = makeEm(-minPos); // Safari wants the first row to have inline content; otherwise it\n    // puts the bottom of the *second* row on the baseline.\n\n    var topStrut = makeSpan$2([\"vlist-s\"], [new SymbolNode(\"\\u200b\")]);\n    rows = [makeSpan$2([\"vlist-r\"], [vlist, topStrut]), makeSpan$2([\"vlist-r\"], [depthStrut])];\n  } else {\n    rows = [makeSpan$2([\"vlist-r\"], [vlist])];\n  }\n\n  var vtable = makeSpan$2([\"vlist-t\"], rows);\n\n  if (rows.length === 2) {\n    vtable.classes.push(\"vlist-t2\");\n  }\n\n  vtable.height = maxPos;\n  vtable.depth = -minPos;\n  return vtable;\n}; // Glue is a concept from TeX which is a flexible space between elements in\n// either a vertical or horizontal list. In KaTeX, at least for now, it's\n// static space between elements in a horizontal layout.\n\n\nvar makeGlue = (measurement, options) => {\n  // Make an empty span for the space\n  var rule = makeSpan$2([\"mspace\"], [], options);\n  var size = calculateSize(measurement, options);\n  rule.style.marginRight = makeEm(size);\n  return rule;\n}; // Takes font options, and returns the appropriate fontLookup name\n\n\nvar retrieveTextFontName = function retrieveTextFontName(fontFamily, fontWeight, fontShape) {\n  var baseFontName = \"\";\n\n  switch (fontFamily) {\n    case \"amsrm\":\n      baseFontName = \"AMS\";\n      break;\n\n    case \"textrm\":\n      baseFontName = \"Main\";\n      break;\n\n    case \"textsf\":\n      baseFontName = \"SansSerif\";\n      break;\n\n    case \"texttt\":\n      baseFontName = \"Typewriter\";\n      break;\n\n    default:\n      baseFontName = fontFamily;\n    // use fonts added by a plugin\n  }\n\n  var fontStylesName;\n\n  if (fontWeight === \"textbf\" && fontShape === \"textit\") {\n    fontStylesName = \"BoldItalic\";\n  } else if (fontWeight === \"textbf\") {\n    fontStylesName = \"Bold\";\n  } else if (fontWeight === \"textit\") {\n    fontStylesName = \"Italic\";\n  } else {\n    fontStylesName = \"Regular\";\n  }\n\n  return baseFontName + \"-\" + fontStylesName;\n};\n/**\n * Maps TeX font commands to objects containing:\n * - variant: string used for \"mathvariant\" attribute in buildMathML.js\n * - fontName: the \"style\" parameter to fontMetrics.getCharacterMetrics\n */\n// A map between tex font commands an MathML mathvariant attribute values\n\n\nvar fontMap = {\n  // styles\n  \"mathbf\": {\n    variant: \"bold\",\n    fontName: \"Main-Bold\"\n  },\n  \"mathrm\": {\n    variant: \"normal\",\n    fontName: \"Main-Regular\"\n  },\n  \"textit\": {\n    variant: \"italic\",\n    fontName: \"Main-Italic\"\n  },\n  \"mathit\": {\n    variant: \"italic\",\n    fontName: \"Main-Italic\"\n  },\n  \"mathnormal\": {\n    variant: \"italic\",\n    fontName: \"Math-Italic\"\n  },\n  \"mathsfit\": {\n    variant: \"sans-serif-italic\",\n    fontName: \"SansSerif-Italic\"\n  },\n  // \"boldsymbol\" is missing because they require the use of multiple fonts:\n  // Math-BoldItalic and Main-Bold.  This is handled by a special case in\n  // makeOrd which ends up calling boldsymbol.\n  // families\n  \"mathbb\": {\n    variant: \"double-struck\",\n    fontName: \"AMS-Regular\"\n  },\n  \"mathcal\": {\n    variant: \"script\",\n    fontName: \"Caligraphic-Regular\"\n  },\n  \"mathfrak\": {\n    variant: \"fraktur\",\n    fontName: \"Fraktur-Regular\"\n  },\n  \"mathscr\": {\n    variant: \"script\",\n    fontName: \"Script-Regular\"\n  },\n  \"mathsf\": {\n    variant: \"sans-serif\",\n    fontName: \"SansSerif-Regular\"\n  },\n  \"mathtt\": {\n    variant: \"monospace\",\n    fontName: \"Typewriter-Regular\"\n  }\n};\nvar svgData = {\n  //   path, width, height\n  vec: [\"vec\", 0.471, 0.714],\n  // values from the font glyph\n  oiintSize1: [\"oiintSize1\", 0.957, 0.499],\n  // oval to overlay the integrand\n  oiintSize2: [\"oiintSize2\", 1.472, 0.659],\n  oiiintSize1: [\"oiiintSize1\", 1.304, 0.499],\n  oiiintSize2: [\"oiiintSize2\", 1.98, 0.659]\n};\n\nvar staticSvg = function staticSvg(value, options) {\n  // Create a span with inline SVG for the element.\n  var [pathName, width, height] = svgData[value];\n  var path = new PathNode(pathName);\n  var svgNode = new SvgNode([path], {\n    \"width\": makeEm(width),\n    \"height\": makeEm(height),\n    // Override CSS rule `.katex svg { width: 100% }`\n    \"style\": \"width:\" + makeEm(width),\n    \"viewBox\": \"0 0 \" + 1000 * width + \" \" + 1000 * height,\n    \"preserveAspectRatio\": \"xMinYMin\"\n  });\n  var span = makeSvgSpan([\"overlay\"], [svgNode], options);\n  span.height = height;\n  span.style.height = makeEm(height);\n  span.style.width = makeEm(width);\n  return span;\n};\n\nvar buildCommon = {\n  fontMap,\n  makeSymbol,\n  mathsym,\n  makeSpan: makeSpan$2,\n  makeSvgSpan,\n  makeLineSpan,\n  makeAnchor,\n  makeFragment,\n  wrapFragment,\n  makeVList,\n  makeOrd,\n  makeGlue,\n  staticSvg,\n  svgData,\n  tryCombineChars\n};\n\n/**\n * Describes spaces between different classes of atoms.\n */\nvar thinspace = {\n  number: 3,\n  unit: \"mu\"\n};\nvar mediumspace = {\n  number: 4,\n  unit: \"mu\"\n};\nvar thickspace = {\n  number: 5,\n  unit: \"mu\"\n}; // Making the type below exact with all optional fields doesn't work due to\n// - https://github.com/facebook/flow/issues/4582\n// - https://github.com/facebook/flow/issues/5688\n// However, since *all* fields are optional, $Shape<> works as suggested in 5688\n// above.\n\n// Spacing relationships for display and text styles\nvar spacings = {\n  mord: {\n    mop: thinspace,\n    mbin: mediumspace,\n    mrel: thickspace,\n    minner: thinspace\n  },\n  mop: {\n    mord: thinspace,\n    mop: thinspace,\n    mrel: thickspace,\n    minner: thinspace\n  },\n  mbin: {\n    mord: mediumspace,\n    mop: mediumspace,\n    mopen: mediumspace,\n    minner: mediumspace\n  },\n  mrel: {\n    mord: thickspace,\n    mop: thickspace,\n    mopen: thickspace,\n    minner: thickspace\n  },\n  mopen: {},\n  mclose: {\n    mop: thinspace,\n    mbin: mediumspace,\n    mrel: thickspace,\n    minner: thinspace\n  },\n  mpunct: {\n    mord: thinspace,\n    mop: thinspace,\n    mrel: thickspace,\n    mopen: thinspace,\n    mclose: thinspace,\n    mpunct: thinspace,\n    minner: thinspace\n  },\n  minner: {\n    mord: thinspace,\n    mop: thinspace,\n    mbin: mediumspace,\n    mrel: thickspace,\n    mopen: thinspace,\n    mpunct: thinspace,\n    minner: thinspace\n  }\n}; // Spacing relationships for script and scriptscript styles\n\nvar tightSpacings = {\n  mord: {\n    mop: thinspace\n  },\n  mop: {\n    mord: thinspace,\n    mop: thinspace\n  },\n  mbin: {},\n  mrel: {},\n  mopen: {},\n  mclose: {\n    mop: thinspace\n  },\n  mpunct: {},\n  minner: {\n    mop: thinspace\n  }\n};\n\n/** Context provided to function handlers for error messages. */\n// Note: reverse the order of the return type union will cause a flow error.\n// See https://github.com/facebook/flow/issues/3663.\n// More general version of `HtmlBuilder` for nodes (e.g. \\sum, accent types)\n// whose presence impacts super/subscripting. In this case, ParseNode<\"supsub\">\n// delegates its HTML building to the HtmlBuilder corresponding to these nodes.\n\n/**\n * Final function spec for use at parse time.\n * This is almost identical to `FunctionPropSpec`, except it\n * 1. includes the function handler, and\n * 2. requires all arguments except argTypes.\n * It is generated by `defineFunction()` below.\n */\n\n/**\n * All registered functions.\n * `functions.js` just exports this same dictionary again and makes it public.\n * `Parser.js` requires this dictionary.\n */\nvar _functions = {};\n/**\n * All HTML builders. Should be only used in the `define*` and the `build*ML`\n * functions.\n */\n\nvar _htmlGroupBuilders = {};\n/**\n * All MathML builders. Should be only used in the `define*` and the `build*ML`\n * functions.\n */\n\nvar _mathmlGroupBuilders = {};\nfunction defineFunction(_ref) {\n  var {\n    type,\n    names,\n    props,\n    handler,\n    htmlBuilder,\n    mathmlBuilder\n  } = _ref;\n  // Set default values of functions\n  var data = {\n    type,\n    numArgs: props.numArgs,\n    argTypes: props.argTypes,\n    allowedInArgument: !!props.allowedInArgument,\n    allowedInText: !!props.allowedInText,\n    allowedInMath: props.allowedInMath === undefined ? true : props.allowedInMath,\n    numOptionalArgs: props.numOptionalArgs || 0,\n    infix: !!props.infix,\n    primitive: !!props.primitive,\n    handler: handler\n  };\n\n  for (var i = 0; i < names.length; ++i) {\n    _functions[names[i]] = data;\n  }\n\n  if (type) {\n    if (htmlBuilder) {\n      _htmlGroupBuilders[type] = htmlBuilder;\n    }\n\n    if (mathmlBuilder) {\n      _mathmlGroupBuilders[type] = mathmlBuilder;\n    }\n  }\n}\n/**\n * Use this to register only the HTML and MathML builders for a function (e.g.\n * if the function's ParseNode is generated in Parser.js rather than via a\n * stand-alone handler provided to `defineFunction`).\n */\n\nfunction defineFunctionBuilders(_ref2) {\n  var {\n    type,\n    htmlBuilder,\n    mathmlBuilder\n  } = _ref2;\n  defineFunction({\n    type,\n    names: [],\n    props: {\n      numArgs: 0\n    },\n\n    handler() {\n      throw new Error('Should never be called.');\n    },\n\n    htmlBuilder,\n    mathmlBuilder\n  });\n}\nvar normalizeArgument = function normalizeArgument(arg) {\n  return arg.type === \"ordgroup\" && arg.body.length === 1 ? arg.body[0] : arg;\n}; // Since the corresponding buildHTML/buildMathML function expects a\n// list of elements, we normalize for different kinds of arguments\n\nvar ordargument = function ordargument(arg) {\n  return arg.type === \"ordgroup\" ? arg.body : [arg];\n};\n\n/**\n * This file does the main work of building a domTree structure from a parse\n * tree. The entry point is the `buildHTML` function, which takes a parse tree.\n * Then, the buildExpression, buildGroup, and various groupBuilders functions\n * are called, to produce a final HTML tree.\n */\nvar makeSpan$1 = buildCommon.makeSpan; // Binary atoms (first class `mbin`) change into ordinary atoms (`mord`)\n// depending on their surroundings. See TeXbook pg. 442-446, Rules 5 and 6,\n// and the text before Rule 19.\n\nvar binLeftCanceller = [\"leftmost\", \"mbin\", \"mopen\", \"mrel\", \"mop\", \"mpunct\"];\nvar binRightCanceller = [\"rightmost\", \"mrel\", \"mclose\", \"mpunct\"];\nvar styleMap$1 = {\n  \"display\": Style$1.DISPLAY,\n  \"text\": Style$1.TEXT,\n  \"script\": Style$1.SCRIPT,\n  \"scriptscript\": Style$1.SCRIPTSCRIPT\n};\nvar DomEnum = {\n  mord: \"mord\",\n  mop: \"mop\",\n  mbin: \"mbin\",\n  mrel: \"mrel\",\n  mopen: \"mopen\",\n  mclose: \"mclose\",\n  mpunct: \"mpunct\",\n  minner: \"minner\"\n};\n\n/**\n * Take a list of nodes, build them in order, and return a list of the built\n * nodes. documentFragments are flattened into their contents, so the\n * returned list contains no fragments. `isRealGroup` is true if `expression`\n * is a real group (no atoms will be added on either side), as opposed to\n * a partial group (e.g. one created by \\color). `surrounding` is an array\n * consisting type of nodes that will be added to the left and right.\n */\nvar buildExpression$1 = function buildExpression(expression, options, isRealGroup, surrounding) {\n  if (surrounding === void 0) {\n    surrounding = [null, null];\n  }\n\n  // Parse expressions into `groups`.\n  var groups = [];\n\n  for (var i = 0; i < expression.length; i++) {\n    var output = buildGroup$1(expression[i], options);\n\n    if (output instanceof DocumentFragment) {\n      var children = output.children;\n      groups.push(...children);\n    } else {\n      groups.push(output);\n    }\n  } // Combine consecutive domTree.symbolNodes into a single symbolNode.\n\n\n  buildCommon.tryCombineChars(groups); // If `expression` is a partial group, let the parent handle spacings\n  // to avoid processing groups multiple times.\n\n  if (!isRealGroup) {\n    return groups;\n  }\n\n  var glueOptions = options;\n\n  if (expression.length === 1) {\n    var node = expression[0];\n\n    if (node.type === \"sizing\") {\n      glueOptions = options.havingSize(node.size);\n    } else if (node.type === \"styling\") {\n      glueOptions = options.havingStyle(styleMap$1[node.style]);\n    }\n  } // Dummy spans for determining spacings between surrounding atoms.\n  // If `expression` has no atoms on the left or right, class \"leftmost\"\n  // or \"rightmost\", respectively, is used to indicate it.\n\n\n  var dummyPrev = makeSpan$1([surrounding[0] || \"leftmost\"], [], options);\n  var dummyNext = makeSpan$1([surrounding[1] || \"rightmost\"], [], options); // TODO: These code assumes that a node's math class is the first element\n  // of its `classes` array. A later cleanup should ensure this, for\n  // instance by changing the signature of `makeSpan`.\n  // Before determining what spaces to insert, perform bin cancellation.\n  // Binary operators change to ordinary symbols in some contexts.\n\n  var isRoot = isRealGroup === \"root\";\n  traverseNonSpaceNodes(groups, (node, prev) => {\n    var prevType = prev.classes[0];\n    var type = node.classes[0];\n\n    if (prevType === \"mbin\" && utils.contains(binRightCanceller, type)) {\n      prev.classes[0] = \"mord\";\n    } else if (type === \"mbin\" && utils.contains(binLeftCanceller, prevType)) {\n      node.classes[0] = \"mord\";\n    }\n  }, {\n    node: dummyPrev\n  }, dummyNext, isRoot);\n  traverseNonSpaceNodes(groups, (node, prev) => {\n    var prevType = getTypeOfDomTree(prev);\n    var type = getTypeOfDomTree(node); // 'mtight' indicates that the node is script or scriptscript style.\n\n    var space = prevType && type ? node.hasClass(\"mtight\") ? tightSpacings[prevType][type] : spacings[prevType][type] : null;\n\n    if (space) {\n      // Insert glue (spacing) after the `prev`.\n      return buildCommon.makeGlue(space, glueOptions);\n    }\n  }, {\n    node: dummyPrev\n  }, dummyNext, isRoot);\n  return groups;\n}; // Depth-first traverse non-space `nodes`, calling `callback` with the current and\n// previous node as arguments, optionally returning a node to insert after the\n// previous node. `prev` is an object with the previous node and `insertAfter`\n// function to insert after it. `next` is a node that will be added to the right.\n// Used for bin cancellation and inserting spacings.\n\nvar traverseNonSpaceNodes = function traverseNonSpaceNodes(nodes, callback, prev, next, isRoot) {\n  if (next) {\n    // temporarily append the right node, if exists\n    nodes.push(next);\n  }\n\n  var i = 0;\n\n  for (; i < nodes.length; i++) {\n    var node = nodes[i];\n    var partialGroup = checkPartialGroup(node);\n\n    if (partialGroup) {\n      // Recursive DFS\n      // $FlowFixMe: make nodes a $ReadOnlyArray by returning a new array\n      traverseNonSpaceNodes(partialGroup.children, callback, prev, null, isRoot);\n      continue;\n    } // Ignore explicit spaces (e.g., \\;, \\,) when determining what implicit\n    // spacing should go between atoms of different classes\n\n\n    var nonspace = !node.hasClass(\"mspace\");\n\n    if (nonspace) {\n      var result = callback(node, prev.node);\n\n      if (result) {\n        if (prev.insertAfter) {\n          prev.insertAfter(result);\n        } else {\n          // insert at front\n          nodes.unshift(result);\n          i++;\n        }\n      }\n    }\n\n    if (nonspace) {\n      prev.node = node;\n    } else if (isRoot && node.hasClass(\"newline\")) {\n      prev.node = makeSpan$1([\"leftmost\"]); // treat like beginning of line\n    }\n\n    prev.insertAfter = (index => n => {\n      nodes.splice(index + 1, 0, n);\n      i++;\n    })(i);\n  }\n\n  if (next) {\n    nodes.pop();\n  }\n}; // Check if given node is a partial group, i.e., does not affect spacing around.\n\n\nvar checkPartialGroup = function checkPartialGroup(node) {\n  if (node instanceof DocumentFragment || node instanceof Anchor || node instanceof Span && node.hasClass(\"enclosing\")) {\n    return node;\n  }\n\n  return null;\n}; // Return the outermost node of a domTree.\n\n\nvar getOutermostNode = function getOutermostNode(node, side) {\n  var partialGroup = checkPartialGroup(node);\n\n  if (partialGroup) {\n    var children = partialGroup.children;\n\n    if (children.length) {\n      if (side === \"right\") {\n        return getOutermostNode(children[children.length - 1], \"right\");\n      } else if (side === \"left\") {\n        return getOutermostNode(children[0], \"left\");\n      }\n    }\n  }\n\n  return node;\n}; // Return math atom class (mclass) of a domTree.\n// If `side` is given, it will get the type of the outermost node at given side.\n\n\nvar getTypeOfDomTree = function getTypeOfDomTree(node, side) {\n  if (!node) {\n    return null;\n  }\n\n  if (side) {\n    node = getOutermostNode(node, side);\n  } // This makes a lot of assumptions as to where the type of atom\n  // appears.  We should do a better job of enforcing this.\n\n\n  return DomEnum[node.classes[0]] || null;\n};\nvar makeNullDelimiter = function makeNullDelimiter(options, classes) {\n  var moreClasses = [\"nulldelimiter\"].concat(options.baseSizingClasses());\n  return makeSpan$1(classes.concat(moreClasses));\n};\n/**\n * buildGroup is the function that takes a group and calls the correct groupType\n * function for it. It also handles the interaction of size and style changes\n * between parents and children.\n */\n\nvar buildGroup$1 = function buildGroup(group, options, baseOptions) {\n  if (!group) {\n    return makeSpan$1();\n  }\n\n  if (_htmlGroupBuilders[group.type]) {\n    // Call the groupBuilders function\n    // $FlowFixMe\n    var groupNode = _htmlGroupBuilders[group.type](group, options); // If the size changed between the parent and the current group, account\n    // for that size difference.\n\n    if (baseOptions && options.size !== baseOptions.size) {\n      groupNode = makeSpan$1(options.sizingClasses(baseOptions), [groupNode], options);\n      var multiplier = options.sizeMultiplier / baseOptions.sizeMultiplier;\n      groupNode.height *= multiplier;\n      groupNode.depth *= multiplier;\n    }\n\n    return groupNode;\n  } else {\n    throw new ParseError(\"Got group of unknown type: '\" + group.type + \"'\");\n  }\n};\n/**\n * Combine an array of HTML DOM nodes (e.g., the output of `buildExpression`)\n * into an unbreakable HTML node of class .base, with proper struts to\n * guarantee correct vertical extent.  `buildHTML` calls this repeatedly to\n * make up the entire expression as a sequence of unbreakable units.\n */\n\nfunction buildHTMLUnbreakable(children, options) {\n  // Compute height and depth of this chunk.\n  var body = makeSpan$1([\"base\"], children, options); // Add strut, which ensures that the top of the HTML element falls at\n  // the height of the expression, and the bottom of the HTML element\n  // falls at the depth of the expression.\n\n  var strut = makeSpan$1([\"strut\"]);\n  strut.style.height = makeEm(body.height + body.depth);\n\n  if (body.depth) {\n    strut.style.verticalAlign = makeEm(-body.depth);\n  }\n\n  body.children.unshift(strut);\n  return body;\n}\n/**\n * Take an entire parse tree, and build it into an appropriate set of HTML\n * nodes.\n */\n\n\nfunction buildHTML(tree, options) {\n  // Strip off outer tag wrapper for processing below.\n  var tag = null;\n\n  if (tree.length === 1 && tree[0].type === \"tag\") {\n    tag = tree[0].tag;\n    tree = tree[0].body;\n  } // Build the expression contained in the tree\n\n\n  var expression = buildExpression$1(tree, options, \"root\");\n  var eqnNum;\n\n  if (expression.length === 2 && expression[1].hasClass(\"tag\")) {\n    // An environment with automatic equation numbers, e.g. {gather}.\n    eqnNum = expression.pop();\n  }\n\n  var children = []; // Create one base node for each chunk between potential line breaks.\n  // The TeXBook [p.173] says \"A formula will be broken only after a\n  // relation symbol like $=$ or $<$ or $\\rightarrow$, or after a binary\n  // operation symbol like $+$ or $-$ or $\\times$, where the relation or\n  // binary operation is on the ``outer level'' of the formula (i.e., not\n  // enclosed in {...} and not part of an \\over construction).\"\n\n  var parts = [];\n\n  for (var i = 0; i < expression.length; i++) {\n    parts.push(expression[i]);\n\n    if (expression[i].hasClass(\"mbin\") || expression[i].hasClass(\"mrel\") || expression[i].hasClass(\"allowbreak\")) {\n      // Put any post-operator glue on same line as operator.\n      // Watch for \\nobreak along the way, and stop at \\newline.\n      var nobreak = false;\n\n      while (i < expression.length - 1 && expression[i + 1].hasClass(\"mspace\") && !expression[i + 1].hasClass(\"newline\")) {\n        i++;\n        parts.push(expression[i]);\n\n        if (expression[i].hasClass(\"nobreak\")) {\n          nobreak = true;\n        }\n      } // Don't allow break if \\nobreak among the post-operator glue.\n\n\n      if (!nobreak) {\n        children.push(buildHTMLUnbreakable(parts, options));\n        parts = [];\n      }\n    } else if (expression[i].hasClass(\"newline\")) {\n      // Write the line except the newline\n      parts.pop();\n\n      if (parts.length > 0) {\n        children.push(buildHTMLUnbreakable(parts, options));\n        parts = [];\n      } // Put the newline at the top level\n\n\n      children.push(expression[i]);\n    }\n  }\n\n  if (parts.length > 0) {\n    children.push(buildHTMLUnbreakable(parts, options));\n  } // Now, if there was a tag, build it too and append it as a final child.\n\n\n  var tagChild;\n\n  if (tag) {\n    tagChild = buildHTMLUnbreakable(buildExpression$1(tag, options, true));\n    tagChild.classes = [\"tag\"];\n    children.push(tagChild);\n  } else if (eqnNum) {\n    children.push(eqnNum);\n  }\n\n  var htmlNode = makeSpan$1([\"katex-html\"], children);\n  htmlNode.setAttribute(\"aria-hidden\", \"true\"); // Adjust the strut of the tag to be the maximum height of all children\n  // (the height of the enclosing htmlNode) for proper vertical alignment.\n\n  if (tagChild) {\n    var strut = tagChild.children[0];\n    strut.style.height = makeEm(htmlNode.height + htmlNode.depth);\n\n    if (htmlNode.depth) {\n      strut.style.verticalAlign = makeEm(-htmlNode.depth);\n    }\n  }\n\n  return htmlNode;\n}\n\n/**\n * These objects store data about MathML nodes. This is the MathML equivalent\n * of the types in domTree.js. Since MathML handles its own rendering, and\n * since we're mainly using MathML to improve accessibility, we don't manage\n * any of the styling state that the plain DOM nodes do.\n *\n * The `toNode` and `toMarkup` functions work similarly to how they do in\n * domTree.js, creating namespaced DOM nodes and HTML text markup respectively.\n */\nfunction newDocumentFragment(children) {\n  return new DocumentFragment(children);\n}\n/**\n * This node represents a general purpose MathML node of any type. The\n * constructor requires the type of node to create (for example, `\"mo\"` or\n * `\"mspace\"`, corresponding to `<mo>` and `<mspace>` tags).\n */\n\nclass MathNode {\n  constructor(type, children, classes) {\n    this.type = void 0;\n    this.attributes = void 0;\n    this.children = void 0;\n    this.classes = void 0;\n    this.type = type;\n    this.attributes = {};\n    this.children = children || [];\n    this.classes = classes || [];\n  }\n  /**\n   * Sets an attribute on a MathML node. MathML depends on attributes to convey a\n   * semantic content, so this is used heavily.\n   */\n\n\n  setAttribute(name, value) {\n    this.attributes[name] = value;\n  }\n  /**\n   * Gets an attribute on a MathML node.\n   */\n\n\n  getAttribute(name) {\n    return this.attributes[name];\n  }\n  /**\n   * Converts the math node into a MathML-namespaced DOM element.\n   */\n\n\n  toNode() {\n    var node = document.createElementNS(\"http://www.w3.org/1998/Math/MathML\", this.type);\n\n    for (var attr in this.attributes) {\n      if (Object.prototype.hasOwnProperty.call(this.attributes, attr)) {\n        node.setAttribute(attr, this.attributes[attr]);\n      }\n    }\n\n    if (this.classes.length > 0) {\n      node.className = createClass(this.classes);\n    }\n\n    for (var i = 0; i < this.children.length; i++) {\n      // Combine multiple TextNodes into one TextNode, to prevent\n      // screen readers from reading each as a separate word [#3995]\n      if (this.children[i] instanceof TextNode && this.children[i + 1] instanceof TextNode) {\n        var text = this.children[i].toText() + this.children[++i].toText();\n\n        while (this.children[i + 1] instanceof TextNode) {\n          text += this.children[++i].toText();\n        }\n\n        node.appendChild(new TextNode(text).toNode());\n      } else {\n        node.appendChild(this.children[i].toNode());\n      }\n    }\n\n    return node;\n  }\n  /**\n   * Converts the math node into an HTML markup string.\n   */\n\n\n  toMarkup() {\n    var markup = \"<\" + this.type; // Add the attributes\n\n    for (var attr in this.attributes) {\n      if (Object.prototype.hasOwnProperty.call(this.attributes, attr)) {\n        markup += \" \" + attr + \"=\\\"\";\n        markup += utils.escape(this.attributes[attr]);\n        markup += \"\\\"\";\n      }\n    }\n\n    if (this.classes.length > 0) {\n      markup += \" class =\\\"\" + utils.escape(createClass(this.classes)) + \"\\\"\";\n    }\n\n    markup += \">\";\n\n    for (var i = 0; i < this.children.length; i++) {\n      markup += this.children[i].toMarkup();\n    }\n\n    markup += \"</\" + this.type + \">\";\n    return markup;\n  }\n  /**\n   * Converts the math node into a string, similar to innerText, but escaped.\n   */\n\n\n  toText() {\n    return this.children.map(child => child.toText()).join(\"\");\n  }\n\n}\n/**\n * This node represents a piece of text.\n */\n\nclass TextNode {\n  constructor(text) {\n    this.text = void 0;\n    this.text = text;\n  }\n  /**\n   * Converts the text node into a DOM text node.\n   */\n\n\n  toNode() {\n    return document.createTextNode(this.text);\n  }\n  /**\n   * Converts the text node into escaped HTML markup\n   * (representing the text itself).\n   */\n\n\n  toMarkup() {\n    return utils.escape(this.toText());\n  }\n  /**\n   * Converts the text node into a string\n   * (representing the text itself).\n   */\n\n\n  toText() {\n    return this.text;\n  }\n\n}\n/**\n * This node represents a space, but may render as <mspace.../> or as text,\n * depending on the width.\n */\n\nclass SpaceNode {\n  /**\n   * Create a Space node with width given in CSS ems.\n   */\n  constructor(width) {\n    this.width = void 0;\n    this.character = void 0;\n    this.width = width; // See https://www.w3.org/TR/2000/WD-MathML2-20000328/chapter6.html\n    // for a table of space-like characters.  We use Unicode\n    // representations instead of &LongNames; as it's not clear how to\n    // make the latter via document.createTextNode.\n\n    if (width >= 0.05555 && width <= 0.05556) {\n      this.character = \"\\u200a\"; // &VeryThinSpace;\n    } else if (width >= 0.1666 && width <= 0.1667) {\n      this.character = \"\\u2009\"; // &ThinSpace;\n    } else if (width >= 0.2222 && width <= 0.2223) {\n      this.character = \"\\u2005\"; // &MediumSpace;\n    } else if (width >= 0.2777 && width <= 0.2778) {\n      this.character = \"\\u2005\\u200a\"; // &ThickSpace;\n    } else if (width >= -0.05556 && width <= -0.05555) {\n      this.character = \"\\u200a\\u2063\"; // &NegativeVeryThinSpace;\n    } else if (width >= -0.1667 && width <= -0.1666) {\n      this.character = \"\\u2009\\u2063\"; // &NegativeThinSpace;\n    } else if (width >= -0.2223 && width <= -0.2222) {\n      this.character = \"\\u205f\\u2063\"; // &NegativeMediumSpace;\n    } else if (width >= -0.2778 && width <= -0.2777) {\n      this.character = \"\\u2005\\u2063\"; // &NegativeThickSpace;\n    } else {\n      this.character = null;\n    }\n  }\n  /**\n   * Converts the math node into a MathML-namespaced DOM element.\n   */\n\n\n  toNode() {\n    if (this.character) {\n      return document.createTextNode(this.character);\n    } else {\n      var node = document.createElementNS(\"http://www.w3.org/1998/Math/MathML\", \"mspace\");\n      node.setAttribute(\"width\", makeEm(this.width));\n      return node;\n    }\n  }\n  /**\n   * Converts the math node into an HTML markup string.\n   */\n\n\n  toMarkup() {\n    if (this.character) {\n      return \"<mtext>\" + this.character + \"</mtext>\";\n    } else {\n      return \"<mspace width=\\\"\" + makeEm(this.width) + \"\\\"/>\";\n    }\n  }\n  /**\n   * Converts the math node into a string, similar to innerText.\n   */\n\n\n  toText() {\n    if (this.character) {\n      return this.character;\n    } else {\n      return \" \";\n    }\n  }\n\n}\n\nvar mathMLTree = {\n  MathNode,\n  TextNode,\n  SpaceNode,\n  newDocumentFragment\n};\n\n/**\n * This file converts a parse tree into a corresponding MathML tree. The main\n * entry point is the `buildMathML` function, which takes a parse tree from the\n * parser.\n */\n\n/**\n * Takes a symbol and converts it into a MathML text node after performing\n * optional replacement from symbols.js.\n */\nvar makeText = function makeText(text, mode, options) {\n  if (symbols[mode][text] && symbols[mode][text].replace && text.charCodeAt(0) !== 0xD835 && !(ligatures.hasOwnProperty(text) && options && (options.fontFamily && options.fontFamily.slice(4, 6) === \"tt\" || options.font && options.font.slice(4, 6) === \"tt\"))) {\n    text = symbols[mode][text].replace;\n  }\n\n  return new mathMLTree.TextNode(text);\n};\n/**\n * Wrap the given array of nodes in an <mrow> node if needed, i.e.,\n * unless the array has length 1.  Always returns a single node.\n */\n\nvar makeRow = function makeRow(body) {\n  if (body.length === 1) {\n    return body[0];\n  } else {\n    return new mathMLTree.MathNode(\"mrow\", body);\n  }\n};\n/**\n * Returns the math variant as a string or null if none is required.\n */\n\nvar getVariant = function getVariant(group, options) {\n  // Handle \\text... font specifiers as best we can.\n  // MathML has a limited list of allowable mathvariant specifiers; see\n  // https://www.w3.org/TR/MathML3/chapter3.html#presm.commatt\n  if (options.fontFamily === \"texttt\") {\n    return \"monospace\";\n  } else if (options.fontFamily === \"textsf\") {\n    if (options.fontShape === \"textit\" && options.fontWeight === \"textbf\") {\n      return \"sans-serif-bold-italic\";\n    } else if (options.fontShape === \"textit\") {\n      return \"sans-serif-italic\";\n    } else if (options.fontWeight === \"textbf\") {\n      return \"bold-sans-serif\";\n    } else {\n      return \"sans-serif\";\n    }\n  } else if (options.fontShape === \"textit\" && options.fontWeight === \"textbf\") {\n    return \"bold-italic\";\n  } else if (options.fontShape === \"textit\") {\n    return \"italic\";\n  } else if (options.fontWeight === \"textbf\") {\n    return \"bold\";\n  }\n\n  var font = options.font;\n\n  if (!font || font === \"mathnormal\") {\n    return null;\n  }\n\n  var mode = group.mode;\n\n  if (font === \"mathit\") {\n    return \"italic\";\n  } else if (font === \"boldsymbol\") {\n    return group.type === \"textord\" ? \"bold\" : \"bold-italic\";\n  } else if (font === \"mathbf\") {\n    return \"bold\";\n  } else if (font === \"mathbb\") {\n    return \"double-struck\";\n  } else if (font === \"mathsfit\") {\n    return \"sans-serif-italic\";\n  } else if (font === \"mathfrak\") {\n    return \"fraktur\";\n  } else if (font === \"mathscr\" || font === \"mathcal\") {\n    // MathML makes no distinction between script and calligraphic\n    return \"script\";\n  } else if (font === \"mathsf\") {\n    return \"sans-serif\";\n  } else if (font === \"mathtt\") {\n    return \"monospace\";\n  }\n\n  var text = group.text;\n\n  if (utils.contains([\"\\\\imath\", \"\\\\jmath\"], text)) {\n    return null;\n  }\n\n  if (symbols[mode][text] && symbols[mode][text].replace) {\n    text = symbols[mode][text].replace;\n  }\n\n  var fontName = buildCommon.fontMap[font].fontName;\n\n  if (getCharacterMetrics(text, fontName, mode)) {\n    return buildCommon.fontMap[font].variant;\n  }\n\n  return null;\n};\n/**\n * Check for <mi>.</mi> which is how a dot renders in MathML,\n * or <mo separator=\"true\" lspace=\"0em\" rspace=\"0em\">,</mo>\n * which is how a braced comma {,} renders in MathML\n */\n\nfunction isNumberPunctuation(group) {\n  if (!group) {\n    return false;\n  }\n\n  if (group.type === 'mi' && group.children.length === 1) {\n    var child = group.children[0];\n    return child instanceof TextNode && child.text === '.';\n  } else if (group.type === 'mo' && group.children.length === 1 && group.getAttribute('separator') === 'true' && group.getAttribute('lspace') === '0em' && group.getAttribute('rspace') === '0em') {\n    var _child = group.children[0];\n    return _child instanceof TextNode && _child.text === ',';\n  } else {\n    return false;\n  }\n}\n/**\n * Takes a list of nodes, builds them, and returns a list of the generated\n * MathML nodes.  Also combine consecutive <mtext> outputs into a single\n * <mtext> tag.\n */\n\n\nvar buildExpression = function buildExpression(expression, options, isOrdgroup) {\n  if (expression.length === 1) {\n    var group = buildGroup(expression[0], options);\n\n    if (isOrdgroup && group instanceof MathNode && group.type === \"mo\") {\n      // When TeX writers want to suppress spacing on an operator,\n      // they often put the operator by itself inside braces.\n      group.setAttribute(\"lspace\", \"0em\");\n      group.setAttribute(\"rspace\", \"0em\");\n    }\n\n    return [group];\n  }\n\n  var groups = [];\n  var lastGroup;\n\n  for (var i = 0; i < expression.length; i++) {\n    var _group = buildGroup(expression[i], options);\n\n    if (_group instanceof MathNode && lastGroup instanceof MathNode) {\n      // Concatenate adjacent <mtext>s\n      if (_group.type === 'mtext' && lastGroup.type === 'mtext' && _group.getAttribute('mathvariant') === lastGroup.getAttribute('mathvariant')) {\n        lastGroup.children.push(..._group.children);\n        continue; // Concatenate adjacent <mn>s\n      } else if (_group.type === 'mn' && lastGroup.type === 'mn') {\n        lastGroup.children.push(..._group.children);\n        continue; // Concatenate <mn>...</mn> followed by <mi>.</mi>\n      } else if (isNumberPunctuation(_group) && lastGroup.type === 'mn') {\n        lastGroup.children.push(..._group.children);\n        continue; // Concatenate <mi>.</mi> followed by <mn>...</mn>\n      } else if (_group.type === 'mn' && isNumberPunctuation(lastGroup)) {\n        _group.children = [...lastGroup.children, ..._group.children];\n        groups.pop(); // Put preceding <mn>...</mn> or <mi>.</mi> inside base of\n        // <msup><mn>...base...</mn>...exponent...</msup> (or <msub>)\n      } else if ((_group.type === 'msup' || _group.type === 'msub') && _group.children.length >= 1 && (lastGroup.type === 'mn' || isNumberPunctuation(lastGroup))) {\n        var base = _group.children[0];\n\n        if (base instanceof MathNode && base.type === 'mn') {\n          base.children = [...lastGroup.children, ...base.children];\n          groups.pop();\n        } // \\not\n\n      } else if (lastGroup.type === 'mi' && lastGroup.children.length === 1) {\n        var lastChild = lastGroup.children[0];\n\n        if (lastChild instanceof TextNode && lastChild.text === '\\u0338' && (_group.type === 'mo' || _group.type === 'mi' || _group.type === 'mn')) {\n          var child = _group.children[0];\n\n          if (child instanceof TextNode && child.text.length > 0) {\n            // Overlay with combining character long solidus\n            child.text = child.text.slice(0, 1) + \"\\u0338\" + child.text.slice(1);\n            groups.pop();\n          }\n        }\n      }\n    }\n\n    groups.push(_group);\n    lastGroup = _group;\n  }\n\n  return groups;\n};\n/**\n * Equivalent to buildExpression, but wraps the elements in an <mrow>\n * if there's more than one.  Returns a single node instead of an array.\n */\n\nvar buildExpressionRow = function buildExpressionRow(expression, options, isOrdgroup) {\n  return makeRow(buildExpression(expression, options, isOrdgroup));\n};\n/**\n * Takes a group from the parser and calls the appropriate groupBuilders function\n * on it to produce a MathML node.\n */\n\nvar buildGroup = function buildGroup(group, options) {\n  if (!group) {\n    return new mathMLTree.MathNode(\"mrow\");\n  }\n\n  if (_mathmlGroupBuilders[group.type]) {\n    // Call the groupBuilders function\n    // $FlowFixMe\n    var result = _mathmlGroupBuilders[group.type](group, options); // $FlowFixMe\n\n    return result;\n  } else {\n    throw new ParseError(\"Got group of unknown type: '\" + group.type + \"'\");\n  }\n};\n/**\n * Takes a full parse tree and settings and builds a MathML representation of\n * it. In particular, we put the elements from building the parse tree into a\n * <semantics> tag so we can also include that TeX source as an annotation.\n *\n * Note that we actually return a domTree element with a `<math>` inside it so\n * we can do appropriate styling.\n */\n\nfunction buildMathML(tree, texExpression, options, isDisplayMode, forMathmlOnly) {\n  var expression = buildExpression(tree, options); // TODO: Make a pass thru the MathML similar to buildHTML.traverseNonSpaceNodes\n  // and add spacing nodes. This is necessary only adjacent to math operators\n  // like \\sin or \\lim or to subsup elements that contain math operators.\n  // MathML takes care of the other spacing issues.\n  // Wrap up the expression in an mrow so it is presented in the semantics\n  // tag correctly, unless it's a single <mrow> or <mtable>.\n\n  var wrapper;\n\n  if (expression.length === 1 && expression[0] instanceof MathNode && utils.contains([\"mrow\", \"mtable\"], expression[0].type)) {\n    wrapper = expression[0];\n  } else {\n    wrapper = new mathMLTree.MathNode(\"mrow\", expression);\n  } // Build a TeX annotation of the source\n\n\n  var annotation = new mathMLTree.MathNode(\"annotation\", [new mathMLTree.TextNode(texExpression)]);\n  annotation.setAttribute(\"encoding\", \"application/x-tex\");\n  var semantics = new mathMLTree.MathNode(\"semantics\", [wrapper, annotation]);\n  var math = new mathMLTree.MathNode(\"math\", [semantics]);\n  math.setAttribute(\"xmlns\", \"http://www.w3.org/1998/Math/MathML\");\n\n  if (isDisplayMode) {\n    math.setAttribute(\"display\", \"block\");\n  } // You can't style <math> nodes, so we wrap the node in a span.\n  // NOTE: The span class is not typed to have <math> nodes as children, and\n  // we don't want to make the children type more generic since the children\n  // of span are expected to have more fields in `buildHtml` contexts.\n\n\n  var wrapperClass = forMathmlOnly ? \"katex\" : \"katex-mathml\"; // $FlowFixMe\n\n  return buildCommon.makeSpan([wrapperClass], [math]);\n}\n\nvar optionsFromSettings = function optionsFromSettings(settings) {\n  return new Options({\n    style: settings.displayMode ? Style$1.DISPLAY : Style$1.TEXT,\n    maxSize: settings.maxSize,\n    minRuleThickness: settings.minRuleThickness\n  });\n};\n\nvar displayWrap = function displayWrap(node, settings) {\n  if (settings.displayMode) {\n    var classes = [\"katex-display\"];\n\n    if (settings.leqno) {\n      classes.push(\"leqno\");\n    }\n\n    if (settings.fleqn) {\n      classes.push(\"fleqn\");\n    }\n\n    node = buildCommon.makeSpan(classes, [node]);\n  }\n\n  return node;\n};\n\nvar buildTree = function buildTree(tree, expression, settings) {\n  var options = optionsFromSettings(settings);\n  var katexNode;\n\n  if (settings.output === \"mathml\") {\n    return buildMathML(tree, expression, options, settings.displayMode, true);\n  } else if (settings.output === \"html\") {\n    var htmlNode = buildHTML(tree, options);\n    katexNode = buildCommon.makeSpan([\"katex\"], [htmlNode]);\n  } else {\n    var mathMLNode = buildMathML(tree, expression, options, settings.displayMode, false);\n\n    var _htmlNode = buildHTML(tree, options);\n\n    katexNode = buildCommon.makeSpan([\"katex\"], [mathMLNode, _htmlNode]);\n  }\n\n  return displayWrap(katexNode, settings);\n};\nvar buildHTMLTree = function buildHTMLTree(tree, expression, settings) {\n  var options = optionsFromSettings(settings);\n  var htmlNode = buildHTML(tree, options);\n  var katexNode = buildCommon.makeSpan([\"katex\"], [htmlNode]);\n  return displayWrap(katexNode, settings);\n};\n\n/**\n * This file provides support to buildMathML.js and buildHTML.js\n * for stretchy wide elements rendered from SVG files\n * and other CSS trickery.\n */\nvar stretchyCodePoint = {\n  widehat: \"^\",\n  widecheck: \"\u02C7\",\n  widetilde: \"~\",\n  utilde: \"~\",\n  overleftarrow: \"\\u2190\",\n  underleftarrow: \"\\u2190\",\n  xleftarrow: \"\\u2190\",\n  overrightarrow: \"\\u2192\",\n  underrightarrow: \"\\u2192\",\n  xrightarrow: \"\\u2192\",\n  underbrace: \"\\u23df\",\n  overbrace: \"\\u23de\",\n  overgroup: \"\\u23e0\",\n  undergroup: \"\\u23e1\",\n  overleftrightarrow: \"\\u2194\",\n  underleftrightarrow: \"\\u2194\",\n  xleftrightarrow: \"\\u2194\",\n  Overrightarrow: \"\\u21d2\",\n  xRightarrow: \"\\u21d2\",\n  overleftharpoon: \"\\u21bc\",\n  xleftharpoonup: \"\\u21bc\",\n  overrightharpoon: \"\\u21c0\",\n  xrightharpoonup: \"\\u21c0\",\n  xLeftarrow: \"\\u21d0\",\n  xLeftrightarrow: \"\\u21d4\",\n  xhookleftarrow: \"\\u21a9\",\n  xhookrightarrow: \"\\u21aa\",\n  xmapsto: \"\\u21a6\",\n  xrightharpoondown: \"\\u21c1\",\n  xleftharpoondown: \"\\u21bd\",\n  xrightleftharpoons: \"\\u21cc\",\n  xleftrightharpoons: \"\\u21cb\",\n  xtwoheadleftarrow: \"\\u219e\",\n  xtwoheadrightarrow: \"\\u21a0\",\n  xlongequal: \"=\",\n  xtofrom: \"\\u21c4\",\n  xrightleftarrows: \"\\u21c4\",\n  xrightequilibrium: \"\\u21cc\",\n  // Not a perfect match.\n  xleftequilibrium: \"\\u21cb\",\n  // None better available.\n  \"\\\\cdrightarrow\": \"\\u2192\",\n  \"\\\\cdleftarrow\": \"\\u2190\",\n  \"\\\\cdlongequal\": \"=\"\n};\n\nvar mathMLnode = function mathMLnode(label) {\n  var node = new mathMLTree.MathNode(\"mo\", [new mathMLTree.TextNode(stretchyCodePoint[label.replace(/^\\\\/, '')])]);\n  node.setAttribute(\"stretchy\", \"true\");\n  return node;\n}; // Many of the KaTeX SVG images have been adapted from glyphs in KaTeX fonts.\n// Copyright (c) 2009-2010, Design Science, Inc. (<www.mathjax.org>)\n// Copyright (c) 2014-2017 Khan Academy (<www.khanacademy.org>)\n// Licensed under the SIL Open Font License, Version 1.1.\n// See \\nhttp://scripts.sil.org/OFL\n// Very Long SVGs\n//    Many of the KaTeX stretchy wide elements use a long SVG image and an\n//    overflow: hidden tactic to achieve a stretchy image while avoiding\n//    distortion of arrowheads or brace corners.\n//    The SVG typically contains a very long (400 em) arrow.\n//    The SVG is in a container span that has overflow: hidden, so the span\n//    acts like a window that exposes only part of the  SVG.\n//    The SVG always has a longer, thinner aspect ratio than the container span.\n//    After the SVG fills 100% of the height of the container span,\n//    there is a long arrow shaft left over. That left-over shaft is not shown.\n//    Instead, it is sliced off because the span's CSS has overflow: hidden.\n//    Thus, the reader sees an arrow that matches the subject matter width\n//    without distortion.\n//    Some functions, such as \\cancel, need to vary their aspect ratio. These\n//    functions do not get the overflow SVG treatment.\n// Second Brush Stroke\n//    Low resolution monitors struggle to display images in fine detail.\n//    So browsers apply anti-aliasing. A long straight arrow shaft therefore\n//    will sometimes appear as if it has a blurred edge.\n//    To mitigate this, these SVG files contain a second \"brush-stroke\" on the\n//    arrow shafts. That is, a second long thin rectangular SVG path has been\n//    written directly on top of each arrow shaft. This reinforcement causes\n//    some of the screen pixels to display as black instead of the anti-aliased\n//    gray pixel that a  single path would generate. So we get arrow shafts\n//    whose edges appear to be sharper.\n// In the katexImagesData object just below, the dimensions all\n// correspond to path geometry inside the relevant SVG.\n// For example, \\overrightarrow uses the same arrowhead as glyph U+2192\n// from the KaTeX Main font. The scaling factor is 1000.\n// That is, inside the font, that arrowhead is 522 units tall, which\n// corresponds to 0.522 em inside the document.\n\n\nvar katexImagesData = {\n  //   path(s), minWidth, height, align\n  overrightarrow: [[\"rightarrow\"], 0.888, 522, \"xMaxYMin\"],\n  overleftarrow: [[\"leftarrow\"], 0.888, 522, \"xMinYMin\"],\n  underrightarrow: [[\"rightarrow\"], 0.888, 522, \"xMaxYMin\"],\n  underleftarrow: [[\"leftarrow\"], 0.888, 522, \"xMinYMin\"],\n  xrightarrow: [[\"rightarrow\"], 1.469, 522, \"xMaxYMin\"],\n  \"\\\\cdrightarrow\": [[\"rightarrow\"], 3.0, 522, \"xMaxYMin\"],\n  // CD minwwidth2.5pc\n  xleftarrow: [[\"leftarrow\"], 1.469, 522, \"xMinYMin\"],\n  \"\\\\cdleftarrow\": [[\"leftarrow\"], 3.0, 522, \"xMinYMin\"],\n  Overrightarrow: [[\"doublerightarrow\"], 0.888, 560, \"xMaxYMin\"],\n  xRightarrow: [[\"doublerightarrow\"], 1.526, 560, \"xMaxYMin\"],\n  xLeftarrow: [[\"doubleleftarrow\"], 1.526, 560, \"xMinYMin\"],\n  overleftharpoon: [[\"leftharpoon\"], 0.888, 522, \"xMinYMin\"],\n  xleftharpoonup: [[\"leftharpoon\"], 0.888, 522, \"xMinYMin\"],\n  xleftharpoondown: [[\"leftharpoondown\"], 0.888, 522, \"xMinYMin\"],\n  overrightharpoon: [[\"rightharpoon\"], 0.888, 522, \"xMaxYMin\"],\n  xrightharpoonup: [[\"rightharpoon\"], 0.888, 522, \"xMaxYMin\"],\n  xrightharpoondown: [[\"rightharpoondown\"], 0.888, 522, \"xMaxYMin\"],\n  xlongequal: [[\"longequal\"], 0.888, 334, \"xMinYMin\"],\n  \"\\\\cdlongequal\": [[\"longequal\"], 3.0, 334, \"xMinYMin\"],\n  xtwoheadleftarrow: [[\"twoheadleftarrow\"], 0.888, 334, \"xMinYMin\"],\n  xtwoheadrightarrow: [[\"twoheadrightarrow\"], 0.888, 334, \"xMaxYMin\"],\n  overleftrightarrow: [[\"leftarrow\", \"rightarrow\"], 0.888, 522],\n  overbrace: [[\"leftbrace\", \"midbrace\", \"rightbrace\"], 1.6, 548],\n  underbrace: [[\"leftbraceunder\", \"midbraceunder\", \"rightbraceunder\"], 1.6, 548],\n  underleftrightarrow: [[\"leftarrow\", \"rightarrow\"], 0.888, 522],\n  xleftrightarrow: [[\"leftarrow\", \"rightarrow\"], 1.75, 522],\n  xLeftrightarrow: [[\"doubleleftarrow\", \"doublerightarrow\"], 1.75, 560],\n  xrightleftharpoons: [[\"leftharpoondownplus\", \"rightharpoonplus\"], 1.75, 716],\n  xleftrightharpoons: [[\"leftharpoonplus\", \"rightharpoondownplus\"], 1.75, 716],\n  xhookleftarrow: [[\"leftarrow\", \"righthook\"], 1.08, 522],\n  xhookrightarrow: [[\"lefthook\", \"rightarrow\"], 1.08, 522],\n  overlinesegment: [[\"leftlinesegment\", \"rightlinesegment\"], 0.888, 522],\n  underlinesegment: [[\"leftlinesegment\", \"rightlinesegment\"], 0.888, 522],\n  overgroup: [[\"leftgroup\", \"rightgroup\"], 0.888, 342],\n  undergroup: [[\"leftgroupunder\", \"rightgroupunder\"], 0.888, 342],\n  xmapsto: [[\"leftmapsto\", \"rightarrow\"], 1.5, 522],\n  xtofrom: [[\"leftToFrom\", \"rightToFrom\"], 1.75, 528],\n  // The next three arrows are from the mhchem package.\n  // In mhchem.sty, min-length is 2.0em. But these arrows might appear in the\n  // document as \\xrightarrow or \\xrightleftharpoons. Those have\n  // min-length = 1.75em, so we set min-length on these next three to match.\n  xrightleftarrows: [[\"baraboveleftarrow\", \"rightarrowabovebar\"], 1.75, 901],\n  xrightequilibrium: [[\"baraboveshortleftharpoon\", \"rightharpoonaboveshortbar\"], 1.75, 716],\n  xleftequilibrium: [[\"shortbaraboveleftharpoon\", \"shortrightharpoonabovebar\"], 1.75, 716]\n};\n\nvar groupLength = function groupLength(arg) {\n  if (arg.type === \"ordgroup\") {\n    return arg.body.length;\n  } else {\n    return 1;\n  }\n};\n\nvar svgSpan = function svgSpan(group, options) {\n  // Create a span with inline SVG for the element.\n  function buildSvgSpan_() {\n    var viewBoxWidth = 400000; // default\n\n    var label = group.label.slice(1);\n\n    if (utils.contains([\"widehat\", \"widecheck\", \"widetilde\", \"utilde\"], label)) {\n      // Each type in the `if` statement corresponds to one of the ParseNode\n      // types below. This narrowing is required to access `grp.base`.\n      // $FlowFixMe\n      var grp = group; // There are four SVG images available for each function.\n      // Choose a taller image when there are more characters.\n\n      var numChars = groupLength(grp.base);\n      var viewBoxHeight;\n      var pathName;\n\n      var _height;\n\n      if (numChars > 5) {\n        if (label === \"widehat\" || label === \"widecheck\") {\n          viewBoxHeight = 420;\n          viewBoxWidth = 2364;\n          _height = 0.42;\n          pathName = label + \"4\";\n        } else {\n          viewBoxHeight = 312;\n          viewBoxWidth = 2340;\n          _height = 0.34;\n          pathName = \"tilde4\";\n        }\n      } else {\n        var imgIndex = [1, 1, 2, 2, 3, 3][numChars];\n\n        if (label === \"widehat\" || label === \"widecheck\") {\n          viewBoxWidth = [0, 1062, 2364, 2364, 2364][imgIndex];\n          viewBoxHeight = [0, 239, 300, 360, 420][imgIndex];\n          _height = [0, 0.24, 0.3, 0.3, 0.36, 0.42][imgIndex];\n          pathName = label + imgIndex;\n        } else {\n          viewBoxWidth = [0, 600, 1033, 2339, 2340][imgIndex];\n          viewBoxHeight = [0, 260, 286, 306, 312][imgIndex];\n          _height = [0, 0.26, 0.286, 0.3, 0.306, 0.34][imgIndex];\n          pathName = \"tilde\" + imgIndex;\n        }\n      }\n\n      var path = new PathNode(pathName);\n      var svgNode = new SvgNode([path], {\n        \"width\": \"100%\",\n        \"height\": makeEm(_height),\n        \"viewBox\": \"0 0 \" + viewBoxWidth + \" \" + viewBoxHeight,\n        \"preserveAspectRatio\": \"none\"\n      });\n      return {\n        span: buildCommon.makeSvgSpan([], [svgNode], options),\n        minWidth: 0,\n        height: _height\n      };\n    } else {\n      var spans = [];\n      var data = katexImagesData[label];\n      var [paths, _minWidth, _viewBoxHeight] = data;\n\n      var _height2 = _viewBoxHeight / 1000;\n\n      var numSvgChildren = paths.length;\n      var widthClasses;\n      var aligns;\n\n      if (numSvgChildren === 1) {\n        // $FlowFixMe: All these cases must be of the 4-tuple type.\n        var align1 = data[3];\n        widthClasses = [\"hide-tail\"];\n        aligns = [align1];\n      } else if (numSvgChildren === 2) {\n        widthClasses = [\"halfarrow-left\", \"halfarrow-right\"];\n        aligns = [\"xMinYMin\", \"xMaxYMin\"];\n      } else if (numSvgChildren === 3) {\n        widthClasses = [\"brace-left\", \"brace-center\", \"brace-right\"];\n        aligns = [\"xMinYMin\", \"xMidYMin\", \"xMaxYMin\"];\n      } else {\n        throw new Error(\"Correct katexImagesData or update code here to support\\n                    \" + numSvgChildren + \" children.\");\n      }\n\n      for (var i = 0; i < numSvgChildren; i++) {\n        var _path = new PathNode(paths[i]);\n\n        var _svgNode = new SvgNode([_path], {\n          \"width\": \"400em\",\n          \"height\": makeEm(_height2),\n          \"viewBox\": \"0 0 \" + viewBoxWidth + \" \" + _viewBoxHeight,\n          \"preserveAspectRatio\": aligns[i] + \" slice\"\n        });\n\n        var _span = buildCommon.makeSvgSpan([widthClasses[i]], [_svgNode], options);\n\n        if (numSvgChildren === 1) {\n          return {\n            span: _span,\n            minWidth: _minWidth,\n            height: _height2\n          };\n        } else {\n          _span.style.height = makeEm(_height2);\n          spans.push(_span);\n        }\n      }\n\n      return {\n        span: buildCommon.makeSpan([\"stretchy\"], spans, options),\n        minWidth: _minWidth,\n        height: _height2\n      };\n    }\n  } // buildSvgSpan_()\n\n\n  var {\n    span,\n    minWidth,\n    height\n  } = buildSvgSpan_(); // Note that we are returning span.depth = 0.\n  // Any adjustments relative to the baseline must be done in buildHTML.\n\n  span.height = height;\n  span.style.height = makeEm(height);\n\n  if (minWidth > 0) {\n    span.style.minWidth = makeEm(minWidth);\n  }\n\n  return span;\n};\n\nvar encloseSpan = function encloseSpan(inner, label, topPad, bottomPad, options) {\n  // Return an image span for \\cancel, \\bcancel, \\xcancel, \\fbox, or \\angl\n  var img;\n  var totalHeight = inner.height + inner.depth + topPad + bottomPad;\n\n  if (/fbox|color|angl/.test(label)) {\n    img = buildCommon.makeSpan([\"stretchy\", label], [], options);\n\n    if (label === \"fbox\") {\n      var color = options.color && options.getColor();\n\n      if (color) {\n        img.style.borderColor = color;\n      }\n    }\n  } else {\n    // \\cancel, \\bcancel, or \\xcancel\n    // Since \\cancel's SVG is inline and it omits the viewBox attribute,\n    // its stroke-width will not vary with span area.\n    var lines = [];\n\n    if (/^[bx]cancel$/.test(label)) {\n      lines.push(new LineNode({\n        \"x1\": \"0\",\n        \"y1\": \"0\",\n        \"x2\": \"100%\",\n        \"y2\": \"100%\",\n        \"stroke-width\": \"0.046em\"\n      }));\n    }\n\n    if (/^x?cancel$/.test(label)) {\n      lines.push(new LineNode({\n        \"x1\": \"0\",\n        \"y1\": \"100%\",\n        \"x2\": \"100%\",\n        \"y2\": \"0\",\n        \"stroke-width\": \"0.046em\"\n      }));\n    }\n\n    var svgNode = new SvgNode(lines, {\n      \"width\": \"100%\",\n      \"height\": makeEm(totalHeight)\n    });\n    img = buildCommon.makeSvgSpan([], [svgNode], options);\n  }\n\n  img.height = totalHeight;\n  img.style.height = makeEm(totalHeight);\n  return img;\n};\n\nvar stretchy = {\n  encloseSpan,\n  mathMLnode,\n  svgSpan\n};\n\n/**\n * Asserts that the node is of the given type and returns it with stricter\n * typing. Throws if the node's type does not match.\n */\nfunction assertNodeType(node, type) {\n  if (!node || node.type !== type) {\n    throw new Error(\"Expected node of type \" + type + \", but got \" + (node ? \"node of type \" + node.type : String(node)));\n  } // $FlowFixMe, >=0.125\n\n\n  return node;\n}\n/**\n * Returns the node more strictly typed iff it is of the given type. Otherwise,\n * returns null.\n */\n\nfunction assertSymbolNodeType(node) {\n  var typedNode = checkSymbolNodeType(node);\n\n  if (!typedNode) {\n    throw new Error(\"Expected node of symbol group type, but got \" + (node ? \"node of type \" + node.type : String(node)));\n  }\n\n  return typedNode;\n}\n/**\n * Returns the node more strictly typed iff it is of the given type. Otherwise,\n * returns null.\n */\n\nfunction checkSymbolNodeType(node) {\n  if (node && (node.type === \"atom\" || NON_ATOMS.hasOwnProperty(node.type))) {\n    // $FlowFixMe\n    return node;\n  }\n\n  return null;\n}\n\n// NOTE: Unlike most `htmlBuilder`s, this one handles not only \"accent\", but\n// also \"supsub\" since an accent can affect super/subscripting.\nvar htmlBuilder$a = (grp, options) => {\n  // Accents are handled in the TeXbook pg. 443, rule 12.\n  var base;\n  var group;\n  var supSubGroup;\n\n  if (grp && grp.type === \"supsub\") {\n    // If our base is a character box, and we have superscripts and\n    // subscripts, the supsub will defer to us. In particular, we want\n    // to attach the superscripts and subscripts to the inner body (so\n    // that the position of the superscripts and subscripts won't be\n    // affected by the height of the accent). We accomplish this by\n    // sticking the base of the accent into the base of the supsub, and\n    // rendering that, while keeping track of where the accent is.\n    // The real accent group is the base of the supsub group\n    group = assertNodeType(grp.base, \"accent\"); // The character box is the base of the accent group\n\n    base = group.base; // Stick the character box into the base of the supsub group\n\n    grp.base = base; // Rerender the supsub group with its new base, and store that\n    // result.\n\n    supSubGroup = assertSpan(buildGroup$1(grp, options)); // reset original base\n\n    grp.base = group;\n  } else {\n    group = assertNodeType(grp, \"accent\");\n    base = group.base;\n  } // Build the base group\n\n\n  var body = buildGroup$1(base, options.havingCrampedStyle()); // Does the accent need to shift for the skew of a character?\n\n  var mustShift = group.isShifty && utils.isCharacterBox(base); // Calculate the skew of the accent. This is based on the line \"If the\n  // nucleus is not a single character, let s = 0; otherwise set s to the\n  // kern amount for the nucleus followed by the \\skewchar of its font.\"\n  // Note that our skew metrics are just the kern between each character\n  // and the skewchar.\n\n  var skew = 0;\n\n  if (mustShift) {\n    // If the base is a character box, then we want the skew of the\n    // innermost character. To do that, we find the innermost character:\n    var baseChar = utils.getBaseElem(base); // Then, we render its group to get the symbol inside it\n\n    var baseGroup = buildGroup$1(baseChar, options.havingCrampedStyle()); // Finally, we pull the skew off of the symbol.\n\n    skew = assertSymbolDomNode(baseGroup).skew; // Note that we now throw away baseGroup, because the layers we\n    // removed with getBaseElem might contain things like \\color which\n    // we can't get rid of.\n    // TODO(emily): Find a better way to get the skew\n  }\n\n  var accentBelow = group.label === \"\\\\c\"; // calculate the amount of space between the body and the accent\n\n  var clearance = accentBelow ? body.height + body.depth : Math.min(body.height, options.fontMetrics().xHeight); // Build the accent\n\n  var accentBody;\n\n  if (!group.isStretchy) {\n    var accent;\n    var width;\n\n    if (group.label === \"\\\\vec\") {\n      // Before version 0.9, \\vec used the combining font glyph U+20D7.\n      // But browsers, especially Safari, are not consistent in how they\n      // render combining characters when not preceded by a character.\n      // So now we use an SVG.\n      // If Safari reforms, we should consider reverting to the glyph.\n      accent = buildCommon.staticSvg(\"vec\", options);\n      width = buildCommon.svgData.vec[1];\n    } else {\n      accent = buildCommon.makeOrd({\n        mode: group.mode,\n        text: group.label\n      }, options, \"textord\");\n      accent = assertSymbolDomNode(accent); // Remove the italic correction of the accent, because it only serves to\n      // shift the accent over to a place we don't want.\n\n      accent.italic = 0;\n      width = accent.width;\n\n      if (accentBelow) {\n        clearance += accent.depth;\n      }\n    }\n\n    accentBody = buildCommon.makeSpan([\"accent-body\"], [accent]); // \"Full\" accents expand the width of the resulting symbol to be\n    // at least the width of the accent, and overlap directly onto the\n    // character without any vertical offset.\n\n    var accentFull = group.label === \"\\\\textcircled\";\n\n    if (accentFull) {\n      accentBody.classes.push('accent-full');\n      clearance = body.height;\n    } // Shift the accent over by the skew.\n\n\n    var left = skew; // CSS defines `.katex .accent .accent-body:not(.accent-full) { width: 0 }`\n    // so that the accent doesn't contribute to the bounding box.\n    // We need to shift the character by its width (effectively half\n    // its width) to compensate.\n\n    if (!accentFull) {\n      left -= width / 2;\n    }\n\n    accentBody.style.left = makeEm(left); // \\textcircled uses the \\bigcirc glyph, so it needs some\n    // vertical adjustment to match LaTeX.\n\n    if (group.label === \"\\\\textcircled\") {\n      accentBody.style.top = \".2em\";\n    }\n\n    accentBody = buildCommon.makeVList({\n      positionType: \"firstBaseline\",\n      children: [{\n        type: \"elem\",\n        elem: body\n      }, {\n        type: \"kern\",\n        size: -clearance\n      }, {\n        type: \"elem\",\n        elem: accentBody\n      }]\n    }, options);\n  } else {\n    accentBody = stretchy.svgSpan(group, options);\n    accentBody = buildCommon.makeVList({\n      positionType: \"firstBaseline\",\n      children: [{\n        type: \"elem\",\n        elem: body\n      }, {\n        type: \"elem\",\n        elem: accentBody,\n        wrapperClasses: [\"svg-align\"],\n        wrapperStyle: skew > 0 ? {\n          width: \"calc(100% - \" + makeEm(2 * skew) + \")\",\n          marginLeft: makeEm(2 * skew)\n        } : undefined\n      }]\n    }, options);\n  }\n\n  var accentWrap = buildCommon.makeSpan([\"mord\", \"accent\"], [accentBody], options);\n\n  if (supSubGroup) {\n    // Here, we replace the \"base\" child of the supsub with our newly\n    // generated accent.\n    supSubGroup.children[0] = accentWrap; // Since we don't rerun the height calculation after replacing the\n    // accent, we manually recalculate height.\n\n    supSubGroup.height = Math.max(accentWrap.height, supSubGroup.height); // Accents should always be ords, even when their innards are not.\n\n    supSubGroup.classes[0] = \"mord\";\n    return supSubGroup;\n  } else {\n    return accentWrap;\n  }\n};\n\nvar mathmlBuilder$9 = (group, options) => {\n  var accentNode = group.isStretchy ? stretchy.mathMLnode(group.label) : new mathMLTree.MathNode(\"mo\", [makeText(group.label, group.mode)]);\n  var node = new mathMLTree.MathNode(\"mover\", [buildGroup(group.base, options), accentNode]);\n  node.setAttribute(\"accent\", \"true\");\n  return node;\n};\n\nvar NON_STRETCHY_ACCENT_REGEX = new RegExp([\"\\\\acute\", \"\\\\grave\", \"\\\\ddot\", \"\\\\tilde\", \"\\\\bar\", \"\\\\breve\", \"\\\\check\", \"\\\\hat\", \"\\\\vec\", \"\\\\dot\", \"\\\\mathring\"].map(accent => \"\\\\\" + accent).join(\"|\")); // Accents\n\ndefineFunction({\n  type: \"accent\",\n  names: [\"\\\\acute\", \"\\\\grave\", \"\\\\ddot\", \"\\\\tilde\", \"\\\\bar\", \"\\\\breve\", \"\\\\check\", \"\\\\hat\", \"\\\\vec\", \"\\\\dot\", \"\\\\mathring\", \"\\\\widecheck\", \"\\\\widehat\", \"\\\\widetilde\", \"\\\\overrightarrow\", \"\\\\overleftarrow\", \"\\\\Overrightarrow\", \"\\\\overleftrightarrow\", \"\\\\overgroup\", \"\\\\overlinesegment\", \"\\\\overleftharpoon\", \"\\\\overrightharpoon\"],\n  props: {\n    numArgs: 1\n  },\n  handler: (context, args) => {\n    var base = normalizeArgument(args[0]);\n    var isStretchy = !NON_STRETCHY_ACCENT_REGEX.test(context.funcName);\n    var isShifty = !isStretchy || context.funcName === \"\\\\widehat\" || context.funcName === \"\\\\widetilde\" || context.funcName === \"\\\\widecheck\";\n    return {\n      type: \"accent\",\n      mode: context.parser.mode,\n      label: context.funcName,\n      isStretchy: isStretchy,\n      isShifty: isShifty,\n      base: base\n    };\n  },\n  htmlBuilder: htmlBuilder$a,\n  mathmlBuilder: mathmlBuilder$9\n}); // Text-mode accents\n\ndefineFunction({\n  type: \"accent\",\n  names: [\"\\\\'\", \"\\\\`\", \"\\\\^\", \"\\\\~\", \"\\\\=\", \"\\\\u\", \"\\\\.\", '\\\\\"', \"\\\\c\", \"\\\\r\", \"\\\\H\", \"\\\\v\", \"\\\\textcircled\"],\n  props: {\n    numArgs: 1,\n    allowedInText: true,\n    allowedInMath: true,\n    // unless in strict mode\n    argTypes: [\"primitive\"]\n  },\n  handler: (context, args) => {\n    var base = args[0];\n    var mode = context.parser.mode;\n\n    if (mode === \"math\") {\n      context.parser.settings.reportNonstrict(\"mathVsTextAccents\", \"LaTeX's accent \" + context.funcName + \" works only in text mode\");\n      mode = \"text\";\n    }\n\n    return {\n      type: \"accent\",\n      mode: mode,\n      label: context.funcName,\n      isStretchy: false,\n      isShifty: true,\n      base: base\n    };\n  },\n  htmlBuilder: htmlBuilder$a,\n  mathmlBuilder: mathmlBuilder$9\n});\n\n// Horizontal overlap functions\ndefineFunction({\n  type: \"accentUnder\",\n  names: [\"\\\\underleftarrow\", \"\\\\underrightarrow\", \"\\\\underleftrightarrow\", \"\\\\undergroup\", \"\\\\underlinesegment\", \"\\\\utilde\"],\n  props: {\n    numArgs: 1\n  },\n  handler: (_ref, args) => {\n    var {\n      parser,\n      funcName\n    } = _ref;\n    var base = args[0];\n    return {\n      type: \"accentUnder\",\n      mode: parser.mode,\n      label: funcName,\n      base: base\n    };\n  },\n  htmlBuilder: (group, options) => {\n    // Treat under accents much like underlines.\n    var innerGroup = buildGroup$1(group.base, options);\n    var accentBody = stretchy.svgSpan(group, options);\n    var kern = group.label === \"\\\\utilde\" ? 0.12 : 0; // Generate the vlist, with the appropriate kerns\n\n    var vlist = buildCommon.makeVList({\n      positionType: \"top\",\n      positionData: innerGroup.height,\n      children: [{\n        type: \"elem\",\n        elem: accentBody,\n        wrapperClasses: [\"svg-align\"]\n      }, {\n        type: \"kern\",\n        size: kern\n      }, {\n        type: \"elem\",\n        elem: innerGroup\n      }]\n    }, options);\n    return buildCommon.makeSpan([\"mord\", \"accentunder\"], [vlist], options);\n  },\n  mathmlBuilder: (group, options) => {\n    var accentNode = stretchy.mathMLnode(group.label);\n    var node = new mathMLTree.MathNode(\"munder\", [buildGroup(group.base, options), accentNode]);\n    node.setAttribute(\"accentunder\", \"true\");\n    return node;\n  }\n});\n\n// Helper function\nvar paddedNode = group => {\n  var node = new mathMLTree.MathNode(\"mpadded\", group ? [group] : []);\n  node.setAttribute(\"width\", \"+0.6em\");\n  node.setAttribute(\"lspace\", \"0.3em\");\n  return node;\n}; // Stretchy arrows with an optional argument\n\n\ndefineFunction({\n  type: \"xArrow\",\n  names: [\"\\\\xleftarrow\", \"\\\\xrightarrow\", \"\\\\xLeftarrow\", \"\\\\xRightarrow\", \"\\\\xleftrightarrow\", \"\\\\xLeftrightarrow\", \"\\\\xhookleftarrow\", \"\\\\xhookrightarrow\", \"\\\\xmapsto\", \"\\\\xrightharpoondown\", \"\\\\xrightharpoonup\", \"\\\\xleftharpoondown\", \"\\\\xleftharpoonup\", \"\\\\xrightleftharpoons\", \"\\\\xleftrightharpoons\", \"\\\\xlongequal\", \"\\\\xtwoheadrightarrow\", \"\\\\xtwoheadleftarrow\", \"\\\\xtofrom\", // The next 3 functions are here to support the mhchem extension.\n  // Direct use of these functions is discouraged and may break someday.\n  \"\\\\xrightleftarrows\", \"\\\\xrightequilibrium\", \"\\\\xleftequilibrium\", // The next 3 functions are here only to support the {CD} environment.\n  \"\\\\\\\\cdrightarrow\", \"\\\\\\\\cdleftarrow\", \"\\\\\\\\cdlongequal\"],\n  props: {\n    numArgs: 1,\n    numOptionalArgs: 1\n  },\n\n  handler(_ref, args, optArgs) {\n    var {\n      parser,\n      funcName\n    } = _ref;\n    return {\n      type: \"xArrow\",\n      mode: parser.mode,\n      label: funcName,\n      body: args[0],\n      below: optArgs[0]\n    };\n  },\n\n  // Flow is unable to correctly infer the type of `group`, even though it's\n  // unambiguously determined from the passed-in `type` above.\n  htmlBuilder(group, options) {\n    var style = options.style; // Build the argument groups in the appropriate style.\n    // Ref: amsmath.dtx:   \\hbox{$\\scriptstyle\\mkern#3mu{#6}\\mkern#4mu$}%\n    // Some groups can return document fragments.  Handle those by wrapping\n    // them in a span.\n\n    var newOptions = options.havingStyle(style.sup());\n    var upperGroup = buildCommon.wrapFragment(buildGroup$1(group.body, newOptions, options), options);\n    var arrowPrefix = group.label.slice(0, 2) === \"\\\\x\" ? \"x\" : \"cd\";\n    upperGroup.classes.push(arrowPrefix + \"-arrow-pad\");\n    var lowerGroup;\n\n    if (group.below) {\n      // Build the lower group\n      newOptions = options.havingStyle(style.sub());\n      lowerGroup = buildCommon.wrapFragment(buildGroup$1(group.below, newOptions, options), options);\n      lowerGroup.classes.push(arrowPrefix + \"-arrow-pad\");\n    }\n\n    var arrowBody = stretchy.svgSpan(group, options); // Re shift: Note that stretchy.svgSpan returned arrowBody.depth = 0.\n    // The point we want on the math axis is at 0.5 * arrowBody.height.\n\n    var arrowShift = -options.fontMetrics().axisHeight + 0.5 * arrowBody.height; // 2 mu kern. Ref: amsmath.dtx: #7\\if0#2\\else\\mkern#2mu\\fi\n\n    var upperShift = -options.fontMetrics().axisHeight - 0.5 * arrowBody.height - 0.111; // 0.111 em = 2 mu\n\n    if (upperGroup.depth > 0.25 || group.label === \"\\\\xleftequilibrium\") {\n      upperShift -= upperGroup.depth; // shift up if depth encroaches\n    } // Generate the vlist\n\n\n    var vlist;\n\n    if (lowerGroup) {\n      var lowerShift = -options.fontMetrics().axisHeight + lowerGroup.height + 0.5 * arrowBody.height + 0.111;\n      vlist = buildCommon.makeVList({\n        positionType: \"individualShift\",\n        children: [{\n          type: \"elem\",\n          elem: upperGroup,\n          shift: upperShift\n        }, {\n          type: \"elem\",\n          elem: arrowBody,\n          shift: arrowShift\n        }, {\n          type: \"elem\",\n          elem: lowerGroup,\n          shift: lowerShift\n        }]\n      }, options);\n    } else {\n      vlist = buildCommon.makeVList({\n        positionType: \"individualShift\",\n        children: [{\n          type: \"elem\",\n          elem: upperGroup,\n          shift: upperShift\n        }, {\n          type: \"elem\",\n          elem: arrowBody,\n          shift: arrowShift\n        }]\n      }, options);\n    } // $FlowFixMe: Replace this with passing \"svg-align\" into makeVList.\n\n\n    vlist.children[0].children[0].children[1].classes.push(\"svg-align\");\n    return buildCommon.makeSpan([\"mrel\", \"x-arrow\"], [vlist], options);\n  },\n\n  mathmlBuilder(group, options) {\n    var arrowNode = stretchy.mathMLnode(group.label);\n    arrowNode.setAttribute(\"minsize\", group.label.charAt(0) === \"x\" ? \"1.75em\" : \"3.0em\");\n    var node;\n\n    if (group.body) {\n      var upperNode = paddedNode(buildGroup(group.body, options));\n\n      if (group.below) {\n        var lowerNode = paddedNode(buildGroup(group.below, options));\n        node = new mathMLTree.MathNode(\"munderover\", [arrowNode, lowerNode, upperNode]);\n      } else {\n        node = new mathMLTree.MathNode(\"mover\", [arrowNode, upperNode]);\n      }\n    } else if (group.below) {\n      var _lowerNode = paddedNode(buildGroup(group.below, options));\n\n      node = new mathMLTree.MathNode(\"munder\", [arrowNode, _lowerNode]);\n    } else {\n      // This should never happen.\n      // Parser.js throws an error if there is no argument.\n      node = paddedNode();\n      node = new mathMLTree.MathNode(\"mover\", [arrowNode, node]);\n    }\n\n    return node;\n  }\n\n});\n\nvar makeSpan = buildCommon.makeSpan;\n\nfunction htmlBuilder$9(group, options) {\n  var elements = buildExpression$1(group.body, options, true);\n  return makeSpan([group.mclass], elements, options);\n}\n\nfunction mathmlBuilder$8(group, options) {\n  var node;\n  var inner = buildExpression(group.body, options);\n\n  if (group.mclass === \"minner\") {\n    node = new mathMLTree.MathNode(\"mpadded\", inner);\n  } else if (group.mclass === \"mord\") {\n    if (group.isCharacterBox) {\n      node = inner[0];\n      node.type = \"mi\";\n    } else {\n      node = new mathMLTree.MathNode(\"mi\", inner);\n    }\n  } else {\n    if (group.isCharacterBox) {\n      node = inner[0];\n      node.type = \"mo\";\n    } else {\n      node = new mathMLTree.MathNode(\"mo\", inner);\n    } // Set spacing based on what is the most likely adjacent atom type.\n    // See TeXbook p170.\n\n\n    if (group.mclass === \"mbin\") {\n      node.attributes.lspace = \"0.22em\"; // medium space\n\n      node.attributes.rspace = \"0.22em\";\n    } else if (group.mclass === \"mpunct\") {\n      node.attributes.lspace = \"0em\";\n      node.attributes.rspace = \"0.17em\"; // thinspace\n    } else if (group.mclass === \"mopen\" || group.mclass === \"mclose\") {\n      node.attributes.lspace = \"0em\";\n      node.attributes.rspace = \"0em\";\n    } else if (group.mclass === \"minner\") {\n      node.attributes.lspace = \"0.0556em\"; // 1 mu is the most likely option\n\n      node.attributes.width = \"+0.1111em\";\n    } // MathML <mo> default space is 5/18 em, so <mrel> needs no action.\n    // Ref: https://developer.mozilla.org/en-US/docs/Web/MathML/Element/mo\n\n  }\n\n  return node;\n} // Math class commands except \\mathop\n\n\ndefineFunction({\n  type: \"mclass\",\n  names: [\"\\\\mathord\", \"\\\\mathbin\", \"\\\\mathrel\", \"\\\\mathopen\", \"\\\\mathclose\", \"\\\\mathpunct\", \"\\\\mathinner\"],\n  props: {\n    numArgs: 1,\n    primitive: true\n  },\n\n  handler(_ref, args) {\n    var {\n      parser,\n      funcName\n    } = _ref;\n    var body = args[0];\n    return {\n      type: \"mclass\",\n      mode: parser.mode,\n      mclass: \"m\" + funcName.slice(5),\n      // TODO(kevinb): don't prefix with 'm'\n      body: ordargument(body),\n      isCharacterBox: utils.isCharacterBox(body)\n    };\n  },\n\n  htmlBuilder: htmlBuilder$9,\n  mathmlBuilder: mathmlBuilder$8\n});\nvar binrelClass = arg => {\n  // \\binrel@ spacing varies with (bin|rel|ord) of the atom in the argument.\n  // (by rendering separately and with {}s before and after, and measuring\n  // the change in spacing).  We'll do roughly the same by detecting the\n  // atom type directly.\n  var atom = arg.type === \"ordgroup\" && arg.body.length ? arg.body[0] : arg;\n\n  if (atom.type === \"atom\" && (atom.family === \"bin\" || atom.family === \"rel\")) {\n    return \"m\" + atom.family;\n  } else {\n    return \"mord\";\n  }\n}; // \\@binrel{x}{y} renders like y but as mbin/mrel/mord if x is mbin/mrel/mord.\n// This is equivalent to \\binrel@{x}\\binrel@@{y} in AMSTeX.\n\ndefineFunction({\n  type: \"mclass\",\n  names: [\"\\\\@binrel\"],\n  props: {\n    numArgs: 2\n  },\n\n  handler(_ref2, args) {\n    var {\n      parser\n    } = _ref2;\n    return {\n      type: \"mclass\",\n      mode: parser.mode,\n      mclass: binrelClass(args[0]),\n      body: ordargument(args[1]),\n      isCharacterBox: utils.isCharacterBox(args[1])\n    };\n  }\n\n}); // Build a relation or stacked op by placing one symbol on top of another\n\ndefineFunction({\n  type: \"mclass\",\n  names: [\"\\\\stackrel\", \"\\\\overset\", \"\\\\underset\"],\n  props: {\n    numArgs: 2\n  },\n\n  handler(_ref3, args) {\n    var {\n      parser,\n      funcName\n    } = _ref3;\n    var baseArg = args[1];\n    var shiftedArg = args[0];\n    var mclass;\n\n    if (funcName !== \"\\\\stackrel\") {\n      // LaTeX applies \\binrel spacing to \\overset and \\underset.\n      mclass = binrelClass(baseArg);\n    } else {\n      mclass = \"mrel\"; // for \\stackrel\n    }\n\n    var baseOp = {\n      type: \"op\",\n      mode: baseArg.mode,\n      limits: true,\n      alwaysHandleSupSub: true,\n      parentIsSupSub: false,\n      symbol: false,\n      suppressBaseShift: funcName !== \"\\\\stackrel\",\n      body: ordargument(baseArg)\n    };\n    var supsub = {\n      type: \"supsub\",\n      mode: shiftedArg.mode,\n      base: baseOp,\n      sup: funcName === \"\\\\underset\" ? null : shiftedArg,\n      sub: funcName === \"\\\\underset\" ? shiftedArg : null\n    };\n    return {\n      type: \"mclass\",\n      mode: parser.mode,\n      mclass,\n      body: [supsub],\n      isCharacterBox: utils.isCharacterBox(supsub)\n    };\n  },\n\n  htmlBuilder: htmlBuilder$9,\n  mathmlBuilder: mathmlBuilder$8\n});\n\n// \\pmb is a simulation of bold font.\n// The version of \\pmb in ambsy.sty works by typesetting three copies\n// with small offsets. We use CSS text-shadow.\n// It's a hack. Not as good as a real bold font. Better than nothing.\ndefineFunction({\n  type: \"pmb\",\n  names: [\"\\\\pmb\"],\n  props: {\n    numArgs: 1,\n    allowedInText: true\n  },\n\n  handler(_ref, args) {\n    var {\n      parser\n    } = _ref;\n    return {\n      type: \"pmb\",\n      mode: parser.mode,\n      mclass: binrelClass(args[0]),\n      body: ordargument(args[0])\n    };\n  },\n\n  htmlBuilder(group, options) {\n    var elements = buildExpression$1(group.body, options, true);\n    var node = buildCommon.makeSpan([group.mclass], elements, options);\n    node.style.textShadow = \"0.02em 0.01em 0.04px\";\n    return node;\n  },\n\n  mathmlBuilder(group, style) {\n    var inner = buildExpression(group.body, style); // Wrap with an <mstyle> element.\n\n    var node = new mathMLTree.MathNode(\"mstyle\", inner);\n    node.setAttribute(\"style\", \"text-shadow: 0.02em 0.01em 0.04px\");\n    return node;\n  }\n\n});\n\nvar cdArrowFunctionName = {\n  \">\": \"\\\\\\\\cdrightarrow\",\n  \"<\": \"\\\\\\\\cdleftarrow\",\n  \"=\": \"\\\\\\\\cdlongequal\",\n  \"A\": \"\\\\uparrow\",\n  \"V\": \"\\\\downarrow\",\n  \"|\": \"\\\\Vert\",\n  \".\": \"no arrow\"\n};\n\nvar newCell = () => {\n  // Create an empty cell, to be filled below with parse nodes.\n  // The parseTree from this module must be constructed like the\n  // one created by parseArray(), so an empty CD cell must\n  // be a ParseNode<\"styling\">. And CD is always displaystyle.\n  // So these values are fixed and flow can do implicit typing.\n  return {\n    type: \"styling\",\n    body: [],\n    mode: \"math\",\n    style: \"display\"\n  };\n};\n\nvar isStartOfArrow = node => {\n  return node.type === \"textord\" && node.text === \"@\";\n};\n\nvar isLabelEnd = (node, endChar) => {\n  return (node.type === \"mathord\" || node.type === \"atom\") && node.text === endChar;\n};\n\nfunction cdArrow(arrowChar, labels, parser) {\n  // Return a parse tree of an arrow and its labels.\n  // This acts in a way similar to a macro expansion.\n  var funcName = cdArrowFunctionName[arrowChar];\n\n  switch (funcName) {\n    case \"\\\\\\\\cdrightarrow\":\n    case \"\\\\\\\\cdleftarrow\":\n      return parser.callFunction(funcName, [labels[0]], [labels[1]]);\n\n    case \"\\\\uparrow\":\n    case \"\\\\downarrow\":\n      {\n        var leftLabel = parser.callFunction(\"\\\\\\\\cdleft\", [labels[0]], []);\n        var bareArrow = {\n          type: \"atom\",\n          text: funcName,\n          mode: \"math\",\n          family: \"rel\"\n        };\n        var sizedArrow = parser.callFunction(\"\\\\Big\", [bareArrow], []);\n        var rightLabel = parser.callFunction(\"\\\\\\\\cdright\", [labels[1]], []);\n        var arrowGroup = {\n          type: \"ordgroup\",\n          mode: \"math\",\n          body: [leftLabel, sizedArrow, rightLabel]\n        };\n        return parser.callFunction(\"\\\\\\\\cdparent\", [arrowGroup], []);\n      }\n\n    case \"\\\\\\\\cdlongequal\":\n      return parser.callFunction(\"\\\\\\\\cdlongequal\", [], []);\n\n    case \"\\\\Vert\":\n      {\n        var arrow = {\n          type: \"textord\",\n          text: \"\\\\Vert\",\n          mode: \"math\"\n        };\n        return parser.callFunction(\"\\\\Big\", [arrow], []);\n      }\n\n    default:\n      return {\n        type: \"textord\",\n        text: \" \",\n        mode: \"math\"\n      };\n  }\n}\n\nfunction parseCD(parser) {\n  // Get the array's parse nodes with \\\\ temporarily mapped to \\cr.\n  var parsedRows = [];\n  parser.gullet.beginGroup();\n  parser.gullet.macros.set(\"\\\\cr\", \"\\\\\\\\\\\\relax\");\n  parser.gullet.beginGroup();\n\n  while (true) {\n    // eslint-disable-line no-constant-condition\n    // Get the parse nodes for the next row.\n    parsedRows.push(parser.parseExpression(false, \"\\\\\\\\\"));\n    parser.gullet.endGroup();\n    parser.gullet.beginGroup();\n    var next = parser.fetch().text;\n\n    if (next === \"&\" || next === \"\\\\\\\\\") {\n      parser.consume();\n    } else if (next === \"\\\\end\") {\n      if (parsedRows[parsedRows.length - 1].length === 0) {\n        parsedRows.pop(); // final row ended in \\\\\n      }\n\n      break;\n    } else {\n      throw new ParseError(\"Expected \\\\\\\\ or \\\\cr or \\\\end\", parser.nextToken);\n    }\n  }\n\n  var row = [];\n  var body = [row]; // Loop thru the parse nodes. Collect them into cells and arrows.\n\n  for (var i = 0; i < parsedRows.length; i++) {\n    // Start a new row.\n    var rowNodes = parsedRows[i]; // Create the first cell.\n\n    var cell = newCell();\n\n    for (var j = 0; j < rowNodes.length; j++) {\n      if (!isStartOfArrow(rowNodes[j])) {\n        // If a parseNode is not an arrow, it goes into a cell.\n        cell.body.push(rowNodes[j]);\n      } else {\n        // Parse node j is an \"@\", the start of an arrow.\n        // Before starting on the arrow, push the cell into `row`.\n        row.push(cell); // Now collect parseNodes into an arrow.\n        // The character after \"@\" defines the arrow type.\n\n        j += 1;\n        var arrowChar = assertSymbolNodeType(rowNodes[j]).text; // Create two empty label nodes. We may or may not use them.\n\n        var labels = new Array(2);\n        labels[0] = {\n          type: \"ordgroup\",\n          mode: \"math\",\n          body: []\n        };\n        labels[1] = {\n          type: \"ordgroup\",\n          mode: \"math\",\n          body: []\n        }; // Process the arrow.\n\n        if (\"=|.\".indexOf(arrowChar) > -1) ; else if (\"<>AV\".indexOf(arrowChar) > -1) {\n          // Four arrows, `@>>>`, `@<<<`, `@AAA`, and `@VVV`, each take\n          // two optional labels. E.g. the right-point arrow syntax is\n          // really:  @>{optional label}>{optional label}>\n          // Collect parseNodes into labels.\n          for (var labelNum = 0; labelNum < 2; labelNum++) {\n            var inLabel = true;\n\n            for (var k = j + 1; k < rowNodes.length; k++) {\n              if (isLabelEnd(rowNodes[k], arrowChar)) {\n                inLabel = false;\n                j = k;\n                break;\n              }\n\n              if (isStartOfArrow(rowNodes[k])) {\n                throw new ParseError(\"Missing a \" + arrowChar + \" character to complete a CD arrow.\", rowNodes[k]);\n              }\n\n              labels[labelNum].body.push(rowNodes[k]);\n            }\n\n            if (inLabel) {\n              // isLabelEnd never returned a true.\n              throw new ParseError(\"Missing a \" + arrowChar + \" character to complete a CD arrow.\", rowNodes[j]);\n            }\n          }\n        } else {\n          throw new ParseError(\"Expected one of \\\"<>AV=|.\\\" after @\", rowNodes[j]);\n        } // Now join the arrow to its labels.\n\n\n        var arrow = cdArrow(arrowChar, labels, parser); // Wrap the arrow in  ParseNode<\"styling\">.\n        // This is done to match parseArray() behavior.\n\n        var wrappedArrow = {\n          type: \"styling\",\n          body: [arrow],\n          mode: \"math\",\n          style: \"display\" // CD is always displaystyle.\n\n        };\n        row.push(wrappedArrow); // In CD's syntax, cells are implicit. That is, everything that\n        // is not an arrow gets collected into a cell. So create an empty\n        // cell now. It will collect upcoming parseNodes.\n\n        cell = newCell();\n      }\n    }\n\n    if (i % 2 === 0) {\n      // Even-numbered rows consist of: cell, arrow, cell, arrow, ... cell\n      // The last cell is not yet pushed into `row`, so:\n      row.push(cell);\n    } else {\n      // Odd-numbered rows consist of: vert arrow, empty cell, ... vert arrow\n      // Remove the empty cell that was placed at the beginning of `row`.\n      row.shift();\n    }\n\n    row = [];\n    body.push(row);\n  } // End row group\n\n\n  parser.gullet.endGroup(); // End array group defining \\\\\n\n  parser.gullet.endGroup(); // define column separation.\n\n  var cols = new Array(body[0].length).fill({\n    type: \"align\",\n    align: \"c\",\n    pregap: 0.25,\n    // CD package sets \\enskip between columns.\n    postgap: 0.25 // So pre and post each get half an \\enskip, i.e. 0.25em.\n\n  });\n  return {\n    type: \"array\",\n    mode: \"math\",\n    body,\n    arraystretch: 1,\n    addJot: true,\n    rowGaps: [null],\n    cols,\n    colSeparationType: \"CD\",\n    hLinesBeforeRow: new Array(body.length + 1).fill([])\n  };\n} // The functions below are not available for general use.\n// They are here only for internal use by the {CD} environment in placing labels\n// next to vertical arrows.\n// We don't need any such functions for horizontal arrows because we can reuse\n// the functionality that already exists for extensible arrows.\n\ndefineFunction({\n  type: \"cdlabel\",\n  names: [\"\\\\\\\\cdleft\", \"\\\\\\\\cdright\"],\n  props: {\n    numArgs: 1\n  },\n\n  handler(_ref, args) {\n    var {\n      parser,\n      funcName\n    } = _ref;\n    return {\n      type: \"cdlabel\",\n      mode: parser.mode,\n      side: funcName.slice(4),\n      label: args[0]\n    };\n  },\n\n  htmlBuilder(group, options) {\n    var newOptions = options.havingStyle(options.style.sup());\n    var label = buildCommon.wrapFragment(buildGroup$1(group.label, newOptions, options), options);\n    label.classes.push(\"cd-label-\" + group.side);\n    label.style.bottom = makeEm(0.8 - label.depth); // Zero out label height & depth, so vertical align of arrow is set\n    // by the arrow height, not by the label.\n\n    label.height = 0;\n    label.depth = 0;\n    return label;\n  },\n\n  mathmlBuilder(group, options) {\n    var label = new mathMLTree.MathNode(\"mrow\", [buildGroup(group.label, options)]);\n    label = new mathMLTree.MathNode(\"mpadded\", [label]);\n    label.setAttribute(\"width\", \"0\");\n\n    if (group.side === \"left\") {\n      label.setAttribute(\"lspace\", \"-1width\");\n    } // We have to guess at vertical alignment. We know the arrow is 1.8em tall,\n    // But we don't know the height or depth of the label.\n\n\n    label.setAttribute(\"voffset\", \"0.7em\");\n    label = new mathMLTree.MathNode(\"mstyle\", [label]);\n    label.setAttribute(\"displaystyle\", \"false\");\n    label.setAttribute(\"scriptlevel\", \"1\");\n    return label;\n  }\n\n});\ndefineFunction({\n  type: \"cdlabelparent\",\n  names: [\"\\\\\\\\cdparent\"],\n  props: {\n    numArgs: 1\n  },\n\n  handler(_ref2, args) {\n    var {\n      parser\n    } = _ref2;\n    return {\n      type: \"cdlabelparent\",\n      mode: parser.mode,\n      fragment: args[0]\n    };\n  },\n\n  htmlBuilder(group, options) {\n    // Wrap the vertical arrow and its labels.\n    // The parent gets position: relative. The child gets position: absolute.\n    // So CSS can locate the label correctly.\n    var parent = buildCommon.wrapFragment(buildGroup$1(group.fragment, options), options);\n    parent.classes.push(\"cd-vert-arrow\");\n    return parent;\n  },\n\n  mathmlBuilder(group, options) {\n    return new mathMLTree.MathNode(\"mrow\", [buildGroup(group.fragment, options)]);\n  }\n\n});\n\n// {123} and converts into symbol with code 123.  It is used by the *macro*\n// \\char defined in macros.js.\n\ndefineFunction({\n  type: \"textord\",\n  names: [\"\\\\@char\"],\n  props: {\n    numArgs: 1,\n    allowedInText: true\n  },\n\n  handler(_ref, args) {\n    var {\n      parser\n    } = _ref;\n    var arg = assertNodeType(args[0], \"ordgroup\");\n    var group = arg.body;\n    var number = \"\";\n\n    for (var i = 0; i < group.length; i++) {\n      var node = assertNodeType(group[i], \"textord\");\n      number += node.text;\n    }\n\n    var code = parseInt(number);\n    var text;\n\n    if (isNaN(code)) {\n      throw new ParseError(\"\\\\@char has non-numeric argument \" + number); // If we drop IE support, the following code could be replaced with\n      // text = String.fromCodePoint(code)\n    } else if (code < 0 || code >= 0x10ffff) {\n      throw new ParseError(\"\\\\@char with invalid code point \" + number);\n    } else if (code <= 0xffff) {\n      text = String.fromCharCode(code);\n    } else {\n      // Astral code point; split into surrogate halves\n      code -= 0x10000;\n      text = String.fromCharCode((code >> 10) + 0xd800, (code & 0x3ff) + 0xdc00);\n    }\n\n    return {\n      type: \"textord\",\n      mode: parser.mode,\n      text: text\n    };\n  }\n\n});\n\nvar htmlBuilder$8 = (group, options) => {\n  var elements = buildExpression$1(group.body, options.withColor(group.color), false); // \\color isn't supposed to affect the type of the elements it contains.\n  // To accomplish this, we wrap the results in a fragment, so the inner\n  // elements will be able to directly interact with their neighbors. For\n  // example, `\\color{red}{2 +} 3` has the same spacing as `2 + 3`\n\n  return buildCommon.makeFragment(elements);\n};\n\nvar mathmlBuilder$7 = (group, options) => {\n  var inner = buildExpression(group.body, options.withColor(group.color));\n  var node = new mathMLTree.MathNode(\"mstyle\", inner);\n  node.setAttribute(\"mathcolor\", group.color);\n  return node;\n};\n\ndefineFunction({\n  type: \"color\",\n  names: [\"\\\\textcolor\"],\n  props: {\n    numArgs: 2,\n    allowedInText: true,\n    argTypes: [\"color\", \"original\"]\n  },\n\n  handler(_ref, args) {\n    var {\n      parser\n    } = _ref;\n    var color = assertNodeType(args[0], \"color-token\").color;\n    var body = args[1];\n    return {\n      type: \"color\",\n      mode: parser.mode,\n      color,\n      body: ordargument(body)\n    };\n  },\n\n  htmlBuilder: htmlBuilder$8,\n  mathmlBuilder: mathmlBuilder$7\n});\ndefineFunction({\n  type: \"color\",\n  names: [\"\\\\color\"],\n  props: {\n    numArgs: 1,\n    allowedInText: true,\n    argTypes: [\"color\"]\n  },\n\n  handler(_ref2, args) {\n    var {\n      parser,\n      breakOnTokenText\n    } = _ref2;\n    var color = assertNodeType(args[0], \"color-token\").color; // Set macro \\current@color in current namespace to store the current\n    // color, mimicking the behavior of color.sty.\n    // This is currently used just to correctly color a \\right\n    // that follows a \\color command.\n\n    parser.gullet.macros.set(\"\\\\current@color\", color); // Parse out the implicit body that should be colored.\n\n    var body = parser.parseExpression(true, breakOnTokenText);\n    return {\n      type: \"color\",\n      mode: parser.mode,\n      color,\n      body\n    };\n  },\n\n  htmlBuilder: htmlBuilder$8,\n  mathmlBuilder: mathmlBuilder$7\n});\n\n// Row breaks within tabular environments, and line breaks at top level\n\ndefineFunction({\n  type: \"cr\",\n  names: [\"\\\\\\\\\"],\n  props: {\n    numArgs: 0,\n    numOptionalArgs: 0,\n    allowedInText: true\n  },\n\n  handler(_ref, args, optArgs) {\n    var {\n      parser\n    } = _ref;\n    var size = parser.gullet.future().text === \"[\" ? parser.parseSizeGroup(true) : null;\n    var newLine = !parser.settings.displayMode || !parser.settings.useStrictBehavior(\"newLineInDisplayMode\", \"In LaTeX, \\\\\\\\ or \\\\newline \" + \"does nothing in display mode\");\n    return {\n      type: \"cr\",\n      mode: parser.mode,\n      newLine,\n      size: size && assertNodeType(size, \"size\").value\n    };\n  },\n\n  // The following builders are called only at the top level,\n  // not within tabular/array environments.\n  htmlBuilder(group, options) {\n    var span = buildCommon.makeSpan([\"mspace\"], [], options);\n\n    if (group.newLine) {\n      span.classes.push(\"newline\");\n\n      if (group.size) {\n        span.style.marginTop = makeEm(calculateSize(group.size, options));\n      }\n    }\n\n    return span;\n  },\n\n  mathmlBuilder(group, options) {\n    var node = new mathMLTree.MathNode(\"mspace\");\n\n    if (group.newLine) {\n      node.setAttribute(\"linebreak\", \"newline\");\n\n      if (group.size) {\n        node.setAttribute(\"height\", makeEm(calculateSize(group.size, options)));\n      }\n    }\n\n    return node;\n  }\n\n});\n\nvar globalMap = {\n  \"\\\\global\": \"\\\\global\",\n  \"\\\\long\": \"\\\\\\\\globallong\",\n  \"\\\\\\\\globallong\": \"\\\\\\\\globallong\",\n  \"\\\\def\": \"\\\\gdef\",\n  \"\\\\gdef\": \"\\\\gdef\",\n  \"\\\\edef\": \"\\\\xdef\",\n  \"\\\\xdef\": \"\\\\xdef\",\n  \"\\\\let\": \"\\\\\\\\globallet\",\n  \"\\\\futurelet\": \"\\\\\\\\globalfuture\"\n};\n\nvar checkControlSequence = tok => {\n  var name = tok.text;\n\n  if (/^(?:[\\\\{}$&#^_]|EOF)$/.test(name)) {\n    throw new ParseError(\"Expected a control sequence\", tok);\n  }\n\n  return name;\n};\n\nvar getRHS = parser => {\n  var tok = parser.gullet.popToken();\n\n  if (tok.text === \"=\") {\n    // consume optional equals\n    tok = parser.gullet.popToken();\n\n    if (tok.text === \" \") {\n      // consume one optional space\n      tok = parser.gullet.popToken();\n    }\n  }\n\n  return tok;\n};\n\nvar letCommand = (parser, name, tok, global) => {\n  var macro = parser.gullet.macros.get(tok.text);\n\n  if (macro == null) {\n    // don't expand it later even if a macro with the same name is defined\n    // e.g., \\let\\foo=\\frac \\def\\frac{\\relax} \\frac12\n    tok.noexpand = true;\n    macro = {\n      tokens: [tok],\n      numArgs: 0,\n      // reproduce the same behavior in expansion\n      unexpandable: !parser.gullet.isExpandable(tok.text)\n    };\n  }\n\n  parser.gullet.macros.set(name, macro, global);\n}; // <assignment> -> <non-macro assignment>|<macro assignment>\n// <non-macro assignment> -> <simple assignment>|\\global<non-macro assignment>\n// <macro assignment> -> <definition>|<prefix><macro assignment>\n// <prefix> -> \\global|\\long|\\outer\n\n\ndefineFunction({\n  type: \"internal\",\n  names: [\"\\\\global\", \"\\\\long\", \"\\\\\\\\globallong\" // can\u2019t be entered directly\n  ],\n  props: {\n    numArgs: 0,\n    allowedInText: true\n  },\n\n  handler(_ref) {\n    var {\n      parser,\n      funcName\n    } = _ref;\n    parser.consumeSpaces();\n    var token = parser.fetch();\n\n    if (globalMap[token.text]) {\n      // KaTeX doesn't have \\par, so ignore \\long\n      if (funcName === \"\\\\global\" || funcName === \"\\\\\\\\globallong\") {\n        token.text = globalMap[token.text];\n      }\n\n      return assertNodeType(parser.parseFunction(), \"internal\");\n    }\n\n    throw new ParseError(\"Invalid token after macro prefix\", token);\n  }\n\n}); // Basic support for macro definitions: \\def, \\gdef, \\edef, \\xdef\n// <definition> -> <def><control sequence><definition text>\n// <def> -> \\def|\\gdef|\\edef|\\xdef\n// <definition text> -> <parameter text><left brace><balanced text><right brace>\n\ndefineFunction({\n  type: \"internal\",\n  names: [\"\\\\def\", \"\\\\gdef\", \"\\\\edef\", \"\\\\xdef\"],\n  props: {\n    numArgs: 0,\n    allowedInText: true,\n    primitive: true\n  },\n\n  handler(_ref2) {\n    var {\n      parser,\n      funcName\n    } = _ref2;\n    var tok = parser.gullet.popToken();\n    var name = tok.text;\n\n    if (/^(?:[\\\\{}$&#^_]|EOF)$/.test(name)) {\n      throw new ParseError(\"Expected a control sequence\", tok);\n    }\n\n    var numArgs = 0;\n    var insert;\n    var delimiters = [[]]; // <parameter text> contains no braces\n\n    while (parser.gullet.future().text !== \"{\") {\n      tok = parser.gullet.popToken();\n\n      if (tok.text === \"#\") {\n        // If the very last character of the <parameter text> is #, so that\n        // this # is immediately followed by {, TeX will behave as if the {\n        // had been inserted at the right end of both the parameter text\n        // and the replacement text.\n        if (parser.gullet.future().text === \"{\") {\n          insert = parser.gullet.future();\n          delimiters[numArgs].push(\"{\");\n          break;\n        } // A parameter, the first appearance of # must be followed by 1,\n        // the next by 2, and so on; up to nine #\u2019s are allowed\n\n\n        tok = parser.gullet.popToken();\n\n        if (!/^[1-9]$/.test(tok.text)) {\n          throw new ParseError(\"Invalid argument number \\\"\" + tok.text + \"\\\"\");\n        }\n\n        if (parseInt(tok.text) !== numArgs + 1) {\n          throw new ParseError(\"Argument number \\\"\" + tok.text + \"\\\" out of order\");\n        }\n\n        numArgs++;\n        delimiters.push([]);\n      } else if (tok.text === \"EOF\") {\n        throw new ParseError(\"Expected a macro definition\");\n      } else {\n        delimiters[numArgs].push(tok.text);\n      }\n    } // replacement text, enclosed in '{' and '}' and properly nested\n\n\n    var {\n      tokens\n    } = parser.gullet.consumeArg();\n\n    if (insert) {\n      tokens.unshift(insert);\n    }\n\n    if (funcName === \"\\\\edef\" || funcName === \"\\\\xdef\") {\n      tokens = parser.gullet.expandTokens(tokens);\n      tokens.reverse(); // to fit in with stack order\n    } // Final arg is the expansion of the macro\n\n\n    parser.gullet.macros.set(name, {\n      tokens,\n      numArgs,\n      delimiters\n    }, funcName === globalMap[funcName]);\n    return {\n      type: \"internal\",\n      mode: parser.mode\n    };\n  }\n\n}); // <simple assignment> -> <let assignment>\n// <let assignment> -> \\futurelet<control sequence><token><token>\n//     | \\let<control sequence><equals><one optional space><token>\n// <equals> -> <optional spaces>|<optional spaces>=\n\ndefineFunction({\n  type: \"internal\",\n  names: [\"\\\\let\", \"\\\\\\\\globallet\" // can\u2019t be entered directly\n  ],\n  props: {\n    numArgs: 0,\n    allowedInText: true,\n    primitive: true\n  },\n\n  handler(_ref3) {\n    var {\n      parser,\n      funcName\n    } = _ref3;\n    var name = checkControlSequence(parser.gullet.popToken());\n    parser.gullet.consumeSpaces();\n    var tok = getRHS(parser);\n    letCommand(parser, name, tok, funcName === \"\\\\\\\\globallet\");\n    return {\n      type: \"internal\",\n      mode: parser.mode\n    };\n  }\n\n}); // ref: https://www.tug.org/TUGboat/tb09-3/tb22bechtolsheim.pdf\n\ndefineFunction({\n  type: \"internal\",\n  names: [\"\\\\futurelet\", \"\\\\\\\\globalfuture\" // can\u2019t be entered directly\n  ],\n  props: {\n    numArgs: 0,\n    allowedInText: true,\n    primitive: true\n  },\n\n  handler(_ref4) {\n    var {\n      parser,\n      funcName\n    } = _ref4;\n    var name = checkControlSequence(parser.gullet.popToken());\n    var middle = parser.gullet.popToken();\n    var tok = parser.gullet.popToken();\n    letCommand(parser, name, tok, funcName === \"\\\\\\\\globalfuture\");\n    parser.gullet.pushToken(tok);\n    parser.gullet.pushToken(middle);\n    return {\n      type: \"internal\",\n      mode: parser.mode\n    };\n  }\n\n});\n\n/**\n * This file deals with creating delimiters of various sizes. The TeXbook\n * discusses these routines on page 441-442, in the \"Another subroutine sets box\n * x to a specified variable delimiter\" paragraph.\n *\n * There are three main routines here. `makeSmallDelim` makes a delimiter in the\n * normal font, but in either text, script, or scriptscript style.\n * `makeLargeDelim` makes a delimiter in textstyle, but in one of the Size1,\n * Size2, Size3, or Size4 fonts. `makeStackedDelim` makes a delimiter out of\n * smaller pieces that are stacked on top of one another.\n *\n * The functions take a parameter `center`, which determines if the delimiter\n * should be centered around the axis.\n *\n * Then, there are three exposed functions. `sizedDelim` makes a delimiter in\n * one of the given sizes. This is used for things like `\\bigl`.\n * `customSizedDelim` makes a delimiter with a given total height+depth. It is\n * called in places like `\\sqrt`. `leftRightDelim` makes an appropriate\n * delimiter which surrounds an expression of a given height an depth. It is\n * used in `\\left` and `\\right`.\n */\n\n/**\n * Get the metrics for a given symbol and font, after transformation (i.e.\n * after following replacement from symbols.js)\n */\nvar getMetrics = function getMetrics(symbol, font, mode) {\n  var replace = symbols.math[symbol] && symbols.math[symbol].replace;\n  var metrics = getCharacterMetrics(replace || symbol, font, mode);\n\n  if (!metrics) {\n    throw new Error(\"Unsupported symbol \" + symbol + \" and font size \" + font + \".\");\n  }\n\n  return metrics;\n};\n/**\n * Puts a delimiter span in a given style, and adds appropriate height, depth,\n * and maxFontSizes.\n */\n\n\nvar styleWrap = function styleWrap(delim, toStyle, options, classes) {\n  var newOptions = options.havingBaseStyle(toStyle);\n  var span = buildCommon.makeSpan(classes.concat(newOptions.sizingClasses(options)), [delim], options);\n  var delimSizeMultiplier = newOptions.sizeMultiplier / options.sizeMultiplier;\n  span.height *= delimSizeMultiplier;\n  span.depth *= delimSizeMultiplier;\n  span.maxFontSize = newOptions.sizeMultiplier;\n  return span;\n};\n\nvar centerSpan = function centerSpan(span, options, style) {\n  var newOptions = options.havingBaseStyle(style);\n  var shift = (1 - options.sizeMultiplier / newOptions.sizeMultiplier) * options.fontMetrics().axisHeight;\n  span.classes.push(\"delimcenter\");\n  span.style.top = makeEm(shift);\n  span.height -= shift;\n  span.depth += shift;\n};\n/**\n * Makes a small delimiter. This is a delimiter that comes in the Main-Regular\n * font, but is restyled to either be in textstyle, scriptstyle, or\n * scriptscriptstyle.\n */\n\n\nvar makeSmallDelim = function makeSmallDelim(delim, style, center, options, mode, classes) {\n  var text = buildCommon.makeSymbol(delim, \"Main-Regular\", mode, options);\n  var span = styleWrap(text, style, options, classes);\n\n  if (center) {\n    centerSpan(span, options, style);\n  }\n\n  return span;\n};\n/**\n * Builds a symbol in the given font size (note size is an integer)\n */\n\n\nvar mathrmSize = function mathrmSize(value, size, mode, options) {\n  return buildCommon.makeSymbol(value, \"Size\" + size + \"-Regular\", mode, options);\n};\n/**\n * Makes a large delimiter. This is a delimiter that comes in the Size1, Size2,\n * Size3, or Size4 fonts. It is always rendered in textstyle.\n */\n\n\nvar makeLargeDelim = function makeLargeDelim(delim, size, center, options, mode, classes) {\n  var inner = mathrmSize(delim, size, mode, options);\n  var span = styleWrap(buildCommon.makeSpan([\"delimsizing\", \"size\" + size], [inner], options), Style$1.TEXT, options, classes);\n\n  if (center) {\n    centerSpan(span, options, Style$1.TEXT);\n  }\n\n  return span;\n};\n/**\n * Make a span from a font glyph with the given offset and in the given font.\n * This is used in makeStackedDelim to make the stacking pieces for the delimiter.\n */\n\n\nvar makeGlyphSpan = function makeGlyphSpan(symbol, font, mode) {\n  var sizeClass; // Apply the correct CSS class to choose the right font.\n\n  if (font === \"Size1-Regular\") {\n    sizeClass = \"delim-size1\";\n  } else\n    /* if (font === \"Size4-Regular\") */\n    {\n      sizeClass = \"delim-size4\";\n    }\n\n  var corner = buildCommon.makeSpan([\"delimsizinginner\", sizeClass], [buildCommon.makeSpan([], [buildCommon.makeSymbol(symbol, font, mode)])]); // Since this will be passed into `makeVList` in the end, wrap the element\n  // in the appropriate tag that VList uses.\n\n  return {\n    type: \"elem\",\n    elem: corner\n  };\n};\n\nvar makeInner = function makeInner(ch, height, options) {\n  // Create a span with inline SVG for the inner part of a tall stacked delimiter.\n  var width = fontMetricsData['Size4-Regular'][ch.charCodeAt(0)] ? fontMetricsData['Size4-Regular'][ch.charCodeAt(0)][4] : fontMetricsData['Size1-Regular'][ch.charCodeAt(0)][4];\n  var path = new PathNode(\"inner\", innerPath(ch, Math.round(1000 * height)));\n  var svgNode = new SvgNode([path], {\n    \"width\": makeEm(width),\n    \"height\": makeEm(height),\n    // Override CSS rule `.katex svg { width: 100% }`\n    \"style\": \"width:\" + makeEm(width),\n    \"viewBox\": \"0 0 \" + 1000 * width + \" \" + Math.round(1000 * height),\n    \"preserveAspectRatio\": \"xMinYMin\"\n  });\n  var span = buildCommon.makeSvgSpan([], [svgNode], options);\n  span.height = height;\n  span.style.height = makeEm(height);\n  span.style.width = makeEm(width);\n  return {\n    type: \"elem\",\n    elem: span\n  };\n}; // Helpers for makeStackedDelim\n\n\nvar lapInEms = 0.008;\nvar lap = {\n  type: \"kern\",\n  size: -1 * lapInEms\n};\nvar verts = [\"|\", \"\\\\lvert\", \"\\\\rvert\", \"\\\\vert\"];\nvar doubleVerts = [\"\\\\|\", \"\\\\lVert\", \"\\\\rVert\", \"\\\\Vert\"];\n/**\n * Make a stacked delimiter out of a given delimiter, with the total height at\n * least `heightTotal`. This routine is mentioned on page 442 of the TeXbook.\n */\n\nvar makeStackedDelim = function makeStackedDelim(delim, heightTotal, center, options, mode, classes) {\n  // There are four parts, the top, an optional middle, a repeated part, and a\n  // bottom.\n  var top;\n  var middle;\n  var repeat;\n  var bottom;\n  var svgLabel = \"\";\n  var viewBoxWidth = 0;\n  top = repeat = bottom = delim;\n  middle = null; // Also keep track of what font the delimiters are in\n\n  var font = \"Size1-Regular\"; // We set the parts and font based on the symbol. Note that we use\n  // '\\u23d0' instead of '|' and '\\u2016' instead of '\\\\|' for the\n  // repeats of the arrows\n\n  if (delim === \"\\\\uparrow\") {\n    repeat = bottom = \"\\u23d0\";\n  } else if (delim === \"\\\\Uparrow\") {\n    repeat = bottom = \"\\u2016\";\n  } else if (delim === \"\\\\downarrow\") {\n    top = repeat = \"\\u23d0\";\n  } else if (delim === \"\\\\Downarrow\") {\n    top = repeat = \"\\u2016\";\n  } else if (delim === \"\\\\updownarrow\") {\n    top = \"\\\\uparrow\";\n    repeat = \"\\u23d0\";\n    bottom = \"\\\\downarrow\";\n  } else if (delim === \"\\\\Updownarrow\") {\n    top = \"\\\\Uparrow\";\n    repeat = \"\\u2016\";\n    bottom = \"\\\\Downarrow\";\n  } else if (utils.contains(verts, delim)) {\n    repeat = \"\\u2223\";\n    svgLabel = \"vert\";\n    viewBoxWidth = 333;\n  } else if (utils.contains(doubleVerts, delim)) {\n    repeat = \"\\u2225\";\n    svgLabel = \"doublevert\";\n    viewBoxWidth = 556;\n  } else if (delim === \"[\" || delim === \"\\\\lbrack\") {\n    top = \"\\u23a1\";\n    repeat = \"\\u23a2\";\n    bottom = \"\\u23a3\";\n    font = \"Size4-Regular\";\n    svgLabel = \"lbrack\";\n    viewBoxWidth = 667;\n  } else if (delim === \"]\" || delim === \"\\\\rbrack\") {\n    top = \"\\u23a4\";\n    repeat = \"\\u23a5\";\n    bottom = \"\\u23a6\";\n    font = \"Size4-Regular\";\n    svgLabel = \"rbrack\";\n    viewBoxWidth = 667;\n  } else if (delim === \"\\\\lfloor\" || delim === \"\\u230a\") {\n    repeat = top = \"\\u23a2\";\n    bottom = \"\\u23a3\";\n    font = \"Size4-Regular\";\n    svgLabel = \"lfloor\";\n    viewBoxWidth = 667;\n  } else if (delim === \"\\\\lceil\" || delim === \"\\u2308\") {\n    top = \"\\u23a1\";\n    repeat = bottom = \"\\u23a2\";\n    font = \"Size4-Regular\";\n    svgLabel = \"lceil\";\n    viewBoxWidth = 667;\n  } else if (delim === \"\\\\rfloor\" || delim === \"\\u230b\") {\n    repeat = top = \"\\u23a5\";\n    bottom = \"\\u23a6\";\n    font = \"Size4-Regular\";\n    svgLabel = \"rfloor\";\n    viewBoxWidth = 667;\n  } else if (delim === \"\\\\rceil\" || delim === \"\\u2309\") {\n    top = \"\\u23a4\";\n    repeat = bottom = \"\\u23a5\";\n    font = \"Size4-Regular\";\n    svgLabel = \"rceil\";\n    viewBoxWidth = 667;\n  } else if (delim === \"(\" || delim === \"\\\\lparen\") {\n    top = \"\\u239b\";\n    repeat = \"\\u239c\";\n    bottom = \"\\u239d\";\n    font = \"Size4-Regular\";\n    svgLabel = \"lparen\";\n    viewBoxWidth = 875;\n  } else if (delim === \")\" || delim === \"\\\\rparen\") {\n    top = \"\\u239e\";\n    repeat = \"\\u239f\";\n    bottom = \"\\u23a0\";\n    font = \"Size4-Regular\";\n    svgLabel = \"rparen\";\n    viewBoxWidth = 875;\n  } else if (delim === \"\\\\{\" || delim === \"\\\\lbrace\") {\n    top = \"\\u23a7\";\n    middle = \"\\u23a8\";\n    bottom = \"\\u23a9\";\n    repeat = \"\\u23aa\";\n    font = \"Size4-Regular\";\n  } else if (delim === \"\\\\}\" || delim === \"\\\\rbrace\") {\n    top = \"\\u23ab\";\n    middle = \"\\u23ac\";\n    bottom = \"\\u23ad\";\n    repeat = \"\\u23aa\";\n    font = \"Size4-Regular\";\n  } else if (delim === \"\\\\lgroup\" || delim === \"\\u27ee\") {\n    top = \"\\u23a7\";\n    bottom = \"\\u23a9\";\n    repeat = \"\\u23aa\";\n    font = \"Size4-Regular\";\n  } else if (delim === \"\\\\rgroup\" || delim === \"\\u27ef\") {\n    top = \"\\u23ab\";\n    bottom = \"\\u23ad\";\n    repeat = \"\\u23aa\";\n    font = \"Size4-Regular\";\n  } else if (delim === \"\\\\lmoustache\" || delim === \"\\u23b0\") {\n    top = \"\\u23a7\";\n    bottom = \"\\u23ad\";\n    repeat = \"\\u23aa\";\n    font = \"Size4-Regular\";\n  } else if (delim === \"\\\\rmoustache\" || delim === \"\\u23b1\") {\n    top = \"\\u23ab\";\n    bottom = \"\\u23a9\";\n    repeat = \"\\u23aa\";\n    font = \"Size4-Regular\";\n  } // Get the metrics of the four sections\n\n\n  var topMetrics = getMetrics(top, font, mode);\n  var topHeightTotal = topMetrics.height + topMetrics.depth;\n  var repeatMetrics = getMetrics(repeat, font, mode);\n  var repeatHeightTotal = repeatMetrics.height + repeatMetrics.depth;\n  var bottomMetrics = getMetrics(bottom, font, mode);\n  var bottomHeightTotal = bottomMetrics.height + bottomMetrics.depth;\n  var middleHeightTotal = 0;\n  var middleFactor = 1;\n\n  if (middle !== null) {\n    var middleMetrics = getMetrics(middle, font, mode);\n    middleHeightTotal = middleMetrics.height + middleMetrics.depth;\n    middleFactor = 2; // repeat symmetrically above and below middle\n  } // Calculate the minimal height that the delimiter can have.\n  // It is at least the size of the top, bottom, and optional middle combined.\n\n\n  var minHeight = topHeightTotal + bottomHeightTotal + middleHeightTotal; // Compute the number of copies of the repeat symbol we will need\n\n  var repeatCount = Math.max(0, Math.ceil((heightTotal - minHeight) / (middleFactor * repeatHeightTotal))); // Compute the total height of the delimiter including all the symbols\n\n  var realHeightTotal = minHeight + repeatCount * middleFactor * repeatHeightTotal; // The center of the delimiter is placed at the center of the axis. Note\n  // that in this context, \"center\" means that the delimiter should be\n  // centered around the axis in the current style, while normally it is\n  // centered around the axis in textstyle.\n\n  var axisHeight = options.fontMetrics().axisHeight;\n\n  if (center) {\n    axisHeight *= options.sizeMultiplier;\n  } // Calculate the depth\n\n\n  var depth = realHeightTotal / 2 - axisHeight; // Now, we start building the pieces that will go into the vlist\n  // Keep a list of the pieces of the stacked delimiter\n\n  var stack = [];\n\n  if (svgLabel.length > 0) {\n    // Instead of stacking glyphs, create a single SVG.\n    // This evades browser problems with imprecise positioning of spans.\n    var midHeight = realHeightTotal - topHeightTotal - bottomHeightTotal;\n    var viewBoxHeight = Math.round(realHeightTotal * 1000);\n    var pathStr = tallDelim(svgLabel, Math.round(midHeight * 1000));\n    var path = new PathNode(svgLabel, pathStr);\n    var width = (viewBoxWidth / 1000).toFixed(3) + \"em\";\n    var height = (viewBoxHeight / 1000).toFixed(3) + \"em\";\n    var svg = new SvgNode([path], {\n      \"width\": width,\n      \"height\": height,\n      \"viewBox\": \"0 0 \" + viewBoxWidth + \" \" + viewBoxHeight\n    });\n    var wrapper = buildCommon.makeSvgSpan([], [svg], options);\n    wrapper.height = viewBoxHeight / 1000;\n    wrapper.style.width = width;\n    wrapper.style.height = height;\n    stack.push({\n      type: \"elem\",\n      elem: wrapper\n    });\n  } else {\n    // Stack glyphs\n    // Start by adding the bottom symbol\n    stack.push(makeGlyphSpan(bottom, font, mode));\n    stack.push(lap); // overlap\n\n    if (middle === null) {\n      // The middle section will be an SVG. Make it an extra 0.016em tall.\n      // We'll overlap by 0.008em at top and bottom.\n      var innerHeight = realHeightTotal - topHeightTotal - bottomHeightTotal + 2 * lapInEms;\n      stack.push(makeInner(repeat, innerHeight, options));\n    } else {\n      // When there is a middle bit, we need the middle part and two repeated\n      // sections\n      var _innerHeight = (realHeightTotal - topHeightTotal - bottomHeightTotal - middleHeightTotal) / 2 + 2 * lapInEms;\n\n      stack.push(makeInner(repeat, _innerHeight, options)); // Now insert the middle of the brace.\n\n      stack.push(lap);\n      stack.push(makeGlyphSpan(middle, font, mode));\n      stack.push(lap);\n      stack.push(makeInner(repeat, _innerHeight, options));\n    } // Add the top symbol\n\n\n    stack.push(lap);\n    stack.push(makeGlyphSpan(top, font, mode));\n  } // Finally, build the vlist\n\n\n  var newOptions = options.havingBaseStyle(Style$1.TEXT);\n  var inner = buildCommon.makeVList({\n    positionType: \"bottom\",\n    positionData: depth,\n    children: stack\n  }, newOptions);\n  return styleWrap(buildCommon.makeSpan([\"delimsizing\", \"mult\"], [inner], newOptions), Style$1.TEXT, options, classes);\n}; // All surds have 0.08em padding above the vinculum inside the SVG.\n// That keeps browser span height rounding error from pinching the line.\n\n\nvar vbPad = 80; // padding above the surd, measured inside the viewBox.\n\nvar emPad = 0.08; // padding, in ems, measured in the document.\n\nvar sqrtSvg = function sqrtSvg(sqrtName, height, viewBoxHeight, extraVinculum, options) {\n  var path = sqrtPath(sqrtName, extraVinculum, viewBoxHeight);\n  var pathNode = new PathNode(sqrtName, path);\n  var svg = new SvgNode([pathNode], {\n    // Note: 1000:1 ratio of viewBox to document em width.\n    \"width\": \"400em\",\n    \"height\": makeEm(height),\n    \"viewBox\": \"0 0 400000 \" + viewBoxHeight,\n    \"preserveAspectRatio\": \"xMinYMin slice\"\n  });\n  return buildCommon.makeSvgSpan([\"hide-tail\"], [svg], options);\n};\n/**\n * Make a sqrt image of the given height,\n */\n\n\nvar makeSqrtImage = function makeSqrtImage(height, options) {\n  // Define a newOptions that removes the effect of size changes such as \\Huge.\n  // We don't pick different a height surd for \\Huge. For it, we scale up.\n  var newOptions = options.havingBaseSizing(); // Pick the desired surd glyph from a sequence of surds.\n\n  var delim = traverseSequence(\"\\\\surd\", height * newOptions.sizeMultiplier, stackLargeDelimiterSequence, newOptions);\n  var sizeMultiplier = newOptions.sizeMultiplier; // default\n  // The standard sqrt SVGs each have a 0.04em thick vinculum.\n  // If Settings.minRuleThickness is larger than that, we add extraVinculum.\n\n  var extraVinculum = Math.max(0, options.minRuleThickness - options.fontMetrics().sqrtRuleThickness); // Create a span containing an SVG image of a sqrt symbol.\n\n  var span;\n  var spanHeight = 0;\n  var texHeight = 0;\n  var viewBoxHeight = 0;\n  var advanceWidth; // We create viewBoxes with 80 units of \"padding\" above each surd.\n  // Then browser rounding error on the parent span height will not\n  // encroach on the ink of the vinculum. But that padding is not\n  // included in the TeX-like `height` used for calculation of\n  // vertical alignment. So texHeight = span.height < span.style.height.\n\n  if (delim.type === \"small\") {\n    // Get an SVG that is derived from glyph U+221A in font KaTeX-Main.\n    // 1000 unit normal glyph height.\n    viewBoxHeight = 1000 + 1000 * extraVinculum + vbPad;\n\n    if (height < 1.0) {\n      sizeMultiplier = 1.0; // mimic a \\textfont radical\n    } else if (height < 1.4) {\n      sizeMultiplier = 0.7; // mimic a \\scriptfont radical\n    }\n\n    spanHeight = (1.0 + extraVinculum + emPad) / sizeMultiplier;\n    texHeight = (1.00 + extraVinculum) / sizeMultiplier;\n    span = sqrtSvg(\"sqrtMain\", spanHeight, viewBoxHeight, extraVinculum, options);\n    span.style.minWidth = \"0.853em\";\n    advanceWidth = 0.833 / sizeMultiplier; // from the font.\n  } else if (delim.type === \"large\") {\n    // These SVGs come from fonts: KaTeX_Size1, _Size2, etc.\n    viewBoxHeight = (1000 + vbPad) * sizeToMaxHeight[delim.size];\n    texHeight = (sizeToMaxHeight[delim.size] + extraVinculum) / sizeMultiplier;\n    spanHeight = (sizeToMaxHeight[delim.size] + extraVinculum + emPad) / sizeMultiplier;\n    span = sqrtSvg(\"sqrtSize\" + delim.size, spanHeight, viewBoxHeight, extraVinculum, options);\n    span.style.minWidth = \"1.02em\";\n    advanceWidth = 1.0 / sizeMultiplier; // 1.0 from the font.\n  } else {\n    // Tall sqrt. In TeX, this would be stacked using multiple glyphs.\n    // We'll use a single SVG to accomplish the same thing.\n    spanHeight = height + extraVinculum + emPad;\n    texHeight = height + extraVinculum;\n    viewBoxHeight = Math.floor(1000 * height + extraVinculum) + vbPad;\n    span = sqrtSvg(\"sqrtTall\", spanHeight, viewBoxHeight, extraVinculum, options);\n    span.style.minWidth = \"0.742em\";\n    advanceWidth = 1.056;\n  }\n\n  span.height = texHeight;\n  span.style.height = makeEm(spanHeight);\n  return {\n    span,\n    advanceWidth,\n    // Calculate the actual line width.\n    // This actually should depend on the chosen font -- e.g. \\boldmath\n    // should use the thicker surd symbols from e.g. KaTeX_Main-Bold, and\n    // have thicker rules.\n    ruleWidth: (options.fontMetrics().sqrtRuleThickness + extraVinculum) * sizeMultiplier\n  };\n}; // There are three kinds of delimiters, delimiters that stack when they become\n// too large\n\n\nvar stackLargeDelimiters = [\"(\", \"\\\\lparen\", \")\", \"\\\\rparen\", \"[\", \"\\\\lbrack\", \"]\", \"\\\\rbrack\", \"\\\\{\", \"\\\\lbrace\", \"\\\\}\", \"\\\\rbrace\", \"\\\\lfloor\", \"\\\\rfloor\", \"\\u230a\", \"\\u230b\", \"\\\\lceil\", \"\\\\rceil\", \"\\u2308\", \"\\u2309\", \"\\\\surd\"]; // delimiters that always stack\n\nvar stackAlwaysDelimiters = [\"\\\\uparrow\", \"\\\\downarrow\", \"\\\\updownarrow\", \"\\\\Uparrow\", \"\\\\Downarrow\", \"\\\\Updownarrow\", \"|\", \"\\\\|\", \"\\\\vert\", \"\\\\Vert\", \"\\\\lvert\", \"\\\\rvert\", \"\\\\lVert\", \"\\\\rVert\", \"\\\\lgroup\", \"\\\\rgroup\", \"\\u27ee\", \"\\u27ef\", \"\\\\lmoustache\", \"\\\\rmoustache\", \"\\u23b0\", \"\\u23b1\"]; // and delimiters that never stack\n\nvar stackNeverDelimiters = [\"<\", \">\", \"\\\\langle\", \"\\\\rangle\", \"/\", \"\\\\backslash\", \"\\\\lt\", \"\\\\gt\"]; // Metrics of the different sizes. Found by looking at TeX's output of\n// $\\bigl| // \\Bigl| \\biggl| \\Biggl| \\showlists$\n// Used to create stacked delimiters of appropriate sizes in makeSizedDelim.\n\nvar sizeToMaxHeight = [0, 1.2, 1.8, 2.4, 3.0];\n/**\n * Used to create a delimiter of a specific size, where `size` is 1, 2, 3, or 4.\n */\n\nvar makeSizedDelim = function makeSizedDelim(delim, size, options, mode, classes) {\n  // < and > turn into \\langle and \\rangle in delimiters\n  if (delim === \"<\" || delim === \"\\\\lt\" || delim === \"\\u27e8\") {\n    delim = \"\\\\langle\";\n  } else if (delim === \">\" || delim === \"\\\\gt\" || delim === \"\\u27e9\") {\n    delim = \"\\\\rangle\";\n  } // Sized delimiters are never centered.\n\n\n  if (utils.contains(stackLargeDelimiters, delim) || utils.contains(stackNeverDelimiters, delim)) {\n    return makeLargeDelim(delim, size, false, options, mode, classes);\n  } else if (utils.contains(stackAlwaysDelimiters, delim)) {\n    return makeStackedDelim(delim, sizeToMaxHeight[size], false, options, mode, classes);\n  } else {\n    throw new ParseError(\"Illegal delimiter: '\" + delim + \"'\");\n  }\n};\n/**\n * There are three different sequences of delimiter sizes that the delimiters\n * follow depending on the kind of delimiter. This is used when creating custom\n * sized delimiters to decide whether to create a small, large, or stacked\n * delimiter.\n *\n * In real TeX, these sequences aren't explicitly defined, but are instead\n * defined inside the font metrics. Since there are only three sequences that\n * are possible for the delimiters that TeX defines, it is easier to just encode\n * them explicitly here.\n */\n\n\n// Delimiters that never stack try small delimiters and large delimiters only\nvar stackNeverDelimiterSequence = [{\n  type: \"small\",\n  style: Style$1.SCRIPTSCRIPT\n}, {\n  type: \"small\",\n  style: Style$1.SCRIPT\n}, {\n  type: \"small\",\n  style: Style$1.TEXT\n}, {\n  type: \"large\",\n  size: 1\n}, {\n  type: \"large\",\n  size: 2\n}, {\n  type: \"large\",\n  size: 3\n}, {\n  type: \"large\",\n  size: 4\n}]; // Delimiters that always stack try the small delimiters first, then stack\n\nvar stackAlwaysDelimiterSequence = [{\n  type: \"small\",\n  style: Style$1.SCRIPTSCRIPT\n}, {\n  type: \"small\",\n  style: Style$1.SCRIPT\n}, {\n  type: \"small\",\n  style: Style$1.TEXT\n}, {\n  type: \"stack\"\n}]; // Delimiters that stack when large try the small and then large delimiters, and\n// stack afterwards\n\nvar stackLargeDelimiterSequence = [{\n  type: \"small\",\n  style: Style$1.SCRIPTSCRIPT\n}, {\n  type: \"small\",\n  style: Style$1.SCRIPT\n}, {\n  type: \"small\",\n  style: Style$1.TEXT\n}, {\n  type: \"large\",\n  size: 1\n}, {\n  type: \"large\",\n  size: 2\n}, {\n  type: \"large\",\n  size: 3\n}, {\n  type: \"large\",\n  size: 4\n}, {\n  type: \"stack\"\n}];\n/**\n * Get the font used in a delimiter based on what kind of delimiter it is.\n * TODO(#963) Use more specific font family return type once that is introduced.\n */\n\nvar delimTypeToFont = function delimTypeToFont(type) {\n  if (type.type === \"small\") {\n    return \"Main-Regular\";\n  } else if (type.type === \"large\") {\n    return \"Size\" + type.size + \"-Regular\";\n  } else if (type.type === \"stack\") {\n    return \"Size4-Regular\";\n  } else {\n    throw new Error(\"Add support for delim type '\" + type.type + \"' here.\");\n  }\n};\n/**\n * Traverse a sequence of types of delimiters to decide what kind of delimiter\n * should be used to create a delimiter of the given height+depth.\n */\n\n\nvar traverseSequence = function traverseSequence(delim, height, sequence, options) {\n  // Here, we choose the index we should start at in the sequences. In smaller\n  // sizes (which correspond to larger numbers in style.size) we start earlier\n  // in the sequence. Thus, scriptscript starts at index 3-3=0, script starts\n  // at index 3-2=1, text starts at 3-1=2, and display starts at min(2,3-0)=2\n  var start = Math.min(2, 3 - options.style.size);\n\n  for (var i = start; i < sequence.length; i++) {\n    if (sequence[i].type === \"stack\") {\n      // This is always the last delimiter, so we just break the loop now.\n      break;\n    }\n\n    var metrics = getMetrics(delim, delimTypeToFont(sequence[i]), \"math\");\n    var heightDepth = metrics.height + metrics.depth; // Small delimiters are scaled down versions of the same font, so we\n    // account for the style change size.\n\n    if (sequence[i].type === \"small\") {\n      var newOptions = options.havingBaseStyle(sequence[i].style);\n      heightDepth *= newOptions.sizeMultiplier;\n    } // Check if the delimiter at this size works for the given height.\n\n\n    if (heightDepth > height) {\n      return sequence[i];\n    }\n  } // If we reached the end of the sequence, return the last sequence element.\n\n\n  return sequence[sequence.length - 1];\n};\n/**\n * Make a delimiter of a given height+depth, with optional centering. Here, we\n * traverse the sequences, and create a delimiter that the sequence tells us to.\n */\n\n\nvar makeCustomSizedDelim = function makeCustomSizedDelim(delim, height, center, options, mode, classes) {\n  if (delim === \"<\" || delim === \"\\\\lt\" || delim === \"\\u27e8\") {\n    delim = \"\\\\langle\";\n  } else if (delim === \">\" || delim === \"\\\\gt\" || delim === \"\\u27e9\") {\n    delim = \"\\\\rangle\";\n  } // Decide what sequence to use\n\n\n  var sequence;\n\n  if (utils.contains(stackNeverDelimiters, delim)) {\n    sequence = stackNeverDelimiterSequence;\n  } else if (utils.contains(stackLargeDelimiters, delim)) {\n    sequence = stackLargeDelimiterSequence;\n  } else {\n    sequence = stackAlwaysDelimiterSequence;\n  } // Look through the sequence\n\n\n  var delimType = traverseSequence(delim, height, sequence, options); // Get the delimiter from font glyphs.\n  // Depending on the sequence element we decided on, call the\n  // appropriate function.\n\n  if (delimType.type === \"small\") {\n    return makeSmallDelim(delim, delimType.style, center, options, mode, classes);\n  } else if (delimType.type === \"large\") {\n    return makeLargeDelim(delim, delimType.size, center, options, mode, classes);\n  } else\n    /* if (delimType.type === \"stack\") */\n    {\n      return makeStackedDelim(delim, height, center, options, mode, classes);\n    }\n};\n/**\n * Make a delimiter for use with `\\left` and `\\right`, given a height and depth\n * of an expression that the delimiters surround.\n */\n\n\nvar makeLeftRightDelim = function makeLeftRightDelim(delim, height, depth, options, mode, classes) {\n  // We always center \\left/\\right delimiters, so the axis is always shifted\n  var axisHeight = options.fontMetrics().axisHeight * options.sizeMultiplier; // Taken from TeX source, tex.web, function make_left_right\n\n  var delimiterFactor = 901;\n  var delimiterExtend = 5.0 / options.fontMetrics().ptPerEm;\n  var maxDistFromAxis = Math.max(height - axisHeight, depth + axisHeight);\n  var totalHeight = Math.max( // In real TeX, calculations are done using integral values which are\n  // 65536 per pt, or 655360 per em. So, the division here truncates in\n  // TeX but doesn't here, producing different results. If we wanted to\n  // exactly match TeX's calculation, we could do\n  //   Math.floor(655360 * maxDistFromAxis / 500) *\n  //    delimiterFactor / 655360\n  // (To see the difference, compare\n  //    x^{x^{\\left(\\rule{0.1em}{0.68em}\\right)}}\n  // in TeX and KaTeX)\n  maxDistFromAxis / 500 * delimiterFactor, 2 * maxDistFromAxis - delimiterExtend); // Finally, we defer to `makeCustomSizedDelim` with our calculated total\n  // height\n\n  return makeCustomSizedDelim(delim, totalHeight, true, options, mode, classes);\n};\n\nvar delimiter = {\n  sqrtImage: makeSqrtImage,\n  sizedDelim: makeSizedDelim,\n  sizeToMaxHeight: sizeToMaxHeight,\n  customSizedDelim: makeCustomSizedDelim,\n  leftRightDelim: makeLeftRightDelim\n};\n\n// Extra data needed for the delimiter handler down below\nvar delimiterSizes = {\n  \"\\\\bigl\": {\n    mclass: \"mopen\",\n    size: 1\n  },\n  \"\\\\Bigl\": {\n    mclass: \"mopen\",\n    size: 2\n  },\n  \"\\\\biggl\": {\n    mclass: \"mopen\",\n    size: 3\n  },\n  \"\\\\Biggl\": {\n    mclass: \"mopen\",\n    size: 4\n  },\n  \"\\\\bigr\": {\n    mclass: \"mclose\",\n    size: 1\n  },\n  \"\\\\Bigr\": {\n    mclass: \"mclose\",\n    size: 2\n  },\n  \"\\\\biggr\": {\n    mclass: \"mclose\",\n    size: 3\n  },\n  \"\\\\Biggr\": {\n    mclass: \"mclose\",\n    size: 4\n  },\n  \"\\\\bigm\": {\n    mclass: \"mrel\",\n    size: 1\n  },\n  \"\\\\Bigm\": {\n    mclass: \"mrel\",\n    size: 2\n  },\n  \"\\\\biggm\": {\n    mclass: \"mrel\",\n    size: 3\n  },\n  \"\\\\Biggm\": {\n    mclass: \"mrel\",\n    size: 4\n  },\n  \"\\\\big\": {\n    mclass: \"mord\",\n    size: 1\n  },\n  \"\\\\Big\": {\n    mclass: \"mord\",\n    size: 2\n  },\n  \"\\\\bigg\": {\n    mclass: \"mord\",\n    size: 3\n  },\n  \"\\\\Bigg\": {\n    mclass: \"mord\",\n    size: 4\n  }\n};\nvar delimiters = [\"(\", \"\\\\lparen\", \")\", \"\\\\rparen\", \"[\", \"\\\\lbrack\", \"]\", \"\\\\rbrack\", \"\\\\{\", \"\\\\lbrace\", \"\\\\}\", \"\\\\rbrace\", \"\\\\lfloor\", \"\\\\rfloor\", \"\\u230a\", \"\\u230b\", \"\\\\lceil\", \"\\\\rceil\", \"\\u2308\", \"\\u2309\", \"<\", \">\", \"\\\\langle\", \"\\u27e8\", \"\\\\rangle\", \"\\u27e9\", \"\\\\lt\", \"\\\\gt\", \"\\\\lvert\", \"\\\\rvert\", \"\\\\lVert\", \"\\\\rVert\", \"\\\\lgroup\", \"\\\\rgroup\", \"\\u27ee\", \"\\u27ef\", \"\\\\lmoustache\", \"\\\\rmoustache\", \"\\u23b0\", \"\\u23b1\", \"/\", \"\\\\backslash\", \"|\", \"\\\\vert\", \"\\\\|\", \"\\\\Vert\", \"\\\\uparrow\", \"\\\\Uparrow\", \"\\\\downarrow\", \"\\\\Downarrow\", \"\\\\updownarrow\", \"\\\\Updownarrow\", \".\"];\n\n// Delimiter functions\nfunction checkDelimiter(delim, context) {\n  var symDelim = checkSymbolNodeType(delim);\n\n  if (symDelim && utils.contains(delimiters, symDelim.text)) {\n    return symDelim;\n  } else if (symDelim) {\n    throw new ParseError(\"Invalid delimiter '\" + symDelim.text + \"' after '\" + context.funcName + \"'\", delim);\n  } else {\n    throw new ParseError(\"Invalid delimiter type '\" + delim.type + \"'\", delim);\n  }\n}\n\ndefineFunction({\n  type: \"delimsizing\",\n  names: [\"\\\\bigl\", \"\\\\Bigl\", \"\\\\biggl\", \"\\\\Biggl\", \"\\\\bigr\", \"\\\\Bigr\", \"\\\\biggr\", \"\\\\Biggr\", \"\\\\bigm\", \"\\\\Bigm\", \"\\\\biggm\", \"\\\\Biggm\", \"\\\\big\", \"\\\\Big\", \"\\\\bigg\", \"\\\\Bigg\"],\n  props: {\n    numArgs: 1,\n    argTypes: [\"primitive\"]\n  },\n  handler: (context, args) => {\n    var delim = checkDelimiter(args[0], context);\n    return {\n      type: \"delimsizing\",\n      mode: context.parser.mode,\n      size: delimiterSizes[context.funcName].size,\n      mclass: delimiterSizes[context.funcName].mclass,\n      delim: delim.text\n    };\n  },\n  htmlBuilder: (group, options) => {\n    if (group.delim === \".\") {\n      // Empty delimiters still count as elements, even though they don't\n      // show anything.\n      return buildCommon.makeSpan([group.mclass]);\n    } // Use delimiter.sizedDelim to generate the delimiter.\n\n\n    return delimiter.sizedDelim(group.delim, group.size, options, group.mode, [group.mclass]);\n  },\n  mathmlBuilder: group => {\n    var children = [];\n\n    if (group.delim !== \".\") {\n      children.push(makeText(group.delim, group.mode));\n    }\n\n    var node = new mathMLTree.MathNode(\"mo\", children);\n\n    if (group.mclass === \"mopen\" || group.mclass === \"mclose\") {\n      // Only some of the delimsizing functions act as fences, and they\n      // return \"mopen\" or \"mclose\" mclass.\n      node.setAttribute(\"fence\", \"true\");\n    } else {\n      // Explicitly disable fencing if it's not a fence, to override the\n      // defaults.\n      node.setAttribute(\"fence\", \"false\");\n    }\n\n    node.setAttribute(\"stretchy\", \"true\");\n    var size = makeEm(delimiter.sizeToMaxHeight[group.size]);\n    node.setAttribute(\"minsize\", size);\n    node.setAttribute(\"maxsize\", size);\n    return node;\n  }\n});\n\nfunction assertParsed(group) {\n  if (!group.body) {\n    throw new Error(\"Bug: The leftright ParseNode wasn't fully parsed.\");\n  }\n}\n\ndefineFunction({\n  type: \"leftright-right\",\n  names: [\"\\\\right\"],\n  props: {\n    numArgs: 1,\n    primitive: true\n  },\n  handler: (context, args) => {\n    // \\left case below triggers parsing of \\right in\n    //   `const right = parser.parseFunction();`\n    // uses this return value.\n    var color = context.parser.gullet.macros.get(\"\\\\current@color\");\n\n    if (color && typeof color !== \"string\") {\n      throw new ParseError(\"\\\\current@color set to non-string in \\\\right\");\n    }\n\n    return {\n      type: \"leftright-right\",\n      mode: context.parser.mode,\n      delim: checkDelimiter(args[0], context).text,\n      color // undefined if not set via \\color\n\n    };\n  }\n});\ndefineFunction({\n  type: \"leftright\",\n  names: [\"\\\\left\"],\n  props: {\n    numArgs: 1,\n    primitive: true\n  },\n  handler: (context, args) => {\n    var delim = checkDelimiter(args[0], context);\n    var parser = context.parser; // Parse out the implicit body\n\n    ++parser.leftrightDepth; // parseExpression stops before '\\\\right'\n\n    var body = parser.parseExpression(false);\n    --parser.leftrightDepth; // Check the next token\n\n    parser.expect(\"\\\\right\", false);\n    var right = assertNodeType(parser.parseFunction(), \"leftright-right\");\n    return {\n      type: \"leftright\",\n      mode: parser.mode,\n      body,\n      left: delim.text,\n      right: right.delim,\n      rightColor: right.color\n    };\n  },\n  htmlBuilder: (group, options) => {\n    assertParsed(group); // Build the inner expression\n\n    var inner = buildExpression$1(group.body, options, true, [\"mopen\", \"mclose\"]);\n    var innerHeight = 0;\n    var innerDepth = 0;\n    var hadMiddle = false; // Calculate its height and depth\n\n    for (var i = 0; i < inner.length; i++) {\n      // Property `isMiddle` not defined on `span`. See comment in\n      // \"middle\"'s htmlBuilder.\n      // $FlowFixMe\n      if (inner[i].isMiddle) {\n        hadMiddle = true;\n      } else {\n        innerHeight = Math.max(inner[i].height, innerHeight);\n        innerDepth = Math.max(inner[i].depth, innerDepth);\n      }\n    } // The size of delimiters is the same, regardless of what style we are\n    // in. Thus, to correctly calculate the size of delimiter we need around\n    // a group, we scale down the inner size based on the size.\n\n\n    innerHeight *= options.sizeMultiplier;\n    innerDepth *= options.sizeMultiplier;\n    var leftDelim;\n\n    if (group.left === \".\") {\n      // Empty delimiters in \\left and \\right make null delimiter spaces.\n      leftDelim = makeNullDelimiter(options, [\"mopen\"]);\n    } else {\n      // Otherwise, use leftRightDelim to generate the correct sized\n      // delimiter.\n      leftDelim = delimiter.leftRightDelim(group.left, innerHeight, innerDepth, options, group.mode, [\"mopen\"]);\n    } // Add it to the beginning of the expression\n\n\n    inner.unshift(leftDelim); // Handle middle delimiters\n\n    if (hadMiddle) {\n      for (var _i = 1; _i < inner.length; _i++) {\n        var middleDelim = inner[_i]; // Property `isMiddle` not defined on `span`. See comment in\n        // \"middle\"'s htmlBuilder.\n        // $FlowFixMe\n\n        var isMiddle = middleDelim.isMiddle;\n\n        if (isMiddle) {\n          // Apply the options that were active when \\middle was called\n          inner[_i] = delimiter.leftRightDelim(isMiddle.delim, innerHeight, innerDepth, isMiddle.options, group.mode, []);\n        }\n      }\n    }\n\n    var rightDelim; // Same for the right delimiter, but using color specified by \\color\n\n    if (group.right === \".\") {\n      rightDelim = makeNullDelimiter(options, [\"mclose\"]);\n    } else {\n      var colorOptions = group.rightColor ? options.withColor(group.rightColor) : options;\n      rightDelim = delimiter.leftRightDelim(group.right, innerHeight, innerDepth, colorOptions, group.mode, [\"mclose\"]);\n    } // Add it to the end of the expression.\n\n\n    inner.push(rightDelim);\n    return buildCommon.makeSpan([\"minner\"], inner, options);\n  },\n  mathmlBuilder: (group, options) => {\n    assertParsed(group);\n    var inner = buildExpression(group.body, options);\n\n    if (group.left !== \".\") {\n      var leftNode = new mathMLTree.MathNode(\"mo\", [makeText(group.left, group.mode)]);\n      leftNode.setAttribute(\"fence\", \"true\");\n      inner.unshift(leftNode);\n    }\n\n    if (group.right !== \".\") {\n      var rightNode = new mathMLTree.MathNode(\"mo\", [makeText(group.right, group.mode)]);\n      rightNode.setAttribute(\"fence\", \"true\");\n\n      if (group.rightColor) {\n        rightNode.setAttribute(\"mathcolor\", group.rightColor);\n      }\n\n      inner.push(rightNode);\n    }\n\n    return makeRow(inner);\n  }\n});\ndefineFunction({\n  type: \"middle\",\n  names: [\"\\\\middle\"],\n  props: {\n    numArgs: 1,\n    primitive: true\n  },\n  handler: (context, args) => {\n    var delim = checkDelimiter(args[0], context);\n\n    if (!context.parser.leftrightDepth) {\n      throw new ParseError(\"\\\\middle without preceding \\\\left\", delim);\n    }\n\n    return {\n      type: \"middle\",\n      mode: context.parser.mode,\n      delim: delim.text\n    };\n  },\n  htmlBuilder: (group, options) => {\n    var middleDelim;\n\n    if (group.delim === \".\") {\n      middleDelim = makeNullDelimiter(options, []);\n    } else {\n      middleDelim = delimiter.sizedDelim(group.delim, 1, options, group.mode, []);\n      var isMiddle = {\n        delim: group.delim,\n        options\n      }; // Property `isMiddle` not defined on `span`. It is only used in\n      // this file above.\n      // TODO: Fix this violation of the `span` type and possibly rename\n      // things since `isMiddle` sounds like a boolean, but is a struct.\n      // $FlowFixMe\n\n      middleDelim.isMiddle = isMiddle;\n    }\n\n    return middleDelim;\n  },\n  mathmlBuilder: (group, options) => {\n    // A Firefox \\middle will stretch a character vertically only if it\n    // is in the fence part of the operator dictionary at:\n    // https://www.w3.org/TR/MathML3/appendixc.html.\n    // So we need to avoid U+2223 and use plain \"|\" instead.\n    var textNode = group.delim === \"\\\\vert\" || group.delim === \"|\" ? makeText(\"|\", \"text\") : makeText(group.delim, group.mode);\n    var middleNode = new mathMLTree.MathNode(\"mo\", [textNode]);\n    middleNode.setAttribute(\"fence\", \"true\"); // MathML gives 5/18em spacing to each <mo> element.\n    // \\middle should get delimiter spacing instead.\n\n    middleNode.setAttribute(\"lspace\", \"0.05em\");\n    middleNode.setAttribute(\"rspace\", \"0.05em\");\n    return middleNode;\n  }\n});\n\nvar htmlBuilder$7 = (group, options) => {\n  // \\cancel, \\bcancel, \\xcancel, \\sout, \\fbox, \\colorbox, \\fcolorbox, \\phase\n  // Some groups can return document fragments.  Handle those by wrapping\n  // them in a span.\n  var inner = buildCommon.wrapFragment(buildGroup$1(group.body, options), options);\n  var label = group.label.slice(1);\n  var scale = options.sizeMultiplier;\n  var img;\n  var imgShift = 0; // In the LaTeX cancel package, line geometry is slightly different\n  // depending on whether the subject is wider than it is tall, or vice versa.\n  // We don't know the width of a group, so as a proxy, we test if\n  // the subject is a single character. This captures most of the\n  // subjects that should get the \"tall\" treatment.\n\n  var isSingleChar = utils.isCharacterBox(group.body);\n\n  if (label === \"sout\") {\n    img = buildCommon.makeSpan([\"stretchy\", \"sout\"]);\n    img.height = options.fontMetrics().defaultRuleThickness / scale;\n    imgShift = -0.5 * options.fontMetrics().xHeight;\n  } else if (label === \"phase\") {\n    // Set a couple of dimensions from the steinmetz package.\n    var lineWeight = calculateSize({\n      number: 0.6,\n      unit: \"pt\"\n    }, options);\n    var clearance = calculateSize({\n      number: 0.35,\n      unit: \"ex\"\n    }, options); // Prevent size changes like \\Huge from affecting line thickness\n\n    var newOptions = options.havingBaseSizing();\n    scale = scale / newOptions.sizeMultiplier;\n    var angleHeight = inner.height + inner.depth + lineWeight + clearance; // Reserve a left pad for the angle.\n\n    inner.style.paddingLeft = makeEm(angleHeight / 2 + lineWeight); // Create an SVG\n\n    var viewBoxHeight = Math.floor(1000 * angleHeight * scale);\n    var path = phasePath(viewBoxHeight);\n    var svgNode = new SvgNode([new PathNode(\"phase\", path)], {\n      \"width\": \"400em\",\n      \"height\": makeEm(viewBoxHeight / 1000),\n      \"viewBox\": \"0 0 400000 \" + viewBoxHeight,\n      \"preserveAspectRatio\": \"xMinYMin slice\"\n    }); // Wrap it in a span with overflow: hidden.\n\n    img = buildCommon.makeSvgSpan([\"hide-tail\"], [svgNode], options);\n    img.style.height = makeEm(angleHeight);\n    imgShift = inner.depth + lineWeight + clearance;\n  } else {\n    // Add horizontal padding\n    if (/cancel/.test(label)) {\n      if (!isSingleChar) {\n        inner.classes.push(\"cancel-pad\");\n      }\n    } else if (label === \"angl\") {\n      inner.classes.push(\"anglpad\");\n    } else {\n      inner.classes.push(\"boxpad\");\n    } // Add vertical padding\n\n\n    var topPad = 0;\n    var bottomPad = 0;\n    var ruleThickness = 0; // ref: cancel package: \\advance\\totalheight2\\p@ % \"+2\"\n\n    if (/box/.test(label)) {\n      ruleThickness = Math.max(options.fontMetrics().fboxrule, // default\n      options.minRuleThickness // User override.\n      );\n      topPad = options.fontMetrics().fboxsep + (label === \"colorbox\" ? 0 : ruleThickness);\n      bottomPad = topPad;\n    } else if (label === \"angl\") {\n      ruleThickness = Math.max(options.fontMetrics().defaultRuleThickness, options.minRuleThickness);\n      topPad = 4 * ruleThickness; // gap = 3 \u00D7 line, plus the line itself.\n\n      bottomPad = Math.max(0, 0.25 - inner.depth);\n    } else {\n      topPad = isSingleChar ? 0.2 : 0;\n      bottomPad = topPad;\n    }\n\n    img = stretchy.encloseSpan(inner, label, topPad, bottomPad, options);\n\n    if (/fbox|boxed|fcolorbox/.test(label)) {\n      img.style.borderStyle = \"solid\";\n      img.style.borderWidth = makeEm(ruleThickness);\n    } else if (label === \"angl\" && ruleThickness !== 0.049) {\n      img.style.borderTopWidth = makeEm(ruleThickness);\n      img.style.borderRightWidth = makeEm(ruleThickness);\n    }\n\n    imgShift = inner.depth + bottomPad;\n\n    if (group.backgroundColor) {\n      img.style.backgroundColor = group.backgroundColor;\n\n      if (group.borderColor) {\n        img.style.borderColor = group.borderColor;\n      }\n    }\n  }\n\n  var vlist;\n\n  if (group.backgroundColor) {\n    vlist = buildCommon.makeVList({\n      positionType: \"individualShift\",\n      children: [// Put the color background behind inner;\n      {\n        type: \"elem\",\n        elem: img,\n        shift: imgShift\n      }, {\n        type: \"elem\",\n        elem: inner,\n        shift: 0\n      }]\n    }, options);\n  } else {\n    var classes = /cancel|phase/.test(label) ? [\"svg-align\"] : [];\n    vlist = buildCommon.makeVList({\n      positionType: \"individualShift\",\n      children: [// Write the \\cancel stroke on top of inner.\n      {\n        type: \"elem\",\n        elem: inner,\n        shift: 0\n      }, {\n        type: \"elem\",\n        elem: img,\n        shift: imgShift,\n        wrapperClasses: classes\n      }]\n    }, options);\n  }\n\n  if (/cancel/.test(label)) {\n    // The cancel package documentation says that cancel lines add their height\n    // to the expression, but tests show that isn't how it actually works.\n    vlist.height = inner.height;\n    vlist.depth = inner.depth;\n  }\n\n  if (/cancel/.test(label) && !isSingleChar) {\n    // cancel does not create horiz space for its line extension.\n    return buildCommon.makeSpan([\"mord\", \"cancel-lap\"], [vlist], options);\n  } else {\n    return buildCommon.makeSpan([\"mord\"], [vlist], options);\n  }\n};\n\nvar mathmlBuilder$6 = (group, options) => {\n  var fboxsep = 0;\n  var node = new mathMLTree.MathNode(group.label.indexOf(\"colorbox\") > -1 ? \"mpadded\" : \"menclose\", [buildGroup(group.body, options)]);\n\n  switch (group.label) {\n    case \"\\\\cancel\":\n      node.setAttribute(\"notation\", \"updiagonalstrike\");\n      break;\n\n    case \"\\\\bcancel\":\n      node.setAttribute(\"notation\", \"downdiagonalstrike\");\n      break;\n\n    case \"\\\\phase\":\n      node.setAttribute(\"notation\", \"phasorangle\");\n      break;\n\n    case \"\\\\sout\":\n      node.setAttribute(\"notation\", \"horizontalstrike\");\n      break;\n\n    case \"\\\\fbox\":\n      node.setAttribute(\"notation\", \"box\");\n      break;\n\n    case \"\\\\angl\":\n      node.setAttribute(\"notation\", \"actuarial\");\n      break;\n\n    case \"\\\\fcolorbox\":\n    case \"\\\\colorbox\":\n      // <menclose> doesn't have a good notation option. So use <mpadded>\n      // instead. Set some attributes that come included with <menclose>.\n      fboxsep = options.fontMetrics().fboxsep * options.fontMetrics().ptPerEm;\n      node.setAttribute(\"width\", \"+\" + 2 * fboxsep + \"pt\");\n      node.setAttribute(\"height\", \"+\" + 2 * fboxsep + \"pt\");\n      node.setAttribute(\"lspace\", fboxsep + \"pt\"); //\n\n      node.setAttribute(\"voffset\", fboxsep + \"pt\");\n\n      if (group.label === \"\\\\fcolorbox\") {\n        var thk = Math.max(options.fontMetrics().fboxrule, // default\n        options.minRuleThickness // user override\n        );\n        node.setAttribute(\"style\", \"border: \" + thk + \"em solid \" + String(group.borderColor));\n      }\n\n      break;\n\n    case \"\\\\xcancel\":\n      node.setAttribute(\"notation\", \"updiagonalstrike downdiagonalstrike\");\n      break;\n  }\n\n  if (group.backgroundColor) {\n    node.setAttribute(\"mathbackground\", group.backgroundColor);\n  }\n\n  return node;\n};\n\ndefineFunction({\n  type: \"enclose\",\n  names: [\"\\\\colorbox\"],\n  props: {\n    numArgs: 2,\n    allowedInText: true,\n    argTypes: [\"color\", \"text\"]\n  },\n\n  handler(_ref, args, optArgs) {\n    var {\n      parser,\n      funcName\n    } = _ref;\n    var color = assertNodeType(args[0], \"color-token\").color;\n    var body = args[1];\n    return {\n      type: \"enclose\",\n      mode: parser.mode,\n      label: funcName,\n      backgroundColor: color,\n      body\n    };\n  },\n\n  htmlBuilder: htmlBuilder$7,\n  mathmlBuilder: mathmlBuilder$6\n});\ndefineFunction({\n  type: \"enclose\",\n  names: [\"\\\\fcolorbox\"],\n  props: {\n    numArgs: 3,\n    allowedInText: true,\n    argTypes: [\"color\", \"color\", \"text\"]\n  },\n\n  handler(_ref2, args, optArgs) {\n    var {\n      parser,\n      funcName\n    } = _ref2;\n    var borderColor = assertNodeType(args[0], \"color-token\").color;\n    var backgroundColor = assertNodeType(args[1], \"color-token\").color;\n    var body = args[2];\n    return {\n      type: \"enclose\",\n      mode: parser.mode,\n      label: funcName,\n      backgroundColor,\n      borderColor,\n      body\n    };\n  },\n\n  htmlBuilder: htmlBuilder$7,\n  mathmlBuilder: mathmlBuilder$6\n});\ndefineFunction({\n  type: \"enclose\",\n  names: [\"\\\\fbox\"],\n  props: {\n    numArgs: 1,\n    argTypes: [\"hbox\"],\n    allowedInText: true\n  },\n\n  handler(_ref3, args) {\n    var {\n      parser\n    } = _ref3;\n    return {\n      type: \"enclose\",\n      mode: parser.mode,\n      label: \"\\\\fbox\",\n      body: args[0]\n    };\n  }\n\n});\ndefineFunction({\n  type: \"enclose\",\n  names: [\"\\\\cancel\", \"\\\\bcancel\", \"\\\\xcancel\", \"\\\\sout\", \"\\\\phase\"],\n  props: {\n    numArgs: 1\n  },\n\n  handler(_ref4, args) {\n    var {\n      parser,\n      funcName\n    } = _ref4;\n    var body = args[0];\n    return {\n      type: \"enclose\",\n      mode: parser.mode,\n      label: funcName,\n      body\n    };\n  },\n\n  htmlBuilder: htmlBuilder$7,\n  mathmlBuilder: mathmlBuilder$6\n});\ndefineFunction({\n  type: \"enclose\",\n  names: [\"\\\\angl\"],\n  props: {\n    numArgs: 1,\n    argTypes: [\"hbox\"],\n    allowedInText: false\n  },\n\n  handler(_ref5, args) {\n    var {\n      parser\n    } = _ref5;\n    return {\n      type: \"enclose\",\n      mode: parser.mode,\n      label: \"\\\\angl\",\n      body: args[0]\n    };\n  }\n\n});\n\n/**\n * All registered environments.\n * `environments.js` exports this same dictionary again and makes it public.\n * `Parser.js` requires this dictionary via `environments.js`.\n */\nvar _environments = {};\nfunction defineEnvironment(_ref) {\n  var {\n    type,\n    names,\n    props,\n    handler,\n    htmlBuilder,\n    mathmlBuilder\n  } = _ref;\n  // Set default values of environments.\n  var data = {\n    type,\n    numArgs: props.numArgs || 0,\n    allowedInText: false,\n    numOptionalArgs: 0,\n    handler\n  };\n\n  for (var i = 0; i < names.length; ++i) {\n    // TODO: The value type of _environments should be a type union of all\n    // possible `EnvSpec<>` possibilities instead of `EnvSpec<*>`, which is\n    // an existential type.\n    _environments[names[i]] = data;\n  }\n\n  if (htmlBuilder) {\n    _htmlGroupBuilders[type] = htmlBuilder;\n  }\n\n  if (mathmlBuilder) {\n    _mathmlGroupBuilders[type] = mathmlBuilder;\n  }\n}\n\n/**\n * All registered global/built-in macros.\n * `macros.js` exports this same dictionary again and makes it public.\n * `Parser.js` requires this dictionary via `macros.js`.\n */\nvar _macros = {}; // This function might one day accept an additional argument and do more things.\n\nfunction defineMacro(name, body) {\n  _macros[name] = body;\n}\n\n// Helper functions\nfunction getHLines(parser) {\n  // Return an array. The array length = number of hlines.\n  // Each element in the array tells if the line is dashed.\n  var hlineInfo = [];\n  parser.consumeSpaces();\n  var nxt = parser.fetch().text;\n\n  if (nxt === \"\\\\relax\") {\n    // \\relax is an artifact of the \\cr macro below\n    parser.consume();\n    parser.consumeSpaces();\n    nxt = parser.fetch().text;\n  }\n\n  while (nxt === \"\\\\hline\" || nxt === \"\\\\hdashline\") {\n    parser.consume();\n    hlineInfo.push(nxt === \"\\\\hdashline\");\n    parser.consumeSpaces();\n    nxt = parser.fetch().text;\n  }\n\n  return hlineInfo;\n}\n\nvar validateAmsEnvironmentContext = context => {\n  var settings = context.parser.settings;\n\n  if (!settings.displayMode) {\n    throw new ParseError(\"{\" + context.envName + \"} can be used only in\" + \" display mode.\");\n  }\n}; // autoTag (an argument to parseArray) can be one of three values:\n// * undefined: Regular (not-top-level) array; no tags on each row\n// * true: Automatic equation numbering, overridable by \\tag\n// * false: Tags allowed on each row, but no automatic numbering\n// This function *doesn't* work with the \"split\" environment name.\n\n\nfunction getAutoTag(name) {\n  if (name.indexOf(\"ed\") === -1) {\n    return name.indexOf(\"*\") === -1;\n  } // return undefined;\n\n}\n/**\n * Parse the body of the environment, with rows delimited by \\\\ and\n * columns delimited by &, and create a nested list in row-major order\n * with one group per cell.  If given an optional argument style\n * (\"text\", \"display\", etc.), then each cell is cast into that style.\n */\n\n\nfunction parseArray(parser, _ref, style) {\n  var {\n    hskipBeforeAndAfter,\n    addJot,\n    cols,\n    arraystretch,\n    colSeparationType,\n    autoTag,\n    singleRow,\n    emptySingleRow,\n    maxNumCols,\n    leqno\n  } = _ref;\n  parser.gullet.beginGroup();\n\n  if (!singleRow) {\n    // \\cr is equivalent to \\\\ without the optional size argument (see below)\n    // TODO: provide helpful error when \\cr is used outside array environment\n    parser.gullet.macros.set(\"\\\\cr\", \"\\\\\\\\\\\\relax\");\n  } // Get current arraystretch if it's not set by the environment\n\n\n  if (!arraystretch) {\n    var stretch = parser.gullet.expandMacroAsText(\"\\\\arraystretch\");\n\n    if (stretch == null) {\n      // Default \\arraystretch from lttab.dtx\n      arraystretch = 1;\n    } else {\n      arraystretch = parseFloat(stretch);\n\n      if (!arraystretch || arraystretch < 0) {\n        throw new ParseError(\"Invalid \\\\arraystretch: \" + stretch);\n      }\n    }\n  } // Start group for first cell\n\n\n  parser.gullet.beginGroup();\n  var row = [];\n  var body = [row];\n  var rowGaps = [];\n  var hLinesBeforeRow = [];\n  var tags = autoTag != null ? [] : undefined; // amsmath uses \\global\\@eqnswtrue and \\global\\@eqnswfalse to represent\n  // whether this row should have an equation number.  Simulate this with\n  // a \\@eqnsw macro set to 1 or 0.\n\n  function beginRow() {\n    if (autoTag) {\n      parser.gullet.macros.set(\"\\\\@eqnsw\", \"1\", true);\n    }\n  }\n\n  function endRow() {\n    if (tags) {\n      if (parser.gullet.macros.get(\"\\\\df@tag\")) {\n        tags.push(parser.subparse([new Token(\"\\\\df@tag\")]));\n        parser.gullet.macros.set(\"\\\\df@tag\", undefined, true);\n      } else {\n        tags.push(Boolean(autoTag) && parser.gullet.macros.get(\"\\\\@eqnsw\") === \"1\");\n      }\n    }\n  }\n\n  beginRow(); // Test for \\hline at the top of the array.\n\n  hLinesBeforeRow.push(getHLines(parser));\n\n  while (true) {\n    // eslint-disable-line no-constant-condition\n    // Parse each cell in its own group (namespace)\n    var cell = parser.parseExpression(false, singleRow ? \"\\\\end\" : \"\\\\\\\\\");\n    parser.gullet.endGroup();\n    parser.gullet.beginGroup();\n    cell = {\n      type: \"ordgroup\",\n      mode: parser.mode,\n      body: cell\n    };\n\n    if (style) {\n      cell = {\n        type: \"styling\",\n        mode: parser.mode,\n        style,\n        body: [cell]\n      };\n    }\n\n    row.push(cell);\n    var next = parser.fetch().text;\n\n    if (next === \"&\") {\n      if (maxNumCols && row.length === maxNumCols) {\n        if (singleRow || colSeparationType) {\n          // {equation} or {split}\n          throw new ParseError(\"Too many tab characters: &\", parser.nextToken);\n        } else {\n          // {array} environment\n          parser.settings.reportNonstrict(\"textEnv\", \"Too few columns \" + \"specified in the {array} column argument.\");\n        }\n      }\n\n      parser.consume();\n    } else if (next === \"\\\\end\") {\n      endRow(); // Arrays terminate newlines with `\\crcr` which consumes a `\\cr` if\n      // the last line is empty.  However, AMS environments keep the\n      // empty row if it's the only one.\n      // NOTE: Currently, `cell` is the last item added into `row`.\n\n      if (row.length === 1 && cell.type === \"styling\" && cell.body[0].body.length === 0 && (body.length > 1 || !emptySingleRow)) {\n        body.pop();\n      }\n\n      if (hLinesBeforeRow.length < body.length + 1) {\n        hLinesBeforeRow.push([]);\n      }\n\n      break;\n    } else if (next === \"\\\\\\\\\") {\n      parser.consume();\n      var size = void 0; // \\def\\Let@{\\let\\\\\\math@cr}\n      // \\def\\math@cr{...\\math@cr@}\n      // \\def\\math@cr@{\\new@ifnextchar[\\math@cr@@{\\math@cr@@[\\z@]}}\n      // \\def\\math@cr@@[#1]{...\\math@cr@@@...}\n      // \\def\\math@cr@@@{\\cr}\n\n      if (parser.gullet.future().text !== \" \") {\n        size = parser.parseSizeGroup(true);\n      }\n\n      rowGaps.push(size ? size.value : null);\n      endRow(); // check for \\hline(s) following the row separator\n\n      hLinesBeforeRow.push(getHLines(parser));\n      row = [];\n      body.push(row);\n      beginRow();\n    } else {\n      throw new ParseError(\"Expected & or \\\\\\\\ or \\\\cr or \\\\end\", parser.nextToken);\n    }\n  } // End cell group\n\n\n  parser.gullet.endGroup(); // End array group defining \\cr\n\n  parser.gullet.endGroup();\n  return {\n    type: \"array\",\n    mode: parser.mode,\n    addJot,\n    arraystretch,\n    body,\n    cols,\n    rowGaps,\n    hskipBeforeAndAfter,\n    hLinesBeforeRow,\n    colSeparationType,\n    tags,\n    leqno\n  };\n} // Decides on a style for cells in an array according to whether the given\n// environment name starts with the letter 'd'.\n\n\nfunction dCellStyle(envName) {\n  if (envName.slice(0, 1) === \"d\") {\n    return \"display\";\n  } else {\n    return \"text\";\n  }\n}\n\nvar htmlBuilder$6 = function htmlBuilder(group, options) {\n  var r;\n  var c;\n  var nr = group.body.length;\n  var hLinesBeforeRow = group.hLinesBeforeRow;\n  var nc = 0;\n  var body = new Array(nr);\n  var hlines = [];\n  var ruleThickness = Math.max( // From LaTeX \\showthe\\arrayrulewidth. Equals 0.04 em.\n  options.fontMetrics().arrayRuleWidth, options.minRuleThickness // User override.\n  ); // Horizontal spacing\n\n  var pt = 1 / options.fontMetrics().ptPerEm;\n  var arraycolsep = 5 * pt; // default value, i.e. \\arraycolsep in article.cls\n\n  if (group.colSeparationType && group.colSeparationType === \"small\") {\n    // We're in a {smallmatrix}. Default column space is \\thickspace,\n    // i.e. 5/18em = 0.2778em, per amsmath.dtx for {smallmatrix}.\n    // But that needs adjustment because LaTeX applies \\scriptstyle to the\n    // entire array, including the colspace, but this function applies\n    // \\scriptstyle only inside each element.\n    var localMultiplier = options.havingStyle(Style$1.SCRIPT).sizeMultiplier;\n    arraycolsep = 0.2778 * (localMultiplier / options.sizeMultiplier);\n  } // Vertical spacing\n\n\n  var baselineskip = group.colSeparationType === \"CD\" ? calculateSize({\n    number: 3,\n    unit: \"ex\"\n  }, options) : 12 * pt; // see size10.clo\n  // Default \\jot from ltmath.dtx\n  // TODO(edemaine): allow overriding \\jot via \\setlength (#687)\n\n  var jot = 3 * pt;\n  var arrayskip = group.arraystretch * baselineskip;\n  var arstrutHeight = 0.7 * arrayskip; // \\strutbox in ltfsstrc.dtx and\n\n  var arstrutDepth = 0.3 * arrayskip; // \\@arstrutbox in lttab.dtx\n\n  var totalHeight = 0; // Set a position for \\hline(s) at the top of the array, if any.\n\n  function setHLinePos(hlinesInGap) {\n    for (var i = 0; i < hlinesInGap.length; ++i) {\n      if (i > 0) {\n        totalHeight += 0.25;\n      }\n\n      hlines.push({\n        pos: totalHeight,\n        isDashed: hlinesInGap[i]\n      });\n    }\n  }\n\n  setHLinePos(hLinesBeforeRow[0]);\n\n  for (r = 0; r < group.body.length; ++r) {\n    var inrow = group.body[r];\n    var height = arstrutHeight; // \\@array adds an \\@arstrut\n\n    var depth = arstrutDepth; // to each tow (via the template)\n\n    if (nc < inrow.length) {\n      nc = inrow.length;\n    }\n\n    var outrow = new Array(inrow.length);\n\n    for (c = 0; c < inrow.length; ++c) {\n      var elt = buildGroup$1(inrow[c], options);\n\n      if (depth < elt.depth) {\n        depth = elt.depth;\n      }\n\n      if (height < elt.height) {\n        height = elt.height;\n      }\n\n      outrow[c] = elt;\n    }\n\n    var rowGap = group.rowGaps[r];\n    var gap = 0;\n\n    if (rowGap) {\n      gap = calculateSize(rowGap, options);\n\n      if (gap > 0) {\n        // \\@argarraycr\n        gap += arstrutDepth;\n\n        if (depth < gap) {\n          depth = gap; // \\@xargarraycr\n        }\n\n        gap = 0;\n      }\n    } // In AMS multiline environments such as aligned and gathered, rows\n    // correspond to lines that have additional \\jot added to the\n    // \\baselineskip via \\openup.\n\n\n    if (group.addJot) {\n      depth += jot;\n    }\n\n    outrow.height = height;\n    outrow.depth = depth;\n    totalHeight += height;\n    outrow.pos = totalHeight;\n    totalHeight += depth + gap; // \\@yargarraycr\n\n    body[r] = outrow; // Set a position for \\hline(s), if any.\n\n    setHLinePos(hLinesBeforeRow[r + 1]);\n  }\n\n  var offset = totalHeight / 2 + options.fontMetrics().axisHeight;\n  var colDescriptions = group.cols || [];\n  var cols = [];\n  var colSep;\n  var colDescrNum;\n  var tagSpans = [];\n\n  if (group.tags && group.tags.some(tag => tag)) {\n    // An environment with manual tags and/or automatic equation numbers.\n    // Create node(s), the latter of which trigger CSS counter increment.\n    for (r = 0; r < nr; ++r) {\n      var rw = body[r];\n      var shift = rw.pos - offset;\n      var tag = group.tags[r];\n      var tagSpan = void 0;\n\n      if (tag === true) {\n        // automatic numbering\n        tagSpan = buildCommon.makeSpan([\"eqn-num\"], [], options);\n      } else if (tag === false) {\n        // \\nonumber/\\notag or starred environment\n        tagSpan = buildCommon.makeSpan([], [], options);\n      } else {\n        // manual \\tag\n        tagSpan = buildCommon.makeSpan([], buildExpression$1(tag, options, true), options);\n      }\n\n      tagSpan.depth = rw.depth;\n      tagSpan.height = rw.height;\n      tagSpans.push({\n        type: \"elem\",\n        elem: tagSpan,\n        shift\n      });\n    }\n  }\n\n  for (c = 0, colDescrNum = 0; // Continue while either there are more columns or more column\n  // descriptions, so trailing separators don't get lost.\n  c < nc || colDescrNum < colDescriptions.length; ++c, ++colDescrNum) {\n    var colDescr = colDescriptions[colDescrNum] || {};\n    var firstSeparator = true;\n\n    while (colDescr.type === \"separator\") {\n      // If there is more than one separator in a row, add a space\n      // between them.\n      if (!firstSeparator) {\n        colSep = buildCommon.makeSpan([\"arraycolsep\"], []);\n        colSep.style.width = makeEm(options.fontMetrics().doubleRuleSep);\n        cols.push(colSep);\n      }\n\n      if (colDescr.separator === \"|\" || colDescr.separator === \":\") {\n        var lineType = colDescr.separator === \"|\" ? \"solid\" : \"dashed\";\n        var separator = buildCommon.makeSpan([\"vertical-separator\"], [], options);\n        separator.style.height = makeEm(totalHeight);\n        separator.style.borderRightWidth = makeEm(ruleThickness);\n        separator.style.borderRightStyle = lineType;\n        separator.style.margin = \"0 \" + makeEm(-ruleThickness / 2);\n\n        var _shift = totalHeight - offset;\n\n        if (_shift) {\n          separator.style.verticalAlign = makeEm(-_shift);\n        }\n\n        cols.push(separator);\n      } else {\n        throw new ParseError(\"Invalid separator type: \" + colDescr.separator);\n      }\n\n      colDescrNum++;\n      colDescr = colDescriptions[colDescrNum] || {};\n      firstSeparator = false;\n    }\n\n    if (c >= nc) {\n      continue;\n    }\n\n    var sepwidth = void 0;\n\n    if (c > 0 || group.hskipBeforeAndAfter) {\n      sepwidth = utils.deflt(colDescr.pregap, arraycolsep);\n\n      if (sepwidth !== 0) {\n        colSep = buildCommon.makeSpan([\"arraycolsep\"], []);\n        colSep.style.width = makeEm(sepwidth);\n        cols.push(colSep);\n      }\n    }\n\n    var col = [];\n\n    for (r = 0; r < nr; ++r) {\n      var row = body[r];\n      var elem = row[c];\n\n      if (!elem) {\n        continue;\n      }\n\n      var _shift2 = row.pos - offset;\n\n      elem.depth = row.depth;\n      elem.height = row.height;\n      col.push({\n        type: \"elem\",\n        elem: elem,\n        shift: _shift2\n      });\n    }\n\n    col = buildCommon.makeVList({\n      positionType: \"individualShift\",\n      children: col\n    }, options);\n    col = buildCommon.makeSpan([\"col-align-\" + (colDescr.align || \"c\")], [col]);\n    cols.push(col);\n\n    if (c < nc - 1 || group.hskipBeforeAndAfter) {\n      sepwidth = utils.deflt(colDescr.postgap, arraycolsep);\n\n      if (sepwidth !== 0) {\n        colSep = buildCommon.makeSpan([\"arraycolsep\"], []);\n        colSep.style.width = makeEm(sepwidth);\n        cols.push(colSep);\n      }\n    }\n  }\n\n  body = buildCommon.makeSpan([\"mtable\"], cols); // Add \\hline(s), if any.\n\n  if (hlines.length > 0) {\n    var line = buildCommon.makeLineSpan(\"hline\", options, ruleThickness);\n    var dashes = buildCommon.makeLineSpan(\"hdashline\", options, ruleThickness);\n    var vListElems = [{\n      type: \"elem\",\n      elem: body,\n      shift: 0\n    }];\n\n    while (hlines.length > 0) {\n      var hline = hlines.pop();\n      var lineShift = hline.pos - offset;\n\n      if (hline.isDashed) {\n        vListElems.push({\n          type: \"elem\",\n          elem: dashes,\n          shift: lineShift\n        });\n      } else {\n        vListElems.push({\n          type: \"elem\",\n          elem: line,\n          shift: lineShift\n        });\n      }\n    }\n\n    body = buildCommon.makeVList({\n      positionType: \"individualShift\",\n      children: vListElems\n    }, options);\n  }\n\n  if (tagSpans.length === 0) {\n    return buildCommon.makeSpan([\"mord\"], [body], options);\n  } else {\n    var eqnNumCol = buildCommon.makeVList({\n      positionType: \"individualShift\",\n      children: tagSpans\n    }, options);\n    eqnNumCol = buildCommon.makeSpan([\"tag\"], [eqnNumCol], options);\n    return buildCommon.makeFragment([body, eqnNumCol]);\n  }\n};\n\nvar alignMap = {\n  c: \"center \",\n  l: \"left \",\n  r: \"right \"\n};\n\nvar mathmlBuilder$5 = function mathmlBuilder(group, options) {\n  var tbl = [];\n  var glue = new mathMLTree.MathNode(\"mtd\", [], [\"mtr-glue\"]);\n  var tag = new mathMLTree.MathNode(\"mtd\", [], [\"mml-eqn-num\"]);\n\n  for (var i = 0; i < group.body.length; i++) {\n    var rw = group.body[i];\n    var row = [];\n\n    for (var j = 0; j < rw.length; j++) {\n      row.push(new mathMLTree.MathNode(\"mtd\", [buildGroup(rw[j], options)]));\n    }\n\n    if (group.tags && group.tags[i]) {\n      row.unshift(glue);\n      row.push(glue);\n\n      if (group.leqno) {\n        row.unshift(tag);\n      } else {\n        row.push(tag);\n      }\n    }\n\n    tbl.push(new mathMLTree.MathNode(\"mtr\", row));\n  }\n\n  var table = new mathMLTree.MathNode(\"mtable\", tbl); // Set column alignment, row spacing, column spacing, and\n  // array lines by setting attributes on the table element.\n  // Set the row spacing. In MathML, we specify a gap distance.\n  // We do not use rowGap[] because MathML automatically increases\n  // cell height with the height/depth of the element content.\n  // LaTeX \\arraystretch multiplies the row baseline-to-baseline distance.\n  // We simulate this by adding (arraystretch - 1)em to the gap. This\n  // does a reasonable job of adjusting arrays containing 1 em tall content.\n  // The 0.16 and 0.09 values are found empirically. They produce an array\n  // similar to LaTeX and in which content does not interfere with \\hlines.\n\n  var gap = group.arraystretch === 0.5 ? 0.1 // {smallmatrix}, {subarray}\n  : 0.16 + group.arraystretch - 1 + (group.addJot ? 0.09 : 0);\n  table.setAttribute(\"rowspacing\", makeEm(gap)); // MathML table lines go only between cells.\n  // To place a line on an edge we'll use <menclose>, if necessary.\n\n  var menclose = \"\";\n  var align = \"\";\n\n  if (group.cols && group.cols.length > 0) {\n    // Find column alignment, column spacing, and  vertical lines.\n    var cols = group.cols;\n    var columnLines = \"\";\n    var prevTypeWasAlign = false;\n    var iStart = 0;\n    var iEnd = cols.length;\n\n    if (cols[0].type === \"separator\") {\n      menclose += \"top \";\n      iStart = 1;\n    }\n\n    if (cols[cols.length - 1].type === \"separator\") {\n      menclose += \"bottom \";\n      iEnd -= 1;\n    }\n\n    for (var _i = iStart; _i < iEnd; _i++) {\n      if (cols[_i].type === \"align\") {\n        align += alignMap[cols[_i].align];\n\n        if (prevTypeWasAlign) {\n          columnLines += \"none \";\n        }\n\n        prevTypeWasAlign = true;\n      } else if (cols[_i].type === \"separator\") {\n        // MathML accepts only single lines between cells.\n        // So we read only the first of consecutive separators.\n        if (prevTypeWasAlign) {\n          columnLines += cols[_i].separator === \"|\" ? \"solid \" : \"dashed \";\n          prevTypeWasAlign = false;\n        }\n      }\n    }\n\n    table.setAttribute(\"columnalign\", align.trim());\n\n    if (/[sd]/.test(columnLines)) {\n      table.setAttribute(\"columnlines\", columnLines.trim());\n    }\n  } // Set column spacing.\n\n\n  if (group.colSeparationType === \"align\") {\n    var _cols = group.cols || [];\n\n    var spacing = \"\";\n\n    for (var _i2 = 1; _i2 < _cols.length; _i2++) {\n      spacing += _i2 % 2 ? \"0em \" : \"1em \";\n    }\n\n    table.setAttribute(\"columnspacing\", spacing.trim());\n  } else if (group.colSeparationType === \"alignat\" || group.colSeparationType === \"gather\") {\n    table.setAttribute(\"columnspacing\", \"0em\");\n  } else if (group.colSeparationType === \"small\") {\n    table.setAttribute(\"columnspacing\", \"0.2778em\");\n  } else if (group.colSeparationType === \"CD\") {\n    table.setAttribute(\"columnspacing\", \"0.5em\");\n  } else {\n    table.setAttribute(\"columnspacing\", \"1em\");\n  } // Address \\hline and \\hdashline\n\n\n  var rowLines = \"\";\n  var hlines = group.hLinesBeforeRow;\n  menclose += hlines[0].length > 0 ? \"left \" : \"\";\n  menclose += hlines[hlines.length - 1].length > 0 ? \"right \" : \"\";\n\n  for (var _i3 = 1; _i3 < hlines.length - 1; _i3++) {\n    rowLines += hlines[_i3].length === 0 ? \"none \" // MathML accepts only a single line between rows. Read one element.\n    : hlines[_i3][0] ? \"dashed \" : \"solid \";\n  }\n\n  if (/[sd]/.test(rowLines)) {\n    table.setAttribute(\"rowlines\", rowLines.trim());\n  }\n\n  if (menclose !== \"\") {\n    table = new mathMLTree.MathNode(\"menclose\", [table]);\n    table.setAttribute(\"notation\", menclose.trim());\n  }\n\n  if (group.arraystretch && group.arraystretch < 1) {\n    // A small array. Wrap in scriptstyle so row gap is not too large.\n    table = new mathMLTree.MathNode(\"mstyle\", [table]);\n    table.setAttribute(\"scriptlevel\", \"1\");\n  }\n\n  return table;\n}; // Convenience function for align, align*, aligned, alignat, alignat*, alignedat.\n\n\nvar alignedHandler = function alignedHandler(context, args) {\n  if (context.envName.indexOf(\"ed\") === -1) {\n    validateAmsEnvironmentContext(context);\n  }\n\n  var cols = [];\n  var separationType = context.envName.indexOf(\"at\") > -1 ? \"alignat\" : \"align\";\n  var isSplit = context.envName === \"split\";\n  var res = parseArray(context.parser, {\n    cols,\n    addJot: true,\n    autoTag: isSplit ? undefined : getAutoTag(context.envName),\n    emptySingleRow: true,\n    colSeparationType: separationType,\n    maxNumCols: isSplit ? 2 : undefined,\n    leqno: context.parser.settings.leqno\n  }, \"display\"); // Determining number of columns.\n  // 1. If the first argument is given, we use it as a number of columns,\n  //    and makes sure that each row doesn't exceed that number.\n  // 2. Otherwise, just count number of columns = maximum number\n  //    of cells in each row (\"aligned\" mode -- isAligned will be true).\n  //\n  // At the same time, prepend empty group {} at beginning of every second\n  // cell in each row (starting with second cell) so that operators become\n  // binary.  This behavior is implemented in amsmath's \\start@aligned.\n\n  var numMaths;\n  var numCols = 0;\n  var emptyGroup = {\n    type: \"ordgroup\",\n    mode: context.mode,\n    body: []\n  };\n\n  if (args[0] && args[0].type === \"ordgroup\") {\n    var arg0 = \"\";\n\n    for (var i = 0; i < args[0].body.length; i++) {\n      var textord = assertNodeType(args[0].body[i], \"textord\");\n      arg0 += textord.text;\n    }\n\n    numMaths = Number(arg0);\n    numCols = numMaths * 2;\n  }\n\n  var isAligned = !numCols;\n  res.body.forEach(function (row) {\n    for (var _i4 = 1; _i4 < row.length; _i4 += 2) {\n      // Modify ordgroup node within styling node\n      var styling = assertNodeType(row[_i4], \"styling\");\n      var ordgroup = assertNodeType(styling.body[0], \"ordgroup\");\n      ordgroup.body.unshift(emptyGroup);\n    }\n\n    if (!isAligned) {\n      // Case 1\n      var curMaths = row.length / 2;\n\n      if (numMaths < curMaths) {\n        throw new ParseError(\"Too many math in a row: \" + (\"expected \" + numMaths + \", but got \" + curMaths), row[0]);\n      }\n    } else if (numCols < row.length) {\n      // Case 2\n      numCols = row.length;\n    }\n  }); // Adjusting alignment.\n  // In aligned mode, we add one \\qquad between columns;\n  // otherwise we add nothing.\n\n  for (var _i5 = 0; _i5 < numCols; ++_i5) {\n    var align = \"r\";\n    var pregap = 0;\n\n    if (_i5 % 2 === 1) {\n      align = \"l\";\n    } else if (_i5 > 0 && isAligned) {\n      // \"aligned\" mode.\n      pregap = 1; // add one \\quad\n    }\n\n    cols[_i5] = {\n      type: \"align\",\n      align: align,\n      pregap: pregap,\n      postgap: 0\n    };\n  }\n\n  res.colSeparationType = isAligned ? \"align\" : \"alignat\";\n  return res;\n}; // Arrays are part of LaTeX, defined in lttab.dtx so its documentation\n// is part of the source2e.pdf file of LaTeX2e source documentation.\n// {darray} is an {array} environment where cells are set in \\displaystyle,\n// as defined in nccmath.sty.\n\n\ndefineEnvironment({\n  type: \"array\",\n  names: [\"array\", \"darray\"],\n  props: {\n    numArgs: 1\n  },\n\n  handler(context, args) {\n    // Since no types are specified above, the two possibilities are\n    // - The argument is wrapped in {} or [], in which case Parser's\n    //   parseGroup() returns an \"ordgroup\" wrapping some symbol node.\n    // - The argument is a bare symbol node.\n    var symNode = checkSymbolNodeType(args[0]);\n    var colalign = symNode ? [args[0]] : assertNodeType(args[0], \"ordgroup\").body;\n    var cols = colalign.map(function (nde) {\n      var node = assertSymbolNodeType(nde);\n      var ca = node.text;\n\n      if (\"lcr\".indexOf(ca) !== -1) {\n        return {\n          type: \"align\",\n          align: ca\n        };\n      } else if (ca === \"|\") {\n        return {\n          type: \"separator\",\n          separator: \"|\"\n        };\n      } else if (ca === \":\") {\n        return {\n          type: \"separator\",\n          separator: \":\"\n        };\n      }\n\n      throw new ParseError(\"Unknown column alignment: \" + ca, nde);\n    });\n    var res = {\n      cols,\n      hskipBeforeAndAfter: true,\n      // \\@preamble in lttab.dtx\n      maxNumCols: cols.length\n    };\n    return parseArray(context.parser, res, dCellStyle(context.envName));\n  },\n\n  htmlBuilder: htmlBuilder$6,\n  mathmlBuilder: mathmlBuilder$5\n}); // The matrix environments of amsmath builds on the array environment\n// of LaTeX, which is discussed above.\n// The mathtools package adds starred versions of the same environments.\n// These have an optional argument to choose left|center|right justification.\n\ndefineEnvironment({\n  type: \"array\",\n  names: [\"matrix\", \"pmatrix\", \"bmatrix\", \"Bmatrix\", \"vmatrix\", \"Vmatrix\", \"matrix*\", \"pmatrix*\", \"bmatrix*\", \"Bmatrix*\", \"vmatrix*\", \"Vmatrix*\"],\n  props: {\n    numArgs: 0\n  },\n\n  handler(context) {\n    var delimiters = {\n      \"matrix\": null,\n      \"pmatrix\": [\"(\", \")\"],\n      \"bmatrix\": [\"[\", \"]\"],\n      \"Bmatrix\": [\"\\\\{\", \"\\\\}\"],\n      \"vmatrix\": [\"|\", \"|\"],\n      \"Vmatrix\": [\"\\\\Vert\", \"\\\\Vert\"]\n    }[context.envName.replace(\"*\", \"\")]; // \\hskip -\\arraycolsep in amsmath\n\n    var colAlign = \"c\";\n    var payload = {\n      hskipBeforeAndAfter: false,\n      cols: [{\n        type: \"align\",\n        align: colAlign\n      }]\n    };\n\n    if (context.envName.charAt(context.envName.length - 1) === \"*\") {\n      // It's one of the mathtools starred functions.\n      // Parse the optional alignment argument.\n      var parser = context.parser;\n      parser.consumeSpaces();\n\n      if (parser.fetch().text === \"[\") {\n        parser.consume();\n        parser.consumeSpaces();\n        colAlign = parser.fetch().text;\n\n        if (\"lcr\".indexOf(colAlign) === -1) {\n          throw new ParseError(\"Expected l or c or r\", parser.nextToken);\n        }\n\n        parser.consume();\n        parser.consumeSpaces();\n        parser.expect(\"]\");\n        parser.consume();\n        payload.cols = [{\n          type: \"align\",\n          align: colAlign\n        }];\n      }\n    }\n\n    var res = parseArray(context.parser, payload, dCellStyle(context.envName)); // Populate cols with the correct number of column alignment specs.\n\n    var numCols = Math.max(0, ...res.body.map(row => row.length));\n    res.cols = new Array(numCols).fill({\n      type: \"align\",\n      align: colAlign\n    });\n    return delimiters ? {\n      type: \"leftright\",\n      mode: context.mode,\n      body: [res],\n      left: delimiters[0],\n      right: delimiters[1],\n      rightColor: undefined // \\right uninfluenced by \\color in array\n\n    } : res;\n  },\n\n  htmlBuilder: htmlBuilder$6,\n  mathmlBuilder: mathmlBuilder$5\n});\ndefineEnvironment({\n  type: \"array\",\n  names: [\"smallmatrix\"],\n  props: {\n    numArgs: 0\n  },\n\n  handler(context) {\n    var payload = {\n      arraystretch: 0.5\n    };\n    var res = parseArray(context.parser, payload, \"script\");\n    res.colSeparationType = \"small\";\n    return res;\n  },\n\n  htmlBuilder: htmlBuilder$6,\n  mathmlBuilder: mathmlBuilder$5\n});\ndefineEnvironment({\n  type: \"array\",\n  names: [\"subarray\"],\n  props: {\n    numArgs: 1\n  },\n\n  handler(context, args) {\n    // Parsing of {subarray} is similar to {array}\n    var symNode = checkSymbolNodeType(args[0]);\n    var colalign = symNode ? [args[0]] : assertNodeType(args[0], \"ordgroup\").body;\n    var cols = colalign.map(function (nde) {\n      var node = assertSymbolNodeType(nde);\n      var ca = node.text; // {subarray} only recognizes \"l\" & \"c\"\n\n      if (\"lc\".indexOf(ca) !== -1) {\n        return {\n          type: \"align\",\n          align: ca\n        };\n      }\n\n      throw new ParseError(\"Unknown column alignment: \" + ca, nde);\n    });\n\n    if (cols.length > 1) {\n      throw new ParseError(\"{subarray} can contain only one column\");\n    }\n\n    var res = {\n      cols,\n      hskipBeforeAndAfter: false,\n      arraystretch: 0.5\n    };\n    res = parseArray(context.parser, res, \"script\");\n\n    if (res.body.length > 0 && res.body[0].length > 1) {\n      throw new ParseError(\"{subarray} can contain only one column\");\n    }\n\n    return res;\n  },\n\n  htmlBuilder: htmlBuilder$6,\n  mathmlBuilder: mathmlBuilder$5\n}); // A cases environment (in amsmath.sty) is almost equivalent to\n// \\def\\arraystretch{1.2}%\n// \\left\\{\\begin{array}{@{}l@{\\quad}l@{}} \u2026 \\end{array}\\right.\n// {dcases} is a {cases} environment where cells are set in \\displaystyle,\n// as defined in mathtools.sty.\n// {rcases} is another mathtools environment. It's brace is on the right side.\n\ndefineEnvironment({\n  type: \"array\",\n  names: [\"cases\", \"dcases\", \"rcases\", \"drcases\"],\n  props: {\n    numArgs: 0\n  },\n\n  handler(context) {\n    var payload = {\n      arraystretch: 1.2,\n      cols: [{\n        type: \"align\",\n        align: \"l\",\n        pregap: 0,\n        // TODO(kevinb) get the current style.\n        // For now we use the metrics for TEXT style which is what we were\n        // doing before.  Before attempting to get the current style we\n        // should look at TeX's behavior especially for \\over and matrices.\n        postgap: 1.0\n        /* 1em quad */\n\n      }, {\n        type: \"align\",\n        align: \"l\",\n        pregap: 0,\n        postgap: 0\n      }]\n    };\n    var res = parseArray(context.parser, payload, dCellStyle(context.envName));\n    return {\n      type: \"leftright\",\n      mode: context.mode,\n      body: [res],\n      left: context.envName.indexOf(\"r\") > -1 ? \".\" : \"\\\\{\",\n      right: context.envName.indexOf(\"r\") > -1 ? \"\\\\}\" : \".\",\n      rightColor: undefined\n    };\n  },\n\n  htmlBuilder: htmlBuilder$6,\n  mathmlBuilder: mathmlBuilder$5\n}); // In the align environment, one uses ampersands, &, to specify number of\n// columns in each row, and to locate spacing between each column.\n// align gets automatic numbering. align* and aligned do not.\n// The alignedat environment can be used in math mode.\n// Note that we assume \\nomallineskiplimit to be zero,\n// so that \\strut@ is the same as \\strut.\n\ndefineEnvironment({\n  type: \"array\",\n  names: [\"align\", \"align*\", \"aligned\", \"split\"],\n  props: {\n    numArgs: 0\n  },\n  handler: alignedHandler,\n  htmlBuilder: htmlBuilder$6,\n  mathmlBuilder: mathmlBuilder$5\n}); // A gathered environment is like an array environment with one centered\n// column, but where rows are considered lines so get \\jot line spacing\n// and contents are set in \\displaystyle.\n\ndefineEnvironment({\n  type: \"array\",\n  names: [\"gathered\", \"gather\", \"gather*\"],\n  props: {\n    numArgs: 0\n  },\n\n  handler(context) {\n    if (utils.contains([\"gather\", \"gather*\"], context.envName)) {\n      validateAmsEnvironmentContext(context);\n    }\n\n    var res = {\n      cols: [{\n        type: \"align\",\n        align: \"c\"\n      }],\n      addJot: true,\n      colSeparationType: \"gather\",\n      autoTag: getAutoTag(context.envName),\n      emptySingleRow: true,\n      leqno: context.parser.settings.leqno\n    };\n    return parseArray(context.parser, res, \"display\");\n  },\n\n  htmlBuilder: htmlBuilder$6,\n  mathmlBuilder: mathmlBuilder$5\n}); // alignat environment is like an align environment, but one must explicitly\n// specify maximum number of columns in each row, and can adjust spacing between\n// each columns.\n\ndefineEnvironment({\n  type: \"array\",\n  names: [\"alignat\", \"alignat*\", \"alignedat\"],\n  props: {\n    numArgs: 1\n  },\n  handler: alignedHandler,\n  htmlBuilder: htmlBuilder$6,\n  mathmlBuilder: mathmlBuilder$5\n});\ndefineEnvironment({\n  type: \"array\",\n  names: [\"equation\", \"equation*\"],\n  props: {\n    numArgs: 0\n  },\n\n  handler(context) {\n    validateAmsEnvironmentContext(context);\n    var res = {\n      autoTag: getAutoTag(context.envName),\n      emptySingleRow: true,\n      singleRow: true,\n      maxNumCols: 1,\n      leqno: context.parser.settings.leqno\n    };\n    return parseArray(context.parser, res, \"display\");\n  },\n\n  htmlBuilder: htmlBuilder$6,\n  mathmlBuilder: mathmlBuilder$5\n});\ndefineEnvironment({\n  type: \"array\",\n  names: [\"CD\"],\n  props: {\n    numArgs: 0\n  },\n\n  handler(context) {\n    validateAmsEnvironmentContext(context);\n    return parseCD(context.parser);\n  },\n\n  htmlBuilder: htmlBuilder$6,\n  mathmlBuilder: mathmlBuilder$5\n});\ndefineMacro(\"\\\\nonumber\", \"\\\\gdef\\\\@eqnsw{0}\");\ndefineMacro(\"\\\\notag\", \"\\\\nonumber\"); // Catch \\hline outside array environment\n\ndefineFunction({\n  type: \"text\",\n  // Doesn't matter what this is.\n  names: [\"\\\\hline\", \"\\\\hdashline\"],\n  props: {\n    numArgs: 0,\n    allowedInText: true,\n    allowedInMath: true\n  },\n\n  handler(context, args) {\n    throw new ParseError(context.funcName + \" valid only within array environment\");\n  }\n\n});\n\nvar environments = _environments;\n\n// defineEnvironment definitions.\n\ndefineFunction({\n  type: \"environment\",\n  names: [\"\\\\begin\", \"\\\\end\"],\n  props: {\n    numArgs: 1,\n    argTypes: [\"text\"]\n  },\n\n  handler(_ref, args) {\n    var {\n      parser,\n      funcName\n    } = _ref;\n    var nameGroup = args[0];\n\n    if (nameGroup.type !== \"ordgroup\") {\n      throw new ParseError(\"Invalid environment name\", nameGroup);\n    }\n\n    var envName = \"\";\n\n    for (var i = 0; i < nameGroup.body.length; ++i) {\n      envName += assertNodeType(nameGroup.body[i], \"textord\").text;\n    }\n\n    if (funcName === \"\\\\begin\") {\n      // begin...end is similar to left...right\n      if (!environments.hasOwnProperty(envName)) {\n        throw new ParseError(\"No such environment: \" + envName, nameGroup);\n      } // Build the environment object. Arguments and other information will\n      // be made available to the begin and end methods using properties.\n\n\n      var env = environments[envName];\n      var {\n        args: _args,\n        optArgs\n      } = parser.parseArguments(\"\\\\begin{\" + envName + \"}\", env);\n      var context = {\n        mode: parser.mode,\n        envName,\n        parser\n      };\n      var result = env.handler(context, _args, optArgs);\n      parser.expect(\"\\\\end\", false);\n      var endNameToken = parser.nextToken;\n      var end = assertNodeType(parser.parseFunction(), \"environment\");\n\n      if (end.name !== envName) {\n        throw new ParseError(\"Mismatch: \\\\begin{\" + envName + \"} matched by \\\\end{\" + end.name + \"}\", endNameToken);\n      } // $FlowFixMe, \"environment\" handler returns an environment ParseNode\n\n\n      return result;\n    }\n\n    return {\n      type: \"environment\",\n      mode: parser.mode,\n      name: envName,\n      nameGroup\n    };\n  }\n\n});\n\n// TODO(kevinb): implement \\\\sl and \\\\sc\n\nvar htmlBuilder$5 = (group, options) => {\n  var font = group.font;\n  var newOptions = options.withFont(font);\n  return buildGroup$1(group.body, newOptions);\n};\n\nvar mathmlBuilder$4 = (group, options) => {\n  var font = group.font;\n  var newOptions = options.withFont(font);\n  return buildGroup(group.body, newOptions);\n};\n\nvar fontAliases = {\n  \"\\\\Bbb\": \"\\\\mathbb\",\n  \"\\\\bold\": \"\\\\mathbf\",\n  \"\\\\frak\": \"\\\\mathfrak\",\n  \"\\\\bm\": \"\\\\boldsymbol\"\n};\ndefineFunction({\n  type: \"font\",\n  names: [// styles, except \\boldsymbol defined below\n  \"\\\\mathrm\", \"\\\\mathit\", \"\\\\mathbf\", \"\\\\mathnormal\", \"\\\\mathsfit\", // families\n  \"\\\\mathbb\", \"\\\\mathcal\", \"\\\\mathfrak\", \"\\\\mathscr\", \"\\\\mathsf\", \"\\\\mathtt\", // aliases, except \\bm defined below\n  \"\\\\Bbb\", \"\\\\bold\", \"\\\\frak\"],\n  props: {\n    numArgs: 1,\n    allowedInArgument: true\n  },\n  handler: (_ref, args) => {\n    var {\n      parser,\n      funcName\n    } = _ref;\n    var body = normalizeArgument(args[0]);\n    var func = funcName;\n\n    if (func in fontAliases) {\n      func = fontAliases[func];\n    }\n\n    return {\n      type: \"font\",\n      mode: parser.mode,\n      font: func.slice(1),\n      body\n    };\n  },\n  htmlBuilder: htmlBuilder$5,\n  mathmlBuilder: mathmlBuilder$4\n});\ndefineFunction({\n  type: \"mclass\",\n  names: [\"\\\\boldsymbol\", \"\\\\bm\"],\n  props: {\n    numArgs: 1\n  },\n  handler: (_ref2, args) => {\n    var {\n      parser\n    } = _ref2;\n    var body = args[0];\n    var isCharacterBox = utils.isCharacterBox(body); // amsbsy.sty's \\boldsymbol uses \\binrel spacing to inherit the\n    // argument's bin|rel|ord status\n\n    return {\n      type: \"mclass\",\n      mode: parser.mode,\n      mclass: binrelClass(body),\n      body: [{\n        type: \"font\",\n        mode: parser.mode,\n        font: \"boldsymbol\",\n        body\n      }],\n      isCharacterBox: isCharacterBox\n    };\n  }\n}); // Old font changing functions\n\ndefineFunction({\n  type: \"font\",\n  names: [\"\\\\rm\", \"\\\\sf\", \"\\\\tt\", \"\\\\bf\", \"\\\\it\", \"\\\\cal\"],\n  props: {\n    numArgs: 0,\n    allowedInText: true\n  },\n  handler: (_ref3, args) => {\n    var {\n      parser,\n      funcName,\n      breakOnTokenText\n    } = _ref3;\n    var {\n      mode\n    } = parser;\n    var body = parser.parseExpression(true, breakOnTokenText);\n    var style = \"math\" + funcName.slice(1);\n    return {\n      type: \"font\",\n      mode: mode,\n      font: style,\n      body: {\n        type: \"ordgroup\",\n        mode: parser.mode,\n        body\n      }\n    };\n  },\n  htmlBuilder: htmlBuilder$5,\n  mathmlBuilder: mathmlBuilder$4\n});\n\nvar adjustStyle = (size, originalStyle) => {\n  // Figure out what style this fraction should be in based on the\n  // function used\n  var style = originalStyle;\n\n  if (size === \"display\") {\n    // Get display style as a default.\n    // If incoming style is sub/sup, use style.text() to get correct size.\n    style = style.id >= Style$1.SCRIPT.id ? style.text() : Style$1.DISPLAY;\n  } else if (size === \"text\" && style.size === Style$1.DISPLAY.size) {\n    // We're in a \\tfrac but incoming style is displaystyle, so:\n    style = Style$1.TEXT;\n  } else if (size === \"script\") {\n    style = Style$1.SCRIPT;\n  } else if (size === \"scriptscript\") {\n    style = Style$1.SCRIPTSCRIPT;\n  }\n\n  return style;\n};\n\nvar htmlBuilder$4 = (group, options) => {\n  // Fractions are handled in the TeXbook on pages 444-445, rules 15(a-e).\n  var style = adjustStyle(group.size, options.style);\n  var nstyle = style.fracNum();\n  var dstyle = style.fracDen();\n  var newOptions;\n  newOptions = options.havingStyle(nstyle);\n  var numerm = buildGroup$1(group.numer, newOptions, options);\n\n  if (group.continued) {\n    // \\cfrac inserts a \\strut into the numerator.\n    // Get \\strut dimensions from TeXbook page 353.\n    var hStrut = 8.5 / options.fontMetrics().ptPerEm;\n    var dStrut = 3.5 / options.fontMetrics().ptPerEm;\n    numerm.height = numerm.height < hStrut ? hStrut : numerm.height;\n    numerm.depth = numerm.depth < dStrut ? dStrut : numerm.depth;\n  }\n\n  newOptions = options.havingStyle(dstyle);\n  var denomm = buildGroup$1(group.denom, newOptions, options);\n  var rule;\n  var ruleWidth;\n  var ruleSpacing;\n\n  if (group.hasBarLine) {\n    if (group.barSize) {\n      ruleWidth = calculateSize(group.barSize, options);\n      rule = buildCommon.makeLineSpan(\"frac-line\", options, ruleWidth);\n    } else {\n      rule = buildCommon.makeLineSpan(\"frac-line\", options);\n    }\n\n    ruleWidth = rule.height;\n    ruleSpacing = rule.height;\n  } else {\n    rule = null;\n    ruleWidth = 0;\n    ruleSpacing = options.fontMetrics().defaultRuleThickness;\n  } // Rule 15b\n\n\n  var numShift;\n  var clearance;\n  var denomShift;\n\n  if (style.size === Style$1.DISPLAY.size || group.size === \"display\") {\n    numShift = options.fontMetrics().num1;\n\n    if (ruleWidth > 0) {\n      clearance = 3 * ruleSpacing;\n    } else {\n      clearance = 7 * ruleSpacing;\n    }\n\n    denomShift = options.fontMetrics().denom1;\n  } else {\n    if (ruleWidth > 0) {\n      numShift = options.fontMetrics().num2;\n      clearance = ruleSpacing;\n    } else {\n      numShift = options.fontMetrics().num3;\n      clearance = 3 * ruleSpacing;\n    }\n\n    denomShift = options.fontMetrics().denom2;\n  }\n\n  var frac;\n\n  if (!rule) {\n    // Rule 15c\n    var candidateClearance = numShift - numerm.depth - (denomm.height - denomShift);\n\n    if (candidateClearance < clearance) {\n      numShift += 0.5 * (clearance - candidateClearance);\n      denomShift += 0.5 * (clearance - candidateClearance);\n    }\n\n    frac = buildCommon.makeVList({\n      positionType: \"individualShift\",\n      children: [{\n        type: \"elem\",\n        elem: denomm,\n        shift: denomShift\n      }, {\n        type: \"elem\",\n        elem: numerm,\n        shift: -numShift\n      }]\n    }, options);\n  } else {\n    // Rule 15d\n    var axisHeight = options.fontMetrics().axisHeight;\n\n    if (numShift - numerm.depth - (axisHeight + 0.5 * ruleWidth) < clearance) {\n      numShift += clearance - (numShift - numerm.depth - (axisHeight + 0.5 * ruleWidth));\n    }\n\n    if (axisHeight - 0.5 * ruleWidth - (denomm.height - denomShift) < clearance) {\n      denomShift += clearance - (axisHeight - 0.5 * ruleWidth - (denomm.height - denomShift));\n    }\n\n    var midShift = -(axisHeight - 0.5 * ruleWidth);\n    frac = buildCommon.makeVList({\n      positionType: \"individualShift\",\n      children: [{\n        type: \"elem\",\n        elem: denomm,\n        shift: denomShift\n      }, {\n        type: \"elem\",\n        elem: rule,\n        shift: midShift\n      }, {\n        type: \"elem\",\n        elem: numerm,\n        shift: -numShift\n      }]\n    }, options);\n  } // Since we manually change the style sometimes (with \\dfrac or \\tfrac),\n  // account for the possible size change here.\n\n\n  newOptions = options.havingStyle(style);\n  frac.height *= newOptions.sizeMultiplier / options.sizeMultiplier;\n  frac.depth *= newOptions.sizeMultiplier / options.sizeMultiplier; // Rule 15e\n\n  var delimSize;\n\n  if (style.size === Style$1.DISPLAY.size) {\n    delimSize = options.fontMetrics().delim1;\n  } else if (style.size === Style$1.SCRIPTSCRIPT.size) {\n    delimSize = options.havingStyle(Style$1.SCRIPT).fontMetrics().delim2;\n  } else {\n    delimSize = options.fontMetrics().delim2;\n  }\n\n  var leftDelim;\n  var rightDelim;\n\n  if (group.leftDelim == null) {\n    leftDelim = makeNullDelimiter(options, [\"mopen\"]);\n  } else {\n    leftDelim = delimiter.customSizedDelim(group.leftDelim, delimSize, true, options.havingStyle(style), group.mode, [\"mopen\"]);\n  }\n\n  if (group.continued) {\n    rightDelim = buildCommon.makeSpan([]); // zero width for \\cfrac\n  } else if (group.rightDelim == null) {\n    rightDelim = makeNullDelimiter(options, [\"mclose\"]);\n  } else {\n    rightDelim = delimiter.customSizedDelim(group.rightDelim, delimSize, true, options.havingStyle(style), group.mode, [\"mclose\"]);\n  }\n\n  return buildCommon.makeSpan([\"mord\"].concat(newOptions.sizingClasses(options)), [leftDelim, buildCommon.makeSpan([\"mfrac\"], [frac]), rightDelim], options);\n};\n\nvar mathmlBuilder$3 = (group, options) => {\n  var node = new mathMLTree.MathNode(\"mfrac\", [buildGroup(group.numer, options), buildGroup(group.denom, options)]);\n\n  if (!group.hasBarLine) {\n    node.setAttribute(\"linethickness\", \"0px\");\n  } else if (group.barSize) {\n    var ruleWidth = calculateSize(group.barSize, options);\n    node.setAttribute(\"linethickness\", makeEm(ruleWidth));\n  }\n\n  var style = adjustStyle(group.size, options.style);\n\n  if (style.size !== options.style.size) {\n    node = new mathMLTree.MathNode(\"mstyle\", [node]);\n    var isDisplay = style.size === Style$1.DISPLAY.size ? \"true\" : \"false\";\n    node.setAttribute(\"displaystyle\", isDisplay);\n    node.setAttribute(\"scriptlevel\", \"0\");\n  }\n\n  if (group.leftDelim != null || group.rightDelim != null) {\n    var withDelims = [];\n\n    if (group.leftDelim != null) {\n      var leftOp = new mathMLTree.MathNode(\"mo\", [new mathMLTree.TextNode(group.leftDelim.replace(\"\\\\\", \"\"))]);\n      leftOp.setAttribute(\"fence\", \"true\");\n      withDelims.push(leftOp);\n    }\n\n    withDelims.push(node);\n\n    if (group.rightDelim != null) {\n      var rightOp = new mathMLTree.MathNode(\"mo\", [new mathMLTree.TextNode(group.rightDelim.replace(\"\\\\\", \"\"))]);\n      rightOp.setAttribute(\"fence\", \"true\");\n      withDelims.push(rightOp);\n    }\n\n    return makeRow(withDelims);\n  }\n\n  return node;\n};\n\ndefineFunction({\n  type: \"genfrac\",\n  names: [\"\\\\dfrac\", \"\\\\frac\", \"\\\\tfrac\", \"\\\\dbinom\", \"\\\\binom\", \"\\\\tbinom\", \"\\\\\\\\atopfrac\", // can\u2019t be entered directly\n  \"\\\\\\\\bracefrac\", \"\\\\\\\\brackfrac\" // ditto\n  ],\n  props: {\n    numArgs: 2,\n    allowedInArgument: true\n  },\n  handler: (_ref, args) => {\n    var {\n      parser,\n      funcName\n    } = _ref;\n    var numer = args[0];\n    var denom = args[1];\n    var hasBarLine;\n    var leftDelim = null;\n    var rightDelim = null;\n    var size = \"auto\";\n\n    switch (funcName) {\n      case \"\\\\dfrac\":\n      case \"\\\\frac\":\n      case \"\\\\tfrac\":\n        hasBarLine = true;\n        break;\n\n      case \"\\\\\\\\atopfrac\":\n        hasBarLine = false;\n        break;\n\n      case \"\\\\dbinom\":\n      case \"\\\\binom\":\n      case \"\\\\tbinom\":\n        hasBarLine = false;\n        leftDelim = \"(\";\n        rightDelim = \")\";\n        break;\n\n      case \"\\\\\\\\bracefrac\":\n        hasBarLine = false;\n        leftDelim = \"\\\\{\";\n        rightDelim = \"\\\\}\";\n        break;\n\n      case \"\\\\\\\\brackfrac\":\n        hasBarLine = false;\n        leftDelim = \"[\";\n        rightDelim = \"]\";\n        break;\n\n      default:\n        throw new Error(\"Unrecognized genfrac command\");\n    }\n\n    switch (funcName) {\n      case \"\\\\dfrac\":\n      case \"\\\\dbinom\":\n        size = \"display\";\n        break;\n\n      case \"\\\\tfrac\":\n      case \"\\\\tbinom\":\n        size = \"text\";\n        break;\n    }\n\n    return {\n      type: \"genfrac\",\n      mode: parser.mode,\n      continued: false,\n      numer,\n      denom,\n      hasBarLine,\n      leftDelim,\n      rightDelim,\n      size,\n      barSize: null\n    };\n  },\n  htmlBuilder: htmlBuilder$4,\n  mathmlBuilder: mathmlBuilder$3\n});\ndefineFunction({\n  type: \"genfrac\",\n  names: [\"\\\\cfrac\"],\n  props: {\n    numArgs: 2\n  },\n  handler: (_ref2, args) => {\n    var {\n      parser,\n      funcName\n    } = _ref2;\n    var numer = args[0];\n    var denom = args[1];\n    return {\n      type: \"genfrac\",\n      mode: parser.mode,\n      continued: true,\n      numer,\n      denom,\n      hasBarLine: true,\n      leftDelim: null,\n      rightDelim: null,\n      size: \"display\",\n      barSize: null\n    };\n  }\n}); // Infix generalized fractions -- these are not rendered directly, but replaced\n// immediately by one of the variants above.\n\ndefineFunction({\n  type: \"infix\",\n  names: [\"\\\\over\", \"\\\\choose\", \"\\\\atop\", \"\\\\brace\", \"\\\\brack\"],\n  props: {\n    numArgs: 0,\n    infix: true\n  },\n\n  handler(_ref3) {\n    var {\n      parser,\n      funcName,\n      token\n    } = _ref3;\n    var replaceWith;\n\n    switch (funcName) {\n      case \"\\\\over\":\n        replaceWith = \"\\\\frac\";\n        break;\n\n      case \"\\\\choose\":\n        replaceWith = \"\\\\binom\";\n        break;\n\n      case \"\\\\atop\":\n        replaceWith = \"\\\\\\\\atopfrac\";\n        break;\n\n      case \"\\\\brace\":\n        replaceWith = \"\\\\\\\\bracefrac\";\n        break;\n\n      case \"\\\\brack\":\n        replaceWith = \"\\\\\\\\brackfrac\";\n        break;\n\n      default:\n        throw new Error(\"Unrecognized infix genfrac command\");\n    }\n\n    return {\n      type: \"infix\",\n      mode: parser.mode,\n      replaceWith,\n      token\n    };\n  }\n\n});\nvar stylArray = [\"display\", \"text\", \"script\", \"scriptscript\"];\n\nvar delimFromValue = function delimFromValue(delimString) {\n  var delim = null;\n\n  if (delimString.length > 0) {\n    delim = delimString;\n    delim = delim === \".\" ? null : delim;\n  }\n\n  return delim;\n};\n\ndefineFunction({\n  type: \"genfrac\",\n  names: [\"\\\\genfrac\"],\n  props: {\n    numArgs: 6,\n    allowedInArgument: true,\n    argTypes: [\"math\", \"math\", \"size\", \"text\", \"math\", \"math\"]\n  },\n\n  handler(_ref4, args) {\n    var {\n      parser\n    } = _ref4;\n    var numer = args[4];\n    var denom = args[5]; // Look into the parse nodes to get the desired delimiters.\n\n    var leftNode = normalizeArgument(args[0]);\n    var leftDelim = leftNode.type === \"atom\" && leftNode.family === \"open\" ? delimFromValue(leftNode.text) : null;\n    var rightNode = normalizeArgument(args[1]);\n    var rightDelim = rightNode.type === \"atom\" && rightNode.family === \"close\" ? delimFromValue(rightNode.text) : null;\n    var barNode = assertNodeType(args[2], \"size\");\n    var hasBarLine;\n    var barSize = null;\n\n    if (barNode.isBlank) {\n      // \\genfrac acts differently than \\above.\n      // \\genfrac treats an empty size group as a signal to use a\n      // standard bar size. \\above would see size = 0 and omit the bar.\n      hasBarLine = true;\n    } else {\n      barSize = barNode.value;\n      hasBarLine = barSize.number > 0;\n    } // Find out if we want displaystyle, textstyle, etc.\n\n\n    var size = \"auto\";\n    var styl = args[3];\n\n    if (styl.type === \"ordgroup\") {\n      if (styl.body.length > 0) {\n        var textOrd = assertNodeType(styl.body[0], \"textord\");\n        size = stylArray[Number(textOrd.text)];\n      }\n    } else {\n      styl = assertNodeType(styl, \"textord\");\n      size = stylArray[Number(styl.text)];\n    }\n\n    return {\n      type: \"genfrac\",\n      mode: parser.mode,\n      numer,\n      denom,\n      continued: false,\n      hasBarLine,\n      barSize,\n      leftDelim,\n      rightDelim,\n      size\n    };\n  },\n\n  htmlBuilder: htmlBuilder$4,\n  mathmlBuilder: mathmlBuilder$3\n}); // \\above is an infix fraction that also defines a fraction bar size.\n\ndefineFunction({\n  type: \"infix\",\n  names: [\"\\\\above\"],\n  props: {\n    numArgs: 1,\n    argTypes: [\"size\"],\n    infix: true\n  },\n\n  handler(_ref5, args) {\n    var {\n      parser,\n      funcName,\n      token\n    } = _ref5;\n    return {\n      type: \"infix\",\n      mode: parser.mode,\n      replaceWith: \"\\\\\\\\abovefrac\",\n      size: assertNodeType(args[0], \"size\").value,\n      token\n    };\n  }\n\n});\ndefineFunction({\n  type: \"genfrac\",\n  names: [\"\\\\\\\\abovefrac\"],\n  props: {\n    numArgs: 3,\n    argTypes: [\"math\", \"size\", \"math\"]\n  },\n  handler: (_ref6, args) => {\n    var {\n      parser,\n      funcName\n    } = _ref6;\n    var numer = args[0];\n    var barSize = assert(assertNodeType(args[1], \"infix\").size);\n    var denom = args[2];\n    var hasBarLine = barSize.number > 0;\n    return {\n      type: \"genfrac\",\n      mode: parser.mode,\n      numer,\n      denom,\n      continued: false,\n      hasBarLine,\n      barSize,\n      leftDelim: null,\n      rightDelim: null,\n      size: \"auto\"\n    };\n  },\n  htmlBuilder: htmlBuilder$4,\n  mathmlBuilder: mathmlBuilder$3\n});\n\n// NOTE: Unlike most `htmlBuilder`s, this one handles not only \"horizBrace\", but\n// also \"supsub\" since an over/underbrace can affect super/subscripting.\nvar htmlBuilder$3 = (grp, options) => {\n  var style = options.style; // Pull out the `ParseNode<\"horizBrace\">` if `grp` is a \"supsub\" node.\n\n  var supSubGroup;\n  var group;\n\n  if (grp.type === \"supsub\") {\n    // Ref: LaTeX source2e: }}}}\\limits}\n    // i.e. LaTeX treats the brace similar to an op and passes it\n    // with \\limits, so we need to assign supsub style.\n    supSubGroup = grp.sup ? buildGroup$1(grp.sup, options.havingStyle(style.sup()), options) : buildGroup$1(grp.sub, options.havingStyle(style.sub()), options);\n    group = assertNodeType(grp.base, \"horizBrace\");\n  } else {\n    group = assertNodeType(grp, \"horizBrace\");\n  } // Build the base group\n\n\n  var body = buildGroup$1(group.base, options.havingBaseStyle(Style$1.DISPLAY)); // Create the stretchy element\n\n  var braceBody = stretchy.svgSpan(group, options); // Generate the vlist, with the appropriate kerns        \u250F\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2513\n  // This first vlist contains the content and the brace:   equation\n\n  var vlist;\n\n  if (group.isOver) {\n    vlist = buildCommon.makeVList({\n      positionType: \"firstBaseline\",\n      children: [{\n        type: \"elem\",\n        elem: body\n      }, {\n        type: \"kern\",\n        size: 0.1\n      }, {\n        type: \"elem\",\n        elem: braceBody\n      }]\n    }, options); // $FlowFixMe: Replace this with passing \"svg-align\" into makeVList.\n\n    vlist.children[0].children[0].children[1].classes.push(\"svg-align\");\n  } else {\n    vlist = buildCommon.makeVList({\n      positionType: \"bottom\",\n      positionData: body.depth + 0.1 + braceBody.height,\n      children: [{\n        type: \"elem\",\n        elem: braceBody\n      }, {\n        type: \"kern\",\n        size: 0.1\n      }, {\n        type: \"elem\",\n        elem: body\n      }]\n    }, options); // $FlowFixMe: Replace this with passing \"svg-align\" into makeVList.\n\n    vlist.children[0].children[0].children[0].classes.push(\"svg-align\");\n  }\n\n  if (supSubGroup) {\n    // To write the supsub, wrap the first vlist in another vlist:\n    // They can't all go in the same vlist, because the note might be\n    // wider than the equation. We want the equation to control the\n    // brace width.\n    //      note          long note           long note\n    //   \u250F\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2513   or    \u250F\u2501\u2501\u2501\u2513     not    \u250F\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2513\n    //    equation           eqn                 eqn\n    var vSpan = buildCommon.makeSpan([\"mord\", group.isOver ? \"mover\" : \"munder\"], [vlist], options);\n\n    if (group.isOver) {\n      vlist = buildCommon.makeVList({\n        positionType: \"firstBaseline\",\n        children: [{\n          type: \"elem\",\n          elem: vSpan\n        }, {\n          type: \"kern\",\n          size: 0.2\n        }, {\n          type: \"elem\",\n          elem: supSubGroup\n        }]\n      }, options);\n    } else {\n      vlist = buildCommon.makeVList({\n        positionType: \"bottom\",\n        positionData: vSpan.depth + 0.2 + supSubGroup.height + supSubGroup.depth,\n        children: [{\n          type: \"elem\",\n          elem: supSubGroup\n        }, {\n          type: \"kern\",\n          size: 0.2\n        }, {\n          type: \"elem\",\n          elem: vSpan\n        }]\n      }, options);\n    }\n  }\n\n  return buildCommon.makeSpan([\"mord\", group.isOver ? \"mover\" : \"munder\"], [vlist], options);\n};\n\nvar mathmlBuilder$2 = (group, options) => {\n  var accentNode = stretchy.mathMLnode(group.label);\n  return new mathMLTree.MathNode(group.isOver ? \"mover\" : \"munder\", [buildGroup(group.base, options), accentNode]);\n}; // Horizontal stretchy braces\n\n\ndefineFunction({\n  type: \"horizBrace\",\n  names: [\"\\\\overbrace\", \"\\\\underbrace\"],\n  props: {\n    numArgs: 1\n  },\n\n  handler(_ref, args) {\n    var {\n      parser,\n      funcName\n    } = _ref;\n    return {\n      type: \"horizBrace\",\n      mode: parser.mode,\n      label: funcName,\n      isOver: /^\\\\over/.test(funcName),\n      base: args[0]\n    };\n  },\n\n  htmlBuilder: htmlBuilder$3,\n  mathmlBuilder: mathmlBuilder$2\n});\n\ndefineFunction({\n  type: \"href\",\n  names: [\"\\\\href\"],\n  props: {\n    numArgs: 2,\n    argTypes: [\"url\", \"original\"],\n    allowedInText: true\n  },\n  handler: (_ref, args) => {\n    var {\n      parser\n    } = _ref;\n    var body = args[1];\n    var href = assertNodeType(args[0], \"url\").url;\n\n    if (!parser.settings.isTrusted({\n      command: \"\\\\href\",\n      url: href\n    })) {\n      return parser.formatUnsupportedCmd(\"\\\\href\");\n    }\n\n    return {\n      type: \"href\",\n      mode: parser.mode,\n      href,\n      body: ordargument(body)\n    };\n  },\n  htmlBuilder: (group, options) => {\n    var elements = buildExpression$1(group.body, options, false);\n    return buildCommon.makeAnchor(group.href, [], elements, options);\n  },\n  mathmlBuilder: (group, options) => {\n    var math = buildExpressionRow(group.body, options);\n\n    if (!(math instanceof MathNode)) {\n      math = new MathNode(\"mrow\", [math]);\n    }\n\n    math.setAttribute(\"href\", group.href);\n    return math;\n  }\n});\ndefineFunction({\n  type: \"href\",\n  names: [\"\\\\url\"],\n  props: {\n    numArgs: 1,\n    argTypes: [\"url\"],\n    allowedInText: true\n  },\n  handler: (_ref2, args) => {\n    var {\n      parser\n    } = _ref2;\n    var href = assertNodeType(args[0], \"url\").url;\n\n    if (!parser.settings.isTrusted({\n      command: \"\\\\url\",\n      url: href\n    })) {\n      return parser.formatUnsupportedCmd(\"\\\\url\");\n    }\n\n    var chars = [];\n\n    for (var i = 0; i < href.length; i++) {\n      var c = href[i];\n\n      if (c === \"~\") {\n        c = \"\\\\textasciitilde\";\n      }\n\n      chars.push({\n        type: \"textord\",\n        mode: \"text\",\n        text: c\n      });\n    }\n\n    var body = {\n      type: \"text\",\n      mode: parser.mode,\n      font: \"\\\\texttt\",\n      body: chars\n    };\n    return {\n      type: \"href\",\n      mode: parser.mode,\n      href,\n      body: ordargument(body)\n    };\n  }\n});\n\n// In LaTeX, \\vcenter can act only on a box, as in\n// \\vcenter{\\hbox{$\\frac{a+b}{\\dfrac{c}{d}}$}}\n// This function by itself doesn't do anything but prevent a soft line break.\n\ndefineFunction({\n  type: \"hbox\",\n  names: [\"\\\\hbox\"],\n  props: {\n    numArgs: 1,\n    argTypes: [\"text\"],\n    allowedInText: true,\n    primitive: true\n  },\n\n  handler(_ref, args) {\n    var {\n      parser\n    } = _ref;\n    return {\n      type: \"hbox\",\n      mode: parser.mode,\n      body: ordargument(args[0])\n    };\n  },\n\n  htmlBuilder(group, options) {\n    var elements = buildExpression$1(group.body, options, false);\n    return buildCommon.makeFragment(elements);\n  },\n\n  mathmlBuilder(group, options) {\n    return new mathMLTree.MathNode(\"mrow\", buildExpression(group.body, options));\n  }\n\n});\n\ndefineFunction({\n  type: \"html\",\n  names: [\"\\\\htmlClass\", \"\\\\htmlId\", \"\\\\htmlStyle\", \"\\\\htmlData\"],\n  props: {\n    numArgs: 2,\n    argTypes: [\"raw\", \"original\"],\n    allowedInText: true\n  },\n  handler: (_ref, args) => {\n    var {\n      parser,\n      funcName,\n      token\n    } = _ref;\n    var value = assertNodeType(args[0], \"raw\").string;\n    var body = args[1];\n\n    if (parser.settings.strict) {\n      parser.settings.reportNonstrict(\"htmlExtension\", \"HTML extension is disabled on strict mode\");\n    }\n\n    var trustContext;\n    var attributes = {};\n\n    switch (funcName) {\n      case \"\\\\htmlClass\":\n        attributes.class = value;\n        trustContext = {\n          command: \"\\\\htmlClass\",\n          class: value\n        };\n        break;\n\n      case \"\\\\htmlId\":\n        attributes.id = value;\n        trustContext = {\n          command: \"\\\\htmlId\",\n          id: value\n        };\n        break;\n\n      case \"\\\\htmlStyle\":\n        attributes.style = value;\n        trustContext = {\n          command: \"\\\\htmlStyle\",\n          style: value\n        };\n        break;\n\n      case \"\\\\htmlData\":\n        {\n          var data = value.split(\",\");\n\n          for (var i = 0; i < data.length; i++) {\n            var keyVal = data[i].split(\"=\");\n\n            if (keyVal.length !== 2) {\n              throw new ParseError(\"Error parsing key-value for \\\\htmlData\");\n            }\n\n            attributes[\"data-\" + keyVal[0].trim()] = keyVal[1].trim();\n          }\n\n          trustContext = {\n            command: \"\\\\htmlData\",\n            attributes\n          };\n          break;\n        }\n\n      default:\n        throw new Error(\"Unrecognized html command\");\n    }\n\n    if (!parser.settings.isTrusted(trustContext)) {\n      return parser.formatUnsupportedCmd(funcName);\n    }\n\n    return {\n      type: \"html\",\n      mode: parser.mode,\n      attributes,\n      body: ordargument(body)\n    };\n  },\n  htmlBuilder: (group, options) => {\n    var elements = buildExpression$1(group.body, options, false);\n    var classes = [\"enclosing\"];\n\n    if (group.attributes.class) {\n      classes.push(...group.attributes.class.trim().split(/\\s+/));\n    }\n\n    var span = buildCommon.makeSpan(classes, elements, options);\n\n    for (var attr in group.attributes) {\n      if (attr !== \"class\" && group.attributes.hasOwnProperty(attr)) {\n        span.setAttribute(attr, group.attributes[attr]);\n      }\n    }\n\n    return span;\n  },\n  mathmlBuilder: (group, options) => {\n    return buildExpressionRow(group.body, options);\n  }\n});\n\ndefineFunction({\n  type: \"htmlmathml\",\n  names: [\"\\\\html@mathml\"],\n  props: {\n    numArgs: 2,\n    allowedInText: true\n  },\n  handler: (_ref, args) => {\n    var {\n      parser\n    } = _ref;\n    return {\n      type: \"htmlmathml\",\n      mode: parser.mode,\n      html: ordargument(args[0]),\n      mathml: ordargument(args[1])\n    };\n  },\n  htmlBuilder: (group, options) => {\n    var elements = buildExpression$1(group.html, options, false);\n    return buildCommon.makeFragment(elements);\n  },\n  mathmlBuilder: (group, options) => {\n    return buildExpressionRow(group.mathml, options);\n  }\n});\n\nvar sizeData = function sizeData(str) {\n  if (/^[-+]? *(\\d+(\\.\\d*)?|\\.\\d+)$/.test(str)) {\n    // str is a number with no unit specified.\n    // default unit is bp, per graphix package.\n    return {\n      number: +str,\n      unit: \"bp\"\n    };\n  } else {\n    var match = /([-+]?) *(\\d+(?:\\.\\d*)?|\\.\\d+) *([a-z]{2})/.exec(str);\n\n    if (!match) {\n      throw new ParseError(\"Invalid size: '\" + str + \"' in \\\\includegraphics\");\n    }\n\n    var data = {\n      number: +(match[1] + match[2]),\n      // sign + magnitude, cast to number\n      unit: match[3]\n    };\n\n    if (!validUnit(data)) {\n      throw new ParseError(\"Invalid unit: '\" + data.unit + \"' in \\\\includegraphics.\");\n    }\n\n    return data;\n  }\n};\n\ndefineFunction({\n  type: \"includegraphics\",\n  names: [\"\\\\includegraphics\"],\n  props: {\n    numArgs: 1,\n    numOptionalArgs: 1,\n    argTypes: [\"raw\", \"url\"],\n    allowedInText: false\n  },\n  handler: (_ref, args, optArgs) => {\n    var {\n      parser\n    } = _ref;\n    var width = {\n      number: 0,\n      unit: \"em\"\n    };\n    var height = {\n      number: 0.9,\n      unit: \"em\"\n    }; // sorta character sized.\n\n    var totalheight = {\n      number: 0,\n      unit: \"em\"\n    };\n    var alt = \"\";\n\n    if (optArgs[0]) {\n      var attributeStr = assertNodeType(optArgs[0], \"raw\").string; // Parser.js does not parse key/value pairs. We get a string.\n\n      var attributes = attributeStr.split(\",\");\n\n      for (var i = 0; i < attributes.length; i++) {\n        var keyVal = attributes[i].split(\"=\");\n\n        if (keyVal.length === 2) {\n          var str = keyVal[1].trim();\n\n          switch (keyVal[0].trim()) {\n            case \"alt\":\n              alt = str;\n              break;\n\n            case \"width\":\n              width = sizeData(str);\n              break;\n\n            case \"height\":\n              height = sizeData(str);\n              break;\n\n            case \"totalheight\":\n              totalheight = sizeData(str);\n              break;\n\n            default:\n              throw new ParseError(\"Invalid key: '\" + keyVal[0] + \"' in \\\\includegraphics.\");\n          }\n        }\n      }\n    }\n\n    var src = assertNodeType(args[0], \"url\").url;\n\n    if (alt === \"\") {\n      // No alt given. Use the file name. Strip away the path.\n      alt = src;\n      alt = alt.replace(/^.*[\\\\/]/, '');\n      alt = alt.substring(0, alt.lastIndexOf('.'));\n    }\n\n    if (!parser.settings.isTrusted({\n      command: \"\\\\includegraphics\",\n      url: src\n    })) {\n      return parser.formatUnsupportedCmd(\"\\\\includegraphics\");\n    }\n\n    return {\n      type: \"includegraphics\",\n      mode: parser.mode,\n      alt: alt,\n      width: width,\n      height: height,\n      totalheight: totalheight,\n      src: src\n    };\n  },\n  htmlBuilder: (group, options) => {\n    var height = calculateSize(group.height, options);\n    var depth = 0;\n\n    if (group.totalheight.number > 0) {\n      depth = calculateSize(group.totalheight, options) - height;\n    }\n\n    var width = 0;\n\n    if (group.width.number > 0) {\n      width = calculateSize(group.width, options);\n    }\n\n    var style = {\n      height: makeEm(height + depth)\n    };\n\n    if (width > 0) {\n      style.width = makeEm(width);\n    }\n\n    if (depth > 0) {\n      style.verticalAlign = makeEm(-depth);\n    }\n\n    var node = new Img(group.src, group.alt, style);\n    node.height = height;\n    node.depth = depth;\n    return node;\n  },\n  mathmlBuilder: (group, options) => {\n    var node = new mathMLTree.MathNode(\"mglyph\", []);\n    node.setAttribute(\"alt\", group.alt);\n    var height = calculateSize(group.height, options);\n    var depth = 0;\n\n    if (group.totalheight.number > 0) {\n      depth = calculateSize(group.totalheight, options) - height;\n      node.setAttribute(\"valign\", makeEm(-depth));\n    }\n\n    node.setAttribute(\"height\", makeEm(height + depth));\n\n    if (group.width.number > 0) {\n      var width = calculateSize(group.width, options);\n      node.setAttribute(\"width\", makeEm(width));\n    }\n\n    node.setAttribute(\"src\", group.src);\n    return node;\n  }\n});\n\n// Horizontal spacing commands\n\ndefineFunction({\n  type: \"kern\",\n  names: [\"\\\\kern\", \"\\\\mkern\", \"\\\\hskip\", \"\\\\mskip\"],\n  props: {\n    numArgs: 1,\n    argTypes: [\"size\"],\n    primitive: true,\n    allowedInText: true\n  },\n\n  handler(_ref, args) {\n    var {\n      parser,\n      funcName\n    } = _ref;\n    var size = assertNodeType(args[0], \"size\");\n\n    if (parser.settings.strict) {\n      var mathFunction = funcName[1] === 'm'; // \\mkern, \\mskip\n\n      var muUnit = size.value.unit === 'mu';\n\n      if (mathFunction) {\n        if (!muUnit) {\n          parser.settings.reportNonstrict(\"mathVsTextUnits\", \"LaTeX's \" + funcName + \" supports only mu units, \" + (\"not \" + size.value.unit + \" units\"));\n        }\n\n        if (parser.mode !== \"math\") {\n          parser.settings.reportNonstrict(\"mathVsTextUnits\", \"LaTeX's \" + funcName + \" works only in math mode\");\n        }\n      } else {\n        // !mathFunction\n        if (muUnit) {\n          parser.settings.reportNonstrict(\"mathVsTextUnits\", \"LaTeX's \" + funcName + \" doesn't support mu units\");\n        }\n      }\n    }\n\n    return {\n      type: \"kern\",\n      mode: parser.mode,\n      dimension: size.value\n    };\n  },\n\n  htmlBuilder(group, options) {\n    return buildCommon.makeGlue(group.dimension, options);\n  },\n\n  mathmlBuilder(group, options) {\n    var dimension = calculateSize(group.dimension, options);\n    return new mathMLTree.SpaceNode(dimension);\n  }\n\n});\n\n// Horizontal overlap functions\ndefineFunction({\n  type: \"lap\",\n  names: [\"\\\\mathllap\", \"\\\\mathrlap\", \"\\\\mathclap\"],\n  props: {\n    numArgs: 1,\n    allowedInText: true\n  },\n  handler: (_ref, args) => {\n    var {\n      parser,\n      funcName\n    } = _ref;\n    var body = args[0];\n    return {\n      type: \"lap\",\n      mode: parser.mode,\n      alignment: funcName.slice(5),\n      body\n    };\n  },\n  htmlBuilder: (group, options) => {\n    // mathllap, mathrlap, mathclap\n    var inner;\n\n    if (group.alignment === \"clap\") {\n      // ref: https://www.math.lsu.edu/~aperlis/publications/mathclap/\n      inner = buildCommon.makeSpan([], [buildGroup$1(group.body, options)]); // wrap, since CSS will center a .clap > .inner > span\n\n      inner = buildCommon.makeSpan([\"inner\"], [inner], options);\n    } else {\n      inner = buildCommon.makeSpan([\"inner\"], [buildGroup$1(group.body, options)]);\n    }\n\n    var fix = buildCommon.makeSpan([\"fix\"], []);\n    var node = buildCommon.makeSpan([group.alignment], [inner, fix], options); // At this point, we have correctly set horizontal alignment of the\n    // two items involved in the lap.\n    // Next, use a strut to set the height of the HTML bounding box.\n    // Otherwise, a tall argument may be misplaced.\n    // This code resolved issue #1153\n\n    var strut = buildCommon.makeSpan([\"strut\"]);\n    strut.style.height = makeEm(node.height + node.depth);\n\n    if (node.depth) {\n      strut.style.verticalAlign = makeEm(-node.depth);\n    }\n\n    node.children.unshift(strut); // Next, prevent vertical misplacement when next to something tall.\n    // This code resolves issue #1234\n\n    node = buildCommon.makeSpan([\"thinbox\"], [node], options);\n    return buildCommon.makeSpan([\"mord\", \"vbox\"], [node], options);\n  },\n  mathmlBuilder: (group, options) => {\n    // mathllap, mathrlap, mathclap\n    var node = new mathMLTree.MathNode(\"mpadded\", [buildGroup(group.body, options)]);\n\n    if (group.alignment !== \"rlap\") {\n      var offset = group.alignment === \"llap\" ? \"-1\" : \"-0.5\";\n      node.setAttribute(\"lspace\", offset + \"width\");\n    }\n\n    node.setAttribute(\"width\", \"0px\");\n    return node;\n  }\n});\n\ndefineFunction({\n  type: \"styling\",\n  names: [\"\\\\(\", \"$\"],\n  props: {\n    numArgs: 0,\n    allowedInText: true,\n    allowedInMath: false\n  },\n\n  handler(_ref, args) {\n    var {\n      funcName,\n      parser\n    } = _ref;\n    var outerMode = parser.mode;\n    parser.switchMode(\"math\");\n    var close = funcName === \"\\\\(\" ? \"\\\\)\" : \"$\";\n    var body = parser.parseExpression(false, close);\n    parser.expect(close);\n    parser.switchMode(outerMode);\n    return {\n      type: \"styling\",\n      mode: parser.mode,\n      style: \"text\",\n      body\n    };\n  }\n\n}); // Check for extra closing math delimiters\n\ndefineFunction({\n  type: \"text\",\n  // Doesn't matter what this is.\n  names: [\"\\\\)\", \"\\\\]\"],\n  props: {\n    numArgs: 0,\n    allowedInText: true,\n    allowedInMath: false\n  },\n\n  handler(context, args) {\n    throw new ParseError(\"Mismatched \" + context.funcName);\n  }\n\n});\n\nvar chooseMathStyle = (group, options) => {\n  switch (options.style.size) {\n    case Style$1.DISPLAY.size:\n      return group.display;\n\n    case Style$1.TEXT.size:\n      return group.text;\n\n    case Style$1.SCRIPT.size:\n      return group.script;\n\n    case Style$1.SCRIPTSCRIPT.size:\n      return group.scriptscript;\n\n    default:\n      return group.text;\n  }\n};\n\ndefineFunction({\n  type: \"mathchoice\",\n  names: [\"\\\\mathchoice\"],\n  props: {\n    numArgs: 4,\n    primitive: true\n  },\n  handler: (_ref, args) => {\n    var {\n      parser\n    } = _ref;\n    return {\n      type: \"mathchoice\",\n      mode: parser.mode,\n      display: ordargument(args[0]),\n      text: ordargument(args[1]),\n      script: ordargument(args[2]),\n      scriptscript: ordargument(args[3])\n    };\n  },\n  htmlBuilder: (group, options) => {\n    var body = chooseMathStyle(group, options);\n    var elements = buildExpression$1(body, options, false);\n    return buildCommon.makeFragment(elements);\n  },\n  mathmlBuilder: (group, options) => {\n    var body = chooseMathStyle(group, options);\n    return buildExpressionRow(body, options);\n  }\n});\n\nvar assembleSupSub = (base, supGroup, subGroup, options, style, slant, baseShift) => {\n  base = buildCommon.makeSpan([], [base]);\n  var subIsSingleCharacter = subGroup && utils.isCharacterBox(subGroup);\n  var sub;\n  var sup; // We manually have to handle the superscripts and subscripts. This,\n  // aside from the kern calculations, is copied from supsub.\n\n  if (supGroup) {\n    var elem = buildGroup$1(supGroup, options.havingStyle(style.sup()), options);\n    sup = {\n      elem,\n      kern: Math.max(options.fontMetrics().bigOpSpacing1, options.fontMetrics().bigOpSpacing3 - elem.depth)\n    };\n  }\n\n  if (subGroup) {\n    var _elem = buildGroup$1(subGroup, options.havingStyle(style.sub()), options);\n\n    sub = {\n      elem: _elem,\n      kern: Math.max(options.fontMetrics().bigOpSpacing2, options.fontMetrics().bigOpSpacing4 - _elem.height)\n    };\n  } // Build the final group as a vlist of the possible subscript, base,\n  // and possible superscript.\n\n\n  var finalGroup;\n\n  if (sup && sub) {\n    var bottom = options.fontMetrics().bigOpSpacing5 + sub.elem.height + sub.elem.depth + sub.kern + base.depth + baseShift;\n    finalGroup = buildCommon.makeVList({\n      positionType: \"bottom\",\n      positionData: bottom,\n      children: [{\n        type: \"kern\",\n        size: options.fontMetrics().bigOpSpacing5\n      }, {\n        type: \"elem\",\n        elem: sub.elem,\n        marginLeft: makeEm(-slant)\n      }, {\n        type: \"kern\",\n        size: sub.kern\n      }, {\n        type: \"elem\",\n        elem: base\n      }, {\n        type: \"kern\",\n        size: sup.kern\n      }, {\n        type: \"elem\",\n        elem: sup.elem,\n        marginLeft: makeEm(slant)\n      }, {\n        type: \"kern\",\n        size: options.fontMetrics().bigOpSpacing5\n      }]\n    }, options);\n  } else if (sub) {\n    var top = base.height - baseShift; // Shift the limits by the slant of the symbol. Note\n    // that we are supposed to shift the limits by 1/2 of the slant,\n    // but since we are centering the limits adding a full slant of\n    // margin will shift by 1/2 that.\n\n    finalGroup = buildCommon.makeVList({\n      positionType: \"top\",\n      positionData: top,\n      children: [{\n        type: \"kern\",\n        size: options.fontMetrics().bigOpSpacing5\n      }, {\n        type: \"elem\",\n        elem: sub.elem,\n        marginLeft: makeEm(-slant)\n      }, {\n        type: \"kern\",\n        size: sub.kern\n      }, {\n        type: \"elem\",\n        elem: base\n      }]\n    }, options);\n  } else if (sup) {\n    var _bottom = base.depth + baseShift;\n\n    finalGroup = buildCommon.makeVList({\n      positionType: \"bottom\",\n      positionData: _bottom,\n      children: [{\n        type: \"elem\",\n        elem: base\n      }, {\n        type: \"kern\",\n        size: sup.kern\n      }, {\n        type: \"elem\",\n        elem: sup.elem,\n        marginLeft: makeEm(slant)\n      }, {\n        type: \"kern\",\n        size: options.fontMetrics().bigOpSpacing5\n      }]\n    }, options);\n  } else {\n    // This case probably shouldn't occur (this would mean the\n    // supsub was sending us a group with no superscript or\n    // subscript) but be safe.\n    return base;\n  }\n\n  var parts = [finalGroup];\n\n  if (sub && slant !== 0 && !subIsSingleCharacter) {\n    // A negative margin-left was applied to the lower limit.\n    // Avoid an overlap by placing a spacer on the left on the group.\n    var spacer = buildCommon.makeSpan([\"mspace\"], [], options);\n    spacer.style.marginRight = makeEm(slant);\n    parts.unshift(spacer);\n  }\n\n  return buildCommon.makeSpan([\"mop\", \"op-limits\"], parts, options);\n};\n\n// Limits, symbols\n// Most operators have a large successor symbol, but these don't.\nvar noSuccessor = [\"\\\\smallint\"]; // NOTE: Unlike most `htmlBuilder`s, this one handles not only \"op\", but also\n// \"supsub\" since some of them (like \\int) can affect super/subscripting.\n\nvar htmlBuilder$2 = (grp, options) => {\n  // Operators are handled in the TeXbook pg. 443-444, rule 13(a).\n  var supGroup;\n  var subGroup;\n  var hasLimits = false;\n  var group;\n\n  if (grp.type === \"supsub\") {\n    // If we have limits, supsub will pass us its group to handle. Pull\n    // out the superscript and subscript and set the group to the op in\n    // its base.\n    supGroup = grp.sup;\n    subGroup = grp.sub;\n    group = assertNodeType(grp.base, \"op\");\n    hasLimits = true;\n  } else {\n    group = assertNodeType(grp, \"op\");\n  }\n\n  var style = options.style;\n  var large = false;\n\n  if (style.size === Style$1.DISPLAY.size && group.symbol && !utils.contains(noSuccessor, group.name)) {\n    // Most symbol operators get larger in displaystyle (rule 13)\n    large = true;\n  }\n\n  var base;\n\n  if (group.symbol) {\n    // If this is a symbol, create the symbol.\n    var fontName = large ? \"Size2-Regular\" : \"Size1-Regular\";\n    var stash = \"\";\n\n    if (group.name === \"\\\\oiint\" || group.name === \"\\\\oiiint\") {\n      // No font glyphs yet, so use a glyph w/o the oval.\n      // TODO: When font glyphs are available, delete this code.\n      stash = group.name.slice(1);\n      group.name = stash === \"oiint\" ? \"\\\\iint\" : \"\\\\iiint\";\n    }\n\n    base = buildCommon.makeSymbol(group.name, fontName, \"math\", options, [\"mop\", \"op-symbol\", large ? \"large-op\" : \"small-op\"]);\n\n    if (stash.length > 0) {\n      // We're in \\oiint or \\oiiint. Overlay the oval.\n      // TODO: When font glyphs are available, delete this code.\n      var italic = base.italic;\n      var oval = buildCommon.staticSvg(stash + \"Size\" + (large ? \"2\" : \"1\"), options);\n      base = buildCommon.makeVList({\n        positionType: \"individualShift\",\n        children: [{\n          type: \"elem\",\n          elem: base,\n          shift: 0\n        }, {\n          type: \"elem\",\n          elem: oval,\n          shift: large ? 0.08 : 0\n        }]\n      }, options);\n      group.name = \"\\\\\" + stash;\n      base.classes.unshift(\"mop\"); // $FlowFixMe\n\n      base.italic = italic;\n    }\n  } else if (group.body) {\n    // If this is a list, compose that list.\n    var inner = buildExpression$1(group.body, options, true);\n\n    if (inner.length === 1 && inner[0] instanceof SymbolNode) {\n      base = inner[0];\n      base.classes[0] = \"mop\"; // replace old mclass\n    } else {\n      base = buildCommon.makeSpan([\"mop\"], inner, options);\n    }\n  } else {\n    // Otherwise, this is a text operator. Build the text from the\n    // operator's name.\n    var output = [];\n\n    for (var i = 1; i < group.name.length; i++) {\n      output.push(buildCommon.mathsym(group.name[i], group.mode, options));\n    }\n\n    base = buildCommon.makeSpan([\"mop\"], output, options);\n  } // If content of op is a single symbol, shift it vertically.\n\n\n  var baseShift = 0;\n  var slant = 0;\n\n  if ((base instanceof SymbolNode || group.name === \"\\\\oiint\" || group.name === \"\\\\oiiint\") && !group.suppressBaseShift) {\n    // We suppress the shift of the base of \\overset and \\underset. Otherwise,\n    // shift the symbol so its center lies on the axis (rule 13). It\n    // appears that our fonts have the centers of the symbols already\n    // almost on the axis, so these numbers are very small. Note we\n    // don't actually apply this here, but instead it is used either in\n    // the vlist creation or separately when there are no limits.\n    baseShift = (base.height - base.depth) / 2 - options.fontMetrics().axisHeight; // The slant of the symbol is just its italic correction.\n    // $FlowFixMe\n\n    slant = base.italic;\n  }\n\n  if (hasLimits) {\n    return assembleSupSub(base, supGroup, subGroup, options, style, slant, baseShift);\n  } else {\n    if (baseShift) {\n      base.style.position = \"relative\";\n      base.style.top = makeEm(baseShift);\n    }\n\n    return base;\n  }\n};\n\nvar mathmlBuilder$1 = (group, options) => {\n  var node;\n\n  if (group.symbol) {\n    // This is a symbol. Just add the symbol.\n    node = new MathNode(\"mo\", [makeText(group.name, group.mode)]);\n\n    if (utils.contains(noSuccessor, group.name)) {\n      node.setAttribute(\"largeop\", \"false\");\n    }\n  } else if (group.body) {\n    // This is an operator with children. Add them.\n    node = new MathNode(\"mo\", buildExpression(group.body, options));\n  } else {\n    // This is a text operator. Add all of the characters from the\n    // operator's name.\n    node = new MathNode(\"mi\", [new TextNode(group.name.slice(1))]); // Append an <mo>&ApplyFunction;</mo>.\n    // ref: https://www.w3.org/TR/REC-MathML/chap3_2.html#sec3.2.4\n\n    var operator = new MathNode(\"mo\", [makeText(\"\\u2061\", \"text\")]);\n\n    if (group.parentIsSupSub) {\n      node = new MathNode(\"mrow\", [node, operator]);\n    } else {\n      node = newDocumentFragment([node, operator]);\n    }\n  }\n\n  return node;\n};\n\nvar singleCharBigOps = {\n  \"\\u220F\": \"\\\\prod\",\n  \"\\u2210\": \"\\\\coprod\",\n  \"\\u2211\": \"\\\\sum\",\n  \"\\u22c0\": \"\\\\bigwedge\",\n  \"\\u22c1\": \"\\\\bigvee\",\n  \"\\u22c2\": \"\\\\bigcap\",\n  \"\\u22c3\": \"\\\\bigcup\",\n  \"\\u2a00\": \"\\\\bigodot\",\n  \"\\u2a01\": \"\\\\bigoplus\",\n  \"\\u2a02\": \"\\\\bigotimes\",\n  \"\\u2a04\": \"\\\\biguplus\",\n  \"\\u2a06\": \"\\\\bigsqcup\"\n};\ndefineFunction({\n  type: \"op\",\n  names: [\"\\\\coprod\", \"\\\\bigvee\", \"\\\\bigwedge\", \"\\\\biguplus\", \"\\\\bigcap\", \"\\\\bigcup\", \"\\\\intop\", \"\\\\prod\", \"\\\\sum\", \"\\\\bigotimes\", \"\\\\bigoplus\", \"\\\\bigodot\", \"\\\\bigsqcup\", \"\\\\smallint\", \"\\u220F\", \"\\u2210\", \"\\u2211\", \"\\u22c0\", \"\\u22c1\", \"\\u22c2\", \"\\u22c3\", \"\\u2a00\", \"\\u2a01\", \"\\u2a02\", \"\\u2a04\", \"\\u2a06\"],\n  props: {\n    numArgs: 0\n  },\n  handler: (_ref, args) => {\n    var {\n      parser,\n      funcName\n    } = _ref;\n    var fName = funcName;\n\n    if (fName.length === 1) {\n      fName = singleCharBigOps[fName];\n    }\n\n    return {\n      type: \"op\",\n      mode: parser.mode,\n      limits: true,\n      parentIsSupSub: false,\n      symbol: true,\n      name: fName\n    };\n  },\n  htmlBuilder: htmlBuilder$2,\n  mathmlBuilder: mathmlBuilder$1\n}); // Note: calling defineFunction with a type that's already been defined only\n// works because the same htmlBuilder and mathmlBuilder are being used.\n\ndefineFunction({\n  type: \"op\",\n  names: [\"\\\\mathop\"],\n  props: {\n    numArgs: 1,\n    primitive: true\n  },\n  handler: (_ref2, args) => {\n    var {\n      parser\n    } = _ref2;\n    var body = args[0];\n    return {\n      type: \"op\",\n      mode: parser.mode,\n      limits: false,\n      parentIsSupSub: false,\n      symbol: false,\n      body: ordargument(body)\n    };\n  },\n  htmlBuilder: htmlBuilder$2,\n  mathmlBuilder: mathmlBuilder$1\n}); // There are 2 flags for operators; whether they produce limits in\n// displaystyle, and whether they are symbols and should grow in\n// displaystyle. These four groups cover the four possible choices.\n\nvar singleCharIntegrals = {\n  \"\\u222b\": \"\\\\int\",\n  \"\\u222c\": \"\\\\iint\",\n  \"\\u222d\": \"\\\\iiint\",\n  \"\\u222e\": \"\\\\oint\",\n  \"\\u222f\": \"\\\\oiint\",\n  \"\\u2230\": \"\\\\oiiint\"\n}; // No limits, not symbols\n\ndefineFunction({\n  type: \"op\",\n  names: [\"\\\\arcsin\", \"\\\\arccos\", \"\\\\arctan\", \"\\\\arctg\", \"\\\\arcctg\", \"\\\\arg\", \"\\\\ch\", \"\\\\cos\", \"\\\\cosec\", \"\\\\cosh\", \"\\\\cot\", \"\\\\cotg\", \"\\\\coth\", \"\\\\csc\", \"\\\\ctg\", \"\\\\cth\", \"\\\\deg\", \"\\\\dim\", \"\\\\exp\", \"\\\\hom\", \"\\\\ker\", \"\\\\lg\", \"\\\\ln\", \"\\\\log\", \"\\\\sec\", \"\\\\sin\", \"\\\\sinh\", \"\\\\sh\", \"\\\\tan\", \"\\\\tanh\", \"\\\\tg\", \"\\\\th\"],\n  props: {\n    numArgs: 0\n  },\n\n  handler(_ref3) {\n    var {\n      parser,\n      funcName\n    } = _ref3;\n    return {\n      type: \"op\",\n      mode: parser.mode,\n      limits: false,\n      parentIsSupSub: false,\n      symbol: false,\n      name: funcName\n    };\n  },\n\n  htmlBuilder: htmlBuilder$2,\n  mathmlBuilder: mathmlBuilder$1\n}); // Limits, not symbols\n\ndefineFunction({\n  type: \"op\",\n  names: [\"\\\\det\", \"\\\\gcd\", \"\\\\inf\", \"\\\\lim\", \"\\\\max\", \"\\\\min\", \"\\\\Pr\", \"\\\\sup\"],\n  props: {\n    numArgs: 0\n  },\n\n  handler(_ref4) {\n    var {\n      parser,\n      funcName\n    } = _ref4;\n    return {\n      type: \"op\",\n      mode: parser.mode,\n      limits: true,\n      parentIsSupSub: false,\n      symbol: false,\n      name: funcName\n    };\n  },\n\n  htmlBuilder: htmlBuilder$2,\n  mathmlBuilder: mathmlBuilder$1\n}); // No limits, symbols\n\ndefineFunction({\n  type: \"op\",\n  names: [\"\\\\int\", \"\\\\iint\", \"\\\\iiint\", \"\\\\oint\", \"\\\\oiint\", \"\\\\oiiint\", \"\\u222b\", \"\\u222c\", \"\\u222d\", \"\\u222e\", \"\\u222f\", \"\\u2230\"],\n  props: {\n    numArgs: 0\n  },\n\n  handler(_ref5) {\n    var {\n      parser,\n      funcName\n    } = _ref5;\n    var fName = funcName;\n\n    if (fName.length === 1) {\n      fName = singleCharIntegrals[fName];\n    }\n\n    return {\n      type: \"op\",\n      mode: parser.mode,\n      limits: false,\n      parentIsSupSub: false,\n      symbol: true,\n      name: fName\n    };\n  },\n\n  htmlBuilder: htmlBuilder$2,\n  mathmlBuilder: mathmlBuilder$1\n});\n\n// NOTE: Unlike most `htmlBuilder`s, this one handles not only\n// \"operatorname\", but also  \"supsub\" since \\operatorname* can\n// affect super/subscripting.\nvar htmlBuilder$1 = (grp, options) => {\n  // Operators are handled in the TeXbook pg. 443-444, rule 13(a).\n  var supGroup;\n  var subGroup;\n  var hasLimits = false;\n  var group;\n\n  if (grp.type === \"supsub\") {\n    // If we have limits, supsub will pass us its group to handle. Pull\n    // out the superscript and subscript and set the group to the op in\n    // its base.\n    supGroup = grp.sup;\n    subGroup = grp.sub;\n    group = assertNodeType(grp.base, \"operatorname\");\n    hasLimits = true;\n  } else {\n    group = assertNodeType(grp, \"operatorname\");\n  }\n\n  var base;\n\n  if (group.body.length > 0) {\n    var body = group.body.map(child => {\n      // $FlowFixMe: Check if the node has a string `text` property.\n      var childText = child.text;\n\n      if (typeof childText === \"string\") {\n        return {\n          type: \"textord\",\n          mode: child.mode,\n          text: childText\n        };\n      } else {\n        return child;\n      }\n    }); // Consolidate function names into symbol characters.\n\n    var expression = buildExpression$1(body, options.withFont(\"mathrm\"), true);\n\n    for (var i = 0; i < expression.length; i++) {\n      var child = expression[i];\n\n      if (child instanceof SymbolNode) {\n        // Per amsopn package,\n        // change minus to hyphen and \\ast to asterisk\n        child.text = child.text.replace(/\\u2212/, \"-\").replace(/\\u2217/, \"*\");\n      }\n    }\n\n    base = buildCommon.makeSpan([\"mop\"], expression, options);\n  } else {\n    base = buildCommon.makeSpan([\"mop\"], [], options);\n  }\n\n  if (hasLimits) {\n    return assembleSupSub(base, supGroup, subGroup, options, options.style, 0, 0);\n  } else {\n    return base;\n  }\n};\n\nvar mathmlBuilder = (group, options) => {\n  // The steps taken here are similar to the html version.\n  var expression = buildExpression(group.body, options.withFont(\"mathrm\")); // Is expression a string or has it something like a fraction?\n\n  var isAllString = true; // default\n\n  for (var i = 0; i < expression.length; i++) {\n    var node = expression[i];\n\n    if (node instanceof mathMLTree.SpaceNode) ; else if (node instanceof mathMLTree.MathNode) {\n      switch (node.type) {\n        case \"mi\":\n        case \"mn\":\n        case \"ms\":\n        case \"mspace\":\n        case \"mtext\":\n          break;\n        // Do nothing yet.\n\n        case \"mo\":\n          {\n            var child = node.children[0];\n\n            if (node.children.length === 1 && child instanceof mathMLTree.TextNode) {\n              child.text = child.text.replace(/\\u2212/, \"-\").replace(/\\u2217/, \"*\");\n            } else {\n              isAllString = false;\n            }\n\n            break;\n          }\n\n        default:\n          isAllString = false;\n      }\n    } else {\n      isAllString = false;\n    }\n  }\n\n  if (isAllString) {\n    // Write a single TextNode instead of multiple nested tags.\n    var word = expression.map(node => node.toText()).join(\"\");\n    expression = [new mathMLTree.TextNode(word)];\n  }\n\n  var identifier = new mathMLTree.MathNode(\"mi\", expression);\n  identifier.setAttribute(\"mathvariant\", \"normal\"); // \\u2061 is the same as &ApplyFunction;\n  // ref: https://www.w3schools.com/charsets/ref_html_entities_a.asp\n\n  var operator = new mathMLTree.MathNode(\"mo\", [makeText(\"\\u2061\", \"text\")]);\n\n  if (group.parentIsSupSub) {\n    return new mathMLTree.MathNode(\"mrow\", [identifier, operator]);\n  } else {\n    return mathMLTree.newDocumentFragment([identifier, operator]);\n  }\n}; // \\operatorname\n// amsopn.dtx: \\mathop{#1\\kern\\z@\\operator@font#3}\\newmcodes@\n\n\ndefineFunction({\n  type: \"operatorname\",\n  names: [\"\\\\operatorname@\", \"\\\\operatornamewithlimits\"],\n  props: {\n    numArgs: 1\n  },\n  handler: (_ref, args) => {\n    var {\n      parser,\n      funcName\n    } = _ref;\n    var body = args[0];\n    return {\n      type: \"operatorname\",\n      mode: parser.mode,\n      body: ordargument(body),\n      alwaysHandleSupSub: funcName === \"\\\\operatornamewithlimits\",\n      limits: false,\n      parentIsSupSub: false\n    };\n  },\n  htmlBuilder: htmlBuilder$1,\n  mathmlBuilder\n});\ndefineMacro(\"\\\\operatorname\", \"\\\\@ifstar\\\\operatornamewithlimits\\\\operatorname@\");\n\ndefineFunctionBuilders({\n  type: \"ordgroup\",\n\n  htmlBuilder(group, options) {\n    if (group.semisimple) {\n      return buildCommon.makeFragment(buildExpression$1(group.body, options, false));\n    }\n\n    return buildCommon.makeSpan([\"mord\"], buildExpression$1(group.body, options, true), options);\n  },\n\n  mathmlBuilder(group, options) {\n    return buildExpressionRow(group.body, options, true);\n  }\n\n});\n\ndefineFunction({\n  type: \"overline\",\n  names: [\"\\\\overline\"],\n  props: {\n    numArgs: 1\n  },\n\n  handler(_ref, args) {\n    var {\n      parser\n    } = _ref;\n    var body = args[0];\n    return {\n      type: \"overline\",\n      mode: parser.mode,\n      body\n    };\n  },\n\n  htmlBuilder(group, options) {\n    // Overlines are handled in the TeXbook pg 443, Rule 9.\n    // Build the inner group in the cramped style.\n    var innerGroup = buildGroup$1(group.body, options.havingCrampedStyle()); // Create the line above the body\n\n    var line = buildCommon.makeLineSpan(\"overline-line\", options); // Generate the vlist, with the appropriate kerns\n\n    var defaultRuleThickness = options.fontMetrics().defaultRuleThickness;\n    var vlist = buildCommon.makeVList({\n      positionType: \"firstBaseline\",\n      children: [{\n        type: \"elem\",\n        elem: innerGroup\n      }, {\n        type: \"kern\",\n        size: 3 * defaultRuleThickness\n      }, {\n        type: \"elem\",\n        elem: line\n      }, {\n        type: \"kern\",\n        size: defaultRuleThickness\n      }]\n    }, options);\n    return buildCommon.makeSpan([\"mord\", \"overline\"], [vlist], options);\n  },\n\n  mathmlBuilder(group, options) {\n    var operator = new mathMLTree.MathNode(\"mo\", [new mathMLTree.TextNode(\"\\u203e\")]);\n    operator.setAttribute(\"stretchy\", \"true\");\n    var node = new mathMLTree.MathNode(\"mover\", [buildGroup(group.body, options), operator]);\n    node.setAttribute(\"accent\", \"true\");\n    return node;\n  }\n\n});\n\ndefineFunction({\n  type: \"phantom\",\n  names: [\"\\\\phantom\"],\n  props: {\n    numArgs: 1,\n    allowedInText: true\n  },\n  handler: (_ref, args) => {\n    var {\n      parser\n    } = _ref;\n    var body = args[0];\n    return {\n      type: \"phantom\",\n      mode: parser.mode,\n      body: ordargument(body)\n    };\n  },\n  htmlBuilder: (group, options) => {\n    var elements = buildExpression$1(group.body, options.withPhantom(), false); // \\phantom isn't supposed to affect the elements it contains.\n    // See \"color\" for more details.\n\n    return buildCommon.makeFragment(elements);\n  },\n  mathmlBuilder: (group, options) => {\n    var inner = buildExpression(group.body, options);\n    return new mathMLTree.MathNode(\"mphantom\", inner);\n  }\n});\ndefineFunction({\n  type: \"hphantom\",\n  names: [\"\\\\hphantom\"],\n  props: {\n    numArgs: 1,\n    allowedInText: true\n  },\n  handler: (_ref2, args) => {\n    var {\n      parser\n    } = _ref2;\n    var body = args[0];\n    return {\n      type: \"hphantom\",\n      mode: parser.mode,\n      body\n    };\n  },\n  htmlBuilder: (group, options) => {\n    var node = buildCommon.makeSpan([], [buildGroup$1(group.body, options.withPhantom())]);\n    node.height = 0;\n    node.depth = 0;\n\n    if (node.children) {\n      for (var i = 0; i < node.children.length; i++) {\n        node.children[i].height = 0;\n        node.children[i].depth = 0;\n      }\n    } // See smash for comment re: use of makeVList\n\n\n    node = buildCommon.makeVList({\n      positionType: \"firstBaseline\",\n      children: [{\n        type: \"elem\",\n        elem: node\n      }]\n    }, options); // For spacing, TeX treats \\smash as a math group (same spacing as ord).\n\n    return buildCommon.makeSpan([\"mord\"], [node], options);\n  },\n  mathmlBuilder: (group, options) => {\n    var inner = buildExpression(ordargument(group.body), options);\n    var phantom = new mathMLTree.MathNode(\"mphantom\", inner);\n    var node = new mathMLTree.MathNode(\"mpadded\", [phantom]);\n    node.setAttribute(\"height\", \"0px\");\n    node.setAttribute(\"depth\", \"0px\");\n    return node;\n  }\n});\ndefineFunction({\n  type: \"vphantom\",\n  names: [\"\\\\vphantom\"],\n  props: {\n    numArgs: 1,\n    allowedInText: true\n  },\n  handler: (_ref3, args) => {\n    var {\n      parser\n    } = _ref3;\n    var body = args[0];\n    return {\n      type: \"vphantom\",\n      mode: parser.mode,\n      body\n    };\n  },\n  htmlBuilder: (group, options) => {\n    var inner = buildCommon.makeSpan([\"inner\"], [buildGroup$1(group.body, options.withPhantom())]);\n    var fix = buildCommon.makeSpan([\"fix\"], []);\n    return buildCommon.makeSpan([\"mord\", \"rlap\"], [inner, fix], options);\n  },\n  mathmlBuilder: (group, options) => {\n    var inner = buildExpression(ordargument(group.body), options);\n    var phantom = new mathMLTree.MathNode(\"mphantom\", inner);\n    var node = new mathMLTree.MathNode(\"mpadded\", [phantom]);\n    node.setAttribute(\"width\", \"0px\");\n    return node;\n  }\n});\n\ndefineFunction({\n  type: \"raisebox\",\n  names: [\"\\\\raisebox\"],\n  props: {\n    numArgs: 2,\n    argTypes: [\"size\", \"hbox\"],\n    allowedInText: true\n  },\n\n  handler(_ref, args) {\n    var {\n      parser\n    } = _ref;\n    var amount = assertNodeType(args[0], \"size\").value;\n    var body = args[1];\n    return {\n      type: \"raisebox\",\n      mode: parser.mode,\n      dy: amount,\n      body\n    };\n  },\n\n  htmlBuilder(group, options) {\n    var body = buildGroup$1(group.body, options);\n    var dy = calculateSize(group.dy, options);\n    return buildCommon.makeVList({\n      positionType: \"shift\",\n      positionData: -dy,\n      children: [{\n        type: \"elem\",\n        elem: body\n      }]\n    }, options);\n  },\n\n  mathmlBuilder(group, options) {\n    var node = new mathMLTree.MathNode(\"mpadded\", [buildGroup(group.body, options)]);\n    var dy = group.dy.number + group.dy.unit;\n    node.setAttribute(\"voffset\", dy);\n    return node;\n  }\n\n});\n\ndefineFunction({\n  type: \"internal\",\n  names: [\"\\\\relax\"],\n  props: {\n    numArgs: 0,\n    allowedInText: true,\n    allowedInArgument: true\n  },\n\n  handler(_ref) {\n    var {\n      parser\n    } = _ref;\n    return {\n      type: \"internal\",\n      mode: parser.mode\n    };\n  }\n\n});\n\ndefineFunction({\n  type: \"rule\",\n  names: [\"\\\\rule\"],\n  props: {\n    numArgs: 2,\n    numOptionalArgs: 1,\n    allowedInText: true,\n    allowedInMath: true,\n    argTypes: [\"size\", \"size\", \"size\"]\n  },\n\n  handler(_ref, args, optArgs) {\n    var {\n      parser\n    } = _ref;\n    var shift = optArgs[0];\n    var width = assertNodeType(args[0], \"size\");\n    var height = assertNodeType(args[1], \"size\");\n    return {\n      type: \"rule\",\n      mode: parser.mode,\n      shift: shift && assertNodeType(shift, \"size\").value,\n      width: width.value,\n      height: height.value\n    };\n  },\n\n  htmlBuilder(group, options) {\n    // Make an empty span for the rule\n    var rule = buildCommon.makeSpan([\"mord\", \"rule\"], [], options); // Calculate the shift, width, and height of the rule, and account for units\n\n    var width = calculateSize(group.width, options);\n    var height = calculateSize(group.height, options);\n    var shift = group.shift ? calculateSize(group.shift, options) : 0; // Style the rule to the right size\n\n    rule.style.borderRightWidth = makeEm(width);\n    rule.style.borderTopWidth = makeEm(height);\n    rule.style.bottom = makeEm(shift); // Record the height and width\n\n    rule.width = width;\n    rule.height = height + shift;\n    rule.depth = -shift; // Font size is the number large enough that the browser will\n    // reserve at least `absHeight` space above the baseline.\n    // The 1.125 factor was empirically determined\n\n    rule.maxFontSize = height * 1.125 * options.sizeMultiplier;\n    return rule;\n  },\n\n  mathmlBuilder(group, options) {\n    var width = calculateSize(group.width, options);\n    var height = calculateSize(group.height, options);\n    var shift = group.shift ? calculateSize(group.shift, options) : 0;\n    var color = options.color && options.getColor() || \"black\";\n    var rule = new mathMLTree.MathNode(\"mspace\");\n    rule.setAttribute(\"mathbackground\", color);\n    rule.setAttribute(\"width\", makeEm(width));\n    rule.setAttribute(\"height\", makeEm(height));\n    var wrapper = new mathMLTree.MathNode(\"mpadded\", [rule]);\n\n    if (shift >= 0) {\n      wrapper.setAttribute(\"height\", makeEm(shift));\n    } else {\n      wrapper.setAttribute(\"height\", makeEm(shift));\n      wrapper.setAttribute(\"depth\", makeEm(-shift));\n    }\n\n    wrapper.setAttribute(\"voffset\", makeEm(shift));\n    return wrapper;\n  }\n\n});\n\nfunction sizingGroup(value, options, baseOptions) {\n  var inner = buildExpression$1(value, options, false);\n  var multiplier = options.sizeMultiplier / baseOptions.sizeMultiplier; // Add size-resetting classes to the inner list and set maxFontSize\n  // manually. Handle nested size changes.\n\n  for (var i = 0; i < inner.length; i++) {\n    var pos = inner[i].classes.indexOf(\"sizing\");\n\n    if (pos < 0) {\n      Array.prototype.push.apply(inner[i].classes, options.sizingClasses(baseOptions));\n    } else if (inner[i].classes[pos + 1] === \"reset-size\" + options.size) {\n      // This is a nested size change: e.g., inner[i] is the \"b\" in\n      // `\\Huge a \\small b`. Override the old size (the `reset-` class)\n      // but not the new size.\n      inner[i].classes[pos + 1] = \"reset-size\" + baseOptions.size;\n    }\n\n    inner[i].height *= multiplier;\n    inner[i].depth *= multiplier;\n  }\n\n  return buildCommon.makeFragment(inner);\n}\nvar sizeFuncs = [\"\\\\tiny\", \"\\\\sixptsize\", \"\\\\scriptsize\", \"\\\\footnotesize\", \"\\\\small\", \"\\\\normalsize\", \"\\\\large\", \"\\\\Large\", \"\\\\LARGE\", \"\\\\huge\", \"\\\\Huge\"];\nvar htmlBuilder = (group, options) => {\n  // Handle sizing operators like \\Huge. Real TeX doesn't actually allow\n  // these functions inside of math expressions, so we do some special\n  // handling.\n  var newOptions = options.havingSize(group.size);\n  return sizingGroup(group.body, newOptions, options);\n};\ndefineFunction({\n  type: \"sizing\",\n  names: sizeFuncs,\n  props: {\n    numArgs: 0,\n    allowedInText: true\n  },\n  handler: (_ref, args) => {\n    var {\n      breakOnTokenText,\n      funcName,\n      parser\n    } = _ref;\n    var body = parser.parseExpression(false, breakOnTokenText);\n    return {\n      type: \"sizing\",\n      mode: parser.mode,\n      // Figure out what size to use based on the list of functions above\n      size: sizeFuncs.indexOf(funcName) + 1,\n      body\n    };\n  },\n  htmlBuilder,\n  mathmlBuilder: (group, options) => {\n    var newOptions = options.havingSize(group.size);\n    var inner = buildExpression(group.body, newOptions);\n    var node = new mathMLTree.MathNode(\"mstyle\", inner); // TODO(emily): This doesn't produce the correct size for nested size\n    // changes, because we don't keep state of what style we're currently\n    // in, so we can't reset the size to normal before changing it.  Now\n    // that we're passing an options parameter we should be able to fix\n    // this.\n\n    node.setAttribute(\"mathsize\", makeEm(newOptions.sizeMultiplier));\n    return node;\n  }\n});\n\n// smash, with optional [tb], as in AMS\ndefineFunction({\n  type: \"smash\",\n  names: [\"\\\\smash\"],\n  props: {\n    numArgs: 1,\n    numOptionalArgs: 1,\n    allowedInText: true\n  },\n  handler: (_ref, args, optArgs) => {\n    var {\n      parser\n    } = _ref;\n    var smashHeight = false;\n    var smashDepth = false;\n    var tbArg = optArgs[0] && assertNodeType(optArgs[0], \"ordgroup\");\n\n    if (tbArg) {\n      // Optional [tb] argument is engaged.\n      // ref: amsmath: \\renewcommand{\\smash}[1][tb]{%\n      //               def\\mb@t{\\ht}\\def\\mb@b{\\dp}\\def\\mb@tb{\\ht\\z@\\z@\\dp}%\n      var letter = \"\";\n\n      for (var i = 0; i < tbArg.body.length; ++i) {\n        var node = tbArg.body[i]; // $FlowFixMe: Not every node type has a `text` property.\n\n        letter = node.text;\n\n        if (letter === \"t\") {\n          smashHeight = true;\n        } else if (letter === \"b\") {\n          smashDepth = true;\n        } else {\n          smashHeight = false;\n          smashDepth = false;\n          break;\n        }\n      }\n    } else {\n      smashHeight = true;\n      smashDepth = true;\n    }\n\n    var body = args[0];\n    return {\n      type: \"smash\",\n      mode: parser.mode,\n      body,\n      smashHeight,\n      smashDepth\n    };\n  },\n  htmlBuilder: (group, options) => {\n    var node = buildCommon.makeSpan([], [buildGroup$1(group.body, options)]);\n\n    if (!group.smashHeight && !group.smashDepth) {\n      return node;\n    }\n\n    if (group.smashHeight) {\n      node.height = 0; // In order to influence makeVList, we have to reset the children.\n\n      if (node.children) {\n        for (var i = 0; i < node.children.length; i++) {\n          node.children[i].height = 0;\n        }\n      }\n    }\n\n    if (group.smashDepth) {\n      node.depth = 0;\n\n      if (node.children) {\n        for (var _i = 0; _i < node.children.length; _i++) {\n          node.children[_i].depth = 0;\n        }\n      }\n    } // At this point, we've reset the TeX-like height and depth values.\n    // But the span still has an HTML line height.\n    // makeVList applies \"display: table-cell\", which prevents the browser\n    // from acting on that line height. So we'll call makeVList now.\n\n\n    var smashedNode = buildCommon.makeVList({\n      positionType: \"firstBaseline\",\n      children: [{\n        type: \"elem\",\n        elem: node\n      }]\n    }, options); // For spacing, TeX treats \\hphantom as a math group (same spacing as ord).\n\n    return buildCommon.makeSpan([\"mord\"], [smashedNode], options);\n  },\n  mathmlBuilder: (group, options) => {\n    var node = new mathMLTree.MathNode(\"mpadded\", [buildGroup(group.body, options)]);\n\n    if (group.smashHeight) {\n      node.setAttribute(\"height\", \"0px\");\n    }\n\n    if (group.smashDepth) {\n      node.setAttribute(\"depth\", \"0px\");\n    }\n\n    return node;\n  }\n});\n\ndefineFunction({\n  type: \"sqrt\",\n  names: [\"\\\\sqrt\"],\n  props: {\n    numArgs: 1,\n    numOptionalArgs: 1\n  },\n\n  handler(_ref, args, optArgs) {\n    var {\n      parser\n    } = _ref;\n    var index = optArgs[0];\n    var body = args[0];\n    return {\n      type: \"sqrt\",\n      mode: parser.mode,\n      body,\n      index\n    };\n  },\n\n  htmlBuilder(group, options) {\n    // Square roots are handled in the TeXbook pg. 443, Rule 11.\n    // First, we do the same steps as in overline to build the inner group\n    // and line\n    var inner = buildGroup$1(group.body, options.havingCrampedStyle());\n\n    if (inner.height === 0) {\n      // Render a small surd.\n      inner.height = options.fontMetrics().xHeight;\n    } // Some groups can return document fragments.  Handle those by wrapping\n    // them in a span.\n\n\n    inner = buildCommon.wrapFragment(inner, options); // Calculate the minimum size for the \\surd delimiter\n\n    var metrics = options.fontMetrics();\n    var theta = metrics.defaultRuleThickness;\n    var phi = theta;\n\n    if (options.style.id < Style$1.TEXT.id) {\n      phi = options.fontMetrics().xHeight;\n    } // Calculate the clearance between the body and line\n\n\n    var lineClearance = theta + phi / 4;\n    var minDelimiterHeight = inner.height + inner.depth + lineClearance + theta; // Create a sqrt SVG of the required minimum size\n\n    var {\n      span: img,\n      ruleWidth,\n      advanceWidth\n    } = delimiter.sqrtImage(minDelimiterHeight, options);\n    var delimDepth = img.height - ruleWidth; // Adjust the clearance based on the delimiter size\n\n    if (delimDepth > inner.height + inner.depth + lineClearance) {\n      lineClearance = (lineClearance + delimDepth - inner.height - inner.depth) / 2;\n    } // Shift the sqrt image\n\n\n    var imgShift = img.height - inner.height - lineClearance - ruleWidth;\n    inner.style.paddingLeft = makeEm(advanceWidth); // Overlay the image and the argument.\n\n    var body = buildCommon.makeVList({\n      positionType: \"firstBaseline\",\n      children: [{\n        type: \"elem\",\n        elem: inner,\n        wrapperClasses: [\"svg-align\"]\n      }, {\n        type: \"kern\",\n        size: -(inner.height + imgShift)\n      }, {\n        type: \"elem\",\n        elem: img\n      }, {\n        type: \"kern\",\n        size: ruleWidth\n      }]\n    }, options);\n\n    if (!group.index) {\n      return buildCommon.makeSpan([\"mord\", \"sqrt\"], [body], options);\n    } else {\n      // Handle the optional root index\n      // The index is always in scriptscript style\n      var newOptions = options.havingStyle(Style$1.SCRIPTSCRIPT);\n      var rootm = buildGroup$1(group.index, newOptions, options); // The amount the index is shifted by. This is taken from the TeX\n      // source, in the definition of `\\r@@t`.\n\n      var toShift = 0.6 * (body.height - body.depth); // Build a VList with the superscript shifted up correctly\n\n      var rootVList = buildCommon.makeVList({\n        positionType: \"shift\",\n        positionData: -toShift,\n        children: [{\n          type: \"elem\",\n          elem: rootm\n        }]\n      }, options); // Add a class surrounding it so we can add on the appropriate\n      // kerning\n\n      var rootVListWrap = buildCommon.makeSpan([\"root\"], [rootVList]);\n      return buildCommon.makeSpan([\"mord\", \"sqrt\"], [rootVListWrap, body], options);\n    }\n  },\n\n  mathmlBuilder(group, options) {\n    var {\n      body,\n      index\n    } = group;\n    return index ? new mathMLTree.MathNode(\"mroot\", [buildGroup(body, options), buildGroup(index, options)]) : new mathMLTree.MathNode(\"msqrt\", [buildGroup(body, options)]);\n  }\n\n});\n\nvar styleMap = {\n  \"display\": Style$1.DISPLAY,\n  \"text\": Style$1.TEXT,\n  \"script\": Style$1.SCRIPT,\n  \"scriptscript\": Style$1.SCRIPTSCRIPT\n};\ndefineFunction({\n  type: \"styling\",\n  names: [\"\\\\displaystyle\", \"\\\\textstyle\", \"\\\\scriptstyle\", \"\\\\scriptscriptstyle\"],\n  props: {\n    numArgs: 0,\n    allowedInText: true,\n    primitive: true\n  },\n\n  handler(_ref, args) {\n    var {\n      breakOnTokenText,\n      funcName,\n      parser\n    } = _ref;\n    // parse out the implicit body\n    var body = parser.parseExpression(true, breakOnTokenText); // TODO: Refactor to avoid duplicating styleMap in multiple places (e.g.\n    // here and in buildHTML and de-dupe the enumeration of all the styles).\n    // $FlowFixMe: The names above exactly match the styles.\n\n    var style = funcName.slice(1, funcName.length - 5);\n    return {\n      type: \"styling\",\n      mode: parser.mode,\n      // Figure out what style to use by pulling out the style from\n      // the function name\n      style,\n      body\n    };\n  },\n\n  htmlBuilder(group, options) {\n    // Style changes are handled in the TeXbook on pg. 442, Rule 3.\n    var newStyle = styleMap[group.style];\n    var newOptions = options.havingStyle(newStyle).withFont('');\n    return sizingGroup(group.body, newOptions, options);\n  },\n\n  mathmlBuilder(group, options) {\n    // Figure out what style we're changing to.\n    var newStyle = styleMap[group.style];\n    var newOptions = options.havingStyle(newStyle);\n    var inner = buildExpression(group.body, newOptions);\n    var node = new mathMLTree.MathNode(\"mstyle\", inner);\n    var styleAttributes = {\n      \"display\": [\"0\", \"true\"],\n      \"text\": [\"0\", \"false\"],\n      \"script\": [\"1\", \"false\"],\n      \"scriptscript\": [\"2\", \"false\"]\n    };\n    var attr = styleAttributes[group.style];\n    node.setAttribute(\"scriptlevel\", attr[0]);\n    node.setAttribute(\"displaystyle\", attr[1]);\n    return node;\n  }\n\n});\n\n/**\n * Sometimes, groups perform special rules when they have superscripts or\n * subscripts attached to them. This function lets the `supsub` group know that\n * Sometimes, groups perform special rules when they have superscripts or\n * its inner element should handle the superscripts and subscripts instead of\n * handling them itself.\n */\nvar htmlBuilderDelegate = function htmlBuilderDelegate(group, options) {\n  var base = group.base;\n\n  if (!base) {\n    return null;\n  } else if (base.type === \"op\") {\n    // Operators handle supsubs differently when they have limits\n    // (e.g. `\\displaystyle\\sum_2^3`)\n    var delegate = base.limits && (options.style.size === Style$1.DISPLAY.size || base.alwaysHandleSupSub);\n    return delegate ? htmlBuilder$2 : null;\n  } else if (base.type === \"operatorname\") {\n    var _delegate = base.alwaysHandleSupSub && (options.style.size === Style$1.DISPLAY.size || base.limits);\n\n    return _delegate ? htmlBuilder$1 : null;\n  } else if (base.type === \"accent\") {\n    return utils.isCharacterBox(base.base) ? htmlBuilder$a : null;\n  } else if (base.type === \"horizBrace\") {\n    var isSup = !group.sub;\n    return isSup === base.isOver ? htmlBuilder$3 : null;\n  } else {\n    return null;\n  }\n}; // Super scripts and subscripts, whose precise placement can depend on other\n// functions that precede them.\n\n\ndefineFunctionBuilders({\n  type: \"supsub\",\n\n  htmlBuilder(group, options) {\n    // Superscript and subscripts are handled in the TeXbook on page\n    // 445-446, rules 18(a-f).\n    // Here is where we defer to the inner group if it should handle\n    // superscripts and subscripts itself.\n    var builderDelegate = htmlBuilderDelegate(group, options);\n\n    if (builderDelegate) {\n      return builderDelegate(group, options);\n    }\n\n    var {\n      base: valueBase,\n      sup: valueSup,\n      sub: valueSub\n    } = group;\n    var base = buildGroup$1(valueBase, options);\n    var supm;\n    var subm;\n    var metrics = options.fontMetrics(); // Rule 18a\n\n    var supShift = 0;\n    var subShift = 0;\n    var isCharacterBox = valueBase && utils.isCharacterBox(valueBase);\n\n    if (valueSup) {\n      var newOptions = options.havingStyle(options.style.sup());\n      supm = buildGroup$1(valueSup, newOptions, options);\n\n      if (!isCharacterBox) {\n        supShift = base.height - newOptions.fontMetrics().supDrop * newOptions.sizeMultiplier / options.sizeMultiplier;\n      }\n    }\n\n    if (valueSub) {\n      var _newOptions = options.havingStyle(options.style.sub());\n\n      subm = buildGroup$1(valueSub, _newOptions, options);\n\n      if (!isCharacterBox) {\n        subShift = base.depth + _newOptions.fontMetrics().subDrop * _newOptions.sizeMultiplier / options.sizeMultiplier;\n      }\n    } // Rule 18c\n\n\n    var minSupShift;\n\n    if (options.style === Style$1.DISPLAY) {\n      minSupShift = metrics.sup1;\n    } else if (options.style.cramped) {\n      minSupShift = metrics.sup3;\n    } else {\n      minSupShift = metrics.sup2;\n    } // scriptspace is a font-size-independent size, so scale it\n    // appropriately for use as the marginRight.\n\n\n    var multiplier = options.sizeMultiplier;\n    var marginRight = makeEm(0.5 / metrics.ptPerEm / multiplier);\n    var marginLeft = null;\n\n    if (subm) {\n      // Subscripts shouldn't be shifted by the base's italic correction.\n      // Account for that by shifting the subscript back the appropriate\n      // amount. Note we only do this when the base is a single symbol.\n      var isOiint = group.base && group.base.type === \"op\" && group.base.name && (group.base.name === \"\\\\oiint\" || group.base.name === \"\\\\oiiint\");\n\n      if (base instanceof SymbolNode || isOiint) {\n        // $FlowFixMe\n        marginLeft = makeEm(-base.italic);\n      }\n    }\n\n    var supsub;\n\n    if (supm && subm) {\n      supShift = Math.max(supShift, minSupShift, supm.depth + 0.25 * metrics.xHeight);\n      subShift = Math.max(subShift, metrics.sub2);\n      var ruleWidth = metrics.defaultRuleThickness; // Rule 18e\n\n      var maxWidth = 4 * ruleWidth;\n\n      if (supShift - supm.depth - (subm.height - subShift) < maxWidth) {\n        subShift = maxWidth - (supShift - supm.depth) + subm.height;\n        var psi = 0.8 * metrics.xHeight - (supShift - supm.depth);\n\n        if (psi > 0) {\n          supShift += psi;\n          subShift -= psi;\n        }\n      }\n\n      var vlistElem = [{\n        type: \"elem\",\n        elem: subm,\n        shift: subShift,\n        marginRight,\n        marginLeft\n      }, {\n        type: \"elem\",\n        elem: supm,\n        shift: -supShift,\n        marginRight\n      }];\n      supsub = buildCommon.makeVList({\n        positionType: \"individualShift\",\n        children: vlistElem\n      }, options);\n    } else if (subm) {\n      // Rule 18b\n      subShift = Math.max(subShift, metrics.sub1, subm.height - 0.8 * metrics.xHeight);\n      var _vlistElem = [{\n        type: \"elem\",\n        elem: subm,\n        marginLeft,\n        marginRight\n      }];\n      supsub = buildCommon.makeVList({\n        positionType: \"shift\",\n        positionData: subShift,\n        children: _vlistElem\n      }, options);\n    } else if (supm) {\n      // Rule 18c, d\n      supShift = Math.max(supShift, minSupShift, supm.depth + 0.25 * metrics.xHeight);\n      supsub = buildCommon.makeVList({\n        positionType: \"shift\",\n        positionData: -supShift,\n        children: [{\n          type: \"elem\",\n          elem: supm,\n          marginRight\n        }]\n      }, options);\n    } else {\n      throw new Error(\"supsub must have either sup or sub.\");\n    } // Wrap the supsub vlist in a span.msupsub to reset text-align.\n\n\n    var mclass = getTypeOfDomTree(base, \"right\") || \"mord\";\n    return buildCommon.makeSpan([mclass], [base, buildCommon.makeSpan([\"msupsub\"], [supsub])], options);\n  },\n\n  mathmlBuilder(group, options) {\n    // Is the inner group a relevant horizontal brace?\n    var isBrace = false;\n    var isOver;\n    var isSup;\n\n    if (group.base && group.base.type === \"horizBrace\") {\n      isSup = !!group.sup;\n\n      if (isSup === group.base.isOver) {\n        isBrace = true;\n        isOver = group.base.isOver;\n      }\n    }\n\n    if (group.base && (group.base.type === \"op\" || group.base.type === \"operatorname\")) {\n      group.base.parentIsSupSub = true;\n    }\n\n    var children = [buildGroup(group.base, options)];\n\n    if (group.sub) {\n      children.push(buildGroup(group.sub, options));\n    }\n\n    if (group.sup) {\n      children.push(buildGroup(group.sup, options));\n    }\n\n    var nodeType;\n\n    if (isBrace) {\n      nodeType = isOver ? \"mover\" : \"munder\";\n    } else if (!group.sub) {\n      var base = group.base;\n\n      if (base && base.type === \"op\" && base.limits && (options.style === Style$1.DISPLAY || base.alwaysHandleSupSub)) {\n        nodeType = \"mover\";\n      } else if (base && base.type === \"operatorname\" && base.alwaysHandleSupSub && (base.limits || options.style === Style$1.DISPLAY)) {\n        nodeType = \"mover\";\n      } else {\n        nodeType = \"msup\";\n      }\n    } else if (!group.sup) {\n      var _base = group.base;\n\n      if (_base && _base.type === \"op\" && _base.limits && (options.style === Style$1.DISPLAY || _base.alwaysHandleSupSub)) {\n        nodeType = \"munder\";\n      } else if (_base && _base.type === \"operatorname\" && _base.alwaysHandleSupSub && (_base.limits || options.style === Style$1.DISPLAY)) {\n        nodeType = \"munder\";\n      } else {\n        nodeType = \"msub\";\n      }\n    } else {\n      var _base2 = group.base;\n\n      if (_base2 && _base2.type === \"op\" && _base2.limits && options.style === Style$1.DISPLAY) {\n        nodeType = \"munderover\";\n      } else if (_base2 && _base2.type === \"operatorname\" && _base2.alwaysHandleSupSub && (options.style === Style$1.DISPLAY || _base2.limits)) {\n        nodeType = \"munderover\";\n      } else {\n        nodeType = \"msubsup\";\n      }\n    }\n\n    return new mathMLTree.MathNode(nodeType, children);\n  }\n\n});\n\ndefineFunctionBuilders({\n  type: \"atom\",\n\n  htmlBuilder(group, options) {\n    return buildCommon.mathsym(group.text, group.mode, options, [\"m\" + group.family]);\n  },\n\n  mathmlBuilder(group, options) {\n    var node = new mathMLTree.MathNode(\"mo\", [makeText(group.text, group.mode)]);\n\n    if (group.family === \"bin\") {\n      var variant = getVariant(group, options);\n\n      if (variant === \"bold-italic\") {\n        node.setAttribute(\"mathvariant\", variant);\n      }\n    } else if (group.family === \"punct\") {\n      node.setAttribute(\"separator\", \"true\");\n    } else if (group.family === \"open\" || group.family === \"close\") {\n      // Delims built here should not stretch vertically.\n      // See delimsizing.js for stretchy delims.\n      node.setAttribute(\"stretchy\", \"false\");\n    }\n\n    return node;\n  }\n\n});\n\n// \"mathord\" and \"textord\" ParseNodes created in Parser.js from symbol Groups in\n// src/symbols.js.\nvar defaultVariant = {\n  \"mi\": \"italic\",\n  \"mn\": \"normal\",\n  \"mtext\": \"normal\"\n};\ndefineFunctionBuilders({\n  type: \"mathord\",\n\n  htmlBuilder(group, options) {\n    return buildCommon.makeOrd(group, options, \"mathord\");\n  },\n\n  mathmlBuilder(group, options) {\n    var node = new mathMLTree.MathNode(\"mi\", [makeText(group.text, group.mode, options)]);\n    var variant = getVariant(group, options) || \"italic\";\n\n    if (variant !== defaultVariant[node.type]) {\n      node.setAttribute(\"mathvariant\", variant);\n    }\n\n    return node;\n  }\n\n});\ndefineFunctionBuilders({\n  type: \"textord\",\n\n  htmlBuilder(group, options) {\n    return buildCommon.makeOrd(group, options, \"textord\");\n  },\n\n  mathmlBuilder(group, options) {\n    var text = makeText(group.text, group.mode, options);\n    var variant = getVariant(group, options) || \"normal\";\n    var node;\n\n    if (group.mode === 'text') {\n      node = new mathMLTree.MathNode(\"mtext\", [text]);\n    } else if (/[0-9]/.test(group.text)) {\n      node = new mathMLTree.MathNode(\"mn\", [text]);\n    } else if (group.text === \"\\\\prime\") {\n      node = new mathMLTree.MathNode(\"mo\", [text]);\n    } else {\n      node = new mathMLTree.MathNode(\"mi\", [text]);\n    }\n\n    if (variant !== defaultVariant[node.type]) {\n      node.setAttribute(\"mathvariant\", variant);\n    }\n\n    return node;\n  }\n\n});\n\nvar cssSpace = {\n  \"\\\\nobreak\": \"nobreak\",\n  \"\\\\allowbreak\": \"allowbreak\"\n}; // A lookup table to determine whether a spacing function/symbol should be\n// treated like a regular space character.  If a symbol or command is a key\n// in this table, then it should be a regular space character.  Furthermore,\n// the associated value may have a `className` specifying an extra CSS class\n// to add to the created `span`.\n\nvar regularSpace = {\n  \" \": {},\n  \"\\\\ \": {},\n  \"~\": {\n    className: \"nobreak\"\n  },\n  \"\\\\space\": {},\n  \"\\\\nobreakspace\": {\n    className: \"nobreak\"\n  }\n}; // ParseNode<\"spacing\"> created in Parser.js from the \"spacing\" symbol Groups in\n// src/symbols.js.\n\ndefineFunctionBuilders({\n  type: \"spacing\",\n\n  htmlBuilder(group, options) {\n    if (regularSpace.hasOwnProperty(group.text)) {\n      var className = regularSpace[group.text].className || \"\"; // Spaces are generated by adding an actual space. Each of these\n      // things has an entry in the symbols table, so these will be turned\n      // into appropriate outputs.\n\n      if (group.mode === \"text\") {\n        var ord = buildCommon.makeOrd(group, options, \"textord\");\n        ord.classes.push(className);\n        return ord;\n      } else {\n        return buildCommon.makeSpan([\"mspace\", className], [buildCommon.mathsym(group.text, group.mode, options)], options);\n      }\n    } else if (cssSpace.hasOwnProperty(group.text)) {\n      // Spaces based on just a CSS class.\n      return buildCommon.makeSpan([\"mspace\", cssSpace[group.text]], [], options);\n    } else {\n      throw new ParseError(\"Unknown type of space \\\"\" + group.text + \"\\\"\");\n    }\n  },\n\n  mathmlBuilder(group, options) {\n    var node;\n\n    if (regularSpace.hasOwnProperty(group.text)) {\n      node = new mathMLTree.MathNode(\"mtext\", [new mathMLTree.TextNode(\"\\u00a0\")]);\n    } else if (cssSpace.hasOwnProperty(group.text)) {\n      // CSS-based MathML spaces (\\nobreak, \\allowbreak) are ignored\n      return new mathMLTree.MathNode(\"mspace\");\n    } else {\n      throw new ParseError(\"Unknown type of space \\\"\" + group.text + \"\\\"\");\n    }\n\n    return node;\n  }\n\n});\n\nvar pad = () => {\n  var padNode = new mathMLTree.MathNode(\"mtd\", []);\n  padNode.setAttribute(\"width\", \"50%\");\n  return padNode;\n};\n\ndefineFunctionBuilders({\n  type: \"tag\",\n\n  mathmlBuilder(group, options) {\n    var table = new mathMLTree.MathNode(\"mtable\", [new mathMLTree.MathNode(\"mtr\", [pad(), new mathMLTree.MathNode(\"mtd\", [buildExpressionRow(group.body, options)]), pad(), new mathMLTree.MathNode(\"mtd\", [buildExpressionRow(group.tag, options)])])]);\n    table.setAttribute(\"width\", \"100%\");\n    return table; // TODO: Left-aligned tags.\n    // Currently, the group and options passed here do not contain\n    // enough info to set tag alignment. `leqno` is in Settings but it is\n    // not passed to Options. On the HTML side, leqno is\n    // set by a CSS class applied in buildTree.js. That would have worked\n    // in MathML if browsers supported <mlabeledtr>. Since they don't, we\n    // need to rewrite the way this function is called.\n  }\n\n});\n\nvar textFontFamilies = {\n  \"\\\\text\": undefined,\n  \"\\\\textrm\": \"textrm\",\n  \"\\\\textsf\": \"textsf\",\n  \"\\\\texttt\": \"texttt\",\n  \"\\\\textnormal\": \"textrm\"\n};\nvar textFontWeights = {\n  \"\\\\textbf\": \"textbf\",\n  \"\\\\textmd\": \"textmd\"\n};\nvar textFontShapes = {\n  \"\\\\textit\": \"textit\",\n  \"\\\\textup\": \"textup\"\n};\n\nvar optionsWithFont = (group, options) => {\n  var font = group.font; // Checks if the argument is a font family or a font style.\n\n  if (!font) {\n    return options;\n  } else if (textFontFamilies[font]) {\n    return options.withTextFontFamily(textFontFamilies[font]);\n  } else if (textFontWeights[font]) {\n    return options.withTextFontWeight(textFontWeights[font]);\n  } else if (font === \"\\\\emph\") {\n    return options.fontShape === \"textit\" ? options.withTextFontShape(\"textup\") : options.withTextFontShape(\"textit\");\n  }\n\n  return options.withTextFontShape(textFontShapes[font]);\n};\n\ndefineFunction({\n  type: \"text\",\n  names: [// Font families\n  \"\\\\text\", \"\\\\textrm\", \"\\\\textsf\", \"\\\\texttt\", \"\\\\textnormal\", // Font weights\n  \"\\\\textbf\", \"\\\\textmd\", // Font Shapes\n  \"\\\\textit\", \"\\\\textup\", \"\\\\emph\"],\n  props: {\n    numArgs: 1,\n    argTypes: [\"text\"],\n    allowedInArgument: true,\n    allowedInText: true\n  },\n\n  handler(_ref, args) {\n    var {\n      parser,\n      funcName\n    } = _ref;\n    var body = args[0];\n    return {\n      type: \"text\",\n      mode: parser.mode,\n      body: ordargument(body),\n      font: funcName\n    };\n  },\n\n  htmlBuilder(group, options) {\n    var newOptions = optionsWithFont(group, options);\n    var inner = buildExpression$1(group.body, newOptions, true);\n    return buildCommon.makeSpan([\"mord\", \"text\"], inner, newOptions);\n  },\n\n  mathmlBuilder(group, options) {\n    var newOptions = optionsWithFont(group, options);\n    return buildExpressionRow(group.body, newOptions);\n  }\n\n});\n\ndefineFunction({\n  type: \"underline\",\n  names: [\"\\\\underline\"],\n  props: {\n    numArgs: 1,\n    allowedInText: true\n  },\n\n  handler(_ref, args) {\n    var {\n      parser\n    } = _ref;\n    return {\n      type: \"underline\",\n      mode: parser.mode,\n      body: args[0]\n    };\n  },\n\n  htmlBuilder(group, options) {\n    // Underlines are handled in the TeXbook pg 443, Rule 10.\n    // Build the inner group.\n    var innerGroup = buildGroup$1(group.body, options); // Create the line to go below the body\n\n    var line = buildCommon.makeLineSpan(\"underline-line\", options); // Generate the vlist, with the appropriate kerns\n\n    var defaultRuleThickness = options.fontMetrics().defaultRuleThickness;\n    var vlist = buildCommon.makeVList({\n      positionType: \"top\",\n      positionData: innerGroup.height,\n      children: [{\n        type: \"kern\",\n        size: defaultRuleThickness\n      }, {\n        type: \"elem\",\n        elem: line\n      }, {\n        type: \"kern\",\n        size: 3 * defaultRuleThickness\n      }, {\n        type: \"elem\",\n        elem: innerGroup\n      }]\n    }, options);\n    return buildCommon.makeSpan([\"mord\", \"underline\"], [vlist], options);\n  },\n\n  mathmlBuilder(group, options) {\n    var operator = new mathMLTree.MathNode(\"mo\", [new mathMLTree.TextNode(\"\\u203e\")]);\n    operator.setAttribute(\"stretchy\", \"true\");\n    var node = new mathMLTree.MathNode(\"munder\", [buildGroup(group.body, options), operator]);\n    node.setAttribute(\"accentunder\", \"true\");\n    return node;\n  }\n\n});\n\ndefineFunction({\n  type: \"vcenter\",\n  names: [\"\\\\vcenter\"],\n  props: {\n    numArgs: 1,\n    argTypes: [\"original\"],\n    // In LaTeX, \\vcenter can act only on a box.\n    allowedInText: false\n  },\n\n  handler(_ref, args) {\n    var {\n      parser\n    } = _ref;\n    return {\n      type: \"vcenter\",\n      mode: parser.mode,\n      body: args[0]\n    };\n  },\n\n  htmlBuilder(group, options) {\n    var body = buildGroup$1(group.body, options);\n    var axisHeight = options.fontMetrics().axisHeight;\n    var dy = 0.5 * (body.height - axisHeight - (body.depth + axisHeight));\n    return buildCommon.makeVList({\n      positionType: \"shift\",\n      positionData: dy,\n      children: [{\n        type: \"elem\",\n        elem: body\n      }]\n    }, options);\n  },\n\n  mathmlBuilder(group, options) {\n    // There is no way to do this in MathML.\n    // Write a class as a breadcrumb in case some post-processor wants\n    // to perform a vcenter adjustment.\n    return new mathMLTree.MathNode(\"mpadded\", [buildGroup(group.body, options)], [\"vcenter\"]);\n  }\n\n});\n\ndefineFunction({\n  type: \"verb\",\n  names: [\"\\\\verb\"],\n  props: {\n    numArgs: 0,\n    allowedInText: true\n  },\n\n  handler(context, args, optArgs) {\n    // \\verb and \\verb* are dealt with directly in Parser.js.\n    // If we end up here, it's because of a failure to match the two delimiters\n    // in the regex in Lexer.js.  LaTeX raises the following error when \\verb is\n    // terminated by end of line (or file).\n    throw new ParseError(\"\\\\verb ended by end of line instead of matching delimiter\");\n  },\n\n  htmlBuilder(group, options) {\n    var text = makeVerb(group);\n    var body = []; // \\verb enters text mode and therefore is sized like \\textstyle\n\n    var newOptions = options.havingStyle(options.style.text());\n\n    for (var i = 0; i < text.length; i++) {\n      var c = text[i];\n\n      if (c === '~') {\n        c = '\\\\textasciitilde';\n      }\n\n      body.push(buildCommon.makeSymbol(c, \"Typewriter-Regular\", group.mode, newOptions, [\"mord\", \"texttt\"]));\n    }\n\n    return buildCommon.makeSpan([\"mord\", \"text\"].concat(newOptions.sizingClasses(options)), buildCommon.tryCombineChars(body), newOptions);\n  },\n\n  mathmlBuilder(group, options) {\n    var text = new mathMLTree.TextNode(makeVerb(group));\n    var node = new mathMLTree.MathNode(\"mtext\", [text]);\n    node.setAttribute(\"mathvariant\", \"monospace\");\n    return node;\n  }\n\n});\n/**\n * Converts verb group into body string.\n *\n * \\verb* replaces each space with an open box \\u2423\n * \\verb replaces each space with a no-break space \\xA0\n */\n\nvar makeVerb = group => group.body.replace(/ /g, group.star ? '\\u2423' : '\\xA0');\n\n/** Include this to ensure that all functions are defined. */\nvar functions = _functions;\n\n/**\n * The Lexer class handles tokenizing the input in various ways. Since our\n * parser expects us to be able to backtrack, the lexer allows lexing from any\n * given starting point.\n *\n * Its main exposed function is the `lex` function, which takes a position to\n * lex from and a type of token to lex. It defers to the appropriate `_innerLex`\n * function.\n *\n * The various `_innerLex` functions perform the actual lexing of different\n * kinds.\n */\n\n/* The following tokenRegex\n * - matches typical whitespace (but not NBSP etc.) using its first group\n * - does not match any control character \\x00-\\x1f except whitespace\n * - does not match a bare backslash\n * - matches any ASCII character except those just mentioned\n * - does not match the BMP private use area \\uE000-\\uF8FF\n * - does not match bare surrogate code units\n * - matches any BMP character except for those just described\n * - matches any valid Unicode surrogate pair\n * - matches a backslash followed by one or more whitespace characters\n * - matches a backslash followed by one or more letters then whitespace\n * - matches a backslash followed by any BMP character\n * Capturing groups:\n *   [1] regular whitespace\n *   [2] backslash followed by whitespace\n *   [3] anything else, which may include:\n *     [4] left character of \\verb*\n *     [5] left character of \\verb\n *     [6] backslash followed by word, excluding any trailing whitespace\n * Just because the Lexer matches something doesn't mean it's valid input:\n * If there is no matching function or symbol definition, the Parser will\n * still reject the input.\n */\nvar spaceRegexString = \"[ \\r\\n\\t]\";\nvar controlWordRegexString = \"\\\\\\\\[a-zA-Z@]+\";\nvar controlSymbolRegexString = \"\\\\\\\\[^\\uD800-\\uDFFF]\";\nvar controlWordWhitespaceRegexString = \"(\" + controlWordRegexString + \")\" + spaceRegexString + \"*\";\nvar controlSpaceRegexString = \"\\\\\\\\(\\n|[ \\r\\t]+\\n?)[ \\r\\t]*\";\nvar combiningDiacriticalMarkString = \"[\\u0300-\\u036f]\";\nvar combiningDiacriticalMarksEndRegex = new RegExp(combiningDiacriticalMarkString + \"+$\");\nvar tokenRegexString = \"(\" + spaceRegexString + \"+)|\" + ( // whitespace\ncontrolSpaceRegexString + \"|\") + // \\whitespace\n\"([!-\\\\[\\\\]-\\u2027\\u202A-\\uD7FF\\uF900-\\uFFFF]\" + ( // single codepoint\ncombiningDiacriticalMarkString + \"*\") + // ...plus accents\n\"|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]\" + ( // surrogate pair\ncombiningDiacriticalMarkString + \"*\") + // ...plus accents\n\"|\\\\\\\\verb\\\\*([^]).*?\\\\4\" + // \\verb*\n\"|\\\\\\\\verb([^*a-zA-Z]).*?\\\\5\" + ( // \\verb unstarred\n\"|\" + controlWordWhitespaceRegexString) + ( // \\macroName + spaces\n\"|\" + controlSymbolRegexString + \")\"); // \\\\, \\', etc.\n\n/** Main Lexer class */\n\nclass Lexer {\n  // Category codes. The lexer only supports comment characters (14) for now.\n  // MacroExpander additionally distinguishes active (13).\n  constructor(input, settings) {\n    this.input = void 0;\n    this.settings = void 0;\n    this.tokenRegex = void 0;\n    this.catcodes = void 0;\n    // Separate accents from characters\n    this.input = input;\n    this.settings = settings;\n    this.tokenRegex = new RegExp(tokenRegexString, 'g');\n    this.catcodes = {\n      \"%\": 14,\n      // comment character\n      \"~\": 13 // active character\n\n    };\n  }\n\n  setCatcode(char, code) {\n    this.catcodes[char] = code;\n  }\n  /**\n   * This function lexes a single token.\n   */\n\n\n  lex() {\n    var input = this.input;\n    var pos = this.tokenRegex.lastIndex;\n\n    if (pos === input.length) {\n      return new Token(\"EOF\", new SourceLocation(this, pos, pos));\n    }\n\n    var match = this.tokenRegex.exec(input);\n\n    if (match === null || match.index !== pos) {\n      throw new ParseError(\"Unexpected character: '\" + input[pos] + \"'\", new Token(input[pos], new SourceLocation(this, pos, pos + 1)));\n    }\n\n    var text = match[6] || match[3] || (match[2] ? \"\\\\ \" : \" \");\n\n    if (this.catcodes[text] === 14) {\n      // comment character\n      var nlIndex = input.indexOf('\\n', this.tokenRegex.lastIndex);\n\n      if (nlIndex === -1) {\n        this.tokenRegex.lastIndex = input.length; // EOF\n\n        this.settings.reportNonstrict(\"commentAtEnd\", \"% comment has no terminating newline; LaTeX would \" + \"fail because of commenting the end of math mode (e.g. $)\");\n      } else {\n        this.tokenRegex.lastIndex = nlIndex + 1;\n      }\n\n      return this.lex();\n    }\n\n    return new Token(text, new SourceLocation(this, pos, this.tokenRegex.lastIndex));\n  }\n\n}\n\n/**\n * A `Namespace` refers to a space of nameable things like macros or lengths,\n * which can be `set` either globally or local to a nested group, using an\n * undo stack similar to how TeX implements this functionality.\n * Performance-wise, `get` and local `set` take constant time, while global\n * `set` takes time proportional to the depth of group nesting.\n */\nclass Namespace {\n  /**\n   * Both arguments are optional.  The first argument is an object of\n   * built-in mappings which never change.  The second argument is an object\n   * of initial (global-level) mappings, which will constantly change\n   * according to any global/top-level `set`s done.\n   */\n  constructor(builtins, globalMacros) {\n    if (builtins === void 0) {\n      builtins = {};\n    }\n\n    if (globalMacros === void 0) {\n      globalMacros = {};\n    }\n\n    this.current = void 0;\n    this.builtins = void 0;\n    this.undefStack = void 0;\n    this.current = globalMacros;\n    this.builtins = builtins;\n    this.undefStack = [];\n  }\n  /**\n   * Start a new nested group, affecting future local `set`s.\n   */\n\n\n  beginGroup() {\n    this.undefStack.push({});\n  }\n  /**\n   * End current nested group, restoring values before the group began.\n   */\n\n\n  endGroup() {\n    if (this.undefStack.length === 0) {\n      throw new ParseError(\"Unbalanced namespace destruction: attempt \" + \"to pop global namespace; please report this as a bug\");\n    }\n\n    var undefs = this.undefStack.pop();\n\n    for (var undef in undefs) {\n      if (undefs.hasOwnProperty(undef)) {\n        if (undefs[undef] == null) {\n          delete this.current[undef];\n        } else {\n          this.current[undef] = undefs[undef];\n        }\n      }\n    }\n  }\n  /**\n   * Ends all currently nested groups (if any), restoring values before the\n   * groups began.  Useful in case of an error in the middle of parsing.\n   */\n\n\n  endGroups() {\n    while (this.undefStack.length > 0) {\n      this.endGroup();\n    }\n  }\n  /**\n   * Detect whether `name` has a definition.  Equivalent to\n   * `get(name) != null`.\n   */\n\n\n  has(name) {\n    return this.current.hasOwnProperty(name) || this.builtins.hasOwnProperty(name);\n  }\n  /**\n   * Get the current value of a name, or `undefined` if there is no value.\n   *\n   * Note: Do not use `if (namespace.get(...))` to detect whether a macro\n   * is defined, as the definition may be the empty string which evaluates\n   * to `false` in JavaScript.  Use `if (namespace.get(...) != null)` or\n   * `if (namespace.has(...))`.\n   */\n\n\n  get(name) {\n    if (this.current.hasOwnProperty(name)) {\n      return this.current[name];\n    } else {\n      return this.builtins[name];\n    }\n  }\n  /**\n   * Set the current value of a name, and optionally set it globally too.\n   * Local set() sets the current value and (when appropriate) adds an undo\n   * operation to the undo stack.  Global set() may change the undo\n   * operation at every level, so takes time linear in their number.\n   * A value of undefined means to delete existing definitions.\n   */\n\n\n  set(name, value, global) {\n    if (global === void 0) {\n      global = false;\n    }\n\n    if (global) {\n      // Global set is equivalent to setting in all groups.  Simulate this\n      // by destroying any undos currently scheduled for this name,\n      // and adding an undo with the *new* value (in case it later gets\n      // locally reset within this environment).\n      for (var i = 0; i < this.undefStack.length; i++) {\n        delete this.undefStack[i][name];\n      }\n\n      if (this.undefStack.length > 0) {\n        this.undefStack[this.undefStack.length - 1][name] = value;\n      }\n    } else {\n      // Undo this set at end of this group (possibly to `undefined`),\n      // unless an undo is already in place, in which case that older\n      // value is the correct one.\n      var top = this.undefStack[this.undefStack.length - 1];\n\n      if (top && !top.hasOwnProperty(name)) {\n        top[name] = this.current[name];\n      }\n    }\n\n    if (value == null) {\n      delete this.current[name];\n    } else {\n      this.current[name] = value;\n    }\n  }\n\n}\n\n/**\n * Predefined macros for KaTeX.\n * This can be used to define some commands in terms of others.\n */\nvar macros = _macros;\n// macro tools\n\ndefineMacro(\"\\\\noexpand\", function (context) {\n  // The expansion is the token itself; but that token is interpreted\n  // as if its meaning were \u2018\\relax\u2019 if it is a control sequence that\n  // would ordinarily be expanded by TeX\u2019s expansion rules.\n  var t = context.popToken();\n\n  if (context.isExpandable(t.text)) {\n    t.noexpand = true;\n    t.treatAsRelax = true;\n  }\n\n  return {\n    tokens: [t],\n    numArgs: 0\n  };\n});\ndefineMacro(\"\\\\expandafter\", function (context) {\n  // TeX first reads the token that comes immediately after \\expandafter,\n  // without expanding it; let\u2019s call this token t. Then TeX reads the\n  // token that comes after t (and possibly more tokens, if that token\n  // has an argument), replacing it by its expansion. Finally TeX puts\n  // t back in front of that expansion.\n  var t = context.popToken();\n  context.expandOnce(true); // expand only an expandable token\n\n  return {\n    tokens: [t],\n    numArgs: 0\n  };\n}); // LaTeX's \\@firstoftwo{#1}{#2} expands to #1, skipping #2\n// TeX source: \\long\\def\\@firstoftwo#1#2{#1}\n\ndefineMacro(\"\\\\@firstoftwo\", function (context) {\n  var args = context.consumeArgs(2);\n  return {\n    tokens: args[0],\n    numArgs: 0\n  };\n}); // LaTeX's \\@secondoftwo{#1}{#2} expands to #2, skipping #1\n// TeX source: \\long\\def\\@secondoftwo#1#2{#2}\n\ndefineMacro(\"\\\\@secondoftwo\", function (context) {\n  var args = context.consumeArgs(2);\n  return {\n    tokens: args[1],\n    numArgs: 0\n  };\n}); // LaTeX's \\@ifnextchar{#1}{#2}{#3} looks ahead to the next (unexpanded)\n// symbol that isn't a space, consuming any spaces but not consuming the\n// first nonspace character.  If that nonspace character matches #1, then\n// the macro expands to #2; otherwise, it expands to #3.\n\ndefineMacro(\"\\\\@ifnextchar\", function (context) {\n  var args = context.consumeArgs(3); // symbol, if, else\n\n  context.consumeSpaces();\n  var nextToken = context.future();\n\n  if (args[0].length === 1 && args[0][0].text === nextToken.text) {\n    return {\n      tokens: args[1],\n      numArgs: 0\n    };\n  } else {\n    return {\n      tokens: args[2],\n      numArgs: 0\n    };\n  }\n}); // LaTeX's \\@ifstar{#1}{#2} looks ahead to the next (unexpanded) symbol.\n// If it is `*`, then it consumes the symbol, and the macro expands to #1;\n// otherwise, the macro expands to #2 (without consuming the symbol).\n// TeX source: \\def\\@ifstar#1{\\@ifnextchar *{\\@firstoftwo{#1}}}\n\ndefineMacro(\"\\\\@ifstar\", \"\\\\@ifnextchar *{\\\\@firstoftwo{#1}}\"); // LaTeX's \\TextOrMath{#1}{#2} expands to #1 in text mode, #2 in math mode\n\ndefineMacro(\"\\\\TextOrMath\", function (context) {\n  var args = context.consumeArgs(2);\n\n  if (context.mode === 'text') {\n    return {\n      tokens: args[0],\n      numArgs: 0\n    };\n  } else {\n    return {\n      tokens: args[1],\n      numArgs: 0\n    };\n  }\n}); // Lookup table for parsing numbers in base 8 through 16\n\nvar digitToNumber = {\n  \"0\": 0,\n  \"1\": 1,\n  \"2\": 2,\n  \"3\": 3,\n  \"4\": 4,\n  \"5\": 5,\n  \"6\": 6,\n  \"7\": 7,\n  \"8\": 8,\n  \"9\": 9,\n  \"a\": 10,\n  \"A\": 10,\n  \"b\": 11,\n  \"B\": 11,\n  \"c\": 12,\n  \"C\": 12,\n  \"d\": 13,\n  \"D\": 13,\n  \"e\": 14,\n  \"E\": 14,\n  \"f\": 15,\n  \"F\": 15\n}; // TeX \\char makes a literal character (catcode 12) using the following forms:\n// (see The TeXBook, p. 43)\n//   \\char123  -- decimal\n//   \\char'123 -- octal\n//   \\char\"123 -- hex\n//   \\char`x   -- character that can be written (i.e. isn't active)\n//   \\char`\\x  -- character that cannot be written (e.g. %)\n// These all refer to characters from the font, so we turn them into special\n// calls to a function \\@char dealt with in the Parser.\n\ndefineMacro(\"\\\\char\", function (context) {\n  var token = context.popToken();\n  var base;\n  var number = '';\n\n  if (token.text === \"'\") {\n    base = 8;\n    token = context.popToken();\n  } else if (token.text === '\"') {\n    base = 16;\n    token = context.popToken();\n  } else if (token.text === \"`\") {\n    token = context.popToken();\n\n    if (token.text[0] === \"\\\\\") {\n      number = token.text.charCodeAt(1);\n    } else if (token.text === \"EOF\") {\n      throw new ParseError(\"\\\\char` missing argument\");\n    } else {\n      number = token.text.charCodeAt(0);\n    }\n  } else {\n    base = 10;\n  }\n\n  if (base) {\n    // Parse a number in the given base, starting with first `token`.\n    number = digitToNumber[token.text];\n\n    if (number == null || number >= base) {\n      throw new ParseError(\"Invalid base-\" + base + \" digit \" + token.text);\n    }\n\n    var digit;\n\n    while ((digit = digitToNumber[context.future().text]) != null && digit < base) {\n      number *= base;\n      number += digit;\n      context.popToken();\n    }\n  }\n\n  return \"\\\\@char{\" + number + \"}\";\n}); // \\newcommand{\\macro}[args]{definition}\n// \\renewcommand{\\macro}[args]{definition}\n// TODO: Optional arguments: \\newcommand{\\macro}[args][default]{definition}\n\nvar newcommand = (context, existsOK, nonexistsOK, skipIfExists) => {\n  var arg = context.consumeArg().tokens;\n\n  if (arg.length !== 1) {\n    throw new ParseError(\"\\\\newcommand's first argument must be a macro name\");\n  }\n\n  var name = arg[0].text;\n  var exists = context.isDefined(name);\n\n  if (exists && !existsOK) {\n    throw new ParseError(\"\\\\newcommand{\" + name + \"} attempting to redefine \" + (name + \"; use \\\\renewcommand\"));\n  }\n\n  if (!exists && !nonexistsOK) {\n    throw new ParseError(\"\\\\renewcommand{\" + name + \"} when command \" + name + \" \" + \"does not yet exist; use \\\\newcommand\");\n  }\n\n  var numArgs = 0;\n  arg = context.consumeArg().tokens;\n\n  if (arg.length === 1 && arg[0].text === \"[\") {\n    var argText = '';\n    var token = context.expandNextToken();\n\n    while (token.text !== \"]\" && token.text !== \"EOF\") {\n      // TODO: Should properly expand arg, e.g., ignore {}s\n      argText += token.text;\n      token = context.expandNextToken();\n    }\n\n    if (!argText.match(/^\\s*[0-9]+\\s*$/)) {\n      throw new ParseError(\"Invalid number of arguments: \" + argText);\n    }\n\n    numArgs = parseInt(argText);\n    arg = context.consumeArg().tokens;\n  }\n\n  if (!(exists && skipIfExists)) {\n    // Final arg is the expansion of the macro\n    context.macros.set(name, {\n      tokens: arg,\n      numArgs\n    });\n  }\n\n  return '';\n};\n\ndefineMacro(\"\\\\newcommand\", context => newcommand(context, false, true, false));\ndefineMacro(\"\\\\renewcommand\", context => newcommand(context, true, false, false));\ndefineMacro(\"\\\\providecommand\", context => newcommand(context, true, true, true)); // terminal (console) tools\n\ndefineMacro(\"\\\\message\", context => {\n  var arg = context.consumeArgs(1)[0]; // eslint-disable-next-line no-console\n\n  console.log(arg.reverse().map(token => token.text).join(\"\"));\n  return '';\n});\ndefineMacro(\"\\\\errmessage\", context => {\n  var arg = context.consumeArgs(1)[0]; // eslint-disable-next-line no-console\n\n  console.error(arg.reverse().map(token => token.text).join(\"\"));\n  return '';\n});\ndefineMacro(\"\\\\show\", context => {\n  var tok = context.popToken();\n  var name = tok.text; // eslint-disable-next-line no-console\n\n  console.log(tok, context.macros.get(name), functions[name], symbols.math[name], symbols.text[name]);\n  return '';\n}); //////////////////////////////////////////////////////////////////////\n// Grouping\n// \\let\\bgroup={ \\let\\egroup=}\n\ndefineMacro(\"\\\\bgroup\", \"{\");\ndefineMacro(\"\\\\egroup\", \"}\"); // Symbols from latex.ltx:\n// \\def~{\\nobreakspace{}}\n// \\def\\lq{`}\n// \\def\\rq{'}\n// \\def \\aa {\\r a}\n// \\def \\AA {\\r A}\n\ndefineMacro(\"~\", \"\\\\nobreakspace\");\ndefineMacro(\"\\\\lq\", \"`\");\ndefineMacro(\"\\\\rq\", \"'\");\ndefineMacro(\"\\\\aa\", \"\\\\r a\");\ndefineMacro(\"\\\\AA\", \"\\\\r A\"); // Copyright (C) and registered (R) symbols. Use raw symbol in MathML.\n// \\DeclareTextCommandDefault{\\textcopyright}{\\textcircled{c}}\n// \\DeclareTextCommandDefault{\\textregistered}{\\textcircled{%\n//      \\check@mathfonts\\fontsize\\sf@size\\z@\\math@fontsfalse\\selectfont R}}\n// \\DeclareRobustCommand{\\copyright}{%\n//    \\ifmmode{\\nfss@text{\\textcopyright}}\\else\\textcopyright\\fi}\n\ndefineMacro(\"\\\\textcopyright\", \"\\\\html@mathml{\\\\textcircled{c}}{\\\\char`\u00A9}\");\ndefineMacro(\"\\\\copyright\", \"\\\\TextOrMath{\\\\textcopyright}{\\\\text{\\\\textcopyright}}\");\ndefineMacro(\"\\\\textregistered\", \"\\\\html@mathml{\\\\textcircled{\\\\scriptsize R}}{\\\\char`\u00AE}\"); // Characters omitted from Unicode range 1D400\u20131D7FF\n\ndefineMacro(\"\\u212C\", \"\\\\mathscr{B}\"); // script\n\ndefineMacro(\"\\u2130\", \"\\\\mathscr{E}\");\ndefineMacro(\"\\u2131\", \"\\\\mathscr{F}\");\ndefineMacro(\"\\u210B\", \"\\\\mathscr{H}\");\ndefineMacro(\"\\u2110\", \"\\\\mathscr{I}\");\ndefineMacro(\"\\u2112\", \"\\\\mathscr{L}\");\ndefineMacro(\"\\u2133\", \"\\\\mathscr{M}\");\ndefineMacro(\"\\u211B\", \"\\\\mathscr{R}\");\ndefineMacro(\"\\u212D\", \"\\\\mathfrak{C}\"); // Fraktur\n\ndefineMacro(\"\\u210C\", \"\\\\mathfrak{H}\");\ndefineMacro(\"\\u2128\", \"\\\\mathfrak{Z}\"); // Define \\Bbbk with a macro that works in both HTML and MathML.\n\ndefineMacro(\"\\\\Bbbk\", \"\\\\Bbb{k}\"); // Unicode middle dot\n// The KaTeX fonts do not contain U+00B7. Instead, \\cdotp displays\n// the dot at U+22C5 and gives it punct spacing.\n\ndefineMacro(\"\\u00b7\", \"\\\\cdotp\"); // \\llap and \\rlap render their contents in text mode\n\ndefineMacro(\"\\\\llap\", \"\\\\mathllap{\\\\textrm{#1}}\");\ndefineMacro(\"\\\\rlap\", \"\\\\mathrlap{\\\\textrm{#1}}\");\ndefineMacro(\"\\\\clap\", \"\\\\mathclap{\\\\textrm{#1}}\"); // \\mathstrut from the TeXbook, p 360\n\ndefineMacro(\"\\\\mathstrut\", \"\\\\vphantom{(}\"); // \\underbar from TeXbook p 353\n\ndefineMacro(\"\\\\underbar\", \"\\\\underline{\\\\text{#1}}\"); // \\not is defined by base/fontmath.ltx via\n// \\DeclareMathSymbol{\\not}{\\mathrel}{symbols}{\"36}\n// It's thus treated like a \\mathrel, but defined by a symbol that has zero\n// width but extends to the right.  We use \\rlap to get that spacing.\n// For MathML we write U+0338 here. buildMathML.js will then do the overlay.\n\ndefineMacro(\"\\\\not\", '\\\\html@mathml{\\\\mathrel{\\\\mathrlap\\\\@not}}{\\\\char\"338}'); // Negated symbols from base/fontmath.ltx:\n// \\def\\neq{\\not=} \\let\\ne=\\neq\n// \\DeclareRobustCommand\n//   \\notin{\\mathrel{\\m@th\\mathpalette\\c@ncel\\in}}\n// \\def\\c@ncel#1#2{\\m@th\\ooalign{$\\hfil#1\\mkern1mu/\\hfil$\\crcr$#1#2$}}\n\ndefineMacro(\"\\\\neq\", \"\\\\html@mathml{\\\\mathrel{\\\\not=}}{\\\\mathrel{\\\\char`\u2260}}\");\ndefineMacro(\"\\\\ne\", \"\\\\neq\");\ndefineMacro(\"\\u2260\", \"\\\\neq\");\ndefineMacro(\"\\\\notin\", \"\\\\html@mathml{\\\\mathrel{{\\\\in}\\\\mathllap{/\\\\mskip1mu}}}\" + \"{\\\\mathrel{\\\\char`\u2209}}\");\ndefineMacro(\"\\u2209\", \"\\\\notin\"); // Unicode stacked relations\n\ndefineMacro(\"\\u2258\", \"\\\\html@mathml{\" + \"\\\\mathrel{=\\\\kern{-1em}\\\\raisebox{0.4em}{$\\\\scriptsize\\\\frown$}}\" + \"}{\\\\mathrel{\\\\char`\\u2258}}\");\ndefineMacro(\"\\u2259\", \"\\\\html@mathml{\\\\stackrel{\\\\tiny\\\\wedge}{=}}{\\\\mathrel{\\\\char`\\u2258}}\");\ndefineMacro(\"\\u225A\", \"\\\\html@mathml{\\\\stackrel{\\\\tiny\\\\vee}{=}}{\\\\mathrel{\\\\char`\\u225A}}\");\ndefineMacro(\"\\u225B\", \"\\\\html@mathml{\\\\stackrel{\\\\scriptsize\\\\star}{=}}\" + \"{\\\\mathrel{\\\\char`\\u225B}}\");\ndefineMacro(\"\\u225D\", \"\\\\html@mathml{\\\\stackrel{\\\\tiny\\\\mathrm{def}}{=}}\" + \"{\\\\mathrel{\\\\char`\\u225D}}\");\ndefineMacro(\"\\u225E\", \"\\\\html@mathml{\\\\stackrel{\\\\tiny\\\\mathrm{m}}{=}}\" + \"{\\\\mathrel{\\\\char`\\u225E}}\");\ndefineMacro(\"\\u225F\", \"\\\\html@mathml{\\\\stackrel{\\\\tiny?}{=}}{\\\\mathrel{\\\\char`\\u225F}}\"); // Misc Unicode\n\ndefineMacro(\"\\u27C2\", \"\\\\perp\");\ndefineMacro(\"\\u203C\", \"\\\\mathclose{!\\\\mkern-0.8mu!}\");\ndefineMacro(\"\\u220C\", \"\\\\notni\");\ndefineMacro(\"\\u231C\", \"\\\\ulcorner\");\ndefineMacro(\"\\u231D\", \"\\\\urcorner\");\ndefineMacro(\"\\u231E\", \"\\\\llcorner\");\ndefineMacro(\"\\u231F\", \"\\\\lrcorner\");\ndefineMacro(\"\\u00A9\", \"\\\\copyright\");\ndefineMacro(\"\\u00AE\", \"\\\\textregistered\");\ndefineMacro(\"\\uFE0F\", \"\\\\textregistered\"); // The KaTeX fonts have corners at codepoints that don't match Unicode.\n// For MathML purposes, use the Unicode code point.\n\ndefineMacro(\"\\\\ulcorner\", \"\\\\html@mathml{\\\\@ulcorner}{\\\\mathop{\\\\char\\\"231c}}\");\ndefineMacro(\"\\\\urcorner\", \"\\\\html@mathml{\\\\@urcorner}{\\\\mathop{\\\\char\\\"231d}}\");\ndefineMacro(\"\\\\llcorner\", \"\\\\html@mathml{\\\\@llcorner}{\\\\mathop{\\\\char\\\"231e}}\");\ndefineMacro(\"\\\\lrcorner\", \"\\\\html@mathml{\\\\@lrcorner}{\\\\mathop{\\\\char\\\"231f}}\"); //////////////////////////////////////////////////////////////////////\n// LaTeX_2\u03B5\n// \\vdots{\\vbox{\\baselineskip4\\p@  \\lineskiplimit\\z@\n// \\kern6\\p@\\hbox{.}\\hbox{.}\\hbox{.}}}\n// We'll call \\varvdots, which gets a glyph from symbols.js.\n// The zero-width rule gets us an equivalent to the vertical 6pt kern.\n\ndefineMacro(\"\\\\vdots\", \"{\\\\varvdots\\\\rule{0pt}{15pt}}\");\ndefineMacro(\"\\u22ee\", \"\\\\vdots\"); //////////////////////////////////////////////////////////////////////\n// amsmath.sty\n// http://mirrors.concertpass.com/tex-archive/macros/latex/required/amsmath/amsmath.pdf\n// Italic Greek capital letters.  AMS defines these with \\DeclareMathSymbol,\n// but they are equivalent to \\mathit{\\Letter}.\n\ndefineMacro(\"\\\\varGamma\", \"\\\\mathit{\\\\Gamma}\");\ndefineMacro(\"\\\\varDelta\", \"\\\\mathit{\\\\Delta}\");\ndefineMacro(\"\\\\varTheta\", \"\\\\mathit{\\\\Theta}\");\ndefineMacro(\"\\\\varLambda\", \"\\\\mathit{\\\\Lambda}\");\ndefineMacro(\"\\\\varXi\", \"\\\\mathit{\\\\Xi}\");\ndefineMacro(\"\\\\varPi\", \"\\\\mathit{\\\\Pi}\");\ndefineMacro(\"\\\\varSigma\", \"\\\\mathit{\\\\Sigma}\");\ndefineMacro(\"\\\\varUpsilon\", \"\\\\mathit{\\\\Upsilon}\");\ndefineMacro(\"\\\\varPhi\", \"\\\\mathit{\\\\Phi}\");\ndefineMacro(\"\\\\varPsi\", \"\\\\mathit{\\\\Psi}\");\ndefineMacro(\"\\\\varOmega\", \"\\\\mathit{\\\\Omega}\"); //\\newcommand{\\substack}[1]{\\subarray{c}#1\\endsubarray}\n\ndefineMacro(\"\\\\substack\", \"\\\\begin{subarray}{c}#1\\\\end{subarray}\"); // \\renewcommand{\\colon}{\\nobreak\\mskip2mu\\mathpunct{}\\nonscript\n// \\mkern-\\thinmuskip{:}\\mskip6muplus1mu\\relax}\n\ndefineMacro(\"\\\\colon\", \"\\\\nobreak\\\\mskip2mu\\\\mathpunct{}\" + \"\\\\mathchoice{\\\\mkern-3mu}{\\\\mkern-3mu}{}{}{:}\\\\mskip6mu\\\\relax\"); // \\newcommand{\\boxed}[1]{\\fbox{\\m@th$\\displaystyle#1$}}\n\ndefineMacro(\"\\\\boxed\", \"\\\\fbox{$\\\\displaystyle{#1}$}\"); // \\def\\iff{\\DOTSB\\;\\Longleftrightarrow\\;}\n// \\def\\implies{\\DOTSB\\;\\Longrightarrow\\;}\n// \\def\\impliedby{\\DOTSB\\;\\Longleftarrow\\;}\n\ndefineMacro(\"\\\\iff\", \"\\\\DOTSB\\\\;\\\\Longleftrightarrow\\\\;\");\ndefineMacro(\"\\\\implies\", \"\\\\DOTSB\\\\;\\\\Longrightarrow\\\\;\");\ndefineMacro(\"\\\\impliedby\", \"\\\\DOTSB\\\\;\\\\Longleftarrow\\\\;\"); // \\def\\dddot#1{{\\mathop{#1}\\limits^{\\vbox to-1.4\\ex@{\\kern-\\tw@\\ex@\n//  \\hbox{\\normalfont ...}\\vss}}}}\n// We use \\overset which avoids the vertical shift of \\mathop.\n\ndefineMacro(\"\\\\dddot\", \"{\\\\overset{\\\\raisebox{-0.1ex}{\\\\normalsize ...}}{#1}}\");\ndefineMacro(\"\\\\ddddot\", \"{\\\\overset{\\\\raisebox{-0.1ex}{\\\\normalsize ....}}{#1}}\"); // AMSMath's automatic \\dots, based on \\mdots@@ macro.\n\nvar dotsByToken = {\n  ',': '\\\\dotsc',\n  '\\\\not': '\\\\dotsb',\n  // \\keybin@ checks for the following:\n  '+': '\\\\dotsb',\n  '=': '\\\\dotsb',\n  '<': '\\\\dotsb',\n  '>': '\\\\dotsb',\n  '-': '\\\\dotsb',\n  '*': '\\\\dotsb',\n  ':': '\\\\dotsb',\n  // Symbols whose definition starts with \\DOTSB:\n  '\\\\DOTSB': '\\\\dotsb',\n  '\\\\coprod': '\\\\dotsb',\n  '\\\\bigvee': '\\\\dotsb',\n  '\\\\bigwedge': '\\\\dotsb',\n  '\\\\biguplus': '\\\\dotsb',\n  '\\\\bigcap': '\\\\dotsb',\n  '\\\\bigcup': '\\\\dotsb',\n  '\\\\prod': '\\\\dotsb',\n  '\\\\sum': '\\\\dotsb',\n  '\\\\bigotimes': '\\\\dotsb',\n  '\\\\bigoplus': '\\\\dotsb',\n  '\\\\bigodot': '\\\\dotsb',\n  '\\\\bigsqcup': '\\\\dotsb',\n  '\\\\And': '\\\\dotsb',\n  '\\\\longrightarrow': '\\\\dotsb',\n  '\\\\Longrightarrow': '\\\\dotsb',\n  '\\\\longleftarrow': '\\\\dotsb',\n  '\\\\Longleftarrow': '\\\\dotsb',\n  '\\\\longleftrightarrow': '\\\\dotsb',\n  '\\\\Longleftrightarrow': '\\\\dotsb',\n  '\\\\mapsto': '\\\\dotsb',\n  '\\\\longmapsto': '\\\\dotsb',\n  '\\\\hookrightarrow': '\\\\dotsb',\n  '\\\\doteq': '\\\\dotsb',\n  // Symbols whose definition starts with \\mathbin:\n  '\\\\mathbin': '\\\\dotsb',\n  // Symbols whose definition starts with \\mathrel:\n  '\\\\mathrel': '\\\\dotsb',\n  '\\\\relbar': '\\\\dotsb',\n  '\\\\Relbar': '\\\\dotsb',\n  '\\\\xrightarrow': '\\\\dotsb',\n  '\\\\xleftarrow': '\\\\dotsb',\n  // Symbols whose definition starts with \\DOTSI:\n  '\\\\DOTSI': '\\\\dotsi',\n  '\\\\int': '\\\\dotsi',\n  '\\\\oint': '\\\\dotsi',\n  '\\\\iint': '\\\\dotsi',\n  '\\\\iiint': '\\\\dotsi',\n  '\\\\iiiint': '\\\\dotsi',\n  '\\\\idotsint': '\\\\dotsi',\n  // Symbols whose definition starts with \\DOTSX:\n  '\\\\DOTSX': '\\\\dotsx'\n};\ndefineMacro(\"\\\\dots\", function (context) {\n  // TODO: If used in text mode, should expand to \\textellipsis.\n  // However, in KaTeX, \\textellipsis and \\ldots behave the same\n  // (in text mode), and it's unlikely we'd see any of the math commands\n  // that affect the behavior of \\dots when in text mode.  So fine for now\n  // (until we support \\ifmmode ... \\else ... \\fi).\n  var thedots = '\\\\dotso';\n  var next = context.expandAfterFuture().text;\n\n  if (next in dotsByToken) {\n    thedots = dotsByToken[next];\n  } else if (next.slice(0, 4) === '\\\\not') {\n    thedots = '\\\\dotsb';\n  } else if (next in symbols.math) {\n    if (utils.contains(['bin', 'rel'], symbols.math[next].group)) {\n      thedots = '\\\\dotsb';\n    }\n  }\n\n  return thedots;\n});\nvar spaceAfterDots = {\n  // \\rightdelim@ checks for the following:\n  ')': true,\n  ']': true,\n  '\\\\rbrack': true,\n  '\\\\}': true,\n  '\\\\rbrace': true,\n  '\\\\rangle': true,\n  '\\\\rceil': true,\n  '\\\\rfloor': true,\n  '\\\\rgroup': true,\n  '\\\\rmoustache': true,\n  '\\\\right': true,\n  '\\\\bigr': true,\n  '\\\\biggr': true,\n  '\\\\Bigr': true,\n  '\\\\Biggr': true,\n  // \\extra@ also tests for the following:\n  '$': true,\n  // \\extrap@ checks for the following:\n  ';': true,\n  '.': true,\n  ',': true\n};\ndefineMacro(\"\\\\dotso\", function (context) {\n  var next = context.future().text;\n\n  if (next in spaceAfterDots) {\n    return \"\\\\ldots\\\\,\";\n  } else {\n    return \"\\\\ldots\";\n  }\n});\ndefineMacro(\"\\\\dotsc\", function (context) {\n  var next = context.future().text; // \\dotsc uses \\extra@ but not \\extrap@, instead specially checking for\n  // ';' and '.', but doesn't check for ','.\n\n  if (next in spaceAfterDots && next !== ',') {\n    return \"\\\\ldots\\\\,\";\n  } else {\n    return \"\\\\ldots\";\n  }\n});\ndefineMacro(\"\\\\cdots\", function (context) {\n  var next = context.future().text;\n\n  if (next in spaceAfterDots) {\n    return \"\\\\@cdots\\\\,\";\n  } else {\n    return \"\\\\@cdots\";\n  }\n});\ndefineMacro(\"\\\\dotsb\", \"\\\\cdots\");\ndefineMacro(\"\\\\dotsm\", \"\\\\cdots\");\ndefineMacro(\"\\\\dotsi\", \"\\\\!\\\\cdots\"); // amsmath doesn't actually define \\dotsx, but \\dots followed by a macro\n// starting with \\DOTSX implies \\dotso, and then \\extra@ detects this case\n// and forces the added `\\,`.\n\ndefineMacro(\"\\\\dotsx\", \"\\\\ldots\\\\,\"); // \\let\\DOTSI\\relax\n// \\let\\DOTSB\\relax\n// \\let\\DOTSX\\relax\n\ndefineMacro(\"\\\\DOTSI\", \"\\\\relax\");\ndefineMacro(\"\\\\DOTSB\", \"\\\\relax\");\ndefineMacro(\"\\\\DOTSX\", \"\\\\relax\"); // Spacing, based on amsmath.sty's override of LaTeX defaults\n// \\DeclareRobustCommand{\\tmspace}[3]{%\n//   \\ifmmode\\mskip#1#2\\else\\kern#1#3\\fi\\relax}\n\ndefineMacro(\"\\\\tmspace\", \"\\\\TextOrMath{\\\\kern#1#3}{\\\\mskip#1#2}\\\\relax\"); // \\renewcommand{\\,}{\\tmspace+\\thinmuskip{.1667em}}\n// TODO: math mode should use \\thinmuskip\n\ndefineMacro(\"\\\\,\", \"\\\\tmspace+{3mu}{.1667em}\"); // \\let\\thinspace\\,\n\ndefineMacro(\"\\\\thinspace\", \"\\\\,\"); // \\def\\>{\\mskip\\medmuskip}\n// \\renewcommand{\\:}{\\tmspace+\\medmuskip{.2222em}}\n// TODO: \\> and math mode of \\: should use \\medmuskip = 4mu plus 2mu minus 4mu\n\ndefineMacro(\"\\\\>\", \"\\\\mskip{4mu}\");\ndefineMacro(\"\\\\:\", \"\\\\tmspace+{4mu}{.2222em}\"); // \\let\\medspace\\:\n\ndefineMacro(\"\\\\medspace\", \"\\\\:\"); // \\renewcommand{\\;}{\\tmspace+\\thickmuskip{.2777em}}\n// TODO: math mode should use \\thickmuskip = 5mu plus 5mu\n\ndefineMacro(\"\\\\;\", \"\\\\tmspace+{5mu}{.2777em}\"); // \\let\\thickspace\\;\n\ndefineMacro(\"\\\\thickspace\", \"\\\\;\"); // \\renewcommand{\\!}{\\tmspace-\\thinmuskip{.1667em}}\n// TODO: math mode should use \\thinmuskip\n\ndefineMacro(\"\\\\!\", \"\\\\tmspace-{3mu}{.1667em}\"); // \\let\\negthinspace\\!\n\ndefineMacro(\"\\\\negthinspace\", \"\\\\!\"); // \\newcommand{\\negmedspace}{\\tmspace-\\medmuskip{.2222em}}\n// TODO: math mode should use \\medmuskip\n\ndefineMacro(\"\\\\negmedspace\", \"\\\\tmspace-{4mu}{.2222em}\"); // \\newcommand{\\negthickspace}{\\tmspace-\\thickmuskip{.2777em}}\n// TODO: math mode should use \\thickmuskip\n\ndefineMacro(\"\\\\negthickspace\", \"\\\\tmspace-{5mu}{.277em}\"); // \\def\\enspace{\\kern.5em }\n\ndefineMacro(\"\\\\enspace\", \"\\\\kern.5em \"); // \\def\\enskip{\\hskip.5em\\relax}\n\ndefineMacro(\"\\\\enskip\", \"\\\\hskip.5em\\\\relax\"); // \\def\\quad{\\hskip1em\\relax}\n\ndefineMacro(\"\\\\quad\", \"\\\\hskip1em\\\\relax\"); // \\def\\qquad{\\hskip2em\\relax}\n\ndefineMacro(\"\\\\qquad\", \"\\\\hskip2em\\\\relax\"); // \\tag@in@display form of \\tag\n\ndefineMacro(\"\\\\tag\", \"\\\\@ifstar\\\\tag@literal\\\\tag@paren\");\ndefineMacro(\"\\\\tag@paren\", \"\\\\tag@literal{({#1})}\");\ndefineMacro(\"\\\\tag@literal\", context => {\n  if (context.macros.get(\"\\\\df@tag\")) {\n    throw new ParseError(\"Multiple \\\\tag\");\n  }\n\n  return \"\\\\gdef\\\\df@tag{\\\\text{#1}}\";\n}); // \\renewcommand{\\bmod}{\\nonscript\\mskip-\\medmuskip\\mkern5mu\\mathbin\n//   {\\operator@font mod}\\penalty900\n//   \\mkern5mu\\nonscript\\mskip-\\medmuskip}\n// \\newcommand{\\pod}[1]{\\allowbreak\n//   \\if@display\\mkern18mu\\else\\mkern8mu\\fi(#1)}\n// \\renewcommand{\\pmod}[1]{\\pod{{\\operator@font mod}\\mkern6mu#1}}\n// \\newcommand{\\mod}[1]{\\allowbreak\\if@display\\mkern18mu\n//   \\else\\mkern12mu\\fi{\\operator@font mod}\\,\\,#1}\n// TODO: math mode should use \\medmuskip = 4mu plus 2mu minus 4mu\n\ndefineMacro(\"\\\\bmod\", \"\\\\mathchoice{\\\\mskip1mu}{\\\\mskip1mu}{\\\\mskip5mu}{\\\\mskip5mu}\" + \"\\\\mathbin{\\\\rm mod}\" + \"\\\\mathchoice{\\\\mskip1mu}{\\\\mskip1mu}{\\\\mskip5mu}{\\\\mskip5mu}\");\ndefineMacro(\"\\\\pod\", \"\\\\allowbreak\" + \"\\\\mathchoice{\\\\mkern18mu}{\\\\mkern8mu}{\\\\mkern8mu}{\\\\mkern8mu}(#1)\");\ndefineMacro(\"\\\\pmod\", \"\\\\pod{{\\\\rm mod}\\\\mkern6mu#1}\");\ndefineMacro(\"\\\\mod\", \"\\\\allowbreak\" + \"\\\\mathchoice{\\\\mkern18mu}{\\\\mkern12mu}{\\\\mkern12mu}{\\\\mkern12mu}\" + \"{\\\\rm mod}\\\\,\\\\,#1\"); //////////////////////////////////////////////////////////////////////\n// LaTeX source2e\n// \\expandafter\\let\\expandafter\\@normalcr\n//     \\csname\\expandafter\\@gobble\\string\\\\ \\endcsname\n// \\DeclareRobustCommand\\newline{\\@normalcr\\relax}\n\ndefineMacro(\"\\\\newline\", \"\\\\\\\\\\\\relax\"); // \\def\\TeX{T\\kern-.1667em\\lower.5ex\\hbox{E}\\kern-.125emX\\@}\n// TODO: Doesn't normally work in math mode because \\@ fails.  KaTeX doesn't\n// support \\@ yet, so that's omitted, and we add \\text so that the result\n// doesn't look funny in math mode.\n\ndefineMacro(\"\\\\TeX\", \"\\\\textrm{\\\\html@mathml{\" + \"T\\\\kern-.1667em\\\\raisebox{-.5ex}{E}\\\\kern-.125emX\" + \"}{TeX}}\"); // \\DeclareRobustCommand{\\LaTeX}{L\\kern-.36em%\n//         {\\sbox\\z@ T%\n//          \\vbox to\\ht\\z@{\\hbox{\\check@mathfonts\n//                               \\fontsize\\sf@size\\z@\n//                               \\math@fontsfalse\\selectfont\n//                               A}%\n//                         \\vss}%\n//         }%\n//         \\kern-.15em%\n//         \\TeX}\n// This code aligns the top of the A with the T (from the perspective of TeX's\n// boxes, though visually the A appears to extend above slightly).\n// We compute the corresponding \\raisebox when A is rendered in \\normalsize\n// \\scriptstyle, which has a scale factor of 0.7 (see Options.js).\n\nvar latexRaiseA = makeEm(fontMetricsData['Main-Regular'][\"T\".charCodeAt(0)][1] - 0.7 * fontMetricsData['Main-Regular'][\"A\".charCodeAt(0)][1]);\ndefineMacro(\"\\\\LaTeX\", \"\\\\textrm{\\\\html@mathml{\" + (\"L\\\\kern-.36em\\\\raisebox{\" + latexRaiseA + \"}{\\\\scriptstyle A}\") + \"\\\\kern-.15em\\\\TeX}{LaTeX}}\"); // New KaTeX logo based on tweaking LaTeX logo\n\ndefineMacro(\"\\\\KaTeX\", \"\\\\textrm{\\\\html@mathml{\" + (\"K\\\\kern-.17em\\\\raisebox{\" + latexRaiseA + \"}{\\\\scriptstyle A}\") + \"\\\\kern-.15em\\\\TeX}{KaTeX}}\"); // \\DeclareRobustCommand\\hspace{\\@ifstar\\@hspacer\\@hspace}\n// \\def\\@hspace#1{\\hskip  #1\\relax}\n// \\def\\@hspacer#1{\\vrule \\@width\\z@\\nobreak\n//                 \\hskip #1\\hskip \\z@skip}\n\ndefineMacro(\"\\\\hspace\", \"\\\\@ifstar\\\\@hspacer\\\\@hspace\");\ndefineMacro(\"\\\\@hspace\", \"\\\\hskip #1\\\\relax\");\ndefineMacro(\"\\\\@hspacer\", \"\\\\rule{0pt}{0pt}\\\\hskip #1\\\\relax\"); //////////////////////////////////////////////////////////////////////\n// mathtools.sty\n//\\providecommand\\ordinarycolon{:}\n\ndefineMacro(\"\\\\ordinarycolon\", \":\"); //\\def\\vcentcolon{\\mathrel{\\mathop\\ordinarycolon}}\n//TODO(edemaine): Not yet centered. Fix via \\raisebox or #726\n\ndefineMacro(\"\\\\vcentcolon\", \"\\\\mathrel{\\\\mathop\\\\ordinarycolon}\"); // \\providecommand*\\dblcolon{\\vcentcolon\\mathrel{\\mkern-.9mu}\\vcentcolon}\n\ndefineMacro(\"\\\\dblcolon\", \"\\\\html@mathml{\" + \"\\\\mathrel{\\\\vcentcolon\\\\mathrel{\\\\mkern-.9mu}\\\\vcentcolon}}\" + \"{\\\\mathop{\\\\char\\\"2237}}\"); // \\providecommand*\\coloneqq{\\vcentcolon\\mathrel{\\mkern-1.2mu}=}\n\ndefineMacro(\"\\\\coloneqq\", \"\\\\html@mathml{\" + \"\\\\mathrel{\\\\vcentcolon\\\\mathrel{\\\\mkern-1.2mu}=}}\" + \"{\\\\mathop{\\\\char\\\"2254}}\"); // \u2254\n// \\providecommand*\\Coloneqq{\\dblcolon\\mathrel{\\mkern-1.2mu}=}\n\ndefineMacro(\"\\\\Coloneqq\", \"\\\\html@mathml{\" + \"\\\\mathrel{\\\\dblcolon\\\\mathrel{\\\\mkern-1.2mu}=}}\" + \"{\\\\mathop{\\\\char\\\"2237\\\\char\\\"3d}}\"); // \\providecommand*\\coloneq{\\vcentcolon\\mathrel{\\mkern-1.2mu}\\mathrel{-}}\n\ndefineMacro(\"\\\\coloneq\", \"\\\\html@mathml{\" + \"\\\\mathrel{\\\\vcentcolon\\\\mathrel{\\\\mkern-1.2mu}\\\\mathrel{-}}}\" + \"{\\\\mathop{\\\\char\\\"3a\\\\char\\\"2212}}\"); // \\providecommand*\\Coloneq{\\dblcolon\\mathrel{\\mkern-1.2mu}\\mathrel{-}}\n\ndefineMacro(\"\\\\Coloneq\", \"\\\\html@mathml{\" + \"\\\\mathrel{\\\\dblcolon\\\\mathrel{\\\\mkern-1.2mu}\\\\mathrel{-}}}\" + \"{\\\\mathop{\\\\char\\\"2237\\\\char\\\"2212}}\"); // \\providecommand*\\eqqcolon{=\\mathrel{\\mkern-1.2mu}\\vcentcolon}\n\ndefineMacro(\"\\\\eqqcolon\", \"\\\\html@mathml{\" + \"\\\\mathrel{=\\\\mathrel{\\\\mkern-1.2mu}\\\\vcentcolon}}\" + \"{\\\\mathop{\\\\char\\\"2255}}\"); // \u2255\n// \\providecommand*\\Eqqcolon{=\\mathrel{\\mkern-1.2mu}\\dblcolon}\n\ndefineMacro(\"\\\\Eqqcolon\", \"\\\\html@mathml{\" + \"\\\\mathrel{=\\\\mathrel{\\\\mkern-1.2mu}\\\\dblcolon}}\" + \"{\\\\mathop{\\\\char\\\"3d\\\\char\\\"2237}}\"); // \\providecommand*\\eqcolon{\\mathrel{-}\\mathrel{\\mkern-1.2mu}\\vcentcolon}\n\ndefineMacro(\"\\\\eqcolon\", \"\\\\html@mathml{\" + \"\\\\mathrel{\\\\mathrel{-}\\\\mathrel{\\\\mkern-1.2mu}\\\\vcentcolon}}\" + \"{\\\\mathop{\\\\char\\\"2239}}\"); // \\providecommand*\\Eqcolon{\\mathrel{-}\\mathrel{\\mkern-1.2mu}\\dblcolon}\n\ndefineMacro(\"\\\\Eqcolon\", \"\\\\html@mathml{\" + \"\\\\mathrel{\\\\mathrel{-}\\\\mathrel{\\\\mkern-1.2mu}\\\\dblcolon}}\" + \"{\\\\mathop{\\\\char\\\"2212\\\\char\\\"2237}}\"); // \\providecommand*\\colonapprox{\\vcentcolon\\mathrel{\\mkern-1.2mu}\\approx}\n\ndefineMacro(\"\\\\colonapprox\", \"\\\\html@mathml{\" + \"\\\\mathrel{\\\\vcentcolon\\\\mathrel{\\\\mkern-1.2mu}\\\\approx}}\" + \"{\\\\mathop{\\\\char\\\"3a\\\\char\\\"2248}}\"); // \\providecommand*\\Colonapprox{\\dblcolon\\mathrel{\\mkern-1.2mu}\\approx}\n\ndefineMacro(\"\\\\Colonapprox\", \"\\\\html@mathml{\" + \"\\\\mathrel{\\\\dblcolon\\\\mathrel{\\\\mkern-1.2mu}\\\\approx}}\" + \"{\\\\mathop{\\\\char\\\"2237\\\\char\\\"2248}}\"); // \\providecommand*\\colonsim{\\vcentcolon\\mathrel{\\mkern-1.2mu}\\sim}\n\ndefineMacro(\"\\\\colonsim\", \"\\\\html@mathml{\" + \"\\\\mathrel{\\\\vcentcolon\\\\mathrel{\\\\mkern-1.2mu}\\\\sim}}\" + \"{\\\\mathop{\\\\char\\\"3a\\\\char\\\"223c}}\"); // \\providecommand*\\Colonsim{\\dblcolon\\mathrel{\\mkern-1.2mu}\\sim}\n\ndefineMacro(\"\\\\Colonsim\", \"\\\\html@mathml{\" + \"\\\\mathrel{\\\\dblcolon\\\\mathrel{\\\\mkern-1.2mu}\\\\sim}}\" + \"{\\\\mathop{\\\\char\\\"2237\\\\char\\\"223c}}\"); // Some Unicode characters are implemented with macros to mathtools functions.\n\ndefineMacro(\"\\u2237\", \"\\\\dblcolon\"); // ::\n\ndefineMacro(\"\\u2239\", \"\\\\eqcolon\"); // -:\n\ndefineMacro(\"\\u2254\", \"\\\\coloneqq\"); // :=\n\ndefineMacro(\"\\u2255\", \"\\\\eqqcolon\"); // =:\n\ndefineMacro(\"\\u2A74\", \"\\\\Coloneqq\"); // ::=\n//////////////////////////////////////////////////////////////////////\n// colonequals.sty\n// Alternate names for mathtools's macros:\n\ndefineMacro(\"\\\\ratio\", \"\\\\vcentcolon\");\ndefineMacro(\"\\\\coloncolon\", \"\\\\dblcolon\");\ndefineMacro(\"\\\\colonequals\", \"\\\\coloneqq\");\ndefineMacro(\"\\\\coloncolonequals\", \"\\\\Coloneqq\");\ndefineMacro(\"\\\\equalscolon\", \"\\\\eqqcolon\");\ndefineMacro(\"\\\\equalscoloncolon\", \"\\\\Eqqcolon\");\ndefineMacro(\"\\\\colonminus\", \"\\\\coloneq\");\ndefineMacro(\"\\\\coloncolonminus\", \"\\\\Coloneq\");\ndefineMacro(\"\\\\minuscolon\", \"\\\\eqcolon\");\ndefineMacro(\"\\\\minuscoloncolon\", \"\\\\Eqcolon\"); // \\colonapprox name is same in mathtools and colonequals.\n\ndefineMacro(\"\\\\coloncolonapprox\", \"\\\\Colonapprox\"); // \\colonsim name is same in mathtools and colonequals.\n\ndefineMacro(\"\\\\coloncolonsim\", \"\\\\Colonsim\"); // Additional macros, implemented by analogy with mathtools definitions:\n\ndefineMacro(\"\\\\simcolon\", \"\\\\mathrel{\\\\sim\\\\mathrel{\\\\mkern-1.2mu}\\\\vcentcolon}\");\ndefineMacro(\"\\\\simcoloncolon\", \"\\\\mathrel{\\\\sim\\\\mathrel{\\\\mkern-1.2mu}\\\\dblcolon}\");\ndefineMacro(\"\\\\approxcolon\", \"\\\\mathrel{\\\\approx\\\\mathrel{\\\\mkern-1.2mu}\\\\vcentcolon}\");\ndefineMacro(\"\\\\approxcoloncolon\", \"\\\\mathrel{\\\\approx\\\\mathrel{\\\\mkern-1.2mu}\\\\dblcolon}\"); // Present in newtxmath, pxfonts and txfonts\n\ndefineMacro(\"\\\\notni\", \"\\\\html@mathml{\\\\not\\\\ni}{\\\\mathrel{\\\\char`\\u220C}}\");\ndefineMacro(\"\\\\limsup\", \"\\\\DOTSB\\\\operatorname*{lim\\\\,sup}\");\ndefineMacro(\"\\\\liminf\", \"\\\\DOTSB\\\\operatorname*{lim\\\\,inf}\"); //////////////////////////////////////////////////////////////////////\n// From amsopn.sty\n\ndefineMacro(\"\\\\injlim\", \"\\\\DOTSB\\\\operatorname*{inj\\\\,lim}\");\ndefineMacro(\"\\\\projlim\", \"\\\\DOTSB\\\\operatorname*{proj\\\\,lim}\");\ndefineMacro(\"\\\\varlimsup\", \"\\\\DOTSB\\\\operatorname*{\\\\overline{lim}}\");\ndefineMacro(\"\\\\varliminf\", \"\\\\DOTSB\\\\operatorname*{\\\\underline{lim}}\");\ndefineMacro(\"\\\\varinjlim\", \"\\\\DOTSB\\\\operatorname*{\\\\underrightarrow{lim}}\");\ndefineMacro(\"\\\\varprojlim\", \"\\\\DOTSB\\\\operatorname*{\\\\underleftarrow{lim}}\"); //////////////////////////////////////////////////////////////////////\n// MathML alternates for KaTeX glyphs in the Unicode private area\n\ndefineMacro(\"\\\\gvertneqq\", \"\\\\html@mathml{\\\\@gvertneqq}{\\u2269}\");\ndefineMacro(\"\\\\lvertneqq\", \"\\\\html@mathml{\\\\@lvertneqq}{\\u2268}\");\ndefineMacro(\"\\\\ngeqq\", \"\\\\html@mathml{\\\\@ngeqq}{\\u2271}\");\ndefineMacro(\"\\\\ngeqslant\", \"\\\\html@mathml{\\\\@ngeqslant}{\\u2271}\");\ndefineMacro(\"\\\\nleqq\", \"\\\\html@mathml{\\\\@nleqq}{\\u2270}\");\ndefineMacro(\"\\\\nleqslant\", \"\\\\html@mathml{\\\\@nleqslant}{\\u2270}\");\ndefineMacro(\"\\\\nshortmid\", \"\\\\html@mathml{\\\\@nshortmid}{\u2224}\");\ndefineMacro(\"\\\\nshortparallel\", \"\\\\html@mathml{\\\\@nshortparallel}{\u2226}\");\ndefineMacro(\"\\\\nsubseteqq\", \"\\\\html@mathml{\\\\@nsubseteqq}{\\u2288}\");\ndefineMacro(\"\\\\nsupseteqq\", \"\\\\html@mathml{\\\\@nsupseteqq}{\\u2289}\");\ndefineMacro(\"\\\\varsubsetneq\", \"\\\\html@mathml{\\\\@varsubsetneq}{\u228A}\");\ndefineMacro(\"\\\\varsubsetneqq\", \"\\\\html@mathml{\\\\@varsubsetneqq}{\u2ACB}\");\ndefineMacro(\"\\\\varsupsetneq\", \"\\\\html@mathml{\\\\@varsupsetneq}{\u228B}\");\ndefineMacro(\"\\\\varsupsetneqq\", \"\\\\html@mathml{\\\\@varsupsetneqq}{\u2ACC}\");\ndefineMacro(\"\\\\imath\", \"\\\\html@mathml{\\\\@imath}{\\u0131}\");\ndefineMacro(\"\\\\jmath\", \"\\\\html@mathml{\\\\@jmath}{\\u0237}\"); //////////////////////////////////////////////////////////////////////\n// stmaryrd and semantic\n// The stmaryrd and semantic packages render the next four items by calling a\n// glyph. Those glyphs do not exist in the KaTeX fonts. Hence the macros.\n\ndefineMacro(\"\\\\llbracket\", \"\\\\html@mathml{\" + \"\\\\mathopen{[\\\\mkern-3.2mu[}}\" + \"{\\\\mathopen{\\\\char`\\u27e6}}\");\ndefineMacro(\"\\\\rrbracket\", \"\\\\html@mathml{\" + \"\\\\mathclose{]\\\\mkern-3.2mu]}}\" + \"{\\\\mathclose{\\\\char`\\u27e7}}\");\ndefineMacro(\"\\u27e6\", \"\\\\llbracket\"); // blackboard bold [\n\ndefineMacro(\"\\u27e7\", \"\\\\rrbracket\"); // blackboard bold ]\n\ndefineMacro(\"\\\\lBrace\", \"\\\\html@mathml{\" + \"\\\\mathopen{\\\\{\\\\mkern-3.2mu[}}\" + \"{\\\\mathopen{\\\\char`\\u2983}}\");\ndefineMacro(\"\\\\rBrace\", \"\\\\html@mathml{\" + \"\\\\mathclose{]\\\\mkern-3.2mu\\\\}}}\" + \"{\\\\mathclose{\\\\char`\\u2984}}\");\ndefineMacro(\"\\u2983\", \"\\\\lBrace\"); // blackboard bold {\n\ndefineMacro(\"\\u2984\", \"\\\\rBrace\"); // blackboard bold }\n// TODO: Create variable sized versions of the last two items. I believe that\n// will require new font glyphs.\n// The stmaryrd function `\\minuso` provides a \"Plimsoll\" symbol that\n// superimposes the characters \\circ and \\mathminus. Used in chemistry.\n\ndefineMacro(\"\\\\minuso\", \"\\\\mathbin{\\\\html@mathml{\" + \"{\\\\mathrlap{\\\\mathchoice{\\\\kern{0.145em}}{\\\\kern{0.145em}}\" + \"{\\\\kern{0.1015em}}{\\\\kern{0.0725em}}\\\\circ}{-}}}\" + \"{\\\\char`\u29B5}}\");\ndefineMacro(\"\u29B5\", \"\\\\minuso\"); //////////////////////////////////////////////////////////////////////\n// texvc.sty\n// The texvc package contains macros available in mediawiki pages.\n// We omit the functions deprecated at\n// https://en.wikipedia.org/wiki/Help:Displaying_a_formula#Deprecated_syntax\n// We also omit texvc's \\O, which conflicts with \\text{\\O}\n\ndefineMacro(\"\\\\darr\", \"\\\\downarrow\");\ndefineMacro(\"\\\\dArr\", \"\\\\Downarrow\");\ndefineMacro(\"\\\\Darr\", \"\\\\Downarrow\");\ndefineMacro(\"\\\\lang\", \"\\\\langle\");\ndefineMacro(\"\\\\rang\", \"\\\\rangle\");\ndefineMacro(\"\\\\uarr\", \"\\\\uparrow\");\ndefineMacro(\"\\\\uArr\", \"\\\\Uparrow\");\ndefineMacro(\"\\\\Uarr\", \"\\\\Uparrow\");\ndefineMacro(\"\\\\N\", \"\\\\mathbb{N}\");\ndefineMacro(\"\\\\R\", \"\\\\mathbb{R}\");\ndefineMacro(\"\\\\Z\", \"\\\\mathbb{Z}\");\ndefineMacro(\"\\\\alef\", \"\\\\aleph\");\ndefineMacro(\"\\\\alefsym\", \"\\\\aleph\");\ndefineMacro(\"\\\\Alpha\", \"\\\\mathrm{A}\");\ndefineMacro(\"\\\\Beta\", \"\\\\mathrm{B}\");\ndefineMacro(\"\\\\bull\", \"\\\\bullet\");\ndefineMacro(\"\\\\Chi\", \"\\\\mathrm{X}\");\ndefineMacro(\"\\\\clubs\", \"\\\\clubsuit\");\ndefineMacro(\"\\\\cnums\", \"\\\\mathbb{C}\");\ndefineMacro(\"\\\\Complex\", \"\\\\mathbb{C}\");\ndefineMacro(\"\\\\Dagger\", \"\\\\ddagger\");\ndefineMacro(\"\\\\diamonds\", \"\\\\diamondsuit\");\ndefineMacro(\"\\\\empty\", \"\\\\emptyset\");\ndefineMacro(\"\\\\Epsilon\", \"\\\\mathrm{E}\");\ndefineMacro(\"\\\\Eta\", \"\\\\mathrm{H}\");\ndefineMacro(\"\\\\exist\", \"\\\\exists\");\ndefineMacro(\"\\\\harr\", \"\\\\leftrightarrow\");\ndefineMacro(\"\\\\hArr\", \"\\\\Leftrightarrow\");\ndefineMacro(\"\\\\Harr\", \"\\\\Leftrightarrow\");\ndefineMacro(\"\\\\hearts\", \"\\\\heartsuit\");\ndefineMacro(\"\\\\image\", \"\\\\Im\");\ndefineMacro(\"\\\\infin\", \"\\\\infty\");\ndefineMacro(\"\\\\Iota\", \"\\\\mathrm{I}\");\ndefineMacro(\"\\\\isin\", \"\\\\in\");\ndefineMacro(\"\\\\Kappa\", \"\\\\mathrm{K}\");\ndefineMacro(\"\\\\larr\", \"\\\\leftarrow\");\ndefineMacro(\"\\\\lArr\", \"\\\\Leftarrow\");\ndefineMacro(\"\\\\Larr\", \"\\\\Leftarrow\");\ndefineMacro(\"\\\\lrarr\", \"\\\\leftrightarrow\");\ndefineMacro(\"\\\\lrArr\", \"\\\\Leftrightarrow\");\ndefineMacro(\"\\\\Lrarr\", \"\\\\Leftrightarrow\");\ndefineMacro(\"\\\\Mu\", \"\\\\mathrm{M}\");\ndefineMacro(\"\\\\natnums\", \"\\\\mathbb{N}\");\ndefineMacro(\"\\\\Nu\", \"\\\\mathrm{N}\");\ndefineMacro(\"\\\\Omicron\", \"\\\\mathrm{O}\");\ndefineMacro(\"\\\\plusmn\", \"\\\\pm\");\ndefineMacro(\"\\\\rarr\", \"\\\\rightarrow\");\ndefineMacro(\"\\\\rArr\", \"\\\\Rightarrow\");\ndefineMacro(\"\\\\Rarr\", \"\\\\Rightarrow\");\ndefineMacro(\"\\\\real\", \"\\\\Re\");\ndefineMacro(\"\\\\reals\", \"\\\\mathbb{R}\");\ndefineMacro(\"\\\\Reals\", \"\\\\mathbb{R}\");\ndefineMacro(\"\\\\Rho\", \"\\\\mathrm{P}\");\ndefineMacro(\"\\\\sdot\", \"\\\\cdot\");\ndefineMacro(\"\\\\sect\", \"\\\\S\");\ndefineMacro(\"\\\\spades\", \"\\\\spadesuit\");\ndefineMacro(\"\\\\sub\", \"\\\\subset\");\ndefineMacro(\"\\\\sube\", \"\\\\subseteq\");\ndefineMacro(\"\\\\supe\", \"\\\\supseteq\");\ndefineMacro(\"\\\\Tau\", \"\\\\mathrm{T}\");\ndefineMacro(\"\\\\thetasym\", \"\\\\vartheta\"); // TODO: defineMacro(\"\\\\varcoppa\", \"\\\\\\mbox{\\\\coppa}\");\n\ndefineMacro(\"\\\\weierp\", \"\\\\wp\");\ndefineMacro(\"\\\\Zeta\", \"\\\\mathrm{Z}\"); //////////////////////////////////////////////////////////////////////\n// statmath.sty\n// https://ctan.math.illinois.edu/macros/latex/contrib/statmath/statmath.pdf\n\ndefineMacro(\"\\\\argmin\", \"\\\\DOTSB\\\\operatorname*{arg\\\\,min}\");\ndefineMacro(\"\\\\argmax\", \"\\\\DOTSB\\\\operatorname*{arg\\\\,max}\");\ndefineMacro(\"\\\\plim\", \"\\\\DOTSB\\\\mathop{\\\\operatorname{plim}}\\\\limits\"); //////////////////////////////////////////////////////////////////////\n// braket.sty\n// http://ctan.math.washington.edu/tex-archive/macros/latex/contrib/braket/braket.pdf\n\ndefineMacro(\"\\\\bra\", \"\\\\mathinner{\\\\langle{#1}|}\");\ndefineMacro(\"\\\\ket\", \"\\\\mathinner{|{#1}\\\\rangle}\");\ndefineMacro(\"\\\\braket\", \"\\\\mathinner{\\\\langle{#1}\\\\rangle}\");\ndefineMacro(\"\\\\Bra\", \"\\\\left\\\\langle#1\\\\right|\");\ndefineMacro(\"\\\\Ket\", \"\\\\left|#1\\\\right\\\\rangle\");\n\nvar braketHelper = one => context => {\n  var left = context.consumeArg().tokens;\n  var middle = context.consumeArg().tokens;\n  var middleDouble = context.consumeArg().tokens;\n  var right = context.consumeArg().tokens;\n  var oldMiddle = context.macros.get(\"|\");\n  var oldMiddleDouble = context.macros.get(\"\\\\|\");\n  context.macros.beginGroup();\n\n  var midMacro = double => context => {\n    if (one) {\n      // Only modify the first instance of | or \\|\n      context.macros.set(\"|\", oldMiddle);\n\n      if (middleDouble.length) {\n        context.macros.set(\"\\\\|\", oldMiddleDouble);\n      }\n    }\n\n    var doubled = double;\n\n    if (!double && middleDouble.length) {\n      // Mimic \\@ifnextchar\n      var nextToken = context.future();\n\n      if (nextToken.text === \"|\") {\n        context.popToken();\n        doubled = true;\n      }\n    }\n\n    return {\n      tokens: doubled ? middleDouble : middle,\n      numArgs: 0\n    };\n  };\n\n  context.macros.set(\"|\", midMacro(false));\n\n  if (middleDouble.length) {\n    context.macros.set(\"\\\\|\", midMacro(true));\n  }\n\n  var arg = context.consumeArg().tokens;\n  var expanded = context.expandTokens([...right, ...arg, ...left // reversed\n  ]);\n  context.macros.endGroup();\n  return {\n    tokens: expanded.reverse(),\n    numArgs: 0\n  };\n};\n\ndefineMacro(\"\\\\bra@ket\", braketHelper(false));\ndefineMacro(\"\\\\bra@set\", braketHelper(true));\ndefineMacro(\"\\\\Braket\", \"\\\\bra@ket{\\\\left\\\\langle}\" + \"{\\\\,\\\\middle\\\\vert\\\\,}{\\\\,\\\\middle\\\\vert\\\\,}{\\\\right\\\\rangle}\");\ndefineMacro(\"\\\\Set\", \"\\\\bra@set{\\\\left\\\\{\\\\:}\" + \"{\\\\;\\\\middle\\\\vert\\\\;}{\\\\;\\\\middle\\\\Vert\\\\;}{\\\\:\\\\right\\\\}}\");\ndefineMacro(\"\\\\set\", \"\\\\bra@set{\\\\{\\\\,}{\\\\mid}{}{\\\\,\\\\}}\"); // has no support for special || or \\|\n//////////////////////////////////////////////////////////////////////\n// actuarialangle.dtx\n\ndefineMacro(\"\\\\angln\", \"{\\\\angl n}\"); // Custom Khan Academy colors, should be moved to an optional package\n\ndefineMacro(\"\\\\blue\", \"\\\\textcolor{##6495ed}{#1}\");\ndefineMacro(\"\\\\orange\", \"\\\\textcolor{##ffa500}{#1}\");\ndefineMacro(\"\\\\pink\", \"\\\\textcolor{##ff00af}{#1}\");\ndefineMacro(\"\\\\red\", \"\\\\textcolor{##df0030}{#1}\");\ndefineMacro(\"\\\\green\", \"\\\\textcolor{##28ae7b}{#1}\");\ndefineMacro(\"\\\\gray\", \"\\\\textcolor{gray}{#1}\");\ndefineMacro(\"\\\\purple\", \"\\\\textcolor{##9d38bd}{#1}\");\ndefineMacro(\"\\\\blueA\", \"\\\\textcolor{##ccfaff}{#1}\");\ndefineMacro(\"\\\\blueB\", \"\\\\textcolor{##80f6ff}{#1}\");\ndefineMacro(\"\\\\blueC\", \"\\\\textcolor{##63d9ea}{#1}\");\ndefineMacro(\"\\\\blueD\", \"\\\\textcolor{##11accd}{#1}\");\ndefineMacro(\"\\\\blueE\", \"\\\\textcolor{##0c7f99}{#1}\");\ndefineMacro(\"\\\\tealA\", \"\\\\textcolor{##94fff5}{#1}\");\ndefineMacro(\"\\\\tealB\", \"\\\\textcolor{##26edd5}{#1}\");\ndefineMacro(\"\\\\tealC\", \"\\\\textcolor{##01d1c1}{#1}\");\ndefineMacro(\"\\\\tealD\", \"\\\\textcolor{##01a995}{#1}\");\ndefineMacro(\"\\\\tealE\", \"\\\\textcolor{##208170}{#1}\");\ndefineMacro(\"\\\\greenA\", \"\\\\textcolor{##b6ffb0}{#1}\");\ndefineMacro(\"\\\\greenB\", \"\\\\textcolor{##8af281}{#1}\");\ndefineMacro(\"\\\\greenC\", \"\\\\textcolor{##74cf70}{#1}\");\ndefineMacro(\"\\\\greenD\", \"\\\\textcolor{##1fab54}{#1}\");\ndefineMacro(\"\\\\greenE\", \"\\\\textcolor{##0d923f}{#1}\");\ndefineMacro(\"\\\\goldA\", \"\\\\textcolor{##ffd0a9}{#1}\");\ndefineMacro(\"\\\\goldB\", \"\\\\textcolor{##ffbb71}{#1}\");\ndefineMacro(\"\\\\goldC\", \"\\\\textcolor{##ff9c39}{#1}\");\ndefineMacro(\"\\\\goldD\", \"\\\\textcolor{##e07d10}{#1}\");\ndefineMacro(\"\\\\goldE\", \"\\\\textcolor{##a75a05}{#1}\");\ndefineMacro(\"\\\\redA\", \"\\\\textcolor{##fca9a9}{#1}\");\ndefineMacro(\"\\\\redB\", \"\\\\textcolor{##ff8482}{#1}\");\ndefineMacro(\"\\\\redC\", \"\\\\textcolor{##f9685d}{#1}\");\ndefineMacro(\"\\\\redD\", \"\\\\textcolor{##e84d39}{#1}\");\ndefineMacro(\"\\\\redE\", \"\\\\textcolor{##bc2612}{#1}\");\ndefineMacro(\"\\\\maroonA\", \"\\\\textcolor{##ffbde0}{#1}\");\ndefineMacro(\"\\\\maroonB\", \"\\\\textcolor{##ff92c6}{#1}\");\ndefineMacro(\"\\\\maroonC\", \"\\\\textcolor{##ed5fa6}{#1}\");\ndefineMacro(\"\\\\maroonD\", \"\\\\textcolor{##ca337c}{#1}\");\ndefineMacro(\"\\\\maroonE\", \"\\\\textcolor{##9e034e}{#1}\");\ndefineMacro(\"\\\\purpleA\", \"\\\\textcolor{##ddd7ff}{#1}\");\ndefineMacro(\"\\\\purpleB\", \"\\\\textcolor{##c6b9fc}{#1}\");\ndefineMacro(\"\\\\purpleC\", \"\\\\textcolor{##aa87ff}{#1}\");\ndefineMacro(\"\\\\purpleD\", \"\\\\textcolor{##7854ab}{#1}\");\ndefineMacro(\"\\\\purpleE\", \"\\\\textcolor{##543b78}{#1}\");\ndefineMacro(\"\\\\mintA\", \"\\\\textcolor{##f5f9e8}{#1}\");\ndefineMacro(\"\\\\mintB\", \"\\\\textcolor{##edf2df}{#1}\");\ndefineMacro(\"\\\\mintC\", \"\\\\textcolor{##e0e5cc}{#1}\");\ndefineMacro(\"\\\\grayA\", \"\\\\textcolor{##f6f7f7}{#1}\");\ndefineMacro(\"\\\\grayB\", \"\\\\textcolor{##f0f1f2}{#1}\");\ndefineMacro(\"\\\\grayC\", \"\\\\textcolor{##e3e5e6}{#1}\");\ndefineMacro(\"\\\\grayD\", \"\\\\textcolor{##d6d8da}{#1}\");\ndefineMacro(\"\\\\grayE\", \"\\\\textcolor{##babec2}{#1}\");\ndefineMacro(\"\\\\grayF\", \"\\\\textcolor{##888d93}{#1}\");\ndefineMacro(\"\\\\grayG\", \"\\\\textcolor{##626569}{#1}\");\ndefineMacro(\"\\\\grayH\", \"\\\\textcolor{##3b3e40}{#1}\");\ndefineMacro(\"\\\\grayI\", \"\\\\textcolor{##21242c}{#1}\");\ndefineMacro(\"\\\\kaBlue\", \"\\\\textcolor{##314453}{#1}\");\ndefineMacro(\"\\\\kaGreen\", \"\\\\textcolor{##71B307}{#1}\");\n\n/**\n * This file contains the \u201Cgullet\u201D where macros are expanded\n * until only non-macro tokens remain.\n */\n// List of commands that act like macros but aren't defined as a macro,\n// function, or symbol.  Used in `isDefined`.\nvar implicitCommands = {\n  \"^\": true,\n  // Parser.js\n  \"_\": true,\n  // Parser.js\n  \"\\\\limits\": true,\n  // Parser.js\n  \"\\\\nolimits\": true // Parser.js\n\n};\nclass MacroExpander {\n  constructor(input, settings, mode) {\n    this.settings = void 0;\n    this.expansionCount = void 0;\n    this.lexer = void 0;\n    this.macros = void 0;\n    this.stack = void 0;\n    this.mode = void 0;\n    this.settings = settings;\n    this.expansionCount = 0;\n    this.feed(input); // Make new global namespace\n\n    this.macros = new Namespace(macros, settings.macros);\n    this.mode = mode;\n    this.stack = []; // contains tokens in REVERSE order\n  }\n  /**\n   * Feed a new input string to the same MacroExpander\n   * (with existing macros etc.).\n   */\n\n\n  feed(input) {\n    this.lexer = new Lexer(input, this.settings);\n  }\n  /**\n   * Switches between \"text\" and \"math\" modes.\n   */\n\n\n  switchMode(newMode) {\n    this.mode = newMode;\n  }\n  /**\n   * Start a new group nesting within all namespaces.\n   */\n\n\n  beginGroup() {\n    this.macros.beginGroup();\n  }\n  /**\n   * End current group nesting within all namespaces.\n   */\n\n\n  endGroup() {\n    this.macros.endGroup();\n  }\n  /**\n   * Ends all currently nested groups (if any), restoring values before the\n   * groups began.  Useful in case of an error in the middle of parsing.\n   */\n\n\n  endGroups() {\n    this.macros.endGroups();\n  }\n  /**\n   * Returns the topmost token on the stack, without expanding it.\n   * Similar in behavior to TeX's `\\futurelet`.\n   */\n\n\n  future() {\n    if (this.stack.length === 0) {\n      this.pushToken(this.lexer.lex());\n    }\n\n    return this.stack[this.stack.length - 1];\n  }\n  /**\n   * Remove and return the next unexpanded token.\n   */\n\n\n  popToken() {\n    this.future(); // ensure non-empty stack\n\n    return this.stack.pop();\n  }\n  /**\n   * Add a given token to the token stack.  In particular, this get be used\n   * to put back a token returned from one of the other methods.\n   */\n\n\n  pushToken(token) {\n    this.stack.push(token);\n  }\n  /**\n   * Append an array of tokens to the token stack.\n   */\n\n\n  pushTokens(tokens) {\n    this.stack.push(...tokens);\n  }\n  /**\n   * Find an macro argument without expanding tokens and append the array of\n   * tokens to the token stack. Uses Token as a container for the result.\n   */\n\n\n  scanArgument(isOptional) {\n    var start;\n    var end;\n    var tokens;\n\n    if (isOptional) {\n      this.consumeSpaces(); // \\@ifnextchar gobbles any space following it\n\n      if (this.future().text !== \"[\") {\n        return null;\n      }\n\n      start = this.popToken(); // don't include [ in tokens\n\n      ({\n        tokens,\n        end\n      } = this.consumeArg([\"]\"]));\n    } else {\n      ({\n        tokens,\n        start,\n        end\n      } = this.consumeArg());\n    } // indicate the end of an argument\n\n\n    this.pushToken(new Token(\"EOF\", end.loc));\n    this.pushTokens(tokens);\n    return start.range(end, \"\");\n  }\n  /**\n   * Consume all following space tokens, without expansion.\n   */\n\n\n  consumeSpaces() {\n    for (;;) {\n      var token = this.future();\n\n      if (token.text === \" \") {\n        this.stack.pop();\n      } else {\n        break;\n      }\n    }\n  }\n  /**\n   * Consume an argument from the token stream, and return the resulting array\n   * of tokens and start/end token.\n   */\n\n\n  consumeArg(delims) {\n    // The argument for a delimited parameter is the shortest (possibly\n    // empty) sequence of tokens with properly nested {...} groups that is\n    // followed ... by this particular list of non-parameter tokens.\n    // The argument for an undelimited parameter is the next nonblank\n    // token, unless that token is \u2018{\u2019, when the argument will be the\n    // entire {...} group that follows.\n    var tokens = [];\n    var isDelimited = delims && delims.length > 0;\n\n    if (!isDelimited) {\n      // Ignore spaces between arguments.  As the TeXbook says:\n      // \"After you have said \u2018\\def\\row#1#2{...}\u2019, you are allowed to\n      //  put spaces between the arguments (e.g., \u2018\\row x n\u2019), because\n      //  TeX doesn\u2019t use single spaces as undelimited arguments.\"\n      this.consumeSpaces();\n    }\n\n    var start = this.future();\n    var tok;\n    var depth = 0;\n    var match = 0;\n\n    do {\n      tok = this.popToken();\n      tokens.push(tok);\n\n      if (tok.text === \"{\") {\n        ++depth;\n      } else if (tok.text === \"}\") {\n        --depth;\n\n        if (depth === -1) {\n          throw new ParseError(\"Extra }\", tok);\n        }\n      } else if (tok.text === \"EOF\") {\n        throw new ParseError(\"Unexpected end of input in a macro argument\" + \", expected '\" + (delims && isDelimited ? delims[match] : \"}\") + \"'\", tok);\n      }\n\n      if (delims && isDelimited) {\n        if ((depth === 0 || depth === 1 && delims[match] === \"{\") && tok.text === delims[match]) {\n          ++match;\n\n          if (match === delims.length) {\n            // don't include delims in tokens\n            tokens.splice(-match, match);\n            break;\n          }\n        } else {\n          match = 0;\n        }\n      }\n    } while (depth !== 0 || isDelimited); // If the argument found ... has the form \u2018{<nested tokens>}\u2019,\n    // ... the outermost braces enclosing the argument are removed\n\n\n    if (start.text === \"{\" && tokens[tokens.length - 1].text === \"}\") {\n      tokens.pop();\n      tokens.shift();\n    }\n\n    tokens.reverse(); // to fit in with stack order\n\n    return {\n      tokens,\n      start,\n      end: tok\n    };\n  }\n  /**\n   * Consume the specified number of (delimited) arguments from the token\n   * stream and return the resulting array of arguments.\n   */\n\n\n  consumeArgs(numArgs, delimiters) {\n    if (delimiters) {\n      if (delimiters.length !== numArgs + 1) {\n        throw new ParseError(\"The length of delimiters doesn't match the number of args!\");\n      }\n\n      var delims = delimiters[0];\n\n      for (var i = 0; i < delims.length; i++) {\n        var tok = this.popToken();\n\n        if (delims[i] !== tok.text) {\n          throw new ParseError(\"Use of the macro doesn't match its definition\", tok);\n        }\n      }\n    }\n\n    var args = [];\n\n    for (var _i = 0; _i < numArgs; _i++) {\n      args.push(this.consumeArg(delimiters && delimiters[_i + 1]).tokens);\n    }\n\n    return args;\n  }\n  /**\n   * Increment `expansionCount` by the specified amount.\n   * Throw an error if it exceeds `maxExpand`.\n   */\n\n\n  countExpansion(amount) {\n    this.expansionCount += amount;\n\n    if (this.expansionCount > this.settings.maxExpand) {\n      throw new ParseError(\"Too many expansions: infinite loop or \" + \"need to increase maxExpand setting\");\n    }\n  }\n  /**\n   * Expand the next token only once if possible.\n   *\n   * If the token is expanded, the resulting tokens will be pushed onto\n   * the stack in reverse order, and the number of such tokens will be\n   * returned.  This number might be zero or positive.\n   *\n   * If not, the return value is `false`, and the next token remains at the\n   * top of the stack.\n   *\n   * In either case, the next token will be on the top of the stack,\n   * or the stack will be empty (in case of empty expansion\n   * and no other tokens).\n   *\n   * Used to implement `expandAfterFuture` and `expandNextToken`.\n   *\n   * If expandableOnly, only expandable tokens are expanded and\n   * an undefined control sequence results in an error.\n   */\n\n\n  expandOnce(expandableOnly) {\n    var topToken = this.popToken();\n    var name = topToken.text;\n    var expansion = !topToken.noexpand ? this._getExpansion(name) : null;\n\n    if (expansion == null || expandableOnly && expansion.unexpandable) {\n      if (expandableOnly && expansion == null && name[0] === \"\\\\\" && !this.isDefined(name)) {\n        throw new ParseError(\"Undefined control sequence: \" + name);\n      }\n\n      this.pushToken(topToken);\n      return false;\n    }\n\n    this.countExpansion(1);\n    var tokens = expansion.tokens;\n    var args = this.consumeArgs(expansion.numArgs, expansion.delimiters);\n\n    if (expansion.numArgs) {\n      // paste arguments in place of the placeholders\n      tokens = tokens.slice(); // make a shallow copy\n\n      for (var i = tokens.length - 1; i >= 0; --i) {\n        var tok = tokens[i];\n\n        if (tok.text === \"#\") {\n          if (i === 0) {\n            throw new ParseError(\"Incomplete placeholder at end of macro body\", tok);\n          }\n\n          tok = tokens[--i]; // next token on stack\n\n          if (tok.text === \"#\") {\n            // ## \u2192 #\n            tokens.splice(i + 1, 1); // drop first #\n          } else if (/^[1-9]$/.test(tok.text)) {\n            // replace the placeholder with the indicated argument\n            tokens.splice(i, 2, ...args[+tok.text - 1]);\n          } else {\n            throw new ParseError(\"Not a valid argument number\", tok);\n          }\n        }\n      }\n    } // Concatenate expansion onto top of stack.\n\n\n    this.pushTokens(tokens);\n    return tokens.length;\n  }\n  /**\n   * Expand the next token only once (if possible), and return the resulting\n   * top token on the stack (without removing anything from the stack).\n   * Similar in behavior to TeX's `\\expandafter\\futurelet`.\n   * Equivalent to expandOnce() followed by future().\n   */\n\n\n  expandAfterFuture() {\n    this.expandOnce();\n    return this.future();\n  }\n  /**\n   * Recursively expand first token, then return first non-expandable token.\n   */\n\n\n  expandNextToken() {\n    for (;;) {\n      if (this.expandOnce() === false) {\n        // fully expanded\n        var token = this.stack.pop(); // the token after \\noexpand is interpreted as if its meaning\n        // were \u2018\\relax\u2019\n\n        if (token.treatAsRelax) {\n          token.text = \"\\\\relax\";\n        }\n\n        return token;\n      }\n    } // Flow unable to figure out that this pathway is impossible.\n    // https://github.com/facebook/flow/issues/4808\n\n\n    throw new Error(); // eslint-disable-line no-unreachable\n  }\n  /**\n   * Fully expand the given macro name and return the resulting list of\n   * tokens, or return `undefined` if no such macro is defined.\n   */\n\n\n  expandMacro(name) {\n    return this.macros.has(name) ? this.expandTokens([new Token(name)]) : undefined;\n  }\n  /**\n   * Fully expand the given token stream and return the resulting list of\n   * tokens.  Note that the input tokens are in reverse order, but the\n   * output tokens are in forward order.\n   */\n\n\n  expandTokens(tokens) {\n    var output = [];\n    var oldStackLength = this.stack.length;\n    this.pushTokens(tokens);\n\n    while (this.stack.length > oldStackLength) {\n      // Expand only expandable tokens\n      if (this.expandOnce(true) === false) {\n        // fully expanded\n        var token = this.stack.pop();\n\n        if (token.treatAsRelax) {\n          // the expansion of \\noexpand is the token itself\n          token.noexpand = false;\n          token.treatAsRelax = false;\n        }\n\n        output.push(token);\n      }\n    } // Count all of these tokens as additional expansions, to prevent\n    // exponential blowup from linearly many \\edef's.\n\n\n    this.countExpansion(output.length);\n    return output;\n  }\n  /**\n   * Fully expand the given macro name and return the result as a string,\n   * or return `undefined` if no such macro is defined.\n   */\n\n\n  expandMacroAsText(name) {\n    var tokens = this.expandMacro(name);\n\n    if (tokens) {\n      return tokens.map(token => token.text).join(\"\");\n    } else {\n      return tokens;\n    }\n  }\n  /**\n   * Returns the expanded macro as a reversed array of tokens and a macro\n   * argument count.  Or returns `null` if no such macro.\n   */\n\n\n  _getExpansion(name) {\n    var definition = this.macros.get(name);\n\n    if (definition == null) {\n      // mainly checking for undefined here\n      return definition;\n    } // If a single character has an associated catcode other than 13\n    // (active character), then don't expand it.\n\n\n    if (name.length === 1) {\n      var catcode = this.lexer.catcodes[name];\n\n      if (catcode != null && catcode !== 13) {\n        return;\n      }\n    }\n\n    var expansion = typeof definition === \"function\" ? definition(this) : definition;\n\n    if (typeof expansion === \"string\") {\n      var numArgs = 0;\n\n      if (expansion.indexOf(\"#\") !== -1) {\n        var stripped = expansion.replace(/##/g, \"\");\n\n        while (stripped.indexOf(\"#\" + (numArgs + 1)) !== -1) {\n          ++numArgs;\n        }\n      }\n\n      var bodyLexer = new Lexer(expansion, this.settings);\n      var tokens = [];\n      var tok = bodyLexer.lex();\n\n      while (tok.text !== \"EOF\") {\n        tokens.push(tok);\n        tok = bodyLexer.lex();\n      }\n\n      tokens.reverse(); // to fit in with stack using push and pop\n\n      var expanded = {\n        tokens,\n        numArgs\n      };\n      return expanded;\n    }\n\n    return expansion;\n  }\n  /**\n   * Determine whether a command is currently \"defined\" (has some\n   * functionality), meaning that it's a macro (in the current group),\n   * a function, a symbol, or one of the special commands listed in\n   * `implicitCommands`.\n   */\n\n\n  isDefined(name) {\n    return this.macros.has(name) || functions.hasOwnProperty(name) || symbols.math.hasOwnProperty(name) || symbols.text.hasOwnProperty(name) || implicitCommands.hasOwnProperty(name);\n  }\n  /**\n   * Determine whether a command is expandable.\n   */\n\n\n  isExpandable(name) {\n    var macro = this.macros.get(name);\n    return macro != null ? typeof macro === \"string\" || typeof macro === \"function\" || !macro.unexpandable : functions.hasOwnProperty(name) && !functions[name].primitive;\n  }\n\n}\n\n// Helpers for Parser.js handling of Unicode (sub|super)script characters.\nvar unicodeSubRegEx = /^[\u208A\u208B\u208C\u208D\u208E\u2080\u2081\u2082\u2083\u2084\u2085\u2086\u2087\u2088\u2089\u2090\u2091\u2095\u1D62\u2C7C\u2096\u2097\u2098\u2099\u2092\u209A\u1D63\u209B\u209C\u1D64\u1D65\u2093\u1D66\u1D67\u1D68\u1D69\u1D6A]/;\nvar uSubsAndSups = Object.freeze({\n  '\u208A': '+',\n  '\u208B': '-',\n  '\u208C': '=',\n  '\u208D': '(',\n  '\u208E': ')',\n  '\u2080': '0',\n  '\u2081': '1',\n  '\u2082': '2',\n  '\u2083': '3',\n  '\u2084': '4',\n  '\u2085': '5',\n  '\u2086': '6',\n  '\u2087': '7',\n  '\u2088': '8',\n  '\u2089': '9',\n  '\\u2090': 'a',\n  '\\u2091': 'e',\n  '\\u2095': 'h',\n  '\\u1D62': 'i',\n  '\\u2C7C': 'j',\n  '\\u2096': 'k',\n  '\\u2097': 'l',\n  '\\u2098': 'm',\n  '\\u2099': 'n',\n  '\\u2092': 'o',\n  '\\u209A': 'p',\n  '\\u1D63': 'r',\n  '\\u209B': 's',\n  '\\u209C': 't',\n  '\\u1D64': 'u',\n  '\\u1D65': 'v',\n  '\\u2093': 'x',\n  '\\u1D66': '\u03B2',\n  '\\u1D67': '\u03B3',\n  '\\u1D68': '\u03C1',\n  '\\u1D69': '\\u03d5',\n  '\\u1D6A': '\u03C7',\n  '\u207A': '+',\n  '\u207B': '-',\n  '\u207C': '=',\n  '\u207D': '(',\n  '\u207E': ')',\n  '\u2070': '0',\n  '\u00B9': '1',\n  '\u00B2': '2',\n  '\u00B3': '3',\n  '\u2074': '4',\n  '\u2075': '5',\n  '\u2076': '6',\n  '\u2077': '7',\n  '\u2078': '8',\n  '\u2079': '9',\n  '\\u1D2C': 'A',\n  '\\u1D2E': 'B',\n  '\\u1D30': 'D',\n  '\\u1D31': 'E',\n  '\\u1D33': 'G',\n  '\\u1D34': 'H',\n  '\\u1D35': 'I',\n  '\\u1D36': 'J',\n  '\\u1D37': 'K',\n  '\\u1D38': 'L',\n  '\\u1D39': 'M',\n  '\\u1D3A': 'N',\n  '\\u1D3C': 'O',\n  '\\u1D3E': 'P',\n  '\\u1D3F': 'R',\n  '\\u1D40': 'T',\n  '\\u1D41': 'U',\n  '\\u2C7D': 'V',\n  '\\u1D42': 'W',\n  '\\u1D43': 'a',\n  '\\u1D47': 'b',\n  '\\u1D9C': 'c',\n  '\\u1D48': 'd',\n  '\\u1D49': 'e',\n  '\\u1DA0': 'f',\n  '\\u1D4D': 'g',\n  '\\u02B0': 'h',\n  '\\u2071': 'i',\n  '\\u02B2': 'j',\n  '\\u1D4F': 'k',\n  '\\u02E1': 'l',\n  '\\u1D50': 'm',\n  '\\u207F': 'n',\n  '\\u1D52': 'o',\n  '\\u1D56': 'p',\n  '\\u02B3': 'r',\n  '\\u02E2': 's',\n  '\\u1D57': 't',\n  '\\u1D58': 'u',\n  '\\u1D5B': 'v',\n  '\\u02B7': 'w',\n  '\\u02E3': 'x',\n  '\\u02B8': 'y',\n  '\\u1DBB': 'z',\n  '\\u1D5D': '\u03B2',\n  '\\u1D5E': '\u03B3',\n  '\\u1D5F': '\u03B4',\n  '\\u1D60': '\\u03d5',\n  '\\u1D61': '\u03C7',\n  '\\u1DBF': '\u03B8'\n});\n\n/* eslint no-constant-condition:0 */\n\nvar unicodeAccents = {\n  \"\u0301\": {\n    \"text\": \"\\\\'\",\n    \"math\": \"\\\\acute\"\n  },\n  \"\u0300\": {\n    \"text\": \"\\\\`\",\n    \"math\": \"\\\\grave\"\n  },\n  \"\u0308\": {\n    \"text\": \"\\\\\\\"\",\n    \"math\": \"\\\\ddot\"\n  },\n  \"\u0303\": {\n    \"text\": \"\\\\~\",\n    \"math\": \"\\\\tilde\"\n  },\n  \"\u0304\": {\n    \"text\": \"\\\\=\",\n    \"math\": \"\\\\bar\"\n  },\n  \"\u0306\": {\n    \"text\": \"\\\\u\",\n    \"math\": \"\\\\breve\"\n  },\n  \"\u030C\": {\n    \"text\": \"\\\\v\",\n    \"math\": \"\\\\check\"\n  },\n  \"\u0302\": {\n    \"text\": \"\\\\^\",\n    \"math\": \"\\\\hat\"\n  },\n  \"\u0307\": {\n    \"text\": \"\\\\.\",\n    \"math\": \"\\\\dot\"\n  },\n  \"\u030A\": {\n    \"text\": \"\\\\r\",\n    \"math\": \"\\\\mathring\"\n  },\n  \"\u030B\": {\n    \"text\": \"\\\\H\"\n  },\n  \"\u0327\": {\n    \"text\": \"\\\\c\"\n  }\n};\nvar unicodeSymbols = {\n  \"\u00E1\": \"a\u0301\",\n  \"\u00E0\": \"a\u0300\",\n  \"\u00E4\": \"a\u0308\",\n  \"\u01DF\": \"a\u0308\u0304\",\n  \"\u00E3\": \"a\u0303\",\n  \"\u0101\": \"a\u0304\",\n  \"\u0103\": \"a\u0306\",\n  \"\u1EAF\": \"a\u0306\u0301\",\n  \"\u1EB1\": \"a\u0306\u0300\",\n  \"\u1EB5\": \"a\u0306\u0303\",\n  \"\u01CE\": \"a\u030C\",\n  \"\u00E2\": \"a\u0302\",\n  \"\u1EA5\": \"a\u0302\u0301\",\n  \"\u1EA7\": \"a\u0302\u0300\",\n  \"\u1EAB\": \"a\u0302\u0303\",\n  \"\u0227\": \"a\u0307\",\n  \"\u01E1\": \"a\u0307\u0304\",\n  \"\u00E5\": \"a\u030A\",\n  \"\u01FB\": \"a\u030A\u0301\",\n  \"\u1E03\": \"b\u0307\",\n  \"\u0107\": \"c\u0301\",\n  \"\u1E09\": \"c\u0327\u0301\",\n  \"\u010D\": \"c\u030C\",\n  \"\u0109\": \"c\u0302\",\n  \"\u010B\": \"c\u0307\",\n  \"\u00E7\": \"c\u0327\",\n  \"\u010F\": \"d\u030C\",\n  \"\u1E0B\": \"d\u0307\",\n  \"\u1E11\": \"d\u0327\",\n  \"\u00E9\": \"e\u0301\",\n  \"\u00E8\": \"e\u0300\",\n  \"\u00EB\": \"e\u0308\",\n  \"\u1EBD\": \"e\u0303\",\n  \"\u0113\": \"e\u0304\",\n  \"\u1E17\": \"e\u0304\u0301\",\n  \"\u1E15\": \"e\u0304\u0300\",\n  \"\u0115\": \"e\u0306\",\n  \"\u1E1D\": \"e\u0327\u0306\",\n  \"\u011B\": \"e\u030C\",\n  \"\u00EA\": \"e\u0302\",\n  \"\u1EBF\": \"e\u0302\u0301\",\n  \"\u1EC1\": \"e\u0302\u0300\",\n  \"\u1EC5\": \"e\u0302\u0303\",\n  \"\u0117\": \"e\u0307\",\n  \"\u0229\": \"e\u0327\",\n  \"\u1E1F\": \"f\u0307\",\n  \"\u01F5\": \"g\u0301\",\n  \"\u1E21\": \"g\u0304\",\n  \"\u011F\": \"g\u0306\",\n  \"\u01E7\": \"g\u030C\",\n  \"\u011D\": \"g\u0302\",\n  \"\u0121\": \"g\u0307\",\n  \"\u0123\": \"g\u0327\",\n  \"\u1E27\": \"h\u0308\",\n  \"\u021F\": \"h\u030C\",\n  \"\u0125\": \"h\u0302\",\n  \"\u1E23\": \"h\u0307\",\n  \"\u1E29\": \"h\u0327\",\n  \"\u00ED\": \"i\u0301\",\n  \"\u00EC\": \"i\u0300\",\n  \"\u00EF\": \"i\u0308\",\n  \"\u1E2F\": \"i\u0308\u0301\",\n  \"\u0129\": \"i\u0303\",\n  \"\u012B\": \"i\u0304\",\n  \"\u012D\": \"i\u0306\",\n  \"\u01D0\": \"i\u030C\",\n  \"\u00EE\": \"i\u0302\",\n  \"\u01F0\": \"j\u030C\",\n  \"\u0135\": \"j\u0302\",\n  \"\u1E31\": \"k\u0301\",\n  \"\u01E9\": \"k\u030C\",\n  \"\u0137\": \"k\u0327\",\n  \"\u013A\": \"l\u0301\",\n  \"\u013E\": \"l\u030C\",\n  \"\u013C\": \"l\u0327\",\n  \"\u1E3F\": \"m\u0301\",\n  \"\u1E41\": \"m\u0307\",\n  \"\u0144\": \"n\u0301\",\n  \"\u01F9\": \"n\u0300\",\n  \"\u00F1\": \"n\u0303\",\n  \"\u0148\": \"n\u030C\",\n  \"\u1E45\": \"n\u0307\",\n  \"\u0146\": \"n\u0327\",\n  \"\u00F3\": \"o\u0301\",\n  \"\u00F2\": \"o\u0300\",\n  \"\u00F6\": \"o\u0308\",\n  \"\u022B\": \"o\u0308\u0304\",\n  \"\u00F5\": \"o\u0303\",\n  \"\u1E4D\": \"o\u0303\u0301\",\n  \"\u1E4F\": \"o\u0303\u0308\",\n  \"\u022D\": \"o\u0303\u0304\",\n  \"\u014D\": \"o\u0304\",\n  \"\u1E53\": \"o\u0304\u0301\",\n  \"\u1E51\": \"o\u0304\u0300\",\n  \"\u014F\": \"o\u0306\",\n  \"\u01D2\": \"o\u030C\",\n  \"\u00F4\": \"o\u0302\",\n  \"\u1ED1\": \"o\u0302\u0301\",\n  \"\u1ED3\": \"o\u0302\u0300\",\n  \"\u1ED7\": \"o\u0302\u0303\",\n  \"\u022F\": \"o\u0307\",\n  \"\u0231\": \"o\u0307\u0304\",\n  \"\u0151\": \"o\u030B\",\n  \"\u1E55\": \"p\u0301\",\n  \"\u1E57\": \"p\u0307\",\n  \"\u0155\": \"r\u0301\",\n  \"\u0159\": \"r\u030C\",\n  \"\u1E59\": \"r\u0307\",\n  \"\u0157\": \"r\u0327\",\n  \"\u015B\": \"s\u0301\",\n  \"\u1E65\": \"s\u0301\u0307\",\n  \"\u0161\": \"s\u030C\",\n  \"\u1E67\": \"s\u030C\u0307\",\n  \"\u015D\": \"s\u0302\",\n  \"\u1E61\": \"s\u0307\",\n  \"\u015F\": \"s\u0327\",\n  \"\u1E97\": \"t\u0308\",\n  \"\u0165\": \"t\u030C\",\n  \"\u1E6B\": \"t\u0307\",\n  \"\u0163\": \"t\u0327\",\n  \"\u00FA\": \"u\u0301\",\n  \"\u00F9\": \"u\u0300\",\n  \"\u00FC\": \"u\u0308\",\n  \"\u01D8\": \"u\u0308\u0301\",\n  \"\u01DC\": \"u\u0308\u0300\",\n  \"\u01D6\": \"u\u0308\u0304\",\n  \"\u01DA\": \"u\u0308\u030C\",\n  \"\u0169\": \"u\u0303\",\n  \"\u1E79\": \"u\u0303\u0301\",\n  \"\u016B\": \"u\u0304\",\n  \"\u1E7B\": \"u\u0304\u0308\",\n  \"\u016D\": \"u\u0306\",\n  \"\u01D4\": \"u\u030C\",\n  \"\u00FB\": \"u\u0302\",\n  \"\u016F\": \"u\u030A\",\n  \"\u0171\": \"u\u030B\",\n  \"\u1E7D\": \"v\u0303\",\n  \"\u1E83\": \"w\u0301\",\n  \"\u1E81\": \"w\u0300\",\n  \"\u1E85\": \"w\u0308\",\n  \"\u0175\": \"w\u0302\",\n  \"\u1E87\": \"w\u0307\",\n  \"\u1E98\": \"w\u030A\",\n  \"\u1E8D\": \"x\u0308\",\n  \"\u1E8B\": \"x\u0307\",\n  \"\u00FD\": \"y\u0301\",\n  \"\u1EF3\": \"y\u0300\",\n  \"\u00FF\": \"y\u0308\",\n  \"\u1EF9\": \"y\u0303\",\n  \"\u0233\": \"y\u0304\",\n  \"\u0177\": \"y\u0302\",\n  \"\u1E8F\": \"y\u0307\",\n  \"\u1E99\": \"y\u030A\",\n  \"\u017A\": \"z\u0301\",\n  \"\u017E\": \"z\u030C\",\n  \"\u1E91\": \"z\u0302\",\n  \"\u017C\": \"z\u0307\",\n  \"\u00C1\": \"A\u0301\",\n  \"\u00C0\": \"A\u0300\",\n  \"\u00C4\": \"A\u0308\",\n  \"\u01DE\": \"A\u0308\u0304\",\n  \"\u00C3\": \"A\u0303\",\n  \"\u0100\": \"A\u0304\",\n  \"\u0102\": \"A\u0306\",\n  \"\u1EAE\": \"A\u0306\u0301\",\n  \"\u1EB0\": \"A\u0306\u0300\",\n  \"\u1EB4\": \"A\u0306\u0303\",\n  \"\u01CD\": \"A\u030C\",\n  \"\u00C2\": \"A\u0302\",\n  \"\u1EA4\": \"A\u0302\u0301\",\n  \"\u1EA6\": \"A\u0302\u0300\",\n  \"\u1EAA\": \"A\u0302\u0303\",\n  \"\u0226\": \"A\u0307\",\n  \"\u01E0\": \"A\u0307\u0304\",\n  \"\u00C5\": \"A\u030A\",\n  \"\u01FA\": \"A\u030A\u0301\",\n  \"\u1E02\": \"B\u0307\",\n  \"\u0106\": \"C\u0301\",\n  \"\u1E08\": \"C\u0327\u0301\",\n  \"\u010C\": \"C\u030C\",\n  \"\u0108\": \"C\u0302\",\n  \"\u010A\": \"C\u0307\",\n  \"\u00C7\": \"C\u0327\",\n  \"\u010E\": \"D\u030C\",\n  \"\u1E0A\": \"D\u0307\",\n  \"\u1E10\": \"D\u0327\",\n  \"\u00C9\": \"E\u0301\",\n  \"\u00C8\": \"E\u0300\",\n  \"\u00CB\": \"E\u0308\",\n  \"\u1EBC\": \"E\u0303\",\n  \"\u0112\": \"E\u0304\",\n  \"\u1E16\": \"E\u0304\u0301\",\n  \"\u1E14\": \"E\u0304\u0300\",\n  \"\u0114\": \"E\u0306\",\n  \"\u1E1C\": \"E\u0327\u0306\",\n  \"\u011A\": \"E\u030C\",\n  \"\u00CA\": \"E\u0302\",\n  \"\u1EBE\": \"E\u0302\u0301\",\n  \"\u1EC0\": \"E\u0302\u0300\",\n  \"\u1EC4\": \"E\u0302\u0303\",\n  \"\u0116\": \"E\u0307\",\n  \"\u0228\": \"E\u0327\",\n  \"\u1E1E\": \"F\u0307\",\n  \"\u01F4\": \"G\u0301\",\n  \"\u1E20\": \"G\u0304\",\n  \"\u011E\": \"G\u0306\",\n  \"\u01E6\": \"G\u030C\",\n  \"\u011C\": \"G\u0302\",\n  \"\u0120\": \"G\u0307\",\n  \"\u0122\": \"G\u0327\",\n  \"\u1E26\": \"H\u0308\",\n  \"\u021E\": \"H\u030C\",\n  \"\u0124\": \"H\u0302\",\n  \"\u1E22\": \"H\u0307\",\n  \"\u1E28\": \"H\u0327\",\n  \"\u00CD\": \"I\u0301\",\n  \"\u00CC\": \"I\u0300\",\n  \"\u00CF\": \"I\u0308\",\n  \"\u1E2E\": \"I\u0308\u0301\",\n  \"\u0128\": \"I\u0303\",\n  \"\u012A\": \"I\u0304\",\n  \"\u012C\": \"I\u0306\",\n  \"\u01CF\": \"I\u030C\",\n  \"\u00CE\": \"I\u0302\",\n  \"\u0130\": \"I\u0307\",\n  \"\u0134\": \"J\u0302\",\n  \"\u1E30\": \"K\u0301\",\n  \"\u01E8\": \"K\u030C\",\n  \"\u0136\": \"K\u0327\",\n  \"\u0139\": \"L\u0301\",\n  \"\u013D\": \"L\u030C\",\n  \"\u013B\": \"L\u0327\",\n  \"\u1E3E\": \"M\u0301\",\n  \"\u1E40\": \"M\u0307\",\n  \"\u0143\": \"N\u0301\",\n  \"\u01F8\": \"N\u0300\",\n  \"\u00D1\": \"N\u0303\",\n  \"\u0147\": \"N\u030C\",\n  \"\u1E44\": \"N\u0307\",\n  \"\u0145\": \"N\u0327\",\n  \"\u00D3\": \"O\u0301\",\n  \"\u00D2\": \"O\u0300\",\n  \"\u00D6\": \"O\u0308\",\n  \"\u022A\": \"O\u0308\u0304\",\n  \"\u00D5\": \"O\u0303\",\n  \"\u1E4C\": \"O\u0303\u0301\",\n  \"\u1E4E\": \"O\u0303\u0308\",\n  \"\u022C\": \"O\u0303\u0304\",\n  \"\u014C\": \"O\u0304\",\n  \"\u1E52\": \"O\u0304\u0301\",\n  \"\u1E50\": \"O\u0304\u0300\",\n  \"\u014E\": \"O\u0306\",\n  \"\u01D1\": \"O\u030C\",\n  \"\u00D4\": \"O\u0302\",\n  \"\u1ED0\": \"O\u0302\u0301\",\n  \"\u1ED2\": \"O\u0302\u0300\",\n  \"\u1ED6\": \"O\u0302\u0303\",\n  \"\u022E\": \"O\u0307\",\n  \"\u0230\": \"O\u0307\u0304\",\n  \"\u0150\": \"O\u030B\",\n  \"\u1E54\": \"P\u0301\",\n  \"\u1E56\": \"P\u0307\",\n  \"\u0154\": \"R\u0301\",\n  \"\u0158\": \"R\u030C\",\n  \"\u1E58\": \"R\u0307\",\n  \"\u0156\": \"R\u0327\",\n  \"\u015A\": \"S\u0301\",\n  \"\u1E64\": \"S\u0301\u0307\",\n  \"\u0160\": \"S\u030C\",\n  \"\u1E66\": \"S\u030C\u0307\",\n  \"\u015C\": \"S\u0302\",\n  \"\u1E60\": \"S\u0307\",\n  \"\u015E\": \"S\u0327\",\n  \"\u0164\": \"T\u030C\",\n  \"\u1E6A\": \"T\u0307\",\n  \"\u0162\": \"T\u0327\",\n  \"\u00DA\": \"U\u0301\",\n  \"\u00D9\": \"U\u0300\",\n  \"\u00DC\": \"U\u0308\",\n  \"\u01D7\": \"U\u0308\u0301\",\n  \"\u01DB\": \"U\u0308\u0300\",\n  \"\u01D5\": \"U\u0308\u0304\",\n  \"\u01D9\": \"U\u0308\u030C\",\n  \"\u0168\": \"U\u0303\",\n  \"\u1E78\": \"U\u0303\u0301\",\n  \"\u016A\": \"U\u0304\",\n  \"\u1E7A\": \"U\u0304\u0308\",\n  \"\u016C\": \"U\u0306\",\n  \"\u01D3\": \"U\u030C\",\n  \"\u00DB\": \"U\u0302\",\n  \"\u016E\": \"U\u030A\",\n  \"\u0170\": \"U\u030B\",\n  \"\u1E7C\": \"V\u0303\",\n  \"\u1E82\": \"W\u0301\",\n  \"\u1E80\": \"W\u0300\",\n  \"\u1E84\": \"W\u0308\",\n  \"\u0174\": \"W\u0302\",\n  \"\u1E86\": \"W\u0307\",\n  \"\u1E8C\": \"X\u0308\",\n  \"\u1E8A\": \"X\u0307\",\n  \"\u00DD\": \"Y\u0301\",\n  \"\u1EF2\": \"Y\u0300\",\n  \"\u0178\": \"Y\u0308\",\n  \"\u1EF8\": \"Y\u0303\",\n  \"\u0232\": \"Y\u0304\",\n  \"\u0176\": \"Y\u0302\",\n  \"\u1E8E\": \"Y\u0307\",\n  \"\u0179\": \"Z\u0301\",\n  \"\u017D\": \"Z\u030C\",\n  \"\u1E90\": \"Z\u0302\",\n  \"\u017B\": \"Z\u0307\",\n  \"\u03AC\": \"\u03B1\u0301\",\n  \"\u1F70\": \"\u03B1\u0300\",\n  \"\u1FB1\": \"\u03B1\u0304\",\n  \"\u1FB0\": \"\u03B1\u0306\",\n  \"\u03AD\": \"\u03B5\u0301\",\n  \"\u1F72\": \"\u03B5\u0300\",\n  \"\u03AE\": \"\u03B7\u0301\",\n  \"\u1F74\": \"\u03B7\u0300\",\n  \"\u03AF\": \"\u03B9\u0301\",\n  \"\u1F76\": \"\u03B9\u0300\",\n  \"\u03CA\": \"\u03B9\u0308\",\n  \"\u0390\": \"\u03B9\u0308\u0301\",\n  \"\u1FD2\": \"\u03B9\u0308\u0300\",\n  \"\u1FD1\": \"\u03B9\u0304\",\n  \"\u1FD0\": \"\u03B9\u0306\",\n  \"\u03CC\": \"\u03BF\u0301\",\n  \"\u1F78\": \"\u03BF\u0300\",\n  \"\u03CD\": \"\u03C5\u0301\",\n  \"\u1F7A\": \"\u03C5\u0300\",\n  \"\u03CB\": \"\u03C5\u0308\",\n  \"\u03B0\": \"\u03C5\u0308\u0301\",\n  \"\u1FE2\": \"\u03C5\u0308\u0300\",\n  \"\u1FE1\": \"\u03C5\u0304\",\n  \"\u1FE0\": \"\u03C5\u0306\",\n  \"\u03CE\": \"\u03C9\u0301\",\n  \"\u1F7C\": \"\u03C9\u0300\",\n  \"\u038E\": \"\u03A5\u0301\",\n  \"\u1FEA\": \"\u03A5\u0300\",\n  \"\u03AB\": \"\u03A5\u0308\",\n  \"\u1FE9\": \"\u03A5\u0304\",\n  \"\u1FE8\": \"\u03A5\u0306\",\n  \"\u038F\": \"\u03A9\u0301\",\n  \"\u1FFA\": \"\u03A9\u0300\"\n};\n\n/**\n * This file contains the parser used to parse out a TeX expression from the\n * input. Since TeX isn't context-free, standard parsers don't work particularly\n * well.\n *\n * The strategy of this parser is as such:\n *\n * The main functions (the `.parse...` ones) take a position in the current\n * parse string to parse tokens from. The lexer (found in Lexer.js, stored at\n * this.gullet.lexer) also supports pulling out tokens at arbitrary places. When\n * individual tokens are needed at a position, the lexer is called to pull out a\n * token, which is then used.\n *\n * The parser has a property called \"mode\" indicating the mode that\n * the parser is currently in. Currently it has to be one of \"math\" or\n * \"text\", which denotes whether the current environment is a math-y\n * one or a text-y one (e.g. inside \\text). Currently, this serves to\n * limit the functions which can be used in text mode.\n *\n * The main functions then return an object which contains the useful data that\n * was parsed at its given point, and a new position at the end of the parsed\n * data. The main functions can call each other and continue the parsing by\n * using the returned position as a new starting point.\n *\n * There are also extra `.handle...` functions, which pull out some reused\n * functionality into self-contained functions.\n *\n * The functions return ParseNodes.\n */\nclass Parser {\n  constructor(input, settings) {\n    this.mode = void 0;\n    this.gullet = void 0;\n    this.settings = void 0;\n    this.leftrightDepth = void 0;\n    this.nextToken = void 0;\n    // Start in math mode\n    this.mode = \"math\"; // Create a new macro expander (gullet) and (indirectly via that) also a\n    // new lexer (mouth) for this parser (stomach, in the language of TeX)\n\n    this.gullet = new MacroExpander(input, settings, this.mode); // Store the settings for use in parsing\n\n    this.settings = settings; // Count leftright depth (for \\middle errors)\n\n    this.leftrightDepth = 0;\n  }\n  /**\n   * Checks a result to make sure it has the right type, and throws an\n   * appropriate error otherwise.\n   */\n\n\n  expect(text, consume) {\n    if (consume === void 0) {\n      consume = true;\n    }\n\n    if (this.fetch().text !== text) {\n      throw new ParseError(\"Expected '\" + text + \"', got '\" + this.fetch().text + \"'\", this.fetch());\n    }\n\n    if (consume) {\n      this.consume();\n    }\n  }\n  /**\n   * Discards the current lookahead token, considering it consumed.\n   */\n\n\n  consume() {\n    this.nextToken = null;\n  }\n  /**\n   * Return the current lookahead token, or if there isn't one (at the\n   * beginning, or if the previous lookahead token was consume()d),\n   * fetch the next token as the new lookahead token and return it.\n   */\n\n\n  fetch() {\n    if (this.nextToken == null) {\n      this.nextToken = this.gullet.expandNextToken();\n    }\n\n    return this.nextToken;\n  }\n  /**\n   * Switches between \"text\" and \"math\" modes.\n   */\n\n\n  switchMode(newMode) {\n    this.mode = newMode;\n    this.gullet.switchMode(newMode);\n  }\n  /**\n   * Main parsing function, which parses an entire input.\n   */\n\n\n  parse() {\n    if (!this.settings.globalGroup) {\n      // Create a group namespace for the math expression.\n      // (LaTeX creates a new group for every $...$, $$...$$, \\[...\\].)\n      this.gullet.beginGroup();\n    } // Use old \\color behavior (same as LaTeX's \\textcolor) if requested.\n    // We do this within the group for the math expression, so it doesn't\n    // pollute settings.macros.\n\n\n    if (this.settings.colorIsTextColor) {\n      this.gullet.macros.set(\"\\\\color\", \"\\\\textcolor\");\n    }\n\n    try {\n      // Try to parse the input\n      var parse = this.parseExpression(false); // If we succeeded, make sure there's an EOF at the end\n\n      this.expect(\"EOF\"); // End the group namespace for the expression\n\n      if (!this.settings.globalGroup) {\n        this.gullet.endGroup();\n      }\n\n      return parse; // Close any leftover groups in case of a parse error.\n    } finally {\n      this.gullet.endGroups();\n    }\n  }\n  /**\n   * Fully parse a separate sequence of tokens as a separate job.\n   * Tokens should be specified in reverse order, as in a MacroDefinition.\n   */\n\n\n  subparse(tokens) {\n    // Save the next token from the current job.\n    var oldToken = this.nextToken;\n    this.consume(); // Run the new job, terminating it with an excess '}'\n\n    this.gullet.pushToken(new Token(\"}\"));\n    this.gullet.pushTokens(tokens);\n    var parse = this.parseExpression(false);\n    this.expect(\"}\"); // Restore the next token from the current job.\n\n    this.nextToken = oldToken;\n    return parse;\n  }\n\n  /**\n   * Parses an \"expression\", which is a list of atoms.\n   *\n   * `breakOnInfix`: Should the parsing stop when we hit infix nodes? This\n   *                 happens when functions have higher precedence han infix\n   *                 nodes in implicit parses.\n   *\n   * `breakOnTokenText`: The text of the token that the expression should end\n   *                     with, or `null` if something else should end the\n   *                     expression.\n   */\n  parseExpression(breakOnInfix, breakOnTokenText) {\n    var body = []; // Keep adding atoms to the body until we can't parse any more atoms (either\n    // we reached the end, a }, or a \\right)\n\n    while (true) {\n      // Ignore spaces in math mode\n      if (this.mode === \"math\") {\n        this.consumeSpaces();\n      }\n\n      var lex = this.fetch();\n\n      if (Parser.endOfExpression.indexOf(lex.text) !== -1) {\n        break;\n      }\n\n      if (breakOnTokenText && lex.text === breakOnTokenText) {\n        break;\n      }\n\n      if (breakOnInfix && functions[lex.text] && functions[lex.text].infix) {\n        break;\n      }\n\n      var atom = this.parseAtom(breakOnTokenText);\n\n      if (!atom) {\n        break;\n      } else if (atom.type === \"internal\") {\n        // Internal nodes do not appear in parse tree\n        continue;\n      }\n\n      body.push(atom);\n    }\n\n    if (this.mode === \"text\") {\n      this.formLigatures(body);\n    }\n\n    return this.handleInfixNodes(body);\n  }\n  /**\n   * Rewrites infix operators such as \\over with corresponding commands such\n   * as \\frac.\n   *\n   * There can only be one infix operator per group.  If there's more than one\n   * then the expression is ambiguous.  This can be resolved by adding {}.\n   */\n\n\n  handleInfixNodes(body) {\n    var overIndex = -1;\n    var funcName;\n\n    for (var i = 0; i < body.length; i++) {\n      if (body[i].type === \"infix\") {\n        if (overIndex !== -1) {\n          throw new ParseError(\"only one infix operator per group\", body[i].token);\n        }\n\n        overIndex = i;\n        funcName = body[i].replaceWith;\n      }\n    }\n\n    if (overIndex !== -1 && funcName) {\n      var numerNode;\n      var denomNode;\n      var numerBody = body.slice(0, overIndex);\n      var denomBody = body.slice(overIndex + 1);\n\n      if (numerBody.length === 1 && numerBody[0].type === \"ordgroup\") {\n        numerNode = numerBody[0];\n      } else {\n        numerNode = {\n          type: \"ordgroup\",\n          mode: this.mode,\n          body: numerBody\n        };\n      }\n\n      if (denomBody.length === 1 && denomBody[0].type === \"ordgroup\") {\n        denomNode = denomBody[0];\n      } else {\n        denomNode = {\n          type: \"ordgroup\",\n          mode: this.mode,\n          body: denomBody\n        };\n      }\n\n      var node;\n\n      if (funcName === \"\\\\\\\\abovefrac\") {\n        node = this.callFunction(funcName, [numerNode, body[overIndex], denomNode], []);\n      } else {\n        node = this.callFunction(funcName, [numerNode, denomNode], []);\n      }\n\n      return [node];\n    } else {\n      return body;\n    }\n  }\n  /**\n   * Handle a subscript or superscript with nice errors.\n   */\n\n\n  handleSupSubscript(name // For error reporting.\n  ) {\n    var symbolToken = this.fetch();\n    var symbol = symbolToken.text;\n    this.consume();\n    this.consumeSpaces(); // ignore spaces before sup/subscript argument\n    // Skip over allowed internal nodes such as \\relax\n\n    var group;\n\n    do {\n      var _group;\n\n      group = this.parseGroup(name);\n    } while (((_group = group) == null ? void 0 : _group.type) === \"internal\");\n\n    if (!group) {\n      throw new ParseError(\"Expected group after '\" + symbol + \"'\", symbolToken);\n    }\n\n    return group;\n  }\n  /**\n   * Converts the textual input of an unsupported command into a text node\n   * contained within a color node whose color is determined by errorColor\n   */\n\n\n  formatUnsupportedCmd(text) {\n    var textordArray = [];\n\n    for (var i = 0; i < text.length; i++) {\n      textordArray.push({\n        type: \"textord\",\n        mode: \"text\",\n        text: text[i]\n      });\n    }\n\n    var textNode = {\n      type: \"text\",\n      mode: this.mode,\n      body: textordArray\n    };\n    var colorNode = {\n      type: \"color\",\n      mode: this.mode,\n      color: this.settings.errorColor,\n      body: [textNode]\n    };\n    return colorNode;\n  }\n  /**\n   * Parses a group with optional super/subscripts.\n   */\n\n\n  parseAtom(breakOnTokenText) {\n    // The body of an atom is an implicit group, so that things like\n    // \\left(x\\right)^2 work correctly.\n    var base = this.parseGroup(\"atom\", breakOnTokenText); // Internal nodes (e.g. \\relax) cannot support super/subscripts.\n    // Instead we will pick up super/subscripts with blank base next round.\n\n    if ((base == null ? void 0 : base.type) === \"internal\") {\n      return base;\n    } // In text mode, we don't have superscripts or subscripts\n\n\n    if (this.mode === \"text\") {\n      return base;\n    } // Note that base may be empty (i.e. null) at this point.\n\n\n    var superscript;\n    var subscript;\n\n    while (true) {\n      // Guaranteed in math mode, so eat any spaces first.\n      this.consumeSpaces(); // Lex the first token\n\n      var lex = this.fetch();\n\n      if (lex.text === \"\\\\limits\" || lex.text === \"\\\\nolimits\") {\n        // We got a limit control\n        if (base && base.type === \"op\") {\n          var limits = lex.text === \"\\\\limits\";\n          base.limits = limits;\n          base.alwaysHandleSupSub = true;\n        } else if (base && base.type === \"operatorname\") {\n          if (base.alwaysHandleSupSub) {\n            base.limits = lex.text === \"\\\\limits\";\n          }\n        } else {\n          throw new ParseError(\"Limit controls must follow a math operator\", lex);\n        }\n\n        this.consume();\n      } else if (lex.text === \"^\") {\n        // We got a superscript start\n        if (superscript) {\n          throw new ParseError(\"Double superscript\", lex);\n        }\n\n        superscript = this.handleSupSubscript(\"superscript\");\n      } else if (lex.text === \"_\") {\n        // We got a subscript start\n        if (subscript) {\n          throw new ParseError(\"Double subscript\", lex);\n        }\n\n        subscript = this.handleSupSubscript(\"subscript\");\n      } else if (lex.text === \"'\") {\n        // We got a prime\n        if (superscript) {\n          throw new ParseError(\"Double superscript\", lex);\n        }\n\n        var prime = {\n          type: \"textord\",\n          mode: this.mode,\n          text: \"\\\\prime\"\n        }; // Many primes can be grouped together, so we handle this here\n\n        var primes = [prime];\n        this.consume(); // Keep lexing tokens until we get something that's not a prime\n\n        while (this.fetch().text === \"'\") {\n          // For each one, add another prime to the list\n          primes.push(prime);\n          this.consume();\n        } // If there's a superscript following the primes, combine that\n        // superscript in with the primes.\n\n\n        if (this.fetch().text === \"^\") {\n          primes.push(this.handleSupSubscript(\"superscript\"));\n        } // Put everything into an ordgroup as the superscript\n\n\n        superscript = {\n          type: \"ordgroup\",\n          mode: this.mode,\n          body: primes\n        };\n      } else if (uSubsAndSups[lex.text]) {\n        // A Unicode subscript or superscript character.\n        // We treat these similarly to the unicode-math package.\n        // So we render a string of Unicode (sub|super)scripts the\n        // same as a (sub|super)script of regular characters.\n        var isSub = unicodeSubRegEx.test(lex.text);\n        var subsupTokens = [];\n        subsupTokens.push(new Token(uSubsAndSups[lex.text]));\n        this.consume(); // Continue fetching tokens to fill out the string.\n\n        while (true) {\n          var token = this.fetch().text;\n\n          if (!uSubsAndSups[token]) {\n            break;\n          }\n\n          if (unicodeSubRegEx.test(token) !== isSub) {\n            break;\n          }\n\n          subsupTokens.unshift(new Token(uSubsAndSups[token]));\n          this.consume();\n        } // Now create a (sub|super)script.\n\n\n        var body = this.subparse(subsupTokens);\n\n        if (isSub) {\n          subscript = {\n            type: \"ordgroup\",\n            mode: \"math\",\n            body\n          };\n        } else {\n          superscript = {\n            type: \"ordgroup\",\n            mode: \"math\",\n            body\n          };\n        }\n      } else {\n        // If it wasn't ^, _, or ', stop parsing super/subscripts\n        break;\n      }\n    } // Base must be set if superscript or subscript are set per logic above,\n    // but need to check here for type check to pass.\n\n\n    if (superscript || subscript) {\n      // If we got either a superscript or subscript, create a supsub\n      return {\n        type: \"supsub\",\n        mode: this.mode,\n        base: base,\n        sup: superscript,\n        sub: subscript\n      };\n    } else {\n      // Otherwise return the original body\n      return base;\n    }\n  }\n  /**\n   * Parses an entire function, including its base and all of its arguments.\n   */\n\n\n  parseFunction(breakOnTokenText, name // For determining its context\n  ) {\n    var token = this.fetch();\n    var func = token.text;\n    var funcData = functions[func];\n\n    if (!funcData) {\n      return null;\n    }\n\n    this.consume(); // consume command token\n\n    if (name && name !== \"atom\" && !funcData.allowedInArgument) {\n      throw new ParseError(\"Got function '\" + func + \"' with no arguments\" + (name ? \" as \" + name : \"\"), token);\n    } else if (this.mode === \"text\" && !funcData.allowedInText) {\n      throw new ParseError(\"Can't use function '\" + func + \"' in text mode\", token);\n    } else if (this.mode === \"math\" && funcData.allowedInMath === false) {\n      throw new ParseError(\"Can't use function '\" + func + \"' in math mode\", token);\n    }\n\n    var {\n      args,\n      optArgs\n    } = this.parseArguments(func, funcData);\n    return this.callFunction(func, args, optArgs, token, breakOnTokenText);\n  }\n  /**\n   * Call a function handler with a suitable context and arguments.\n   */\n\n\n  callFunction(name, args, optArgs, token, breakOnTokenText) {\n    var context = {\n      funcName: name,\n      parser: this,\n      token,\n      breakOnTokenText\n    };\n    var func = functions[name];\n\n    if (func && func.handler) {\n      return func.handler(context, args, optArgs);\n    } else {\n      throw new ParseError(\"No function handler for \" + name);\n    }\n  }\n  /**\n   * Parses the arguments of a function or environment\n   */\n\n\n  parseArguments(func, // Should look like \"\\name\" or \"\\begin{name}\".\n  funcData) {\n    var totalArgs = funcData.numArgs + funcData.numOptionalArgs;\n\n    if (totalArgs === 0) {\n      return {\n        args: [],\n        optArgs: []\n      };\n    }\n\n    var args = [];\n    var optArgs = [];\n\n    for (var i = 0; i < totalArgs; i++) {\n      var argType = funcData.argTypes && funcData.argTypes[i];\n      var isOptional = i < funcData.numOptionalArgs;\n\n      if (funcData.primitive && argType == null || // \\sqrt expands into primitive if optional argument doesn't exist\n      funcData.type === \"sqrt\" && i === 1 && optArgs[0] == null) {\n        argType = \"primitive\";\n      }\n\n      var arg = this.parseGroupOfType(\"argument to '\" + func + \"'\", argType, isOptional);\n\n      if (isOptional) {\n        optArgs.push(arg);\n      } else if (arg != null) {\n        args.push(arg);\n      } else {\n        // should be unreachable\n        throw new ParseError(\"Null argument, please report this as a bug\");\n      }\n    }\n\n    return {\n      args,\n      optArgs\n    };\n  }\n  /**\n   * Parses a group when the mode is changing.\n   */\n\n\n  parseGroupOfType(name, type, optional) {\n    switch (type) {\n      case \"color\":\n        return this.parseColorGroup(optional);\n\n      case \"size\":\n        return this.parseSizeGroup(optional);\n\n      case \"url\":\n        return this.parseUrlGroup(optional);\n\n      case \"math\":\n      case \"text\":\n        return this.parseArgumentGroup(optional, type);\n\n      case \"hbox\":\n        {\n          // hbox argument type wraps the argument in the equivalent of\n          // \\hbox, which is like \\text but switching to \\textstyle size.\n          var group = this.parseArgumentGroup(optional, \"text\");\n          return group != null ? {\n            type: \"styling\",\n            mode: group.mode,\n            body: [group],\n            style: \"text\" // simulate \\textstyle\n\n          } : null;\n        }\n\n      case \"raw\":\n        {\n          var token = this.parseStringGroup(\"raw\", optional);\n          return token != null ? {\n            type: \"raw\",\n            mode: \"text\",\n            string: token.text\n          } : null;\n        }\n\n      case \"primitive\":\n        {\n          if (optional) {\n            throw new ParseError(\"A primitive argument cannot be optional\");\n          }\n\n          var _group2 = this.parseGroup(name);\n\n          if (_group2 == null) {\n            throw new ParseError(\"Expected group as \" + name, this.fetch());\n          }\n\n          return _group2;\n        }\n\n      case \"original\":\n      case null:\n      case undefined:\n        return this.parseArgumentGroup(optional);\n\n      default:\n        throw new ParseError(\"Unknown group type as \" + name, this.fetch());\n    }\n  }\n  /**\n   * Discard any space tokens, fetching the next non-space token.\n   */\n\n\n  consumeSpaces() {\n    while (this.fetch().text === \" \") {\n      this.consume();\n    }\n  }\n  /**\n   * Parses a group, essentially returning the string formed by the\n   * brace-enclosed tokens plus some position information.\n   */\n\n\n  parseStringGroup(modeName, // Used to describe the mode in error messages.\n  optional) {\n    var argToken = this.gullet.scanArgument(optional);\n\n    if (argToken == null) {\n      return null;\n    }\n\n    var str = \"\";\n    var nextToken;\n\n    while ((nextToken = this.fetch()).text !== \"EOF\") {\n      str += nextToken.text;\n      this.consume();\n    }\n\n    this.consume(); // consume the end of the argument\n\n    argToken.text = str;\n    return argToken;\n  }\n  /**\n   * Parses a regex-delimited group: the largest sequence of tokens\n   * whose concatenated strings match `regex`. Returns the string\n   * formed by the tokens plus some position information.\n   */\n\n\n  parseRegexGroup(regex, modeName // Used to describe the mode in error messages.\n  ) {\n    var firstToken = this.fetch();\n    var lastToken = firstToken;\n    var str = \"\";\n    var nextToken;\n\n    while ((nextToken = this.fetch()).text !== \"EOF\" && regex.test(str + nextToken.text)) {\n      lastToken = nextToken;\n      str += lastToken.text;\n      this.consume();\n    }\n\n    if (str === \"\") {\n      throw new ParseError(\"Invalid \" + modeName + \": '\" + firstToken.text + \"'\", firstToken);\n    }\n\n    return firstToken.range(lastToken, str);\n  }\n  /**\n   * Parses a color description.\n   */\n\n\n  parseColorGroup(optional) {\n    var res = this.parseStringGroup(\"color\", optional);\n\n    if (res == null) {\n      return null;\n    }\n\n    var match = /^(#[a-f0-9]{3}|#?[a-f0-9]{6}|[a-z]+)$/i.exec(res.text);\n\n    if (!match) {\n      throw new ParseError(\"Invalid color: '\" + res.text + \"'\", res);\n    }\n\n    var color = match[0];\n\n    if (/^[0-9a-f]{6}$/i.test(color)) {\n      // We allow a 6-digit HTML color spec without a leading \"#\".\n      // This follows the xcolor package's HTML color model.\n      // Predefined color names are all missed by this RegEx pattern.\n      color = \"#\" + color;\n    }\n\n    return {\n      type: \"color-token\",\n      mode: this.mode,\n      color\n    };\n  }\n  /**\n   * Parses a size specification, consisting of magnitude and unit.\n   */\n\n\n  parseSizeGroup(optional) {\n    var res;\n    var isBlank = false; // don't expand before parseStringGroup\n\n    this.gullet.consumeSpaces();\n\n    if (!optional && this.gullet.future().text !== \"{\") {\n      res = this.parseRegexGroup(/^[-+]? *(?:$|\\d+|\\d+\\.\\d*|\\.\\d*) *[a-z]{0,2} *$/, \"size\");\n    } else {\n      res = this.parseStringGroup(\"size\", optional);\n    }\n\n    if (!res) {\n      return null;\n    }\n\n    if (!optional && res.text.length === 0) {\n      // Because we've tested for what is !optional, this block won't\n      // affect \\kern, \\hspace, etc. It will capture the mandatory arguments\n      // to \\genfrac and \\above.\n      res.text = \"0pt\"; // Enable \\above{}\n\n      isBlank = true; // This is here specifically for \\genfrac\n    }\n\n    var match = /([-+]?) *(\\d+(?:\\.\\d*)?|\\.\\d+) *([a-z]{2})/.exec(res.text);\n\n    if (!match) {\n      throw new ParseError(\"Invalid size: '\" + res.text + \"'\", res);\n    }\n\n    var data = {\n      number: +(match[1] + match[2]),\n      // sign + magnitude, cast to number\n      unit: match[3]\n    };\n\n    if (!validUnit(data)) {\n      throw new ParseError(\"Invalid unit: '\" + data.unit + \"'\", res);\n    }\n\n    return {\n      type: \"size\",\n      mode: this.mode,\n      value: data,\n      isBlank\n    };\n  }\n  /**\n   * Parses an URL, checking escaped letters and allowed protocols,\n   * and setting the catcode of % as an active character (as in \\hyperref).\n   */\n\n\n  parseUrlGroup(optional) {\n    this.gullet.lexer.setCatcode(\"%\", 13); // active character\n\n    this.gullet.lexer.setCatcode(\"~\", 12); // other character\n\n    var res = this.parseStringGroup(\"url\", optional);\n    this.gullet.lexer.setCatcode(\"%\", 14); // comment character\n\n    this.gullet.lexer.setCatcode(\"~\", 13); // active character\n\n    if (res == null) {\n      return null;\n    } // hyperref package allows backslashes alone in href, but doesn't\n    // generate valid links in such cases; we interpret this as\n    // \"undefined\" behaviour, and keep them as-is. Some browser will\n    // replace backslashes with forward slashes.\n\n\n    var url = res.text.replace(/\\\\([#$%&~_^{}])/g, '$1');\n    return {\n      type: \"url\",\n      mode: this.mode,\n      url\n    };\n  }\n  /**\n   * Parses an argument with the mode specified.\n   */\n\n\n  parseArgumentGroup(optional, mode) {\n    var argToken = this.gullet.scanArgument(optional);\n\n    if (argToken == null) {\n      return null;\n    }\n\n    var outerMode = this.mode;\n\n    if (mode) {\n      // Switch to specified mode\n      this.switchMode(mode);\n    }\n\n    this.gullet.beginGroup();\n    var expression = this.parseExpression(false, \"EOF\"); // TODO: find an alternative way to denote the end\n\n    this.expect(\"EOF\"); // expect the end of the argument\n\n    this.gullet.endGroup();\n    var result = {\n      type: \"ordgroup\",\n      mode: this.mode,\n      loc: argToken.loc,\n      body: expression\n    };\n\n    if (mode) {\n      // Switch mode back\n      this.switchMode(outerMode);\n    }\n\n    return result;\n  }\n  /**\n   * Parses an ordinary group, which is either a single nucleus (like \"x\")\n   * or an expression in braces (like \"{x+y}\") or an implicit group, a group\n   * that starts at the current position, and ends right before a higher explicit\n   * group ends, or at EOF.\n   */\n\n\n  parseGroup(name, // For error reporting.\n  breakOnTokenText) {\n    var firstToken = this.fetch();\n    var text = firstToken.text;\n    var result; // Try to parse an open brace or \\begingroup\n\n    if (text === \"{\" || text === \"\\\\begingroup\") {\n      this.consume();\n      var groupEnd = text === \"{\" ? \"}\" : \"\\\\endgroup\";\n      this.gullet.beginGroup(); // If we get a brace, parse an expression\n\n      var expression = this.parseExpression(false, groupEnd);\n      var lastToken = this.fetch();\n      this.expect(groupEnd); // Check that we got a matching closing brace\n\n      this.gullet.endGroup();\n      result = {\n        type: \"ordgroup\",\n        mode: this.mode,\n        loc: SourceLocation.range(firstToken, lastToken),\n        body: expression,\n        // A group formed by \\begingroup...\\endgroup is a semi-simple group\n        // which doesn't affect spacing in math mode, i.e., is transparent.\n        // https://tex.stackexchange.com/questions/1930/when-should-one-\n        // use-begingroup-instead-of-bgroup\n        semisimple: text === \"\\\\begingroup\" || undefined\n      };\n    } else {\n      // If there exists a function with this name, parse the function.\n      // Otherwise, just return a nucleus\n      result = this.parseFunction(breakOnTokenText, name) || this.parseSymbol();\n\n      if (result == null && text[0] === \"\\\\\" && !implicitCommands.hasOwnProperty(text)) {\n        if (this.settings.throwOnError) {\n          throw new ParseError(\"Undefined control sequence: \" + text, firstToken);\n        }\n\n        result = this.formatUnsupportedCmd(text);\n        this.consume();\n      }\n    }\n\n    return result;\n  }\n  /**\n   * Form ligature-like combinations of characters for text mode.\n   * This includes inputs like \"--\", \"---\", \"``\" and \"''\".\n   * The result will simply replace multiple textord nodes with a single\n   * character in each value by a single textord node having multiple\n   * characters in its value.  The representation is still ASCII source.\n   * The group will be modified in place.\n   */\n\n\n  formLigatures(group) {\n    var n = group.length - 1;\n\n    for (var i = 0; i < n; ++i) {\n      var a = group[i]; // $FlowFixMe: Not every node type has a `text` property.\n\n      var v = a.text;\n\n      if (v === \"-\" && group[i + 1].text === \"-\") {\n        if (i + 1 < n && group[i + 2].text === \"-\") {\n          group.splice(i, 3, {\n            type: \"textord\",\n            mode: \"text\",\n            loc: SourceLocation.range(a, group[i + 2]),\n            text: \"---\"\n          });\n          n -= 2;\n        } else {\n          group.splice(i, 2, {\n            type: \"textord\",\n            mode: \"text\",\n            loc: SourceLocation.range(a, group[i + 1]),\n            text: \"--\"\n          });\n          n -= 1;\n        }\n      }\n\n      if ((v === \"'\" || v === \"`\") && group[i + 1].text === v) {\n        group.splice(i, 2, {\n          type: \"textord\",\n          mode: \"text\",\n          loc: SourceLocation.range(a, group[i + 1]),\n          text: v + v\n        });\n        n -= 1;\n      }\n    }\n  }\n  /**\n   * Parse a single symbol out of the string. Here, we handle single character\n   * symbols and special functions like \\verb.\n   */\n\n\n  parseSymbol() {\n    var nucleus = this.fetch();\n    var text = nucleus.text;\n\n    if (/^\\\\verb[^a-zA-Z]/.test(text)) {\n      this.consume();\n      var arg = text.slice(5);\n      var star = arg.charAt(0) === \"*\";\n\n      if (star) {\n        arg = arg.slice(1);\n      } // Lexer's tokenRegex is constructed to always have matching\n      // first/last characters.\n\n\n      if (arg.length < 2 || arg.charAt(0) !== arg.slice(-1)) {\n        throw new ParseError(\"\\\\verb assertion failed --\\n                    please report what input caused this bug\");\n      }\n\n      arg = arg.slice(1, -1); // remove first and last char\n\n      return {\n        type: \"verb\",\n        mode: \"text\",\n        body: arg,\n        star\n      };\n    } // At this point, we should have a symbol, possibly with accents.\n    // First expand any accented base symbol according to unicodeSymbols.\n\n\n    if (unicodeSymbols.hasOwnProperty(text[0]) && !symbols[this.mode][text[0]]) {\n      // This behavior is not strict (XeTeX-compatible) in math mode.\n      if (this.settings.strict && this.mode === \"math\") {\n        this.settings.reportNonstrict(\"unicodeTextInMathMode\", \"Accented Unicode text character \\\"\" + text[0] + \"\\\" used in \" + \"math mode\", nucleus);\n      }\n\n      text = unicodeSymbols[text[0]] + text.slice(1);\n    } // Strip off any combining characters\n\n\n    var match = combiningDiacriticalMarksEndRegex.exec(text);\n\n    if (match) {\n      text = text.substring(0, match.index);\n\n      if (text === 'i') {\n        text = '\\u0131'; // dotless i, in math and text mode\n      } else if (text === 'j') {\n        text = '\\u0237'; // dotless j, in math and text mode\n      }\n    } // Recognize base symbol\n\n\n    var symbol;\n\n    if (symbols[this.mode][text]) {\n      if (this.settings.strict && this.mode === 'math' && extraLatin.indexOf(text) >= 0) {\n        this.settings.reportNonstrict(\"unicodeTextInMathMode\", \"Latin-1/Unicode text character \\\"\" + text[0] + \"\\\" used in \" + \"math mode\", nucleus);\n      }\n\n      var group = symbols[this.mode][text].group;\n      var loc = SourceLocation.range(nucleus);\n      var s;\n\n      if (ATOMS.hasOwnProperty(group)) {\n        // $FlowFixMe\n        var family = group;\n        s = {\n          type: \"atom\",\n          mode: this.mode,\n          family,\n          loc,\n          text\n        };\n      } else {\n        // $FlowFixMe\n        s = {\n          type: group,\n          mode: this.mode,\n          loc,\n          text\n        };\n      } // $FlowFixMe\n\n\n      symbol = s;\n    } else if (text.charCodeAt(0) >= 0x80) {\n      // no symbol for e.g. ^\n      if (this.settings.strict) {\n        if (!supportedCodepoint(text.charCodeAt(0))) {\n          this.settings.reportNonstrict(\"unknownSymbol\", \"Unrecognized Unicode character \\\"\" + text[0] + \"\\\"\" + (\" (\" + text.charCodeAt(0) + \")\"), nucleus);\n        } else if (this.mode === \"math\") {\n          this.settings.reportNonstrict(\"unicodeTextInMathMode\", \"Unicode text character \\\"\" + text[0] + \"\\\" used in math mode\", nucleus);\n        }\n      } // All nonmathematical Unicode characters are rendered as if they\n      // are in text mode (wrapped in \\text) because that's what it\n      // takes to render them in LaTeX.  Setting `mode: this.mode` is\n      // another natural choice (the user requested math mode), but\n      // this makes it more difficult for getCharacterMetrics() to\n      // distinguish Unicode characters without metrics and those for\n      // which we want to simulate the letter M.\n\n\n      symbol = {\n        type: \"textord\",\n        mode: \"text\",\n        loc: SourceLocation.range(nucleus),\n        text\n      };\n    } else {\n      return null; // EOF, ^, _, {, }, etc.\n    }\n\n    this.consume(); // Transform combining characters into accents\n\n    if (match) {\n      for (var i = 0; i < match[0].length; i++) {\n        var accent = match[0][i];\n\n        if (!unicodeAccents[accent]) {\n          throw new ParseError(\"Unknown accent ' \" + accent + \"'\", nucleus);\n        }\n\n        var command = unicodeAccents[accent][this.mode] || unicodeAccents[accent].text;\n\n        if (!command) {\n          throw new ParseError(\"Accent \" + accent + \" unsupported in \" + this.mode + \" mode\", nucleus);\n        }\n\n        symbol = {\n          type: \"accent\",\n          mode: this.mode,\n          loc: SourceLocation.range(nucleus),\n          label: command,\n          isStretchy: false,\n          isShifty: true,\n          // $FlowFixMe\n          base: symbol\n        };\n      }\n    } // $FlowFixMe\n\n\n    return symbol;\n  }\n\n}\nParser.endOfExpression = [\"}\", \"\\\\endgroup\", \"\\\\end\", \"\\\\right\", \"&\"];\n\n/**\n * Provides a single function for parsing an expression using a Parser\n * TODO(emily): Remove this\n */\n\n/**\n * Parses an expression using a Parser, then returns the parsed result.\n */\nvar parseTree = function parseTree(toParse, settings) {\n  if (!(typeof toParse === 'string' || toParse instanceof String)) {\n    throw new TypeError('KaTeX can only parse string typed expression');\n  }\n\n  var parser = new Parser(toParse, settings); // Blank out any \\df@tag to avoid spurious \"Duplicate \\tag\" errors\n\n  delete parser.gullet.macros.current[\"\\\\df@tag\"];\n  var tree = parser.parse(); // Prevent a color definition from persisting between calls to katex.render().\n\n  delete parser.gullet.macros.current[\"\\\\current@color\"];\n  delete parser.gullet.macros.current[\"\\\\color\"]; // If the input used \\tag, it will set the \\df@tag macro to the tag.\n  // In this case, we separately parse the tag and wrap the tree.\n\n  if (parser.gullet.macros.get(\"\\\\df@tag\")) {\n    if (!settings.displayMode) {\n      throw new ParseError(\"\\\\tag works only in display equations\");\n    }\n\n    tree = [{\n      type: \"tag\",\n      mode: \"text\",\n      body: tree,\n      tag: parser.subparse([new Token(\"\\\\df@tag\")])\n    }];\n  }\n\n  return tree;\n};\n\n/* eslint no-console:0 */\n\n/**\n * Parse and build an expression, and place that expression in the DOM node\n * given.\n */\nvar render = function render(expression, baseNode, options) {\n  baseNode.textContent = \"\";\n  var node = renderToDomTree(expression, options).toNode();\n  baseNode.appendChild(node);\n}; // KaTeX's styles don't work properly in quirks mode. Print out an error, and\n// disable rendering.\n\n\nif (typeof document !== \"undefined\") {\n  if (document.compatMode !== \"CSS1Compat\") {\n    typeof console !== \"undefined\" && console.warn(\"Warning: KaTeX doesn't work in quirks mode. Make sure your \" + \"website has a suitable doctype.\");\n\n    render = function render() {\n      throw new ParseError(\"KaTeX doesn't work in quirks mode.\");\n    };\n  }\n}\n/**\n * Parse and build an expression, and return the markup for that.\n */\n\n\nvar renderToString = function renderToString(expression, options) {\n  var markup = renderToDomTree(expression, options).toMarkup();\n  return markup;\n};\n/**\n * Parse an expression and return the parse tree.\n */\n\n\nvar generateParseTree = function generateParseTree(expression, options) {\n  var settings = new Settings(options);\n  return parseTree(expression, settings);\n};\n/**\n * If the given error is a KaTeX ParseError and options.throwOnError is false,\n * renders the invalid LaTeX as a span with hover title giving the KaTeX\n * error message.  Otherwise, simply throws the error.\n */\n\n\nvar renderError = function renderError(error, expression, options) {\n  if (options.throwOnError || !(error instanceof ParseError)) {\n    throw error;\n  }\n\n  var node = buildCommon.makeSpan([\"katex-error\"], [new SymbolNode(expression)]);\n  node.setAttribute(\"title\", error.toString());\n  node.setAttribute(\"style\", \"color:\" + options.errorColor);\n  return node;\n};\n/**\n * Generates and returns the katex build tree. This is used for advanced\n * use cases (like rendering to custom output).\n */\n\n\nvar renderToDomTree = function renderToDomTree(expression, options) {\n  var settings = new Settings(options);\n\n  try {\n    var tree = parseTree(expression, settings);\n    return buildTree(tree, expression, settings);\n  } catch (error) {\n    return renderError(error, expression, settings);\n  }\n};\n/**\n * Generates and returns the katex build tree, with just HTML (no MathML).\n * This is used for advanced use cases (like rendering to custom output).\n */\n\n\nvar renderToHTMLTree = function renderToHTMLTree(expression, options) {\n  var settings = new Settings(options);\n\n  try {\n    var tree = parseTree(expression, settings);\n    return buildHTMLTree(tree, expression, settings);\n  } catch (error) {\n    return renderError(error, expression, settings);\n  }\n};\n\nvar version = \"0.16.22\";\nvar __domTree = {\n  Span,\n  Anchor,\n  SymbolNode,\n  SvgNode,\n  PathNode,\n  LineNode\n}; // ESM exports\n\nvar katex = {\n  /**\n   * Current KaTeX version\n   */\n  version,\n\n  /**\n   * Renders the given LaTeX into an HTML+MathML combination, and adds\n   * it as a child to the specified DOM node.\n   */\n  render,\n\n  /**\n   * Renders the given LaTeX into an HTML+MathML combination string,\n   * for sending to the client.\n   */\n  renderToString,\n\n  /**\n   * KaTeX error, usually during parsing.\n   */\n  ParseError,\n\n  /**\n   * The schema of Settings\n   */\n  SETTINGS_SCHEMA,\n\n  /**\n   * Parses the given LaTeX into KaTeX's internal parse tree structure,\n   * without rendering to HTML or MathML.\n   *\n   * NOTE: This method is not currently recommended for public use.\n   * The internal tree representation is unstable and is very likely\n   * to change. Use at your own risk.\n   */\n  __parse: generateParseTree,\n\n  /**\n   * Renders the given LaTeX into an HTML+MathML internal DOM tree\n   * representation, without flattening that representation to a string.\n   *\n   * NOTE: This method is not currently recommended for public use.\n   * The internal tree representation is unstable and is very likely\n   * to change. Use at your own risk.\n   */\n  __renderToDomTree: renderToDomTree,\n\n  /**\n   * Renders the given LaTeX into an HTML internal DOM tree representation,\n   * without MathML and without flattening that representation to a string.\n   *\n   * NOTE: This method is not currently recommended for public use.\n   * The internal tree representation is unstable and is very likely\n   * to change. Use at your own risk.\n   */\n  __renderToHTMLTree: renderToHTMLTree,\n\n  /**\n   * extends internal font metrics object with a new object\n   * each key in the new object represents a font name\n  */\n  __setFontMetrics: setFontMetrics,\n\n  /**\n   * adds a new symbol to builtin symbols table\n   */\n  __defineSymbol: defineSymbol,\n\n  /**\n   * adds a new function to builtin function list,\n   * which directly produce parse tree elements\n   * and have their own html/mathml builders\n   */\n  __defineFunction: defineFunction,\n\n  /**\n   * adds a new macro to builtin macro list\n   */\n  __defineMacro: defineMacro,\n\n  /**\n   * Expose the dom tree node types, which can be useful for type checking nodes.\n   *\n   * NOTE: These methods are not currently recommended for public use.\n   * The internal tree representation is unstable and is very likely\n   * to change. Use at your own risk.\n   */\n  __domTree\n};\n\nexport { ParseError, SETTINGS_SCHEMA, defineFunction as __defineFunction, defineMacro as __defineMacro, defineSymbol as __defineSymbol, __domTree, generateParseTree as __parse, renderToDomTree as __renderToDomTree, renderToHTMLTree as __renderToHTMLTree, setFontMetrics as __setFontMetrics, katex as default, render, renderToString, version };\n", "import katex from 'katex';\n\nconst inlineRule = /^(\\${1,2})(?!\\$)((?:\\\\.|[^\\\\\\n])*?(?:\\\\.|[^\\\\\\n\\$]))\\1(?=[\\s?!\\.,:\uFF1F\uFF01\u3002\uFF0C\uFF1A]|$)/;\nconst inlineRuleNonStandard = /^(\\${1,2})(?!\\$)((?:\\\\.|[^\\\\\\n])*?(?:\\\\.|[^\\\\\\n\\$]))\\1/; // Non-standard, even if there are no spaces before and after $ or $$, try to parse\n\nconst blockRule = /^(\\${1,2})\\n((?:\\\\[^]|[^\\\\])+?)\\n\\1(?:\\n|$)/;\n\nexport default function(options = {}) {\n  return {\n    extensions: [\n      inlineKatex(options, createRenderer(options, false)),\n      blockKatex(options, createRenderer(options, true)),\n    ],\n  };\n}\n\nfunction createRenderer(options, newlineAfter) {\n  return (token) => katex.renderToString(token.text, { ...options, displayMode: token.displayMode }) + (newlineAfter ? '\\n' : '');\n}\n\nfunction inlineKatex(options, renderer) {\n  const nonStandard = options && options.nonStandard;\n  const ruleReg = nonStandard ? inlineRuleNonStandard : inlineRule;\n  return {\n    name: 'inlineKatex',\n    level: 'inline',\n    start(src) {\n      let index;\n      let indexSrc = src;\n\n      while (indexSrc) {\n        index = indexSrc.indexOf('$');\n        if (index === -1) {\n          return;\n        }\n        const f = nonStandard ? index > -1 : index === 0 || indexSrc.charAt(index - 1) === ' ';\n        if (f) {\n          const possibleKatex = indexSrc.substring(index);\n\n          if (possibleKatex.match(ruleReg)) {\n            return index;\n          }\n        }\n\n        indexSrc = indexSrc.substring(index + 1).replace(/^\\$+/, '');\n      }\n    },\n    tokenizer(src, tokens) {\n      const match = src.match(ruleReg);\n      if (match) {\n        return {\n          type: 'inlineKatex',\n          raw: match[0],\n          text: match[2].trim(),\n          displayMode: match[1].length === 2,\n        };\n      }\n    },\n    renderer,\n  };\n}\n\nfunction blockKatex(options, renderer) {\n  return {\n    name: 'blockKatex',\n    level: 'block',\n    tokenizer(src, tokens) {\n      const match = src.match(blockRule);\n      if (match) {\n        return {\n          type: 'blockKatex',\n          raw: match[0],\n          text: match[2].trim(),\n          displayMode: match[1].length === 2,\n        };\n      }\n    },\n    renderer,\n  };\n}\n", "//! use only TS types\r\nimport * as vscode from \"vscode\";\r\n\r\n//\r\nimport vscodePromise from '../imports/api.ts';\r\n\r\n//\r\nconst makeDebouncer = (delay: number = 1000)=>{\r\n    let timer: NodeJS.Timeout | undefined;\r\n    return (fn: ()=>void)=>{\r\n        if (timer) { clearTimeout(timer); timer = undefined; }\r\n        timer = setTimeout(fn, delay);\r\n    };\r\n};\r\n\r\n//\r\nconst cmdDBN = makeDebouncer();\r\nconst ctxDBN = makeDebouncer();\r\n\r\n//\r\nconst redDBN = makeDebouncer(100);\r\nconst undDBN = makeDebouncer(100);\r\n\r\n// temporary...\r\nconst changeFlags = {\r\n    redo: false,\r\n    undo: false\r\n};\r\n\r\n//\r\nasync function updateLineContext() {\r\n    const vscode = await vscodePromise;\r\n    const editor = vscode.window.activeTextEditor;\r\n\r\n    //\r\n    if (!editor) {\r\n        vscode?.commands?.executeCommand?.('setContext', 'lineIsEmpty', false);\r\n        vscode?.commands?.executeCommand?.('setContext', 'cursorAtLineStart', false);\r\n        vscode?.commands?.executeCommand?.('setContext', 'cursorAtLineEnd', false);\r\n        vscode?.commands?.executeCommand?.('setContext', 'cursorAtLineStartAndEnd', false);\r\n        return;\r\n    }\r\n\r\n    //\r\n    const pos = editor.selection.active;\r\n    const line = editor.document.lineAt(pos?.line);\r\n\r\n    //\r\n    const isEmpty = line?.text?.length === 0;\r\n    const atStart = pos?.character === 0;\r\n    const atEnd = pos?.character === line?.text?.length;\r\n    const atStartAndEnd = atStart && atEnd; // \u0441\u0442\u0440\u043E\u043A\u0430 \u043F\u0443\u0441\u0442\u0430 \u0438 \u043A\u0443\u0440\u0441\u043E\u0440 \u0432 \u043D\u0430\u0447\u0430\u043B\u0435\r\n\r\n    //\r\n    vscode?.commands?.executeCommand?.('setContext', 'lineIsEmpty', isEmpty);\r\n    vscode?.commands?.executeCommand?.('setContext', 'cursorAtLineStart', atStart);\r\n    vscode?.commands?.executeCommand?.('setContext', 'cursorAtLineEnd', atEnd);\r\n    vscode?.commands?.executeCommand?.('setContext', 'cursorAtLineStartAndEnd', atStartAndEnd);\r\n}\r\n\r\n//\r\nasync function proxyUndo() {\r\n    const vscode = await vscodePromise;\r\n    const unflag = () => { // run cursor command!\r\n        changeFlags.undo = false;\r\n        clearTimeout(timer);\r\n    };\r\n    await vscode?.commands?.executeCommand?.('undo')?.catch?.(unflag);\r\n    const timer = setTimeout(()=>{\r\n        if (!changeFlags.undo) { unflag?.(); }\r\n        changeFlags.undo = false;\r\n    }, 10);\r\n}\r\n\r\n//\r\nasync function proxyRedo() {\r\n    const vscode = await vscodePromise;\r\n    const unflag = () => { // run cursor command!\r\n        changeFlags.redo = false; clearTimeout(timer);\r\n        return vscode?.commands?.executeCommand?.(\"editor.action.acceptCursorTabSuggestion\");\r\n    };\r\n    await vscode?.commands?.executeCommand?.('redo')?.catch?.(unflag);\r\n    const timer = setTimeout(()=>{\r\n        if (!changeFlags.redo) { unflag?.(); }\r\n        changeFlags.redo = false;\r\n    }, 10);\r\n}\r\n\r\n//\r\nexport async function contexts(context: vscode.ExtensionContext) {\r\n    const vscode = await vscodePromise;\r\n    vscode?.commands?.executeCommand?.('setContext', 'canRedo', false);\r\n    vscode?.commands?.executeCommand?.('setContext', 'canUndo', false);\r\n\r\n    //\r\n    changeFlags.redo = false;\r\n    changeFlags.undo = false;\r\n\r\n    //\r\n    context?.subscriptions?.push?.(\r\n        vscode?.workspace?.onDidChangeTextDocument?.((ev)=>{\r\n            if (ev?.reason == 2) { changeFlags.redo = true; redDBN(()=>(changeFlags.redo = false)); };\r\n            if (ev?.reason == 1) { changeFlags.undo = true; undDBN(()=>(changeFlags.undo = false));  };\r\n        })\r\n    );\r\n\r\n    //\r\n    context?.subscriptions?.push?.(\r\n        vscode?.window?.onDidChangeTextEditorSelection?.(updateLineContext),\r\n        vscode?.window?.onDidChangeActiveTextEditor?.(updateLineContext),\r\n        vscode?.workspace?.onDidChangeTextDocument?.(updateLineContext)\r\n    );\r\n\r\n    //\r\n    context?.subscriptions?.push?.(\r\n        vscode?.commands?.registerCommand?.('vext.proxyUndo', proxyUndo),\r\n        vscode?.commands?.registerCommand?.('vext.proxyRedo', proxyRedo)\r\n    );\r\n\r\n    //\r\n    updateLineContext();\r\n}\r\n\r\n//\r\nexport function deactivate() {}\r\n", "//! use only TS types\r\nimport * as vscode from \"vscode\";\r\nimport * as path from \"path\";\r\n\r\n//\r\nimport vscodePromise from '../imports/api.ts';\r\n\r\n//\r\nasync function getClipboardContent(): Promise<string | undefined> {\r\n    const vscodeAPI = await vscodePromise;\r\n\r\n    //\r\n    try {\r\n        const clipboardContent = await vscodeAPI.env.clipboard.readText();\r\n        console.log('Clipboard content:', clipboardContent);\r\n        vscodeAPI.window.showInformationMessage(`Clipboard: ${clipboardContent}`);\r\n        return clipboardContent;\r\n    } catch (error) {\r\n        console.error('Error reading clipboard:', error);\r\n        vscodeAPI.window.showErrorMessage('Failed to read clipboard content.');\r\n    }\r\n}\r\n\r\n//\r\nasync function getDirectoryFromUri(uri: vscode.Uri): Promise<string> {\r\n    const vscodeAPI = await vscodePromise;\r\n    const stat = await vscodeAPI.workspace.fs.stat(uri);\r\n\r\n    //\r\n    if (stat.type & vscodeAPI.FileType.Directory) {\r\n        return uri.fsPath.replace(/\\\\/g, '/');\r\n    } else {\r\n        return path.dirname(uri.fsPath.replace(/\\\\/g, '/'));\r\n    }\r\n}\r\n\r\n//\r\nfunction getBaseName(filePath: string): string {\r\n    return filePath.replace(/\\\\/g, '/').split('/').pop() || '';\r\n}\r\n\r\n//\r\nlet copiedPath: string | undefined;\r\nexport async function symlink(context: vscode.ExtensionContext) {\r\n    const vscodeAPI = await vscodePromise;\r\n\r\n    //\r\n    context.subscriptions.push(\r\n        vscodeAPI.commands.registerCommand('vext.pasteAsSymlink', async (uri: vscode.Uri) => {\r\n            const clipboardContent = await getClipboardContent();\r\n            if (!clipboardContent) {\r\n                vscodeAPI.window.showErrorMessage('No path copied for symlink.'); return;\r\n            } else {\r\n                copiedPath = clipboardContent;\r\n            }\r\n\r\n            //\r\n            copiedPath = copiedPath?.replace?.(/\\\\/g, '/');\r\n            const dirTo = await getDirectoryFromUri(uri);\r\n            const defaultName = getBaseName(copiedPath);\r\n            const linkName = (await vscodeAPI.window.showInputBox({\r\n                prompt: 'Enter symlink name (leave empty to use original name)',\r\n                value: defaultName\r\n            })) || defaultName;\r\n\r\n            //\r\n            const finalLinkName = linkName.trim() === '' ? defaultName : linkName.trim();\r\n            const linkPath = path.join(dirTo, finalLinkName)?.replace?.(/\\\\/g, '/');\r\n\r\n            //\r\n            let command = '';\r\n            if (process.platform === 'win32' && !vscodeAPI.env.remoteName) {\r\n                command = `New-Item -ItemType SymbolicLink -Path \"${linkPath}\" -Target \"${copiedPath}\"`;\r\n            } else {\r\n                command = `ln -s \"${copiedPath}\" \"${linkPath}\"`;\r\n            }\r\n\r\n            //\r\n            const terminal = vscodeAPI.window.createTerminal({ cwd: dirTo, name: 'Symlink Creator' }); terminal.show(); terminal.sendText(command);\r\n            vscodeAPI.window.showInformationMessage('Symlink command sent to terminal. Press Enter in terminal if needed.');\r\n        })\r\n    );\r\n}\r\n\r\n//\r\nexport function deactivate() {}\r\n", "// web-view instruments\nimport { webview }  from './web/webview.mjs';\n\n// project management\nimport { manager }  from './views/manager.ts';\n\n// editor tools\nimport { mathml }   from './editor/mathcopy.ts';\nimport { markdown } from \"./editor/markdown.ts\";\n\n// context states\nimport { contexts } from \"./context/states.ts\";\n\n// symlink\nimport { symlink } from './explorer/symlink.ts';\n\n//\nif (Promise.try === undefined || Promise.try === null || !(\"try\" in Promise)) {\n    Promise.try = (fn, ...args)=>{\n        return new Promise((resolve, reject)=>{\n            try {\n                resolve(fn(...args));\n            } catch (error) {\n                reject(error);\n            }\n        });\n    };\n}\n\n// This method is called when your extension is activated\n// Your extension is activated the very first time the command is executed\nexport function activate(context) {\n    Promise.try(symlink, context)?.catch?.(e=>console.error(e));\n    Promise.try(mathml, context)?.catch?.(e=>console.error(e));\n    Promise.try(markdown, context)?.catch?.(e=>console.error(e));\n    Promise.try(manager, context)?.catch?.(e=>console.error(e));\n    Promise.try(webview, context)?.catch?.(e=>console.error(e));\n    Promise.try(contexts, context)?.catch?.(e=>console.error(e));\n}\n\n// This method is called when your extension is deactivated\nexport function deactivate() {}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;KAAA,SAA2CA,GAAMC,GAAAA;AAC1B,kBAAA,OAAZC,WAA0C,YAAA,OAAXC,SACxCA,OAAOD,UAAUD,EAAAA,IACQ,cAAA,OAAXG,UAAyBA,OAAOC,MAC9CD,OAAO,CAAA,GAAIH,CAAAA,IACe,YAAA,OAAZC,UACdA,QAAuB,gBAAID,EAAAA,IAE3BD,EAAoB,gBAAIC,EAAAA;IACzB,EAAEK,SAAM,OAAA,MAAA;AAAA,UAAA,IAAA,EAAA,MAAA,CAAAC,IAAAC,OAAA;AAAA;ACwCT,iBAASC,GAAOC,IAAQC,IAAAA;AAIvB,iBAAA,WAHIA,OACHA,KAAKC,SAECD,MAA2B,cAAA,OAAdA,GAAGF,SAAwBE,GAAGF,OAAOC,EAAAA,IAAUA;QACpE;AAkCA,YAAIG,KAAYJ,GAAO,EAUtBK,MAAM,aAYNC,QAAQ,SAAUC,IAAAA;AACjB,iBAAOA,OAAUH,GAAUC;QAC5B,GASAG,iBAAiB,mBASjBC,UAAU,YAUVC,uBAAuB,yBASvBC,eAAe,gBAAA,CAAA,GAQZC,IAAYZ,GAAO,EAMtBK,MAAM,gCASNC,QAAQ,SAAUO,IAAAA;AACjB,iBAAOA,OAAQD,EAAUP;QAC1B,GAOAS,KAAK,8BAOLC,KAAK,wCAOLC,OAAO,gCAAA,CAAA;AAGRvB,QAAAA,GAAQwB,SAjIR,SAAgBC,IAAQC,IAAAA;AACvB,cAAe,SAAXD,MAAqC,YAAA,OAAXA,GAC7B,OAAM,IAAIE,UAAU,yBAAA;AAErB,mBAASC,MAAOF,GACXhB,QAAOmB,UAAUC,eAAeC,KAAKL,IAAQE,EAAAA,MAChDH,GAAOG,EAAAA,IAAOF,GAAOE,EAAAA;AAGvB,iBAAOH;QACR,GAwHAzB,GAAQgC,OAtLR,SAAcC,IAAMC,IAAWC,IAAAA;AAI9B,cAAA,WAHIA,OACHA,KAAKC,MAAMP,YAERI,MAA2B,cAAA,OAAZE,GAAGH,KACrB,QAAOG,GAAGH,KAAKD,KAAKE,IAAMC,EAAAA;AAE3B,mBAASG,KAAI,GAAGA,KAAIJ,GAAKK,QAAQD,KAChC,KAAI3B,OAAOmB,UAAUC,eAAeC,KAAKE,IAAMI,EAAAA,GAAI;AAClD,gBAAIE,KAAON,GAAKI,EAAAA;AAChB,gBAAIH,GAAUH,KAAAA,QAAgBQ,IAAMF,IAAGJ,EAAAA,EACtC,QAAOM;UAET;QAEF,GAwKAvC,GAAQO,SAASA,IACjBP,GAAQW,YAAYA,IACpBX,GAAQmB,YAAYA;MAAAA,GAAAA,MAAAA,CAAAA,IAAAA,IAAAA,OAAAA;AAAAA,YC1MhBqB,KAAcC,GAAQ,IAAA,GACtBC,IAAMD,GAAQ,IAAA,GACdE,IAAWF,GAAQ,IAAA,GACnBG,IAAMH,GAAQ,IAAA,GAEdI,IAAoBH,EAAIG,mBAExB1B,IAAYqB,GAAYrB,WAExB2B,IAAaF,EAAIE,YACjBC,IAAYH,EAAIG;AAuBpB,iBAASC,EAAqBC,IAAAA;AAC7B,iBAAOA,GACLC,QAAQ,iBAAiB,IAAA,EACzBA,QAAQ,qBAAqB,IAAA;QAChC;AAiCA,iBAASC,EAAUC,IAAAA;AAClBhD,eAAKgD,UAAUA,MAAU,EAACC,SAAQ,CAAC,EAAA;QACpC;AAoEA,iBAASC,IAAAA;AACLlD,eAAKmD,QAAAA;QACT;AACA,iBAASC,EAASH,IAAQI,IAAAA;AACzBA,UAAAA,GAAKC,aAAaL,GAAQK,YAC1BD,GAAKE,eAAeN,GAAQM;QAC7B;AAiHA,iBAASC,EAASC,IAAAA;AACjB,cAAGA,GACF,QAAO,SAAOA,GAAEC,YAAW,MAAI,YAAUD,GAAEH,aAAW,UAAQG,GAAEF,eAAa;QAE/E;AACA,iBAASI,EAAUC,IAAMC,IAAM3B,IAAAA;AAC9B,iBAAmB,YAAA,OAAT0B,KACFA,GAAME,OAAOD,IAAM3B,EAAAA,IAEvB0B,GAAM1B,UAAU2B,KAAM3B,MAAU2B,KAC3B,IAAIE,KAAKC,KAAKC,OAAOL,IAAMC,IAAM3B,EAAAA,IAAQ,KAE1C0B;QAET;AAsCA,iBAASM,EAAeC,IAAOd,IAAAA;AACtBc,UAAAA,GAAOC,iBAGRD,GAAOC,eAAeC,YAAYhB,EAAAA,IAFlCc,GAAOG,IAAID,YAAYhB,EAAAA;QAI/B;AAnPAN,UAAUtB,UAAU8C,kBAAkB,SAASjD,IAAOkD,IAAAA;AACrD,cAAIxB,KAAUhD,KAAKgD,SACfR,KAAO,IAAIG,KACX8B,KAAazB,GAAQyB,cAAc,IAAIvB,KACvCwB,KAAe1B,GAAQ0B,cACvBzB,KAAUD,GAAQC,SAClB0B,KAAe3B,GAAQ4B,SAAO,CAAC,GAC/BnE,KAAS,aAAaoE,KAAKL,EAAAA,GACzBM,KAAYrE,KAAS8B,EAASwC,gBAAgBxC,EAASyC;AAC1D/B,UAAAA,MACFwB,GAAWQ,mBAAmBhC,EAAAA,GAG/BT,GAAIkC,eAkBL,SAA2BQ,IAAUT,IAAWxB,IAAAA;AAC/C,gBAAA,CAAIiC,IAAU;AACb,kBAAGT,cAAsBvB,EACxB,QAAOuB;AAERS,cAAAA,KAAYT;YACb;AACA,gBAAIC,KAAe,CAAC,GAChBS,KAAaD,cAAqBE;AAEtC,qBAASC,GAAM7D,IAAAA;AACd,kBAAI8D,KAAKJ,GAAU1D,EAAAA;AAAAA,eACf8D,MAAMH,OACTG,KAAyB,KAApBJ,GAAUhD,SAAY,SAASqD,IAAAA;AAAKL,gBAAAA,GAAU1D,IAAI+D,EAAAA;cAAI,IAAEL,KAE9DR,GAAalD,EAAAA,IAAO8D,MAAM,SAASC,IAAAA;AAClCD,gBAAAA,GAAG,aAAW9D,KAAI,OAAM+D,KAAI/B,EAASP,EAAAA,CAAAA;cACtC,KAAG,WAAA;cAAW;YACf;AAIA,mBAbAA,KAAUA,MAAS,CAAC,GAUpBoC,GAAM,SAAA,GACNA,GAAM,OAAA,GACNA,GAAM,YAAA,GACCX;UACR,EAzCsCA,IAAaD,IAAWxB,EAAAA,GAC7DT,GAAIiC,aAAazB,GAAQyB,cAAcA,IACpChE,OACFkE,GAAa,EAAA,IAAM5D,EAAUP,OAE9BmE,GAAaa,MAAMb,GAAaa,OAAOzE,EAAUG;AACjD,cAAIuE,KAAYzC,GAAQJ,wBAAwBA;AAUhD,iBATItB,MAA4B,YAAA,OAAXA,KACpBkB,GAAIkD,MACHD,GAAUnE,EAAAA,GACVqD,IACAG,EAAAA,IAGDtC,GAAIkC,aAAaiB,MAAM,oBAAA,GAEjBlB,GAAWH;QACnB,GA+CApB,EAAWzB,YAAY,EACtBmE,eAAgB,WAAA;AACZ5F,eAAKsE,MAAM,IAAI7B,IAAoBoD,eAAe,MAAM,MAAM,IAAA,GAC1D7F,KAAKiD,YACLjD,KAAKsE,IAAIwB,cAAc9F,KAAKiD,QAAQS;QAE5C,GACAqC,cAAa,SAASC,IAAcC,IAAWC,IAAOC,IAAAA;AACrD,cAAI7B,KAAMtE,KAAKsE,KACR8B,KAAK9B,GAAI+B,gBAAgBL,IAAcE,MAAOD,EAAAA,GAC9CK,KAAMH,GAAMjE;AAChBgC,YAAclE,MAAMoG,EAAAA,GACpBpG,KAAKoE,iBAAiBgC,IAEzBpG,KAAKiD,WAAWG,EAASpD,KAAKiD,SAAQmD,EAAAA;AACnC,mBAASnE,KAAI,GAAIA,KAAIqE,IAAKrE,MAAK;AACvB+D,YAAAA,KAAeG,GAAMI,OAAOtE,EAAAA;AAAhC,gBACIvB,KAAQyF,GAAMK,SAASvE,EAAAA,GAE7BwE,MADMP,KAAQC,GAAMO,SAASzE,EAAAA,GACtBqC,GAAIqC,kBAAkBX,IAAcE,EAAAA;AAC/ClG,iBAAKiD,WAAUG,EAAS+C,GAAMS,WAAW3E,EAAAA,GAAGwE,EAAAA,GAC5CA,GAAK/F,QAAQ+F,GAAKI,YAAYnG,IAC9B0F,GAAGU,iBAAiBL,EAAAA;UAClB;QACJ,GACAM,YAAW,SAASf,IAAcC,IAAWC,IAAAA;AAC5C,cAAIc,KAAUhH,KAAKoE;AACL4C,UAAAA,GAAQC,SACtBjH,KAAKoE,iBAAiB4C,GAAQE;QAC/B,GACAC,oBAAmB,SAASC,IAAQpG,IAAAA;QACpC,GACAqG,kBAAiB,SAASD,IAAAA;QAC1B,GACAE,uBAAsB,SAASjG,IAAQkG,IAAAA;AACnC,cAAIC,KAAMxH,KAAKsE,IAAImD,4BAA4BpG,IAAQkG,EAAAA;AACvDvH,eAAKiD,WAAWG,EAASpD,KAAKiD,SAAQuE,EAAAA,GACtCtD,EAAclE,MAAMwH,EAAAA;QACxB,GACAE,qBAAoB,SAASC,IAAI9D,IAAO3B,IAAAA;QACxC,GACA0F,YAAW,SAAShE,IAAOC,IAAO3B,IAAAA;AAGjC,cAFA0B,KAAQD,EAAUkE,MAAM7H,MAAK8H,SAAAA,GAEpB;AACR,gBAAI9H,KAAKmD,MACR,KAAI4E,KAAW/H,KAAKsE,IAAI0D,mBAAmBpE,EAAAA;gBAEvCmE,CAAAA,KAAW/H,KAAKsE,IAAI2D,eAAerE,EAAAA;AAErC5D,iBAAKoE,iBACPpE,KAAKoE,eAAeC,YAAY0D,EAAAA,IACxB,QAAQlD,KAAKjB,EAAAA,KACrB5D,KAAKsE,IAAID,YAAY0D,EAAAA,GAGtB/H,KAAKiD,WAAWG,EAASpD,KAAKiD,SAAQ8E,EAAAA;UACvC;QACD,GACAG,eAAc,SAASC,IAAAA;QACvB,GACAC,aAAY,WAAA;AACXpI,eAAKsE,IAAImB,UAAAA;QACV,GACAR,oBAAmB,SAAUhC,IAAAA;AAAAA,WACtBjD,KAAKiD,UAAUA,QACjBA,GAAQK,aAAa;QAE1B,GAEA+E,SAAQ,SAASzE,IAAOC,IAAO3B,IAAAA;AAC9B0B,UAAAA,KAAQD,EAAUkE,MAAM7H,MAAK8H,SAAAA;AAC1B,cAAIQ,KAAOtI,KAAKsE,IAAIiE,cAAc3E,EAAAA;AAClC5D,eAAKiD,WAAWG,EAASpD,KAAKiD,SAAQqF,EAAAA,GACtCpE,EAAclE,MAAMsI,EAAAA;QACxB,GAEAE,YAAW,WAAA;AAEPxI,eAAKmD,QAAAA;QACT,GACAsF,UAAS,WAAA;AACLzI,eAAKmD,QAAAA;QACT,GAEAuF,UAAS,SAASP,IAAMQ,IAAUjF,IAAAA;AACjC,cAAIkF,KAAO5I,KAAKsE,IAAIuE;AACjB,cAAID,MAAQA,GAAKE,oBAAoB;AACjC,gBAAIC,KAAKH,GAAKE,mBAAmBX,IAAMQ,IAAUjF,EAAAA;AACjD1D,iBAAKiD,WAAWG,EAASpD,KAAKiD,SAAQ8F,EAAAA,GACtC7E,EAAclE,MAAM+I,EAAAA,GACxB/I,KAAKsE,IAAI0E,UAAUD;UACnB;QACJ,GAKAE,SAAQ,SAAStD,IAAAA;AAChBuD,kBAAQC,KAAK,sBAAqBxD,IAAMnC,EAASxD,KAAKiD,OAAAA,CAAAA;QACvD,GACA0C,OAAM,SAASA,IAAAA;AACduD,kBAAQvD,MAAM,oBAAmBA,IAAMnC,EAASxD,KAAKiD,OAAAA,CAAAA;QACtD,GACAmG,YAAW,SAASzD,IAAAA;AACnB,gBAAM,IAAIjD,EAAWiD,IAAO3F,KAAKiD,OAAAA;QAClC,EAAA,GAiDD,+JAA+JH,QAAQ,QAAO,SAAStB,IAAAA;AACtL0B,YAAWzB,UAAUD,EAAAA,IAAO,WAAA;AAAW,mBAAO;UAAI;QACnD,CAAA,GAaA5B,GAAQmD,YAAYA;MAAAA,GAAAA,MAAAA,CAAAA,IAAAA,IAAAA,OAAAA;ACjUpB,YAAIX,KAAcC,GAAQ,IAAA,GAEtBT,IAAOQ,GAAYR,MACnBb,IAAYqB,GAAYrB;AAO5B,iBAASsI,EAAgBxG,IAAAA;AACxB,iBAAiB,OAAVA;QACR;AAoBA,iBAASyG,EAAmBtC,IAASuC,IAAAA;AAIpC,iBAHKvC,GAAQtF,eAAe6H,EAAAA,MAC3BvC,GAAQuC,EAAAA,IAAAA,OAEFvC;QACR;AAOA,iBAASwC,EAAa3G,IAAAA;AACrB,cAAA,CAAKA,GAAO,QAAO,CAAA;AACnB,cAAIhB,KA1BL,SAAgCgB,IAAAA;AAE/B,mBAAOA,KAAQA,GAAM4G,MAAM,cAAA,EAAgBC,OAAOL,CAAAA,IAAkB,CAAA;UACrE,EAuBmCxG,EAAAA;AAClC,iBAAOvC,OAAOqJ,KAAK9H,GAAK+H,OAAON,GAAmB,CAAC,CAAA,CAAA;QACpD;AAeA,iBAASO,EAAKC,IAAIC,IAAAA;AACjB,mBAAQC,MAAKF,GACRxJ,QAAOmB,UAAUC,eAAeC,KAAKmI,IAAKE,EAAAA,MAC7CD,GAAKC,EAAAA,IAAKF,GAAIE,EAAAA;QAGjB;AAMA,iBAASC,EAASC,IAAMC,IAAAA;AACvB,cAAIC,KAAKF,GAAMzI;AACf,cAAA,EAAK2I,cAAcD,KAAO;AACzB,gBAASjK,KAAT,WAASA;YAAI;AAAJA,gBAAAA;AACTA,YAAAA,GAAEuB,YAAY0I,GAAM1I,WAEpBoI,EAAKO,IADLlK,KAAI,IAAIA,IAAAA,GAERgK,GAAMzI,YAAY2I,KAAKlK;UACxB;AACGkK,UAAAA,GAAGC,eAAeH,OACD,cAAA,OAATA,MACThB,QAAQvD,MAAM,mBAAiBuE,EAAAA,GAEhCE,GAAGC,cAAcH;QAEnB;AAGA,YAAII,IAAW,CAAC,GACZC,IAA8BD,EAASC,eAA8B,GACrEC,IAA8BF,EAASE,iBAA8B,GACrEC,IAA8BH,EAASG,YAA8B,GACrEC,IAA8BJ,EAASI,qBAA8B,GACrEC,IAA8BL,EAASK,wBAA8B,GACrEC,IAA8BN,EAASM,cAA8B,GACrEC,IAA8BP,EAASO,8BAA8B,GACrEC,IAA8BR,EAASQ,eAA8B,GACrEC,IAA8BT,EAASS,gBAA8B,GACrEC,IAA8BV,EAASU,qBAA8B,IACrEC,IAA8BX,EAASW,yBAA8B,IACrEC,IAA8BZ,EAASY,gBAA8B,IAGrEC,IAAgB,CAAC,GACjBC,IAAmB,CAAC,GAGpBC,KAF8BF,EAAcG,kBAAgCF,EAAiB,CAAA,IAAG,oBAAoB,IACtFD,EAAcI,sBAAgCH,EAAiB,CAAA,IAAG,wBAAwB,IAC1FD,EAAcE,yBAAgCD,EAAiB,CAAA,IAAG,2BAA2B,KAK3HI,MAJ8BL,EAAcM,sBAAgCL,EAAiB,CAAA,IAAG,kBAAkB,IACpFD,EAAcO,yBAAgCN,EAAiB,CAAA,IAAG,qBAAqB,IACvFD,EAAcQ,uBAAgCP,EAAiB,CAAA,IAAG,mBAAmB,IACrFD,EAAcS,+BAAgCR,EAAiB,CAAA,IAAG,2BAA2B,IAC7FD,EAAcK,iBAAgCJ,EAAiB,CAAA,IAAG,aAAa,KAE7GS,KAD8BV,EAAcW,qBAAgCV,EAAiB,CAAA,IAAG,iBAAiB,IACnFD,EAAcU,uBAAgCT,EAAiB,EAAA,IAAI,oBAAoB;AAczH,iBAASW,GAAaC,IAAMC,IAAAA;AAC3B,cAAGA,cAAmBC,MACrB,KAAIvG,KAAQsG;cAEZtG,CAAAA,KAAQ3F,MACRkM,MAAMvK,KAAK3B,MAAMoL,EAAiBY,EAAAA,CAAAA,GAClChM,KAAKiM,UAAUb,EAAiBY,EAAAA,GAC7BE,MAAMC,qBAAmBD,MAAMC,kBAAkBnM,MAAM+L,EAAAA;AAI3D,iBAFApG,GAAMqG,OAAOA,IACVC,OAASjM,KAAKiM,UAAUjM,KAAKiM,UAAU,OAAOA,KAC1CtG;QACR;AASA,iBAASyG,IAAAA;QACT;AA0CA,iBAASC,EAAahJ,IAAKiJ,IAAAA;AAC1BtM,eAAKuM,QAAQlJ,IACbrD,KAAKwM,WAAWF,IAChBG,EAAgBzM,IAAAA;QACjB;AACA,iBAASyM,EAAgB5K,IAAAA;AACxB,cAAI6K,KAAM7K,GAAK0K,MAAMI,QAAQ9K,GAAK0K,MAAMK,cAAcD;AACtD,cAAI9K,GAAK8K,SAASD,IAAK;AACtB,gBAAIG,KAAKhL,GAAK2K,SAAS3K,GAAK0K,KAAAA;AAE5B,gBADAO,GAAQjL,IAAK,UAASgL,GAAG3K,MAAAA,GAAAA,CACpBL,GAAKkL,YAAYF,GAAG3K,SAASL,GAAKkL,SACtC,UAAS9K,KAAI4K,GAAG3K,QAAQD,MAAKJ,IAAMI,KAC9B3B,QAAOmB,UAAUC,eAAeC,KAAKE,IAAMI,EAAAA,KAAAA,OACvCJ,GAAKI,EAAAA;AAIf4H,cAAKgD,IAAGhL,EAAAA,GACRA,GAAK8K,OAAOD;UACb;QACD;AAmBA,iBAASM,IAAAA;QACT;AAEA,iBAASC,GAAepL,IAAKwB,IAAAA;AAE5B,mBADIpB,KAAIJ,GAAKK,QACPD,OACL,KAAGJ,GAAKI,EAAAA,MAAOoB,GAAM,QAAOpB;QAE9B;AAEA,iBAASiL,EAAc9G,IAAGvE,IAAKsL,IAAQC,IAAAA;AAMtC,cALGA,KACFvL,GAAKoL,GAAepL,IAAKuL,EAAAA,CAAAA,IAAYD,KAErCtL,GAAKA,GAAKK,QAAAA,IAAYiL,IAEpB/G,IAAG;AACL+G,YAAAA,GAAQE,eAAejH;AACvB,gBAAI9B,KAAM8B,GAAGwG;AACVtI,YAAAA,OACF8I,MAAWE,EAAmBhJ,IAAI8B,IAAGgH,EAAAA,GAyVxC,SAAyB9I,IAAI8B,IAAG+G,IAAAA;AAC/B7I,cAAAA,MAAOA,GAAIqI,QACFQ,GAAQnH,iBACPjF,EAAUI,UAEnBiF,GAAGmH,OAAOJ,GAAQ/F,SAAO+F,GAAQlH,YAAU,EAAA,IAAMkH,GAAQzM;YAE3D,EA/VmB4D,IAAI8B,IAAG+G,EAAAA;UAEzB;QACD;AACA,iBAASK,EAAiBpH,IAAGvE,IAAK4E,IAAAA;AAEjC,cAAIxE,KAAIgL,GAAepL,IAAK4E,EAAAA;AAC5B,cAAA,EAAGxE,MAAG,GAcL,OAAM,IAAI8J,GAAaP,IAAc,IAAIU,MAAM9F,GAAGa,UAAQ,MAAIR,EAAAA,CAAAA;AAZ9D,mBADIgH,KAAY5L,GAAKK,SAAO,GACtBD,KAAEwL,KACP5L,CAAAA,GAAKI,EAAAA,IAAKJ,GAAAA,EAAOI,EAAAA;AAGlB,cADAJ,GAAKK,SAASuL,IACXrH,IAAG;AACL,gBAAI9B,KAAM8B,GAAGwG;AACVtI,YAAAA,OACFgJ,EAAmBhJ,IAAI8B,IAAGK,EAAAA,GAC1BA,GAAK4G,eAAe;UAEtB;QAIF;AAgFA,iBAAS5K,IAAAA;QACT;AA8FA,iBAASiL,IAAAA;QACT;AAgHA,iBAASC,EAAYC,IAAAA;AACpB,kBAAY,OAALA,KAAY,SACN,OAALA,MAAY,WACP,OAALA,MAAY,WACP,OAALA,MAAY,YACZ,OAAKA,GAAEC,WAAAA,IAAa;QAC7B;AAUA,iBAASC,EAAWzK,IAAK0K,IAAAA;AACxB,cAAGA,GAAS1K,EAAAA,EACX,QAAA;AAED,cAAGA,KAAOA,GAAK2K,WACd,IAAA;AACC,gBAAGF,EAAWzK,IAAK0K,EAAAA,EAAW,QAAA;UAAO,SACzB1K,KAAKA,GAAK4K;QAEzB;AAIA,iBAASC,IAAAA;AACRlO,eAAK4M,gBAAgB5M;QACtB;AAWA,iBAASsN,EAAmBhJ,IAAI8B,IAAG+G,IAAQgB,IAAAA;AAC1C7J,UAAAA,MAAOA,GAAIqI,QACFQ,GAAQnH,iBACPjF,EAAUI,SAAAA,OAEZiF,GAAGmH,OAAOJ,GAAQ/F,SAAO+F,GAAQlH,YAAU,EAAA;QAEpD;AAcA,iBAASmI,EAAgB9J,IAAK8B,IAAIiI,IAAAA;AACjC,cAAG/J,MAAOA,GAAIqI,MAAK;AAClBrI,YAAAA,GAAIqI;AAEJ,gBAAI2B,KAAKlI,GAAGmI;AACZ,gBAAIF,GACHC,CAAAA,GAAGA,GAAGpM,QAAAA,IAAYmM;iBACZ;AAGN,uBAFIG,KAAQpI,GAAG4H,YACX/L,KAAI,GACDuM,KACNF,CAAAA,GAAGrM,IAAAA,IAAOuM,IACVA,KAAQA,GAAMP;AAEfK,cAAAA,GAAGpM,SAASD,IAAAA,OACLqM,GAAGA,GAAGpM,MAAAA;YACd;UACD;QACD;AAcA,iBAASuM,EAAcvH,IAAYsH,IAAAA;AAClC,cAAIE,KAAWF,GAAMG,iBACjBC,KAAOJ,GAAMP;AAejB,iBAdIS,KACHA,GAAST,cAAcW,KAEvB1H,GAAW8G,aAAaY,IAErBA,KACHA,GAAKD,kBAAkBD,KAEvBxH,GAAW2H,YAAYH,IAExBF,GAAMtH,aAAa,MACnBsH,GAAMG,kBAAkB,MACxBH,GAAMP,cAAc,MACpBG,EAAelH,GAAW0F,eAAe1F,EAAAA,GAClCsH;QACR;AAoCA,iBAASM,EAAczL,IAAAA;AACtB,iBAAOA,MAAQA,GAAK0L,aAAarB,EAAK1C;QACvC;AAOA,iBAASgE,EAAc3L,IAAAA;AACtB,iBAAOA,MAAQA,GAAK0L,aAAarB,EAAKnD;QACvC;AAMA,iBAAS0E,EAAW5L,IAAAA;AACnB,iBAAOA,MAAQA,GAAK0L,aAAarB,EAAKjD;QACvC;AAYA,iBAASyE,EAA2B5K,IAAKkK,IAAAA;AACxC,cAAIW,KAAmB7K,GAAIiK,cAAc,CAAA;AACzC,cAAI3M,EAAKuN,IAAkBH,CAAAA,KAAkBF,EAAcN,EAAAA,EAC1D,QAAA;AAED,cAAIY,KAAcxN,EAAKuN,IAAkBL,CAAAA;AACzC,iBAAA,EAASN,MAASY,MAAeD,GAAiBE,QAAQD,EAAAA,IAAeD,GAAiBE,QAAQb,EAAAA;QACnG;AAYA,iBAASc,EAA6BhL,IAAKkK,IAAAA;AAC1C,cAAIW,KAAmB7K,GAAIiK,cAAc,CAAA;AAMzC,cAAI3M,EAAKuN,IAJT,SAAuC9L,IAAAA;AACtC,mBAAO2L,EAAc3L,EAAAA,KAASA,OAASmL;UACxC,CAAA,EAGC,QAAA;AAED,cAAIY,KAAcxN,EAAKuN,IAAkBL,CAAAA;AACzC,iBAAA,EAASN,MAASY,MAAeD,GAAiBE,QAAQD,EAAAA,IAAeD,GAAiBE,QAAQb,EAAAA;QACnG;AAuDA,iBAASe,EAAqCC,IAAQnM,IAAMmL,IAAAA;AAC3D,cAAIW,KAAmBK,GAAOjB,cAAc,CAAA,GACxCkB,KAAiBpM,GAAKkL,cAAc,CAAA;AAGxC,cAAIlL,GAAK0L,aAAarB,EAAKzC,wBAAwB;AAClD,gBAAIyE,KAAoBD,GAAe/F,OAAOsF,CAAAA;AAE9C,gBAAIU,GAAkBxN,SAAS,KAAKN,EAAK6N,IAAgBR,CAAAA,EACxD,OAAM,IAAIlD,GAAaV,GAAuB,2CAAA;AAI/C,gBAAiC,MAA7BqE,GAAkBxN,UAAAA,CAAiBgN,EAA2BM,IAAQhB,EAAAA,EACzE,OAAM,IAAIzC,GAAaV,GAAuB,wDAAA;UAEhD;AAEA,cAAI2D,EAAc3L,EAAAA,KAAAA,CAGZ6L,EAA2BM,IAAQhB,EAAAA,EACvC,OAAM,IAAIzC,GAAaV,GAAuB,sDAAA;AAIhD,cAAIyD,EAAczL,EAAAA,GAAO;AAExB,gBAAIzB,EAAKuN,IAAkBL,CAAAA,EAC1B,OAAM,IAAI/C,GAAaV,GAAuB,6BAAA;AAE/C,gBAAIsE,KAAqB/N,EAAKuN,IAAkBH,CAAAA;AAEhD,gBAAIR,MAASW,GAAiBE,QAAQM,EAAAA,IAAsBR,GAAiBE,QAAQb,EAAAA,EACpF,OAAM,IAAIzC,GAAaV,GAAuB,gDAAA;AAG/C,gBAAA,CAAKmD,MAASmB,GACb,OAAM,IAAI5D,GAAaV,GAAuB,sDAAA;UAEhD;QACD;AAeA,iBAASuE,EAAuCJ,IAAQnM,IAAMmL,IAAAA;AAC7D,cAAIW,KAAmBK,GAAOjB,cAAc,CAAA,GACxCkB,KAAiBpM,GAAKkL,cAAc,CAAA;AAGxC,cAAIlL,GAAK0L,aAAarB,EAAKzC,wBAAwB;AAClD,gBAAIyE,KAAoBD,GAAe/F,OAAOsF,CAAAA;AAE9C,gBAAIU,GAAkBxN,SAAS,KAAKN,EAAK6N,IAAgBR,CAAAA,EACxD,OAAM,IAAIlD,GAAaV,GAAuB,2CAAA;AAG/C,gBAAiC,MAA7BqE,GAAkBxN,UAAAA,CAAiBoN,EAA6BE,IAAQhB,EAAAA,EAC3E,OAAM,IAAIzC,GAAaV,GAAuB,wDAAA;UAEhD;AAEA,cAAI2D,EAAc3L,EAAAA,KAAAA,CAEZiM,EAA6BE,IAAQhB,EAAAA,EACzC,OAAM,IAAIzC,GAAaV,GAAuB,sDAAA;AAIhD,cAAIyD,EAAczL,EAAAA,GAAO;AAMxB,gBAAIzB,EAAKuN,IALT,SAAuC9L,IAAAA;AACtC,qBAAOyL,EAAczL,EAAAA,KAASA,OAASmL;YACxC,CAAA,EAIC,OAAM,IAAIzC,GAAaV,GAAuB,6BAAA;AAE/C,gBAAIsE,KAAqB/N,EAAKuN,IAAkBH,CAAAA;AAEhD,gBAAIR,MAASW,GAAiBE,QAAQM,EAAAA,IAAsBR,GAAiBE,QAAQb,EAAAA,EACpF,OAAM,IAAIzC,GAAaV,GAAuB,gDAAA;UAEhD;QACD;AAYA,iBAASwE,EAAcL,IAAQnM,IAAMmL,IAAOsB,IAAAA;AAAAA,WAnJ5C,SAAwCN,IAAQnM,IAAMmL,IAAAA;AAErD,gBAAA,CA5GD,SAAgCnL,IAAAA;AAC/B,qBACCA,OACCA,GAAK0L,aAAarB,EAAK3C,iBAAiB1H,GAAK0L,aAAarB,EAAKzC,0BAA0B5H,GAAK0L,aAAarB,EAAKnD;YAEnH,EAuG6BiF,EAAAA,EAC3B,OAAM,IAAIzD,GAAaV,GAAuB,iCAAiCmE,GAAOT,QAAAA;AAKvF,gBAAIP,MAASA,GAAMtH,eAAesI,GACjC,OAAM,IAAIzD,GAAaP,IAAe,qBAAA;AAEvC,gBAAA,CAzGD,SAA+BnI,IAAAA;AAC9B,qBACCA,OACC2L,EAAc3L,EAAAA,KACd4L,EAAW5L,EAAAA,KACXyL,EAAczL,EAAAA,KACdA,GAAK0L,aAAarB,EAAKzC,0BACvB5H,GAAK0L,aAAarB,EAAK5C,gBACvBzH,GAAK0L,aAAarB,EAAK7C;YAE1B,EAiGyBxH,EAAAA,KAKtByL,EAAczL,EAAAA,KAASmM,GAAOT,aAAarB,EAAK3C,cAEjD,OAAM,IAAIgB,GACTV,GACA,0BAA0BhI,GAAK0L,WAAW,2BAA2BS,GAAOT,QAAAA;UAG/E,GA4HgCS,IAAQnM,IAAMmL,EAAAA,GAIzCgB,GAAOT,aAAarB,EAAK3C,kBAC3B+E,MAAwBP,GAAsCC,IAAQnM,IAAMmL,EAAAA;AAG9E,cAAIuB,KAAK1M,GAAK6D;AAId,cAHG6I,MACFA,GAAGC,YAAY3M,EAAAA,GAEbA,GAAK0L,aAAa9D,GAAuB;AAC3C,gBAAIgF,KAAW5M,GAAK2K;AACpB,gBAAgB,QAAZiC,GACH,QAAO5M;AAER,gBAAI6M,KAAU7M,GAAKwL;UACpB,MACCoB,CAAAA,KAAWC,KAAU7M;AAEtB,cAAI8M,KAAM3B,KAAQA,GAAMG,kBAAkBa,GAAOX;AAEjDoB,UAAAA,GAAStB,kBAAkBwB,IAC3BD,GAAQjC,cAAcO,IAGnB2B,KACFA,GAAIlC,cAAcgC,KAElBT,GAAOxB,aAAaiC,IAET,QAATzB,KACFgB,GAAOX,YAAYqB,KAEnB1B,GAAMG,kBAAkBuB;AAEzB,aAAA;AACCD,YAAAA,GAAS/I,aAAasI;UAAAA,SAChBS,OAAaC,OAAYD,KAAUA,GAAShC;AAMnD,iBALAG,EAAeoB,GAAO5C,iBAAe4C,IAAQA,EAAAA,GAEzCnM,GAAK0L,YAAY9D,MACpB5H,GAAK2K,aAAa3K,GAAKwL,YAAY,OAE7BxL;QACR;AAiPA,iBAAS+M,IAAAA;AACRpQ,eAAKuN,SAAS,CAAC;QAChB;AA4FA,iBAAS8C,KAAAA;QACT;AAKA,iBAASC,KAAAA;QACT;AA8BA,iBAASC,KAAAA;QACT;AAkBA,iBAASC,KAAAA;QACT;AAOA,iBAASC,KAAAA;QACT;AAQA,iBAASC,KAAAA;QACT;AAIA,iBAASC,KAAAA;QACT;AAIA,iBAASC,KAAAA;QACT;AAIA,iBAASC,KAAAA;QACT;AAIA,iBAASC,KAAAA;QACT;AAMA,iBAASC,KAAAA;QACT;AAGA,iBAASC,KAAAA;QAAgB;AAKzB,iBAASC,GAAsBC,IAAOC,IAAAA;AACrC,cAAIC,KAAM,CAAA,GACNC,KAA2B,KAAjBrR,KAAK+O,YAAiB/O,KAAKsR,mBAAmBtR,MACxDoH,KAASiK,GAAQjK,QACjBpG,KAAMqQ,GAAQrL;AAElB,cAAGhF,MAAiB,QAAVoG,MAGI,SADTA,KAASiK,GAAQE,aAAavQ,EAAAA,GAGjC,KAAIwQ,KAAkB,CACtB,EAACC,WAAUzQ,IAAIoG,QAAO,KAAA,CAAA;AAOxB,iBAFAsK,GAAkB1R,MAAKoR,IAAIF,IAAOC,IAAWK,EAAAA,GAEtCJ,GAAIO,KAAK,EAAA;QACjB;AAEA,iBAASC,GAAoBvO,IAAM5C,IAAQ+Q,IAAAA;AAC1C,cAAIpK,KAAS/D,GAAK+D,UAAU,IACxBpG,KAAMqC,GAAK2C;AAQf,cAAA,CAAKhF,GACJ,QAAA;AAED,cAAe,UAAXoG,MAAoBpG,OAAQD,EAAUG,OAAOF,OAAQD,EAAUI,MAClE,QAAA;AAID,mBADIc,KAAIuP,GAAkBtP,QACnBD,QAAK;AACX,gBAAI4P,KAAKL,GAAkBvP,EAAAA;AAE3B,gBAAI4P,GAAGzK,WAAWA,GACjB,QAAOyK,GAAGJ,cAAczQ;UAE1B;AACA,iBAAA;QACD;AAcA,iBAAS8Q,GAAuBV,IAAKW,IAAerR,IAAAA;AACnD0Q,UAAAA,GAAIY,KAAK,KAAKD,IAAe,MAAMrR,GAAMoC,QAAQ,iBAAiB6K,CAAAA,GAAc,GAAA;QACjF;AAEA,iBAAS+D,GAAkBrO,IAAK+N,IAAI3Q,IAAO0Q,IAAWK,IAAAA;AAKrD,cAJKA,OACJA,KAAoB,CAAA,IAGlBL,IAAW;AAEb,gBAAA,EADA9N,KAAO8N,GAAW9N,EAAAA,GAOjB;AALA,gBAAkB,YAAA,OAARA,GAET,QAAA,KADA+N,GAAIY,KAAK3O,EAAAA;UAOZ;AAEA,kBAAOA,GAAK0L,UAAAA;YACZ,KAAKxE;AACJ,kBAAIpE,KAAQ9C,GAAK4O,YACb3L,KAAMH,GAAMjE,QACZsM,KAAQnL,GAAK2K,YACbkE,KAAW7O,GAAK4D,SAIhBkL,KAAmBD;AACvB,kBAAA,EAHAzR,KAASM,EAAUN,OAAO4C,GAAK2C,YAAAA,KAAiBvF,OAAAA,CAGhC4C,GAAK+D,UAAU/D,GAAK2C,cAAc;AAGjD,yBAFIoM,IAEKC,KAAK,GAAGA,KAAKlM,GAAMjE,QAAQmQ,KACnC,KAA4B,YAAxBlM,GAAMhE,KAAKkQ,EAAAA,EAAIlK,MAAkB;AACpCiK,kBAAAA,KAAYjM,GAAMhE,KAAKkQ,EAAAA,EAAI3R;AAC3B;gBACD;AAED,oBAAA,CAAK0R;AAEJ,2BAASE,KAAMd,GAAkBtP,SAAS,GAAGoQ,MAAO,GAAGA,KAEtD,KAAyB,QADrBb,KAAYD,GAAkBc,EAAAA,GACpBlL,UAAiBqK,GAAUA,cAAcpO,GAAK2C,cAAc;AACzEoM,oBAAAA,KAAYX,GAAUA;AACtB;kBACD;;AAGF,oBAAIW,OAAc/O,GAAK2C,aACtB,MAASsM,KAAMd,GAAkBtP,SAAS,GAAGoQ,MAAO,GAAGA,MAAO;AAC7D,sBAAIb;AACJ,uBADIA,KAAYD,GAAkBc,EAAAA,GACpBb,cAAcpO,GAAK2C,cAAc;AAC1CyL,oBAAAA,GAAUrK,WACb+K,KAAmBV,GAAUrK,SAAS,MAAM8K;AAE7C;kBACD;gBACD;cAEF;AAEAd,cAAAA,GAAIY,KAAK,KAAKG,EAAAA;AAEd,uBAAQlQ,KAAE,GAAEA,KAAEqE,IAAIrE,KAGE,aADfwE,KAAON,GAAMhE,KAAKF,EAAAA,GACbmF,SACRoK,GAAkBQ,KAAK,EAAE5K,QAAQX,GAAKR,WAAWwL,WAAWhL,GAAK/F,MAAAA,CAAAA,IACxC,WAAjB+F,GAAKyL,YACbV,GAAkBQ,KAAK,EAAE5K,QAAQ,IAAIqK,WAAWhL,GAAK/F,MAAAA,CAAAA;AAIvD,mBAAQuB,KAAE,GAAEA,KAAEqE,IAAIrE,MAAI;AACrB,oBAAIwE,IAECW,IACApG;AAFD4Q,mBADAnL,KAAON,GAAMhE,KAAKF,EAAAA,GACOxB,GAAQ+Q,EAAAA,MAGpCM,GAAuBV,KAFnBhK,KAASX,GAAKW,UAAQ,MAEW,WAAWA,KAAS,SADrDpG,KAAMyF,GAAKT,YAAAA,GAEfwL,GAAkBQ,KAAK,EAAE5K,QAAQA,IAAQqK,WAAUzQ,GAAAA,CAAAA,IAEpD0Q,GAAkBjL,IAAK2K,IAAI3Q,IAAO0Q,IAAWK,EAAAA;cAC9C;AAUA,kBAPIU,OAAaC,MAAoBP,GAAoBvO,IAAM5C,GAAQ+Q,EAAAA,MAGtEM,GAAuBV,KAFnBhK,KAAS/D,GAAK+D,UAAQ,MAEW,WAAWA,KAAS,SADrDpG,KAAMqC,GAAK2C,YAAAA,GAEfwL,GAAkBQ,KAAK,EAAE5K,QAAQA,IAAQqK,WAAUzQ,GAAAA,CAAAA,IAGjDwN,MAAS/N,MAAAA,CAAW,mCAAmCoE,KAAKqN,EAAAA,GAAU;AAGxE,oBAFAd,GAAIY,KAAK,GAAA,GAENvR,MAAU,YAAYoE,KAAKqN,EAAAA,EAC7B,QAAM1D,KACFA,CAAAA,GAAMjH,OACR6J,GAAIY,KAAKxD,GAAMjH,IAAAA,IAEfmK,GAAkBlD,IAAO4C,IAAK3Q,IAAQ0Q,IAAYK,GAAkBe,MAAAA,CAAAA,GAErE/D,KAAQA,GAAMP;oBAIf,QAAMO,KACLkD,IAAkBlD,IAAO4C,IAAK3Q,IAAQ0Q,IAAYK,GAAkBe,MAAAA,CAAAA,GACpE/D,KAAQA,GAAMP;AAGhBmD,gBAAAA,GAAIY,KAAK,MAAKG,IAAiB,GAAA;cAChC,MACCf,CAAAA,GAAIY,KAAK,IAAA;AAIV;YACD,KAAKjH;YACL,KAAKE;AAEJ,mBADIuD,KAAQnL,GAAK2K,YACXQ,KACLkD,IAAkBlD,IAAO4C,IAAK3Q,IAAQ0Q,IAAYK,GAAkBe,MAAAA,CAAAA,GACpE/D,KAAQA,GAAMP;AAEf;YACD,KAAKzD;AACJ,qBAAOsH,GAAuBV,IAAK/N,GAAK8E,MAAM9E,GAAK3C,KAAAA;YACpD,KAAK+J;AAiBJ,qBAAO2G,GAAIY,KAAK3O,GAAKkE,KACnBzE,QAAQ,UAAS6K,CAAAA,CAAAA;YAEpB,KAAKjD;AACJ,qBAAO0G,GAAIY,KAAM,aAAY3O,GAAKkE,MAAK,KAAA;YACxC,KAAKuD;AACJ,qBAAOsG,GAAIY,KAAM,QAAO3O,GAAKkE,MAAK,KAAA;YACnC,KAAKyD;AACJ,kBAAIwH,KAAQnP,GAAKsF,UACb8J,KAAQpP,GAAKK;AAEjB,kBADA0N,GAAIY,KAAK,cAAa3O,GAAK8E,IAAAA,GACxBqK,GACFpB,CAAAA,GAAIY,KAAK,YAAYQ,EAAAA,GACjBC,MAAgB,OAAPA,MACZrB,GAAIY,KAAK,KAAKS,EAAAA,GAEfrB,GAAIY,KAAK,GAAA;uBACDS,MAAgB,OAAPA,GACjBrB,CAAAA,GAAIY,KAAK,YAAYS,IAAO,GAAA;mBACxB;AACJ,oBAAIC,KAAMrP,GAAKsP;AACZD,gBAAAA,MACFtB,GAAIY,KAAK,MAAKU,IAAI,GAAA,GAEnBtB,GAAIY,KAAK,GAAA;cACV;AACA;YACD,KAAKnH;AACJ,qBAAOuG,GAAIY,KAAM,MAAK3O,GAAKhC,QAAO,KAAIgC,GAAKkE,MAAK,IAAA;YACjD,KAAKoD;AACJ,qBAAOyG,GAAIY,KAAM,KAAI3O,GAAK6O,UAAS,GAAA;YAGpC;AACCd,cAAAA,GAAIY,KAAK,MAAK3O,GAAK6O,QAAAA;UAAAA;QAErB;AACA,iBAASU,GAAWtO,IAAIjB,IAAKwP,IAAAA;AAC5B,cAAIC;AACJ,kBAAQzP,GAAK0L,UAAAA;YACb,KAAKxE;AAAAA,eACJuI,KAAQzP,GAAK0P,UAAAA,KAAU,GACjBnG,gBAAgBtI;YAMvB,KAAK2G;AACJ;YACD,KAAKT;AACJqI,cAAAA,KAAAA;UAAO;AAsBR,cALIC,OACHA,KAAQzP,GAAK0P,UAAAA,KAAU,IAExBD,GAAMlG,gBAAgBtI,IACtBwO,GAAM5L,aAAa,MAChB2L,GAEF,UADIrE,KAAQnL,GAAK2K,YACXQ,KACLsE,CAAAA,GAAMzO,YAAYuO,GAAWtO,IAAIkK,IAAMqE,EAAAA,CAAAA,GACvCrE,KAAQA,GAAMP;AAGhB,iBAAO6E;QACR;AAIA,iBAASC,GAAUzO,IAAIjB,IAAKwP,IAAAA;AAC3B,cAAIC,KAAQ,IAAIzP,GAAKgH;AACrB,mBAAS2I,MAAK3P,GACb,KAAI/C,OAAOmB,UAAUC,eAAeC,KAAK0B,IAAM2P,EAAAA,GAAI;AAClD,gBAAIC,KAAI5P,GAAK2P,EAAAA;AACG,wBAAA,OAALC,MACNA,MAAKH,GAAME,EAAAA,MACdF,GAAME,EAAAA,IAAKC;UAGd;AAMD,kBAJG5P,GAAKkL,eACPuE,GAAMvE,aAAa,IAAInC,MAExB0G,GAAMlG,gBAAgBtI,IACdwO,GAAM/D,UAAAA;YACd,KAAKxE;AACJ,kBAAIpE,KAAQ9C,GAAK4O,YACbiB,KAASJ,GAAMb,aAAa,IAAIjF,KAChC1G,KAAMH,GAAMjE;AAChBgR,cAAAA,GAAOC,gBAAgBL;AACvB,uBAAQ7Q,KAAE,GAAEA,KAAEqE,IAAIrE,KACjB6Q,CAAAA,GAAMhM,iBAAiBiM,GAAUzO,IAAI6B,GAAMhE,KAAKF,EAAAA,GAAAA,IAAG,CAAA;AAEpD;YACD,KAAKuI;AACJqI,cAAAA,KAAAA;UAAO;AAER,cAAGA,GAEF,UADIrE,KAAQnL,GAAK2K,YACXQ,KACLsE,CAAAA,GAAMzO,YAAY0O,GAAUzO,IAAIkK,IAAMqE,EAAAA,CAAAA,GACtCrE,KAAQA,GAAMP;AAGhB,iBAAO6E;QACR;AAEA,iBAAShG,GAAQ1M,IAAOoB,IAAId,IAAAA;AAC3BN,UAAAA,GAAOoB,EAAAA,IAAOd;QACf;AAhnDgCyK,UAAciI,qBAA8BhI,EAAiB,EAAA,IAAI,iBAAiB,KAClFD,EAAckI,cAA8BjI,EAAiB,EAAA,IAAI,gBAAgB,KACjFD,EAAcmI,4BAA8BlI,EAAiB,EAAA,IAAI,wBAAwB,KACzFD,EAAcoI,iBAA6BnI,EAAiB,EAAA,IAAI,qBAAqB,KACrFD,EAAcqI,sBAA6BpI,EAAiB,EAAA,IAAI,kBAAkB,KAqBlHW,GAAatK,YAAYyK,MAAMzK,WAC/BoI,EAAKsB,GAAcY,EAAAA,GASnBK,EAAS3K,YAAY,EAKpBS,QAAO,GASPC,MAAM,SAASsR,IAAAA;AACd,iBAAOA,MAAS,KAAKA,KAAQzT,KAAKkC,SAASlC,KAAKyT,EAAAA,IAAS;QAC1D,GACAC,UAAS,SAASjT,IAAO0Q,IAAAA;AACxB,mBAAQC,KAAM,CAAA,GAAInP,KAAI,GAAEA,KAAEjC,KAAKkC,QAAOD,KACrCyP,IAAkB1R,KAAKiC,EAAAA,GAAGmP,IAAI3Q,IAAO0Q,EAAAA;AAEtC,iBAAOC,GAAIO,KAAK,EAAA;QACjB,GAMAjI,QAAQ,SAAU5H,IAAAA;AACjB,iBAAOE,MAAMP,UAAUiI,OAAO/H,KAAK3B,MAAM8B,EAAAA;QAC1C,GAMAuN,SAAS,SAAUlN,IAAAA;AAClB,iBAAOH,MAAMP,UAAU4N,QAAQ1N,KAAK3B,MAAMmC,EAAAA;QAC3C,EAAA,GAwBDkK,EAAa5K,UAAUU,OAAO,SAASF,IAAAA;AAEtC,iBADAwK,EAAgBzM,IAAAA,GACTA,KAAKiC,EAAAA,KAAM;QACnB,GAEAgI,EAASoC,GAAaD,CAAAA,GA0DtBY,EAAavL,YAAY,EACxBS,QAAO,GACPC,MAAKiK,EAAS3K,UAAUU,MACxBwR,cAAc,SAASnS,IAAAA;AAMtB,mBADIS,KAAIjC,KAAKkC,QACPD,QAAI;AACT,gBAAIwE,KAAOzG,KAAKiC,EAAAA;AAEhB,gBAAGwE,GAAKyL,YAAY1Q,GACnB,QAAOiF;UAET;QACD,GACAmN,cAAc,SAASnN,IAAAA;AACtB,cAAIL,KAAKK,GAAK4G;AACd,cAAGjH,MAAMA,MAAIpG,KAAKmT,cACjB,OAAM,IAAIpH,GAAaF,CAAAA;AAExB,cAAIuB,KAAUpN,KAAK2T,aAAalN,GAAKyL,QAAAA;AAErC,iBADAhF,EAAclN,KAAKmT,eAAcnT,MAAKyG,IAAK2G,EAAAA,GACpCA;QACR,GAEAyG,gBAAgB,SAASpN,IAAAA;AACxB,cAA4B2G,IAAxBhH,KAAKK,GAAK4G;AACd,cAAGjH,MAAMA,MAAIpG,KAAKmT,cACjB,OAAM,IAAIpH,GAAaF,CAAAA;AAIxB,iBAFAuB,KAAUpN,KAAK8T,eAAerN,GAAKT,cAAaS,GAAKR,SAAAA,GACrDiH,EAAclN,KAAKmT,eAAcnT,MAAKyG,IAAK2G,EAAAA,GACpCA;QACR,GAGA2G,iBAAiB,SAASvS,IAAAA;AACzB,cAAIiF,KAAOzG,KAAK2T,aAAanS,EAAAA;AAE7B,iBADAgM,EAAiBxN,KAAKmT,eAAcnT,MAAKyG,EAAAA,GAClCA;QAGR,GAGAuN,mBAAkB,SAAShO,IAAaC,IAAAA;AACvC,cAAIQ,KAAOzG,KAAK8T,eAAe9N,IAAaC,EAAAA;AAE5C,iBADAuH,EAAiBxN,KAAKmT,eAAcnT,MAAKyG,EAAAA,GAClCA;QACR,GACAqN,gBAAgB,SAAS9N,IAAcC,IAAAA;AAEtC,mBADIhE,KAAIjC,KAAKkC,QACPD,QAAI;AACT,gBAAIoB,KAAOrD,KAAKiC,EAAAA;AAChB,gBAAGoB,GAAK4C,aAAaA,MAAa5C,GAAK2C,gBAAgBA,GACtD,QAAO3C;UAET;AACA,iBAAO;QACR,EAAA,GAqBDZ,EAAkBhB,YAAY,EAgB7BwS,YAAY,SAASC,IAASC,IAAAA;AAC5B,iBAAA;QACF,GAuBAtO,gBAAgB,SAASG,IAAe+L,IAAe/I,IAAAA;AACtD,cAAI1E,KAAM,IAAI4J;AAOd,cANA5J,GAAIuE,iBAAiB7I,MACrBsE,GAAIiK,aAAa,IAAInC,KACrB9H,GAAI0E,UAAUA,MAAW,MACrBA,MACH1E,GAAID,YAAY2E,EAAAA,GAEb+I,IAAc;AACjB,gBAAIrS,KAAO4E,GAAI+B,gBAAgBL,IAAc+L,EAAAA;AAC7CzN,YAAAA,GAAID,YAAY3E,EAAAA;UACjB;AACA,iBAAO4E;QACR,GAsBAwE,oBAAoB,SAASiJ,IAAepJ,IAAUjF,IAAAA;AACrD,cAAIL,KAAO,IAAIqN;AAMf,iBALArN,GAAK8E,OAAO4J,IACZ1O,GAAK6O,WAAWH,IAChB1O,GAAKsF,WAAWA,MAAY,IAC5BtF,GAAKK,WAAWA,MAAY,IAErBL;QACR,EAAA,GAWDqK,EAAKjM,YAAY,EAChBuM,YAAa,MACba,WAAY,MACZF,iBAAkB,MAClBV,aAAc,MACdgE,YAAa,MACb/K,YAAa,MACbqH,YAAa,MACb3B,eAAgB,MAChB/F,WAAY,MACZb,cAAe,MACfoB,QAAS,MACTnB,WAAY,MAEZmO,cAAa,SAAS/F,IAAUgG,IAAAA;AAC/B,iBAAOxE,EAAc7P,MAAKqO,IAASgG,EAAAA;QACpC,GACAC,cAAa,SAASjG,IAAUkG,IAAAA;AAC/B1E,YAAc7P,MAAMqO,IAASkG,IAAU3E,CAAAA,GACpC2E,MACFvU,KAAKgQ,YAAYuE,EAAAA;QAEnB,GACAvE,aAAY,SAASuE,IAAAA;AACpB,iBAAO9F,EAAazO,MAAKuU,EAAAA;QAC1B,GACAlQ,aAAY,SAASgK,IAAAA;AACpB,iBAAOrO,KAAKoU,aAAa/F,IAAS,IAAA;QACnC,GACAmG,eAAc,WAAA;AACb,iBAA0B,QAAnBxU,KAAKgO;QACb,GACA+E,WAAU,SAASF,IAAAA;AAClB,iBAAOE,GAAU/S,KAAK4M,iBAAe5M,MAAKA,MAAK6S,EAAAA;QAChD,GAEApN,WAAU,WAAA;AAET,mBADI+I,KAAQxO,KAAKgO,YACXQ,MAAM;AACX,gBAAII,KAAOJ,GAAMP;AACdW,YAAAA,MAAQA,GAAKG,YAAYtE,KAAa+D,GAAMO,YAAYtE,KAC1DzK,KAAKgQ,YAAYpB,EAAAA,GACjBJ,GAAMiG,WAAW7F,GAAKrH,IAAAA,MAEtBiH,GAAM/I,UAAAA,GACN+I,KAAQI;UAEV;QACD,GAEA8F,aAAY,SAASR,IAASC,IAAAA;AAC7B,iBAAOnU,KAAK4M,cAAc/D,eAAeoL,WAAWC,IAAQC,EAAAA;QAC7D,GAEGQ,eAAc,WAAA;AACb,iBAAO3U,KAAKiS,WAAW/P,SAAO;QAC/B,GAeAqP,cAAa,SAASvL,IAAAA;AAErB,mBADII,KAAKpG,MACHoG,MAAG;AACR,gBAAIwO,KAAMxO,GAAGmH;AAEb,gBAAGqH;AACF,uBAAQ5B,MAAK4B,GACd,KAAItU,OAAOmB,UAAUC,eAAeC,KAAKiT,IAAK5B,EAAAA,KAAM4B,GAAI5B,EAAAA,MAAOhN,GAC9D,QAAOgN;;AAIR5M,YAAAA,KAAKA,GAAG2I,YAAYvE,IAAepE,GAAGwG,gBAAgBxG,GAAGc;UAC1D;AACA,iBAAO;QACR,GAEA2N,oBAAmB,SAASzN,IAAAA;AAE3B,mBADIhB,KAAKpG,MACHoG,MAAG;AACR,gBAAIwO,KAAMxO,GAAGmH;AAEb,gBAAGqH,MACCtU,OAAOmB,UAAUC,eAAeC,KAAKiT,IAAKxN,EAAAA,EAC5C,QAAOwN,GAAIxN,EAAAA;AAGbhB,YAAAA,KAAKA,GAAG2I,YAAYvE,IAAepE,GAAGwG,gBAAgBxG,GAAGc;UAC1D;AACA,iBAAO;QACR,GAEA4N,oBAAmB,SAAS9O,IAAAA;AAE3B,iBAAiB,QADJhG,KAAKuR,aAAavL,EAAAA;QAEhC,EAAA,GAaJ6D,EAAKS,GAASoD,CAAAA,GACd7D,EAAKS,GAASoD,EAAKjM,SAAAA,GAybnByM,EAASzM,YAAY,EAEpByQ,UAAY,aACZnD,UAAYhE,GAOZ/B,SAAW,MACXsI,iBAAmB,MACnB3E,MAAO,GAEPyH,cAAgB,SAAS/F,IAAUgG,IAAAA;AAClC,cAAGhG,GAASU,YAAY9D,GAAuB;AAE9C,qBADIuD,KAAQH,GAASL,YACfQ,MAAM;AACX,kBAAII,KAAOJ,GAAMP;AACjBjO,mBAAKoU,aAAa5F,IAAM6F,EAAAA,GACxB7F,KAAQI;YACT;AACA,mBAAOP;UACR;AAOA,iBANAwB,EAAc7P,MAAMqO,IAAUgG,EAAAA,GAC9BhG,GAASzB,gBAAgB5M,MACI,SAAzBA,KAAKsR,mBAA4BjD,GAASU,aAAaxE,MAC1DvK,KAAKsR,kBAAkBjD,KAGjBA;QACR,GACA2B,aAAe,SAASuE,IAAAA;AAIvB,iBAHGvU,KAAKsR,mBAAmBiD,OAC1BvU,KAAKsR,kBAAkB,OAEjB7C,EAAazO,MAAKuU,EAAAA;QAC1B,GACAD,cAAc,SAAUjG,IAAUkG,IAAAA;AAEjC1E,YAAc7P,MAAMqO,IAAUkG,IAAU3E,CAAAA,GACxCvB,GAASzB,gBAAgB5M,MACrBuU,MACHvU,KAAKgQ,YAAYuE,EAAAA,GAEdvF,EAAcX,EAAAA,MACjBrO,KAAKsR,kBAAkBjD;QAEzB,GAEAuE,YAAa,SAASmC,IAAalC,IAAAA;AAClC,iBAAOD,GAAW5S,MAAK+U,IAAalC,EAAAA;QACrC,GAEAmC,gBAAiB,SAASC,IAAAA;AACzB,cAAIC,KAAM;AASV,iBARApH,EAAW9N,KAAKsR,iBAAgB,SAASjO,IAAAA;AACxC,gBAAGA,GAAK0L,YAAYxE,KAChBlH,GAAK8R,aAAa,IAAA,KAASF,GAE7B,QADAC,KAAM7R,IAAAA;UAIT,CAAA,GACO6R;QACR,GAmBAE,wBAAwB,SAASC,IAAAA;AAChC,cAAIC,KAAgB9L,EAAa6L,EAAAA;AACjC,iBAAO,IAAIhJ,EAAarM,MAAM,SAASuV,IAAAA;AACtC,gBAAI1I,KAAK,CAAA;AAoBT,mBAnBIyI,GAAcpT,SAAS,KAC1B4L,EAAWyH,GAAKjE,iBAAiB,SAASjO,IAAAA;AACzC,kBAAGA,OAASkS,MAAQlS,GAAK0L,aAAaxE,GAAc;AACnD,oBAAIiL,KAAiBnS,GAAK8R,aAAa,OAAA;AAEvC,oBAAIK,IAAgB;AAEnB,sBAAIC,KAAUJ,OAAeG;AAC7B,sBAAA,CAAKC,IAAS;AACb,wBAAIC,KAAoBlM,EAAagM,EAAAA;AACrCC,oBAAAA,KAAUH,GAAcK,OApiCR9T,KAoiC4B6T,IAniC5C,SAASnM,IAAAA;AACf,6BAAO1H,MAAAA,OAAQA,GAAKwN,QAAQ9F,EAAAA;oBAC7B,EAAA;kBAkiCM;AACGkM,kBAAAA,MACF5I,GAAGmF,KAAK3O,EAAAA;gBAEV;cACD;AA1iCL,kBAAwBxB;YA2iCpB,CAAA,GAEMgL;UACR,CAAA;QACD,GAGA+I,eAAgB,SAAS3O,IAAAA;AACxB,cAAI5D,KAAO,IAAI+M;AAQf,iBAPA/M,GAAKuJ,gBAAgB5M,MACrBqD,GAAK6O,WAAWjL,IAChB5D,GAAK4D,UAAUA,IACf5D,GAAK4C,YAAYgB,IACjB5D,GAAKkL,aAAa,IAAInC,MACV/I,GAAK4O,aAAa,IAAIjF,KAC5BmG,gBAAgB9P,IACfA;QACR,GACAwS,wBAAyB,WAAA;AACxB,cAAIxS,KAAO,IAAIyN;AAGf,iBAFAzN,GAAKuJ,gBAAgB5M,MACrBqD,GAAKkL,aAAa,IAAInC,KACf/I;QACR,GACA4E,gBAAiB,SAASV,IAAAA;AACzB,cAAIlE,KAAO,IAAIkN;AAGf,iBAFAlN,GAAKuJ,gBAAgB5M,MACrBqD,GAAKoR,WAAWlN,EAAAA,GACTlE;QACR,GACAkF,eAAgB,SAAShB,IAAAA;AACxB,cAAIlE,KAAO,IAAImN;AAGf,iBAFAnN,GAAKuJ,gBAAgB5M,MACrBqD,GAAKoR,WAAWlN,EAAAA,GACTlE;QACR,GACA2E,oBAAqB,SAAST,IAAAA;AAC7B,cAAIlE,KAAO,IAAIoN;AAGf,iBAFApN,GAAKuJ,gBAAgB5M,MACrBqD,GAAKoR,WAAWlN,EAAAA,GACTlE;QACR,GACAoE,6BAA8B,SAASpG,IAAOkG,IAAAA;AAC7C,cAAIlE,KAAO,IAAI0N;AAIf,iBAHA1N,GAAKuJ,gBAAgB5M,MACrBqD,GAAK4D,UAAU5D,GAAK6O,WAAW7O,GAAKhC,SAASA,IAC7CgC,GAAKwD,YAAYxD,GAAKkE,OAAOA,IACtBlE;QACR,GACAyS,iBAAkB,SAAS3N,IAAAA;AAC1B,cAAI9E,KAAO,IAAIgN;AAMf,iBALAhN,GAAKuJ,gBAAgB5M,MACrBqD,GAAK8E,OAAOA,IACZ9E,GAAK6O,WAAW/J,IAChB9E,GAAK4C,YAAYkC,IACjB9E,GAAK0S,YAAAA,MACE1S;QACR,GACA2S,uBAAwB,SAAS7N,IAAAA;AAChC,cAAI9E,KAAO,IAAIwN;AAGf,iBAFAxN,GAAKuJ,gBAAgB5M,MACrBqD,GAAK6O,WAAW/J,IACT9E;QACR,GAEAgD,iBAAkB,SAASL,IAAa+L,IAAAA;AACvC,cAAI1O,KAAO,IAAI+M,KACX6F,KAAKlE,GAActI,MAAM,GAAA,GACzBtD,KAAQ9C,GAAK4O,aAAa,IAAIjF;AAclC,iBAbA3J,GAAKkL,aAAa,IAAInC,KACtB/I,GAAKuJ,gBAAgB5M,MACrBqD,GAAK6O,WAAWH,IAChB1O,GAAK4D,UAAU8K,IACf1O,GAAK2C,eAAeA,IACJ,KAAbiQ,GAAG/T,UACLmB,GAAK+D,SAAS6O,GAAG,CAAA,GACjB5S,GAAK4C,YAAYgQ,GAAG,CAAA,KAGpB5S,GAAK4C,YAAY8L,IAElB5L,GAAMgN,gBAAgB9P,IACfA;QACR,GAEAsD,mBAAoB,SAASX,IAAa+L,IAAAA;AACzC,cAAI1O,KAAO,IAAIgN,MACX4F,KAAKlE,GAActI,MAAM,GAAA;AAa7B,iBAZApG,GAAKuJ,gBAAgB5M,MACrBqD,GAAK6O,WAAWH,IAChB1O,GAAK8E,OAAO4J,IACZ1O,GAAK2C,eAAeA,IACpB3C,GAAK0S,YAAAA,MACW,KAAbE,GAAG/T,UACLmB,GAAK+D,SAAS6O,GAAG,CAAA,GACjB5S,GAAK4C,YAAYgQ,GAAG,CAAA,KAGpB5S,GAAK4C,YAAY8L,IAEX1O;QACR,EAAA,GAED4G,EAASiE,GAASR,CAAAA,GAMlB0C,EAAQ3O,YAAY,EACnBsN,UAAWxE,GACX2L,cAAe,SAAS/N,IAAAA;AACvB,iBAAoC,QAA7BnI,KAAKmW,iBAAiBhO,EAAAA;QAC9B,GACAgN,cAAe,SAAShN,IAAAA;AACvB,cAAI1B,KAAOzG,KAAKmW,iBAAiBhO,EAAAA;AACjC,iBAAO1B,MAAQA,GAAK/F,SAAS;QAC9B,GACAyV,kBAAmB,SAAShO,IAAAA;AAC3B,iBAAOnI,KAAKiS,WAAW0B,aAAaxL,EAAAA;QACrC,GACAiO,cAAe,SAASjO,IAAMzH,IAAAA;AAC7B,cAAI+F,KAAOzG,KAAK4M,cAAckJ,gBAAgB3N,EAAAA;AAC9C1B,UAAAA,GAAK/F,QAAQ+F,GAAKI,YAAY,KAAKnG,IACnCV,KAAK8G,iBAAiBL,EAAAA;QACvB,GACA4P,iBAAkB,SAASlO,IAAAA;AAC1B,cAAI1B,KAAOzG,KAAKmW,iBAAiBhO,EAAAA;AACjC1B,UAAAA,MAAQzG,KAAKsW,oBAAoB7P,EAAAA;QAClC,GAGApC,aAAY,SAASgK,IAAAA;AACpB,iBAAGA,GAASU,aAAa9D,IACjBjL,KAAKoU,aAAa/F,IAAS,IAAA,IAhQrC,SAA6BnH,IAAYmH,IAAAA;AAcxC,mBAbIA,GAASnH,cACZmH,GAASnH,WAAW8I,YAAY3B,EAAAA,GAEjCA,GAASnH,aAAaA,IACtBmH,GAASM,kBAAkBzH,GAAW2H,WACtCR,GAASJ,cAAc,MACnBI,GAASM,kBACZN,GAASM,gBAAgBV,cAAcI,KAEvCnH,GAAW8G,aAAaK,IAEzBnH,GAAW2H,YAAYR,IACvBD,EAAelH,GAAW0F,eAAe1F,IAAYmH,EAAAA,GAC9CA;UACR,EAmP6BrO,MAAKqO,EAAAA;QAEjC,GACAvH,kBAAmB,SAASqG,IAAAA;AAC3B,iBAAOnN,KAAKiS,WAAW2B,aAAazG,EAAAA;QACrC,GACAoJ,oBAAqB,SAASpJ,IAAAA;AAC7B,iBAAOnN,KAAKiS,WAAW4B,eAAe1G,EAAAA;QACvC,GACAmJ,qBAAsB,SAASlJ,IAAAA;AAE9B,iBAAOpN,KAAKiS,WAAW8B,gBAAgB3G,GAAQ8E,QAAAA;QAChD,GAEAsE,mBAAoB,SAASxQ,IAAcC,IAAAA;AAC1C,cAAIwQ,KAAMzW,KAAK0W,mBAAmB1Q,IAAcC,EAAAA;AAChDwQ,UAAAA,MAAOzW,KAAKsW,oBAAoBG,EAAAA;QACjC,GAEAE,gBAAiB,SAAS3Q,IAAcC,IAAAA;AACvC,iBAAyD,QAAlDjG,KAAK0W,mBAAmB1Q,IAAcC,EAAAA;QAC9C,GACA2Q,gBAAiB,SAAS5Q,IAAcC,IAAAA;AACvC,cAAIQ,KAAOzG,KAAK0W,mBAAmB1Q,IAAcC,EAAAA;AACjD,iBAAOQ,MAAQA,GAAK/F,SAAS;QAC9B,GACAmW,gBAAiB,SAAS7Q,IAAc+L,IAAerR,IAAAA;AACtD,cAAI+F,KAAOzG,KAAK4M,cAAcjG,kBAAkBX,IAAc+L,EAAAA;AAC9DtL,UAAAA,GAAK/F,QAAQ+F,GAAKI,YAAY,KAAKnG,IACnCV,KAAK8G,iBAAiBL,EAAAA;QACvB,GACAiQ,oBAAqB,SAAS1Q,IAAcC,IAAAA;AAC3C,iBAAOjG,KAAKiS,WAAW6B,eAAe9N,IAAcC,EAAAA;QACrD,GAEA6Q,sBAAuB,SAAS7P,IAAAA;AAC/B,iBAAO,IAAIoF,EAAarM,MAAK,SAASuV,IAAAA;AACrC,gBAAI1I,KAAK,CAAA;AAMT,mBALAiB,EAAWyH,IAAK,SAASlS,IAAAA;AACrBA,cAAAA,OAASkS,MAAQlS,GAAK0L,YAAYxE,KAA6B,QAAZtD,MAAmB5D,GAAK4D,WAAWA,MACxF4F,GAAGmF,KAAK3O,EAAAA;YAEV,CAAA,GACOwJ;UACR,CAAA;QACD,GACAkK,wBAAyB,SAAS/Q,IAAcC,IAAAA;AAC/C,iBAAO,IAAIoG,EAAarM,MAAK,SAASuV,IAAAA;AACrC,gBAAI1I,KAAK,CAAA;AAMT,mBALAiB,EAAWyH,IAAK,SAASlS,IAAAA;AACrBA,cAAAA,OAASkS,MAAQlS,GAAK0L,aAAaxE,KAAkC,QAAjBvE,MAAwB3C,GAAK2C,iBAAiBA,MAAgC,QAAdC,MAAqB5C,GAAK4C,aAAaA,MAC7J4G,GAAGmF,KAAK3O,EAAAA;YAEV,CAAA,GACOwJ;UAER,CAAA;QACD,EAAA,GAEDqB,EAASzM,UAAUqV,uBAAuB1G,EAAQ3O,UAAUqV,sBAC5D5I,EAASzM,UAAUsV,yBAAyB3G,EAAQ3O,UAAUsV,wBAG9D9M,EAASmG,GAAQ1C,CAAAA,GAGjB2C,GAAK5O,UAAUsN,WAAWvE,GAC1BP,EAASoG,IAAK3C,CAAAA,GAKd4C,GAAc7O,YAAY,EACzB8F,MAAO,IACPyP,eAAgB,SAASC,IAAQC,IAAAA;AAChC,iBAAOlX,KAAKuH,KAAK4P,UAAUF,IAAQA,KAAOC,EAAAA;QAC3C,GACAzC,YAAY,SAAS2C,IAAAA;AACpBA,UAAAA,KAAOpX,KAAKuH,OAAK6P,IACjBpX,KAAK6G,YAAY7G,KAAKuH,OAAO6P,IAC7BpX,KAAKkC,SAASkV,GAAKlV;QACpB,GACAmV,YAAY,SAASJ,IAAOG,IAAAA;AAC3BpX,eAAKsX,YAAYL,IAAO,GAAEG,EAAAA;QAE3B,GACA/S,aAAY,SAASgK,IAAAA;AACpB,gBAAM,IAAInC,MAAMd,EAAiBC,CAAAA,CAAAA;QAClC,GACAkM,YAAY,SAASN,IAAQC,IAAAA;AAC5BlX,eAAKsX,YAAYL,IAAOC,IAAM,EAAA;QAC/B,GACAI,aAAa,SAASL,IAAQC,IAAOE,IAAAA;AAGpCA,UAAAA,KAFYpX,KAAKuH,KAAK4P,UAAU,GAAEF,EAAAA,IAEnBG,KADLpX,KAAKuH,KAAK4P,UAAUF,KAAOC,EAAAA,GAErClX,KAAK6G,YAAY7G,KAAKuH,OAAO6P,IAC7BpX,KAAKkC,SAASkV,GAAKlV;QACpB,EAAA,GAED+H,EAASqG,IAAc5C,CAAAA,GAGvB6C,GAAK9O,YAAY,EAChByQ,UAAW,SACXnD,UAAWtE,GACX+M,WAAY,SAASP,IAAAA;AACpB,cAAIG,KAAOpX,KAAKuH,MACZkQ,KAAUL,GAAKD,UAAUF,EAAAA;AAC7BG,UAAAA,KAAOA,GAAKD,UAAU,GAAGF,EAAAA,GACzBjX,KAAKuH,OAAOvH,KAAK6G,YAAYuQ,IAC7BpX,KAAKkC,SAASkV,GAAKlV;AACnB,cAAIwV,KAAU1X,KAAK4M,cAAc3E,eAAewP,EAAAA;AAIhD,iBAHGzX,KAAKkH,cACPlH,KAAKkH,WAAWkN,aAAasD,IAAS1X,KAAKiO,WAAAA,GAErCyJ;QACR,EAAA,GAEDzN,EAASsG,IAAKD,EAAAA,GAGdE,GAAQ/O,YAAY,EACnByQ,UAAW,YACXnD,UAAWjE,EAAAA,GAEZb,EAASuG,IAAQF,EAAAA,GAIjBG,GAAahP,YAAY,EACxByQ,UAAW,kBACXnD,UAAWrE,EAAAA,GAEZT,EAASwG,IAAaH,EAAAA,GAKtBI,GAAajP,UAAUsN,WAAW/D,GAClCf,EAASyG,IAAahD,CAAAA,GAItBiD,GAASlP,UAAUsN,WAAW7D,GAC9BjB,EAAS0G,IAASjD,CAAAA,GAIlBkD,GAAOnP,UAAUsN,WAAWnE,GAC5BX,EAAS2G,IAAOlD,CAAAA,GAIhBmD,GAAgBpP,UAAUsN,WAAWpE,GACrCV,EAAS4G,IAAgBnD,CAAAA,GAIzBoD,GAAiBrP,UAAUyQ,WAAW,sBACtCpB,GAAiBrP,UAAUsN,WAAW9D,GACtChB,EAAS6G,IAAiBpD,CAAAA,GAK1BqD,GAAsBtP,UAAUsN,WAAWlE,GAC3CZ,EAAS8G,IAAsBrD,CAAAA,GAE/BsD,GAAcvP,UAAUiQ,oBAAoB,SAASrO,IAAK6N,IAAOC,IAAAA;AAChE,iBAAOF,GAAsBtP,KAAK0B,IAAK6N,IAAOC,EAAAA;QAC/C,GACAzD,EAAKjM,UAAUiS,WAAWzC;AAmV1B,YAAA;AACC,cAAG3Q,OAAOqX,gBAAe;AAiCxB,gBAASC,MAAT,SAAwBvU,IAAAA;AACvB,sBAAOA,GAAK0L,UAAAA;gBACZ,KAAKxE;gBACL,KAAKU;AACJ,sBAAImG,KAAM,CAAA;AAEV,uBADA/N,KAAOA,GAAK2K,YACN3K,KACc,OAAhBA,GAAK0L,YAAiC,MAAjB1L,GAAK0L,YAC5BqC,GAAIY,KAAK4F,IAAevU,EAAAA,CAAAA,GAEzBA,KAAOA,GAAK4K;AAEb,yBAAOmD,GAAIO,KAAK,EAAA;gBACjB;AACC,yBAAOtO,GAAKwD;cAAAA;YAEd;AAhBS+Q,qBAAAA;AAhCTtX,mBAAOqX,eAAetL,EAAa5K,WAAU,UAAS,EACrDoW,KAAI,WAAA;AAEH,qBADApL,EAAgBzM,IAAAA,GACTA,KAAK+M;YACb,EAAA,CAAA,GAGDzM,OAAOqX,eAAejK,EAAKjM,WAAU,eAAc,EAClDoW,KAAI,WAAA;AACH,qBAAOD,IAAe5X,IAAAA;YACvB,GAEA8X,KAAI,SAASvQ,IAAAA;AACZ,sBAAOvH,KAAK+O,UAAAA;gBACZ,KAAKxE;gBACL,KAAKU;AACJ,yBAAMjL,KAAKgO,aACVhO,MAAKgQ,YAAYhQ,KAAKgO,UAAAA;AAAAA,mBAEpBzG,MAAQtD,OAAOsD,EAAAA,MACjBvH,KAAKqE,YAAYrE,KAAK4M,cAAc3E,eAAeV,EAAAA,CAAAA;AAEpD;gBAED;AACCvH,uBAAKuH,OAAOA,IACZvH,KAAKU,QAAQ6G,IACbvH,KAAK6G,YAAYU;cAAAA;YAEnB,EAAA,CAAA,GAqBDuF,KAAU,SAAS1M,IAAOoB,IAAId,IAAAA;AAE7BN,cAAAA,GAAO,OAAKoB,EAAAA,IAAOd;YACpB;UACD;QACD,SAAOT,IAAAA;QACP;AAGCL,QAAAA,GAAQ8Q,eAAeA,IACvB9Q,GAAQmM,eAAeA,IACvBnM,GAAQ6C,oBAAoBA,GAC5B7C,GAAQwQ,UAAUA,GAClBxQ,GAAQ8N,OAAOA,GACf9N,GAAQwM,WAAWA,GACnBxM,GAAQoR,gBAAgBA;MAAAA,GAAAA,MAAAA,CAAAA,IAAAA,IAAAA,OAAAA;AAAAA;AC5yDzB,YAAI7Q,KAASkC,GAAA,IAAA,EAAA;AASbzC,QAAAA,GAAQoF,eAAe7E,GAAO,EAC7B4X,KAAK,KACLC,MAAM,KACNC,IAAI,KACJC,IAAI,KACJC,MAAM,IAAA,CAAA,GAiBPvY,GAAQmF,gBAAgB5E,GAAO,EAC9BiY,QAAQ,QACRC,QAAQ,QACRC,QAAQ,UACRC,QAAQ,UACRxW,IAAI,UACJyW,KAAK,UACLC,KAAK,gBACLC,OAAO,QACPC,OAAO,QACPC,OAAO,QACPC,KAAK,UACLC,KAAK,UACLC,OAAO,QACPC,OAAO,QACPC,IAAI,UACJC,KAAK,aACLC,KAAK,aACLC,QAAQ,QACRC,QAAQ,QACRC,SAAS,UACTC,OAAO,UACPC,OAAO,UACPC,OAAO,UACPC,OAAO,UACPC,OAAO,UACPC,OAAO,UACPC,KAAK,KACL9B,KAAK,KACL+B,KAAK,UACLC,KAAK,UACLC,QAAQ,UACRC,MAAM,UACNC,UAAU,UACVC,MAAM,UACNC,KAAK,UACLC,MAAM,UACNC,OAAO,UACPC,QAAQ,UACRC,UAAU,UACVC,UAAU,UACVC,UAAU,UACVC,UAAU,UACVC,UAAU,UACVC,UAAU,UACVC,UAAU,UACVC,UAAU,UACVC,OAAO,UACPC,SAAS,UACTC,UAAU,UACVC,QAAQ,UACRC,OAAO,QACPC,SAAS,UACTC,OAAO,UACPC,OAAO,UACPC,MAAM,aACNC,MAAM,aACNC,IAAI,UACJC,QAAQ,UACRC,KAAK,UACLC,KAAK,UACLC,MAAM,UACN9D,MAAM,KACN+D,eAAe,UACfC,QAAQ,UACRC,UAAU,UACVC,OAAO,QACPC,OAAO,QACPC,MAAM,aACNC,MAAM,aACNC,QAAQ,UACRC,KAAK,KACLC,OAAO,UACPC,SAAS,UACTC,QAAQ,QACRC,QAAQ,QACRC,MAAM,QACNC,MAAM,QACNC,UAAU,UACVC,OAAO,UACPC,UAAU,UACVC,aAAa,UACbC,WAAW,UACXC,SAAS,UACTC,WAAW,UACXC,WAAW,UACXC,MAAM,UACNC,QAAQ,UACRC,QAAQ,UACRC,QAAQ,UACRC,UAAU,UACVC,MAAM,UACNC,UAAU,UACVC,OAAO,UACPC,KAAK,UACLC,KAAK,UACLC,OAAO,UACPC,QAAQ,UACRC,SAAS,UACTC,SAAS,UACTC,SAAS,UACTC,OAAO,UACPC,QAAQ,UACRC,YAAY,UACZC,MAAM,UACNC,MAAM,UACNC,MAAM,UACNC,SAAS,UACTC,KAAK,aACLC,KAAK,aACLC,QAAQ,UACRC,SAAS,UACTC,QAAQ,UACRC,SAAS,UACTC,UAAU,UACVC,WAAW,UACXC,UAAU,UACVC,SAAS,UACTC,iBAAiB,UACjBC,eAAe,UACfC,UAAU,UACVC,QAAQ,UACRC,UAAU,UACVC,QAAQ,UACRC,cAAc,UACdC,aAAa,UACbC,eAAe,UACfC,mBAAmB,UACnBC,mBAAmB,UACnBC,oBAAoB,UACpBC,OAAO,UACPC,OAAO,UACPC,OAAO,UACPC,OAAO,UACPC,OAAO,UACPC,KAAK,WACLC,SAAS,gBACTC,MAAM,UACNC,MAAM,UACNC,MAAM,aACNC,MAAM,aACNC,KAAK,UACLC,QAAQ,UACRC,QAAQ,UACRC,QAAQ,UACRC,OAAO,UACPC,OAAO,UACPC,OAAO,UACPC,OAAO,UACPC,OAAO,UACPC,OAAO,UACPC,OAAO,UACPC,OAAO,UACPC,MAAM,UACNC,MAAM,UACNC,OAAO,UACPC,OAAO,UACPC,OAAO,UACPC,OAAO,UACPC,OAAO,UACPC,OAAO,UACPC,OAAO,UACPC,OAAO,UACPC,UAAU,UACVC,SAAS,UACTC,UAAU,UACVC,OAAO,UACPC,OAAO,UACPC,OAAO,UACPC,OAAO,UACPC,OAAO,UACPC,OAAO,UACPC,OAAO,UACPC,OAAO,UACPC,MAAM,UACNC,MAAM,UACNC,OAAO,UACPC,OAAO,UACPC,OAAO,UACPC,OAAO,UACPC,OAAO,UACPC,OAAO,UACPC,OAAO,UACPC,OAAO,UACPC,OAAO,UACPC,OAAO,UACPC,OAAO,UACPC,OAAO,UACPC,QAAQ,UACRC,OAAO,UACPC,OAAO,UACPC,QAAQ,QACRC,MAAM,UACNC,MAAM,aACNC,OAAO,UACPC,MAAM,UACNC,OAAO,UACPC,MAAM,MACNC,OAAO,UACPC,UAAU,UACVC,MAAM,UACNC,QAAQ,UACRC,MAAM,UACNC,OAAO,UACPC,OAAO,UACPC,QAAQ,UACRC,QAAQ,UACRC,QAAQ,UACRC,QAAQ,UACRC,KAAK,UACLC,KAAK,UACLC,QAAQ,UACRC,UAAU,UACVC,QAAQ,UACRC,QAAQ,UACRC,QAAQ,UACRC,sBAAsB,UACtBC,MAAM,gBACNC,OAAO,UACPC,OAAO,UACPC,SAAS,UACTC,OAAO,UACPC,QAAQ,UACRC,QAAQ,UACRC,QAAQ,QACRC,QAAQ,QACRC,OAAO,UACPC,OAAO,UACPC,SAAS,UACTC,OAAO,UACPC,SAAS,UACTC,MAAM,UACNC,MAAM,UACNC,OAAO,QACPC,SAAS,QACTC,SAAS,UACTC,MAAM,QACNC,WAAW,QACXC,WAAW,QACXC,KAAK,UACLC,KAAK,aACLC,MAAM,UACNC,MAAM,UACNC,OAAO,UACPC,WAAW,UACXC,KAAK,UACLC,KAAK,UACLC,KAAK,UACLC,MAAM,UACNC,QAAQ,UACRC,iBAAiB,UACjBC,kBAAkB,UAClBC,YAAY,UACZC,aAAa,UACbC,aAAa,UACbC,WAAW,UACXC,UAAU,QACVC,UAAU,UACVC,aAAa,UACbC,YAAY,UACZC,aAAa,UACbC,MAAM,UACNC,MAAM,UACNC,UAAU,UACVC,QAAQ,UACRC,SAAS,UACTC,0BAA0B,UAC1BC,uBAAuB,UACvBC,iBAAiB,UACjBC,OAAO,UACPC,UAAU,UACVC,OAAO,UACPC,OAAO,KACPC,QAAQ,UACRC,QAAQ,UACRC,SAAS,UACTC,OAAO,KACPC,QAAQ,KACRC,MAAM,UACNC,QAAQ,UACRC,YAAY,UACZC,WAAW,UACXC,MAAM,UACNC,SAAS,UACTC,WAAW,UACXC,QAAQ,UACRC,QAAQ,UACRC,iBAAiB,UACjBC,MAAM,UACNC,MAAM,aACNC,QAAQ,UACRC,WAAW,UACXC,MAAM,QACNvgB,MAAM,QACNwgB,QAAQ,UACRC,iCAAiC,UACjCC,OAAO,UACPC,OAAO,UACPC,OAAO,UACPC,MAAM,aACNC,MAAM,aACNC,MAAM,UACNC,OAAO,UACPC,MAAM,UACNC,OAAO,UACPC,OAAO,UACPC,SAAS,UACTC,SAAS,UACTC,OAAO,UACPC,OAAO,UACPC,QAAQ,UACRC,SAAS,UACTC,KAAK,UACLC,KAAK,UACLC,UAAU,UACVC,QAAQ,UACRC,QAAQ,UACRC,QAAQ,UACRC,QAAQ,UACRC,OAAO,UACPC,MAAM,gBACNC,QAAQ,UACRC,SAAS,UACTC,aAAa,UACbC,aAAa,UACbC,UAAU,UACVC,YAAY,UACZC,QAAQ,QACRC,gBAAgB,UAChBC,iBAAiB,UACjBC,OAAO,UACPC,OAAO,UACPC,UAAU,UACVC,OAAO,UACPC,QAAQ,UACRC,QAAQ,UACRC,QAAQ,UACRC,QAAQ,UACRC,MAAM,UACNC,MAAM,UACNC,MAAM,UACNC,MAAM,UACNC,OAAO,UACPC,OAAO,UACPC,SAAS,UACTC,OAAO,UACPC,QAAQ,UACRC,QAAQ,UACRC,KAAK,UACLC,KAAK,UACLC,IAAI,UACJC,IAAI,UACJC,SAAS,UACTC,OAAO,UACPC,UAAU,UACVC,SAAS,UACTC,KAAK,QACLC,KAAK,UACLC,OAAO,UACPC,OAAO,UACPC,SAAS,UACTC,QAAQ,UACRC,KAAK,aACLC,KAAK,aACLC,MAAM,UACNC,OAAO,UACPC,OAAO,UACPC,kBAAkB,QAClBC,gBAAgB,UAChBC,wBAAwB,UACxBC,kBAAkB,KAClBC,kBAAkB,UAClBC,MAAM,UACNC,SAAS,UACTC,SAAS,UACTC,aAAa,UACbC,OAAO,UACPC,KAAK,QACLC,eAAe,UACfC,SAAS,UACTC,OAAO,UACPC,KAAK,QACLC,QAAQ,QACRC,eAAe,UACfC,QAAQ,UACRC,MAAM,UACNC,MAAM,UACNC,QAAQ,UACRC,QAAQ,UACRC,QAAQ,KACRC,MAAM,aACNC,MAAM,aACNC,KAAK,QACLC,KAAK,UACLC,QAAQ,UACRC,OAAO,UACPC,UAAU,UACVC,UAAU,UACVC,UAAU,UACVC,SAAS,UACTC,WAAW,UACXC,gBAAgB,UAChBC,uBAAuB,UACvBC,WAAW,QACXC,iBAAiB,UACjBC,iBAAiB,UACjBC,sBAAsB,UACtBC,eAAe,UACfC,qBAAqB,UACrBC,0BAA0B,UAC1BC,sBAAsB,UACtBC,kBAAkB,UAClBC,gBAAgB,UAChBC,eAAe,UACfC,mBAAmB,UACnBC,mBAAmB,UACnBC,WAAW,UACXC,WAAW,UACXC,WAAW,UACXC,cAAc,UACdC,kBAAkB,UAClBC,WAAW,UACXC,gBAAgB,UAChBC,iBAAiB,UACjBC,kBAAkB,UAClBC,qBAAqB,UACrBC,mBAAmB,UACnBC,gBAAgB,UAChBC,mBAAmB,UACnBC,oBAAoB,UACpBC,iBAAiB,UACjBC,oBAAoB,UACpBC,SAAS,UACTC,cAAc,UACdC,UAAU,UACVC,QAAQ,UACRC,QAAQ,UACRC,MAAM,aACNC,MAAM,aACNC,MAAM,UACNC,MAAM,UACNC,MAAM,UACNC,QAAQ,UACRC,QAAQ,UACRC,OAAO,UACPC,MAAM,UACNC,OAAO,UACPC,OAAO,UACPC,OAAO,UACPC,SAAS,UACTC,MAAM,UACNC,MAAM,UACNC,UAAU,UACVC,QAAQ,QACRC,QAAQ,QACRC,QAAQ,UACRC,QAAQ,UACRC,QAAQ,UACRC,MAAM,UACNC,OAAO,QACPC,OAAO,QACPC,QAAQ,UACRC,KAAK,UACLC,KAAK,UACLC,OAAO,UACPC,MAAM,UACNC,MAAM,UACNC,MAAM,UACNC,IAAI,UACJC,OAAO,UACPC,KAAK,aACLC,KAAK,aACLC,IAAI,UACJC,QAAQ,QACRC,QAAQ,QACRC,KAAK,UACLC,QAAQ,UACRvvB,IAAI,UACJgK,SAAS,UACTwlB,UAAU,UACVC,KAAK,UACLC,KAAK,UACLC,QAAQ,UACRC,OAAO,UACPC,OAAO,UACPC,OAAO,UACPC,UAAU,UACVC,kBAAkB,UAClBC,QAAQ,UACRC,sBAAsB,UACtBC,MAAM,UACNC,QAAQ,UACRC,QAAQ,UACRC,KAAK,UACLC,KAAK,UACLC,MAAM,UACNC,OAAO,UACPC,OAAO,UACPC,MAAM,aACNC,MAAM,aACNC,MAAM,UACNC,QAAQ,UACRC,OAAO,UACPC,MAAM,UACNC,SAAS,UACTC,SAAS,UACTC,OAAO,UACPC,QAAQ,UACRC,SAAS,UACTC,OAAO,UACPC,YAAY,UACZC,aAAa,UACbC,OAAO,UACPC,QAAQ,KACRC,YAAY,UACZC,QAAQ,UACRC,aAAa,UACbC,OAAO,UACPC,SAAS,UACTC,UAAU,UACVC,OAAO,UACPC,OAAO,UACPC,MAAM,UACNC,MAAM,UACNC,OAAO,UACPC,MAAM,UACNC,MAAM,UACNC,KAAK,UACLC,KAAK,UACLC,KAAK,QACLC,KAAK,QACLC,MAAM,QACNC,MAAM,QACNC,MAAM,UACNC,MAAM,KACNC,OAAO,UACPC,QAAQ,UACRC,aAAa,UACbC,cAAc,UACdC,cAAc,UACdC,eAAe,UACfC,KAAK,UACLC,KAAK,UACLC,QAAQ,UACRC,QAAQ,UACRC,OAAO,UACPC,QAAQ,UACRC,KAAK,aACLC,KAAK,aACLC,OAAO,UACPC,mBAAmB,UACnBC,uBAAuB,UACvBC,OAAO,MACPC,MAAM,UACNC,OAAO,UACPC,OAAO,UACPC,MAAM,UACNC,MAAM,aACNC,MAAM,aACNC,QAAQ,UACRC,QAAQ,UACRC,MAAM,UACNC,OAAO,UACPC,YAAY,UACZC,UAAU,UACVC,QAAQ,QACRC,QAAQ,UACRC,QAAQ,QACRC,QAAQ,UACRC,QAAQ,UACRC,QAAQ,UACRC,QAAQ,UACRC,QAAQ,UACRC,QAAQ,QACRC,QAAQ,UACRC,QAAQ,UACRC,QAAQ,UACRC,QAAQ,UACRC,QAAQ,UACRC,QAAQ,UACRC,OAAO,UACPC,OAAO,UACPC,MAAM,UACNC,MAAM,aACNC,QAAQ,UACRC,OAAO,UACPC,OAAO,UACPC,QAAQ,UACRC,QAAQ,UACRC,KAAK,UACLC,QAAQ,UACRC,QAAQ,UACRC,QAAQ,UACRC,OAAO,UACPC,OAAO,UACPC,KAAK,UACLC,KAAK,UACLC,MAAM,UACNC,MAAM,UACNC,IAAI,UACJC,IAAI,UACJC,KAAK,UACLC,KAAK,UACLC,KAAK,UACLC,MAAM,UACNC,UAAU,UACVC,KAAK,UACLC,OAAO,UACPC,QAAQ,UACRC,SAAS,UACTC,UAAU,UACVC,MAAM,gBACNC,QAAQ,UACRC,KAAK,aACLC,KAAK,aACLC,IAAI,UACJC,IAAI,UACJC,KAAK,UACLC,OAAO,UACPC,MAAM,UACNC,MAAM,UACNC,IAAI,UACJC,KAAK,UACLC,KAAK,UACLC,KAAK,UACLC,MAAM,UACNC,UAAU,UACVC,KAAK,UACLC,KAAK,UACLC,MAAM,UACNC,OAAO,UACPC,OAAO,UACPC,MAAM,aACNC,MAAM,aACNC,OAAO,KACPC,cAAc,UACdC,kBAAkB,UAClBC,kBAAkB,UAClBC,gBAAgB,UAChBC,aAAa,UACbC,mBAAmB,UACnBC,cAAc,UACdC,MAAM,aACNC,MAAM,UACNC,MAAM,UACNC,OAAO,UACPC,OAAO,UACPC,IAAI,UACJC,IAAI,KACJpoB,IAAI,KACJqoB,MAAM,UACNC,OAAO,UACPC,OAAO,UACPC,QAAQ,UACRC,SAAS,UACTC,WAAW,UACXC,QAAQ,UACRC,QAAQ,UACRC,WAAW,UACXC,YAAY,UACZC,SAAS,UACTC,QAAQ,UACRC,WAAW,gBACXC,MAAM,gBACNC,OAAO,UACPC,QAAQ,UACRC,MAAM,QACNC,QAAQ,UACRC,QAAQ,UACRC,QAAQ,UACRC,MAAM,UACNC,MAAM,UACNC,SAAS,UACTC,OAAO,UACPC,KAAK,KACLC,MAAM,UACNC,OAAO,UACPC,OAAO,UACPC,QAAQ,UACRC,WAAW,UACXC,QAAQ,UACRC,QAAQ,UACRC,KAAK,UACLC,KAAK,aACLC,cAAc,UACdC,UAAU,UACVC,UAAU,UACVC,OAAO,UACPC,QAAQ,UACRC,eAAe,UACfC,gBAAgB,UAChBC,MAAM,UACNC,MAAM,aACNC,QAAQ,UACRC,gBAAgB,UAChBC,MAAM,UACNC,MAAM,aACNC,QAAQ,UACRC,QAAQ,UACRC,QAAQ,UACRC,cAAc,UACdC,WAAW,UACXC,QAAQ,UACRC,QAAQ,UACRC,QAAQ,QACRC,QAAQ,QACRC,IAAI,UACJC,OAAO,QACPC,OAAO,QACPC,KAAK,UACLC,KAAK,UACLC,MAAM,UACNC,MAAM,UACNC,MAAM,UACNC,OAAO,QACPC,KAAK,UACLC,KAAK,UACLC,KAAK,aACLC,QAAQ,QACRC,QAAQ,QACRC,IAAI,UACJC,QAAQ,UACRC,OAAO,UACPC,QAAQ,UACRC,OAAO,UACPC,OAAO,UACPC,OAAO,UACPC,IAAI,UACJC,OAAO,UACPC,OAAO,UACPC,OAAO,UACPC,YAAY,UACZC,UAAU,UACVC,UAAU,UACVC,OAAO,UACPC,MAAM,UACNC,OAAO,UACPC,SAAS,UACTC,IAAI,UACJC,QAAQ,UACRC,OAAO,UACPC,UAAU,UACVC,QAAQ,UACRC,KAAK,UACLC,KAAK,UACLC,QAAQ,UACRC,UAAU,UACVC,UAAU,UACVC,UAAU,UACVC,cAAc,UACdC,UAAU,UACVC,SAAS,UACTC,gBAAgB,UAChBC,gBAAgB,UAChBC,MAAM,UACNC,MAAM,UACNC,OAAO,UACPC,OAAO,UACPC,MAAM,aACNC,MAAM,aACNC,MAAM,UACNC,MAAM,UACNC,OAAO,UACPC,QAAQ,QACRC,MAAM,UACNC,MAAM,aACNC,MAAM,UACNC,SAAS,UACTC,OAAO,UACPC,OAAO,UACPC,QAAQ,UACRC,OAAO,UACPC,IAAI,UACJC,QAAQ,UACRC,QAAQ,UACRC,OAAO,UACPC,OAAO,UACPC,MAAM,QACNC,MAAM,QACNC,OAAO,UACPC,OAAO,UACPC,KAAK,UACLC,KAAK,UACLC,KAAK,aACLC,KAAK,aACLC,OAAO,UACPC,MAAM,aACNC,MAAM,aACNC,MAAM,aACNC,MAAM,aACNC,QAAQ,UACRC,QAAQ,UACRC,OAAO,UACPC,OAAO,UACPC,OAAO,UACPC,OAAO,UACPC,QAAQ,UACRC,QAAQ,UACRC,QAAQ,UACRC,KAAK,UACLC,KAAK,UACLC,KAAK,aACLC,KAAK,aACLC,QAAQ,UACRC,MAAM,UACNC,MAAM,UACNC,MAAM,UACNC,MAAM,UACNC,MAAM,aACNC,MAAM,aACNC,MAAM,aACNC,MAAM,aACNC,OAAO,UACPC,QAAQ,UACRC,QAAQ,UACRC,UAAU,UACVC,QAAQ,UACRC,QAAQ,UACRC,QAAQ,UACRC,MAAM,UACN/mC,MAAM,UACNgnC,OAAO,UACPC,QAAQ,UACRC,KAAK,UACLC,YAAY,UACZC,OAAO,QACPC,MAAM,UACNC,MAAM,UACNC,MAAM,UACNC,OAAO,UACPC,SAAS,UACTC,QAAQ,UACRC,QAAQ,UACRC,QAAQ,UACRC,QAAQ,UACRC,SAAS,UACTC,QAAQ,UACRC,KAAK,UACLC,QAAQ,UACRC,QAAQ,UACRC,MAAM,UACNC,OAAO,gBACPC,OAAO,UACPC,OAAO,UACPC,OAAO,UACPC,QAAQ,KACRC,QAAQ,KACRC,OAAO,UACPC,SAAS,UACTC,SAAS,UACTC,QAAQ,UACRC,QAAQ,UACRC,QAAQ,UACRC,QAAQ,UACRC,OAAO,UACPC,MAAM,KACNC,KAAK,UACLC,KAAK,UACLC,MAAM,UACNC,OAAO,UACPC,QAAQ,UACRC,SAAS,UACTC,UAAU,UACVC,MAAM,UACNC,IAAI,UACJC,IAAI,UACJC,kBAAkB,UAClBC,WAAW,UACXC,WAAW,UACXC,WAAW,UACXC,cAAc,UACdC,qBAAqB,UACrBC,eAAe,UACfC,aAAa,UACbC,mBAAmB,UACnBC,mBAAmB,UACnBC,gBAAgB,UAChBC,mBAAmB,UACnBC,WAAW,UACXC,iBAAiB,UACjBC,eAAe,UACfC,gBAAgB,UAChBC,gBAAgB,UAChBC,gBAAgB,UAChBC,gBAAgB,UAChBC,iBAAiB,UACjBC,mBAAmB,UACnBC,qBAAqB,UACrBC,iBAAiB,UACjBC,SAAS,UACTC,cAAc,UACdC,eAAe,UACfC,gBAAgB,UAChBC,cAAc,UACdC,iBAAiB,UACjBC,mBAAmB,UACnBC,kBAAkB,UAClBC,iBAAiB,UACjBC,cAAc,UACdC,iBAAiB,UACjBC,YAAY,UACZC,eAAe,UACfC,KAAK,UACLC,KAAK,UACLC,KAAK,UACLC,MAAM,UACNC,UAAU,UACVC,KAAK,UACLC,OAAO,UACPC,QAAQ,UACRC,SAAS,UACTC,UAAU,UACVC,MAAM,gBACNC,QAAQ,UACRC,YAAY,UACZC,SAAS,UACTC,WAAW,UACXC,YAAY,UACZC,kBAAkB,UAClBC,eAAe,UACfC,aAAa,UACbC,SAAS,UACTC,UAAU,UACVC,SAAS,UACTC,gBAAgB,UAChBC,WAAW,UACXC,QAAQ,UACRC,QAAQ,UACRC,KAAK,aACLC,KAAK,aACLC,IAAI,UACJC,KAAK,UACLC,MAAM,UACNC,OAAO,UACPC,OAAO,UACPC,QAAQ,UACRC,OAAO,UACPC,MAAM,UACNC,MAAM,UACNC,IAAI,UACJC,IAAI,UACJC,OAAO,UACPC,UAAU,UACVC,YAAY,UACZC,QAAQ,UACRC,OAAO,UACPC,QAAQ,UACRC,QAAQ,UACRC,QAAQ,UACRC,YAAY,UACZC,MAAM,UACNC,UAAU,UACVC,KAAK,UACLC,KAAK,UACLC,MAAM,UACNC,OAAO,UACPC,OAAO,UACPC,OAAO,UACPC,OAAO,UACPC,OAAO,UACPC,eAAe,UACfC,eAAe,UACfC,eAAe,UACfC,oBAAoB,UACpBC,oBAAoB,UACpBC,oBAAoB,UACpBC,YAAY,UACZC,gBAAgB,UAChBC,gBAAgB,UAChBC,gBAAgB,UAChBC,eAAe,UACfC,gBAAgB,UAChBC,OAAO,UACPC,MAAM,aACNC,MAAM,aACNC,QAAQ,UACRC,SAAS,UACTC,QAAQ,UACRC,QAAQ,KACRC,gBAAgB,UAChBC,iBAAiB,UACjBC,KAAK,UACLC,SAAS,UACTC,MAAM,UACNC,MAAM,KACNC,QAAQ,UACRC,OAAO,UACPC,UAAU,UACVC,OAAO,UACPC,QAAQ,UACRC,KAAK,UACLC,OAAO,UACPC,QAAQ,UACRC,MAAM,UACNC,MAAM,aACNC,KAAK,UACLC,KAAK,UACLC,MAAM,UACNC,OAAO,UACPC,OAAO,UACPC,MAAM,KACNC,OAAO,UACPC,QAAQ,UACRC,QAAQ,UACRC,QAAQ,UACRC,IAAI,UACJC,IAAI,KACJv+B,IAAI,KACJw+B,MAAM,UACNC,OAAO,UACPC,OAAO,UACPC,QAAQ,UACRC,QAAQ,UACRC,QAAQ,UACRC,SAAS,UACTC,MAAM,UACNC,OAAO,UACPC,OAAO,UACPC,QAAQ,UACRC,UAAU,UACVC,SAAS,UACTC,WAAW,gBACXC,MAAM,gBACNC,MAAM,QACNC,MAAM,UACNC,MAAM,UACNC,SAAS,UACTC,KAAK,UACLjjC,KAAK,UACLkjC,QAAQ,UACRC,YAAY,UACZC,YAAY,UACZC,UAAU,UACVC,QAAQ,UACRC,QAAQ,UACRC,KAAK,UACLC,KAAK,UACLC,OAAO,UACPC,OAAO,UACPC,eAAe,UACfC,aAAa,UACbC,WAAW,UACXC,KAAK,aACLC,KAAK,aACLC,KAAK,UACLC,OAAO,QACPC,KAAK,UACLC,QAAQ,KACRC,QAAQ,UACRC,QAAQ,QACRC,OAAO,UACPC,QAAQ,UACRC,QAAQ,UACRC,SAAS,UACTC,WAAW,UACXC,MAAM,UACNC,MAAM,UACNC,QAAQ,UACRC,QAAQ,UACRC,MAAM,aACNC,MAAM,aACNC,IAAI,UACJC,MAAM,UACNC,MAAM,aACNC,QAAQ,UACRC,IAAI,UACJC,IAAI,UACJC,UAAU,UACVC,OAAO,UACPC,OAAO,UACPC,QAAQ,UACRC,QAAQ,UACRC,MAAM,gBACNC,KAAK,UACLC,MAAM,gBACNC,OAAO,gBACPC,OAAO,UACPC,SAAS,UACTC,OAAO,UACPC,SAAS,UACTC,UAAU,UACVC,MAAM,QACNC,OAAO,gBACPC,QAAQ,gBACRC,MAAM,UACNC,QAAQ,UACRC,QAAQ,UACRC,QAAQ,UACRC,QAAQ,UACRC,OAAO,UACPC,UAAU,gBACVC,MAAM,UACNC,KAAK,UACLC,KAAK,UACLC,OAAO,UACPC,IAAI,UACJC,QAAQ,UACRC,OAAO,UACPC,OAAO,UACPC,SAAS,UACTC,OAAO,gBACPC,qBAAqB,UACrBC,oBAAoB,UACpBC,mBAAmB,UACnBC,uBAAuB,UACvBC,QAAQ,UACRC,QAAQ,UACRC,OAAO,gBACPC,sBAAsB,UACtBC,gBAAgB,UAChBC,SAAS,MACTC,QAAQ,UACRC,SAAS,UACTC,KAAK,aACLC,KAAK,aACLC,KAAK,gBACLC,KAAK,UACLC,MAAM,UACNC,OAAO,gBACPC,WAAW,gBACXC,MAAM,gBACNC,KAAK,gBACLC,OAAO,UACPC,KAAK,gBACLC,KAAK,UACLC,MAAM,UACNC,MAAM,gBACNC,OAAO,UACPC,OAAO,UACPC,OAAO,UACPC,IAAI,UACJC,KAAK,UACLC,MAAM,UACNC,KAAK,UACLC,MAAM,UACNC,MAAM,UACNC,OAAO,UACPC,OAAO,UACPC,MAAM,UACNC,KAAK,gBACLC,KAAK,UACLC,YAAY,UACZC,YAAY,UACZC,iBAAiB,UACjBC,iBAAiB,UACjBC,MAAM,UACNC,OAAO,gBACPC,WAAW,gBACXC,MAAM,gBACNC,OAAO,UACPC,KAAK,gBACLC,OAAO,UACPC,KAAK,gBACLC,KAAK,UACLC,OAAO,UACPC,QAAQ,UACRC,MAAM,gBACNC,MAAM,UACNC,SAAS,UACTC,kBAAkB,QAClBC,MAAM,UACNC,MAAM,aACNC,KAAK,UACLC,KAAK,QACLC,cAAc,UACdC,WAAW,UACXC,sBAAsB,UACtBC,YAAY,UACZC,UAAU,UACVC,eAAe,gBACfC,WAAW,UACXC,YAAY,UACZC,iBAAiB,UACjBC,qBAAqB,gBACrBC,mBAAmB,gBACnBC,gBAAgB,UAChBC,sBAAsB,gBACtBC,iBAAiB,UACjBC,iBAAiB,gBACjBC,cAAc,gBACdC,OAAO,UACPC,UAAU,gBACVC,QAAQ,gBACRC,SAAS,UACTC,SAAS,UACTC,SAAS,UACTC,iBAAiB,UACjBC,oBAAoB,gBACpBC,sBAAsB,UACtBC,SAAS,UACTC,cAAc,UACdC,gBAAgB,UAChBC,aAAa,gBACbC,mBAAmB,gBACnBC,cAAc,UACdC,yBAAyB,gBACzBC,mBAAmB,gBACnBC,OAAO,UACPC,SAAS,UACTC,SAAS,UACTC,SAAS,UACTC,aAAa,UACbC,kBAAkB,gBAClBC,uBAAuB,UACvBC,mBAAmB,UACnBC,kBAAkB,UAClBC,qBAAqB,gBACrBC,uBAAuB,UACvBC,iBAAiB,gBACjBC,sBAAsB,UACtBC,mBAAmB,gBACnBC,wBAAwB,UACxBC,WAAW,gBACXC,gBAAgB,UAChBC,aAAa,UACbC,kBAAkB,gBAClBC,uBAAuB,UACvBC,kBAAkB,gBAClBC,aAAa,gBACbC,kBAAkB,UAClBC,UAAU,UACVC,eAAe,UACfC,mBAAmB,UACnBC,eAAe,UACfC,gBAAgB,UAChBC,MAAM,UACNC,WAAW,UACXC,QAAQ,gBACRC,OAAO,gBACPC,SAAS,UACTC,KAAK,UACLC,QAAQ,UACRC,MAAM,gBACNC,OAAO,UACPC,SAAS,gBACTC,OAAO,UACPC,OAAO,UACPC,QAAQ,gBACRC,QAAQ,gBACRC,aAAa,UACbC,aAAa,UACbC,OAAO,UACPC,QAAQ,UACRC,KAAK,UACLC,QAAQ,UACRC,MAAM,gBACNC,MAAM,aACNC,MAAM,aACNC,WAAW,UACXC,gBAAgB,UAChBC,MAAM,UACNC,OAAO,UACPC,QAAQ,UACRC,OAAO,UACPC,OAAO,UACPC,SAAS,UACTC,SAAS,UACTC,MAAM,UACNC,OAAO,gBACPC,OAAO,UACPC,SAAS,gBACTC,WAAW,UACXC,YAAY,gBACZC,OAAO,UACPC,SAAS,gBACTC,MAAM,UACNC,OAAO,gBACPC,OAAO,UACPC,SAAS,gBACTC,WAAW,UACXC,YAAY,gBACZC,MAAM,UACNC,QAAQ,QACRC,QAAQ,QACRC,MAAM,UACNC,eAAe,UACfC,iBAAiB,UACjBC,gBAAgB,UAChBC,kBAAkB,UAClBC,IAAI,UACJC,IAAI,UACJC,KAAK,KACLC,QAAQ,UACRC,OAAO,UACPC,MAAM,gBACNC,QAAQ,UACRC,QAAQ,UACRC,QAAQ,UACRC,QAAQ,UACRC,MAAM,gBACNC,MAAM,WACNC,QAAQ,UACRC,SAAS,UACTC,QAAQ,UACRC,MAAM,gBACNC,MAAM,WACNC,SAAS,gBACTC,QAAQ,UACRC,SAAS,gBACTC,OAAO,gBACPC,QAAQ,UACRC,OAAO,UACPC,OAAO,UACPC,SAAS,UACTC,QAAQ,UACRC,QAAQ,QACRC,QAAQ,QACRC,MAAM,UACNC,MAAM,UACNC,OAAO,QACPC,OAAO,QACPC,KAAK,UACLC,KAAK,UACLC,OAAO,UACPC,QAAQ,UACRC,QAAQ,UACRC,MAAM,UACNC,MAAM,UACNC,QAAQ,UACRC,OAAO,UACPC,OAAO,UACPC,OAAO,UACPC,KAAK,aACLC,KAAK,aACLC,MAAM,UACNC,QAAQ,QACRC,QAAQ,QACRC,KAAK,UACLC,OAAO,UACPC,KAAK,UACLC,MAAM,UACNC,OAAO,UACPC,OAAO,UACPC,SAAS,UACTC,OAAO,UACPC,KAAK,UACLC,OAAO,UACPC,OAAO,UACPC,OAAO,UACPC,OAAO,UACPC,SAAS,UACTC,SAAS,UACTC,MAAM,UACNC,QAAQ,UACRC,MAAM,aACNC,MAAM,aACNC,MAAM,UACNC,sBAAsB,UACtBC,gBAAgB,UAChBC,OAAO,UACPC,OAAO,UACPC,IAAI,UACJC,IAAI,UACJC,OAAO,UACPC,KAAK,UACLC,OAAO,UACPC,SAAS,UACTC,MAAM,QACNC,MAAM,QACNC,QAAQ,UACRC,MAAM,UACNC,SAAS,UACTC,KAAK,UACLC,IAAI,UACJC,MAAM,aACNC,MAAM,UACNC,QAAQ,QACRC,QAAQ,QACRC,MAAM,UACNC,QAAQ,QACRC,QAAQ,QACRC,QAAQ,UACRC,QAAQ,UACRC,UAAU,UACVC,MAAM,QACNC,MAAM,QACNC,OAAO,UACPC,SAAS,UACTC,WAAW,UACXC,aAAa,UACbC,iBAAiB,UACjBC,KAAK,UACLC,MAAM,QACNC,UAAU,UACVC,QAAQ,UACRC,OAAO,UACPC,MAAM,UACNC,UAAU,UACVC,KAAK,UACLC,KAAK,UACLC,QAAQ,KACRC,QAAQ,KACRC,QAAQ,UACRC,MAAM,UACNC,SAAS,UACTC,KAAK,aACLC,KAAK,aACLC,KAAK,UACLC,KAAK,UACLC,MAAM,UACNC,QAAQ,UACRC,OAAO,UACPC,IAAI,UACJC,IAAI,UACJC,WAAW,UACXC,KAAK,UACLC,QAAQ,UACRC,SAAS,UACTC,QAAQ,UACRC,MAAM,KACNC,UAAU,UACVC,OAAO,UACPC,SAAS,UACTC,QAAQ,UACRC,QAAQ,UACRC,OAAO,UACPC,WAAW,QACXC,QAAQ,QACRC,SAAS,UACTC,SAAS,UACTC,IAAI,QACJC,eAAe,UACfC,UAAU,UACVC,MAAM,UACNC,MAAM,aACNC,OAAO,QACPC,IAAI,UACJC,IAAI,UACJC,MAAM,UACNC,OAAO,UACPC,KAAK,UACL5gD,KAAK,UACL6gD,MAAM,UACNC,YAAY,UACZC,aAAa,UACbC,UAAU,UACVC,eAAe,UACfC,oBAAoB,UACpBC,eAAe,UACfC,QAAQ,UACRC,aAAa,UACbC,UAAU,UACVC,UAAU,UACVC,SAAS,UACTC,OAAO,UACPC,OAAO,UACPC,QAAQ,UACRC,OAAO,UACPC,MAAM,UACNC,QAAQ,UACRC,MAAM,UACNC,SAAS,UACTC,UAAU,UACVC,UAAU,UACVC,UAAU,UACVC,MAAM,UACNC,YAAY,UACZC,cAAc,UACdC,QAAQ,UACRC,OAAO,UACPC,QAAQ,UACRC,MAAM,aACNC,MAAM,aACNC,KAAK,UACLC,KAAK,UACLC,QAAQ,UACRC,KAAK,aACLC,KAAK,aACLC,MAAM,UACNC,MAAM,UACNC,MAAM,aACNC,QAAQ,UACRC,MAAM,aACNC,MAAM,aACNC,aAAa,UACbC,SAAS,UACTC,OAAO,KACPC,SAAS,UACTC,MAAM,KACN37C,MAAM,KACN47C,OAAO,UACPC,MAAM,gBACNC,QAAQ,UACRC,QAAQ,UACRC,OAAO,UACPC,UAAU,UACVC,MAAM,UACNC,MAAM,UACNC,OAAO,UACPC,OAAO,UACPC,QAAQ,UACRC,OAAO,QACPC,MAAM,UACNC,MAAM,UACNC,MAAM,UACNC,QAAQ,UACRC,OAAO,UACPC,SAAS,UACTC,OAAO,UACPC,QAAQ,UACRC,QAAQ,UACRC,QAAQ,UACRC,QAAQ,UACRC,SAAS,UACTC,QAAQ,UACRC,QAAQ,UACRC,OAAO,UACPC,QAAQ,UACRC,QAAQ,UACRC,OAAO,UACPC,WAAW,UACXC,OAAO,UACPC,OAAO,UACPC,OAAO,UACPC,OAAO,UACPC,QAAQ,KACRC,QAAQ,KACRC,OAAO,UACPC,SAAS,UACTC,SAAS,UACTC,QAAQ,UACRC,QAAQ,UACRC,QAAQ,UACRC,QAAQ,UACRC,OAAO,UACPC,MAAM,KACNC,KAAK,UACLC,KAAK,UACLC,MAAM,UACNC,SAAS,UACTC,OAAO,UACPC,QAAQ,UACRC,MAAM,UACNC,IAAI,UACJC,MAAM,UACNC,SAAS,UACTC,UAAU,UACVC,OAAO,UACPC,MAAM,UACNC,KAAK,QACLC,KAAK,QACLC,gBAAgB,UAChBC,oBAAoB,UACpBC,sBAAsB,UACtBC,QAAQ,UACRC,QAAQ,UACRC,KAAK,UACLC,KAAK,aACLC,MAAM,UACNC,OAAO,UACPC,OAAO,UACPC,QAAQ,UACRC,KAAK,UACLC,KAAK,UACLC,MAAM,UACNC,mBAAmB,UACnBC,YAAY,UACZC,YAAY,UACZC,YAAY,UACZC,eAAe,UACfC,qBAAqB,UACrBC,gBAAgB,UAChBC,cAAc,UACdC,oBAAoB,UACpBC,oBAAoB,UACpBC,iBAAiB,UACjBC,oBAAoB,UACpBC,YAAY,UACZC,kBAAkB,UAClBC,gBAAgB,UAChBC,iBAAiB,UACjBC,mBAAmB,UACnBC,kBAAkB,UAClBC,iBAAiB,UACjBC,UAAU,UACVC,eAAe,UACfC,gBAAgB,UAChBC,iBAAiB,UACjBC,eAAe,UACfC,kBAAkB,UAClBC,oBAAoB,UACpBC,mBAAmB,UACnBC,kBAAkB,UAClBC,eAAe,UACfC,kBAAkB,UAClBC,aAAa,UACbC,gBAAgB,UAChBC,MAAM,UACNC,cAAc,UACdC,OAAO,UACPC,OAAO,UACPC,KAAK,UACLC,QAAQ,UACRC,YAAY,UACZC,OAAO,UACPC,OAAO,UACPC,OAAO,UACPC,OAAO,UACPC,OAAO,UACPC,MAAM,UACNC,MAAM,aACNC,QAAQ,UACRC,SAAS,UACTC,cAAc,UACdC,MAAM,KACNC,QAAQ,UACRC,UAAU,UACVC,OAAO,UACPC,aAAa,UACbC,QAAQ,UACRC,MAAM,UACNC,MAAM,aACNC,KAAK,UACLC,KAAK,UACLC,MAAM,KACNC,OAAO,UACPC,QAAQ,UACRC,QAAQ,UACRC,QAAQ,UACRC,MAAM,UACNC,OAAO,UACPC,OAAO,UACPC,UAAU,UACVC,aAAa,UACbC,SAAS,UACTC,IAAI,UACJC,QAAQ,UACRC,QAAQ,UACRC,OAAO,UACPC,IAAI,UACJC,IAAI,UACJC,MAAM,UACNC,QAAQ,UACRC,QAAQ,UACRC,OAAO,UACPC,KAAK,UACLC,KAAK,UACLC,QAAQ,UACRC,QAAQ,UACRC,OAAO,UACPC,OAAO,UACPC,OAAO,UACPC,MAAM,UACNC,QAAQ,UACRC,UAAU,UACVC,OAAO,UACPC,KAAK,UACLC,KAAK,UACLC,MAAM,UACNC,OAAO,UACPC,OAAO,UACPC,QAAQ,UACRC,OAAO,UACPC,OAAO,UACPC,SAAS,UACTC,MAAM,QACNC,MAAM,KACNC,QAAQ,UACRC,UAAU,UACVC,OAAO,UACPC,MAAM,UACNC,KAAK,aACLC,KAAK,aACLC,QAAQ,UACRC,OAAO,UACPC,QAAQ,UACRC,QAAQ,UACRC,MAAM,UACNC,MAAM,UACNC,gBAAgB,UAChBC,gBAAgB,UAChBC,UAAU,UACVC,eAAe,UACfC,iBAAiB,UACjBC,cAAc,UACdC,KAAK,QACLC,OAAO,UACPC,OAAO,UACPC,QAAQ,UACRC,QAAQ,UACRC,KAAK,UACLC,QAAQ,UACRC,MAAM,UACNC,OAAO,UACPC,MAAM,UACNC,OAAO,UACPC,MAAM,UACNC,OAAO,UACPC,OAAO,UACPC,SAAS,UACTC,SAAS,UACTC,OAAO,UACPC,aAAa,UACbC,eAAe,UACfC,QAAQ,UACRC,UAAU,UACVC,MAAM,UACNC,OAAO,UACPC,KAAK,UACLC,MAAM,UACNC,OAAO,gBACPC,QAAQ,UACRC,QAAQ,UACRC,KAAK,KACLC,MAAM,UACNC,QAAQ,UACRC,MAAM,aACNC,MAAM,aACNC,QAAQ,UACRC,WAAW,UACXC,MAAM,UACNC,OAAO,UACPC,QAAQ,gBACRC,OAAO,UACPC,QAAQ,gBACRC,MAAM,UACNC,OAAO,UACPC,QAAQ,UACRC,UAAU,UACVC,YAAY,UACZC,OAAO,UACPC,QAAQ,UACRC,UAAU,UACVC,YAAY,UACZC,KAAK,UACLC,QAAQ,UACRC,QAAQ,UACRC,oBAAoB,UACpBC,cAAc,UACdC,mBAAmB,UACnBC,gBAAgB,UAChBC,qBAAqB,UACrBC,aAAa,UACbC,QAAQ,UACRC,MAAM,UACNC,OAAO,UACPC,MAAM,aACNC,MAAM,aACNC,QAAQ,UACRC,QAAQ,UACRC,QAAQ,UACRC,MAAM,UACNC,MAAM,UACNC,OAAO,UACPC,iBAAiB,UACjBC,aAAa,UACbC,OAAO,QACPC,KAAK,UACLhyD,KAAK,UACLiyD,QAAQ,UACRC,MAAM,UACNC,MAAM,UACNC,SAAS,UACTC,SAAS,UACTC,OAAO,UACPC,OAAO,UACPC,SAAS,UACTC,SAAS,UACTC,QAAQ,UACRC,QAAQ,UACRC,UAAU,UACVC,WAAW,UACXC,aAAa,UACbC,WAAW,UACXC,YAAY,UACZC,QAAQ,UACRC,QAAQ,UACRC,QAAQ,UACRC,MAAM,UACNC,YAAY,UACZC,aAAa,UACbC,UAAU,UACVC,eAAe,UACfC,oBAAoB,UACpBC,eAAe,UACfC,QAAQ,UACRC,aAAa,UACbC,UAAU,UACVC,UAAU,UACVC,SAAS,UACTC,UAAU,UACVC,KAAK,UACLC,KAAK,UACLC,MAAM,UACNC,KAAK,UACLC,KAAK,UACLC,MAAM,QACNC,MAAM,QACNC,MAAM,QACNC,QAAQ,UACRC,SAAS,UACTC,MAAM,UACNC,MAAM,UACNC,SAAS,UACTC,UAAU,UACVC,eAAe,UACfC,SAAS,UACTC,SAAS,UACTC,SAAS,UACTC,SAAS,UACTC,OAAO,UACPC,OAAO,UACPC,SAAS,UACTC,QAAQ,UACRC,QAAQ,UACRC,UAAU,UACVC,WAAW,UACXC,WAAW,UACXC,YAAY,UACZC,QAAQ,UACRC,QAAQ,UACRC,QAAQ,UACRC,QAAQ,UACRC,OAAO,UACPC,OAAO,UACPC,SAAS,UACTC,QAAQ,UACRC,OAAO,QACPC,KAAK,KACL3nE,QAAQ,UACR4nE,KAAK,UACLC,KAAK,UACLC,MAAM,UACNC,QAAQ,UACRC,QAAQ,UACRC,QAAQ,UACRC,QAAQ,UACRC,KAAK,UACLC,KAAK,UACLC,MAAM,UACNC,QAAQ,UACRC,KAAK,aACLC,KAAK,aACLC,QAAQ,UACRC,WAAW,UACXC,WAAW,UACXC,OAAO,UACPC,OAAO,UACPC,UAAU,UACVC,QAAQ,UACRC,aAAa,UACbC,UAAU,UACVC,YAAY,gBACZC,QAAQ,UACRC,WAAW,UACXC,OAAO,UACPC,QAAQ,UACRC,OAAO,QACPC,OAAO,QACPC,OAAO,UACPC,OAAO,UACPC,YAAY,UACZC,gBAAgB,UAChBC,YAAY,UACZC,OAAO,QACPC,QAAQ,UACRC,UAAU,UACVC,QAAQ,UACRC,MAAM,UACNC,MAAM,UACNC,KAAK,UACLC,QAAQ,UACRC,QAAQ,UACRC,MAAM,aACNC,MAAM,aACNC,SAAS,UACTC,MAAM,UACNC,QAAQ,UACRC,OAAO,UACPC,OAAO,UACPC,UAAU,UACVC,cAAc,UACdC,cAAc,UACdC,gBAAgB,UAChBC,WAAW,UACXC,eAAe,UACfC,iBAAiB,UACjBC,QAAQ,UACRC,MAAM,UACNC,UAAU,UACVC,WAAW,UACXC,SAAS,UACTC,OAAO,UACPC,SAAS,UACTC,UAAU,UACVC,MAAM,aACNC,MAAM,aACNC,MAAM,UACNC,MAAM,UACNC,OAAO,UACPC,OAAO,UACPC,QAAQ,UACRC,QAAQ,UACRC,OAAO,UACPC,kBAAkB,UAClBC,mBAAmB,UACnBC,QAAQ,QACRC,QAAQ,QACRC,MAAM,UACNC,MAAM,UACNC,MAAM,UACNC,UAAU,UACVC,OAAO,UACPC,OAAO,UACPC,QAAQ,UACRC,QAAQ,UACRC,OAAO,QACPC,OAAO,QACPC,KAAK,UACLC,KAAK,UACLC,OAAO,UACPC,QAAQ,UACRC,QAAQ,UACRC,OAAO,UACPC,QAAQ,UACRC,KAAK,aACLC,KAAK,aACLC,QAAQ,QACRC,QAAQ,QACRC,MAAM,UACNC,OAAO,UACPC,OAAO,UACPC,OAAO,UACPC,QAAQ,UACRC,UAAU,UACVC,QAAQ,UACRC,OAAO,UACPC,OAAO,UACPC,OAAO,UACPC,KAAK,QACLC,UAAU,KACVC,YAAY,UACZC,cAAc,UACdC,kBAAkB,UAClBC,OAAO,UACPC,WAAW,UACXC,OAAO,UACPC,OAAO,UACPC,MAAM,aACNC,MAAM,aACNC,SAAS,UACTC,SAAS,UACTC,SAAS,UACTC,YAAY,UACZC,kBAAkB,UAClBC,aAAa,UACbC,aAAa,UACbC,aAAa,UACbC,eAAe,UACfC,eAAe,UACfC,gBAAgB,UAChBC,OAAO,UACPC,gBAAgB,UAChBC,iBAAiB,UACjBC,MAAM,UACNC,MAAM,UACNC,OAAO,UACPC,SAAS,UACTC,SAAS,UACTC,OAAO,UACPC,YAAY,UACZC,YAAY,UACZC,QAAQ,UACRC,UAAU,UACVC,QAAQ,UACRC,OAAO,UACPC,OAAO,UACPC,OAAO,UACPC,MAAM,aACNC,MAAM,aACNC,OAAO,UACPC,QAAQ,UACRC,QAAQ,UACRC,MAAM,UACNC,OAAO,UACPC,OAAO,UACPC,MAAM,QACNC,MAAM,QACNC,SAAS,UACTC,QAAQ,UACRC,YAAY,UACZC,UAAU,UACVC,YAAY,UACZC,QAAQ,UACRC,OAAO,UACPC,WAAW,UACXC,MAAM,UACNC,MAAM,UACNC,QAAQ,UACRC,UAAU,UACVC,cAAc,gBACdC,eAAe,gBACfC,cAAc,gBACdC,eAAe,gBACfC,UAAU,UACVC,iBAAiB,UACjBC,kBAAkB,UAClBC,MAAM,UACNC,MAAM,UACNC,OAAO,UACPC,KAAK,UACLC,KAAK,UACLC,OAAO,UACPC,OAAO,UACPC,OAAO,UACPC,OAAO,UACPC,QAAQ,UACRC,KAAK,UACLC,KAAK,UACLC,QAAQ,UACRC,OAAO,UACPC,QAAQ,UACRC,QAAQ,UACRC,QAAQ,KACRC,MAAM,UACNC,MAAM,KACNC,aAAa,UACbC,cAAc,KACdC,mBAAmB,UACnBC,eAAe,UACfC,eAAe,UACfC,KAAK,aACLC,KAAK,aACLC,OAAO,UACPC,OAAO,gBACPC,OAAO,gBACPC,MAAM,aACNC,MAAM,aACNC,OAAO,UACPC,OAAO,UACPC,MAAM,aACNC,MAAM,aACNC,QAAQ,gBACRC,QAAQ,gBACRC,QAAQ,gBACRC,QAAQ,gBACRC,QAAQ,UACRC,SAAS,UACTC,OAAO,UACPC,OAAO,UACPC,QAAQ,UACRC,OAAO,UACPC,OAAO,UACPC,QAAQ,UACRC,QAAQ,UACRC,KAAK,aACLC,KAAK,aACLC,MAAM,aACNC,MAAM,aACNC,IAAI,UACJC,IAAI,UACJC,QAAQ,UACRC,MAAM,aACNC,MAAM,aACNC,MAAM,UACNC,OAAO,UACPC,MAAM,UACNC,OAAO,UACPC,KAAK,aACLC,KAAK,aACLC,OAAO,UACPC,OAAO,UACPC,IAAI,UACJC,IAAI,UACJC,OAAO,UACPC,OAAO,UACPC,MAAM,UACNC,MAAM,UACNC,OAAO,UACPC,MAAM,aACNC,MAAM,aACNC,QAAQ,UACRC,QAAQ,UACRC,OAAO,UACPC,OAAO,UACPC,MAAM,aACNC,MAAM,aACNC,QAAQ,UACRC,QAAQ,UACRC,OAAO,UACPC,MAAM,UACNC,QAAQ,UACRC,QAAQ,QACRC,QAAQ,QACRC,MAAM,UACNC,MAAM,UACNC,OAAO,UACPC,OAAO,UACPC,KAAK,UACLC,KAAK,UACLC,KAAK,QACLC,KAAK,aACLC,KAAK,aACLC,MAAM,UACNC,MAAM,UACNC,MAAM,aACNC,MAAM,aACNC,MAAM,aACNC,MAAM,aACNC,MAAM,UACNC,MAAM,UACNC,MAAM,UACNC,MAAM,QACNC,QAAQ,UACRC,QAAQ,UACRC,QAAQ,UACRC,QAAQ,UACRC,KAAK,UACLC,KAAK,UACLC,MAAM,UACNC,MAAM,UACNC,QAAQ,UACRC,gBAAgB,UAChBC,MAAM,UACNC,MAAM,UACNC,KAAK,UACLC,KAAK,aACLC,MAAM,UACNC,MAAM,UACNC,SAAS,UACTC,MAAM,UACNC,MAAM,aACNC,MAAM,aACNC,MAAM,aACNC,KAAK,UACLC,MAAM,SAAA,CAAA,GAOPt8E,GAAQkF,YAAYlF,GAAQmF;MAAAA,GAAAA,MAAAA,CAAAA,IAAAA,IAAAA,OAAAA;ACrnE5B,YAAIzC,KAAMD,GAAQ,IAAA;AAClBzC,QAAAA,GAAQ6C,oBAAoBH,GAAIG,mBAChC7C,GAAQoR,gBAAgB1O,GAAI0O,eAC5BpR,GAAQmD,YAAYV,GAApB,IAAA,EAAA;MAAA,GAAA,MAAA,CAAApC,IAAAC,IAAAmC,OAAA;ACHA,YAAItB,KAAYsB,GAAA,IAAA,EAAA,WAKZ85E,IAAgB,oJAChBC,IAAW,IAAIC,OAAO,eAAaF,EAAc76E,OAAOiR,MAAM,GAAA,EAAG,IAAG,wCAAA,GACpE+pE,IAAiB,IAAID,OAAO,MAAIF,EAAc76E,SAAO86E,EAAS96E,SAAO,UAAS66E,EAAc76E,SAAO86E,EAAS96E,SAAO,MAAA;AAsBvH,iBAASoB,EAAWuJ,IAAShJ,IAAAA;AAC5BjD,eAAKiM,UAAUA,IACfjM,KAAKiD,UAAUA,IACZiJ,MAAMC,qBAAmBD,MAAMC,kBAAkBnM,MAAM0C,CAAAA;QAC3D;AAIA,iBAASC,IAAAA;QAET;AAiLA,iBAAS45E,EAAYC,IAAEt8E,IAAAA;AAGtB,iBAFAA,GAAEoD,aAAak5E,GAAEl5E,YACjBpD,GAAEqD,eAAei5E,GAAEj5E,cACZrD;QACR;AAMA,iBAASu8E,EAAsBn7E,IAAOuC,IAAMuC,IAAGs2E,IAAaC,IAAej4E,IAAAA;AAO1E,mBAASk4E,GAAaC,IAAOn8E,IAAOo8E,IAAAA;AAC/B12E,YAAAA,GAAG22E,eAAer7E,eAAem7E,EAAAA,KACpCn4E,GAAa0E,WAAW,eAAeyzE,KAAQ,YAAA,GAEhDz2E,GAAG42E,SACFH,IAKAn8E,GAAMoC,QAAQ,aAAa,GAAA,EAAKA,QAAQ,YAAY65E,EAAAA,GACpDG,EAAAA;UAEF;AAKA,mBAJIG,IAEAjzE,KAAAA,EAAMnG,IACNq5E,KA7OO,OA8OA;AACV,gBAAItvE,KAAItM,GAAO67E,OAAOnzE,EAAAA;AACtB,oBAAO4D,IAAAA;cACP,KAAK;AACJ,oBAjPU,MAiPPsvE,GACFD,CAAAA,KAAW37E,GAAOiR,MAAM1O,IAAMmG,EAAAA,GAC9BkzE,KAjPO;qBAkPF;AAAA,sBAnPQ,MAmPLA,GAIR,OAAM,IAAIhxE,MAAM,qCAAA;AAHhBgxE,kBAAAA,KAnPO;gBAuPR;AACA;cACD,KAAK;cACL,KAAK;AACJ,oBA3PQ,MA2PLA,MA7PO,MA6POA,IACf;AAOD,sBArQS,MA+PNA,OACFx4E,GAAauE,QAAQ,gCAAA,GACrBg0E,KAAW37E,GAAOiR,MAAM1O,IAAMmG,EAAAA,IAE/BnG,KAAQmG,KAAE,GAAA,GACVA,KAAI1I,GAAO+N,QAAQzB,IAAE/J,EAAAA,KAChB,GAMJ,OAAM,IAAIqI,MAAM,6BAA4B0B,KAAE,SAAA;AAJ9CgvE,kBAAAA,GAAaK,IADbv8E,KAAQY,GAAOiR,MAAM1O,IAAOmG,EAAAA,GACEnG,KAAM,CAAA,GACpCq5E,KApQY;gBAyQd,OAAM;AAAA,sBA1QiB,KA0QdA,GAQR,OAAM,IAAIhxE,MAAM,gCAAA;AANhB0wE,kBAAAA,GAAaK,IADbv8E,KAAQY,GAAOiR,MAAM1O,IAAOmG,EAAAA,GACEnG,EAAAA,GAC9Ba,GAAauE,QAAQ,gBAAcg0E,KAAS,yBAAuBrvE,KAAE,KAAA,GACrE/J,KAAQmG,KAAE,GACVkzE,KA9Qa;gBAkRd;AACA;cACD,KAAK;AACJ,wBAAOA,IAAAA;kBACP,KA3RS;AA4RR92E,oBAAAA,GAAGg3E,WAAW97E,GAAOiR,MAAM1O,IAAMmG,EAAAA,CAAAA;kBAClC,KAxRc;kBAyRd,KAxRe;kBAyRf,KAxRe;AAyRdkzE,oBAAAA,KAzRc,GA0Rd92E,GAAGi3E,SAAAA;kBACJ,KA9RuB;kBA+RvB,KAlSU;AAmST;kBACA,KAnSa;AAoSZj3E,oBAAAA,GAAGi3E,SAAAA;AACJ;kBAED;AACC,0BAAM,IAAInxE,MAAM,mCAAA;gBAAA;AAEjB;cACD,KAAK;AAKJ,uBAJAxH,GAAaiB,MAAM,yBAAA,GA9SV,KA+SNu3E,MACF92E,GAAGg3E,WAAW97E,GAAOiR,MAAM1O,IAAMmG,EAAAA,CAAAA,GAE3BA;cACR,KAAK;AACJ,wBAAOkzE,IAAAA;kBACP,KArTS;AAsTR92E,oBAAAA,GAAGg3E,WAAW97E,GAAOiR,MAAM1O,IAAMmG,EAAAA,CAAAA;kBAClC,KAlTc;kBAmTd,KAlTe;kBAmTf,KAlTe;AAmTd;kBACD,KAvTuB;kBAwTvB,KA3TU;AA6Tc,6BADvBtJ,KAAQY,GAAOiR,MAAM1O,IAAMmG,EAAAA,GAClBuI,MAAAA,EAAO,MACfnM,GAAGi3E,SAAAA,MACH38E,KAAQA,GAAM6R,MAAM,GAAA,EAAG;kBAEzB,KAhUc;AAAA,0BAiUV2qE,OACFx8E,KAAQu8E,KAhUa,KAkUnBC,MACFx4E,GAAauE,QAAQ,gBAAcvI,KAAM,mBAAA,GACzCk8E,GAAaK,IAAUv8E,IAAOmD,EAAAA,MAE1B9C,GAAUN,OAAOi8E,GAAa,EAAA,CAAA,KAASh8E,GAAM48E,MAAM,kCAAA,KACtD54E,GAAauE,QAAQ,gBAAcvI,KAAM,uBAAqBA,KAAM,aAAA,GAErEk8E,GAAal8E,IAAOA,IAAOmD,EAAAA;AAE5B;kBACD,KA7UQ;AA8UP,0BAAM,IAAIqI,MAAM,0BAAA;gBAAA;AAGjB,uBAAOlC;cAER,KAAK;AACJ4D,gBAAAA,KAAI;cACL;AACC,oBAAGA,MAAI,IACN,SAAOsvE,IAAAA;kBACP,KA3VQ;AA4VP92E,oBAAAA,GAAGg3E,WAAW97E,GAAOiR,MAAM1O,IAAMmG,EAAAA,CAAAA,GACjCkzE,KAvVa;AAwVb;kBACD,KA9VS;AA+VRD,oBAAAA,KAAW37E,GAAOiR,MAAM1O,IAAMmG,EAAAA,GAC9BkzE,KA/VY;AAgWZ;kBACD,KA/VsB;AAgWrB,wBAAIx8E,KAAQY,GAAOiR,MAAM1O,IAAOmG,EAAAA;AAChCtF,oBAAAA,GAAauE,QAAQ,gBAAcvI,KAAM,oBAAA,GACzCk8E,GAAaK,IAAUv8E,IAAOmD,EAAAA;kBAC/B,KAlWa;AAmWZq5E,oBAAAA,KAlWa;gBAAA;oBA8Wd,SAAOA,IAAAA;kBAIP,KAtXa;AAuXG92E,oBAAAA,GAAGa,SACblG,GAAUN,OAAOi8E,GAAa,EAAA,CAAA,KAASO,GAASK,MAAM,kCAAA,KAC1D54E,GAAauE,QAAQ,gBAAcg0E,KAAS,uBAAqBA,KAAS,cAAA,GAE3EL,GAAaK,IAAUA,IAAUp5E,EAAAA,GACjCA,KAAQmG,IACRkzE,KA9XQ;AA+XR;kBACD,KA5Xa;AA6XZx4E,oBAAAA,GAAauE,QAAQ,iCAA+Bg0E,KAAS,KAAA;kBAC9D,KA7Xc;AA8XbC,oBAAAA,KAnYQ,GAoYRr5E,KAAQmG;AACR;kBACD,KApYO;AAqYNkzE,oBAAAA,KApYqB,GAqYrBr5E,KAAQmG;AACR;kBACD,KApYc;AAqYb,0BAAM,IAAIkC,MAAM,4DAAA;gBAAA;YAAA;AAKnBlC,YAAAA;UACD;QACD;AAIA,iBAAS9F,EAAckC,IAAG3B,IAAWi4E,IAAAA;AAKpC,mBAJIz1E,KAAUb,GAAGa,SACbs2E,KAAa,MAEbt7E,KAAImE,GAAGlE,QACLD,QAAI;AACT,gBAAIu7E,KAAIp3E,GAAGnE,EAAAA,GACPiE,KAAQs3E,GAAEt3E,OACVxF,KAAQ88E,GAAE98E;AAEd,iBADI+8E,KAAMv3E,GAAMmJ,QAAQ,GAAA,KACjB,EACN,KAAIjI,KAASo2E,GAAEp2E,SAASlB,GAAMqM,MAAM,GAAEkrE,EAAAA,GAClCx3E,KAAYC,GAAMqM,MAAMkrE,KAAI,CAAA,GAC5BC,KAAsB,YAAXt2E,MAAsBnB;gBAErCA,CAAAA,KAAYC,IACZkB,KAAS,MACTs2E,KAAqB,YAAVx3E,MAAqB;AAGjCs3E,YAAAA,GAAEv3E,YAAYA,IAAAA,UAEXy3E,OACe,QAAdH,OACFA,KAAa,CAAC,GAEdI,EAAMjB,IAAaA,KAAa,CAAC,CAAA,IAGlCA,GAAagB,EAAAA,IAAYH,GAAWG,EAAAA,IAAYh9E,IAChD88E,GAAEx8E,MAAMD,GAAUI,OAClBsD,GAAW0C,mBAAmBu2E,IAAUh9E,EAAAA;UAE1C;AAEA,eADIuB,KAAImE,GAAGlE,QACLD,OAAAA,EAEDmF,MADJo2E,KAAIp3E,GAAGnE,EAAAA,GACQmF,YAEA,UAAXA,OACFo2E,GAAEx8E,MAAMD,GAAUG,MACJ,YAAXkG,OACHo2E,GAAEx8E,MAAM07E,GAAat1E,MAAU,EAAA;AAMlC,cAAIq2E;AAAAA,WAAAA,KAAMx2E,GAAQoI,QAAQ,GAAA,KACnB,KACNjI,KAAShB,GAAGgB,SAASH,GAAQsL,MAAM,GAAEkrE,EAAAA,GACrCx3E,KAAYG,GAAGH,YAAYgB,GAAQsL,MAAMkrE,KAAI,CAAA,MAE7Cr2E,KAAS,MACTnB,KAAYG,GAAGH,YAAYgB;AAG5B,cAAI4K,KAAKzL,GAAGpF,MAAM07E,GAAat1E,MAAU,EAAA;AAIzC,cAHA3C,GAAWsB,aAAa8L,IAAG5L,IAAUgB,IAAQb,EAAAA,GAAAA,CAG1CA,GAAGi3E,OAaL,QAHAj3E,GAAGs2E,eAAeA,IAClBt2E,GAAGm3E,aAAaA,IAAAA;AAThB,cADA94E,GAAWsC,WAAW8K,IAAG5L,IAAUgB,EAAAA,GAChCs2E,GACF,MAAKn2E,MAAUm2E,GACVj9E,QAAOmB,UAAUC,eAAeC,KAAK47E,IAAYn2E,EAAAA,KACpD3C,GAAW4C,iBAAiBD,EAAAA;QAUjC;AACA,iBAASw2E,EAAwBt8E,IAAOu8E,IAAW52E,IAAQ01E,IAAel4E,IAAAA;AACzE,cAAG,yBAAyBI,KAAKoC,EAAAA,GAAS;AACzC,gBAAI62E,KAAcx8E,GAAO+N,QAAQ,OAAKpI,KAAQ,KAAI42E,EAAAA,GAC9CzmE,KAAO9V,GAAO6V,UAAU0mE,KAAW,GAAEC,EAAAA;AACzC,gBAAG,OAAOj5E,KAAKuS,EAAAA,EACd,QAAG,YAAYvS,KAAKoC,EAAAA,KAGlBxC,GAAWmD,WAAWwP,IAAK,GAAEA,GAAKlV,MAAAA,GAE3B47E,OAGR1mE,KAAOA,GAAKtU,QAAQ,YAAW65E,EAAAA,GAC/Bl4E,GAAWmD,WAAWwP,IAAK,GAAEA,GAAKlV,MAAAA,GAC3B47E;UAIV;AACA,iBAAOD,KAAW;QACnB;AACA,iBAASE,EAAcz8E,IAAOu8E,IAAW52E,IAAQ+2E,IAAAA;AAEhD,cAAIC,KAAMD,GAAS/2E,EAAAA;AASnB,iBARU,QAAPg3E,QAEFA,KAAO38E,GAAO48E,YAAY,OAAKj3E,KAAQ,GAAA,KAChC42E,OACNI,KAAM38E,GAAO48E,YAAY,OAAKj3E,EAAAA,IAE/B+2E,GAAS/2E,EAAAA,IAAUg3E,KAEbA,KAAIJ;QAEZ;AAEA,iBAASF,EAAOr8E,IAAQD,IAAAA;AACvB,mBAAS2R,MAAK1R,GACThB,QAAOmB,UAAUC,eAAeC,KAAKL,IAAQ0R,EAAAA,MAChD3R,GAAO2R,EAAAA,IAAK1R,GAAO0R,EAAAA;QAGtB;AAEA,iBAASmrE,EAAS78E,IAAOuC,IAAMY,IAAWC,IAAAA;AAEzC,cACK,QAFKpD,GAAO67E,OAAOt5E,KAAM,CAAA,EAG7B,QAAgC,QAA7BvC,GAAO67E,OAAOt5E,KAAQ,CAAA,KACpBu6E,KAAM98E,GAAO+N,QAAQ,OAAMxL,KAAM,CAAA,KAE9BA,MACNY,GAAW4D,QAAQ/G,IAAOuC,KAAM,GAAEu6E,KAAIv6E,KAAM,CAAA,GACrCu6E,KAAI,MAEX15E,GAAaiB,MAAM,kBAAA,GAAA,MACX;AAOV,cAA+B,YAA5BrE,GAAOwC,OAAOD,KAAM,GAAE,CAAA,GAAe;AACvC,gBAAIu6E,KAAM98E,GAAO+N,QAAQ,OAAMxL,KAAM,CAAA;AAIrC,mBAHAY,GAAW+D,WAAAA,GACX/D,GAAWmD,WAAWtG,IAAOuC,KAAM,GAAEu6E,KAAIv6E,KAAM,CAAA,GAC/CY,GAAWgE,SAAAA,GACJ21E,KAAI;UACZ;AAGA,cAAIC,KA8EN,SAAe/8E,IAAOuC,IAAAA;AACrB,gBAAIy5E,IACAlsE,KAAM,CAAA,GACNumD,KAAM;AAGV,iBAFAA,GAAIlqD,YAAY5J,IAChB8zD,GAAI2mB,KAAKh9E,EAAAA,GACHg8E,KAAQ3lB,GAAI2mB,KAAKh9E,EAAAA,IAEtB,KADA8P,GAAIY,KAAKsrE,EAAAA,GACNA,GAAM,CAAA,EAAG,QAAOlsE;UAErB,EAxFqB9P,IAAOuC,EAAAA,GACtByC,KAAM+3E,GAAOn8E;AACjB,cAAGoE,KAAI,KAAK,YAAYzB,KAAKw5E,GAAO,CAAA,EAAG,CAAA,CAAA,GAAI;AAC1C,gBAAIl2E,KAAOk2E,GAAO,CAAA,EAAG,CAAA,GACjB7rE,KAAAA,OACAC,KAAAA;AACDnM,YAAAA,KAAI,MACH,YAAYzB,KAAKw5E,GAAO,CAAA,EAAG,CAAA,CAAA,KAC7B7rE,KAAQ6rE,GAAO,CAAA,EAAG,CAAA,GAClB5rE,KAAQnM,KAAI,KAAK+3E,GAAO,CAAA,EAAG,CAAA,KACnB,YAAYx5E,KAAKw5E,GAAO,CAAA,EAAG,CAAA,CAAA,MACnC5rE,KAAQ4rE,GAAO,CAAA,EAAG,CAAA;AAGpB,gBAAIE,KAAYF,GAAO/3E,KAAI,CAAA;AAI3B,mBAHA7B,GAAWiE,SAASP,IAAMqK,IAAOC,EAAAA,GACjChO,GAAW+5E,OAAAA,GAEJD,GAAU9qE,QAAM8qE,GAAU,CAAA,EAAGr8E;UACrC;AAED,iBAAA;QACD;AAIA,iBAASu8E,EAAiBn9E,IAAOuC,IAAMY,IAAAA;AACtC,cAAI25E,KAAM98E,GAAO+N,QAAQ,MAAKxL,EAAAA;AAC9B,cAAGu6E,IAAI;AACN,gBAAId,KAAQh8E,GAAO6V,UAAUtT,IAAMu6E,EAAAA,EAAKd,MAAM,4BAAA;AAC9C,mBAAGA,MACQA,GAAM,CAAA,EAAGp7E,QACnBuC,GAAW6C,sBAAsBg2E,GAAM,CAAA,GAAIA,GAAM,CAAA,CAAA,GAC1Cc,KAAI,KAAA;UAIb;AACA,iBAAA;QACD;AAEA,iBAASM,IAAAA;AACR1+E,eAAK+8E,iBAAiB,CAAC;QACxB;AAnkBAr6E,UAAWjB,YAAY,IAAIyK,SAC3BxJ,EAAWjB,UAAU0G,OAAOzF,EAAWyF,MAMvCxF,EAAUlB,YAAY,EACrBiE,OAAM,SAASpE,IAAOqD,IAAaG,IAAAA;AAClC,cAAIL,KAAazE,KAAKyE;AACtBA,UAAAA,GAAWmB,cAAAA,GACX+3E,EAAMh5E,IAAcA,KAAe,CAAC,CAAA,GAMtC,SAAerD,IAAOq9E,IAAiB75E,IAAUL,IAAWC,IAAAA;AAc3D,qBAASi4E,GAAea,IAAAA;AACvB,kBAAIoB,KAAIpB,GAAEjrE,MAAM,GAAA,EAAG;AACnB,qBAAIjS,OAAOoB,eAAeC,KAAKmD,IAAW85E,EAAAA,IAClC95E,GAAU85E,EAAAA,IACO,QAAhBA,GAAEzB,OAAO,CAAA,IAjBnB,SAA2BnxE,IAAAA;AAG1B,oBAAIA,KAAO,OAAQ;AAElB,sBAAI6yE,KAAa,UADjB7yE,MAAQ,UAC2B,KAChC8yE,KAAa,SAAiB,OAAP9yE;AAE1B,yBAAO/H,OAAO86E,aAAaF,IAAYC,EAAAA;gBACxC;AACC,uBAAO76E,OAAO86E,aAAa/yE,EAAAA;cAE7B,EAM2BgzE,SAASJ,GAAE96E,OAAO,CAAA,EAAGhB,QAAQ,KAAI,IAAA,CAAA,CAAA,KAE1D4B,GAAaiB,MAAM,sBAAoB63E,EAAAA,GAChCA;YAET;AACA,qBAASyB,GAAWb,IAAAA;AACnB,kBAAGA,KAAIv6E,GAAM;AACZ,oBAAIq7E,KAAK59E,GAAO6V,UAAUtT,GAAMu6E,EAAAA,EAAKt7E,QAAQ,YAAW65E,EAAAA;AACxD15E,qBAASG,GAASS,CAAAA,GAClBY,GAAWmD,WAAWs3E,IAAG,GAAEd,KAAIv6E,CAAAA,GAC/BA,IAAQu6E;cACT;YACD;AACA,qBAASh7E,GAAS4G,IAAEm1E,IAAAA;AACnB,qBAAMn1E,MAAGo1E,MAAYD,KAAIE,EAAYf,KAAKh9E,EAAAA,KACzCg+E,KAAYH,GAAE1rE,OACd2rE,IAAUE,IAAYH,GAAE,CAAA,EAAGj9E,QAC3Be,EAAQK;AAGTL,gBAAQM,eAAeyG,KAAEs1E,IAAU;YACpC;AASA,qBARIA,IAAY,GACZF,IAAU,GACVC,IAAc,uBACdp8E,IAAUwB,GAAWxB,SAErBs8E,IAAa,CAAC,EAAC7C,cAAaiC,GAAAA,CAAAA,GAC5BX,IAAW,CAAC,GACZn6E,IAAQ,OACD;AACV,kBAAA;AACC,oBAAI27E,IAAWl+E,GAAO+N,QAAQ,KAAIxL,CAAAA;AAClC,oBAAG27E,IAAS,GAAE;AACb,sBAAA,CAAIl+E,GAAOwC,OAAOD,CAAAA,EAAOy5E,MAAM,OAAA,GAAS;AACvC,wBAAIh5E,IAAMG,GAAWH,KACd8S,KAAO9S,EAAI2D,eAAe3G,GAAOwC,OAAOD,CAAAA,CAAAA;AAC5CS,sBAAID,YAAY+S,EAAAA,GAChB3S,GAAWL,iBAAiBgT;kBAChC;AACA;gBACD;AAIA,wBAHGooE,IAAS37E,KACXo7E,GAAWO,CAAAA,GAELl+E,GAAO67E,OAAOqC,IAAS,CAAA,GAAA;kBAC9B,KAAK;AACJ,wBAAIpB,IAAM98E,GAAO+N,QAAQ,KAAImwE,IAAS,CAAA,GAClCv4E,KAAU3F,GAAO6V,UAAUqoE,IAAW,GAAGpB,CAAAA,EAAKt7E,QAAQ,gBAAgB,EAAA,GACtE28E,IAASF,EAAWG,IAAAA;AACrBtB,wBAAI,KAEAn3E,KAAU3F,GAAO6V,UAAUqoE,IAAS,CAAA,EAAG18E,QAAQ,WAAU,EAAA,GACzD4B,GAAaiB,MAAM,mBAAiBsB,KAAQ,sBAAoBw4E,EAAOx4E,OAAAA,GACvEm3E,IAAMoB,IAAS,IAAEv4E,GAAQ/E,UACjB+E,GAAQq2E,MAAM,KAAA,MACtBr2E,KAAUA,GAAQnE,QAAQ,WAAU,EAAA,GACpC4B,GAAaiB,MAAM,mBAAiBsB,KAAQ,qBAAA,GAC5Cm3E,IAAMoB,IAAS,IAAEv4E,GAAQ/E;AAEhC,wBAAIq7E,IAAakC,EAAOlC,YACpBoC,IAAWF,EAAOx4E,WAAWA;AAE3B,wBADkB04E,KAAYF,EAAOx4E,WAASw4E,EAAOx4E,QAAQ24E,YAAAA,KAAiB34E,GAAQ24E,YAAAA,GACjE;AAE1B,0BADMn7E,GAAWsC,WAAW04E,EAAOz+E,KAAIy+E,EAAOx5E,WAAUgB,EAAAA,GACrDs2E,EACF,UAASn2E,KAAUm2E,EACdj9E,QAAOmB,UAAUC,eAAeC,KAAK47E,GAAYn2E,CAAAA,KACpD3C,GAAW4C,iBAAiBD,CAAAA;AAI3Bu4E,2BACMj7E,GAAa0E,WAAW,mBAAiBnC,KAAQ,6CAA2Cw4E,EAAOx4E,OAAAA;oBAExG,MACCs4E,GAAWvtE,KAAKytE,CAAAA;AAGvBrB;AACA;kBAED,KAAK;AACJn7E,yBAASG,GAASo8E,CAAAA,GAClBpB,IAAMK,EAAiBn9E,IAAOk+E,GAAS/6E,EAAAA;AACvC;kBACD,KAAK;AACJxB,yBAASG,GAASo8E,CAAAA,GAClBpB,IAAMD,EAAS78E,IAAOk+E,GAAS/6E,IAAWC,EAAAA;AAC1C;kBACD;AACCzB,yBAASG,GAASo8E,CAAAA;AAClB,wBAAIp5E,KAAK,IAAIs4E,KACThC,IAAe6C,EAAWA,EAAWr9E,SAAO,CAAA,EAAGw6E,cAG/Cp2E,KADA83E,IAAM3B,EAAsBn7E,IAAOk+E,GAASp5E,IAAGs2E,GAAaC,IAAej4E,EAAAA,GACrE0B,GAAGlE;AASb,wBAAA,CANIkE,GAAGi3E,UAAUU,EAAcz8E,IAAO88E,GAAIh4E,GAAGa,SAAQ+2E,CAAAA,MACpD53E,GAAGi3E,SAAAA,MACCv4E,GAAUo2C,QACbx2C,GAAauE,QAAQ,wBAAA,IAGpBhG,KAAWqD,GAAI;AAGjB,+BAFIu5E,IAAWtD,EAAYt5E,GAAQ,CAAC,CAAA,GAE5BhB,IAAI,GAAEA,IAAEqE,GAAIrE,KAAI;AACvB,4BAAIu7E,IAAIp3E,GAAGnE,CAAAA;AACXmB,wBAAAA,GAASo6E,EAAEvmE,MAAAA,GACXumE,EAAEv6E,UAAUs5E,EAAYt5E,GAAQ,CAAC,CAAA;sBAClC;AACAwB,sBAAAA,GAAWxB,UAAU48E,GAClB37E,EAAckC,IAAG3B,IAAWi4E,CAAAA,KAC9B6C,EAAWvtE,KAAK5L,EAAAA,GAEjB3B,GAAWxB,UAAUA;oBACtB,MACIiB,GAAckC,IAAG3B,IAAWi4E,CAAAA,KAC9B6C,EAAWvtE,KAAK5L,EAAAA;AAIdrF,oBAAAA,GAAUN,OAAO2F,GAAGpF,GAAAA,KAAAA,CAASoF,GAAGi3E,SACnCe,IAAMR,EAAwBt8E,IAAO88E,GAAIh4E,GAAGa,SAAQ01E,IAAel4E,EAAAA,IAEnE25E;gBAAAA;cAGH,SAAOn+E,IAAAA;AACN,oBAAIA,cAAayC,EAChB,OAAMzC;AAEPyE,gBAAAA,GAAaiB,MAAM,0BAAwB1F,EAAAA,GAC3Cm+E,IAAAA;cACD;AACGA,kBAAIv6E,IACNA,IAAQu6E,IAGRa,GAAWa,KAAKC,IAAIP,GAAS37E,CAAAA,IAAO,CAAA;YAEtC;UACD,EAzKQvC,IAAOqD,IAAaG,IACxBL,IAAWzE,KAAK0E,YAAAA,GAClBD,GAAW2D,YAAAA;QACZ,EAAA,GAqjBDs2E,EAAkBj9E,YAAY,EAC7B27E,YAAW,SAASn2E,IAAAA;AACnB,cAAA,CAAIq1E,EAAez3E,KAAKoC,EAAAA,EACvB,OAAM,IAAIiF,MAAM,qBAAmBjF,EAAAA;AAEpCjH,eAAKiH,UAAUA;QAChB,GACA+1E,UAAS,SAAS92E,IAAOxF,IAAOuW,IAAAA;AAC/B,cAAA,CAAIqlE,EAAez3E,KAAKqB,EAAAA,EACvB,OAAM,IAAIgG,MAAM,uBAAqBhG,EAAAA;AAEtClG,eAAK+8E,eAAe72E,EAAAA,IAASlG,KAAKkC,QAClClC,KAAKA,KAAKkC,QAAAA,IAAY,EAACgE,OAAMA,IAAMxF,OAAMA,IAAMuW,QAAOA,GAAAA;QACvD,GACA/U,QAAO,GACP89E,cAAa,SAAS/9E,IAAAA;AAAG,iBAAOjC,KAAKiC,EAAAA,EAAGgE;QAAS,GACjDW,YAAW,SAAS3E,IAAAA;AAAG,iBAAOjC,KAAKiC,EAAAA,EAAGgB;QAAO,GAC7CyD,UAAS,SAASzE,IAAAA;AAAG,iBAAOjC,KAAKiC,EAAAA,EAAGiE;QAAK,GACzCK,QAAO,SAAStE,IAAAA;AAAG,iBAAOjC,KAAKiC,EAAAA,EAAGjB;QAAG,GACrCwF,UAAS,SAASvE,IAAAA;AAAG,iBAAOjC,KAAKiC,EAAAA,EAAGvB;QAAK,EAAA,GA2B1Cd,GAAQ+C,YAAYA,GACpB/C,GAAQ8C,aAAaA;MAAAA,GAAAA,MAAAA,CAAAA,IAAAA,IAAAA,OAAAA;AAAAA;AAAAA,eAAAA,eAAAA,IAAAA,cAAAA,EAAAA,OAAAA,KAAAA,CAAAA,GAAAA,GAAAA,+BAAAA;ACrpBrB,YAAA86E,KAAAn7E,GAAA,IAAA;AAAS,eAAA,eAAAnC,IAAA,gCAAA,EAAA,YAAA,MAAA,KAAA,WAAA;AAAA,iBAAAs9E,GAAAyC;QAA4B,EAAA,CAAA;MAAA,GAAA,MAAA,CAAAhgF,IAAAC,OAAA;AAAA;AAAA,eAAA,eAAAA,IAAA,cAAA,EAAA,OAAA,KAAA,CAAA,GAAAA,GAAA,+BAAA;QCArC,MAAa+/E,WAAqC/zE,MAAAA;UAChD,YAAYjF,IAAiBi5E,IAA+BC,IAA8BC,KAAa,WAAA;AACrGC,kBACE,GAAGp5E,EAAAA,kBAAyBm5E,EAAAA,IAAcF,EAAAA,4BAAiDC,EAAAA,EAAAA,GAE7FngF,KAAKmI,OAAO;UACd;QAAA;AANF,QAAAjI,GAAA,+BAAAmC;MAAA,GAAA,MAAA,SAAApC,IAAAC,IAAAmC,IAAA;AAAA;AAAA,YAAAm7E,KAAA,QAAA,KAAA,oBAAA,OAAA,SAAA,SAAAv9E,IAAAC,IAAAmC,IAAAm7E,IAAA;AAAA,qBAAAA,OAAAA,KAAAn7E;AAAA,cAAA2Q,KAAA,OAAA,yBAAA9S,IAAAmC,EAAA;AAAA,UAAA2Q,MAAA,EAAA,SAAAA,KAAA,CAAA9S,GAAA,aAAA8S,GAAA,YAAAA,GAAA,kBAAAA,KAAA,EAAA,YAAA,MAAA,KAAA,WAAA;AAAA,mBAAA9S,GAAAmC,EAAA;UAAA,EAAA,IAAA,OAAA,eAAApC,IAAAu9E,IAAAxqE,EAAA;QAAA,IAAA,SAAA/S,IAAAC,IAAAmC,IAAAm7E,IAAA;AAAA,qBAAAA,OAAAA,KAAAn7E,KAAApC,GAAAu9E,EAAA,IAAAt9E,GAAAmC,EAAA;QAAA,IAAA,IAAA,QAAA,KAAA,gBAAA,SAAApC,IAAAC,IAAA;AAAA,mBAAAmC,MAAApC,GAAA,eAAAoC,MAAA,OAAA,UAAA,eAAA,KAAAnC,IAAAmC,EAAA,KAAAm7E,GAAAt9E,IAAAD,IAAAoC,EAAA;QAAA;AAAA,eAAA,eAAAnC,IAAA,cAAA,EAAA,OAAA,KAAA,CAAA,GCAA,EAAAmC,GAAA,GAAA,GAAAnC,EAAA,GACA,EAAAmC,GAAA,IAAA,GAAAnC,EAAA,GACA,EAAAmC,GAAA,GAAA,GAAAnC,EAAA,GACA,EAAAmC,GAAA,IAAA,GAAAnC,EAAA;MAAA,GAAA,MAAA,CAAAD,IAAAC,OAAA;AAAA;AAAA,eAAA,eAAAA,IAAA,cAAA,EAAA,OAAA,KAAA,CAAA,GAAAA,GAAA,yBAAA;QCHA,MAAaogF,GAAAA;UAGX,YAAYC,IAAAA;AACVvgF,iBAAKwgF,cAAcD;UACrB;UAEA,OAAA,KAAYE,IAAeF,IAAsBG,KAA2B,IAAA;AAC1E,kBAAMC,IACJJ,GAAWr+E,SAAS,IAAIq+E,KAAAA,WAAaG,KAAiC,CAACA,EAAAA,IAAoB,CAAA;AAC7F,mBAAO,IAAIJ,GAAuBK,CAAAA,EAAqBC,MAAMH,EAAAA;UAC/D;UAEQ,MAAMA,IAAAA;AACZ,mBAAOA,GAAI72E,OAAO,CAACi3E,IAAWC,IAAYC,IAAcC,OAE/CH,KAAYC,MADDC,OAAiBC,GAAO9+E,SAAS,IAAI,KAAKlC,KAAKihF,KAAKF,EAAAA,IAErE,EAAA;UACL;UAEQ,KAAKttE,IAAAA;AACX,mBAAKzT,KAAKwgF,YAAY/sE,EAAAA,IACfzT,KAAKwgF,YAAY/sE,EAAAA,IADazT,KAAKwgF,YAAYxgF,KAAKwgF,YAAYt+E,SAAS,CAAA;UAElF;QAAA;AAvBF,QAAAhC,GAAA,yBAAAmC;MAAA,GAAA,KAAA,CAAApC,IAAAC,IAAAmC,OAAA;AAAA;AAAA,eAAA,eAAAnC,IAAA,cAAA,EAAA,OAAA,KAAA,CAAA,GAAAA,GAAA,gCAAA;ACEA,cAAAs9E,KAAAn7E,GAAA,IAAA;AAEa,QAAAnC,GAAAghF,gCAAiCC,CAAAA,OAC5C,IAAI3D,GAAA4D,qCAAqCD,EAAAA,EAAeE,iBAAAA;MAAAA,GAAAA,MAAAA,CAAAA,IAAAA,OAAAA;AAAAA;AAAAA,eAAAA,eAAAA,IAAAA,cAAAA,EAAAA,OAAAA,KAAAA,CAAAA,GAAAA,GAAAA,uBAAAA,QCL7CnhF,GAAAohF,uBAAwBC,CAAAA,OAC5BA,GAAIz+E,QAAQ,QAAQ,GAAA;MAAA,GAAA,MAAA,CAAA7C,IAAAC,IAAAmC,OAAA;AAAA;AAAA,eAAA,eAAAnC,IAAA,cAAA,EAAA,OAAA,KAAA,CAAA,GAAAA,GAAA,iBAAA;ACD7B,cAAAs9E,KAAAn7E,GAAA,IAAA;AAEA,QAAAnC,GAAA,iBAAA,MAAA;UAAA,cAAA;AACY,iBAAAshF,QAAQ,KACR,KAAAC,SAAS;UAKrB;UAHE,KAAKF,IAAAA;AACH,mBAAO,IAAI/D,GAAAkE,QAAQ1hF,KAAKwhF,OAAOxhF,KAAKyhF,MAAAA,EAAQE,KAAKJ,EAAAA;UACnD;QAAA;MAAA,GAAA,MAAA,CAAAthF,IAAAC,IAAAmC,OAAA;AAAA;AAAA,eAAA,eAAAnC,IAAA,cAAA,EAAA,OAAA,KAAA,CAAA,GAAAA,GAAA,iBAAA;ACRF,cAAAs9E,KAAAn7E,GAAA,IAAA;AAEA,QAAAnC,GAAA,iBAAA,MAAA;UAIE,YAAY0hF,IAAcC,IAAAA;AACxB7hF,iBAAKwhF,QAAQ,WAAWI,IACxB5hF,KAAKyhF,SAAS,YAAYI;UAC5B;UAEA,KAAKN,IAAAA;AACH,mBAAO,IAAI/D,GAAAkE,QAAQ1hF,KAAKwhF,OAAOxhF,KAAKyhF,MAAAA,EAAQE,KAAKJ,EAAAA;UACnD;QAAA;MAAA,GAAA,KAAA,CAAAthF,IAAAC,IAAAmC,OAAA;AAAA;AAAA,eAAA,eAAAnC,IAAA,cAAA,EAAA,OAAA,KAAA,CAAA,GAAAA,GAAA,iBAAAA,GAAA,qBAAAA,GAAA,iBAAA;ACbF,YAAAs9E,KAAAn7E,GAAA,IAAA;AAAS,eAAA,eAAAnC,IAAA,kBAAA,EAAA,YAAA,MAAA,KAAA,WAAA;AAAA,iBAAAs9E,GAAAsE;QAAc,EAAA,CAAA;AACvB,YAAA,IAAAz/E,GAAA,IAAA;AAAS,eAAA,eAAAnC,IAAA,sBAAA,EAAA,YAAA,MAAA,KAAA,WAAA;AAAA,iBAAA,EAAA6hF;QAAkB,EAAA,CAAA;AAC3B,YAAA,IAAA1/E,GAAA,IAAA;AAAS,eAAA,eAAAnC,IAAA,kBAAA,EAAA,YAAA,MAAA,KAAA,WAAA;AAAA,iBAAA,EAAA8hF;QAAc,EAAA,CAAA;MAAA,GAAA,MAAA,CAAA/hF,IAAAC,IAAAmC,OAAA;AAAA;AAAA,eAAA,eAAAnC,IAAA,cAAA,EAAA,OAAA,KAAA,CAAA,GAAAA,GAAA,qBAAA;ACFvB,cAAAs9E,KAAAn7E,GAAA,IAAA;AAEA,QAAAnC,GAAA,qBAAA,MAAA;UAAA,cAAA;AACY,iBAAAshF,QAAQ,WACR,KAAAC,SAAS;UAUrB;UARE,KAAKF,IAAAA;AACH,mBAAO,IAAI/D,GAAAkE,QAAQ1hF,KAAKwhF,OAAOxhF,KAAKyhF,MAAAA,EAAQE,KAAKJ,EAAAA;UACnD;UAEA,sBAAsBA,IAAAA;AACpB,mBAAIA,GAAIr/E,UAAU,IAAUq/E,KACrBvhF,KAAK2hF,KAAKJ,EAAAA;UACnB;QAAA;MAAA,GAAA,MAAA,CAAAthF,IAAAC,OAAA;AAAA;AAAA,eAAA,eAAAA,IAAA,cAAA,EAAA,OAAA,KAAA,CAAA,GAAAA,GAAA,UAAA,QCbFA,GAAA,UAAA,MAAA;UAIE,YAAY0hF,IAAcC,IAAAA;AACxB7hF,iBAAKwhF,QAAQI,IACb5hF,KAAKyhF,SAASI;UAChB;UAEA,KAAKN,IAAAA;AACH,mBAAOvhF,KAAKwhF,QAAQD,KAAMvhF,KAAKyhF;UACjC;QAAA;MAAA,GAAA,MAAA,CAAAxhF,IAAAC,OAAA;AAAA;AAAA,eAAA,eAAAA,IAAA,cAAA,EAAA,OAAA,KAAA,CAAA,GAAAA,GAAA,oBAAA,QCJFA,GAAA,oBAAA,MAAA;UAAA,cAAA;AACW,iBAAAiI,OAAO,QACP,KAAAzH,QAAQ,IACR,KAAAuhF,WAAW,CAAA,GACpB,KAAAhwE,aAAa,CAAC;UAChB;QAAA;MAAA,GAAA,MAAA,CAAAhS,IAAAC,IAAAmC,OAAA;AAAA;AAAA,eAAA,eAAAnC,IAAA,cAAA,EAAA,OAAA,KAAA,CAAA,GAAAA,GAAA,wBAAA;ACVA,cAAAs9E,KAAAn7E,GAAA,IAAA;AAEA,QAAAnC,GAAA,wBAAA,MAAA;UAGE,YAAYgiF,IAAAA;AACVliF,iBAAKmiF,iBAAiBD;UACxB;UAEA,UAAAE;AACE,mBAAOpiF,KAAKmiF,eAAeF,SACxBrtE,IAAKpG,CAAAA,QAAU,GAAAgvE,GAAA0D,+BAA8B1yE,EAAAA,CAAAA,EAC7CoG,IAAKytE,CAAAA,OAAcA,GAAUD,QAAAA,CAAAA,EAC7BzwE,KAAK,GAAA;UACV;QAAA;MAAA,GAAA,MAAA,CAAA1R,IAAAC,IAAAmC,OAAA;AAAA;AAAA,eAAA,eAAAnC,IAAA,cAAA,EAAA,OAAA,KAAA,CAAA,GAAAA,GAAA,mBAAA;ACdF,cAAAs9E,KAAAn7E,GAAA,GAAA,GACA,IAAAA,GAAA,IAAA,GACA,IAAAA,GAAA,GAAA;AAEA,QAAAnC,GAAA,mBAAA,MAAA;UAGE,YAAYgiF,IAAAA;AACVliF,iBAAKmiF,iBAAiBD;UACxB;UAEA,UAAAE;AACE,kBAAA,EAAM,MAAEj6E,IAAI,UAAE85E,GAAAA,IAAajiF,KAAKmiF,gBAC1BG,KAAiBL,GAAS//E;AAEhC,gBAAuB,MAAnBogF,GAAsB,OAAM,IAAI,EAAArC,6BAA6B93E,IAAM,GAAGm6E,EAAAA;AAE1E,kBAAMC,MAAU,GAAA/E,GAAA0D,+BAA8Be,GAAS,CAAA,CAAA,EAAIG,QAAAA,GACrDI,MAAS,GAAAhF,GAAA0D,+BAA8Be,GAAS,CAAA,CAAA,EAAIG,QAAAA;AAE1D,mBAAOpiF,KAAKyiF,cAAcF,IAASC,EAAAA;UACrC;UAEQ,cAAcD,IAAiBC,IAAAA;AACrC,kBAAME,KAAO1iF,KAAKmiF,eAAeh6E,KAAKm1E,MAAM,OAAA,IAAWqF,EAASC,QAAQD,EAASE;AACjF,mBAAO,IAAIC,EAAgBJ,EAAAA,EAAM76E,MAAM06E,IAASC,EAAAA;UAClD;QAAA;QAGF,MAAMM,EAAAA;UAGJ,YAAYJ,IAAAA;AACV1iF,iBAAK+iF,QAAQL;UACf;UAEA,MAAMH,IAAiBC,IAAAA;AACrB,mBAAO,EAAAQ,aAAaC,SAAST,EAAAA,IAAU,GAAGA,EAAAA,IAAUD,EAAAA,MAAa,GAAGviF,KAAKkjF,eAAAA,IAAmBV,EAAAA,KAAWD,EAAAA;UACzG;UAEA,IAAA,kBAAYW;AACV,mBAAIljF,KAAK+iF,UAAUJ,EAASC,QAAc,eACnC;UACT;QAAA;AAGF,YAAKD;AAAAA,SAAL,SAAKA,IAAAA;AACH,UAAA1iF,GAAAA,GAAA,QAAA,CAAA,IAAA,SACAA,GAAAA,GAAA,OAAA,CAAA,IAAA;QACD,EAHI0iF,MAAAA,IAAQ,CAAA,EAAA;MAAA,GAAA,MAAA,CAAA1iF,IAAAC,IAAAmC,OAAA;AAAA;AAAA,eAAA,eAAAnC,IAAA,cAAA,EAAA,OAAA,KAAA,CAAA,GAAAA,GAAA,OAAAA,GAAA,SAAAA,GAAA,OAAAA,GAAA,mBAAAA,GAAA,wBAAAA,GAAA,MAAAA,GAAA,SAAAA,GAAA,aAAAA,GAAA,QAAAA,GAAA,gBAAAA,GAAA,UAAAA,GAAA,OAAAA,GAAA,OAAAA,GAAA,WAAAA,GAAA,SAAAA,GAAA,WAAAA,GAAA,UAAAA,GAAA,QAAAA,GAAA,QAAAA,GAAA,UAAAA,GAAA,QAAAA,GAAA,KAAAA,GAAA,KAAAA,GAAA,KAAAA,GAAA,OAAA;AChDb,YAAAs9E,KAAAn7E,GAAA,GAAA;AAAS,eAAA,eAAAnC,IAAA,QAAA,EAAA,YAAA,MAAA,KAAA,WAAA;AAAA,iBAAAs9E,GAAAsC;QAAI,EAAA,CAAA;AACb,YAAA,IAAAz9E,GAAA,IAAA;AAAS,eAAA,eAAAnC,IAAA,MAAA,EAAA,YAAA,MAAA,KAAA,WAAA;AAAA,iBAAA,EAAAijF;QAAE,EAAA,CAAA;AACX,YAAA,IAAA9gF,GAAA,IAAA;AAAS,eAAA,eAAAnC,IAAA,MAAA,EAAA,YAAA,MAAA,KAAA,WAAA;AAAA,iBAAA,EAAAkjF;QAAE,EAAA,CAAA;AACX,YAAA,IAAA/gF,GAAA,IAAA;AAAS,eAAA,eAAAnC,IAAA,MAAA,EAAA,YAAA,MAAA,KAAA,WAAA;AAAA,iBAAA,EAAAmjF;QAAE,EAAA,CAAA;AACX,YAAA,IAAAhhF,GAAA,IAAA;AAAS,eAAA,eAAAnC,IAAA,SAAA,EAAA,YAAA,MAAA,KAAA,WAAA;AAAA,iBAAA,EAAAojF;QAAK,EAAA,CAAA;AACd,YAAA,IAAAjhF,GAAA,IAAA;AAAS,eAAA,eAAAnC,IAAA,WAAA,EAAA,YAAA,MAAA,KAAA,WAAA;AAAA,iBAAA,EAAAqjF;QAAO,EAAA,CAAA;AAChB,YAAA,IAAAlhF,GAAA,IAAA;AAAS,eAAA,eAAAnC,IAAA,SAAA,EAAA,YAAA,MAAA,KAAA,WAAA;AAAA,iBAAA,EAAAsjF;QAAK,EAAA,CAAA;AACd,YAAA,IAAAnhF,GAAA,IAAA;AAAS,eAAA,eAAAnC,IAAA,SAAA,EAAA,YAAA,MAAA,KAAA,WAAA;AAAA,iBAAA,EAAAujF;QAAK,EAAA,CAAA;AACd,YAAA,IAAAphF,GAAA,IAAA;AAAS,eAAA,eAAAnC,IAAA,WAAA,EAAA,YAAA,MAAA,KAAA,WAAA;AAAA,iBAAA,EAAAwjF;QAAO,EAAA,CAAA;AAChB,YAAA,IAAArhF,GAAA,IAAA;AAAS,eAAA,eAAAnC,IAAA,YAAA,EAAA,YAAA,MAAA,KAAA,WAAA;AAAA,iBAAA,EAAAyjF;QAAQ,EAAA,CAAA;AACjB,YAAA,IAAAthF,GAAA,IAAA;AAAS,eAAA,eAAAnC,IAAA,UAAA,EAAA,YAAA,MAAA,KAAA,WAAA;AAAA,iBAAA,EAAA0jF;QAAM,EAAA,CAAA;AACf,YAAA,IAAAvhF,GAAA,IAAA;AAAS,eAAA,eAAAnC,IAAA,YAAA,EAAA,YAAA,MAAA,KAAA,WAAA;AAAA,iBAAA,EAAA2jF;QAAQ,EAAA,CAAA;AACjB,YAAA,IAAAxhF,GAAA,IAAA;AAAS,eAAA,eAAAnC,IAAA,QAAA,EAAA,YAAA,MAAA,KAAA,WAAA;AAAA,iBAAA,EAAA4jF;QAAI,EAAA,CAAA;AACb,YAAA,IAAAzhF,GAAA,IAAA;AAAS,eAAA,eAAAnC,IAAA,QAAA,EAAA,YAAA,MAAA,KAAA,WAAA;AAAA,iBAAA,EAAA6jF;QAAI,EAAA,CAAA;AACb,YAAA,IAAA1hF,GAAA,IAAA;AAAS,eAAA,eAAAnC,IAAA,WAAA,EAAA,YAAA,MAAA,KAAA,WAAA;AAAA,iBAAA,EAAA8jF;QAAO,EAAA,CAAA;AAChB,YAAA,IAAA3hF,GAAA,IAAA;AAAS,eAAA,eAAAnC,IAAA,iBAAA,EAAA,YAAA,MAAA,KAAA,WAAA;AAAA,iBAAA,EAAA+jF;QAAa,EAAA,CAAA;AACtB,YAAA,IAAA5hF,GAAA,IAAA;AAAS,eAAA,eAAAnC,IAAA,SAAA,EAAA,YAAA,MAAA,KAAA,WAAA;AAAA,iBAAA,EAAAgkF;QAAK,EAAA,CAAA;AACd,YAAA,IAAA7hF,GAAA,IAAA;AAAS,eAAA,eAAAnC,IAAA,cAAA,EAAA,YAAA,MAAA,KAAA,WAAA;AAAA,iBAAA,EAAAikF;QAAU,EAAA,CAAA;AACnB,YAAA,IAAA9hF,GAAA,IAAA;AAAS,eAAA,eAAAnC,IAAA,UAAA,EAAA,YAAA,MAAA,KAAA,WAAA;AAAA,iBAAA,EAAAkkF;QAAM,EAAA,CAAA;AACf,YAAA,IAAA/hF,GAAA,IAAA;AAAS,eAAA,eAAAnC,IAAA,OAAA,EAAA,YAAA,MAAA,KAAA,WAAA;AAAA,iBAAA,EAAAmkF;QAAG,EAAA,CAAA;AACZ,YAAA,IAAAhiF,GAAA,IAAA;AAAS,eAAA,eAAAnC,IAAA,yBAAA,EAAA,YAAA,MAAA,KAAA,WAAA;AAAA,iBAAA,EAAAokF;QAAqB,EAAA,CAAA;AAC9B,YAAA,IAAAjiF,GAAA,IAAA;AAAS,eAAA,eAAAnC,IAAA,oBAAA,EAAA,YAAA,MAAA,KAAA,WAAA;AAAA,iBAAA,EAAAqkF;QAAgB,EAAA,CAAA;AACzB,YAAA,IAAAliF,GAAA,IAAA;AAAS,eAAA,eAAAnC,IAAA,QAAA,EAAA,YAAA,MAAA,KAAA,WAAA;AAAA,iBAAA,EAAAskF;QAAI,EAAA,CAAA;AACb,YAAA,IAAAniF,GAAA,IAAA;AAAS,eAAA,eAAAnC,IAAA,UAAA,EAAA,YAAA,MAAA,KAAA,WAAA;AAAA,iBAAA,EAAAukF;QAAM,EAAA,CAAA;AACf,YAAAC,KAAAriF,GAAA,IAAA;AAAS,eAAA,eAAAnC,IAAA,QAAA,EAAA,YAAA,MAAA,KAAA,WAAA;AAAA,iBAAAwkF,GAAAC;QAAI,EAAA,CAAA;MAAA,GAAA,MAAA,CAAA1kF,IAAAC,IAAAmC,OAAA;AAAA;AAAA,eAAA,eAAAnC,IAAA,cAAA,EAAA,OAAA,KAAA,CAAA,GAAAA,GAAA,UAAA;ACtBb,cAAAs9E,KAAAn7E,GAAA,GAAA;AAEA,QAAAnC,GAAA,UAAA,MAAA;UAGE,YAAYgiF,IAAAA;AACVliF,iBAAKmiF,iBAAiBD;UACxB;UAEA,UAAAE;AACE,kBAAA,EAAM,UAAEH,GAAAA,IAAajiF,KAAKmiF;AAE1B,mBAAIniF,KAAK4kF,UAAAA,IACA3C,GACJrtE,IAAKpG,CAAAA,QAAU,GAAAgvE,GAAA0D,+BAA8B1yE,EAAAA,CAAAA,EAC7CoG,IAAKytE,CAAAA,OAAcA,GAAUD,QAAAA,CAAAA,EAC7BzwE,KAAK,oBAAA,KAEH,GAAA6rE,GAAA0D,+BAA8Be,GAAS,CAAA,CAAA,EAAIG,QAAAA;UACpD;UAEQ,YAAAwC;AACN,kBAAA,EAAM,YAAEC,GAAAA,IAAe7kF,KAAKmiF,eAAelwE;AAC3C,mBAAsB,aAAf4yE,MAAAA,CAA4BA;UACrC;QAAA;MAAA,GAAA,KAAA,CAAA5kF,IAAAC,IAAAmC,OAAA;AAAA;AAAA,eAAA,eAAAnC,IAAA,cAAA,EAAA,OAAA,KAAA,CAAA,GAAAA,GAAA,OAAA;ACxBF,cAAAs9E,KAAAn7E,GAAA,GAAA,GACA,IAAAA,GAAA,IAAA;AAEA,QAAAnC,GAAA,OAAA,MAAA;UAGE,YAAYgiF,IAAAA;AACVliF,iBAAKmiF,iBAAiBD;UACxB;UAEA,UAAAE;AACE,kBAAM0C,KAAoB9kF,KAAKmiF,eAAeF,SAC3CrtE,IAAKpG,CAAAA,QAAU,GAAAgvE,GAAA0D,+BAA8B1yE,EAAAA,CAAAA,EAC7CoG,IAAKytE,CAAAA,OAAcA,GAAUD,QAAAA,CAAAA,EAC7BzwE,KAAK,GAAA;AAER,oBAAO,GAAA,EAAA2vE,sBAAqBwD,EAAAA;UAC9B;QAAA;MAAA,GAAA,MAAA,CAAA7kF,IAAAC,IAAAmC,OAAA;AAAA;AAAA,eAAA,eAAAnC,IAAA,cAAA,EAAA,OAAA,KAAA,CAAA,GAAAA,GAAA,WAAA;ACjBF,cAAAs9E,KAAAn7E,GAAA,GAAA;AAEA,QAAAnC,GAAA,WAAA,MAAA;UAGE,YAAYgiF,IAAAA;AACVliF,iBAAKmiF,iBAAiBD;UACxB;UAEA,UAAAE;AACE,kBAAM2C,KAAsB/kF,KAAKmiF,eAAeF,SAC7CrtE,IAAKpG,CAAAA,QAAU,GAAAgvE,GAAA0D,+BAA8B1yE,EAAAA,CAAAA,EAC7CoG,IAAKytE,CAAAA,OAAcA,GAAUD,QAAAA,CAAAA,EAC7BzwE,KAAK,GAAA;AAER,mBAAuB,gBAAnB3R,KAAKglF,YAAkC,qBAAqBD,EAAAA,cACzC,cAAnB/kF,KAAKglF,YAAgC,UAAUD,EAAAA,MAC/C,CAAC,OAAO,cAAc,QAAA,EAAU9B,SAASjjF,KAAKglF,SAAAA,IAAmB,WAAWD,EAAAA,MACzD,WAAnB/kF,KAAKglF,YAA6B,UAAUD,EAAAA,KACzB,YAAnB/kF,KAAKglF,YAA8B,GAAGD,EAAAA,aACnB,UAAnB/kF,KAAKglF,YAA4B,cAAcD,EAAAA,MAC5B,aAAnB/kF,KAAKglF,YAA+B,eAAeD,EAAAA,MAChC,uBAAnB/kF,KAAKglF,YAAyC,YAAYD,EAAAA,MACvC,yBAAnB/kF,KAAKglF,YAA2C,aAAaD,EAAAA,MAC1C,sBAAnB/kF,KAAKglF,YAAwC,gBAAgBD,EAAAA,MAC7D,CAAC,kBAAkB,kBAAA,EAAoB9B,SAASjjF,KAAKglF,SAAAA,IAAmB,aAAaD,EAAAA,MAClE,cAAnB/kF,KAAKglF,YAAgC,eAAeD,EAAAA,cACjC,kBAAnB/kF,KAAKglF,YAAoC,wBAAwBD,EAAAA,OAE9D,6BAA6BA,EAAAA;UACtC;UAEA,IAAA,YAAYC;AACV,mBAAOhlF,KAAKmiF,eAAelwE,WAAWgzE,YAAY;UACpD;QAAA;MAAA,GAAA,MAAA,CAAAhlF,IAAAC,IAAAmC,OAAA;AAAA;AAAA,eAAA,eAAAnC,IAAA,cAAA,EAAA,OAAA,KAAA,CAAA,GAAAA,GAAA,SAAA;AClCF,cAAAs9E,KAAAn7E,GAAA,GAAA;AAEA,QAAAnC,GAAA,SAAA,MAAA;UAGE,YAAYgiF,IAAAA;AACVliF,iBAAKmiF,iBAAiBD;UACxB;UAEA,UAAAE;AAME,mBAAO,gBALqBpiF,KAAKmiF,eAAeF,SAC7CrtE,IAAKpG,CAAAA,QAAU,GAAAgvE,GAAA0D,+BAA8B1yE,EAAAA,CAAAA,EAC7CoG,IAAKytE,CAAAA,OAAcA,GAAUD,QAAAA,CAAAA,EAC7BzwE,KAAK,GAAA,CAAA;UAGV;QAAA;MAAA,GAAA,MAAA,CAAA1R,IAAAC,IAAAmC,OAAA;AAAA;AAAA,eAAA,eAAAnC,IAAA,cAAA,EAAA,OAAA,KAAA,CAAA,GAAAA,GAAA,UAAA;AChBF,cAAAs9E,KAAAn7E,GAAA,GAAA,GACA,IAAAA,GAAA,IAAA;AAEA,QAAAnC,GAAA,UAAA,MAAA;UAKE,YAAYglF,IAAAA;AACVllF,iBAAKmiF,iBAAiB+C,IACtBllF,KAAK4hF,OAAO5hF,KAAKmiF,eAAelwE,WAAW2vE,QAAQ,IACnD5hF,KAAK6hF,QAAQ7hF,KAAKmiF,eAAelwE,WAAW4vE,SAAS;UACvD;UAEA,UAAAO;AACE,kBAAM+C,KAAgBnlF,KAAKmiF,eAAeF,SACvCrtE,IAAKpG,CAAAA,QAAU,GAAAgvE,GAAA0D,+BAA8B1yE,EAAAA,CAAAA,EAC7CoG,IAAKytE,CAAAA,OAAcA,GAAUD,QAAAA,CAAAA;AAEhC,gBAAIpiF,KAAKolF,uBAAuBplF,KAAKmiF,eAAeF,UAAU,QAAA,EAC5D,QAAO,IAAIoD,EAAOrlF,KAAK4hF,MAAM5hF,KAAK6hF,KAAAA,EAAOh6E,MAAMs9E,EAAAA;AAEjD,kBAAMG,KAAiBtlF,KAAKmiF,eAAelwE,WAAWsuE,YAChDgF,KAAAA,WAAyBD,IACzBE,KAAkBF,KAAiBtjF,MAAMyjF,KAAKH,EAAAA,IAAkB,CAAA,GAGhE5E,KAAoB6E,KAA+B,KAAN;AACnD,mBAAO,IAAIG,EAAO1lF,KAAK4hF,MAAM5hF,KAAK6hF,OAAO2D,IAAiB9E,EAAAA,EAAkB74E,MAAMs9E,EAAAA;UACpF;UAEQ,uBAAuBQ,IAAiCC,IAAAA;AAC9D,mBAAOD,GAAeE,KACnBr3E,CAAAA,OAAUA,GAAMrG,SAASy9E,MAAe5lF,KAAKolF,uBAAuB52E,GAAMyzE,UAAU2D,EAAAA,CAAAA;UAEzF;QAAA;QAGF,MAAMF,EAAAA;UAIJ,YACE9D,IACAC,IACiBtB,IACAG,IAAAA;AADA,iBAAAH,aAAAA,IACA,KAAAG,mBAAAA,IAEjB1gF,KAAK4hF,OAAOA,MAAQ,KACpB5hF,KAAK6hF,QAAQA,MAAS;UACxB;UAEA,MAAMiE,IAAAA;AACJ,kBAAMC,KAAwB,EAAAzF,uBAAuB3uE,KAAKm0E,IAAe9lF,KAAKugF,YAAYvgF,KAAK0gF,gBAAAA;AAC/F,mBAAO,IAAI,EAAAsB,eAAehiF,KAAK4hF,MAAM5hF,KAAK6hF,KAAAA,EAAOF,KAAKoE,EAAAA;UACxD;QAAA;QAGF,MAAMV,EAAAA;UAIJ,YAAYzD,IAAcC,IAAAA;AAFT,iBAAAmE,kBAAkB,UAGjChmF,KAAKugF,aAAa,IAAI0F,EAAWrE,IAAMC,EAAAA;UACzC;UAEA,MAAMiE,IAAAA;AACJ,kBAAMI,KAAUlmF,KAAKmmF,UACfC,KAAS,WAAWF,EAAAA;EAAaJ,GAAcn0E,KAAK,EAAA,CAAA;QAAcu0E,EAAAA;AAExE,mBAAOA,OAAYlmF,KAAKgmF,kBAAkBhmF,KAAKugF,WAAWoB,KAAKyE,EAAAA,IAAUA;UAC3E;UAEA,IAAA,WAAYD;AACV,mBAAInmF,KAAKugF,WAAW8F,eAAAA,IAAyB,YACzCrmF,KAAKugF,WAAW+F,kBAAAA,IAA4B,YAC5CtmF,KAAKugF,WAAWgG,YAAAA,IAAsB,YACtCvmF,KAAKugF,WAAWiG,WAAAA,IAAqB,YACrCxmF,KAAKugF,WAAWkG,aAAAA,IAAuB,YACvCzmF,KAAKugF,WAAWmG,YAAAA,IAAsB1mF,KAAKgmF,kBACxC;UACT;QAAA;QAGF,MAAMC,EAAAA;UACJ,YACmBrE,IACAC,IAAAA;AADA,iBAAAD,OAAAA,IACA,KAAAC,QAAAA;UAChB;UAEH,KAAKN,IAAAA;AACH,mBAAO,IAAI,EAAAS,eAAehiF,KAAK4hF,MAAM5hF,KAAK6hF,KAAAA,EAAOF,KAAKJ,EAAAA;UACxD;UAEA,iBAAA8E;AACE,mBAAOrmF,KAAK2mF,SAAS,KAAK,GAAA;UAC5B;UAEA,oBAAAL;AACE,mBAAOtmF,KAAK2mF,SAAS,KAAK,GAAA;UAC5B;UAEA,cAAAJ;AACE,mBAAOvmF,KAAK2mF,SAAS,KAAK,GAAA;UAC5B;UAEA,aAAAH;AACE,mBAAOxmF,KAAK2mF,SAAS,KAAK,GAAA;UAC5B;UAEA,eAAAF;AACE,mBAAOzmF,KAAK2mF,SAAS,MAAM,IAAA;UAC7B;UAEA,cAAAD;AACE,mBAAO1mF,KAAK4hF,SAAS5hF,KAAK6hF;UAC5B;UAEQ,SAAS+E,IAAuBC,IAAAA;AACtC,mBAAO7mF,KAAK4hF,SAASgF,MAAiB5mF,KAAK6hF,UAAUgF;UACvD;QAAA;MAAA,GAAA,MAAA,CAAA5mF,IAAAC,IAAAmC,OAAA;AAAA;AAAA,eAAA,eAAAnC,IAAA,cAAA,EAAA,OAAA,KAAA,CAAA,GAAAA,GAAA,QAAA;ACxHF,cAAAs9E,KAAAn7E,GAAA,IAAA,GACA,IAAAA,GAAA,IAAA;AAEA,QAAAnC,GAAA,QAAA,MAAA;UAGE,YAAYgiF,IAAAA;AACVliF,iBAAKmiF,iBAAiBD;UACxB;UAEA,UAAAE;AACE,kBAAA,EAAM,UAAEH,IAAQ,MAAE95E,GAAAA,IAASnI,KAAKmiF,gBAC1BG,KAAiBL,GAAS//E;AAEhC,gBAAuB,MAAnBogF,GAAsB,OAAM,IAAI9E,GAAAyC,6BAA6B93E,IAAM,GAAGm6E,EAAAA;AAE1E,kBAAM56B,KAAM,GAAA,EAAAw5B,+BAA8Be,GAAS,CAAA,CAAA,EAAIG,QAAAA,GACjD0E,KAAM,GAAA,EAAA5F,+BAA8Be,GAAS,CAAA,CAAA,EAAIG,QAAAA;AAEvD,mBAAIpiF,KAAK+mF,YAAAA,IAAsB,GAAG/mF,KAAKgnF,uBAAuBt/B,CAAAA,CAAAA,IAAQ1nD,KAAKgnF,uBAAuBF,CAAAA,CAAAA,KAE3F,UAAUp/B,CAAAA,KAAQo/B,CAAAA;UAC3B;UAEQ,uBAAuBvF,IAAAA;AAC7B,mBAAO,IAAI,EAAAQ,qBAAqBkF,sBAAsB1F,EAAAA;UACxD;UAEQ,cAAAwF;AACN,mBAAA,CAAA,CAAS/mF,KAAKmiF,eAAelwE,WAAWi1E;UAC1C;QAAA;MAAA,GAAA,MAAA,CAAAjnF,IAAAC,IAAAmC,OAAA;AAAA;AAAA,eAAA,eAAAnC,IAAA,cAAA,EAAA,OAAA,KAAA,CAAA,GAAAA,GAAA,KAAA;AC9BF,cAAAs9E,KAAAn7E,GAAA,IAAA,GACA,IAAAA,GAAA,IAAA,GAEA,IAAAA,GAAA,IAAA;AAEA,QAAAnC,GAAA,KAAA,MAAA;UAKE,YAAYgiF,IAAAA;AAFK,iBAAAiF,gBAAoC,IAAI,EAAAC,0BAGvDpnF,KAAKmiF,iBAAiBD;UACxB;UAEA,UAAAE;AACE,kBAAMiF,MAAkB,GAAA7J,GAAA8D,sBAAqBthF,KAAKmiF,eAAezhF,KAAAA;AACjE,gBAAwB,QAApB2mF,GAAyB,QAAOC,EAAUz/E,MAAMw/E,EAAAA;AAEpD,kBAAME,KAAeF,GAAgBG,KAAAA,GAC/BC,KAAgBH,EAAUz/E,MAAM0/E,EAAAA,GAEhCG,KAAa1nF,KAAKmnF,cAAc/E,QAAQqF,EAAAA;AAC9C,mBAAIC,OAAeD,KAAsBC,KAElC1nF,KAAK2nF,kBAAkBF,IAAeznF,KAAK4nF,eAAe5nF,KAAKmiF,eAAelwE,UAAAA,CAAAA;UACvF;UAEQ,eAAeA,IAAAA;AACrB,gBAAKA,MAAeA,GAAW41E,YAC/B,QAAO51E,GAAW41E;UACpB;UAEQ,kBAAkBnnF,IAAeonF,IAAAA;AACvC,oBAAQA,IAAAA;cACN,KAAK;AACH,uBAAO,YAAYpnF,EAAAA;cACrB,KAAK;AACH,uBAAO,YAAYA,EAAAA;cACrB,KAAK;AACH,uBAAO,qBAAqBA,EAAAA;cAC9B,KAAK;AACH,uBAAO,YAAYA,EAAAA;cACrB,KAAK;AACH,uBAAO,uBAAuBA,EAAAA;cAChC,KAAK;AACH,uBAAO,aAAaA,EAAAA;cACtB,KAAK;AACH,uBAAO,sBAAsBA,EAAAA;cAC/B,KAAK;AACH,uBAAO,cAAcA,EAAAA;cACvB,KAAK;AACH,uBAAO,YAAYA,EAAAA;cACrB,KAAK;AACH,uBAAO,qBAAqBA,EAAAA;cAC9B,KAAK;AACH,uBAAO,qBAAqBA,EAAAA;cAC9B,KAAK;AACH,uBAAO,8BAA8BA,EAAAA;cACvC,KAAK;AACH,uBAAO,YAAYA,EAAAA;cACrB;AACE,uBAAOA;YAAAA;UAEb;QAAA;QAGF,MAAM4mF,EAAAA;UAGJ,YAAY5mF,IAAAA;AACVV,iBAAK+nF,SAASrnF;UAChB;UAEA,OAAA,MAAaA,IAAAA;AACX,mBAAO,IAAI4mF,EAAU5mF,EAAAA,EAAOsnF,OAAAA;UAC9B;UAEQ,SAAAA;AACN,mBACEhoF,KAAKioF,iBAAAA,KACLjoF,KAAKkoF,aAAAA,KACLloF,KAAKmoF,cAAAA,KACL,IAAI,EAAAf,yBAAyBhF,QAAQpiF,KAAK+nF,MAAAA;UAE9C;UAEQ,mBAAAE;AACN,mBAAO,EAAAG,qBAAqBpoF,KAAK+nF,MAAAA;UACnC;UAEQ,eAAAG;AACN,mBAAO,EAAAG,sBAAsBroF,KAAK+nF,MAAAA;UACpC;UAEQ,gBAAAI;AACN,mBAAO,EAAAG,kBAAkBtoF,KAAK+nF,MAAAA;UAChC;QAAA;MAAA,GAAA,MAAA,CAAA9nF,IAAAC,IAAAmC,OAAA;AAAA;AAAA,eAAA,eAAAnC,IAAA,cAAA,EAAA,OAAA,KAAA,CAAA,GAAAA,GAAA,gBAAA;AChGF,cAAAs9E,KAAAn7E,GAAA,IAAA,GACA,IAAAA,GAAA,IAAA;AAEA,QAAAnC,GAAA,gBAAA,MAAA;UAGE,YAAYgiF,IAAAA;AACVliF,iBAAKmiF,iBAAiBD;UACxB;UAEA,UAAAE;AACE,kBAAA,EAAM,MAAEj6E,IAAI,UAAE85E,GAAAA,IAAajiF,KAAKmiF,gBAC1BG,KAAiBL,GAAS//E;AAEhC,gBAAIogF,KAAiB,EAAG,OAAM,IAAI,EAAArC,6BAA6B93E,IAAM,GAAGm6E,IAAgB,UAAA;AAExF,kBAAMiG,KAAc,GAAA/K,GAAA0D,+BAA8Be,GAAS,CAAA,CAAA,EAAIG,QAAAA;AAE/D,mBAAOpiF,KAAKwoF,gBAAAA,IAAoBxoF,KAAKyoF,iCAAiCF,CAAAA,IAAevoF,KAAK0oF,iBAAAA;UAC5F;UAEQ,kBAAAF;AACN,kBAAA,EAAM,UAAEvG,GAAAA,IAAajiF,KAAKmiF;AAC1B,gBAAIzvE,IACAq0D;AAEJ,gBAAI/mE,KAAK2oF,cAAc1G,GAAS,CAAA,CAAA,EAC9BvvE,CAAAA,KAAMuvE,GAAS,CAAA,GACflb,KAAMkb,GAAS,CAAA;iBACV;AAAA,kBAAA,CAAIjiF,KAAK2oF,cAAc1G,GAAS,CAAA,CAAA,EAGhC,QAAO;AAFZvvE,cAAAA,KAAMuvE,GAAS,CAAA,GACflb,KAAMkb,GAAS,CAAA;YACD;AAKhB,mBAAO,QAHU,GAAAzE,GAAA0D,+BAA8BxuE,EAAAA,EAAK0vE,QAAAA,CAAAA,OACnC,GAAA5E,GAAA0D,+BAA8Bna,EAAAA,EAAKqb,QAAAA,CAAAA;UAGtD;UAEQ,mBAAAsG;AACN,kBAAA,EAAM,UAAEzG,GAAAA,IAAajiF,KAAKmiF;AAC1B,gBAAIniF,KAAK2oF,cAAc1G,GAAS,CAAA,CAAA,EAAK,QAAO;AAE5C,kBAAMvvE,KAAMuvE,GAAS,CAAA,GACflb,KAAMkb,GAAS,CAAA;AAKrB,mBAAO,MAHU,GAAAzE,GAAA0D,+BAA8BxuE,EAAAA,EAAK0vE,QAAAA,CAAAA,OACnC,GAAA5E,GAAA0D,+BAA8Bna,EAAAA,EAAKqb,QAAAA,CAAAA;UAGtD;UAEQ,iCAAiCb,IAAAA;AACvC,mBAAKA,GAAIjE,MAAM,MAAA,IACR,IAAIE,GAAAuE,qBAAqBJ,KAAKJ,EAAAA,IADNA;UAEjC;UAEQ,cAAc/yE,IAAAA;AACpB,mBAAuB,mBAAhBA,QAAAA,KAAAA,SAAAA,GAAOrG;UAChB;QAAA;MAAA,GAAA,MAAA,CAAAlI,IAAAC,IAAAmC,OAAA;AAAA;AAAA,eAAA,eAAAnC,IAAA,cAAA,EAAA,OAAA,KAAA,CAAA,GAAAA,GAAA,KAAA;AC5DF,cAAAs9E,KAAAn7E,GAAA,IAAA,GACA,IAAAA,GAAA,IAAA;AAEA,QAAAnC,GAAA,KAAA,MAAA;UAGE,YAAYgiF,IAAAA;AACVliF,iBAAKmiF,iBAAiBD;UACxB;UAEA,UAAAE;AACE,kBAAMiF,MAAkB,GAAA7J,GAAA8D,sBAAqBthF,KAAKmiF,eAAezhF,KAAAA,EAAO8mF,KAAAA;AAGxE,mBAFuB,EAAAc,kBAAkBjB,EAAAA,KAEhBA;UAC3B;QAAA;MAAA,GAAA,MAAA,CAAApnF,IAAAC,IAAAmC,OAAA;AAAA;AAAA,eAAA,eAAAnC,IAAA,cAAA,EAAA,OAAA,KAAA,CAAA,GAAAA,GAAA,KAAA;ACfF,cAAAs9E,KAAAn7E,GAAA,IAAA,GACA,IAAAA,GAAA,IAAA;AAOA,QAAAnC,GAAA,KAAA,MAAA;UAGE,YAAYgiF,IAAAA;AACVliF,iBAAKmiF,iBAAiBD;UACxB;UAEA,UAAAE;AACE,kBACMmF,MADkB,GAAA/J,GAAA8D,sBAAqBthF,KAAKmiF,eAAezhF,KAAAA,EAC5B8mF,KAAAA;AAErC,mBAAOoB,EAASC,QAAQtB,EAAAA;UAC1B;QAAA;QAGF,MAAMqB,EAAAA;UAGJ,YAAYloF,IAAAA;AACVV,iBAAK+nF,SAASrnF;UAChB;UAEA,OAAA,QAAeA,IAAAA;AACb,mBAAO,IAAIkoF,EAASloF,EAAAA,EAAOooF,SAAAA;UAC7B;UAEQ,WAAAA;AACN,mBACE9oF,KAAKioF,iBAAAA,KACLjoF,KAAKkoF,aAAAA,KACLloF,KAAKmoF,cAAAA,KACL,IAAI,EAAAf,yBAAyBhF,QAAQpiF,KAAK+nF,MAAAA;UAE9C;UAEQ,mBAAAE;AACN,mBAAO,EAAAc,uBAAuB/oF,KAAK+nF,MAAAA;UACrC;UAEQ,eAAAG;AACN,mBAAO,EAAAc,wBAAwBhpF,KAAK+nF,MAAAA;UACtC;UAEQ,gBAAAI;AACN,mBAAO,EAAAG,kBAAkBtoF,KAAK+nF,MAAAA;UAChC;QAAA;MAAA,GAAA,MAAA,CAAA9nF,IAAAC,OAAA;AAAA;AAAA,eAAA,eAAAA,IAAA,cAAA,EAAA,OAAA,KAAA,CAAA,GAAAA,GAAA,WAAA,QCpDFA,GAAA,WAAA,MAAA;UAGE,YAAYgiF,IAAAA;AACVliF,iBAAKmiF,iBAAiBD;UACxB;UAEA,UAAAE;AACE,mBAAO;UACT;QAAA;MAAA,GAAA,MAAA,CAAAniF,IAAAC,IAAAmC,OAAA;AAAA;AAAA,eAAA,eAAAnC,IAAA,cAAA,EAAA,OAAA,KAAA,CAAA,GAAAA,GAAA,QAAA;ACVF,cAAAs9E,KAAAn7E,GAAA,IAAA,GACA,IAAAA,GAAA,IAAA;AAEA,QAAAnC,GAAA,QAAA,MAAA;UAGE,YAAYgiF,IAAAA;AACVliF,iBAAKmiF,iBAAiBD;UACxB;UAEA,UAAAE;AACE,kBAAA,EAAM,MAAEj6E,IAAI,UAAE85E,GAAAA,IAAajiF,KAAKmiF,gBAC1BG,KAAiBL,GAAS//E;AAEhC,gBAAuB,MAAnBogF,GAAsB,OAAM,IAAI,EAAArC,6BAA6B93E,IAAM,GAAGm6E,EAAAA;AAE1E,kBAAMC,KAAU,GAAA/E,GAAA0D,+BAA8Be,GAAS,CAAA,CAAA,EAAIG,QAAAA;AAG3D,mBAAO,WAFW,GAAA5E,GAAA0D,+BAA8Be,GAAS,CAAA,CAAA,EAAIG,QAAAA,CAAAA,KAE9BG,CAAAA;UACjC;QAAA;MAAA,GAAA,MAAA,CAAAtiF,IAAAC,IAAAmC,OAAA;AAAA;AAAA,eAAA,eAAAnC,IAAA,cAAA,EAAA,OAAA,KAAA,CAAA,GAAAA,GAAA,OAAA;ACpBF,cAAAs9E,KAAAn7E,GAAA,IAAA;AAEA,QAAAnC,GAAA,OAAA,MAAA;UAGE,YAAYgiF,IAAAA;AACVliF,iBAAKmiF,iBAAiBD;UACxB;UAEA,UAAAE;AAEE,mBAAIpiF,KAAKipF,uBAAAA,IACAjpF,KAAKkpF,uBAAAA,IAGPlpF,KAAKmiF,eAAeF,SACxBrtE,IAAKpG,CAAAA,QAAU,GAAAgvE,GAAA0D,+BAA8B1yE,EAAAA,CAAAA,EAC7CoG,IAAKytE,CAAAA,OAAcA,GAAUD,QAAAA,CAAAA,EAC7BzwE,KAAK,GAAA;UACV;UAEQ,yBAAAs3E;AACN,kBAAA,EAAM,UAAEhH,GAAAA,IAAajiF,KAAKmiF;AAE1B,gBAAwB,MAApBF,GAAS//E,OAAc,QAAA;AAG3B,kBAAM8L,KAAai0E,GAAS,CAAA,GACtBkH,KAAqC,SAApBn7E,GAAW7F,QAA6C,QAA5B6F,GAAWtN,MAAM8mF,KAAAA,GAI9D4B,KAAgC,aADlBnH,GAAS,CAAA,EACA95E,MAGvBkhF,IAAapH,GAAS,CAAA,GACtBqH,IAAqC,SAApBD,EAAWlhF,QAA6C,OAA5BkhF,EAAW3oF,MAAM8mF,KAAAA;AAEpE,mBAAO2B,MAAkBC,MAAYE;UACvC;UAEQ,yBAAAJ;AAON,mBAAO,kBANalpF,KAAKmiF,eAAeF,SAAS,CAAA,EAChBA,SAC9BrtE,IAAKpG,CAAAA,QAAU,GAAAgvE,GAAA0D,+BAA8B1yE,EAAAA,CAAAA,EAC7CoG,IAAKytE,CAAAA,OAAcA,GAAUD,QAAAA,CAAAA,EAC7BzwE,KAAK,QAAA,CAAA;UAGV;QAAA;MAAA,GAAA,MAAA,CAAA1R,IAAAC,OAAA;AAAA;AAAA,eAAA,eAAAA,IAAA,cAAA,EAAA,OAAA,KAAA,CAAA,GAAAA,GAAA,SAAA,QChDFA,GAAA,SAAA,MAAA;UAGE,YAAYgiF,IAAAA;AACVliF,iBAAKmiF,iBAAiBD;UACxB;UAEA,UAAAE;AACE,kBAAA,EAAM,WAAEmH,GAAAA,IAAcvpF,KAAKmiF,eAAelwE;AAE1C,mBAAkB,cAAds3E,KACK,WAGF;UACT;QAAA;MAAA,GAAA,MAAA,CAAAtpF,IAAAC,IAAAmC,OAAA;AAAA;AAAA,eAAA,eAAAnC,IAAA,cAAA,EAAA,OAAA,KAAA,CAAA,GAAAA,GAAA,QAAA;AChBF,cAAAs9E,KAAAn7E,GAAA,IAAA;AAEA,QAAAnC,GAAA,QAAA,MAAA;UAGE,YAAYgiF,IAAAA;AACVliF,iBAAKmiF,iBAAiBD;UACxB;UAEA,UAAAE;AAME,mBAAO,UALqBpiF,KAAKmiF,eAAeF,SAC7CrtE,IAAKpG,CAAAA,QAAU,GAAAgvE,GAAA0D,+BAA8B1yE,EAAAA,CAAAA,EAC7CoG,IAAKytE,CAAAA,OAAcA,GAAUD,QAAAA,CAAAA,EAC7BzwE,KAAK,GAAA,CAAA;UAGV;QAAA;MAAA,GAAA,MAAA,CAAA1R,IAAAC,IAAAmC,OAAA;AAAA;AAAA,eAAA,eAAAnC,IAAA,cAAA,EAAA,OAAA,KAAA,CAAA,GAAAA,GAAA,OAAA;AChBF,cAAAs9E,KAAAn7E,GAAA,IAAA,GACA,IAAAA,GAAA,IAAA;AAEA,QAAAnC,GAAA,OAAA,MAAA;UAGE,YAAYgiF,IAAAA;AACVliF,iBAAKmiF,iBAAiBD;UACxB;UAEA,UAAAE;AACE,kBAAA,EAAM,MAAEj6E,IAAI,UAAE85E,GAAAA,IAAajiF,KAAKmiF,gBAC1BG,KAAiBL,GAAS//E;AAEhC,gBAAuB,MAAnBogF,GAAsB,OAAM,IAAI,EAAArC,6BAA6B93E,IAAM,GAAGm6E,EAAAA;AAE1E,kBAAMkH,KAAYvH,GAAS,CAAA,GACrBwH,IAAiBxH,GAAS,CAAA;AAEhC,mBAAO,GAAGjiF,KAAK0pF,iBAAiBF,EAAAA,CAAAA,IAAcxpF,KAAK2pF,sBAAsBF,CAAAA,CAAAA;UAC3E;UAEQ,iBAAiBl0E,IAAAA;AACvB,kBAAMq0E,KAAer0E,GAAK0sE,UACpB4H,MAAU,GAAArM,GAAA0D,+BAA8B3rE,EAAAA,EAAM6sE,QAAAA;AAEpD,mBAAIwH,GAAa1nF,UAAU,IAClB2nF,KAGF,IAAIrM,GAAAuE,qBAAqBkF,sBAAsB4C,EAAAA;UACxD;UAEQ,sBAAsBC,IAAAA;AAC5B,kBAAMC,MAAe,GAAAvM,GAAA0D,+BAA8B4I,EAAAA,EAAW1H,QAAAA;AAE9D,mBAAO,IAAI5E,GAAAsE,iBAAiBH,KAAKoI,EAAAA;UACnC;QAAA;MAAA,GAAA,MAAA,CAAA9pF,IAAAC,IAAAmC,OAAA;AAAA;AAAA,eAAA,eAAAnC,IAAA,cAAA,EAAA,OAAA,KAAA,CAAA,GAAAA,GAAA,UAAA;ACrCF,cAAAs9E,KAAAn7E,GAAA,IAAA,GACA,IAAAA,GAAA,IAAA;AAEA,QAAAnC,GAAA,UAAA,MAAA;UAGE,YAAYgiF,IAAAA;AACVliF,iBAAKmiF,iBAAiBD;UACxB;UAEA,UAAAE;AACE,kBAAA,EAAM,MAAEj6E,IAAI,UAAE85E,GAAAA,IAAajiF,KAAKmiF,gBAC1BG,KAAiBL,GAAS//E;AAEhC,gBAAuB,MAAnBogF,GAAsB,OAAM,IAAI,EAAArC,6BAA6B93E,IAAM,GAAGm6E,EAAAA;AAE1E,kBAAMkH,KAAYvH,GAAS,CAAA,GACrBwH,IAAiBxH,GAAS,CAAA,GAC1B+H,IAAmB/H,GAAS,CAAA;AAElC,mBAAO,GAAGjiF,KAAK0pF,iBAAiBF,EAAAA,CAAAA,IAAcxpF,KAAK2pF,sBAAsBF,CAAAA,CAAAA,IAAmBzpF,KAAKiqF,wBAAwBD,CAAAA,CAAAA;UAC3H;UAEQ,iBAAiBz0E,IAAAA;AACvB,kBAAMq0E,KAAer0E,GAAK0sE,UACpB4H,MAAU,GAAArM,GAAA0D,+BAA8B3rE,EAAAA,EAAM6sE,QAAAA;AAEpD,mBAAIwH,GAAa1nF,UAAU,IAClB2nF,KAGF,IAAIrM,GAAAuE,qBAAqBkF,sBAAsB4C,EAAAA;UACxD;UAEQ,sBAAsBC,IAAAA;AAC5B,kBAAMC,MAAe,GAAAvM,GAAA0D,+BAA8B4I,EAAAA,EAAW1H,QAAAA;AAE9D,mBAAO,IAAI5E,GAAAsE,iBAAiBH,KAAKoI,EAAAA;UACnC;UAEQ,wBAAwBG,IAAAA;AAC9B,kBAAMC,MAAiB,GAAA3M,GAAA0D,+BAA8BgJ,EAAAA,EAAa9H,QAAAA;AAElE,mBAAO,IAAI5E,GAAAsE,iBAAiBH,KAAKwI,EAAAA;UACnC;QAAA;MAAA,GAAA,MAAA,CAAAlqF,IAAAC,IAAAmC,OAAA;AAAA;AAAA,eAAA,eAAAnC,IAAA,cAAA,EAAA,OAAA,KAAA,CAAA,GAAAA,GAAA,OAAA;AC5CF,cAAAs9E,KAAAn7E,GAAA,IAAA,GACA,IAAAA,GAAA,IAAA;AAEA,QAAAnC,GAAA,OAAA,MAAA;UAGE,YAAYgiF,IAAAA;AACVliF,iBAAKmiF,iBAAiBD;UACxB;UAEA,UAAAE;AACE,kBAAA,EAAM,MAAEj6E,IAAI,UAAE85E,GAAAA,IAAajiF,KAAKmiF,gBAC1BG,KAAiBL,GAAS//E;AAEhC,gBAAuB,MAAnBogF,GAAsB,OAAM,IAAI,EAAArC,6BAA6B93E,IAAM,GAAGm6E,EAAAA;AAE1E,kBAAMkH,KAAYvH,GAAS,CAAA,GACrBmI,IAAgBnI,GAAS,CAAA;AAE/B,mBAAO,GAAGjiF,KAAK0pF,iBAAiBF,EAAAA,CAAAA,IAAcxpF,KAAKqqF,qBAAqBD,CAAAA,CAAAA;UAC1E;UAEQ,iBAAiB70E,IAAAA;AACvB,kBAAMq0E,KAAer0E,GAAK0sE,UACpB4H,MAAU,GAAArM,GAAA0D,+BAA8B3rE,EAAAA,EAAM6sE,QAAAA;AAEpD,mBAAIwH,GAAa1nF,UAAU,IAClB2nF,KAGF,IAAIrM,GAAAuE,qBAAqBkF,sBAAsB4C,EAAAA;UACxD;UAEQ,qBAAqBS,IAAAA;AAC3B,kBAAMC,MAAc,GAAA/M,GAAA0D,+BAA8BoJ,EAAAA,EAAUlI,QAAAA;AAE5D,mBAAO,IAAI5E,GAAAsE,iBAAiBH,KAAK4I,EAAAA;UACnC;QAAA;MAAA,GAAA,MAAA,CAAAtqF,IAAAC,IAAAmC,OAAA;AAAA;AAAA,eAAA,eAAAnC,IAAA,cAAA,EAAA,OAAA,KAAA,CAAA,GAAAA,GAAA,SAAA;ACrCF,cAAAs9E,KAAAn7E,GAAA,IAAA;AAEA,QAAAnC,GAAA,SAAA,MAAA;UAGE,YAAYgiF,IAAAA;AACVliF,iBAAKmiF,iBAAiBD,IACtBliF,KAAKwqF,wBAAwBxqF,KAAKmiF,eAAeF,UAAU,UAAU,YAAA;UACvE;UAEA,UAAAG;AACE,kBAAMqI,KAAezqF,KAAKmiF,eAAeF,SACtCrtE,IAAKpG,CAAAA,QAAU,GAAAgvE,GAAA0D,+BAA8B1yE,EAAAA,CAAAA,EAC7CoG,IAAKytE,CAAAA,OAAcA,GAAUD,QAAAA,CAAAA,EAC7BzwE,KAAK,SAAA;AAER,mBAAO3R,KAAK0qF,SAAS,YAAA,IAAgB1qF,KAAK2qF,MAAMF,EAAAA,IAAgBA;UAClE;UAEQ,MAAMG,IAAAA;AACZ,mBAAO,kBAAkBA,EAAAA;UAC3B;UAEQ,wBAAwBjF,IAAiCx9E,IAAc0iF,IAAAA;AAC7ElF,YAAAA,GAAemF,QAAS5F,CAAAA,OAAAA;AAClBA,cAAAA,GAAc/8E,SAASA,OAAM+8E,GAAcjzE,WAAW44E,EAAAA,IAAQA,KAClE7qF,KAAKwqF,wBAAwBtF,GAAcjD,UAAU95E,IAAM0iF,EAAAA;YAAK,CAAA;UAEpE;UAEQ,SAASA,IAAAA;AACf,mBAAA,CAAA,CAAS7qF,KAAKmiF,eAAelwE,WAAW44E,EAAAA;UAC1C;QAAA;MAAA,GAAA,MAAA,CAAA5qF,IAAAC,IAAAmC,OAAA;AAAA;AAAA,eAAA,eAAAnC,IAAA,cAAA,EAAA,OAAA,KAAA,CAAA,GAAAA,GAAA,QAAA;AChCF,cAAAs9E,KAAAn7E,GAAA,IAAA;AAEA,QAAAnC,GAAA,QAAA,MAAA;UAGE,YAAYgiF,IAAAA;AACVliF,iBAAKmiF,iBAAiBD;UACxB;UAEA,UAAAE;AACE,kBAAA,EAAM,YAAEnwE,IAAU,OAAEvR,GAAAA,IAAUV,KAAKmiF;AAEnC,mBAAO,CAAA,GAAIzhF,EAAAA,EACRkU,IAAWm2E,CAAAA,OAEN,gBAAgBlmF,KAAKkmF,EAAAA,KAAkB,QAATA,KACzB,EACLrqF,OAAOqqF,IACPC,gBAAAA,KAAgB,IAIb,EACLtqF,OAAOqqF,IACPC,gBAAAA,MAAgB,CAAA,EAGnBphF,OAAe,CAACqhF,IAAKF,OAAAA;AAEpB,kBAAIA,GAAKC,gBAAgB;AACvB,sBAAME,KAAWD,GAAIA,GAAI/oF,SAAS,CAAA;AAClC,oBAAIgpF,MAAYA,GAASF,eAEvB,QADAE,GAASxqF,SAASqqF,GAAKrqF,OAChBuqF;cAEX;AAEA,qBAAO,CAAA,GAAIA,IAAKF,EAAAA;YAAK,GACpB,CAAA,CAAA,EACFn2E,IAAKm2E,CAAAA,OACCA,GAAKC,iBASH,IAAIG,EAAYl5E,GAAW41E,WAAAA,EAAahgF,MAAMkjF,GAAKrqF,KAAAA,IARjD,IAAI88E,GAAA2F,GAAG,EACZh7E,MAAM,MACN8J,YAAY,CAAC,GACbgwE,UAAU,CAAA,GACVvhF,OAAOqqF,GAAKrqF,MAAAA,CAAAA,EACX0hF,QAAAA,CAAAA,EAKNzwE,KAAK,EAAA;UACV;QAAA;QAGF,MAAMw5E,EAAAA;UAGJ,YAAYtD,IAAAA;AACV7nF,iBAAKorF,eAAevD,MAAe;UACrC;UAEA,MAAMnnF,IAAAA;AACJ,mBAAOV,KAAKqrF,UAAUzhF,OAAO,CAACqhF,IAAK/E,IAASzyE,OAC5B,MAAVA,KAAoB,GAAGyyE,EAAAA,IAAWxlF,EAAAA,MAC/B,GAAGwlF,EAAAA,IAAW+E,EAAAA,KACpB,EAAA;UACL;UAEA,IAAA,YAAYI;AACV,oBAAQrrF,KAAKorF,cAAAA;cACX,KAAK;AACH,uBAAO,CAAC,UAAA;cACV,KAAK;AACH,uBAAO,CAAC,UAAA;cACV,KAAK;AACH,uBAAO,CAAC,YAAY,UAAA;cACtB,KAAK;AACH,uBAAO,CAAC,UAAA;cACV,KAAK;AACH,uBAAO,CAAC,UAAA;cACV,KAAK;cACL,KAAK;AACH,uBAAO,CAAC,YAAA;cACV;AACE,uBAAO,CAAC,QAAA;YAAA;UAEd;QAAA;MAAA,GAAA,MAAA,CAAAnrF,IAAAC,IAAAmC,OAAA;AAAA;AAAA,eAAA,eAAAnC,IAAA,cAAA,EAAA,OAAA,KAAA,CAAA,GAAAA,GAAA,MAAA;ACvFF,cAAAs9E,KAAAn7E,GAAA,IAAA;AAEA,QAAAnC,GAAA,MAAA,MAAA;UAGE,YAAYgiF,IAAAA;AACVliF,iBAAKmiF,iBAAiBD;UACxB;UAEA,UAAAE;AACE,mBAAOpiF,KAAKmiF,eAAeF,SACxBrtE,IAAKpG,CAAAA,QAAU,GAAAgvE,GAAA0D,+BAA8B1yE,EAAAA,CAAAA,EAC7CoG,IAAKytE,CAAAA,OAAcA,GAAUD,QAAAA,CAAAA,EAC7BzwE,KAAK,KAAA;UACV;QAAA;MAAA,GAAA,MAAA,CAAA1R,IAAAC,IAAAmC,OAAA;AAAA;AAAA,eAAA,eAAAnC,IAAA,cAAA,EAAA,OAAA,KAAA,CAAA,GAAAA,GAAA,aAAA;ACdF,cAAAs9E,KAAAn7E,GAAA,IAAA,GACA,IAAAA,GAAA,IAAA;AAEA,QAAAnC,GAAA,aAAA,MAAA;UAGE,YAAYgiF,IAAAA;AACVliF,iBAAKmiF,iBAAiBD;UACxB;UAEA,UAAAE;AACE,kBAAA,EAAM,MAAEj6E,IAAI,UAAE85E,GAAAA,IAAajiF,KAAKmiF,gBAC1BG,KAAiBL,GAAS//E;AAEhC,gBAAuB,MAAnBogF,GAAsB,OAAM,IAAI,EAAArC,6BAA6B93E,IAAM,GAAGm6E,EAAAA;AAM1E,mBAAO,IAJM,GAAA9E,GAAA0D,+BAA8Be,GAAS,CAAA,CAAA,EAAIG,QAAAA,CAAAA,MACnC,GAAA5E,GAAA0D,+BAA8Be,GAAS,CAAA,CAAA,EAAIG,QAAAA,CAAAA,OAC5C,GAAA5E,GAAA0D,+BAA8Be,GAAS,CAAA,CAAA,EAAIG,QAAAA,CAAAA;UAGjE;QAAA;MAAA,GAAA,MAAA,CAAAniF,IAAAC,OAAA;AAAA;AAAA,eAAA,eAAAA,IAAA,cAAA,EAAA,OAAA,KAAA,CAAA,GAAAA,GAAA,OAAA,QCrBFA,GAAA,OAAA,MAAA;UACE,YAA6BiiF,IAAAA;AAAA,iBAAAA,iBAAAA;UAAgC;UAE7D,UAAAC;AACE,mBAAO;UACT;QAAA;MAAA,GAAA,MAAA,SAAAniF,IAAAC,IAAAmC,IAAA;AAAA;AAAA,YAAAm7E,KAAA,QAAA,KAAA,oBAAA,OAAA,SAAA,SAAAv9E,IAAAC,IAAAmC,IAAAm7E,IAAA;AAAA,qBAAAA,OAAAA,KAAAn7E;AAAA,cAAA2Q,KAAA,OAAA,yBAAA9S,IAAAmC,EAAA;AAAA,UAAA2Q,MAAA,EAAA,SAAAA,KAAA,CAAA9S,GAAA,aAAA8S,GAAA,YAAAA,GAAA,kBAAAA,KAAA,EAAA,YAAA,MAAA,KAAA,WAAA;AAAA,mBAAA9S,GAAAmC,EAAA;UAAA,EAAA,IAAA,OAAA,eAAApC,IAAAu9E,IAAAxqE,EAAA;QAAA,IAAA,SAAA/S,IAAAC,IAAAmC,IAAAm7E,IAAA;AAAA,qBAAAA,OAAAA,KAAAn7E,KAAApC,GAAAu9E,EAAA,IAAAt9E,GAAAmC,EAAA;QAAA,IAAA,IAAA,QAAA,KAAA,uBAAA,OAAA,SAAA,SAAApC,IAAAC,IAAA;AAAA,iBAAA,eAAAD,IAAA,WAAA,EAAA,YAAA,MAAA,OAAAC,GAAA,CAAA;QAAA,IAAA,SAAAD,IAAAC,IAAA;AAAA,UAAAD,GAAA,UAAAC;QAAA,IAAA,IAAA,QAAA,KAAA,gBAAA,SAAAD,IAAA;AAAA,cAAAA,MAAAA,GAAA,WAAA,QAAAA;AAAA,cAAAC,KAAA,CAAA;AAAA,cAAA,QAAAD,GAAA,UAAAoC,MAAApC,GAAA,eAAAoC,MAAA,OAAA,UAAA,eAAA,KAAApC,IAAAoC,EAAA,KAAAm7E,GAAAt9E,IAAAD,IAAAoC,EAAA;AAAA,iBAAA,EAAAnC,IAAAD,EAAA,GAAAC;QAAA;AAAA,eAAA,eAAAA,IAAA,cAAA,EAAA,OAAA,KAAA,CAAA,GAAAA,GAAA,uCAAA;ACPF,cAAA,IAAA,EAAAmC,GAAA,IAAA,CAAA,GACA,IAAAA,GAAA,IAAA;AAGA,QAAAnC,GAAA,uCAAA,MAAA;UAGE,YAAYihF,IAAAA;AACVnhF,iBAAKsrF,iBAAiBnK,QAAAA,KAAAA,KAAiB,IAAI,EAAAoK;UAC7C;UAEA,mBAAAlK;AACE,kBAAA,EAAM,MAAEl5E,GAAAA,IAASnI,KAAKsrF;AAGtB,mBAAO,KAFWE,EAAkCrjF,EAAAA,KAASsjF,EAAkBnH,uBAE1DtkF,KAAKsrF,cAAAA;UAC5B;QAAA;AAGF,cAAME,IAA2E,EAC/EE,MAAMD,EAAkB3L,MACxB6L,IAAIF,EAAkBtI,IACtByI,IAAIH,EAAkBrI,IACtByI,IAAIJ,EAAkBpI,IACtByI,OAAOL,EAAkBnI,OACzByI,SAASN,EAAkBlI,SAC3ByI,OAAOP,EAAkBjI,OACzByI,OAAOR,EAAkBhI,OACzByI,SAAST,EAAkB/H,SAC3ByI,UAAUV,EAAkB9H,UAC5ByI,QAAQX,EAAkB7H,QAC1ByI,UAAUZ,EAAkB5H,UAC5ByI,MAAMb,EAAkB3H,MACxByI,MAAMd,EAAkB1H,MACxByI,SAASf,EAAkBzH,SAC3ByI,eAAehB,EAAkBxH,eACjCyI,OAAOjB,EAAkBvH,OACzByI,YAAYlB,EAAkBtH,YAC9ByI,QAAQnB,EAAkBrH,QAC1ByI,KAAKpB,EAAkBpH,KACvByI,OAAOrB,EAAkBlH,kBACzBwI,QAAQtB,EAAkBlH,kBAC1ByI,MAAMvB,EAAkBjH,MACxByI,QAAQxB,EAAkBhH,QAC1ByI,SAASzB,EAAkBnH,uBAC3B6I,MAAM1B,EAAkB9G,KAAAA;MAAAA,GAAAA,MAAAA,CAAAA,IAAAA,OAAAA;AAAAA;AAAAA,eAAAA,eAAAA,IAAAA,cAAAA,EAAAA,OAAAA,KAAAA,CAAAA,GAAAA,GAAAA,eAAAA,QC7C1BzkF,GAAA,eAAA,MAAA;UAAA,cAAA;AACU,iBAAAktF,UAAoB,CAAA,GAC5B,KAAAC,eAAe,CAAC;UAyClB;UAvCE,SAAS7nF,IAAa8nF,IAAAA;AACpB,mBAAKttF,KAAKutF,8BAA8BD,EAAAA,KAExCttF,KAAKotF,QAAQp7E,KAAKs7E,EAAAA,GACXttF,KAAKwtF,qBAAqBF,IAAc9nF,EAAAA,KAHeA;UAIhE;UAEA,mBAAAioF;AACE,mBAAOztF,KAAKotF,QAAQlrF,SAAS;UAC/B;UAEA,cAAAwrF;AACE1tF,iBAAKotF,UAAU,CAAA;UACjB;UAEQ,qBAAqBE,IAAsB9nF,IAAAA;AACjD,kBAAMmoF,KAAmBL,GAAa7jF,MAAM,GAAA,EAAK,CAAA;AACjD,gBAAIkkF,GAAkB,QAAOnoF,GAAI1C,QAAQ9C,KAAK4tF,+BAA+BD,EAAAA,GAAmB,EAAA;AAEhG,mBAAO3tF,KAAK6tF,yBAAAA,EAA2BvP,KAAK94E,EAAAA,IAC1CA,CAAAA,KAAMA,GAAI1C,QAAQ9C,KAAK6tF,yBAAAA,GAA4B,MAAA;AAErD,mBAAOroF;UACT;UAEQ,+BAA+BsoF,IAAAA;AACrC,mBAAO,IAAIzR,OAAO,IAAIyR,EAAAA,gBAA2BA,EAAAA,cAAyB,IAAA;UAC5E;UAEQ,2BAAAD;AACN,mBAAO;UACT;UAEQ,8BAA8BP,IAAAA;AACpC,mBAAA,CAAA,CACKA,GAAarK,SAAS,WAAA,KAAA,CAAA,CAAkBqK,GAAarK,SAAS,QAAA,KACjEqK,GAAarK,SAAS,wBAAA;UAE1B;QAAA;MAAA,GAAA,MAAA,SAAAhjF,IAAAC,IAAAmC,IAAA;AAAA;AAAA,YAAAm7E,KAAA,QAAA,KAAA,oBAAA,OAAA,SAAA,SAAAv9E,IAAAC,IAAAmC,IAAAm7E,IAAA;AAAA,qBAAAA,OAAAA,KAAAn7E;AAAA,cAAA2Q,KAAA,OAAA,yBAAA9S,IAAAmC,EAAA;AAAA,UAAA2Q,MAAA,EAAA,SAAAA,KAAA,CAAA9S,GAAA,aAAA8S,GAAA,YAAAA,GAAA,kBAAAA,KAAA,EAAA,YAAA,MAAA,KAAA,WAAA;AAAA,mBAAA9S,GAAAmC,EAAA;UAAA,EAAA,IAAA,OAAA,eAAApC,IAAAu9E,IAAAxqE,EAAA;QAAA,IAAA,SAAA/S,IAAAC,IAAAmC,IAAAm7E,IAAA;AAAA,qBAAAA,OAAAA,KAAAn7E,KAAApC,GAAAu9E,EAAA,IAAAt9E,GAAAmC,EAAA;QAAA,IAAA,IAAA,QAAA,KAAA,gBAAA,SAAApC,IAAAC,IAAA;AAAA,mBAAAmC,MAAApC,GAAA,eAAAoC,MAAA,OAAA,UAAA,eAAA,KAAAnC,IAAAmC,EAAA,KAAAm7E,GAAAt9E,IAAAD,IAAAoC,EAAA;QAAA;AAAA,eAAA,eAAAnC,IAAA,cAAA,EAAA,OAAA,KAAA,CAAA,GC1CF,EAAAmC,GAAA,IAAA,GAAAnC,EAAA,GACA,EAAAmC,GAAA,IAAA,GAAAnC,EAAA,GACA,EAAAmC,GAAA,IAAA,GAAAnC,EAAA;MAAA,GAAA,MAAA,CAAAD,IAAAC,OAAA;AAAA;AAAA,eAAA,eAAAA,IAAA,cAAA,EAAA,OAAA,KAAA,CAAA,GAAAA,GAAA,0BAAA,QCAAA,GAAA,0BAAA,MAAA;UACE,QAAQ41B,IAAAA;AACN,mBAAOA,GAAIpsB,OAAQtD,CAAAA,OAAAA,WAAgBA,GAAGa,OAAAA,EAAuB2N,IAAKxO,CAAAA,OAAgBpG,KAAK+tF,gBAAgB3nF,EAAAA,CAAAA;UACzG;UAEQ,gBAAgBA,IAAAA;AACtB,mBAAO,EACL+B,MAAM/B,GAAGa,SACTgL,YAAYjS,KAAKguF,0BAA0B5nF,GAAG6L,UAAAA,GAC9CvR,OAAOV,KAAKiuF,iBAAiB7nF,EAAAA,IAAM,KAAKA,GAAG8nF,eAAe,IAC1DjM,UAAUjiF,KAAKiuF,iBAAiB7nF,EAAAA,IAC5BpG,KAAKoiF,QAAQpgF,MAAMyjF,KAAKr/E,GAAGmI,UAAAA,CAAAA,IAC1B,CAAA,EAAA;UAET;UAEQ,0BAA0B0D,IAAAA;AAChC,mBAAOjQ,MAAMyjF,KAAKxzE,EAAAA,EAAYrI,OAC5B,CAACqhF,IAAKxkF,OACJnG,OAAOc,OAAO,EAAE,CAACqF,GAAKyL,QAAAA,GAAWzL,GAAKI,cAAcJ,GAAKyL,WAAW,KAAKzL,GAAKI,UAAAA,GAAaokF,EAAAA,GAC7F,CAAC,CAAA;UAEL;UAEQ,iBAAiB7kF,IAAAA;AACvB,kBAAMmI,KAAanI,GAAGmI;AACtB,mBAAA,CAAA,CAASA,MAAoC,MAAtBA,GAAWrM,UAAgBlC,KAAKmuF,sBAAsB5/E,EAAAA;UAC/E;UAEQ,sBAAsB0zE,IAAAA;AAC5B,mBAAOjgF,MAAMyjF,KAAKxD,EAAAA,EAAU4D,KAAMr3E,CAAAA,OAA6B,YAAnBA,GAAM0D,QAAAA;UACpD;QAAA;MAAA,GAAA,MAAA,SAAAjS,IAAAC,IAAAmC,IAAA;AAAA;AAAA,YAAAm7E,KAAA,QAAA,KAAA,mBAAA,SAAAv9E,IAAA;AAAA,iBAAAA,MAAAA,GAAA,aAAAA,KAAA,EAAA,SAAAA,GAAA;QAAA;AAAA,eAAA,eAAAC,IAAA,cAAA,EAAA,OAAA,KAAA,CAAA,GAAAA,GAAA,qBAAA;ACjCF,cAAA,IAAAs9E,GAAAn7E,GAAA,IAAA,CAAA;AAOA,QAAAnC,GAAA,qBAAA,MAAA;UAME,YAAYkuF,IAA4C1pF,IAAAA;AALhD,iBAAA2pF,OAAO,IAMbruF,KAAKsuF,qBAAqBF,IAC1BpuF,KAAKuuF,gBAAgB7pF,IAErB1E,KAAKwuF,UAAU,IAAI,EAAA,QAAOzrF,UAAU,EAClCE,SAASjD,KAAKuuF,cAAclB,cAC5B3oF,cAAc1E,KAAKyuF,UAAUC,KAAK1uF,IAAAA,EAAAA,CAAAA;UAEtC;UAEA,QAAQwF,IAAAA;AAIN,mBAHAxF,KAAKquF,OAAOruF,KAAK2uF,kBAAkBnpF,EAAAA,GACnCxF,KAAKquF,OAAOruF,KAAK4uF,sBAAsB5uF,KAAKquF,IAAAA,GAErCruF,KAAKsuF,mBAAmBlM,QAAQpiF,KAAK6uF,eAAAA;UAC9C;UAEQ,UAAUvB,IAAAA;AAChBttF,iBAAKquF,OAAOruF,KAAKuuF,cAAcO,SAAS9uF,KAAKquF,MAAMf,EAAAA;UACrD;UAEQ,kBAAkB9nF,IAAAA;AAExB,mBAAOA,GAAI1C,QADQ,eACY,EAAA;UACjC;UAEQ,sBAAsB0C,IAAAA;AAE5B,mBAAOA,GAAI1C,QADY,SACY,EAAA;UACrC;UAEA,IAAA,kBAAY+rF;AACV,gBAAIE,KAAW/uF,KAAKwuF,QAAQjqF,gBAAgBvE,KAAKquF,IAAAA,EAAMv3E,qBAAqB,MAAA;AAM5E,mBALI9W,KAAKuuF,cAAcd,iBAAAA,MACrBztF,KAAKuuF,cAAcb,YAAAA,GACnBqB,KAAW/uF,KAAKwuF,QAAQjqF,gBAAgBvE,KAAKquF,IAAAA,EAAMv3E,qBAAqB,MAAA,IAGnE9U,MAAMyjF,KAAKsJ,EAAAA;UACpB;QAAA;MAAA,GAAA,MAAA,SAAA9uF,IAAAC,IAAAmC,IAAA;AAAA;AAAA,YAAAm7E,KAAA,QAAA,KAAA,oBAAA,OAAA,SAAA,SAAAv9E,IAAAC,IAAAmC,IAAAm7E,IAAA;AAAA,qBAAAA,OAAAA,KAAAn7E;AAAA,cAAA2Q,KAAA,OAAA,yBAAA9S,IAAAmC,EAAA;AAAA,UAAA2Q,MAAA,EAAA,SAAAA,KAAA,CAAA9S,GAAA,aAAA8S,GAAA,YAAAA,GAAA,kBAAAA,KAAA,EAAA,YAAA,MAAA,KAAA,WAAA;AAAA,mBAAA9S,GAAAmC,EAAA;UAAA,EAAA,IAAA,OAAA,eAAApC,IAAAu9E,IAAAxqE,EAAA;QAAA,IAAA,SAAA/S,IAAAC,IAAAmC,IAAAm7E,IAAA;AAAA,qBAAAA,OAAAA,KAAAn7E,KAAApC,GAAAu9E,EAAA,IAAAt9E,GAAAmC,EAAA;QAAA,IAAA,IAAA,QAAA,KAAA,gBAAA,SAAApC,IAAAC,IAAA;AAAA,mBAAAmC,MAAApC,GAAA,eAAAoC,MAAA,OAAA,UAAA,eAAA,KAAAnC,IAAAmC,EAAA,KAAAm7E,GAAAt9E,IAAAD,IAAAoC,EAAA;QAAA;AAAA,eAAA,eAAAnC,IAAA,cAAA,EAAA,OAAA,KAAA,CAAA,GCpDF,EAAAmC,GAAA,IAAA,GAAAnC,EAAA;MAAA,GAAA,MAAA,CAAAD,IAAAC,IAAAmC,OAAA;AAAA;AAAA,eAAA,eAAAnC,IAAA,cAAA,EAAA,OAAA,KAAA,CAAA,GAAAA,GAAA,8BAAA;ACAA,cAAAs9E,KAAAn7E,GAAA,IAAA;AAMa,QAAAnC,GAAA8uF,8BAA8B,MAAA;AACzC,gBAAMC,KAA0B,IAAIzR,GAAA0R,2BAC9BxqF,KAAe,IAAI84E,GAAA2R;AAEzB,iBAAO,IAAI3R,GAAA4R,mBAAmBH,IAAyBvqF,EAAAA;QAAa;MAAA,GAAA,MAAA,SAAAzE,IAAAC,IAAAmC,IAAA;AAAA;AAAA,YAAAm7E,KAAA,QAAA,KAAA,oBAAA,OAAA,SAAA,SAAAv9E,IAAAC,IAAAmC,IAAAm7E,IAAA;AAAA,qBAAAA,OAAAA,KAAAn7E;AAAA,cAAA2Q,KAAA,OAAA,yBAAA9S,IAAAmC,EAAA;AAAA,UAAA2Q,MAAA,EAAA,SAAAA,KAAA,CAAA9S,GAAA,aAAA8S,GAAA,YAAAA,GAAA,kBAAAA,KAAA,EAAA,YAAA,MAAA,KAAA,WAAA;AAAA,mBAAA9S,GAAAmC,EAAA;UAAA,EAAA,IAAA,OAAA,eAAApC,IAAAu9E,IAAAxqE,EAAA;QAAA,IAAA,SAAA/S,IAAAC,IAAAmC,IAAAm7E,IAAA;AAAA,qBAAAA,OAAAA,KAAAn7E,KAAApC,GAAAu9E,EAAA,IAAAt9E,GAAAmC,EAAA;QAAA,IAAA,IAAA,QAAA,KAAA,gBAAA,SAAApC,IAAAC,IAAA;AAAA,mBAAAmC,MAAApC,GAAA,eAAAoC,MAAA,OAAA,UAAA,eAAA,KAAAnC,IAAAmC,EAAA,KAAAm7E,GAAAt9E,IAAAD,IAAAoC,EAAA;QAAA;AAAA,eAAA,eAAAnC,IAAA,cAAA,EAAA,OAAA,KAAA,CAAA,GCVtE,EAAAmC,GAAA,IAAA,GAAAnC,EAAA;MAAA,GAAA,MAAA,CAAAD,IAAAC,IAAAmC,OAAA;AAAA;AAAA,eAAA,eAAAnC,IAAA,cAAA,EAAA,OAAA,KAAA,CAAA,GAAAA,GAAA,gBAAA;ACAA,cAAAs9E,KAAAn7E,GAAA,IAAA,GACA,IAAAA,GAAA,IAAA;AAEA,QAAAnC,GAAA,gBAAA,MAAA;UACE,OAAA,QAAemvF,IAAAA;AAKb,oBAJuB,GAAA,EAAAL,6BAAAA,EAA8B5M,QAAQiN,EAAAA,EACNz6E,IAAKusE,CAAAA,OAC1D,IAAI3D,GAAA4D,qCAAqCD,EAAAA,EAAeE,iBAAAA,CAAAA,EAGvDzsE,IAAK06E,CAAAA,OAAsBA,GAAkBlN,QAAAA,CAAAA,EAC7CzwE,KAAK,EAAA,EACL61E,KAAAA;UACL;QAAA;MAAA,GAAA,MAAA,CAAAvnF,IAAAC,OAAA;AAAA;AAAA,eAAA,eAAAA,IAAA,cAAA,EAAA,OAAA,KAAA,CAAA,GAAAA,GAAA,yBAAA,QCbWA,GAAA6oF,yBAAiD,EAC5DwG,GAAG,eACH,YAAY,gBACZ,YAAY,eACZ,YAAY,gBACZ,YAAY,eACZ,YAAY,gBACZ,YAAY,eACZ,YAAY,gBACZ,YAAY,eACZ,YAAY,YACZ,YAAY,YACZ,YAAY,IACZ,YAAY,QACZ,YAAY,SACZ,YAAY,OACZ,YAAY,MACZ,YAAY,KACZ,YAAY,OACZ,YAAY,MACZ,YAAY,MACZ,YAAY,MACZ,YAAY,KACZ,YAAY,KACZ,WAAW,SACX,WAAW,SACX,WAAW,SACX,WAAW,SACX,WAAW,UACX,WAAW,UACX,WAAW,IACX,WAAW,OACX,WAAW,UACX,WAAW,UACX,WAAW,UACX,WAAW,IACX,WAAW,SACX,UAAU,KACV,UAAU,KACV,UAAU,QACV,UAAU,QACV,UAAU,KACV,UAAU,KACV,UAAU,UACV,UAAU,SACV,UAAU,KACV,UAAU,gBACV,KAAK,SACL,KAAK,KACL,KAAK,SACL,MAAM,MACN,MAAM,MACN,SAAS,OACT,YAAY,IACZ,YAAY,eACZ,YAAY,eACZ,YAAY,YACZ,YAAY,KACZ,YAAY,eACZ,KAAK,KACL,KAAK,KACL,MAAM,MACN,MAAM,MACN,KAAK,KACL,YAAY,OACZ,YAAY,IACZ,YAAY,IACZ,YAAY,KACZ,SAAS,MACT,MAAM,gBACN,YAAY,WACZ,YAAY,aACZ,YAAY,aACZ,UAAU,SACV,YAAY,mBACZ,YAAY,mBACZ,YAAY,WACZ,UAAU,SACV,KAAK,KACL,YAAY,eACZ,MAAM,eACN,KAAK,OACL,YAAY,eACZ,UAAU,UACV,YAAY,YACZ,YAAY,WACZ,YAAY,UACZ,YAAY,YACZ,YAAY,cACZ,YAAY,IACZ,YAAY,KACZ,YAAY,UACZ,UAAU,WACV,KAAK,KACL,KAAK,UACL,YAAY,SACZ,YAAY,SACZ,YAAY,YACZ,YAAY,UACZ,YAAY,IACZ,YAAY,IACZ,YAAY,mBACZ,YAAY,WACZ,YAAY,IACZ,YAAY,IACZ,YAAY,WACZ,YAAY,WACZ,YAAY,YACZ,YAAY,UACZ,YAAY,SACZ,YAAY,SACZ,YAAY,WACZ,YAAY,WACZ,YAAY,SACZ,YAAY,SACZ,YAAY,sBACZ,YAAY,qBACZ,YAAY,SACZ,YAAY,SACZ,YAAY,SACZ,YAAY,SACZ,YAAY,UACZ,YAAY,UACZ,YAAY,SACZ,YAAY,SACZ,YAAY,SACZ,YAAY,SACZ,YAAY,SACZ,YAAY,oBACZ,YAAY,IACZ,YAAY,oBACZ,YAAY,YACZ,YAAY,UACZ,YAAY,UACZ,YAAY,SACZ,YAAY,WACZ,YAAY,WACZ,YAAY,UACZ,YAAY,SACZ,YAAY,WACZ,YAAY,YACZ,YAAY,YACZ,YAAY,WACZ,YAAY,WACZ,YAAY,UACZ,YAAY,IACZ,YAAY,IACZ,YAAY,SACZ,YAAY,cACZ,YAAY,aACZ,YAAY,YACZ,YAAY,MACZ,YAAY,KACZ,UAAU,QACV,KAAK,KACL,KAAK,KACL,YAAY,iBACZ,YAAY,gBACZ,YAAY,iBACZ,YAAY,IACZ,YAAY,qBACZ,YAAY,WACZ,YAAY,mBACZ,YAAY,mBACZ,YAAY,UACZ,YAAY,mBACZ,YAAY,IACZ,YAAY,WACZ,YAAY,IACZ,YAAY,IACZ,YAAY,UACZ,YAAY,UACZ,YAAY,sCACZ,YAAY,IACZ,YAAY,sCACZ,YAAY,+BACZ,YAAY,IACZ,YAAY,8BACZ,YAAY,sCACZ,YAAY,mCACZ,YAAY,kCACZ,YAAY,kCACZ,YAAY,8BACZ,YAAY,IACZ,YAAY,IACZ,YAAY,IACZ,YAAY,kCACZ,YAAY,iCACZ,YAAY,iCACZ,YAAY,gCACZ,YAAY,uBACZ,YAAY,uBACZ,YAAY,uBACZ,YAAY,uBACZ,YAAY,eACZ,YAAY,gBACZ,YAAY,aACZ,YAAY,eACZ,YAAY,eACZ,YAAY,aACZ,YAAY,gBACZ,YAAY,eACZ,YAAY,eACZ,YAAY,aACZ,YAAY,gBACZ,YAAY,eACZ,YAAY,eACZ,YAAY,aACZ,YAAY,gBACZ,YAAY,eACZ,YAAY,eACZ,YAAY,aACZ,YAAY,gBACZ,YAAY,eACZ,YAAY,iBACZ,YAAY,oBACZ,YAAY,iBACZ,YAAY,oBACZ,YAAY,iBACZ,YAAY,iBACZ,YAAY,oBACZ,YAAY,oBACZ,YAAY,IACZ,YAAY,oBACZ,YAAY,iBACZ,YAAY,IACZ,YAAY,IACZ,YAAY,qBACZ,YAAY,qBACZ,YAAY,qBACZ,YAAY,sBACZ,YAAY,qBACZ,YAAY,gBACZ,YAAY,eACZ,YAAY,IACZ,YAAY,IACZ,YAAY,IACZ,YAAY,IACZ,YAAY,IACZ,YAAY,IACZ,YAAY,SACZ,YAAY,SACZ,YAAY,eACZ,YAAY,aACZ,YAAY,aACZ,YAAY,IACZ,YAAY,IACZ,YAAY,IACZ,YAAY,IACZ,YAAY,IACZ,YAAY,IACZ,YAAY,WACZ,YAAY,WACZ,YAAY,IACZ,YAAY,IACZ,YAAY,IACZ,YAAY,IACZ,YAAY,IACZ,YAAY,IACZ,YAAY,IACZ,YAAY,IACZ,YAAY,IACZ,YAAY,IACZ,YAAY,kBACZ,YAAY,qBACZ,YAAY,sBACZ,YAAY,eACZ,YAAY,gBACZ,YAAY,eACZ,YAAY,gBACZ,YAAY,eACZ,YAAY,gBACZ,YAAY,gBACZ,YAAY,gBACZ,YAAY,gBACZ,YAAY,gBACZ,YAAY,eACZ,YAAY,aACZ,YAAY,gBACZ,YAAY,gBACZ,YAAY,gBACZ,YAAY,eACZ,YAAY,gBACZ,YAAY,eACZ,YAAY,eACZ,YAAY,aACZ,YAAY,aACZ,YAAY,eACZ,YAAY,gBACZ,YAAY,eACZ,YAAY,YACZ,YAAY,qBACZ,YAAY,iBACZ,YAAY,gBACZ,YAAY,qBACZ,YAAY,qBACZ,YAAY,qBACZ,YAAY,gBACZ,YAAY,eACZ,YAAY,YACZ,YAAY,eACZ,YAAY,wBACZ,YAAY,oBACZ,YAAY,mBACZ,YAAY,oBACZ,YAAY,gBACZ,YAAY,eACZ,YAAY,eACZ,YAAY,aACZ,YAAY,gBACZ,YAAY,oBACZ,YAAY,gBACZ,YAAY,eACZ,YAAY,qBACZ,YAAY,iBACZ,YAAY,gBACZ,YAAY,qBACZ,YAAY,iBACZ,YAAY,gBACZ,YAAY,iBACZ,YAAY,IACZ,YAAY,gBACZ,YAAY,iBACZ,YAAY,aACZ,YAAY,aACZ,YAAY,eACZ,YAAY,aACZ,YAAY,aACZ,YAAY,aACZ,YAAY,aACZ,YAAY,aACZ,YAAY,aACZ,YAAY,eACZ,YAAY,gBACZ,YAAY,aACZ,YAAY,eACZ,YAAY,gBACZ,YAAY,eACZ,YAAY,eACZ,YAAY,gBACZ,YAAY,aACZ,YAAY,eACZ,YAAY,eACZ,YAAY,aACZ,YAAY,qBACZ,YAAY,eACZ,YAAY,iBACZ,YAAY,gBACZ,YAAY,aACZ,YAAY,aACZ,YAAY,aACZ,YAAY,aACZ,YAAY,iBACZ,YAAY,oBACZ,YAAY,eACZ,YAAY,gBACZ,YAAY,aACZ,YAAY,eACZ,YAAY,iBACZ,YAAY,qBACZ,YAAY,gBACZ,YAAY,uBACZ,YAAY,uBACZ,YAAY,oBACZ,YAAY,sBACZ,YAAY,gBACZ,YAAY,oBACZ,YAAY,qBACZ,YAAY,IACZ,YAAY,qBACZ,YAAY,qBACZ,YAAY,sBACZ,YAAY,sBACZ,YAAY,oBACZ,YAAY,mBACZ,YAAY,oBACZ,YAAY,qBACZ,YAAY,mBACZ,YAAY,sBACZ,YAAY,qBACZ,YAAY,qBACZ,YAAY,yBACZ,YAAY,qBACZ,YAAY,oBACZ,YAAY,aACZ,YAAY,aACZ,YAAY,SACZ,YAAY,SACZ,YAAY,SACZ,YAAY,SACZ,YAAY,aACZ,YAAY,IACZ,YAAY,yBACZ,YAAY,oBACZ,YAAY,mBACZ,YAAY,oBACZ,YAAY,mBACZ,YAAY,8BACZ,YAAY,eACZ,YAAY,oBACZ,YAAY,aACZ,YAAY,mBACZ,YAAY,oBACZ,YAAY,mBACZ,YAAY,eACZ,YAAY,uBACZ,YAAY,aACZ,YAAY,sBACZ,YAAY,aACZ,YAAY,aACZ,YAAY,IACZ,YAAY,IACZ,YAAY,aACZ,YAAY,aACZ,YAAY,aACZ,YAAY,aACZ,YAAY,iBACZ,YAAY,oBACZ,YAAY,eACZ,YAAY,gBACZ,YAAY,aACZ,YAAY,eACZ,OAAO,qBACP,MAAM,oBACN,KAAK,mBACL,YAAY,IACZ,YAAY,MACZ,YAAY,OACZ,YAAY,IACZ,YAAY,IACZ,YAAY,IACZ,YAAY,IACZ,YAAY,WACZ,YAAY,IACZ,YAAY,IACZ,YAAY,IACZ,YAAY,eACZ,YAAY,IACZ,YAAY,IACZ,YAAY,IACZ,YAAY,oBACZ,YAAY,IACZ,YAAY,IACZ,YAAY,IACZ,YAAY,IACZ,YAAY,IACZ,YAAY,uBACZ,YAAY,qBACZ,YAAY,IACZ,YAAY,IACZ,YAAY,IACZ,YAAY,IACZ,YAAY,IACZ,YAAY,IACZ,YAAY,UACZ,YAAY,SACZ,YAAY,WACZ,mBAAmB,IACnB,YAAY,IACZ,YAAY,eACZ,YAAY,IACZ,YAAY,IACZ,YAAY,IACZ,YAAY,IACZ,YAAY,IACZ,YAAY,IACZ,YAAY,IACZ,YAAY,IACZ,YAAY,IACZ,YAAY,IACZ,YAAY,IACZ,YAAY,IACZ,YAAY,IACZ,YAAY,IACZ,YAAY,+BACZ,YAAY,+BACZ,YAAY,kCACZ,YAAY,kCACZ,YAAY,+BACZ,YAAY,+BACZ,YAAY,eACZ,YAAY,eACZ,YAAY,qBACZ,YAAY,qBACZ,YAAY,iCACZ,YAAY,iCACZ,YAAY,2BACZ,YAAY,2BACZ,YAAY,IACZ,YAAY,IACZ,YAAY,SACZ,YAAY,QACZ,YAAY,0CACZ,YAAY,0CACZ,YAAY,gCACZ,YAAY,gCACZ,YAAY,mCACZ,YAAY,mCACZ,YAAY,yBACZ,YAAY,yBACZ,YAAY,IACZ,YAAY,IACZ,YAAY,IACZ,YAAY,6BACZ,YAAY,6BACZ,YAAY,gBACZ,YAAY,gBACZ,YAAY,IACZ,YAAY,IACZ,YAAY,sBACZ,YAAY,qBACZ,YAAY,MACZ,YAAY,MACZ,YAAY,qBACZ,mBAAmB,kBACnB,YAAY,QACZ,mBAAmB,kBACnB,YAAY,QACZ,YAAY,4BACZ,YAAY,4BACZ,YAAY,uBACZ,YAAY,uBACZ,YAAY,IACZ,YAAY,IACZ,YAAY,mBACZ,YAAY,mBACZ,YAAY,IACZ,YAAY,IACZ,YAAY,IACZ,YAAY,IACZ,YAAY,IACZ,YAAY,IACZ,YAAY,4BACZ,YAAY,4BACZ,YAAY,2BACZ,YAAY,4BACZ,YAAY,0BACZ,YAAY,0BACZ,YAAY,gBACZ,YAAY,gBACZ,YAAY,qCACZ,YAAY,2BACZ,YAAY,2BACZ,YAAY,2BACZ,YAAY,IACZ,YAAY,IACZ,YAAY,IACZ,YAAY,IACZ,YAAY,IACZ,YAAY,IACZ,mBAAmB,oBACnB,YAAY,SACZ,mBAAmB,oBACnB,YAAY,SACZ,YAAY,IACZ,YAAY,IACZ,YAAY,IACZ,YAAY,IACZ,YAAY,8BACZ,YAAY,IACZ,YAAY,OACZ,YAAY,MACZ,YAAY,OACZ,YAAY,IACZ,YAAY,oBACZ,YAAY,mBACZ,YAAY,0BACZ,YAAY,yBACZ,YAAY,mBACZ,YAAY,mBACZ,YAAY,IACZ,YAAY,IACZ,YAAY,gBACZ,YAAY,IACZ,YAAY,IACZ,YAAY,kBACZ,YAAY,yBACZ,YAAY,IACZ,YAAY,IACZ,YAAY,wBACZ,YAAY,uBACZ,YAAY,UACZ,YAAY,0BACZ,YAAY,wBACZ,YAAY,yBACZ,YAAY,oBACZ,YAAY,sBACZ,YAAY,IACZ,YAAY,IACZ,YAAY,IACZ,YAAY,SACZ,YAAY,WACZ,YAAY,IACZ,YAAY,IACZ,YAAY,IACZ,YAAY,IACZ,YAAY,gBACZ,YAAY,kBACZ,YAAY,IACZ,YAAY,IACZ,YAAY,IACZ,YAAY,qBACZ,YAAY,qBACZ,YAAY,IACZ,YAAY,IACZ,YAAY,IACZ,YAAY,IACZ,YAAY,IACZ,YAAY,IACZ,YAAY,IACZ,YAAY,IACZ,YAAY,qBACZ,YAAY,qBACZ,YAAY,IACZ,YAAY,IACZ,YAAY,IACZ,YAAY,cACZ,YAAY,cACZ,YAAY,IACZ,YAAY,IACZ,YAAY,IACZ,YAAY,IACZ,YAAY,IACZ,YAAY,mBACZ,YAAY,IACZ,YAAY,IACZ,YAAY,IACZ,YAAY,wBACZ,YAAY,wBACZ,YAAY,kBACZ,YAAY,IACZ,YAAY,IACZ,YAAY,IACZ,YAAY,IACZ,YAAY,IACZ,YAAY,IACZ,YAAY,IACZ,YAAY,IACZ,YAAY,wBACZ,YAAY,yBACZ,YAAY,uBACZ,YAAY,YACZ,YAAY,YACZ,YAAY,oBACZ,YAAY,MACZ,YAAY,IACZ,YAAY,kBACZ,YAAY,YACZ,YAAY,IACZ,YAAY,KACZ,YAAY,kBACZ,YAAY,iBACZ,YAAY,eACZ,YAAY,KACZ,YAAY,uBACZ,YAAY,IACZ,YAAY,eACZ,YAAY,SACZ,YAAY,IACZ,YAAY,IACZ,YAAY,IACZ,YAAY,IACZ,YAAY,IACZ,YAAY,aACZ,YAAY,IACZ,YAAY,IACZ,YAAY,IACZ,YAAY,aACZ,YAAY,kBACZ,YAAY,IACZ,YAAY,YACZ,YAAY,IACZ,YAAY,IACZ,YAAY,IACZ,YAAY,UACZ,YAAY,OACZ,YAAY,OACZ,YAAY,IACZ,YAAY,IACZ,YAAY,YACZ,YAAY,YACZ,YAAY,YACZ,YAAY,YACZ,YAAY,YACZ,mBAAmB,0BACnB,YAAY,qBACZ,mBAAmB,yBACnB,YAAY,oBACZ,YAAY,IACZ,YAAY,cACZ,YAAY,IACZ,YAAY,2BACZ,YAAY,qBACZ,YAAY,IACZ,YAAY,mBACZ,YAAY,mBACZ,YAAY,yBACZ,YAAY,uBACZ,YAAY,sBACZ,YAAY,UACZ,YAAY,UACZ,YAAY,UACZ,YAAY,UACZ,YAAY,gBACZ,YAAY,WACZ,YAAY,YACZ,YAAY,IACZ,YAAY,gBACZ,YAAY,gBACZ,YAAY,YACZ,YAAY,YACZ,YAAY,YACZ,YAAY,uBACZ,YAAY,uBACZ,YAAY,uBACZ,YAAY,4BACZ,YAAY,gBACZ,YAAY,IACZ,YAAY,IACZ,YAAY,IACZ,YAAY,IACZ,YAAY,IACZ,YAAY,IACZ,YAAY,IACZ,YAAY,IACZ,YAAY,IACZ,YAAY,IACZ,YAAY,IACZ,YAAY,IACZ,YAAY,IACZ,YAAY,IACZ,YAAY,cACZ,YAAY,gBACZ,YAAY,KACZ,YAAY,UACZ,YAAY,KACZ,YAAY,mBACZ,YAAY,aACZ,YAAY,oBACZ,YAAY,oBACZ,YAAY,QACZ,YAAY,QACZ,YAAY,QACZ,YAAY,qBACZ,YAAY,qBACZ,YAAY,oBACZ,YAAY,oBACZ,YAAY,eACZ,YAAY,QACZ,YAAY,QACZ,YAAY,QACZ,YAAY,WACZ,YAAY,6BACZ,YAAY,6BACZ,YAAY,6BACZ,YAAY,6BACZ,YAAY,qBACZ,YAAY,qBACZ,YAAY,qBACZ,YAAY,qBACZ,YAAY,WACZ,YAAY,WACZ,YAAY,UACZ,YAAY,UACZ,YAAY,iBACZ,YAAY,iBACZ,YAAY,wBACZ,YAAY,wBACZ,YAAY,OACZ,YAAY,SACZ,YAAY,SACZ,YAAY,YACZ,YAAY,YACZ,YAAY,WACZ,YAAY,SACZ,YAAY,WACZ,YAAY,YACZ,YAAY,SACZ,YAAY,UACZ,YAAY,aACZ,YAAY,cACZ,YAAY,mBACZ,YAAY,qBACZ,YAAY,sBACZ,YAAY,sBACZ,YAAY,SACZ,YAAY,IACZ,YAAY,oBACZ,YAAY,oBACZ,YAAY,mBACZ,YAAY,kBACZ,YAAY,UACZ,YAAY,UACZ,YAAY,aACZ,YAAY,aACZ,YAAY,YACZ,YAAY,WACZ,YAAY,YACZ,YAAY,YACZ,YAAY,UACZ,YAAY,UACZ,YAAY,WACZ,YAAY,WACZ,YAAY,gBACZ,YAAY,gBACZ,mBAAmB,mBACnB,YAAY,cACZ,mBAAmB,mBACnB,YAAY,cACZ,YAAY,SACZ,YAAY,SACZ,YAAY,SACZ,mBAAmB,kBACnB,YAAY,aACZ,YAAY,aACZ,YAAY,wBACZ,YAAY,wBACZ,YAAY,mBACZ,YAAY,mBACZ,YAAY,cACZ,YAAY,cACZ,YAAY,SACZ,YAAY,SACZ,YAAY,IACZ,YAAY,SACZ,mBAAmB,cACnB,YAAY,SACZ,YAAY,oBACZ,YAAY,oBACZ,YAAY,qBACZ,YAAY,KACZ,YAAY,KACZ,YAAY,MACZ,YAAY,WACZ,YAAY,WACZ,YAAY,WACZ,YAAY,WACZ,mBAAmB,IACnB,YAAY,IACZ,mBAAmB,IACnB,YAAY,IACZ,YAAY,YACZ,YAAY,YACZ,YAAY,YACZ,mBAAmB,SACnB,YAAY,KACZ,YAAY,SACZ,YAAY,WACZ,mBAAmB,SACnB,YAAY,SACZ,YAAY,SACZ,YAAY,OACZ,YAAY,MACZ,YAAY,SACZ,YAAY,MACZ,YAAY,KACZ,YAAY,KACZ,YAAY,cACZ,YAAY,UACZ,YAAY,UACZ,YAAY,KACZ,YAAY,KACZ,YAAY,YACZ,YAAY,QACZ,YAAY,QACZ,YAAY,WACZ,YAAY,KACZ,mBAAmB,aACnB,YAAY,YACZ,mBAAmB,aACnB,YAAY,YACZ,YAAY,eACZ,YAAY,eACZ,YAAY,SACZ,YAAY,YACZ,YAAY,gBACZ,YAAY,iBACZ,YAAY,SACZ,YAAY,YACZ,YAAY,YACZ,YAAY,YACZ,YAAY,YACZ,YAAY,YACZ,YAAY,YACZ,YAAY,iBACZ,YAAY,iBACZ,YAAY,iBACZ,YAAY,iBACZ,YAAY,aACZ,YAAY,aACZ,YAAY,aACZ,YAAY,kBACZ,YAAY,kBACZ,YAAY,kBACZ,YAAY,kBACZ,YAAY,kBACZ,YAAY,kBACZ,YAAY,kBACZ,YAAY,kBACZ,YAAY,kBACZ,YAAY,kBACZ,YAAY,mBACZ,YAAY,mBACZ,YAAY,mBACZ,YAAY,mBACZ,YAAY,cACZ,YAAY,cACZ,YAAY,cACZ,YAAY,YACZ,YAAY,YACZ,YAAY,YACZ,YAAY,YACZ,YAAY,YACZ,YAAY,YACZ,YAAY,YACZ,YAAY,YACZ,YAAY,YACZ,YAAY,wBACZ,YAAY,uBACZ,YAAY,wBACZ,YAAY,uBACZ,YAAY,SACZ,YAAY,SACZ,YAAY,MACZ,YAAY,MACZ,YAAY,eACZ,YAAY,IACZ,YAAY,IACZ,YAAY,YACZ,YAAY,YACZ,YAAY,mBACZ,YAAY,IACZ,YAAY,SACZ,YAAY,WACZ,YAAY,YACZ,YAAY,YACZ,YAAY,YACZ,YAAY,UACZ,YAAY,UACZ,YAAY,UACZ,YAAY,UACZ,YAAY,SACZ,mBAAmB,aACnB,YAAY,QACZ,mBAAmB,aACnB,YAAY,QACZ,YAAY,eACZ,YAAY,eACZ,YAAY,WACZ,YAAY,WACZ,YAAY,eACZ,YAAY,WACZ,YAAY,eACZ,YAAY,eACZ,YAAY,WACZ,YAAY,MACZ,YAAY,WACZ,YAAY,WACZ,YAAY,WACZ,YAAY,UACZ,YAAY,gBACZ,YAAY,WACZ,YAAY,cACZ,YAAY,mBACZ,YAAY,cACZ,YAAY,UACZ,YAAY,YACZ,MAAM,MACN,KAAK,KACL,MAAM,MACN,MAAM,KACN,MAAM,MACN,MAAM,MACN,MAAM,MACN,MAAM,MACN,YAAY,SACZ,YAAY,aACZ,YAAY,cACZ,YAAY,OACZ,YAAY,YACZ,YAAY,MACZ,QAAQ,KACR,YAAY,MACZ,MAAM,MACN,KAAK,KACL,YAAY,SACZ,YAAY,SACZ,SAAS,MACT,YAAY,eACZ,YAAY,eACZ,YAAY,eACZ,YAAY,eACZ,YAAY,cACZ,YAAY,cACZ,YAAY,iBACZ,YAAY,iBACZ,oBAAoB,cACpB,YAAY,YACZ,oBAAoB,cACpB,YAAY,YACZ,YAAY,aACZ,YAAY,WACZ,YAAY,QACZ,YAAY,KACZ,YAAY,aACZ,YAAY,YACZ,YAAY,YACZ,YAAY,UACZ,cAAc,UACd,YAAY,SACZ,YAAY,qBACZ,YAAY,qBACZ,YAAY,YACZ,YAAY,YACZ,YAAY,WACZ,YAAY,WACZ,YAAY,SACZ,YAAY,WACZ,YAAY,WACZ,YAAY,QACZ,YAAY,WACZ,YAAY,WACZ,YAAY,WACZ,YAAY,WACZ,WAAW,QACX,KAAK,KACL,OAAO,WACP,MAAM,MACN,MAAM,MACN,YAAY,aACZ,YAAY,gBACZ,YAAY,IACZ,KAAK,KACL,KAAK,KACL,YAAY,OACZ,YAAY,OACZ,YAAY,OACZ,YAAY,OACZ,YAAY,QACZ,YAAY,QACZ,YAAY,QACZ,YAAY,QACZ,YAAY,QACZ,YAAY,QACZ,YAAY,OACZ,YAAY,OACZ,YAAY,OACZ,YAAY,OACZ,YAAY,OACZ,YAAY,OACZ,YAAY,mBACZ,YAAY,kBACZ,YAAY,QACZ,YAAY,QACZ,YAAY,QACZ,YAAY,UACZ,YAAY,QACZ,YAAY,QACZ,YAAY,QACZ,YAAY,oBACZ,YAAY,oBACZ,YAAY,qBACZ,YAAY,qBACZ,YAAY,QACZ,YAAY,QACZ,YAAY,YACZ,YAAY,YACZ,YAAY,qBACZ,YAAY,qBACZ,YAAY,mBACZ,YAAY,mBACZ,YAAY,YACZ,YAAY,YACZ,YAAY,YACZ,YAAY,YACZ,YAAY,WACZ,YAAY,WACZ,YAAY,cACZ,KAAK,mBACL,KAAK,mBACL,KAAK,mBACL,KAAK,mBACL,KAAK,mBACL,KAAK,mBACL,YAAY,KACZ,YAAY,MACZ,YAAY,KACZ,YAAY,KACZ,UAAU,WACV,UAAU,UACV,UAAU,WACV,UAAU,WACV,UAAU,WACV,UAAU,WACV,UAAU,aACV,UAAU,UACV,UAAU,SACV,UAAU,WACV,UAAU,WACV,UAAU,UACV,UAAU,WACV,UAAU,YACV,UAAU,QACV,UAAU,QACV,UAAU,aACV,UAAU,QACV,UAAU,QACV,UAAU,SACV,UAAU,WACV,UAAU,WACV,UAAU,SACV,UAAU,aACV,UAAU,aACV,UAAU,SACV,UAAU,SACV,UAAU,SACV,UAAU,SACV,UAAU,SACV,UAAU,WACV,UAAU,UAAA;MAAA,GAAA,MAAA,CAAAtvF,IAAAC,OAAA;AAAA;AAAA,eAAA,eAAAA,IAAA,cAAA,EAAA,OAAA,KAAA,CAAA,GAAAA,GAAA,0BAAA,QC/lCCA,GAAA8oF,0BAAkD,EAC7DuG,GAAG,eACH,UAAK,gBACL,UAAK,eACL,UAAK,gBACL,UAAK,eACL,UAAK,gBACL,UAAK,eACL,UAAK,gBACL,UAAK,eACL,UAAK,YACL,UAAK,YACL,UAAK,IACL,UAAK,QACL,UAAK,cACL,UAAK,OACL,UAAK,MACL,UAAK,KACL,UAAK,OACL,UAAK,MACL,UAAK,MACL,UAAK,MACL,UAAK,KACL,UAAK,KACL,KAAK,SACL,UAAK,SACL,UAAK,SACL,UAAK,SACL,UAAK,UACL,UAAK,UACL,UAAK,KACL,UAAG,OACH,UAAG,UACH,UAAG,UACH,UAAG,UACH,UAAG,IACH,UAAG,SACH,QAAG,KACH,QAAK,KACL,QAAK,KACL,QAAK,QACL,QAAK,KACL,QAAK,KACL,QAAK,UACL,QAAK,SACL,QAAG,KACH,UAAK,iBACL,QAAK,gBACL,KAAK,SACL,KAAK,KACL,MAAM,MACN,MAAM,MACN,KAAK,OACL,UAAK,eACL,UAAK,eACL,UAAK,YACL,UAAG,KACH,UAAG,eACH,KAAK,KACL,KAAK,KACL,MAAM,MACN,MAAM,MACN,KAAK,KACL,UAAK,OACL,UAAK,IACL,UAAK,IACL,UAAK,KACL,MAAM,MACN,MAAM,gBACN,UAAK,WACL,UAAK,aACL,UAAK,aACL,QAAK,SACL,UAAK,mBACL,UAAK,mBACL,UAAK,WACL,QAAK,SACL,KAAK,KACL,UAAK,eACL,MAAM,eACN,KAAK,OACL,UAAK,eACL,QAAK,UACL,UAAK,YACL,UAAK,WACL,UAAK,UACL,UAAK,YACL,UAAK,cACL,UAAK,IACL,UAAK,KACL,UAAK,UACL,KAAK,KACL,KAAK,UACL,UAAK,SACL,UAAK,SACL,UAAK,YACL,UAAK,UACL,UAAK,IACL,UAAK,IACL,UAAK,mBACL,UAAK,WACL,UAAK,IACL,UAAK,IACL,UAAK,WACL,UAAK,WACL,UAAK,YACL,UAAK,UACL,UAAK,SACL,UAAK,SACL,UAAK,WACL,UAAK,WACL,UAAK,SACL,UAAK,SACL,UAAK,sBACL,UAAK,qBACL,UAAK,SACL,UAAK,SACL,UAAK,SACL,UAAK,SACL,UAAK,UACL,UAAK,UACL,UAAK,SACL,UAAK,SACL,UAAK,SACL,UAAK,SACL,UAAK,SACL,UAAK,oBACL,UAAK,IACL,UAAK,oBACL,UAAK,YACL,UAAK,UACL,UAAK,UACL,UAAK,SACL,UAAK,WACL,UAAK,WACL,UAAK,UACL,UAAK,SACL,UAAK,WACL,UAAK,YACL,UAAK,YACL,UAAK,WACL,UAAK,WACL,UAAK,UACL,UAAK,IACL,UAAK,IACL,UAAK,SACL,UAAK,cACL,UAAK,aACL,UAAK,YACL,UAAK,MACL,UAAK,KACL,QAAK,QACL,KAAK,KACL,KAAK,KACL,UAAK,iBACL,UAAK,gBACL,UAAK,iBACL,UAAK,IACL,UAAK,qBACL,UAAK,WACL,UAAK,mBACL,UAAK,mBACL,UAAK,UACL,UAAK,mBACL,UAAK,IACL,UAAK,WACL,UAAK,IACL,UAAK,IACL,UAAK,UACL,UAAK,UACL,UAAK,sCACL,UAAK,IACL,UAAK,sCACL,UAAK,+BACL,UAAK,IACL,UAAK,8BACL,UAAK,sCACL,UAAK,mCACL,UAAK,kCACL,UAAK,kCACL,UAAK,8BACL,UAAK,IACL,UAAK,IACL,UAAK,IACL,UAAK,kCACL,UAAK,iCACL,UAAK,iCACL,UAAK,gCACL,UAAK,uBACL,UAAK,uBACL,UAAK,uBACL,UAAK,uBACL,UAAK,eACL,UAAK,gBACL,UAAK,aACL,UAAK,eACL,UAAK,eACL,UAAK,aACL,UAAK,gBACL,UAAK,eACL,UAAK,eACL,UAAK,aACL,UAAK,gBACL,UAAK,eACL,UAAK,eACL,UAAK,aACL,UAAK,gBACL,UAAK,eACL,UAAK,eACL,UAAK,aACL,UAAK,gBACL,UAAK,eACL,UAAK,iBACL,UAAK,oBACL,UAAK,iBACL,UAAK,oBACL,UAAK,iBACL,UAAK,iBACL,UAAK,oBACL,UAAK,oBACL,UAAK,IACL,UAAK,oBACL,UAAK,iBACL,UAAK,IACL,UAAK,IACL,UAAK,qBACL,UAAK,qBACL,UAAK,qBACL,UAAK,sBACL,UAAK,qBACL,UAAK,gBACL,UAAK,eACL,UAAK,eACL,UAAK,gBACL,UAAK,gBACL,UAAK,eACL,UAAK,eACL,UAAK,eACL,UAAK,SACL,UAAK,SACL,UAAK,eACL,UAAK,aACL,UAAK,gBACL,UAAK,eACL,UAAK,KACL,UAAK,KACL,UAAK,KACL,UAAK,KACL,UAAK,KACL,UAAK,WACL,UAAK,WACL,UAAK,KACL,UAAK,KACL,UAAK,KACL,UAAK,KACL,UAAK,KACL,UAAK,KACL,UAAK,KACL,UAAK,KACL,UAAK,KACL,UAAK,KACL,UAAK,kBACL,UAAK,qBACL,UAAK,sBACL,UAAK,eACL,UAAK,gBACL,UAAK,eACL,UAAK,gBACL,UAAK,eACL,UAAK,gBACL,UAAK,gBACL,UAAK,gBACL,UAAK,gBACL,UAAK,gBACL,UAAK,eACL,UAAK,aACL,UAAK,gBACL,UAAK,gBACL,UAAK,gBACL,UAAK,eACL,UAAK,gBACL,UAAK,eACL,UAAK,eACL,UAAK,aACL,UAAK,aACL,UAAK,eACL,UAAK,gBACL,UAAK,eACL,UAAK,YACL,UAAK,qBACL,UAAK,iBACL,UAAK,gBACL,UAAK,qBACL,UAAK,qBACL,UAAK,qBACL,UAAK,gBACL,UAAK,eACL,UAAK,YACL,UAAK,eACL,UAAK,wBACL,UAAK,oBACL,UAAK,mBACL,UAAK,oBACL,UAAK,gBACL,UAAK,eACL,UAAK,eACL,UAAK,aACL,UAAK,gBACL,UAAK,oBACL,UAAK,gBACL,UAAK,eACL,UAAK,qBACL,UAAK,iBACL,UAAK,gBACL,UAAK,qBACL,UAAK,iBACL,UAAK,gBACL,UAAK,iBACL,UAAK,IACL,UAAK,gBACL,UAAK,iBACL,UAAK,aACL,UAAK,aACL,UAAK,eACL,UAAK,aACL,UAAK,aACL,UAAK,aACL,UAAK,aACL,UAAK,aACL,UAAK,aACL,UAAK,eACL,UAAK,gBACL,UAAK,aACL,UAAK,eACL,UAAK,gBACL,UAAK,eACL,UAAK,eACL,UAAK,gBACL,UAAK,aACL,UAAK,eACL,UAAK,eACL,UAAK,aACL,UAAK,qBACL,UAAK,eACL,UAAK,iBACL,UAAK,gBACL,UAAK,aACL,UAAK,aACL,UAAK,aACL,UAAK,aACL,UAAK,iBACL,UAAK,oBACL,UAAK,eACL,UAAK,gBACL,UAAK,aACL,UAAK,eACL,UAAK,iBACL,UAAK,qBACL,UAAK,gBACL,UAAK,uBACL,UAAK,uBACL,UAAK,oBACL,UAAK,sBACL,UAAK,gBACL,UAAK,oBACL,UAAK,qBACL,UAAK,IACL,UAAK,qBACL,UAAK,qBACL,UAAK,sBACL,UAAK,sBACL,UAAK,oBACL,UAAK,mBACL,UAAK,oBACL,UAAK,qBACL,UAAK,mBACL,UAAK,sBACL,UAAK,qBACL,UAAK,qBACL,UAAK,yBACL,UAAK,qBACL,UAAK,oBACL,UAAK,aACL,UAAK,aACL,UAAK,SACL,UAAK,SACL,UAAK,SACL,UAAK,SACL,UAAK,aACL,UAAK,IACL,UAAK,yBACL,UAAK,oBACL,UAAK,mBACL,UAAK,oBACL,UAAK,mBACL,UAAK,8BACL,UAAK,eACL,UAAK,oBACL,UAAK,aACL,UAAK,mBACL,UAAK,oBACL,UAAK,mBACL,UAAK,eACL,UAAK,uBACL,UAAK,aACL,UAAK,sBACL,UAAK,aACL,UAAK,aACL,UAAK,IACL,UAAK,aACL,UAAK,aACL,UAAK,aACL,UAAK,aACL,UAAK,iBACL,UAAK,oBACL,UAAK,eACL,UAAK,gBACL,UAAK,aACL,UAAK,eACL,OAAO,qBACP,MAAM,oBACN,KAAK,SACL,UAAK,IACL,UAAK,MACL,UAAK,OACL,UAAK,IACL,UAAK,IACL,UAAK,IACL,UAAK,IACL,UAAK,WACL,UAAK,IACL,UAAK,IACL,UAAK,IACL,UAAK,eACL,UAAK,IACL,UAAK,IACL,UAAK,IACL,UAAK,oBACL,UAAK,IACL,UAAK,IACL,UAAK,IACL,UAAK,IACL,UAAK,IACL,UAAK,uBACL,UAAK,qBACL,UAAK,IACL,UAAK,IACL,UAAK,IACL,UAAK,IACL,UAAK,IACL,UAAK,IACL,UAAK,UACL,UAAK,SACL,UAAK,WACL,gBAAM,IACN,UAAK,IACL,UAAK,eACL,UAAK,IACL,UAAK,IACL,UAAK,IACL,UAAK,IACL,UAAK,IACL,UAAK,IACL,UAAK,IACL,UAAK,IACL,UAAK,IACL,UAAK,IACL,UAAK,IACL,UAAK,IACL,UAAK,IACL,UAAK,IACL,UAAK,+BACL,UAAK,+BACL,UAAK,kCACL,UAAK,kCACL,UAAK,+BACL,UAAK,+BACL,UAAK,eACL,UAAK,eACL,UAAK,qBACL,UAAK,qBACL,UAAK,iCACL,UAAK,iCACL,UAAK,2BACL,UAAK,2BACL,UAAK,IACL,UAAK,IACL,UAAK,SACL,UAAK,QACL,UAAK,0CACL,UAAK,0CACL,UAAK,gCACL,UAAK,gCACL,UAAK,mCACL,UAAK,mCACL,UAAK,yBACL,UAAK,yBACL,UAAK,IACL,UAAK,IACL,UAAK,IACL,UAAK,6BACL,UAAK,6BACL,UAAK,gBACL,UAAK,gBACL,UAAK,IACL,UAAK,IACL,UAAK,sBACL,UAAK,qBACL,UAAK,MACL,UAAK,MACL,UAAK,qBACL,gBAAM,kBACN,UAAK,QACL,gBAAM,kBACN,UAAK,QACL,UAAK,4BACL,UAAK,4BACL,UAAK,uBACL,UAAK,uBACL,UAAK,IACL,UAAK,IACL,UAAK,mBACL,UAAK,mBACL,UAAK,IACL,UAAK,IACL,UAAK,IACL,UAAK,IACL,UAAK,IACL,UAAK,IACL,UAAK,4BACL,UAAK,4BACL,UAAK,2BACL,UAAK,4BACL,UAAK,0BACL,UAAK,0BACL,UAAK,gBACL,UAAK,gBACL,UAAK,qCACL,UAAK,2BACL,UAAK,2BACL,UAAK,2BACL,UAAK,IACL,UAAK,IACL,UAAK,IACL,UAAK,IACL,UAAK,IACL,UAAK,IACL,gBAAM,oBACN,UAAK,SACL,gBAAM,oBACN,UAAK,SACL,UAAK,IACL,UAAK,IACL,UAAK,IACL,UAAK,IACL,UAAK,8BACL,UAAK,IACL,UAAK,OACL,UAAK,MACL,UAAK,OACL,UAAK,IACL,UAAK,oBACL,UAAK,mBACL,UAAK,0BACL,UAAK,yBACL,UAAK,mBACL,UAAK,mBACL,UAAK,IACL,UAAK,IACL,UAAK,gBACL,UAAK,IACL,UAAK,IACL,UAAK,kBACL,UAAK,yBACL,UAAK,IACL,UAAK,IACL,UAAK,wBACL,UAAK,uBACL,UAAK,UACL,UAAK,0BACL,UAAK,wBACL,UAAK,yBACL,UAAK,oBACL,UAAK,sBACL,UAAK,IACL,UAAK,IACL,UAAK,IACL,UAAK,SACL,UAAK,WACL,UAAK,IACL,UAAK,IACL,UAAK,IACL,UAAK,IACL,UAAK,gBACL,UAAK,kBACL,UAAK,IACL,UAAK,IACL,UAAK,IACL,UAAK,qBACL,UAAK,qBACL,UAAK,IACL,UAAK,IACL,UAAK,IACL,UAAK,IACL,UAAK,IACL,UAAK,IACL,UAAK,IACL,UAAK,IACL,UAAK,qBACL,UAAK,qBACL,UAAK,IACL,UAAK,IACL,UAAK,IACL,UAAK,cACL,UAAK,cACL,UAAK,IACL,UAAK,IACL,UAAK,IACL,UAAK,IACL,UAAK,IACL,UAAK,mBACL,UAAK,IACL,UAAK,IACL,UAAK,IACL,UAAK,wBACL,UAAK,wBACL,UAAK,kBACL,UAAK,aACL,UAAK,aACL,UAAK,IACL,UAAK,IACL,UAAK,IACL,UAAK,IACL,UAAK,IACL,UAAK,IACL,UAAK,SACL,UAAK,wBACL,UAAK,yBACL,UAAK,uBACL,UAAK,YACL,UAAK,YACL,UAAK,oBACL,UAAK,MACL,UAAK,IACL,UAAK,kBACL,UAAK,YACL,UAAK,IACL,UAAK,KACL,UAAK,kBACL,UAAK,iBACL,UAAK,eACL,UAAK,KACL,UAAK,uBACL,UAAK,IACL,UAAK,eACL,UAAK,SACL,UAAK,IACL,UAAK,IACL,UAAK,IACL,UAAK,IACL,UAAK,IACL,UAAK,aACL,UAAK,IACL,UAAK,IACL,UAAK,IACL,UAAK,aACL,UAAK,kBACL,UAAK,IACL,UAAK,YACL,UAAK,IACL,UAAK,IACL,UAAK,IACL,UAAK,UACL,UAAK,OACL,UAAK,OACL,UAAK,IACL,UAAK,IACL,UAAK,YACL,UAAK,YACL,UAAK,YACL,UAAK,YACL,UAAK,YACL,gBAAM,0BACN,UAAK,qBACL,gBAAM,yBACN,UAAK,oBACL,UAAK,IACL,UAAK,cACL,UAAK,IACL,UAAK,2BACL,UAAK,qBACL,UAAK,IACL,UAAK,mBACL,UAAK,mBACL,UAAK,yBACL,UAAK,uBACL,UAAK,sBACL,UAAK,UACL,UAAK,UACL,UAAK,UACL,UAAK,UACL,UAAK,gBACL,UAAK,WACL,UAAK,YACL,UAAK,IACL,UAAK,gBACL,UAAK,gBACL,UAAK,YACL,UAAK,YACL,UAAK,YACL,UAAK,uBACL,UAAK,uBACL,UAAK,uBACL,UAAK,4BACL,UAAK,gBACL,UAAK,mBACL,UAAK,mBACL,UAAK,mBACL,UAAK,mBACL,UAAK,mBACL,UAAK,mBACL,UAAK,mBACL,UAAK,mBACL,UAAK,IACL,UAAK,IACL,UAAK,IACL,UAAK,IACL,UAAK,cACL,UAAK,mBACL,UAAK,cACL,UAAK,gBACL,UAAK,KACL,UAAK,UACL,UAAK,SACL,UAAK,mBACL,UAAK,aACL,UAAK,oBACL,UAAK,oBACL,UAAK,QACL,UAAK,QACL,UAAK,QACL,UAAK,qBACL,UAAK,qBACL,UAAK,oBACL,UAAK,oBACL,UAAK,eACL,UAAK,QACL,UAAK,QACL,UAAK,QACL,UAAK,WACL,UAAK,KACL,UAAK,6BACL,UAAK,6BACL,UAAK,6BACL,UAAK,6BACL,UAAK,qBACL,UAAK,qBACL,UAAK,qBACL,UAAK,qBACL,UAAK,WACL,UAAK,WACL,UAAK,UACL,UAAK,UACL,UAAK,iBACL,UAAK,iBACL,UAAK,wBACL,UAAK,wBACL,UAAK,OACL,UAAK,SACL,UAAK,SACL,UAAK,YACL,UAAK,YACL,UAAK,WACL,UAAK,SACL,UAAK,WACL,UAAK,UACL,UAAK,SACL,UAAK,UACL,UAAK,aACL,UAAK,cACL,UAAK,mBACL,UAAK,qBACL,UAAK,sBACL,UAAK,sBACL,UAAK,SACL,QAAG,QACH,QAAG,KACH,UAAK,IACL,UAAK,oBACL,UAAK,oBACL,UAAK,mBACL,UAAK,kBACL,UAAK,UACL,UAAK,UACL,UAAK,aACL,UAAK,aACL,UAAK,YACL,UAAK,WACL,UAAK,YACL,UAAK,YACL,UAAK,UACL,UAAK,UACL,UAAK,WACL,UAAK,WACL,UAAK,gBACL,UAAK,gBACL,gBAAM,mBACN,UAAK,cACL,gBAAM,mBACN,UAAK,cACL,UAAK,SACL,UAAK,SACL,UAAK,SACL,gBAAM,kBACN,UAAK,aACL,UAAK,aACL,UAAK,wBACL,UAAK,wBACL,UAAK,mBACL,UAAK,mBACL,UAAK,cACL,UAAK,cACL,UAAK,SACL,UAAK,SACL,UAAK,IACL,UAAK,SACL,gBAAM,cACN,UAAK,SACL,UAAK,oBACL,UAAK,oBACL,UAAK,qBACL,UAAK,KACL,UAAK,KACL,UAAK,MACL,UAAK,WACL,UAAK,WACL,UAAK,WACL,UAAK,WACL,gBAAM,IACN,UAAK,IACL,gBAAM,IACN,UAAK,IACL,UAAK,YACL,UAAK,YACL,UAAK,YACL,gBAAM,SACN,UAAK,KACL,UAAK,SACL,UAAK,WACL,gBAAM,SACN,UAAK,SACL,UAAK,SACL,UAAK,OACL,UAAK,MACL,UAAK,SACL,UAAK,MACL,UAAK,KACL,UAAK,SACL,UAAK,cACL,UAAK,UACL,UAAK,KACL,UAAK,KACL,UAAK,YACL,UAAK,QACL,UAAK,QACL,UAAK,WACL,UAAK,KACL,gBAAM,aACN,UAAK,YACL,gBAAM,aACN,UAAK,YACL,UAAK,eACL,UAAK,eACL,UAAK,SACL,UAAK,YACL,UAAK,gBACL,UAAK,iBACL,UAAK,SACL,UAAK,YACL,UAAK,YACL,UAAK,YACL,UAAK,YACL,UAAK,YACL,UAAK,YACL,UAAK,iBACL,UAAK,iBACL,UAAK,iBACL,UAAK,iBACL,UAAK,aACL,UAAK,aACL,UAAK,aACL,UAAK,kBACL,UAAK,kBACL,UAAK,kBACL,UAAK,kBACL,UAAK,kBACL,UAAK,kBACL,UAAK,kBACL,UAAK,kBACL,UAAK,kBACL,UAAK,kBACL,UAAK,mBACL,UAAK,mBACL,UAAK,mBACL,UAAK,mBACL,UAAK,cACL,UAAK,cACL,UAAK,cACL,UAAK,YACL,UAAK,iBACL,UAAK,YACL,UAAK,iBACL,UAAK,YACL,UAAK,YACL,UAAK,YACL,UAAK,YACL,UAAK,iBACL,UAAK,wBACL,UAAK,uBACL,UAAK,wBACL,UAAK,uBACL,UAAK,SACL,UAAK,SACL,UAAK,MACL,UAAK,MACL,UAAK,eACL,UAAK,IACL,UAAK,YACL,UAAK,YACL,UAAK,YACL,UAAK,mBACL,kBAAkB,IAClB,UAAK,SACL,UAAK,WACL,UAAK,YACL,UAAK,YACL,UAAK,YACL,UAAK,UACL,UAAK,UACL,UAAK,UACL,UAAK,UACL,UAAK,SACL,gBAAM,aACN,UAAK,QACL,gBAAM,aACN,UAAK,QACL,UAAK,eACL,UAAK,eACL,UAAK,WACL,UAAK,WACL,UAAK,eACL,UAAK,WACL,UAAK,eACL,UAAK,eACL,UAAK,WACL,UAAK,MACL,UAAK,WACL,UAAK,WACL,UAAK,WACL,UAAK,UACL,UAAK,gBACL,UAAK,WACL,UAAK,cACL,UAAK,mBACL,UAAK,cACL,UAAK,UACL,UAAK,YACL,MAAM,MACN,KAAK,KACL,MAAM,MACN,MAAM,KACN,MAAM,MACN,MAAM,MACN,MAAM,MACN,MAAM,MACN,UAAK,SACL,UAAK,aACL,UAAK,cACL,UAAK,OACL,UAAK,YACL,UAAK,MACL,KAAK,KACL,UAAK,MACL,MAAM,MACN,KAAK,KACL,UAAK,SACL,UAAK,SACL,MAAM,MACN,UAAK,eACL,UAAK,eACL,UAAK,eACL,UAAK,eACL,UAAK,cACL,UAAK,cACL,UAAK,iBACL,UAAK,iBACL,gBAAM,cACN,UAAK,YACL,gBAAM,cACN,UAAK,YACL,UAAK,aACL,UAAK,WACL,UAAK,QACL,UAAK,KACL,UAAK,aACL,UAAK,YACL,UAAK,YACL,UAAK,UACL,MAAM,UACN,UAAK,SACL,UAAK,qBACL,UAAK,qBACL,UAAK,YACL,UAAK,YACL,UAAK,WACL,UAAK,WACL,UAAK,SACL,UAAK,WACL,UAAK,WACL,UAAK,QACL,UAAK,WACL,UAAK,WACL,UAAK,WACL,UAAK,QACL,KAAK,KACL,OAAO,WACP,MAAM,MACN,MAAM,MACN,UAAK,aACL,UAAK,gBACL,UAAK,eACL,KAAK,KACL,KAAK,KACL,UAAK,OACL,UAAK,OACL,UAAK,OACL,UAAK,OACL,UAAK,QACL,UAAK,QACL,UAAK,QACL,UAAK,QACL,UAAK,QACL,UAAK,QACL,UAAK,OACL,UAAK,OACL,UAAK,OACL,UAAK,OACL,UAAK,OACL,UAAK,OACL,UAAK,mBACL,UAAK,kBACL,UAAK,QACL,UAAK,QACL,UAAK,QACL,UAAK,UACL,UAAK,QACL,UAAK,QACL,UAAK,QACL,UAAK,oBACL,UAAK,oBACL,UAAK,qBACL,UAAK,qBACL,UAAK,QACL,UAAK,QACL,UAAK,QACL,UAAK,QACL,UAAK,mBACL,UAAK,mBACL,UAAK,YACL,UAAK,YACL,UAAK,YACL,UAAK,YACL,UAAK,WACL,UAAK,WACL,UAAK,cACL,KAAK,mBACL,KAAK,mBACL,KAAK,mBACL,KAAK,mBACL,KAAK,mBACL,KAAK,mBACL,UAAK,OACL,UAAK,cACL,UAAK,KACL,UAAK,KACL,QAAG,WACH,QAAG,UACH,QAAG,WACH,QAAG,WACH,QAAG,WACH,QAAG,WACH,UAAG,aACH,QAAG,UACH,QAAG,SACH,QAAG,WACH,QAAG,WACH,QAAG,UACH,QAAG,WACH,QAAG,YACH,QAAG,QACH,QAAG,aACH,QAAG,QACH,QAAG,QACH,QAAG,SACH,QAAG,WACH,QAAG,WACH,QAAG,SACH,QAAG,aACH,QAAG,aACH,QAAG,SACH,QAAG,SACH,QAAG,SACH,QAAG,SACH,QAAG,SACH,QAAG,WACH,QAAG,WACH,QAAG,WACH,UAAK,cACL,UAAK,qBACL,UAAK,sBACL,QAAK,WACL,QAAK,iBACL,QAAG,QACH,QAAG,WACH,UAAK,eACL,UAAK,YACL,UAAK,YACL,QAAK,iBACL,UAAK,WACL,QAAG,UACH,QAAG,iBACH,QAAG,WACH,QAAG,cACH,QAAG,YACH,QAAG,SACH,QAAG,gBACHC,GAAG,KACH,UAAK,UACL,QAAG,KACH,UAAK,WACL,QAAG,WACH,QAAG,SACH,UAAK,QACL,UAAK,QACL,UAAK,QACL,UAAK,QACL,UAAK,QACL,UAAK,QACL,UAAK,YACL,UAAK,KACL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,MAAM,KAAKvI,QAAQ,SAAA,GACxB,QAAG,EAAEuI,MAAM,KAAKvI,QAAQ,SAAA,GACxB,QAAG,EAAEuI,MAAM,KAAKvI,QAAQ,SAAA,GACxB,QAAG,EAAEuI,MAAM,KAAKvI,QAAQ,SAAA,GACxB,QAAG,EAAEuI,MAAM,KAAKvI,QAAQ,SAAA,GACxB,QAAG,EAAEuI,MAAM,KAAKvI,QAAQ,IAAA,GACxB,QAAG,EAAEuI,MAAM,KAAKvI,QAAQ,IAAA,GACxB,QAAG,EAAEuI,MAAM,KAAKvI,QAAQ,OAAA,GACxB,QAAG,EAAEuI,MAAM,KAAKvI,QAAQ,IAAA,GACxB,QAAG,EAAEuI,MAAM,KAAKvI,QAAQ,IAAA,GACxB,QAAG,EAAEuI,MAAM,KAAKvI,QAAQ,OAAA,GACxB,QAAG,EAAEuI,MAAM,KAAKvI,QAAQ,SAAA,GACxB,QAAG,EAAEuI,MAAM,KAAKvI,QAAQ,SAAA,GACxB,QAAG,EAAEuI,MAAM,KAAKvI,QAAQ,IAAA,GACxB,QAAG,EAAEuI,MAAM,KAAKvI,QAAQ,OAAA,GACxB,QAAG,EAAEuI,MAAM,KAAKvI,QAAQ,IAAA,GACxB,QAAG,EAAEuI,MAAM,KAAKvI,QAAQ,OAAA,GACxB,QAAG,EAAEuI,MAAM,KAAKvI,QAAQ,IAAA,GACxB,QAAG,EAAEuI,MAAM,KAAKvI,QAAQ,IAAA,GACxB,QAAG,EAAEuI,MAAM,KAAKvI,QAAQ,OAAA,GACxB,QAAG,EAAEuI,MAAM,KAAKvI,QAAQ,SAAA,GACxB,QAAG,EAAEuI,MAAM,KAAKvI,QAAQ,SAAA,GACxB,QAAG,EAAEuI,MAAM,KAAKvI,QAAQ,IAAA,GACxB,QAAG,EAAEuI,MAAM,KAAKvI,QAAQ,OAAA,GACxB,QAAG,EAAEuI,MAAM,KAAKvI,QAAQ,IAAA,GACxB,QAAG,EAAEuI,MAAM,KAAKvI,QAAQ,OAAA,GACxB,QAAG,EAAEuI,MAAM,KAAKvI,QAAQ,IAAA,GACxB,QAAG,EAAEuI,MAAM,KAAKvI,QAAQ,IAAA,GACxB,QAAG,EAAEuI,MAAM,KAAKvI,QAAQ,IAAA,GACxB,QAAG,EAAEuI,MAAM,KAAKvI,QAAQ,OAAA,GACxB,QAAG,EAAEuI,MAAM,KAAKvI,QAAQ,SAAA,GACxB,QAAG,EAAEuI,MAAM,KAAKvI,QAAQ,SAAA,GACxB,QAAG,EAAEuI,MAAM,KAAKvI,QAAQ,IAAA,GACxB,QAAG,EAAEuI,MAAM,KAAKvI,QAAQ,OAAA,GACxB,QAAG,EAAEuI,MAAM,KAAKvI,QAAQ,SAAA,GACxB,QAAG,EAAEuI,MAAM,KAAKvI,QAAQ,SAAA,GACxB,QAAG,EAAEuI,MAAM,KAAKvI,QAAQ,SAAA,GACxB,QAAG,EAAEuI,MAAM,KAAKvI,QAAQ,IAAA,GACxB,QAAG,EAAEuI,MAAM,KAAKvI,QAAQ,OAAA,GACxB,QAAG,EAAEuI,MAAM,KAAKvI,QAAQ,IAAA,GACxB,QAAG,EAAEuI,MAAM,KAAKvI,QAAQ,IAAA,GACxB,QAAG,EAAEuI,MAAM,KAAKvI,QAAQ,OAAA,GACxB,QAAG,EAAEuI,MAAM,KAAKvI,QAAQ,SAAA,GACxB,QAAG,EAAEuI,MAAM,KAAKvI,QAAQ,SAAA,GACxB,QAAG,EAAEuI,MAAM,KAAKvI,QAAQ,OAAA,GACxB,QAAG,EAAEuI,MAAM,KAAKvI,QAAQ,OAAA,GACxB,QAAG,EAAEuI,MAAM,KAAKvI,QAAQ,OAAA,GACxB,QAAG,EAAEuI,MAAM,KAAKvI,QAAQ,OAAA,GACxB,QAAG,EAAEuI,MAAM,KAAKvI,QAAQ,IAAA,GACxB,QAAG,EAAEuI,MAAM,KAAKvI,QAAQ,OAAA,GACxB,QAAG,EAAEuI,MAAM,KAAKvI,QAAQ,IAAA,GACxB,QAAG,EAAEuI,MAAM,KAAKvI,QAAQ,OAAA,GACxB,QAAG,EAAEuI,MAAM,KAAKvI,QAAQ,IAAA,GACxB,QAAG,EAAEuI,MAAM,KAAKvI,QAAQ,IAAA,GACxB,QAAG,EAAEuI,MAAM,KAAKvI,QAAQ,OAAA,GACxB,QAAG,EAAEuI,MAAM,KAAKvI,QAAQ,IAAA,GACxB,QAAG,EAAEuI,MAAM,KAAKvI,QAAQ,OAAA,GACxB,QAAG,EAAEuI,MAAM,KAAKvI,QAAQ,IAAA,GACxB,QAAG,EAAEuI,MAAM,KAAKvI,QAAQ,IAAA,GACxB,QAAG,EAAEuI,MAAM,KAAKvI,QAAQ,IAAA,GACxB,QAAG,EAAEuI,MAAM,KAAKvI,QAAQ,OAAA,GACxB,QAAG,EAAEuI,MAAM,KAAKvI,QAAQ,SAAA,GACxB,QAAG,EAAEuI,MAAM,KAAKvI,QAAQ,SAAA,GACxB,QAAG,EAAEuI,MAAM,KAAKvI,QAAQ,SAAA,GACxB,QAAG,EAAEuI,MAAM,KAAKvI,QAAQ,SAAA,GACxB,QAAG,EAAEuI,MAAM,KAAKvI,QAAQ,SAAA,GACxB,QAAG,EAAEuI,MAAM,KAAKvI,QAAQ,SAAA,GACxB,QAAG,EAAEuI,MAAM,KAAKvI,QAAQ,SAAA,GACxB,QAAG,EAAEuI,MAAM,KAAKvI,QAAQ,IAAA,GACxB,QAAG,EAAEuI,MAAM,KAAKvI,QAAQ,IAAA,GACxB,QAAG,EAAEuI,MAAM,KAAKvI,QAAQ,OAAA,GACxB,QAAG,EAAEuI,MAAM,KAAKvI,QAAQ,IAAA,GACxB,QAAG,EAAEuI,MAAM,KAAKvI,QAAQ,SAAA,GACxB,QAAG,EAAEuI,MAAM,KAAKvI,QAAQ,IAAA,GACxB,QAAG,EAAEuI,MAAM,KAAKvI,QAAQ,OAAA,GACxB,QAAG,EAAEuI,MAAM,KAAKvI,QAAQ,SAAA,GACxB,QAAG,EAAEuI,MAAM,KAAKvI,QAAQ,IAAA,GACxB,QAAG,EAAEuI,MAAM,KAAKvI,QAAQ,OAAA,GACxB,QAAG,EAAEuI,MAAM,KAAKvI,QAAQ,IAAA,GACxB,QAAG,EAAEuI,MAAM,KAAKvI,QAAQ,OAAA,GACxB,QAAG,EAAEuI,MAAM,KAAKvI,QAAQ,IAAA,GACxB,QAAG,EAAEuI,MAAM,KAAKvI,QAAQ,IAAA,GACxB,QAAG,EAAEuI,MAAM,KAAKvI,QAAQ,OAAA,GACxB,QAAG,EAAEuI,MAAM,KAAKvI,QAAQ,SAAA,GACxB,QAAG,EAAEuI,MAAM,KAAKvI,QAAQ,SAAA,GACxB,QAAG,EAAEuI,MAAM,KAAKvI,QAAQ,IAAA,GACxB,QAAG,EAAEuI,MAAM,KAAKvI,QAAQ,OAAA,GACxB,QAAG,EAAEuI,MAAM,KAAKvI,QAAQ,IAAA,GACxB,QAAG,EAAEuI,MAAM,KAAKvI,QAAQ,OAAA,GACxB,QAAG,EAAEuI,MAAM,KAAKvI,QAAQ,IAAA,GACxB,QAAG,EAAEuI,MAAM,KAAKvI,QAAQ,IAAA,GACxB,QAAG,EAAEuI,MAAM,KAAKvI,QAAQ,IAAA,GACxB,QAAG,EAAEuI,MAAM,KAAKvI,QAAQ,OAAA,GACxB,QAAG,EAAEuI,MAAM,KAAKvI,QAAQ,SAAA,GACxB,QAAG,EAAEuI,MAAM,KAAKvI,QAAQ,SAAA,GACxB,QAAG,EAAEuI,MAAM,KAAKvI,QAAQ,IAAA,GACxB,QAAG,EAAEuI,MAAM,KAAKvI,QAAQ,OAAA,GACxB,QAAG,EAAEuI,MAAM,KAAKvI,QAAQ,SAAA,GACxB,QAAG,EAAEuI,MAAM,KAAKvI,QAAQ,SAAA,GACxB,QAAG,EAAEuI,MAAM,KAAKvI,QAAQ,SAAA,GACxB,QAAG,EAAEuI,MAAM,KAAKvI,QAAQ,IAAA,GACxB,QAAG,EAAEuI,MAAM,KAAKvI,QAAQ,OAAA,GACxB,QAAG,EAAEuI,MAAM,KAAKvI,QAAQ,IAAA,GACxB,QAAG,EAAEuI,MAAM,KAAKvI,QAAQ,IAAA,GACxB,QAAG,EAAEuI,MAAM,KAAKvI,QAAQ,OAAA,GACxB,QAAG,EAAEuI,MAAM,KAAKvI,QAAQ,SAAA,GACxB,QAAG,EAAEuI,MAAM,KAAKvI,QAAQ,SAAA,GACxB,QAAG,EAAEuI,MAAM,KAAKvI,QAAQ,OAAA,GACxB,QAAG,EAAEuI,MAAM,KAAKvI,QAAQ,IAAA,GACxB,QAAG,EAAEuI,MAAM,KAAKvI,QAAQ,OAAA,GACxB,QAAG,EAAEuI,MAAM,KAAKvI,QAAQ,IAAA,GACxB,QAAG,EAAEuI,MAAM,KAAKvI,QAAQ,OAAA,GACxB,QAAG,EAAEuI,MAAM,KAAKvI,QAAQ,IAAA,GACxB,QAAG,EAAEuI,MAAM,KAAKvI,QAAQ,IAAA,GACxB,QAAG,EAAEuI,MAAM,KAAKvI,QAAQ,OAAA,GACxB,QAAG,EAAEuI,MAAM,KAAKvI,QAAQ,IAAA,GACxB,QAAG,EAAEuI,MAAM,KAAKvI,QAAQ,IAAA,GACxB,QAAG,EAAEuI,MAAM,KAAKvI,QAAQ,IAAA,GACxB,QAAG,EAAEuI,MAAM,KAAKvI,QAAQ,SAAA,GACxB,QAAG,EAAEuI,MAAM,KAAKvI,QAAQ,SAAA,GACxB,QAAG,EAAEuI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SAAS,SAAS,GAAG,GAAG,OAAO;AAAA,IACxC,QAAQ,CAAC,SAAS,SAAS,GAAG,GAAG,OAAO;AAAA,IACxC,QAAQ,CAAC,SAAS,SAAS,GAAG,GAAG,OAAO;AAAA,IACxC,QAAQ,CAAC,SAAS,SAAS,GAAG,GAAG,OAAO;AAAA,IACxC,QAAQ,CAAC,SAAS,SAAS,GAAG,GAAG,OAAO;AAAA,IACxC,QAAQ,CAAC,SAAS,SAAS,GAAG,GAAG,OAAO;AAAA,IACxC,QAAQ,CAAC,SAAS,SAAS,GAAG,GAAG,GAAG;AAAA,IACpC,QAAQ,CAAC,SAAS,SAAS,GAAG,GAAG,OAAO;AAAA,IACxC,QAAQ,CAAC,SAAS,SAAS,GAAG,GAAG,OAAO;AAAA,IACxC,QAAQ,CAAC,SAAS,SAAS,GAAG,GAAG,OAAO;AAAA,IACxC,QAAQ,CAAC,SAAS,SAAS,GAAG,GAAG,OAAO;AAAA,IACxC,QAAQ,CAAC,SAAS,SAAS,GAAG,GAAG,OAAO;AAAA,IACxC,QAAQ,CAAC,SAAS,SAAS,GAAG,GAAG,OAAO;AAAA,IACxC,QAAQ,CAAC,QAAQ,OAAO,GAAG,GAAG,OAAO;AAAA,IACrC,QAAQ,CAAC,QAAQ,OAAO,GAAG,GAAG,OAAO;AAAA,IACrC,QAAQ,CAAC,SAAS,SAAS,GAAG,GAAG,OAAO;AAAA,IACxC,QAAQ,CAAC,SAAS,SAAS,GAAG,GAAG,OAAO;AAAA,IACxC,QAAQ,CAAC,SAAS,SAAS,GAAG,GAAG,OAAO;AAAA,IACxC,QAAQ,CAAC,SAAS,SAAS,GAAG,GAAG,OAAO;AAAA,IACxC,QAAQ,CAAC,SAAS,SAAS,GAAG,GAAG,OAAO;AAAA,IACxC,QAAQ,CAAC,SAAS,SAAS,GAAG,GAAG,OAAO;AAAA,IACxC,QAAQ,CAAC,SAAS,SAAS,GAAG,GAAG,OAAO;AAAA,IACxC,QAAQ,CAAC,SAAS,SAAS,GAAG,GAAG,OAAO;AAAA,IACxC,QAAQ,CAAC,SAAS,SAAS,GAAG,GAAG,OAAO;AAAA,IACxC,QAAQ,CAAC,SAAS,SAAS,GAAG,GAAG,OAAO;AAAA,IACxC,QAAQ,CAAC,SAAS,SAAS,GAAG,GAAG,OAAO;AAAA,IACxC,QAAQ,CAAC,SAAS,SAAS,GAAG,GAAG,OAAO;AAAA,IACxC,QAAQ,CAAC,SAAS,SAAS,GAAG,GAAG,OAAO;AAAA,IACxC,QAAQ,CAAC,SAAS,SAAS,GAAG,GAAG,OAAO;AAAA,IACxC,QAAQ,CAAC,SAAS,SAAS,GAAG,GAAG,OAAO;AAAA,IACxC,QAAQ,CAAC,GAAG,OAAO,GAAG,GAAG,OAAO;AAAA,IAChC,QAAQ,CAAC,GAAG,OAAO,GAAG,GAAG,OAAO;AAAA,IAChC,QAAQ,CAAC,GAAG,OAAO,GAAG,GAAG,OAAO;AAAA,IAChC,QAAQ,CAAC,GAAG,OAAO,GAAG,GAAG,OAAO;AAAA,IAChC,QAAQ,CAAC,GAAG,SAAS,GAAG,GAAG,OAAO;AAAA,IAClC,QAAQ,CAAC,GAAG,SAAS,GAAG,GAAG,OAAO;AAAA,IAClC,QAAQ,CAAC,GAAG,SAAS,GAAG,GAAG,OAAO;AAAA,IAClC,QAAQ,CAAC,GAAG,SAAS,GAAG,GAAG,OAAO;AAAA,IAClC,QAAQ,CAAC,GAAG,SAAS,GAAG,GAAG,OAAO;AAAA,IAClC,QAAQ,CAAC,GAAG,SAAS,GAAG,GAAG,OAAO;AAAA,IAClC,QAAQ,CAAC,GAAG,SAAS,GAAG,GAAG,OAAO;AAAA,IAClC,QAAQ,CAAC,SAAS,SAAS,GAAG,GAAG,OAAO;AAAA,IACxC,QAAQ,CAAC,SAAS,SAAS,GAAG,GAAG,OAAO;AAAA,IACxC,QAAQ,CAAC,SAAS,SAAS,GAAG,GAAG,OAAO;AAAA,IACxC,QAAQ,CAAC,SAAS,SAAS,GAAG,GAAG,OAAO;AAAA,IACxC,QAAQ,CAAC,GAAG,SAAS,GAAG,GAAG,OAAO;AAAA,IAClC,QAAQ,CAAC,SAAS,SAAS,GAAG,GAAG,OAAO;AAAA,IACxC,QAAQ,CAAC,SAAS,SAAS,GAAG,GAAG,OAAO;AAAA,IACxC,QAAQ,CAAC,SAAS,SAAS,GAAG,GAAG,OAAO;AAAA,IACxC,QAAQ,CAAC,GAAG,SAAS,GAAG,GAAG,OAAO;AAAA,IAClC,QAAQ,CAAC,SAAS,SAAS,GAAG,GAAG,OAAO;AAAA,IACxC,QAAQ,CAAC,SAAS,SAAS,GAAG,GAAG,OAAO;AAAA,IACxC,QAAQ,CAAC,SAAS,SAA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AAG,OAAO;AAAA,IACzC,SAAS,CAAC,SAAS,SAAS,GAAG,GAAG,OAAO;AAAA,IACzC,SAAS,CAAC,SAAS,SAAS,GAAG,GAAG,OAAO;AAAA,IACzC,SAAS,CAAC,SAAS,SAAS,GAAG,GAAG,OAAO;AAAA,IACzC,SAAS,CAAC,SAAS,SAAS,GAAG,GAAG,OAAO;AAAA,IACzC,SAAS,CAAC,SAAS,SAAS,GAAG,GAAG,OAAO;AAAA,IACzC,SAAS,CAAC,SAAS,SAAS,GAAG,GAAG,OAAO;AAAA,IACzC,SAAS,CAAC,SAAS,SAAS,GAAG,GAAG,OAAO;AAAA,IACzC,SAAS,CAAC,SAAS,SAAS,GAAG,GAAG,OAAO;AAAA,IACzC,SAAS,CAAC,SAAS,SAAS,GAAG,GAAG,OAAO;AAAA,IACzC,SAAS,CAAC,SAAS,SAAS,GAAG,GAAG,OAAO;AAAA,IACzC,SAAS,CAAC,SAAS,SAAS,GAAG,GAAG,OAAO;AAAA,IACzC,SAAS,CAAC,SAAS,SAAS,GAAG,GAAG,OAAO;AAAA,IACzC,SAAS,CAAC,SAAS,SAAS,GAAG,GAAG,OAAO;AAAA,IACzC,SAAS,CAAC,SAAS,SAAS,GAAG,GAAG,OAAO;AAAA,IACzC,SAAS,CAAC,SAAS,SAAS,GAAG,GAAG,OAAO;AAAA,IACzC,SAAS,CAAC,SAAS,SAAS,GAAG,GAAG,OAAO;AAAA,IACzC,SAAS,CAAC,SAAS,SAAS,GAAG,GAAG,OAAO;AAAA,IACzC,SAAS,CAAC,SAAS,SAAS,GAAG,GAAG,OAAO;AAAA,IACzC,SAAS,CAAC,SAAS,SAAS,GAAG,GAAG,OAAO;AAAA,IACzC,SAAS,CAAC,SAAS,SAAS,GAAG,GAAG,OAAO;AAAA,IACzC,SAAS,CAAC,SAAS,SAAS,GAAG,GAAG,OAAO;AAAA,IACzC,SAAS,CAAC,SAAS,SAAS,GAAG,GAAG,OAAO;AAAA,IACzC,SAAS,CAAC,SAAS,SAAS,GAAG,GAAG,OAAO;AAAA,IACzC,SAAS,CAAC,SAAS,SAAS,GAAG,GAAG,OAAO;AAAA,IACzC,SAAS,CAAC,GAAG,SAAS,SAAS,GAAG,OAAO;AAAA,IACzC,SAAS,CAAC,SAAS,SAAS,GAAG,GAAG,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GAAG,GAAG,KAAK;AAAA,IAC/B,OAAO,CAAC,SAAS,SAAS,GAAG,GAAG,KAAK;AAAA,IACrC,OAAO,CAAC,GAAG,SAAS,GAAG,GAAG,KAAK;AAAA,IAC/B,OAAO,CAAC,GAAG,SAAS,GAAG,GAAG,KAAK;AAAA,IAC/B,OAAO,CAAC,SAAS,SAAS,GAAG,GAAG,KAAK;AAAA,IACrC,OAAO,CAAC,GAAG,SAAS,GAAG,GAAG,KAAK;AAAA,IAC/B,OAAO,CAAC,GAAG,SAAS,GAAG,GAAG,KAAK;AAAA,IAC/B,OAAO,CAAC,GAAG,SAAS,GAAG,GAAG,KAAK;AAAA,IAC/B,OAAO,CAAC,GAAG,SAAS,GAAG,GAAG,KAAK;AAAA,IAC/B,OAAO,CAAC,GAAG,SAAS,GAAG,GAAG,KAAK;AAAA,IAC/B,OAAO,CAAC,SAAS,SAAS,GAAG,GAAG,KAAK;AAAA,IACrC,OAAO,CAAC,SAAS,SAAS,GAAG,GAAG,KAAK;AAAA,IACrC,OAAO,CAAC,GAAG,SAAS,GAAG,GAAG,KAAK;AAAA,IAC/B,OAAO,CAAC,GAAG,SAAS,GAAG,GAAG,KAAK;AAAA,IAC/B,OAAO,CAAC,GAAG,SAAS,GAAG,GAAG,KAAK;AAAA,IAC/B,OAAO,CAAC,GAAG,SAAS,GAAG,GAAG,KAAK;AAAA,IAC/B,OAAO,CAAC,GAAG,SAAS,GAAG,GAAG,KAAK;AAAA,IAC/B,OAAO,CAAC,GAAG,SAAS,GAAG,GAAG,KAAK;AAAA,IAC/B,OAAO,CAAC,GAAG,SAAS,GAAG,GAAG,KAAK;AAAA,IAC/B,OAAO,CAAC,SAAS,SAAS,GAAG,GAAG,KAAK;AAAA,IACrC,OAAO,CAAC,GAAG,SAAS,GAAG,GAAG,KAAK;AAAA,IAC/B,OAAO,CAAC,SAAS,SAAS,GAAG,GAAG,KAAK;AAAA,IACrC,OAAO,CAAC,SAAS,SAAS,GAAG,GAAG,KAAK;AAAA,IACrC,OAAO,CAAC,SAAS,SAAS,GAAG,GAAG,KAAK;AAAA,IACrC,OAAO,CAAC,GAAG,SAAS,GAAG,GAAG,KAAK;AAAA,IAC/B,OAAO,CAAC,GAAG,SAAS,GAAG,GAAG,KAAK;AAAA,IAC/B,OAAO,CAAC,GAAG,GAAG,GAAG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",
  "names": ["root", "factory", "exports", "module", "define", "amd", "this", "e", "t", "freeze", "object", "oc", "Object", "MIME_TYPE", "HTML", "isHTML", "value", "XML_APPLICATION", "XML_TEXT", "XML_XHTML_APPLICATION", "XML_SVG_IMAGE", "NAMESPACE", "uri", "SVG", "XML", "XMLNS", "assign", "target", "source", "TypeError", "key", "prototype", "hasOwnProperty", "call", "find", "list", "predicate", "ac", "Array", "i", "length", "item", "conventions", "r", "dom", "entities", "sax", "DOMImplementation", "ParseError", "XMLReader", "normalizeLineEndings", "input", "replace", "DOMParser", "options", "locator", "DOMHandler", "cdata", "position", "node", "lineNumber", "columnNumber", "_locator", "l", "systemId", "_toString", "chars", "start", "substr", "java", "lang", "String", "appendElement", "hander", "currentElement", "appendChild", "doc", "parseFromString", "mimeType", "domBuilder", "errorHandler", "defaultNSMap", "xmlns", "test", "entityMap", "HTML_ENTITIES", "XML_ENTITIES", "setDocumentLocator", "errorImpl", "isCallback", "Function", "build", "fn", "msg", "xml", "normalize", "parse", "error", "startDocument", "createDocument", "documentURI", "startElement", "namespaceURI", "localName", "qName", "attrs", "el", "createElementNS", "len", "getURI", "getValue", "attr", "getQName", "createAttributeNS", "getLocator", "nodeValue", "setAttributeNode", "endElement", "current", "tagName", "parentNode", "startPrefixMapping", "prefix", "endPrefixMapping", "processingInstruction", "data", "ins", "createProcessingInstruction", "ignorableWhitespace", "ch", "characters", "apply", "arguments", "charNode", "createCDATASection", "createTextNode", "skippedEntity", "name", "endDocument", "comment", "comm", "createComment", "startCDATA", "endCDATA", "startDTD", "publicId", "impl", "implementation", "createDocumentType", "dt", "doctype", "warning", "console", "warn", "fatalError", "notEmptyString", "orderedSetReducer", "element", "toOrderedSet", "split", "filter", "keys", "reduce", "copy", "src", "dest", "p", "_extends", "Class", "Super", "pt", "constructor", "NodeType", "ELEMENT_NODE", "ATTRIBUTE_NODE", "TEXT_NODE", "CDATA_SECTION_NODE", "ENTITY_REFERENCE_NODE", "ENTITY_NODE", "PROCESSING_INSTRUCTION_NODE", "COMMENT_NODE", "DOCUMENT_NODE", "DOCUMENT_TYPE_NODE", "DOCUMENT_FRAGMENT_NODE", "NOTATION_NODE", "ExceptionCode", "ExceptionMessage", "HIERARCHY_REQUEST_ERR", "INDEX_SIZE_ERR", "DOMSTRING_SIZE_ERR", "NOT_FOUND_ERR", "WRONG_DOCUMENT_ERR", "INVALID_CHARACTER_ERR", "NO_DATA_ALLOWED_ERR", "NO_MODIFICATION_ALLOWED_ERR", "INUSE_ATTRIBUTE_ERR", "NOT_SUPPORTED_ERR", "DOMException", "code", "message", "Error", "captureStackTrace", "NodeList", "LiveNodeList", "refresh", "_node", "_refresh", "_updateLiveList", "inc", "_inc", "ownerDocument", "ls", "__set__", "$$length", "NamedNodeMap", "_findNodeIndex", "_addNamedNode", "newAttr", "oldAttr", "ownerElement", "_onRemoveAttribute", "_nsMap", "_removeNamedNode", "lastIndex", "Node", "_xmlEncoder", "c", "charCodeAt", "_visitNode", "callback", "firstChild", "nextSibling", "Document", "remove", "_onUpdateChild", "newChild", "cs", "childNodes", "child", "_removeChild", "previous", "previousSibling", "next", "lastChild", "isDocTypeNode", "nodeType", "isElementNode", "isTextNode", "isElementInsertionPossible", "parentChildNodes", "docTypeNode", "indexOf", "isElementReplacementPossible", "assertPreInsertionValidityInDocument", "parent", "nodeChildNodes", "nodeChildElements", "parentElementChild", "assertPreReplacementValidityInDocument", "_insertBefore", "_inDocumentAssertion", "cp", "removeChild", "newFirst", "newLast", "pre", "Element", "Attr", "CharacterData", "Text", "Comment", "CDATASection", "DocumentType", "Notation", "Entity", "EntityReference", "DocumentFragment", "ProcessingInstruction", "XMLSerializer", "nodeSerializeToString", "isHtml", "nodeFilter", "buf", "refNode", "documentElement", "lookupPrefix", "visibleNamespaces", "namespace", "serializeToString", "join", "needNamespaceDefine", "ns", "addSerializedAttribute", "qualifiedName", "push", "attributes", "nodeName", "prefixedNodeName", "defaultNS", "ai", "nsi", "slice", "pubid", "sysid", "sub", "internalSubset", "importNode", "deep", "node2", "cloneNode", "n", "v", "attrs2", "_ownerElement", "INVALID_STATE_ERR", "SYNTAX_ERR", "INVALID_MODIFICATION_ERR", "NAMESPACE_ERR", "INVALID_ACCESS_ERR", "index", "toString", "getNamedItem", "setNamedItem", "setNamedItemNS", "getNamedItemNS", "removeNamedItem", "removeNamedItemNS", "hasFeature", "feature", "version", "insertBefore", "refChild", "replaceChild", "oldChild", "hasChildNodes", "appendData", "isSupported", "hasAttributes", "map", "lookupNamespaceURI", "isDefaultNamespace", "importedNode", "getElementById", "id", "rtv", "getAttribute", "getElementsByClassName", "classNames", "classNamesSet", "base", "nodeClassNames", "matches", "nodeClassNamesSet", "every", "createElement", "createDocumentFragment", "createAttribute", "specified", "createEntityReference", "pl", "hasAttribute", "getAttributeNode", "setAttribute", "removeAttribute", "removeAttributeNode", "setAttributeNodeNS", "removeAttributeNS", "old", "getAttributeNodeNS", "hasAttributeNS", "getAttributeNS", "setAttributeNS", "getElementsByTagName", "getElementsByTagNameNS", "substringData", "offset", "count", "substring", "text", "insertData", "replaceData", "deleteData", "splitText", "newText", "newNode", "defineProperty", "getTextContent", "get", "set", "amp", "apos", "gt", "lt", "quot", "Aacute", "aacute", "Abreve", "abreve", "acd", "acE", "Acirc", "acirc", "acute", "Acy", "acy", "AElig", "aelig", "af", "Afr", "afr", "Agrave", "agrave", "alefsym", "aleph", "Alpha", "alpha", "Amacr", "amacr", "amalg", "AMP", "And", "and", "andand", "andd", "andslope", "andv", "ang", "ange", "angle", "angmsd", "angmsdaa", "angmsdab", "angmsdac", "angmsdad", "angmsdae", "angmsdaf", "angmsdag", "angmsdah", "angrt", "angrtvb", "angrtvbd", "angsph", "angst", "angzarr", "Aogon", "aogon", "Aopf", "aopf", "ap", "apacir", "apE", "ape", "apid", "ApplyFunction", "approx", "approxeq", "Aring", "aring", "Ascr", "ascr", "Assign", "ast", "asymp", "asympeq", "Atilde", "atilde", "Auml", "auml", "awconint", "awint", "backcong", "backepsilon", "backprime", "backsim", "backsimeq", "Backslash", "Barv", "barvee", "Barwed", "barwed", "barwedge", "bbrk", "bbrktbrk", "bcong", "Bcy", "bcy", "bdquo", "becaus", "Because", "because", "bemptyv", "bepsi", "bernou", "Bernoullis", "Beta", "beta", "beth", "between", "Bfr", "bfr", "bigcap", "bigcirc", "bigcup", "bigodot", "bigoplus", "bigotimes", "bigsqcup", "bigstar", "bigtriangledown", "bigtriangleup", "biguplus", "bigvee", "bigwedge", "bkarow", "blacklozenge", "blacksquare", "blacktriangle", "blacktriangledown", "blacktriangleleft", "blacktriangleright", "blank", "blk12", "blk14", "blk34", "block", "bne", "bnequiv", "bNot", "bnot", "Bopf", "bopf", "bot", "bottom", "bowtie", "boxbox", "boxDL", "boxDl", "boxdL", "boxdl", "boxDR", "boxDr", "boxdR", "boxdr", "boxH", "boxh", "boxHD", "boxHd", "boxhD", "boxhd", "boxHU", "boxHu", "boxhU", "boxhu", "boxminus", "boxplus", "boxtimes", "boxUL", "boxUl", "boxuL", "boxul", "boxUR", "boxUr", "boxuR", "boxur", "boxV", "boxv", "boxVH", "boxVh", "boxvH", "boxvh", "boxVL", "boxVl", "boxvL", "boxvl", "boxVR", "boxVr", "boxvR", "boxvr", "bprime", "Breve", "breve", "brvbar", "Bscr", "bscr", "bsemi", "bsim", "bsime", "bsol", "bsolb", "bsolhsub", "bull", "bullet", "bump", "bumpE", "bumpe", "Bumpeq", "bumpeq", "Cacute", "cacute", "Cap", "cap", "capand", "capbrcup", "capcap", "capcup", "capdot", "CapitalDifferentialD", "caps", "caret", "caron", "Cayleys", "ccaps", "Ccaron", "ccaron", "Ccedil", "ccedil", "Ccirc", "ccirc", "Cconint", "ccups", "ccupssm", "Cdot", "cdot", "cedil", "Cedilla", "cemptyv", "cent", "CenterDot", "centerdot", "Cfr", "cfr", "CHcy", "chcy", "check", "checkmark", "Chi", "chi", "cir", "circ", "circeq", "circlearrowleft", "circlearrowright", "circledast", "circledcirc", "circleddash", "CircleDot", "circledR", "circledS", "CircleMinus", "CirclePlus", "CircleTimes", "cirE", "cire", "cirfnint", "cirmid", "cirscir", "ClockwiseContourIntegral", "CloseCurlyDoubleQuote", "CloseCurlyQuote", "clubs", "clubsuit", "Colon", "colon", "Colone", "colone", "coloneq", "comma", "commat", "comp", "compfn", "complement", "complexes", "cong", "congdot", "Congruent", "Conint", "conint", "ContourIntegral", "Copf", "copf", "coprod", "Coproduct", "COPY", "copysr", "CounterClockwiseContourIntegral", "crarr", "Cross", "cross", "Cscr", "cscr", "csub", "csube", "csup", "csupe", "ctdot", "cudarrl", "cudarrr", "cuepr", "cuesc", "cularr", "cularrp", "Cup", "cup", "cupbrcap", "CupCap", "cupcap", "cupcup", "cupdot", "cupor", "cups", "curarr", "curarrm", "curlyeqprec", "curlyeqsucc", "curlyvee", "curlywedge", "curren", "curvearrowleft", "curvearrowright", "cuvee", "cuwed", "cwconint", "cwint", "cylcty", "Dagger", "dagger", "daleth", "Darr", "dArr", "darr", "dash", "Dashv", "dashv", "dbkarow", "dblac", "Dcaron", "dcaron", "Dcy", "dcy", "DD", "dd", "ddagger", "ddarr", "DDotrahd", "ddotseq", "deg", "Del", "Delta", "delta", "demptyv", "dfisht", "Dfr", "dfr", "dHar", "dharl", "dharr", "DiacriticalAcute", "DiacriticalDot", "DiacriticalDoubleAcute", "DiacriticalGrave", "DiacriticalTilde", "diam", "Diamond", "diamond", "diamondsuit", "diams", "die", "DifferentialD", "digamma", "disin", "div", "divide", "divideontimes", "divonx", "DJcy", "djcy", "dlcorn", "dlcrop", "dollar", "Dopf", "dopf", "Dot", "dot", "DotDot", "doteq", "doteqdot", "DotEqual", "dotminus", "dotplus", "dotsquare", "doublebarwedge", "DoubleContourIntegral", "DoubleDot", "DoubleDownArrow", "DoubleLeftArrow", "DoubleLeftRightArrow", "DoubleLeftTee", "DoubleLongLeftArrow", "DoubleLongLeftRightArrow", "DoubleLongRightArrow", "DoubleRightArrow", "DoubleRightTee", "DoubleUpArrow", "DoubleUpDownArrow", "DoubleVerticalBar", "DownArrow", "Downarrow", "downarrow", "DownArrowBar", "DownArrowUpArrow", "DownBreve", "downdownarrows", "downharpoonleft", "downharpoonright", "DownLeftRightVector", "DownLeftTeeVector", "DownLeftVector", "DownLeftVectorBar", "DownRightTeeVector", "DownRightVector", "DownRightVectorBar", "DownTee", "DownTeeArrow", "drbkarow", "drcorn", "drcrop", "Dscr", "dscr", "DScy", "dscy", "dsol", "Dstrok", "dstrok", "dtdot", "dtri", "dtrif", "duarr", "duhar", "dwangle", "DZcy", "dzcy", "dzigrarr", "Eacute", "eacute", "easter", "Ecaron", "ecaron", "ecir", "Ecirc", "ecirc", "ecolon", "Ecy", "ecy", "eDDot", "Edot", "eDot", "edot", "ee", "efDot", "Efr", "efr", "eg", "Egrave", "egrave", "egs", "egsdot", "elinters", "ell", "els", "elsdot", "Emacr", "emacr", "empty", "emptyset", "EmptySmallSquare", "emptyv", "EmptyVerySmallSquare", "emsp", "emsp13", "emsp14", "ENG", "eng", "ensp", "Eogon", "eogon", "Eopf", "eopf", "epar", "eparsl", "eplus", "epsi", "Epsilon", "epsilon", "epsiv", "eqcirc", "eqcolon", "eqsim", "eqslantgtr", "eqslantless", "Equal", "equals", "EqualTilde", "equest", "Equilibrium", "equiv", "equivDD", "eqvparsl", "erarr", "erDot", "Escr", "escr", "esdot", "Esim", "esim", "Eta", "eta", "ETH", "eth", "Euml", "euml", "euro", "excl", "exist", "Exists", "expectation", "ExponentialE", "exponentiale", "fallingdotseq", "Fcy", "fcy", "female", "ffilig", "fflig", "ffllig", "Ffr", "ffr", "filig", "FilledSmallSquare", "FilledVerySmallSquare", "fjlig", "flat", "fllig", "fltns", "fnof", "Fopf", "fopf", "ForAll", "forall", "fork", "forkv", "Fouriertrf", "fpartint", "frac12", "frac13", "frac14", "frac15", "frac16", "frac18", "frac23", "frac25", "frac34", "frac35", "frac38", "frac45", "frac56", "frac58", "frac78", "frasl", "frown", "Fscr", "fscr", "gacute", "Gamma", "gamma", "Gammad", "gammad", "gap", "Gbreve", "gbreve", "Gcedil", "Gcirc", "gcirc", "Gcy", "gcy", "Gdot", "gdot", "gE", "ge", "gEl", "gel", "geq", "geqq", "geqslant", "ges", "gescc", "gesdot", "gesdoto", "gesdotol", "gesl", "gesles", "Gfr", "gfr", "Gg", "gg", "ggg", "gimel", "GJcy", "gjcy", "gl", "gla", "glE", "glj", "gnap", "gnapprox", "gnE", "gne", "gneq", "gneqq", "gnsim", "Gopf", "gopf", "grave", "GreaterEqual", "GreaterEqualLess", "GreaterFullEqual", "GreaterGreater", "GreaterLess", "GreaterSlantEqual", "GreaterTilde", "Gscr", "gscr", "gsim", "gsime", "gsiml", "Gt", "GT", "gtcc", "gtcir", "gtdot", "gtlPar", "gtquest", "gtrapprox", "gtrarr", "gtrdot", "gtreqless", "gtreqqless", "gtrless", "gtrsim", "gvertneqq", "gvnE", "Hacek", "hairsp", "half", "hamilt", "HARDcy", "hardcy", "hArr", "harr", "harrcir", "harrw", "Hat", "hbar", "Hcirc", "hcirc", "hearts", "heartsuit", "hellip", "hercon", "Hfr", "hfr", "HilbertSpace", "hksearow", "hkswarow", "hoarr", "homtht", "hookleftarrow", "hookrightarrow", "Hopf", "hopf", "horbar", "HorizontalLine", "Hscr", "hscr", "hslash", "Hstrok", "hstrok", "HumpDownHump", "HumpEqual", "hybull", "hyphen", "Iacute", "iacute", "ic", "Icirc", "icirc", "Icy", "icy", "Idot", "IEcy", "iecy", "iexcl", "iff", "Ifr", "ifr", "Igrave", "igrave", "ii", "iiiint", "iiint", "iinfin", "iiota", "IJlig", "ijlig", "Im", "Imacr", "imacr", "image", "ImaginaryI", "imagline", "imagpart", "imath", "imof", "imped", "Implies", "in", "incare", "infin", "infintie", "inodot", "Int", "int", "intcal", "integers", "Integral", "intercal", "Intersection", "intlarhk", "intprod", "InvisibleComma", "InvisibleTimes", "IOcy", "iocy", "Iogon", "iogon", "Iopf", "iopf", "Iota", "iota", "iprod", "iquest", "Iscr", "iscr", "isin", "isindot", "isinE", "isins", "isinsv", "isinv", "it", "Itilde", "itilde", "Iukcy", "iukcy", "Iuml", "iuml", "Jcirc", "jcirc", "Jcy", "jcy", "Jfr", "jfr", "jmath", "Jopf", "jopf", "Jscr", "jscr", "Jsercy", "jsercy", "Jukcy", "jukcy", "Kappa", "kappa", "kappav", "Kcedil", "kcedil", "Kcy", "kcy", "Kfr", "kfr", "kgreen", "KHcy", "khcy", "KJcy", "kjcy", "Kopf", "kopf", "Kscr", "kscr", "lAarr", "Lacute", "lacute", "laemptyv", "lagran", "Lambda", "lambda", "Lang", "langd", "langle", "lap", "Laplacetrf", "laquo", "Larr", "lArr", "larr", "larrb", "larrbfs", "larrfs", "larrhk", "larrlp", "larrpl", "larrsim", "larrtl", "lat", "lAtail", "latail", "late", "lates", "lBarr", "lbarr", "lbbrk", "lbrace", "lbrack", "lbrke", "lbrksld", "lbrkslu", "Lcaron", "lcaron", "Lcedil", "lcedil", "lceil", "lcub", "Lcy", "lcy", "ldca", "ldquo", "ldquor", "ldrdhar", "ldrushar", "ldsh", "lE", "le", "LeftAngleBracket", "LeftArrow", "Leftarrow", "leftarrow", "LeftArrowBar", "LeftArrowRightArrow", "leftarrowtail", "LeftCeiling", "LeftDoubleBracket", "LeftDownTeeVector", "LeftDownVector", "LeftDownVectorBar", "LeftFloor", "leftharpoondown", "leftharpoonup", "leftleftarrows", "LeftRightArrow", "Leftrightarrow", "leftrightarrow", "leftrightarrows", "leftrightharpoons", "leftrightsquigarrow", "LeftRightVector", "LeftTee", "LeftTeeArrow", "LeftTeeVector", "leftthreetimes", "LeftTriangle", "LeftTriangleBar", "LeftTriangleEqual", "LeftUpDownVector", "LeftUpTeeVector", "LeftUpVector", "LeftUpVectorBar", "LeftVector", "LeftVectorBar", "lEg", "leg", "leq", "leqq", "leqslant", "les", "lescc", "lesdot", "lesdoto", "lesdotor", "lesg", "lesges", "lessapprox", "lessdot", "lesseqgtr", "lesseqqgtr", "LessEqualGreater", "LessFullEqual", "LessGreater", "lessgtr", "LessLess", "lesssim", "LessSlantEqual", "LessTilde", "lfisht", "lfloor", "Lfr", "lfr", "lg", "lgE", "lHar", "lhard", "lharu", "lharul", "lhblk", "LJcy", "ljcy", "Ll", "ll", "llarr", "llcorner", "Lleftarrow", "llhard", "lltri", "Lmidot", "lmidot", "lmoust", "lmoustache", "lnap", "lnapprox", "lnE", "lne", "lneq", "lneqq", "lnsim", "loang", "loarr", "lobrk", "LongLeftArrow", "Longleftarrow", "longleftarrow", "LongLeftRightArrow", "Longleftrightarrow", "longleftrightarrow", "longmapsto", "LongRightArrow", "Longrightarrow", "longrightarrow", "looparrowleft", "looparrowright", "lopar", "Lopf", "lopf", "loplus", "lotimes", "lowast", "lowbar", "LowerLeftArrow", "LowerRightArrow", "loz", "lozenge", "lozf", "lpar", "lparlt", "lrarr", "lrcorner", "lrhar", "lrhard", "lrm", "lrtri", "lsaquo", "Lscr", "lscr", "Lsh", "lsh", "lsim", "lsime", "lsimg", "lsqb", "lsquo", "lsquor", "Lstrok", "lstrok", "Lt", "LT", "ltcc", "ltcir", "ltdot", "lthree", "ltimes", "ltlarr", "ltquest", "ltri", "ltrie", "ltrif", "ltrPar", "lurdshar", "luruhar", "lvertneqq", "lvnE", "macr", "male", "malt", "maltese", "Map", "mapsto", "mapstodown", "mapstoleft", "mapstoup", "marker", "mcomma", "Mcy", "mcy", "mdash", "mDDot", "measuredangle", "MediumSpace", "Mellintrf", "Mfr", "mfr", "mho", "micro", "mid", "midast", "midcir", "middot", "minus", "minusb", "minusd", "minusdu", "MinusPlus", "mlcp", "mldr", "mnplus", "models", "Mopf", "mopf", "mp", "Mscr", "mscr", "mstpos", "Mu", "mu", "multimap", "mumap", "nabla", "Nacute", "nacute", "nang", "nap", "napE", "napid", "napos", "napprox", "natur", "natural", "naturals", "nbsp", "nbump", "nbumpe", "ncap", "Ncaron", "ncaron", "Ncedil", "ncedil", "ncong", "ncongdot", "ncup", "Ncy", "ncy", "ndash", "ne", "nearhk", "neArr", "nearr", "nearrow", "nedot", "NegativeMediumSpace", "NegativeThickSpace", "NegativeThinSpace", "NegativeVeryThinSpace", "nequiv", "nesear", "nesim", "NestedGreaterGreater", "NestedLessLess", "NewLine", "nexist", "nexists", "Nfr", "nfr", "ngE", "nge", "ngeq", "ngeqq", "ngeqslant", "nges", "nGg", "ngsim", "nGt", "ngt", "ngtr", "nGtv", "nhArr", "nharr", "nhpar", "ni", "nis", "nisd", "niv", "NJcy", "njcy", "nlArr", "nlarr", "nldr", "nlE", "nle", "nLeftarrow", "nleftarrow", "nLeftrightarrow", "nleftrightarrow", "nleq", "nleqq", "nleqslant", "nles", "nless", "nLl", "nlsim", "nLt", "nlt", "nltri", "nltrie", "nLtv", "nmid", "NoBreak", "NonBreakingSpace", "Nopf", "nopf", "Not", "not", "NotCongruent", "NotCupCap", "NotDoubleVerticalBar", "NotElement", "NotEqual", "NotEqualTilde", "NotExists", "NotGreater", "NotGreaterEqual", "NotGreaterFullEqual", "NotGreaterGreater", "NotGreaterLess", "NotGreaterSlantEqual", "NotGreaterTilde", "NotHumpDownHump", "NotHumpEqual", "notin", "notindot", "notinE", "notinva", "notinvb", "notinvc", "NotLeftTriangle", "NotLeftTriangleBar", "NotLeftTriangleEqual", "NotLess", "NotLessEqual", "NotLessGreater", "NotLessLess", "NotLessSlantEqual", "NotLessTilde", "NotNestedGreaterGreater", "NotNestedLessLess", "notni", "notniva", "notnivb", "notnivc", "NotPrecedes", "NotPrecedesEqual", "NotPrecedesSlantEqual", "NotReverseElement", "NotRightTriangle", "NotRightTriangleBar", "NotRightTriangleEqual", "NotSquareSubset", "NotSquareSubsetEqual", "NotSquareSuperset", "NotSquareSupersetEqual", "NotSubset", "NotSubsetEqual", "NotSucceeds", "NotSucceedsEqual", "NotSucceedsSlantEqual", "NotSucceedsTilde", "NotSuperset", "NotSupersetEqual", "NotTilde", "NotTildeEqual", "NotTildeFullEqual", "NotTildeTilde", "NotVerticalBar", "npar", "nparallel", "nparsl", "npart", "npolint", "npr", "nprcue", "npre", "nprec", "npreceq", "nrArr", "nrarr", "nrarrc", "nrarrw", "nRightarrow", "nrightarrow", "nrtri", "nrtrie", "nsc", "nsccue", "nsce", "Nscr", "nscr", "nshortmid", "nshortparallel", "nsim", "nsime", "nsimeq", "nsmid", "nspar", "nsqsube", "nsqsupe", "nsub", "nsubE", "nsube", "nsubset", "nsubseteq", "nsubseteqq", "nsucc", "nsucceq", "nsup", "nsupE", "nsupe", "nsupset", "nsupseteq", "nsupseteqq", "ntgl", "Ntilde", "ntilde", "ntlg", "ntriangleleft", "ntrianglelefteq", "ntriangleright", "ntrianglerighteq", "Nu", "nu", "num", "numero", "numsp", "nvap", "nVDash", "nVdash", "nvDash", "nvdash", "nvge", "nvgt", "nvHarr", "nvinfin", "nvlArr", "nvle", "nvlt", "nvltrie", "nvrArr", "nvrtrie", "nvsim", "nwarhk", "nwArr", "nwarr", "nwarrow", "nwnear", "Oacute", "oacute", "oast", "ocir", "Ocirc", "ocirc", "Ocy", "ocy", "odash", "Odblac", "odblac", "odiv", "odot", "odsold", "OElig", "oelig", "ofcir", "Ofr", "ofr", "ogon", "Ograve", "ograve", "ogt", "ohbar", "ohm", "oint", "olarr", "olcir", "olcross", "oline", "olt", "Omacr", "omacr", "Omega", "omega", "Omicron", "omicron", "omid", "ominus", "Oopf", "oopf", "opar", "OpenCurlyDoubleQuote", "OpenCurlyQuote", "operp", "oplus", "Or", "or", "orarr", "ord", "order", "orderof", "ordf", "ordm", "origof", "oror", "orslope", "orv", "oS", "Oscr", "oscr", "Oslash", "oslash", "osol", "Otilde", "otilde", "Otimes", "otimes", "otimesas", "Ouml", "ouml", "ovbar", "OverBar", "OverBrace", "OverBracket", "OverParenthesis", "par", "para", "parallel", "parsim", "parsl", "part", "PartialD", "Pcy", "pcy", "percnt", "period", "permil", "perp", "pertenk", "Pfr", "pfr", "Phi", "phi", "phiv", "phmmat", "phone", "Pi", "pi", "pitchfork", "piv", "planck", "planckh", "plankv", "plus", "plusacir", "plusb", "pluscir", "plusdo", "plusdu", "pluse", "PlusMinus", "plusmn", "plussim", "plustwo", "pm", "Poincareplane", "pointint", "Popf", "popf", "pound", "Pr", "pr", "prap", "prcue", "prE", "prec", "precapprox", "preccurlyeq", "Precedes", "PrecedesEqual", "PrecedesSlantEqual", "PrecedesTilde", "preceq", "precnapprox", "precneqq", "precnsim", "precsim", "Prime", "prime", "primes", "prnap", "prnE", "prnsim", "prod", "Product", "profalar", "profline", "profsurf", "prop", "Proportion", "Proportional", "propto", "prsim", "prurel", "Pscr", "pscr", "Psi", "psi", "puncsp", "Qfr", "qfr", "qint", "Qopf", "qopf", "qprime", "Qscr", "qscr", "quaternions", "quatint", "quest", "questeq", "QUOT", "rAarr", "race", "Racute", "racute", "radic", "raemptyv", "Rang", "rang", "rangd", "range", "rangle", "raquo", "Rarr", "rArr", "rarr", "rarrap", "rarrb", "rarrbfs", "rarrc", "rarrfs", "rarrhk", "rarrlp", "rarrpl", "rarrsim", "Rarrtl", "rarrtl", "rarrw", "rAtail", "ratail", "ratio", "rationals", "RBarr", "rBarr", "rbarr", "rbbrk", "rbrace", "rbrack", "rbrke", "rbrksld", "rbrkslu", "Rcaron", "rcaron", "Rcedil", "rcedil", "rceil", "rcub", "Rcy", "rcy", "rdca", "rdldhar", "rdquo", "rdquor", "rdsh", "Re", "real", "realine", "realpart", "reals", "rect", "REG", "reg", "ReverseElement", "ReverseEquilibrium", "ReverseUpEquilibrium", "rfisht", "rfloor", "Rfr", "rfr", "rHar", "rhard", "rharu", "rharul", "Rho", "rho", "rhov", "RightAngleBracket", "RightArrow", "Rightarrow", "rightarrow", "RightArrowBar", "RightArrowLeftArrow", "rightarrowtail", "RightCeiling", "RightDoubleBracket", "RightDownTeeVector", "RightDownVector", "RightDownVectorBar", "RightFloor", "rightharpoondown", "rightharpoonup", "rightleftarrows", "rightleftharpoons", "rightrightarrows", "rightsquigarrow", "RightTee", "RightTeeArrow", "RightTeeVector", "rightthreetimes", "RightTriangle", "RightTriangleBar", "RightTriangleEqual", "RightUpDownVector", "RightUpTeeVector", "RightUpVector", "RightUpVectorBar", "RightVector", "RightVectorBar", "ring", "risingdotseq", "rlarr", "rlhar", "rlm", "rmoust", "rmoustache", "rnmid", "roang", "roarr", "robrk", "ropar", "Ropf", "ropf", "roplus", "rotimes", "RoundImplies", "rpar", "rpargt", "rppolint", "rrarr", "Rrightarrow", "rsaquo", "Rscr", "rscr", "Rsh", "rsh", "rsqb", "rsquo", "rsquor", "rthree", "rtimes", "rtri", "rtrie", "rtrif", "rtriltri", "RuleDelayed", "ruluhar", "rx", "Sacute", "sacute", "sbquo", "Sc", "sc", "scap", "Scaron", "scaron", "sccue", "scE", "sce", "Scedil", "scedil", "Scirc", "scirc", "scnap", "scnE", "scnsim", "scpolint", "scsim", "Scy", "scy", "sdot", "sdotb", "sdote", "searhk", "seArr", "searr", "searrow", "sect", "semi", "seswar", "setminus", "setmn", "sext", "Sfr", "sfr", "sfrown", "sharp", "SHCHcy", "shchcy", "SHcy", "shcy", "ShortDownArrow", "ShortLeftArrow", "shortmid", "shortparallel", "ShortRightArrow", "ShortUpArrow", "shy", "Sigma", "sigma", "sigmaf", "sigmav", "sim", "simdot", "sime", "simeq", "simg", "simgE", "siml", "simlE", "simne", "simplus", "simrarr", "slarr", "SmallCircle", "smallsetminus", "smashp", "smeparsl", "smid", "smile", "smt", "smte", "smtes", "SOFTcy", "softcy", "sol", "solb", "solbar", "Sopf", "sopf", "spades", "spadesuit", "spar", "sqcap", "sqcaps", "sqcup", "sqcups", "Sqrt", "sqsub", "sqsube", "sqsubset", "sqsubseteq", "sqsup", "sqsupe", "sqsupset", "sqsupseteq", "squ", "Square", "square", "SquareIntersection", "SquareSubset", "SquareSubsetEqual", "SquareSuperset", "SquareSupersetEqual", "SquareUnion", "squarf", "squf", "srarr", "Sscr", "sscr", "ssetmn", "ssmile", "sstarf", "Star", "star", "starf", "straightepsilon", "straightphi", "strns", "Sub", "subdot", "subE", "sube", "subedot", "submult", "subnE", "subne", "subplus", "subrarr", "Subset", "subset", "subseteq", "subseteqq", "SubsetEqual", "subsetneq", "subsetneqq", "subsim", "subsub", "subsup", "succ", "succapprox", "succcurlyeq", "Succeeds", "SucceedsEqual", "SucceedsSlantEqual", "SucceedsTilde", "succeq", "succnapprox", "succneqq", "succnsim", "succsim", "SuchThat", "Sum", "sum", "sung", "Sup", "sup", "sup1", "sup2", "sup3", "supdot", "supdsub", "supE", "supe", "supedot", "Superset", "SupersetEqual", "suphsol", "suphsub", "suplarr", "supmult", "supnE", "supne", "supplus", "Supset", "supset", "supseteq", "supseteqq", "supsetneq", "supsetneqq", "supsim", "supsub", "supsup", "swarhk", "swArr", "swarr", "swarrow", "swnwar", "szlig", "Tab", "Tau", "tau", "tbrk", "Tcaron", "tcaron", "Tcedil", "tcedil", "Tcy", "tcy", "tdot", "telrec", "Tfr", "tfr", "there4", "Therefore", "therefore", "Theta", "theta", "thetasym", "thetav", "thickapprox", "thicksim", "ThickSpace", "thinsp", "ThinSpace", "thkap", "thksim", "THORN", "thorn", "Tilde", "tilde", "TildeEqual", "TildeFullEqual", "TildeTilde", "times", "timesb", "timesbar", "timesd", "tint", "toea", "top", "topbot", "topcir", "Topf", "topf", "topfork", "tosa", "tprime", "TRADE", "trade", "triangle", "triangledown", "triangleleft", "trianglelefteq", "triangleq", "triangleright", "trianglerighteq", "tridot", "trie", "triminus", "TripleDot", "triplus", "trisb", "tritime", "trpezium", "Tscr", "tscr", "TScy", "tscy", "TSHcy", "tshcy", "Tstrok", "tstrok", "twixt", "twoheadleftarrow", "twoheadrightarrow", "Uacute", "uacute", "Uarr", "uArr", "uarr", "Uarrocir", "Ubrcy", "ubrcy", "Ubreve", "ubreve", "Ucirc", "ucirc", "Ucy", "ucy", "udarr", "Udblac", "udblac", "udhar", "ufisht", "Ufr", "ufr", "Ugrave", "ugrave", "uHar", "uharl", "uharr", "uhblk", "ulcorn", "ulcorner", "ulcrop", "ultri", "Umacr", "umacr", "uml", "UnderBar", "UnderBrace", "UnderBracket", "UnderParenthesis", "Union", "UnionPlus", "Uogon", "uogon", "Uopf", "uopf", "UpArrow", "Uparrow", "uparrow", "UpArrowBar", "UpArrowDownArrow", "UpDownArrow", "Updownarrow", "updownarrow", "UpEquilibrium", "upharpoonleft", "upharpoonright", "uplus", "UpperLeftArrow", "UpperRightArrow", "Upsi", "upsi", "upsih", "Upsilon", "upsilon", "UpTee", "UpTeeArrow", "upuparrows", "urcorn", "urcorner", "urcrop", "Uring", "uring", "urtri", "Uscr", "uscr", "utdot", "Utilde", "utilde", "utri", "utrif", "uuarr", "Uuml", "uuml", "uwangle", "vangrt", "varepsilon", "varkappa", "varnothing", "varphi", "varpi", "varpropto", "vArr", "varr", "varrho", "varsigma", "varsubsetneq", "varsubsetneqq", "varsupsetneq", "varsupsetneqq", "vartheta", "vartriangleleft", "vartriangleright", "Vbar", "vBar", "vBarv", "Vcy", "vcy", "VDash", "Vdash", "vDash", "vdash", "Vdashl", "Vee", "vee", "veebar", "veeeq", "vellip", "Verbar", "verbar", "Vert", "vert", "VerticalBar", "VerticalLine", "VerticalSeparator", "VerticalTilde", "VeryThinSpace", "Vfr", "vfr", "vltri", "vnsub", "vnsup", "Vopf", "vopf", "vprop", "vrtri", "Vscr", "vscr", "vsubnE", "vsubne", "vsupnE", "vsupne", "Vvdash", "vzigzag", "Wcirc", "wcirc", "wedbar", "Wedge", "wedge", "wedgeq", "weierp", "Wfr", "wfr", "Wopf", "wopf", "wp", "wr", "wreath", "Wscr", "wscr", "xcap", "xcirc", "xcup", "xdtri", "Xfr", "xfr", "xhArr", "xharr", "Xi", "xi", "xlArr", "xlarr", "xmap", "xnis", "xodot", "Xopf", "xopf", "xoplus", "xotime", "xrArr", "xrarr", "Xscr", "xscr", "xsqcup", "xuplus", "xutri", "xvee", "xwedge", "Yacute", "yacute", "YAcy", "yacy", "Ycirc", "ycirc", "Ycy", "ycy", "yen", "Yfr", "yfr", "YIcy", "yicy", "Yopf", "yopf", "Yscr", "yscr", "YUcy", "yucy", "Yuml", "yuml", "Zacute", "zacute", "Zcaron", "zcaron", "Zcy", "zcy", "Zdot", "zdot", "zeetrf", "ZeroWidthSpace", "Zeta", "zeta", "Zfr", "zfr", "ZHcy", "zhcy", "zigrarr", "Zopf", "zopf", "Zscr", "zscr", "zwj", "zwnj", "nameStartChar", "nameChar", "RegExp", "tagNamePattern", "copyLocator", "f", "parseElementStartPart", "currentNSMap", "entityReplacer", "addAttribute", "qname", "startIndex", "attributeNames", "addValue", "attrName", "s", "charAt", "setTagName", "closed", "match", "localNSMap", "a", "nsp", "nsPrefix", "_copy", "parseHtmlSpecialContent", "elStartEnd", "elEndStart", "fixSelfClosed", "closeMap", "pos", "lastIndexOf", "parseDCC", "end", "matchs", "exec", "lastMatch", "endDTD", "parseInstruction", "ElementAttributes", "defaultNSMapCopy", "k", "surrogate1", "surrogate2", "fromCharCode", "parseInt", "appendText", "xt", "m", "lineEnd", "linePattern", "lineStart", "parseStack", "tagStart", "config", "pop", "endMatch", "toLowerCase", "locator2", "Math", "max", "getLocalName", "InvalidNumberOfChildrenError", "expectedNumberOfChild", "currentNumberOfChild", "comparison", "super", "JoinWithManySeparators", "separators", "_separators", "arr", "defaultSeparator", "effectiveSeparators", "_join", "joinedStr", "currentStr", "currentIndex", "strArr", "_get", "mathMLElementToLaTeXConverter", "mathMLElement", "MathMLElementToLatexConverterAdapter", "toLatexConverter", "normalizeWhiteSpaces", "str", "_open", "_close", "Wrapper", "wrap", "open", "close", "BracketWrapper", "ParenthesisWrapper", "GenericWrapper", "children", "mathElement", "_mathmlElement", "convert", "converter", "childrenLength", "content", "accent", "_applyCommand", "type", "TagTypes", "Under", "Over", "UnderOverSetter", "_type", "latexAccents", "includes", "_defaultCommand", "MI", "MO", "MN", "MSqrt", "MFenced", "MFrac", "MRoot", "MAction", "MEnclose", "MError", "MPhantom", "MSup", "MSub", "MSubsup", "MMultiscripts", "MText", "MUnderover", "MTable", "MTr", "GenericSpacingWrapper", "GenericUnderOver", "MRow", "MSpace", "D", "Void", "_isToggle", "actiontype", "unnormalizedLatex", "latexJoinedChildren", "_notation", "notation", "mathmlElement", "latexChildren", "_isThereRelativeOfName", "Matrix", "separatorsAttr", "hasSeparatorsAttribute", "separatorsArray", "from", "Vector", "mathmlElements", "elementName", "some", "latexContents", "contentWithoutWrapper", "_genericCommand", "Separators", "command", "_command", "matrix", "areParentheses", "areSquareBrackets", "areBrackets", "areDivides", "areParallels", "areNotEqual", "_compare", "openToCompare", "closeToCompare", "den", "_isBevelled", "_wrapIfMoreThanOneChar", "wrapIfMoreThanOneChar", "bevelled", "utf8Converter", "HashUTF8ToLtXConverter", "normalizedValue", "Character", "trimmedValue", "trim", "convertedChar", "parsedChar", "wrapInMathVariant", "getMathVariant", "mathvariant", "mathVariant", "_value", "_apply", "_findByCharacter", "_findByGlyph", "_findByNumber", "allMathSymbolsByChar", "allMathSymbolsByGlyph", "mathNumberByGlyph", "baseContent", "_prescriptLatex", "_wrapInParenthesisIfThereIsSpace", "_postscriptLatex", "_isPrescripts", "Operator", "operate", "_operate", "allMathOperatorsByChar", "allMathOperatorsByGlyph", "_isLinearSystemPattern", "_convertAsLinearSystem", "isOpeningBrace", "isMTable", "thirdChild", "isEmptyClosing", "linebreak", "baseChild", "subscriptChild", "_handleBaseChild", "_handleSubscriptChild", "baseChildren", "baseStr", "subscript", "subscriptStr", "superscriptChild", "_handleSuperscriptChild", "superscript", "superscriptStr", "exponentChild", "_handleExponentChild", "exponent", "exponentStr", "_addFlagRecursiveIfName", "tableContent", "_hasFlag", "_wrap", "latex", "flag", "forEach", "char", "isAlphanumeric", "acc", "lastChar", "TextCommand", "_mathvariant", "_commands", "_mathMLElement", "VoidMathMLElement", "fromMathMLElementToLatexConverter", "ToLatexConverters", "math", "mi", "mo", "mn", "msqrt", "mfenced", "mfrac", "mroot", "maction", "menclose", "merror", "mphantom", "msup", "msub", "msubsup", "mmultiscripts", "mtext", "munderover", "mtable", "mtr", "mover", "munder", "mrow", "mspace", "mpadded", "void", "_errors", "errorLocator", "errorMessage", "_isMissingAttributeValueError", "_fixMissingAttribute", "isThereAnyErrors", "cleanErrors", "missingAttribute", "_matchMissingValueForAttribute", "_mathGenericMissingValue", "attribute", "_convertElement", "_convertElementAttributes", "_hasElementChild", "textContent", "_isThereAnyNoTextNode", "elementsConvertor", "_xml", "_elementsConvertor", "_errorHandler", "_xmlDOM", "_fixError", "bind", "_removeLineBreaks", "_removeMsWordPrefixes", "_mathMLElements", "fixError", "elements", "makeToMathElementsConverter", "elementsToMathMLAdapter", "ElementsToMathMLAdapter", "ErrorHandler", "XmlToMathMLAdapter", "mathml", "toLatexConverters", "_", "T", "$", "accentChar", "vowelsWithAccents", "convertAccentCharToLtX", "convertSpecialCharToLtX", "vowel", "cmd", "accentToLTXCmd", "specialFontChar", "specialFontChars", "letter", "fontCmd", "__webpack_module_cache__", "__webpack_require__", "moduleId", "cachedModule", "__webpack_modules__", "MathMLToLaTeX", "view", "view", "utils", "list", "event", "i", "n", "utils", "utils", "escape", "html", "utils", "contains", "utils", "def", "utils", "list", "window", "offset", "find", "rel", "op", "el", "text", "document", "utils", "utils", "document", "parser", "text", "utils", "utils", "offset", "utils", "offset", "DocumentFragment", "utils", "utils", "utils", "path", "styles", "hyphenate", "value", "text", "styles", "tag", "document", "utils", "define", "HTMLElement", "parser", "HTMLUnknownElement", "HTMLFormElement", "utils", "define", "SVGElement", "DocumentFragment", "html", "utils", "root", "URL", "html", "tag", "i", "options", "parser", "root", "insertToken", "doc", "inner", "utils", "version", "html", "window", "utils", "utils", "document", "html", "parser", "document", "options", "delimiter", "rules", "isBlock", "isVoid", "node", "text", "next", "Parser", "root", "TurndownService", "process", "postProcess", "escape", "join", "require", "webview", "vscode", "webview", "vscodeAPI", "vscodeAPI", "vscodeAPI", "vscodeAPI", "text", "text", "options", "mathmlBuilder", "styles", "TextNode", "block", "tag", "math", "accentNode", "parser", "scriptLevel", "delimiters", "lexer", "input", "match", "macros", "align", "pad", "textord", "tok", "inner", "style", "args", "mi", "phantom", "offset", "close", "isCharacterBox", "sub", "sup", "defaultVariant", "_Parser", "primes", "accent", "delimiter", "vscodeAPI", "html", "escape", "offset", "link", "lexer", "text", "options", "list", "tag", "parser", "markdown", "tokens", "args", "ret", "walkTokens", "parse", "src", "SourceLocation", "lexer", "Token", "text", "ParseError", "contains", "list", "deflt", "uppercase", "hyphenate", "ESCAPE_LOOKUP", "ESCAPE_REGEX", "escape", "getBaseElem", "isCharacterBox", "assert", "protocolFromUrl", "utils", "def", "Settings", "options", "Style", "script", "block", "sqrtMain", "hLinePad", "sqrtSize1", "sqrtSize2", "sqrtSize3", "sqrtSize4", "phasePath", "sqrtTall", "sqrtPath", "path", "innerPath", "tallDelim", "DocumentFragment", "sizeAtStyle", "ptPerUnit", "validUnit", "calculateSize", "makeEm", "createClass", "initNode", "toNode", "toMarkup", "styles", "Span", "Img", "ATOMS", "NON_ATOMS", "symbols", "defineSymbol", "math", "accent", "bin", "close", "inner", "mathord", "op", "open", "punct", "rel", "spacing", "textord", "ligatures", "mathTextSymbols", "textSymbols", "letters", "wideChar", "wideCharacterFont", "lookupSymbol", "makeSymbol", "mathsym", "boldsymbol", "makeOrd", "fontMap", "sizeElementFromChildren", "makeLineSpan", "makeAnchor", "makeFragment", "wrapFragment", "getVListChildrenAndDepth", "makeVList", "retrieveTextFontName", "staticSvg", "_functions", "_mathmlGroupBuilders", "defineFunction", "htmlBuilder", "mathmlBuilder", "defineFunctionBuilders", "normalizeArgument", "ordargument", "buildExpression", "buildGroup$1", "node", "traverseNonSpaceNodes", "checkPartialGroup", "getOutermostNode", "getTypeOfDomTree", "makeNullDelimiter", "buildGroup", "tag", "newDocumentFragment", "MathNode", "TextNode", "mathMLTree", "makeText", "makeRow", "getVariant", "isNumberPunctuation", "buildExpressionRow", "buildMathML", "optionsFromSettings", "displayWrap", "buildTree", "buildHTMLTree", "stretchyCodePoint", "mathMLnode", "groupLength", "svgSpan", "encloseSpan", "stretchy", "assertNodeType", "assertSymbolNodeType", "checkSymbolNodeType", "mathmlBuilder$9", "accentNode", "parser", "paddedNode", "makeSpan", "mathmlBuilder$8", "binrelClass", "cdArrowFunctionName", "newCell", "isStartOfArrow", "isLabelEnd", "cdArrow", "parseCD", "mathmlBuilder$7", "globalMap", "checkControlSequence", "getRHS", "letCommand", "delimiters", "getMetrics", "styleWrap", "centerSpan", "makeSmallDelim", "mathrmSize", "makeLargeDelim", "makeGlyphSpan", "makeInner", "makeStackedDelim", "sqrtSvg", "makeSqrtImage", "sizeToMaxHeight", "makeSizedDelim", "delimTypeToFont", "traverseSequence", "makeCustomSizedDelim", "makeLeftRightDelim", "delimiterSizes", "checkDelimiter", "assertParsed", "mathmlBuilder$6", "_environments", "defineEnvironment", "_macros", "defineMacro", "getHLines", "validateAmsEnvironmentContext", "getAutoTag", "parseArray", "dCellStyle", "offset", "alignMap", "mathmlBuilder$5", "glue", "alignedHandler", "environments", "mathmlBuilder$4", "fontAliases", "mathmlBuilder$3", "stylArray", "delimFromValue", "mathmlBuilder$2", "sizeData", "sub", "sup", "noSuccessor", "mathmlBuilder$1", "singleCharBigOps", "singleCharIntegrals", "child", "phantom", "styleMap", "styleAttributes", "htmlBuilderDelegate", "cssSpace", "regularSpace", "textFontFamilies", "textFontWeights", "textFontShapes", "makeVerb", "functions", "spaceRegexString", "controlWordRegexString", "controlSymbolRegexString", "controlWordWhitespaceRegexString", "controlSpaceRegexString", "combiningDiacriticalMarkString", "combiningDiacriticalMarksEndRegex", "tokenRegexString", "Lexer", "Namespace", "macros", "digitToNumber", "dotsByToken", "spaceAfterDots", "context", "implicitCommands", "MacroExpander", "unicodeSubRegEx", "uSubsAndSups", "unicodeAccents", "unicodeSymbols", "Parser", "_Parser", "primes", "parseTree", "render", "renderToString", "generateParseTree", "renderError", "renderToDomTree", "renderToHTMLTree", "version", "options", "TurndownService", "vscodeAPI", "html", "vscode", "path", "vscodeAPI"]
}
